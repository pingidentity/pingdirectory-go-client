/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// GetAlertHandler200Response - struct for GetAlertHandler200Response
type GetAlertHandler200Response struct {
	ErrorLogAlertHandlerResponse *ErrorLogAlertHandlerResponse
	ExecAlertHandlerResponse *ExecAlertHandlerResponse
	GroovyScriptedAlertHandlerResponse *GroovyScriptedAlertHandlerResponse
	JmxAlertHandlerResponse *JmxAlertHandlerResponse
	OutputAlertHandlerResponse *OutputAlertHandlerResponse
	SmtpAlertHandlerResponse *SmtpAlertHandlerResponse
	SnmpAlertHandlerResponse *SnmpAlertHandlerResponse
	SnmpSubAgentAlertHandlerResponse *SnmpSubAgentAlertHandlerResponse
	ThirdPartyAlertHandlerResponse *ThirdPartyAlertHandlerResponse
	TwilioAlertHandlerResponse *TwilioAlertHandlerResponse
}

// ErrorLogAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns ErrorLogAlertHandlerResponse wrapped in GetAlertHandler200Response
func ErrorLogAlertHandlerResponseAsGetAlertHandler200Response(v *ErrorLogAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		ErrorLogAlertHandlerResponse: v,
	}
}

// ExecAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns ExecAlertHandlerResponse wrapped in GetAlertHandler200Response
func ExecAlertHandlerResponseAsGetAlertHandler200Response(v *ExecAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		ExecAlertHandlerResponse: v,
	}
}

// GroovyScriptedAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns GroovyScriptedAlertHandlerResponse wrapped in GetAlertHandler200Response
func GroovyScriptedAlertHandlerResponseAsGetAlertHandler200Response(v *GroovyScriptedAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		GroovyScriptedAlertHandlerResponse: v,
	}
}

// JmxAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns JmxAlertHandlerResponse wrapped in GetAlertHandler200Response
func JmxAlertHandlerResponseAsGetAlertHandler200Response(v *JmxAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		JmxAlertHandlerResponse: v,
	}
}

// OutputAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns OutputAlertHandlerResponse wrapped in GetAlertHandler200Response
func OutputAlertHandlerResponseAsGetAlertHandler200Response(v *OutputAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		OutputAlertHandlerResponse: v,
	}
}

// SmtpAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns SmtpAlertHandlerResponse wrapped in GetAlertHandler200Response
func SmtpAlertHandlerResponseAsGetAlertHandler200Response(v *SmtpAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		SmtpAlertHandlerResponse: v,
	}
}

// SnmpAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns SnmpAlertHandlerResponse wrapped in GetAlertHandler200Response
func SnmpAlertHandlerResponseAsGetAlertHandler200Response(v *SnmpAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		SnmpAlertHandlerResponse: v,
	}
}

// SnmpSubAgentAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns SnmpSubAgentAlertHandlerResponse wrapped in GetAlertHandler200Response
func SnmpSubAgentAlertHandlerResponseAsGetAlertHandler200Response(v *SnmpSubAgentAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		SnmpSubAgentAlertHandlerResponse: v,
	}
}

// ThirdPartyAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns ThirdPartyAlertHandlerResponse wrapped in GetAlertHandler200Response
func ThirdPartyAlertHandlerResponseAsGetAlertHandler200Response(v *ThirdPartyAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		ThirdPartyAlertHandlerResponse: v,
	}
}

// TwilioAlertHandlerResponseAsGetAlertHandler200Response is a convenience function that returns TwilioAlertHandlerResponse wrapped in GetAlertHandler200Response
func TwilioAlertHandlerResponseAsGetAlertHandler200Response(v *TwilioAlertHandlerResponse) GetAlertHandler200Response {
	return GetAlertHandler200Response{
		TwilioAlertHandlerResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetAlertHandler200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ErrorLogAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.ErrorLogAlertHandlerResponse)
	if err == nil {
		jsonErrorLogAlertHandlerResponse, _ := json.Marshal(dst.ErrorLogAlertHandlerResponse)
		if string(jsonErrorLogAlertHandlerResponse) == "{}" { // empty struct
			dst.ErrorLogAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.ErrorLogAlertHandlerResponse = nil
	}

	// try to unmarshal data into ExecAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.ExecAlertHandlerResponse)
	if err == nil {
		jsonExecAlertHandlerResponse, _ := json.Marshal(dst.ExecAlertHandlerResponse)
		if string(jsonExecAlertHandlerResponse) == "{}" { // empty struct
			dst.ExecAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.ExecAlertHandlerResponse = nil
	}

	// try to unmarshal data into GroovyScriptedAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedAlertHandlerResponse)
	if err == nil {
		jsonGroovyScriptedAlertHandlerResponse, _ := json.Marshal(dst.GroovyScriptedAlertHandlerResponse)
		if string(jsonGroovyScriptedAlertHandlerResponse) == "{}" { // empty struct
			dst.GroovyScriptedAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedAlertHandlerResponse = nil
	}

	// try to unmarshal data into JmxAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.JmxAlertHandlerResponse)
	if err == nil {
		jsonJmxAlertHandlerResponse, _ := json.Marshal(dst.JmxAlertHandlerResponse)
		if string(jsonJmxAlertHandlerResponse) == "{}" { // empty struct
			dst.JmxAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.JmxAlertHandlerResponse = nil
	}

	// try to unmarshal data into OutputAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.OutputAlertHandlerResponse)
	if err == nil {
		jsonOutputAlertHandlerResponse, _ := json.Marshal(dst.OutputAlertHandlerResponse)
		if string(jsonOutputAlertHandlerResponse) == "{}" { // empty struct
			dst.OutputAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.OutputAlertHandlerResponse = nil
	}

	// try to unmarshal data into SmtpAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.SmtpAlertHandlerResponse)
	if err == nil {
		jsonSmtpAlertHandlerResponse, _ := json.Marshal(dst.SmtpAlertHandlerResponse)
		if string(jsonSmtpAlertHandlerResponse) == "{}" { // empty struct
			dst.SmtpAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.SmtpAlertHandlerResponse = nil
	}

	// try to unmarshal data into SnmpAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.SnmpAlertHandlerResponse)
	if err == nil {
		jsonSnmpAlertHandlerResponse, _ := json.Marshal(dst.SnmpAlertHandlerResponse)
		if string(jsonSnmpAlertHandlerResponse) == "{}" { // empty struct
			dst.SnmpAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.SnmpAlertHandlerResponse = nil
	}

	// try to unmarshal data into SnmpSubAgentAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.SnmpSubAgentAlertHandlerResponse)
	if err == nil {
		jsonSnmpSubAgentAlertHandlerResponse, _ := json.Marshal(dst.SnmpSubAgentAlertHandlerResponse)
		if string(jsonSnmpSubAgentAlertHandlerResponse) == "{}" { // empty struct
			dst.SnmpSubAgentAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.SnmpSubAgentAlertHandlerResponse = nil
	}

	// try to unmarshal data into ThirdPartyAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyAlertHandlerResponse)
	if err == nil {
		jsonThirdPartyAlertHandlerResponse, _ := json.Marshal(dst.ThirdPartyAlertHandlerResponse)
		if string(jsonThirdPartyAlertHandlerResponse) == "{}" { // empty struct
			dst.ThirdPartyAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyAlertHandlerResponse = nil
	}

	// try to unmarshal data into TwilioAlertHandlerResponse
	err = newStrictDecoder(data).Decode(&dst.TwilioAlertHandlerResponse)
	if err == nil {
		jsonTwilioAlertHandlerResponse, _ := json.Marshal(dst.TwilioAlertHandlerResponse)
		if string(jsonTwilioAlertHandlerResponse) == "{}" { // empty struct
			dst.TwilioAlertHandlerResponse = nil
		} else {
			match++
		}
	} else {
		dst.TwilioAlertHandlerResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ErrorLogAlertHandlerResponse = nil
		dst.ExecAlertHandlerResponse = nil
		dst.GroovyScriptedAlertHandlerResponse = nil
		dst.JmxAlertHandlerResponse = nil
		dst.OutputAlertHandlerResponse = nil
		dst.SmtpAlertHandlerResponse = nil
		dst.SnmpAlertHandlerResponse = nil
		dst.SnmpSubAgentAlertHandlerResponse = nil
		dst.ThirdPartyAlertHandlerResponse = nil
		dst.TwilioAlertHandlerResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetAlertHandler200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetAlertHandler200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetAlertHandler200Response) MarshalJSON() ([]byte, error) {
	if src.ErrorLogAlertHandlerResponse != nil {
		return json.Marshal(&src.ErrorLogAlertHandlerResponse)
	}

	if src.ExecAlertHandlerResponse != nil {
		return json.Marshal(&src.ExecAlertHandlerResponse)
	}

	if src.GroovyScriptedAlertHandlerResponse != nil {
		return json.Marshal(&src.GroovyScriptedAlertHandlerResponse)
	}

	if src.JmxAlertHandlerResponse != nil {
		return json.Marshal(&src.JmxAlertHandlerResponse)
	}

	if src.OutputAlertHandlerResponse != nil {
		return json.Marshal(&src.OutputAlertHandlerResponse)
	}

	if src.SmtpAlertHandlerResponse != nil {
		return json.Marshal(&src.SmtpAlertHandlerResponse)
	}

	if src.SnmpAlertHandlerResponse != nil {
		return json.Marshal(&src.SnmpAlertHandlerResponse)
	}

	if src.SnmpSubAgentAlertHandlerResponse != nil {
		return json.Marshal(&src.SnmpSubAgentAlertHandlerResponse)
	}

	if src.ThirdPartyAlertHandlerResponse != nil {
		return json.Marshal(&src.ThirdPartyAlertHandlerResponse)
	}

	if src.TwilioAlertHandlerResponse != nil {
		return json.Marshal(&src.TwilioAlertHandlerResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetAlertHandler200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.ErrorLogAlertHandlerResponse != nil {
		return obj.ErrorLogAlertHandlerResponse
	}

	if obj.ExecAlertHandlerResponse != nil {
		return obj.ExecAlertHandlerResponse
	}

	if obj.GroovyScriptedAlertHandlerResponse != nil {
		return obj.GroovyScriptedAlertHandlerResponse
	}

	if obj.JmxAlertHandlerResponse != nil {
		return obj.JmxAlertHandlerResponse
	}

	if obj.OutputAlertHandlerResponse != nil {
		return obj.OutputAlertHandlerResponse
	}

	if obj.SmtpAlertHandlerResponse != nil {
		return obj.SmtpAlertHandlerResponse
	}

	if obj.SnmpAlertHandlerResponse != nil {
		return obj.SnmpAlertHandlerResponse
	}

	if obj.SnmpSubAgentAlertHandlerResponse != nil {
		return obj.SnmpSubAgentAlertHandlerResponse
	}

	if obj.ThirdPartyAlertHandlerResponse != nil {
		return obj.ThirdPartyAlertHandlerResponse
	}

	if obj.TwilioAlertHandlerResponse != nil {
		return obj.TwilioAlertHandlerResponse
	}

	// all schemas are nil
	return nil
}

type NullableGetAlertHandler200Response struct {
	value *GetAlertHandler200Response
	isSet bool
}

func (v NullableGetAlertHandler200Response) Get() *GetAlertHandler200Response {
	return v.value
}

func (v *NullableGetAlertHandler200Response) Set(val *GetAlertHandler200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAlertHandler200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAlertHandler200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAlertHandler200Response(val *GetAlertHandler200Response) *NullableGetAlertHandler200Response {
	return &NullableGetAlertHandler200Response{value: val, isSet: true}
}

func (v NullableGetAlertHandler200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAlertHandler200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


