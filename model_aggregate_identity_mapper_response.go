/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AggregateIdentityMapperResponse struct for AggregateIdentityMapperResponse
type AggregateIdentityMapperResponse struct {
	// Name of the Identity Mapper
	Id string `json:"id"`
	Schemas []EnumaggregateIdentityMapperSchemaUrn `json:"schemas"`
	// The set of identity mappers that must all match the target entry. Each identity mapper must uniquely match the same target entry. If any of the identity mappers match multiple entries, if any of them match zero entries, or if any of them match different entries, then the mapping will fail.
	AllIncludedIdentityMapper []string `json:"allIncludedIdentityMapper,omitempty"`
	// The set of identity mappers that will be used to identify the target entry. At least one identity mapper must uniquely match an entry. If multiple identity mappers match entries, then they must all uniquely match the same entry. If none of the identity mappers match any entries, if any of them match multiple entries, or if any of them match different entries, then the mapping will fail.
	AnyIncludedIdentityMapper []string `json:"anyIncludedIdentityMapper,omitempty"`
	// A description for this Identity Mapper
	Description *string `json:"description,omitempty"`
	// Indicates whether the Identity Mapper is enabled for use.
	Enabled bool `json:"enabled"`
	Meta *MetaMeta `json:"meta,omitempty"`
}

// NewAggregateIdentityMapperResponse instantiates a new AggregateIdentityMapperResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateIdentityMapperResponse(id string, schemas []EnumaggregateIdentityMapperSchemaUrn, enabled bool) *AggregateIdentityMapperResponse {
	this := AggregateIdentityMapperResponse{}
	this.Id = id
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewAggregateIdentityMapperResponseWithDefaults instantiates a new AggregateIdentityMapperResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateIdentityMapperResponseWithDefaults() *AggregateIdentityMapperResponse {
	this := AggregateIdentityMapperResponse{}
	return &this
}

// GetId returns the Id field value
func (o *AggregateIdentityMapperResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AggregateIdentityMapperResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *AggregateIdentityMapperResponse) GetSchemas() []EnumaggregateIdentityMapperSchemaUrn {
	if o == nil {
		var ret []EnumaggregateIdentityMapperSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetSchemasOk() ([]EnumaggregateIdentityMapperSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AggregateIdentityMapperResponse) SetSchemas(v []EnumaggregateIdentityMapperSchemaUrn) {
	o.Schemas = v
}

// GetAllIncludedIdentityMapper returns the AllIncludedIdentityMapper field value if set, zero value otherwise.
func (o *AggregateIdentityMapperResponse) GetAllIncludedIdentityMapper() []string {
	if o == nil || isNil(o.AllIncludedIdentityMapper) {
		var ret []string
		return ret
	}
	return o.AllIncludedIdentityMapper
}

// GetAllIncludedIdentityMapperOk returns a tuple with the AllIncludedIdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetAllIncludedIdentityMapperOk() ([]string, bool) {
	if o == nil || isNil(o.AllIncludedIdentityMapper) {
    return nil, false
	}
	return o.AllIncludedIdentityMapper, true
}

// HasAllIncludedIdentityMapper returns a boolean if a field has been set.
func (o *AggregateIdentityMapperResponse) HasAllIncludedIdentityMapper() bool {
	if o != nil && !isNil(o.AllIncludedIdentityMapper) {
		return true
	}

	return false
}

// SetAllIncludedIdentityMapper gets a reference to the given []string and assigns it to the AllIncludedIdentityMapper field.
func (o *AggregateIdentityMapperResponse) SetAllIncludedIdentityMapper(v []string) {
	o.AllIncludedIdentityMapper = v
}

// GetAnyIncludedIdentityMapper returns the AnyIncludedIdentityMapper field value if set, zero value otherwise.
func (o *AggregateIdentityMapperResponse) GetAnyIncludedIdentityMapper() []string {
	if o == nil || isNil(o.AnyIncludedIdentityMapper) {
		var ret []string
		return ret
	}
	return o.AnyIncludedIdentityMapper
}

// GetAnyIncludedIdentityMapperOk returns a tuple with the AnyIncludedIdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetAnyIncludedIdentityMapperOk() ([]string, bool) {
	if o == nil || isNil(o.AnyIncludedIdentityMapper) {
    return nil, false
	}
	return o.AnyIncludedIdentityMapper, true
}

// HasAnyIncludedIdentityMapper returns a boolean if a field has been set.
func (o *AggregateIdentityMapperResponse) HasAnyIncludedIdentityMapper() bool {
	if o != nil && !isNil(o.AnyIncludedIdentityMapper) {
		return true
	}

	return false
}

// SetAnyIncludedIdentityMapper gets a reference to the given []string and assigns it to the AnyIncludedIdentityMapper field.
func (o *AggregateIdentityMapperResponse) SetAnyIncludedIdentityMapper(v []string) {
	o.AnyIncludedIdentityMapper = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AggregateIdentityMapperResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AggregateIdentityMapperResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AggregateIdentityMapperResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AggregateIdentityMapperResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AggregateIdentityMapperResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AggregateIdentityMapperResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AggregateIdentityMapperResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *AggregateIdentityMapperResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

func (o AggregateIdentityMapperResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.AllIncludedIdentityMapper) {
		toSerialize["allIncludedIdentityMapper"] = o.AllIncludedIdentityMapper
	}
	if !isNil(o.AnyIncludedIdentityMapper) {
		toSerialize["anyIncludedIdentityMapper"] = o.AnyIncludedIdentityMapper
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableAggregateIdentityMapperResponse struct {
	value *AggregateIdentityMapperResponse
	isSet bool
}

func (v NullableAggregateIdentityMapperResponse) Get() *AggregateIdentityMapperResponse {
	return v.value
}

func (v *NullableAggregateIdentityMapperResponse) Set(val *AggregateIdentityMapperResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateIdentityMapperResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateIdentityMapperResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateIdentityMapperResponse(val *AggregateIdentityMapperResponse) *NullableAggregateIdentityMapperResponse {
	return &NullableAggregateIdentityMapperResponse{value: val, isSet: true}
}

func (v NullableAggregateIdentityMapperResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateIdentityMapperResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


