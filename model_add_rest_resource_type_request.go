/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddRestResourceTypeRequest - struct for AddRestResourceTypeRequest
type AddRestResourceTypeRequest struct {
	AddGroupRestResourceTypeRequest *AddGroupRestResourceTypeRequest
	AddUserRestResourceTypeRequest *AddUserRestResourceTypeRequest
}

// AddGroupRestResourceTypeRequestAsAddRestResourceTypeRequest is a convenience function that returns AddGroupRestResourceTypeRequest wrapped in AddRestResourceTypeRequest
func AddGroupRestResourceTypeRequestAsAddRestResourceTypeRequest(v *AddGroupRestResourceTypeRequest) AddRestResourceTypeRequest {
	return AddRestResourceTypeRequest{
		AddGroupRestResourceTypeRequest: v,
	}
}

// AddUserRestResourceTypeRequestAsAddRestResourceTypeRequest is a convenience function that returns AddUserRestResourceTypeRequest wrapped in AddRestResourceTypeRequest
func AddUserRestResourceTypeRequestAsAddRestResourceTypeRequest(v *AddUserRestResourceTypeRequest) AddRestResourceTypeRequest {
	return AddRestResourceTypeRequest{
		AddUserRestResourceTypeRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddRestResourceTypeRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddGroupRestResourceTypeRequest
	err = newStrictDecoder(data).Decode(&dst.AddGroupRestResourceTypeRequest)
	if err == nil {
		jsonAddGroupRestResourceTypeRequest, _ := json.Marshal(dst.AddGroupRestResourceTypeRequest)
		if string(jsonAddGroupRestResourceTypeRequest) == "{}" { // empty struct
			dst.AddGroupRestResourceTypeRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGroupRestResourceTypeRequest = nil
	}

	// try to unmarshal data into AddUserRestResourceTypeRequest
	err = newStrictDecoder(data).Decode(&dst.AddUserRestResourceTypeRequest)
	if err == nil {
		jsonAddUserRestResourceTypeRequest, _ := json.Marshal(dst.AddUserRestResourceTypeRequest)
		if string(jsonAddUserRestResourceTypeRequest) == "{}" { // empty struct
			dst.AddUserRestResourceTypeRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddUserRestResourceTypeRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddGroupRestResourceTypeRequest = nil
		dst.AddUserRestResourceTypeRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddRestResourceTypeRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddRestResourceTypeRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddRestResourceTypeRequest) MarshalJSON() ([]byte, error) {
	if src.AddGroupRestResourceTypeRequest != nil {
		return json.Marshal(&src.AddGroupRestResourceTypeRequest)
	}

	if src.AddUserRestResourceTypeRequest != nil {
		return json.Marshal(&src.AddUserRestResourceTypeRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddRestResourceTypeRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddGroupRestResourceTypeRequest != nil {
		return obj.AddGroupRestResourceTypeRequest
	}

	if obj.AddUserRestResourceTypeRequest != nil {
		return obj.AddUserRestResourceTypeRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddRestResourceTypeRequest struct {
	value *AddRestResourceTypeRequest
	isSet bool
}

func (v NullableAddRestResourceTypeRequest) Get() *AddRestResourceTypeRequest {
	return v.value
}

func (v *NullableAddRestResourceTypeRequest) Set(val *AddRestResourceTypeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRestResourceTypeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRestResourceTypeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRestResourceTypeRequest(val *AddRestResourceTypeRequest) *NullableAddRestResourceTypeRequest {
	return &NullableAddRestResourceTypeRequest{value: val, isSet: true}
}

func (v NullableAddRestResourceTypeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRestResourceTypeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


