/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SimpleSearchEntryCriteriaShared struct for SimpleSearchEntryCriteriaShared
type SimpleSearchEntryCriteriaShared struct {
	Schemas []EnumsimpleSearchEntryCriteriaSchemaUrn `json:"schemas"`
	// Specifies a request criteria object that must match the associated request for entries included in this Simple Search Entry Criteria. of them.
	RequestCriteria *string `json:"requestCriteria,omitempty"`
	AllIncludedEntryControl []string `json:"allIncludedEntryControl,omitempty"`
	AnyIncludedEntryControl []string `json:"anyIncludedEntryControl,omitempty"`
	NotAllIncludedEntryControl []string `json:"notAllIncludedEntryControl,omitempty"`
	NoneIncludedEntryControl []string `json:"noneIncludedEntryControl,omitempty"`
	IncludedEntryBaseDN []string `json:"includedEntryBaseDN,omitempty"`
	ExcludedEntryBaseDN []string `json:"excludedEntryBaseDN,omitempty"`
	AllIncludedEntryFilter []string `json:"allIncludedEntryFilter,omitempty"`
	AnyIncludedEntryFilter []string `json:"anyIncludedEntryFilter,omitempty"`
	NotAllIncludedEntryFilter []string `json:"notAllIncludedEntryFilter,omitempty"`
	NoneIncludedEntryFilter []string `json:"noneIncludedEntryFilter,omitempty"`
	AllIncludedEntryGroupDN []string `json:"allIncludedEntryGroupDN,omitempty"`
	AnyIncludedEntryGroupDN []string `json:"anyIncludedEntryGroupDN,omitempty"`
	NotAllIncludedEntryGroupDN []string `json:"notAllIncludedEntryGroupDN,omitempty"`
	NoneIncludedEntryGroupDN []string `json:"noneIncludedEntryGroupDN,omitempty"`
	// A description for this Search Entry Criteria
	Description *string `json:"description,omitempty"`
}

// NewSimpleSearchEntryCriteriaShared instantiates a new SimpleSearchEntryCriteriaShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSimpleSearchEntryCriteriaShared(schemas []EnumsimpleSearchEntryCriteriaSchemaUrn) *SimpleSearchEntryCriteriaShared {
	this := SimpleSearchEntryCriteriaShared{}
	this.Schemas = schemas
	return &this
}

// NewSimpleSearchEntryCriteriaSharedWithDefaults instantiates a new SimpleSearchEntryCriteriaShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSimpleSearchEntryCriteriaSharedWithDefaults() *SimpleSearchEntryCriteriaShared {
	this := SimpleSearchEntryCriteriaShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *SimpleSearchEntryCriteriaShared) GetSchemas() []EnumsimpleSearchEntryCriteriaSchemaUrn {
	if o == nil {
		var ret []EnumsimpleSearchEntryCriteriaSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetSchemasOk() ([]EnumsimpleSearchEntryCriteriaSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SimpleSearchEntryCriteriaShared) SetSchemas(v []EnumsimpleSearchEntryCriteriaSchemaUrn) {
	o.Schemas = v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetRequestCriteria() string {
	if o == nil || isNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.RequestCriteria) {
    return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasRequestCriteria() bool {
	if o != nil && !isNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *SimpleSearchEntryCriteriaShared) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetAllIncludedEntryControl returns the AllIncludedEntryControl field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryControl() []string {
	if o == nil || isNil(o.AllIncludedEntryControl) {
		var ret []string
		return ret
	}
	return o.AllIncludedEntryControl
}

// GetAllIncludedEntryControlOk returns a tuple with the AllIncludedEntryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryControlOk() ([]string, bool) {
	if o == nil || isNil(o.AllIncludedEntryControl) {
    return nil, false
	}
	return o.AllIncludedEntryControl, true
}

// HasAllIncludedEntryControl returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAllIncludedEntryControl() bool {
	if o != nil && !isNil(o.AllIncludedEntryControl) {
		return true
	}

	return false
}

// SetAllIncludedEntryControl gets a reference to the given []string and assigns it to the AllIncludedEntryControl field.
func (o *SimpleSearchEntryCriteriaShared) SetAllIncludedEntryControl(v []string) {
	o.AllIncludedEntryControl = v
}

// GetAnyIncludedEntryControl returns the AnyIncludedEntryControl field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryControl() []string {
	if o == nil || isNil(o.AnyIncludedEntryControl) {
		var ret []string
		return ret
	}
	return o.AnyIncludedEntryControl
}

// GetAnyIncludedEntryControlOk returns a tuple with the AnyIncludedEntryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryControlOk() ([]string, bool) {
	if o == nil || isNil(o.AnyIncludedEntryControl) {
    return nil, false
	}
	return o.AnyIncludedEntryControl, true
}

// HasAnyIncludedEntryControl returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAnyIncludedEntryControl() bool {
	if o != nil && !isNil(o.AnyIncludedEntryControl) {
		return true
	}

	return false
}

// SetAnyIncludedEntryControl gets a reference to the given []string and assigns it to the AnyIncludedEntryControl field.
func (o *SimpleSearchEntryCriteriaShared) SetAnyIncludedEntryControl(v []string) {
	o.AnyIncludedEntryControl = v
}

// GetNotAllIncludedEntryControl returns the NotAllIncludedEntryControl field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryControl() []string {
	if o == nil || isNil(o.NotAllIncludedEntryControl) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedEntryControl
}

// GetNotAllIncludedEntryControlOk returns a tuple with the NotAllIncludedEntryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryControlOk() ([]string, bool) {
	if o == nil || isNil(o.NotAllIncludedEntryControl) {
    return nil, false
	}
	return o.NotAllIncludedEntryControl, true
}

// HasNotAllIncludedEntryControl returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNotAllIncludedEntryControl() bool {
	if o != nil && !isNil(o.NotAllIncludedEntryControl) {
		return true
	}

	return false
}

// SetNotAllIncludedEntryControl gets a reference to the given []string and assigns it to the NotAllIncludedEntryControl field.
func (o *SimpleSearchEntryCriteriaShared) SetNotAllIncludedEntryControl(v []string) {
	o.NotAllIncludedEntryControl = v
}

// GetNoneIncludedEntryControl returns the NoneIncludedEntryControl field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryControl() []string {
	if o == nil || isNil(o.NoneIncludedEntryControl) {
		var ret []string
		return ret
	}
	return o.NoneIncludedEntryControl
}

// GetNoneIncludedEntryControlOk returns a tuple with the NoneIncludedEntryControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryControlOk() ([]string, bool) {
	if o == nil || isNil(o.NoneIncludedEntryControl) {
    return nil, false
	}
	return o.NoneIncludedEntryControl, true
}

// HasNoneIncludedEntryControl returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNoneIncludedEntryControl() bool {
	if o != nil && !isNil(o.NoneIncludedEntryControl) {
		return true
	}

	return false
}

// SetNoneIncludedEntryControl gets a reference to the given []string and assigns it to the NoneIncludedEntryControl field.
func (o *SimpleSearchEntryCriteriaShared) SetNoneIncludedEntryControl(v []string) {
	o.NoneIncludedEntryControl = v
}

// GetIncludedEntryBaseDN returns the IncludedEntryBaseDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetIncludedEntryBaseDN() []string {
	if o == nil || isNil(o.IncludedEntryBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludedEntryBaseDN
}

// GetIncludedEntryBaseDNOk returns a tuple with the IncludedEntryBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetIncludedEntryBaseDNOk() ([]string, bool) {
	if o == nil || isNil(o.IncludedEntryBaseDN) {
    return nil, false
	}
	return o.IncludedEntryBaseDN, true
}

// HasIncludedEntryBaseDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasIncludedEntryBaseDN() bool {
	if o != nil && !isNil(o.IncludedEntryBaseDN) {
		return true
	}

	return false
}

// SetIncludedEntryBaseDN gets a reference to the given []string and assigns it to the IncludedEntryBaseDN field.
func (o *SimpleSearchEntryCriteriaShared) SetIncludedEntryBaseDN(v []string) {
	o.IncludedEntryBaseDN = v
}

// GetExcludedEntryBaseDN returns the ExcludedEntryBaseDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetExcludedEntryBaseDN() []string {
	if o == nil || isNil(o.ExcludedEntryBaseDN) {
		var ret []string
		return ret
	}
	return o.ExcludedEntryBaseDN
}

// GetExcludedEntryBaseDNOk returns a tuple with the ExcludedEntryBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetExcludedEntryBaseDNOk() ([]string, bool) {
	if o == nil || isNil(o.ExcludedEntryBaseDN) {
    return nil, false
	}
	return o.ExcludedEntryBaseDN, true
}

// HasExcludedEntryBaseDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasExcludedEntryBaseDN() bool {
	if o != nil && !isNil(o.ExcludedEntryBaseDN) {
		return true
	}

	return false
}

// SetExcludedEntryBaseDN gets a reference to the given []string and assigns it to the ExcludedEntryBaseDN field.
func (o *SimpleSearchEntryCriteriaShared) SetExcludedEntryBaseDN(v []string) {
	o.ExcludedEntryBaseDN = v
}

// GetAllIncludedEntryFilter returns the AllIncludedEntryFilter field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryFilter() []string {
	if o == nil || isNil(o.AllIncludedEntryFilter) {
		var ret []string
		return ret
	}
	return o.AllIncludedEntryFilter
}

// GetAllIncludedEntryFilterOk returns a tuple with the AllIncludedEntryFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryFilterOk() ([]string, bool) {
	if o == nil || isNil(o.AllIncludedEntryFilter) {
    return nil, false
	}
	return o.AllIncludedEntryFilter, true
}

// HasAllIncludedEntryFilter returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAllIncludedEntryFilter() bool {
	if o != nil && !isNil(o.AllIncludedEntryFilter) {
		return true
	}

	return false
}

// SetAllIncludedEntryFilter gets a reference to the given []string and assigns it to the AllIncludedEntryFilter field.
func (o *SimpleSearchEntryCriteriaShared) SetAllIncludedEntryFilter(v []string) {
	o.AllIncludedEntryFilter = v
}

// GetAnyIncludedEntryFilter returns the AnyIncludedEntryFilter field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryFilter() []string {
	if o == nil || isNil(o.AnyIncludedEntryFilter) {
		var ret []string
		return ret
	}
	return o.AnyIncludedEntryFilter
}

// GetAnyIncludedEntryFilterOk returns a tuple with the AnyIncludedEntryFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryFilterOk() ([]string, bool) {
	if o == nil || isNil(o.AnyIncludedEntryFilter) {
    return nil, false
	}
	return o.AnyIncludedEntryFilter, true
}

// HasAnyIncludedEntryFilter returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAnyIncludedEntryFilter() bool {
	if o != nil && !isNil(o.AnyIncludedEntryFilter) {
		return true
	}

	return false
}

// SetAnyIncludedEntryFilter gets a reference to the given []string and assigns it to the AnyIncludedEntryFilter field.
func (o *SimpleSearchEntryCriteriaShared) SetAnyIncludedEntryFilter(v []string) {
	o.AnyIncludedEntryFilter = v
}

// GetNotAllIncludedEntryFilter returns the NotAllIncludedEntryFilter field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryFilter() []string {
	if o == nil || isNil(o.NotAllIncludedEntryFilter) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedEntryFilter
}

// GetNotAllIncludedEntryFilterOk returns a tuple with the NotAllIncludedEntryFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryFilterOk() ([]string, bool) {
	if o == nil || isNil(o.NotAllIncludedEntryFilter) {
    return nil, false
	}
	return o.NotAllIncludedEntryFilter, true
}

// HasNotAllIncludedEntryFilter returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNotAllIncludedEntryFilter() bool {
	if o != nil && !isNil(o.NotAllIncludedEntryFilter) {
		return true
	}

	return false
}

// SetNotAllIncludedEntryFilter gets a reference to the given []string and assigns it to the NotAllIncludedEntryFilter field.
func (o *SimpleSearchEntryCriteriaShared) SetNotAllIncludedEntryFilter(v []string) {
	o.NotAllIncludedEntryFilter = v
}

// GetNoneIncludedEntryFilter returns the NoneIncludedEntryFilter field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryFilter() []string {
	if o == nil || isNil(o.NoneIncludedEntryFilter) {
		var ret []string
		return ret
	}
	return o.NoneIncludedEntryFilter
}

// GetNoneIncludedEntryFilterOk returns a tuple with the NoneIncludedEntryFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryFilterOk() ([]string, bool) {
	if o == nil || isNil(o.NoneIncludedEntryFilter) {
    return nil, false
	}
	return o.NoneIncludedEntryFilter, true
}

// HasNoneIncludedEntryFilter returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNoneIncludedEntryFilter() bool {
	if o != nil && !isNil(o.NoneIncludedEntryFilter) {
		return true
	}

	return false
}

// SetNoneIncludedEntryFilter gets a reference to the given []string and assigns it to the NoneIncludedEntryFilter field.
func (o *SimpleSearchEntryCriteriaShared) SetNoneIncludedEntryFilter(v []string) {
	o.NoneIncludedEntryFilter = v
}

// GetAllIncludedEntryGroupDN returns the AllIncludedEntryGroupDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryGroupDN() []string {
	if o == nil || isNil(o.AllIncludedEntryGroupDN) {
		var ret []string
		return ret
	}
	return o.AllIncludedEntryGroupDN
}

// GetAllIncludedEntryGroupDNOk returns a tuple with the AllIncludedEntryGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAllIncludedEntryGroupDNOk() ([]string, bool) {
	if o == nil || isNil(o.AllIncludedEntryGroupDN) {
    return nil, false
	}
	return o.AllIncludedEntryGroupDN, true
}

// HasAllIncludedEntryGroupDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAllIncludedEntryGroupDN() bool {
	if o != nil && !isNil(o.AllIncludedEntryGroupDN) {
		return true
	}

	return false
}

// SetAllIncludedEntryGroupDN gets a reference to the given []string and assigns it to the AllIncludedEntryGroupDN field.
func (o *SimpleSearchEntryCriteriaShared) SetAllIncludedEntryGroupDN(v []string) {
	o.AllIncludedEntryGroupDN = v
}

// GetAnyIncludedEntryGroupDN returns the AnyIncludedEntryGroupDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryGroupDN() []string {
	if o == nil || isNil(o.AnyIncludedEntryGroupDN) {
		var ret []string
		return ret
	}
	return o.AnyIncludedEntryGroupDN
}

// GetAnyIncludedEntryGroupDNOk returns a tuple with the AnyIncludedEntryGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetAnyIncludedEntryGroupDNOk() ([]string, bool) {
	if o == nil || isNil(o.AnyIncludedEntryGroupDN) {
    return nil, false
	}
	return o.AnyIncludedEntryGroupDN, true
}

// HasAnyIncludedEntryGroupDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasAnyIncludedEntryGroupDN() bool {
	if o != nil && !isNil(o.AnyIncludedEntryGroupDN) {
		return true
	}

	return false
}

// SetAnyIncludedEntryGroupDN gets a reference to the given []string and assigns it to the AnyIncludedEntryGroupDN field.
func (o *SimpleSearchEntryCriteriaShared) SetAnyIncludedEntryGroupDN(v []string) {
	o.AnyIncludedEntryGroupDN = v
}

// GetNotAllIncludedEntryGroupDN returns the NotAllIncludedEntryGroupDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryGroupDN() []string {
	if o == nil || isNil(o.NotAllIncludedEntryGroupDN) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedEntryGroupDN
}

// GetNotAllIncludedEntryGroupDNOk returns a tuple with the NotAllIncludedEntryGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNotAllIncludedEntryGroupDNOk() ([]string, bool) {
	if o == nil || isNil(o.NotAllIncludedEntryGroupDN) {
    return nil, false
	}
	return o.NotAllIncludedEntryGroupDN, true
}

// HasNotAllIncludedEntryGroupDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNotAllIncludedEntryGroupDN() bool {
	if o != nil && !isNil(o.NotAllIncludedEntryGroupDN) {
		return true
	}

	return false
}

// SetNotAllIncludedEntryGroupDN gets a reference to the given []string and assigns it to the NotAllIncludedEntryGroupDN field.
func (o *SimpleSearchEntryCriteriaShared) SetNotAllIncludedEntryGroupDN(v []string) {
	o.NotAllIncludedEntryGroupDN = v
}

// GetNoneIncludedEntryGroupDN returns the NoneIncludedEntryGroupDN field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryGroupDN() []string {
	if o == nil || isNil(o.NoneIncludedEntryGroupDN) {
		var ret []string
		return ret
	}
	return o.NoneIncludedEntryGroupDN
}

// GetNoneIncludedEntryGroupDNOk returns a tuple with the NoneIncludedEntryGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetNoneIncludedEntryGroupDNOk() ([]string, bool) {
	if o == nil || isNil(o.NoneIncludedEntryGroupDN) {
    return nil, false
	}
	return o.NoneIncludedEntryGroupDN, true
}

// HasNoneIncludedEntryGroupDN returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasNoneIncludedEntryGroupDN() bool {
	if o != nil && !isNil(o.NoneIncludedEntryGroupDN) {
		return true
	}

	return false
}

// SetNoneIncludedEntryGroupDN gets a reference to the given []string and assigns it to the NoneIncludedEntryGroupDN field.
func (o *SimpleSearchEntryCriteriaShared) SetNoneIncludedEntryGroupDN(v []string) {
	o.NoneIncludedEntryGroupDN = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SimpleSearchEntryCriteriaShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SimpleSearchEntryCriteriaShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SimpleSearchEntryCriteriaShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SimpleSearchEntryCriteriaShared) SetDescription(v string) {
	o.Description = &v
}

func (o SimpleSearchEntryCriteriaShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !isNil(o.AllIncludedEntryControl) {
		toSerialize["allIncludedEntryControl"] = o.AllIncludedEntryControl
	}
	if !isNil(o.AnyIncludedEntryControl) {
		toSerialize["anyIncludedEntryControl"] = o.AnyIncludedEntryControl
	}
	if !isNil(o.NotAllIncludedEntryControl) {
		toSerialize["notAllIncludedEntryControl"] = o.NotAllIncludedEntryControl
	}
	if !isNil(o.NoneIncludedEntryControl) {
		toSerialize["noneIncludedEntryControl"] = o.NoneIncludedEntryControl
	}
	if !isNil(o.IncludedEntryBaseDN) {
		toSerialize["includedEntryBaseDN"] = o.IncludedEntryBaseDN
	}
	if !isNil(o.ExcludedEntryBaseDN) {
		toSerialize["excludedEntryBaseDN"] = o.ExcludedEntryBaseDN
	}
	if !isNil(o.AllIncludedEntryFilter) {
		toSerialize["allIncludedEntryFilter"] = o.AllIncludedEntryFilter
	}
	if !isNil(o.AnyIncludedEntryFilter) {
		toSerialize["anyIncludedEntryFilter"] = o.AnyIncludedEntryFilter
	}
	if !isNil(o.NotAllIncludedEntryFilter) {
		toSerialize["notAllIncludedEntryFilter"] = o.NotAllIncludedEntryFilter
	}
	if !isNil(o.NoneIncludedEntryFilter) {
		toSerialize["noneIncludedEntryFilter"] = o.NoneIncludedEntryFilter
	}
	if !isNil(o.AllIncludedEntryGroupDN) {
		toSerialize["allIncludedEntryGroupDN"] = o.AllIncludedEntryGroupDN
	}
	if !isNil(o.AnyIncludedEntryGroupDN) {
		toSerialize["anyIncludedEntryGroupDN"] = o.AnyIncludedEntryGroupDN
	}
	if !isNil(o.NotAllIncludedEntryGroupDN) {
		toSerialize["notAllIncludedEntryGroupDN"] = o.NotAllIncludedEntryGroupDN
	}
	if !isNil(o.NoneIncludedEntryGroupDN) {
		toSerialize["noneIncludedEntryGroupDN"] = o.NoneIncludedEntryGroupDN
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableSimpleSearchEntryCriteriaShared struct {
	value *SimpleSearchEntryCriteriaShared
	isSet bool
}

func (v NullableSimpleSearchEntryCriteriaShared) Get() *SimpleSearchEntryCriteriaShared {
	return v.value
}

func (v *NullableSimpleSearchEntryCriteriaShared) Set(val *SimpleSearchEntryCriteriaShared) {
	v.value = val
	v.isSet = true
}

func (v NullableSimpleSearchEntryCriteriaShared) IsSet() bool {
	return v.isSet
}

func (v *NullableSimpleSearchEntryCriteriaShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSimpleSearchEntryCriteriaShared(val *SimpleSearchEntryCriteriaShared) *NullableSimpleSearchEntryCriteriaShared {
	return &NullableSimpleSearchEntryCriteriaShared{value: val, isSet: true}
}

func (v NullableSimpleSearchEntryCriteriaShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSimpleSearchEntryCriteriaShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


