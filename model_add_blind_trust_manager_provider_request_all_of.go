/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddBlindTrustManagerProviderRequestAllOf struct for AddBlindTrustManagerProviderRequestAllOf
type AddBlindTrustManagerProviderRequestAllOf struct {
	// Name of the new Trust Manager Provider
	ProviderName string `json:"providerName"`
}

// NewAddBlindTrustManagerProviderRequestAllOf instantiates a new AddBlindTrustManagerProviderRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddBlindTrustManagerProviderRequestAllOf(providerName string) *AddBlindTrustManagerProviderRequestAllOf {
	this := AddBlindTrustManagerProviderRequestAllOf{}
	this.ProviderName = providerName
	return &this
}

// NewAddBlindTrustManagerProviderRequestAllOfWithDefaults instantiates a new AddBlindTrustManagerProviderRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddBlindTrustManagerProviderRequestAllOfWithDefaults() *AddBlindTrustManagerProviderRequestAllOf {
	this := AddBlindTrustManagerProviderRequestAllOf{}
	return &this
}

// GetProviderName returns the ProviderName field value
func (o *AddBlindTrustManagerProviderRequestAllOf) GetProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value
// and a boolean to check if the value has been set.
func (o *AddBlindTrustManagerProviderRequestAllOf) GetProviderNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ProviderName, true
}

// SetProviderName sets field value
func (o *AddBlindTrustManagerProviderRequestAllOf) SetProviderName(v string) {
	o.ProviderName = v
}

func (o AddBlindTrustManagerProviderRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["providerName"] = o.ProviderName
	}
	return json.Marshal(toSerialize)
}

type NullableAddBlindTrustManagerProviderRequestAllOf struct {
	value *AddBlindTrustManagerProviderRequestAllOf
	isSet bool
}

func (v NullableAddBlindTrustManagerProviderRequestAllOf) Get() *AddBlindTrustManagerProviderRequestAllOf {
	return v.value
}

func (v *NullableAddBlindTrustManagerProviderRequestAllOf) Set(val *AddBlindTrustManagerProviderRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddBlindTrustManagerProviderRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddBlindTrustManagerProviderRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddBlindTrustManagerProviderRequestAllOf(val *AddBlindTrustManagerProviderRequestAllOf) *NullableAddBlindTrustManagerProviderRequestAllOf {
	return &NullableAddBlindTrustManagerProviderRequestAllOf{value: val, isSet: true}
}

func (v NullableAddBlindTrustManagerProviderRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddBlindTrustManagerProviderRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


