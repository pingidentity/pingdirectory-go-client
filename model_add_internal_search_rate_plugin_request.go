/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddInternalSearchRatePluginRequest struct for AddInternalSearchRatePluginRequest
type AddInternalSearchRatePluginRequest struct {
	// Name of the new Plugin
	PluginName string                                  `json:"pluginName"`
	Schemas    []EnuminternalSearchRatePluginSchemaUrn `json:"schemas"`
	PluginType []EnumpluginPluginTypeProp              `json:"pluginType"`
	// Specifies the number of concurrent threads that should be used to process the search operations.
	NumThreads int32 `json:"numThreads"`
	// Specifies the base DN to use for the searches to perform.
	BaseDN string `json:"baseDN"`
	// Specifies the lower bound for the numeric value which will be inserted into the search filter.
	LowerBound *int32 `json:"lowerBound,omitempty"`
	// Specifies the upper bound for the numeric value which will be inserted into the search filter.
	UpperBound *int32 `json:"upperBound,omitempty"`
	// Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.
	FilterPrefix string `json:"filterPrefix"`
	// Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.
	FilterSuffix *string `json:"filterSuffix,omitempty"`
	// A description for this Plugin
	Description *string `json:"description,omitempty"`
	// Indicates whether the plug-in is enabled for use.
	Enabled bool `json:"enabled"`
	// Indicates whether the plug-in should be invoked for internal operations.
	InvokeForInternalOperations *bool `json:"invokeForInternalOperations,omitempty"`
}

// NewAddInternalSearchRatePluginRequest instantiates a new AddInternalSearchRatePluginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddInternalSearchRatePluginRequest(pluginName string, schemas []EnuminternalSearchRatePluginSchemaUrn, pluginType []EnumpluginPluginTypeProp, numThreads int32, baseDN string, filterPrefix string, enabled bool) *AddInternalSearchRatePluginRequest {
	this := AddInternalSearchRatePluginRequest{}
	this.PluginName = pluginName
	this.Schemas = schemas
	this.PluginType = pluginType
	this.NumThreads = numThreads
	this.BaseDN = baseDN
	this.FilterPrefix = filterPrefix
	this.Enabled = enabled
	return &this
}

// NewAddInternalSearchRatePluginRequestWithDefaults instantiates a new AddInternalSearchRatePluginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddInternalSearchRatePluginRequestWithDefaults() *AddInternalSearchRatePluginRequest {
	this := AddInternalSearchRatePluginRequest{}
	return &this
}

// GetPluginName returns the PluginName field value
func (o *AddInternalSearchRatePluginRequest) GetPluginName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PluginName
}

// GetPluginNameOk returns a tuple with the PluginName field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetPluginNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluginName, true
}

// SetPluginName sets field value
func (o *AddInternalSearchRatePluginRequest) SetPluginName(v string) {
	o.PluginName = v
}

// GetSchemas returns the Schemas field value
func (o *AddInternalSearchRatePluginRequest) GetSchemas() []EnuminternalSearchRatePluginSchemaUrn {
	if o == nil {
		var ret []EnuminternalSearchRatePluginSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetSchemasOk() ([]EnuminternalSearchRatePluginSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddInternalSearchRatePluginRequest) SetSchemas(v []EnuminternalSearchRatePluginSchemaUrn) {
	o.Schemas = v
}

// GetPluginType returns the PluginType field value
func (o *AddInternalSearchRatePluginRequest) GetPluginType() []EnumpluginPluginTypeProp {
	if o == nil {
		var ret []EnumpluginPluginTypeProp
		return ret
	}

	return o.PluginType
}

// GetPluginTypeOk returns a tuple with the PluginType field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetPluginTypeOk() ([]EnumpluginPluginTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return o.PluginType, true
}

// SetPluginType sets field value
func (o *AddInternalSearchRatePluginRequest) SetPluginType(v []EnumpluginPluginTypeProp) {
	o.PluginType = v
}

// GetNumThreads returns the NumThreads field value
func (o *AddInternalSearchRatePluginRequest) GetNumThreads() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumThreads
}

// GetNumThreadsOk returns a tuple with the NumThreads field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetNumThreadsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumThreads, true
}

// SetNumThreads sets field value
func (o *AddInternalSearchRatePluginRequest) SetNumThreads(v int32) {
	o.NumThreads = v
}

// GetBaseDN returns the BaseDN field value
func (o *AddInternalSearchRatePluginRequest) GetBaseDN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseDN
}

// GetBaseDNOk returns a tuple with the BaseDN field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetBaseDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseDN, true
}

// SetBaseDN sets field value
func (o *AddInternalSearchRatePluginRequest) SetBaseDN(v string) {
	o.BaseDN = v
}

// GetLowerBound returns the LowerBound field value if set, zero value otherwise.
func (o *AddInternalSearchRatePluginRequest) GetLowerBound() int32 {
	if o == nil || isNil(o.LowerBound) {
		var ret int32
		return ret
	}
	return *o.LowerBound
}

// GetLowerBoundOk returns a tuple with the LowerBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetLowerBoundOk() (*int32, bool) {
	if o == nil || isNil(o.LowerBound) {
		return nil, false
	}
	return o.LowerBound, true
}

// HasLowerBound returns a boolean if a field has been set.
func (o *AddInternalSearchRatePluginRequest) HasLowerBound() bool {
	if o != nil && !isNil(o.LowerBound) {
		return true
	}

	return false
}

// SetLowerBound gets a reference to the given int32 and assigns it to the LowerBound field.
func (o *AddInternalSearchRatePluginRequest) SetLowerBound(v int32) {
	o.LowerBound = &v
}

// GetUpperBound returns the UpperBound field value if set, zero value otherwise.
func (o *AddInternalSearchRatePluginRequest) GetUpperBound() int32 {
	if o == nil || isNil(o.UpperBound) {
		var ret int32
		return ret
	}
	return *o.UpperBound
}

// GetUpperBoundOk returns a tuple with the UpperBound field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetUpperBoundOk() (*int32, bool) {
	if o == nil || isNil(o.UpperBound) {
		return nil, false
	}
	return o.UpperBound, true
}

// HasUpperBound returns a boolean if a field has been set.
func (o *AddInternalSearchRatePluginRequest) HasUpperBound() bool {
	if o != nil && !isNil(o.UpperBound) {
		return true
	}

	return false
}

// SetUpperBound gets a reference to the given int32 and assigns it to the UpperBound field.
func (o *AddInternalSearchRatePluginRequest) SetUpperBound(v int32) {
	o.UpperBound = &v
}

// GetFilterPrefix returns the FilterPrefix field value
func (o *AddInternalSearchRatePluginRequest) GetFilterPrefix() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilterPrefix
}

// GetFilterPrefixOk returns a tuple with the FilterPrefix field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetFilterPrefixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilterPrefix, true
}

// SetFilterPrefix sets field value
func (o *AddInternalSearchRatePluginRequest) SetFilterPrefix(v string) {
	o.FilterPrefix = v
}

// GetFilterSuffix returns the FilterSuffix field value if set, zero value otherwise.
func (o *AddInternalSearchRatePluginRequest) GetFilterSuffix() string {
	if o == nil || isNil(o.FilterSuffix) {
		var ret string
		return ret
	}
	return *o.FilterSuffix
}

// GetFilterSuffixOk returns a tuple with the FilterSuffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetFilterSuffixOk() (*string, bool) {
	if o == nil || isNil(o.FilterSuffix) {
		return nil, false
	}
	return o.FilterSuffix, true
}

// HasFilterSuffix returns a boolean if a field has been set.
func (o *AddInternalSearchRatePluginRequest) HasFilterSuffix() bool {
	if o != nil && !isNil(o.FilterSuffix) {
		return true
	}

	return false
}

// SetFilterSuffix gets a reference to the given string and assigns it to the FilterSuffix field.
func (o *AddInternalSearchRatePluginRequest) SetFilterSuffix(v string) {
	o.FilterSuffix = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddInternalSearchRatePluginRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddInternalSearchRatePluginRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddInternalSearchRatePluginRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddInternalSearchRatePluginRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddInternalSearchRatePluginRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInvokeForInternalOperations returns the InvokeForInternalOperations field value if set, zero value otherwise.
func (o *AddInternalSearchRatePluginRequest) GetInvokeForInternalOperations() bool {
	if o == nil || isNil(o.InvokeForInternalOperations) {
		var ret bool
		return ret
	}
	return *o.InvokeForInternalOperations
}

// GetInvokeForInternalOperationsOk returns a tuple with the InvokeForInternalOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddInternalSearchRatePluginRequest) GetInvokeForInternalOperationsOk() (*bool, bool) {
	if o == nil || isNil(o.InvokeForInternalOperations) {
		return nil, false
	}
	return o.InvokeForInternalOperations, true
}

// HasInvokeForInternalOperations returns a boolean if a field has been set.
func (o *AddInternalSearchRatePluginRequest) HasInvokeForInternalOperations() bool {
	if o != nil && !isNil(o.InvokeForInternalOperations) {
		return true
	}

	return false
}

// SetInvokeForInternalOperations gets a reference to the given bool and assigns it to the InvokeForInternalOperations field.
func (o *AddInternalSearchRatePluginRequest) SetInvokeForInternalOperations(v bool) {
	o.InvokeForInternalOperations = &v
}

func (o AddInternalSearchRatePluginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pluginName"] = o.PluginName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["pluginType"] = o.PluginType
	}
	if true {
		toSerialize["numThreads"] = o.NumThreads
	}
	if true {
		toSerialize["baseDN"] = o.BaseDN
	}
	if !isNil(o.LowerBound) {
		toSerialize["lowerBound"] = o.LowerBound
	}
	if !isNil(o.UpperBound) {
		toSerialize["upperBound"] = o.UpperBound
	}
	if true {
		toSerialize["filterPrefix"] = o.FilterPrefix
	}
	if !isNil(o.FilterSuffix) {
		toSerialize["filterSuffix"] = o.FilterSuffix
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.InvokeForInternalOperations) {
		toSerialize["invokeForInternalOperations"] = o.InvokeForInternalOperations
	}
	return json.Marshal(toSerialize)
}

type NullableAddInternalSearchRatePluginRequest struct {
	value *AddInternalSearchRatePluginRequest
	isSet bool
}

func (v NullableAddInternalSearchRatePluginRequest) Get() *AddInternalSearchRatePluginRequest {
	return v.value
}

func (v *NullableAddInternalSearchRatePluginRequest) Set(val *AddInternalSearchRatePluginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddInternalSearchRatePluginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddInternalSearchRatePluginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddInternalSearchRatePluginRequest(val *AddInternalSearchRatePluginRequest) *NullableAddInternalSearchRatePluginRequest {
	return &NullableAddInternalSearchRatePluginRequest{value: val, isSet: true}
}

func (v NullableAddInternalSearchRatePluginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddInternalSearchRatePluginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
