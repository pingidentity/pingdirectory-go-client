/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddExtendedOperationHandlerRequest - struct for AddExtendedOperationHandlerRequest
type AddExtendedOperationHandlerRequest struct {
	AddCollectSupportDataExtendedOperationHandlerRequest *AddCollectSupportDataExtendedOperationHandlerRequest
	AddDeliverOtpExtendedOperationHandlerRequest *AddDeliverOtpExtendedOperationHandlerRequest
	AddDeliverPasswordResetTokenExtendedOperationHandlerRequest *AddDeliverPasswordResetTokenExtendedOperationHandlerRequest
	AddExportReversiblePasswordsExtendedOperationHandlerRequest *AddExportReversiblePasswordsExtendedOperationHandlerRequest
	AddReplaceCertificateExtendedOperationHandlerRequest *AddReplaceCertificateExtendedOperationHandlerRequest
	AddSingleUseTokensExtendedOperationHandlerRequest *AddSingleUseTokensExtendedOperationHandlerRequest
	AddThirdPartyExtendedOperationHandlerRequest *AddThirdPartyExtendedOperationHandlerRequest
	AddValidateTotpPasswordExtendedOperationHandlerRequest *AddValidateTotpPasswordExtendedOperationHandlerRequest
}

// AddCollectSupportDataExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddCollectSupportDataExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddCollectSupportDataExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddCollectSupportDataExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddCollectSupportDataExtendedOperationHandlerRequest: v,
	}
}

// AddDeliverOtpExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddDeliverOtpExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddDeliverOtpExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddDeliverOtpExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddDeliverOtpExtendedOperationHandlerRequest: v,
	}
}

// AddDeliverPasswordResetTokenExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddDeliverPasswordResetTokenExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddDeliverPasswordResetTokenExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddDeliverPasswordResetTokenExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddDeliverPasswordResetTokenExtendedOperationHandlerRequest: v,
	}
}

// AddExportReversiblePasswordsExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddExportReversiblePasswordsExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddExportReversiblePasswordsExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddExportReversiblePasswordsExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddExportReversiblePasswordsExtendedOperationHandlerRequest: v,
	}
}

// AddReplaceCertificateExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddReplaceCertificateExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddReplaceCertificateExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddReplaceCertificateExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddReplaceCertificateExtendedOperationHandlerRequest: v,
	}
}

// AddSingleUseTokensExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddSingleUseTokensExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddSingleUseTokensExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddSingleUseTokensExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddSingleUseTokensExtendedOperationHandlerRequest: v,
	}
}

// AddThirdPartyExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddThirdPartyExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddThirdPartyExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddThirdPartyExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddThirdPartyExtendedOperationHandlerRequest: v,
	}
}

// AddValidateTotpPasswordExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest is a convenience function that returns AddValidateTotpPasswordExtendedOperationHandlerRequest wrapped in AddExtendedOperationHandlerRequest
func AddValidateTotpPasswordExtendedOperationHandlerRequestAsAddExtendedOperationHandlerRequest(v *AddValidateTotpPasswordExtendedOperationHandlerRequest) AddExtendedOperationHandlerRequest {
	return AddExtendedOperationHandlerRequest{
		AddValidateTotpPasswordExtendedOperationHandlerRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddExtendedOperationHandlerRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddCollectSupportDataExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddCollectSupportDataExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddCollectSupportDataExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddCollectSupportDataExtendedOperationHandlerRequest)
		if string(jsonAddCollectSupportDataExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddCollectSupportDataExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddCollectSupportDataExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddDeliverOtpExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddDeliverOtpExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddDeliverOtpExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddDeliverOtpExtendedOperationHandlerRequest)
		if string(jsonAddDeliverOtpExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddDeliverOtpExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddDeliverOtpExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddDeliverPasswordResetTokenExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddDeliverPasswordResetTokenExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest)
		if string(jsonAddDeliverPasswordResetTokenExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddExportReversiblePasswordsExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddExportReversiblePasswordsExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddExportReversiblePasswordsExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddExportReversiblePasswordsExtendedOperationHandlerRequest)
		if string(jsonAddExportReversiblePasswordsExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddExportReversiblePasswordsExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddExportReversiblePasswordsExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddReplaceCertificateExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddReplaceCertificateExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddReplaceCertificateExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddReplaceCertificateExtendedOperationHandlerRequest)
		if string(jsonAddReplaceCertificateExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddReplaceCertificateExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddReplaceCertificateExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddSingleUseTokensExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSingleUseTokensExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddSingleUseTokensExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddSingleUseTokensExtendedOperationHandlerRequest)
		if string(jsonAddSingleUseTokensExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddSingleUseTokensExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSingleUseTokensExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddThirdPartyExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddThirdPartyExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddThirdPartyExtendedOperationHandlerRequest)
		if string(jsonAddThirdPartyExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddThirdPartyExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyExtendedOperationHandlerRequest = nil
	}

	// try to unmarshal data into AddValidateTotpPasswordExtendedOperationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddValidateTotpPasswordExtendedOperationHandlerRequest)
	if err == nil {
		jsonAddValidateTotpPasswordExtendedOperationHandlerRequest, _ := json.Marshal(dst.AddValidateTotpPasswordExtendedOperationHandlerRequest)
		if string(jsonAddValidateTotpPasswordExtendedOperationHandlerRequest) == "{}" { // empty struct
			dst.AddValidateTotpPasswordExtendedOperationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddValidateTotpPasswordExtendedOperationHandlerRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddCollectSupportDataExtendedOperationHandlerRequest = nil
		dst.AddDeliverOtpExtendedOperationHandlerRequest = nil
		dst.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest = nil
		dst.AddExportReversiblePasswordsExtendedOperationHandlerRequest = nil
		dst.AddReplaceCertificateExtendedOperationHandlerRequest = nil
		dst.AddSingleUseTokensExtendedOperationHandlerRequest = nil
		dst.AddThirdPartyExtendedOperationHandlerRequest = nil
		dst.AddValidateTotpPasswordExtendedOperationHandlerRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddExtendedOperationHandlerRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddExtendedOperationHandlerRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddExtendedOperationHandlerRequest) MarshalJSON() ([]byte, error) {
	if src.AddCollectSupportDataExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddCollectSupportDataExtendedOperationHandlerRequest)
	}

	if src.AddDeliverOtpExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddDeliverOtpExtendedOperationHandlerRequest)
	}

	if src.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest)
	}

	if src.AddExportReversiblePasswordsExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddExportReversiblePasswordsExtendedOperationHandlerRequest)
	}

	if src.AddReplaceCertificateExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddReplaceCertificateExtendedOperationHandlerRequest)
	}

	if src.AddSingleUseTokensExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddSingleUseTokensExtendedOperationHandlerRequest)
	}

	if src.AddThirdPartyExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddThirdPartyExtendedOperationHandlerRequest)
	}

	if src.AddValidateTotpPasswordExtendedOperationHandlerRequest != nil {
		return json.Marshal(&src.AddValidateTotpPasswordExtendedOperationHandlerRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddExtendedOperationHandlerRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddCollectSupportDataExtendedOperationHandlerRequest != nil {
		return obj.AddCollectSupportDataExtendedOperationHandlerRequest
	}

	if obj.AddDeliverOtpExtendedOperationHandlerRequest != nil {
		return obj.AddDeliverOtpExtendedOperationHandlerRequest
	}

	if obj.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest != nil {
		return obj.AddDeliverPasswordResetTokenExtendedOperationHandlerRequest
	}

	if obj.AddExportReversiblePasswordsExtendedOperationHandlerRequest != nil {
		return obj.AddExportReversiblePasswordsExtendedOperationHandlerRequest
	}

	if obj.AddReplaceCertificateExtendedOperationHandlerRequest != nil {
		return obj.AddReplaceCertificateExtendedOperationHandlerRequest
	}

	if obj.AddSingleUseTokensExtendedOperationHandlerRequest != nil {
		return obj.AddSingleUseTokensExtendedOperationHandlerRequest
	}

	if obj.AddThirdPartyExtendedOperationHandlerRequest != nil {
		return obj.AddThirdPartyExtendedOperationHandlerRequest
	}

	if obj.AddValidateTotpPasswordExtendedOperationHandlerRequest != nil {
		return obj.AddValidateTotpPasswordExtendedOperationHandlerRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddExtendedOperationHandlerRequest struct {
	value *AddExtendedOperationHandlerRequest
	isSet bool
}

func (v NullableAddExtendedOperationHandlerRequest) Get() *AddExtendedOperationHandlerRequest {
	return v.value
}

func (v *NullableAddExtendedOperationHandlerRequest) Set(val *AddExtendedOperationHandlerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddExtendedOperationHandlerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddExtendedOperationHandlerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddExtendedOperationHandlerRequest(val *AddExtendedOperationHandlerRequest) *NullableAddExtendedOperationHandlerRequest {
	return &NullableAddExtendedOperationHandlerRequest{value: val, isSet: true}
}

func (v NullableAddExtendedOperationHandlerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddExtendedOperationHandlerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


