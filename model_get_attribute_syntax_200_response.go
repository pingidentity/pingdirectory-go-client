/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// GetAttributeSyntax200Response - struct for GetAttributeSyntax200Response
type GetAttributeSyntax200Response struct {
	AttributeTypeDescriptionAttributeSyntaxResponse *AttributeTypeDescriptionAttributeSyntaxResponse
	BitStringAttributeSyntaxResponse                *BitStringAttributeSyntaxResponse
	BooleanAttributeSyntaxResponse                  *BooleanAttributeSyntaxResponse
	DirectoryStringAttributeSyntaxResponse          *DirectoryStringAttributeSyntaxResponse
	DistinguishedNameAttributeSyntaxResponse        *DistinguishedNameAttributeSyntaxResponse
	GeneralizedTimeAttributeSyntaxResponse          *GeneralizedTimeAttributeSyntaxResponse
	HexStringAttributeSyntaxResponse                *HexStringAttributeSyntaxResponse
	IntegerAttributeSyntaxResponse                  *IntegerAttributeSyntaxResponse
	JsonObjectAttributeSyntaxResponse               *JsonObjectAttributeSyntaxResponse
	LdapUrlAttributeSyntaxResponse                  *LdapUrlAttributeSyntaxResponse
	NameAndOptionalUidAttributeSyntaxResponse       *NameAndOptionalUidAttributeSyntaxResponse
	TelephoneNumberAttributeSyntaxResponse          *TelephoneNumberAttributeSyntaxResponse
	UserPasswordAttributeSyntaxResponse             *UserPasswordAttributeSyntaxResponse
	UuidAttributeSyntaxResponse                     *UuidAttributeSyntaxResponse
}

// AttributeTypeDescriptionAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns AttributeTypeDescriptionAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func AttributeTypeDescriptionAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *AttributeTypeDescriptionAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		AttributeTypeDescriptionAttributeSyntaxResponse: v,
	}
}

// BitStringAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns BitStringAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func BitStringAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *BitStringAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		BitStringAttributeSyntaxResponse: v,
	}
}

// BooleanAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns BooleanAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func BooleanAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *BooleanAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		BooleanAttributeSyntaxResponse: v,
	}
}

// DirectoryStringAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns DirectoryStringAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func DirectoryStringAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *DirectoryStringAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		DirectoryStringAttributeSyntaxResponse: v,
	}
}

// DistinguishedNameAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns DistinguishedNameAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func DistinguishedNameAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *DistinguishedNameAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		DistinguishedNameAttributeSyntaxResponse: v,
	}
}

// GeneralizedTimeAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns GeneralizedTimeAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func GeneralizedTimeAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *GeneralizedTimeAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		GeneralizedTimeAttributeSyntaxResponse: v,
	}
}

// HexStringAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns HexStringAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func HexStringAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *HexStringAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		HexStringAttributeSyntaxResponse: v,
	}
}

// IntegerAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns IntegerAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func IntegerAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *IntegerAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		IntegerAttributeSyntaxResponse: v,
	}
}

// JsonObjectAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns JsonObjectAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func JsonObjectAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *JsonObjectAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		JsonObjectAttributeSyntaxResponse: v,
	}
}

// LdapUrlAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns LdapUrlAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func LdapUrlAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *LdapUrlAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		LdapUrlAttributeSyntaxResponse: v,
	}
}

// NameAndOptionalUidAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns NameAndOptionalUidAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func NameAndOptionalUidAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *NameAndOptionalUidAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		NameAndOptionalUidAttributeSyntaxResponse: v,
	}
}

// TelephoneNumberAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns TelephoneNumberAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func TelephoneNumberAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *TelephoneNumberAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		TelephoneNumberAttributeSyntaxResponse: v,
	}
}

// UserPasswordAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns UserPasswordAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func UserPasswordAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *UserPasswordAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		UserPasswordAttributeSyntaxResponse: v,
	}
}

// UuidAttributeSyntaxResponseAsGetAttributeSyntax200Response is a convenience function that returns UuidAttributeSyntaxResponse wrapped in GetAttributeSyntax200Response
func UuidAttributeSyntaxResponseAsGetAttributeSyntax200Response(v *UuidAttributeSyntaxResponse) GetAttributeSyntax200Response {
	return GetAttributeSyntax200Response{
		UuidAttributeSyntaxResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetAttributeSyntax200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AttributeTypeDescriptionAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.AttributeTypeDescriptionAttributeSyntaxResponse)
	if err == nil {
		jsonAttributeTypeDescriptionAttributeSyntaxResponse, _ := json.Marshal(dst.AttributeTypeDescriptionAttributeSyntaxResponse)
		if string(jsonAttributeTypeDescriptionAttributeSyntaxResponse) == "{}" { // empty struct
			dst.AttributeTypeDescriptionAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.AttributeTypeDescriptionAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into BitStringAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.BitStringAttributeSyntaxResponse)
	if err == nil {
		jsonBitStringAttributeSyntaxResponse, _ := json.Marshal(dst.BitStringAttributeSyntaxResponse)
		if string(jsonBitStringAttributeSyntaxResponse) == "{}" { // empty struct
			dst.BitStringAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.BitStringAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into BooleanAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.BooleanAttributeSyntaxResponse)
	if err == nil {
		jsonBooleanAttributeSyntaxResponse, _ := json.Marshal(dst.BooleanAttributeSyntaxResponse)
		if string(jsonBooleanAttributeSyntaxResponse) == "{}" { // empty struct
			dst.BooleanAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.BooleanAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into DirectoryStringAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.DirectoryStringAttributeSyntaxResponse)
	if err == nil {
		jsonDirectoryStringAttributeSyntaxResponse, _ := json.Marshal(dst.DirectoryStringAttributeSyntaxResponse)
		if string(jsonDirectoryStringAttributeSyntaxResponse) == "{}" { // empty struct
			dst.DirectoryStringAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.DirectoryStringAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into DistinguishedNameAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.DistinguishedNameAttributeSyntaxResponse)
	if err == nil {
		jsonDistinguishedNameAttributeSyntaxResponse, _ := json.Marshal(dst.DistinguishedNameAttributeSyntaxResponse)
		if string(jsonDistinguishedNameAttributeSyntaxResponse) == "{}" { // empty struct
			dst.DistinguishedNameAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.DistinguishedNameAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into GeneralizedTimeAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.GeneralizedTimeAttributeSyntaxResponse)
	if err == nil {
		jsonGeneralizedTimeAttributeSyntaxResponse, _ := json.Marshal(dst.GeneralizedTimeAttributeSyntaxResponse)
		if string(jsonGeneralizedTimeAttributeSyntaxResponse) == "{}" { // empty struct
			dst.GeneralizedTimeAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.GeneralizedTimeAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into HexStringAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.HexStringAttributeSyntaxResponse)
	if err == nil {
		jsonHexStringAttributeSyntaxResponse, _ := json.Marshal(dst.HexStringAttributeSyntaxResponse)
		if string(jsonHexStringAttributeSyntaxResponse) == "{}" { // empty struct
			dst.HexStringAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.HexStringAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into IntegerAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.IntegerAttributeSyntaxResponse)
	if err == nil {
		jsonIntegerAttributeSyntaxResponse, _ := json.Marshal(dst.IntegerAttributeSyntaxResponse)
		if string(jsonIntegerAttributeSyntaxResponse) == "{}" { // empty struct
			dst.IntegerAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.IntegerAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into JsonObjectAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.JsonObjectAttributeSyntaxResponse)
	if err == nil {
		jsonJsonObjectAttributeSyntaxResponse, _ := json.Marshal(dst.JsonObjectAttributeSyntaxResponse)
		if string(jsonJsonObjectAttributeSyntaxResponse) == "{}" { // empty struct
			dst.JsonObjectAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.JsonObjectAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into LdapUrlAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.LdapUrlAttributeSyntaxResponse)
	if err == nil {
		jsonLdapUrlAttributeSyntaxResponse, _ := json.Marshal(dst.LdapUrlAttributeSyntaxResponse)
		if string(jsonLdapUrlAttributeSyntaxResponse) == "{}" { // empty struct
			dst.LdapUrlAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.LdapUrlAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into NameAndOptionalUidAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.NameAndOptionalUidAttributeSyntaxResponse)
	if err == nil {
		jsonNameAndOptionalUidAttributeSyntaxResponse, _ := json.Marshal(dst.NameAndOptionalUidAttributeSyntaxResponse)
		if string(jsonNameAndOptionalUidAttributeSyntaxResponse) == "{}" { // empty struct
			dst.NameAndOptionalUidAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.NameAndOptionalUidAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into TelephoneNumberAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.TelephoneNumberAttributeSyntaxResponse)
	if err == nil {
		jsonTelephoneNumberAttributeSyntaxResponse, _ := json.Marshal(dst.TelephoneNumberAttributeSyntaxResponse)
		if string(jsonTelephoneNumberAttributeSyntaxResponse) == "{}" { // empty struct
			dst.TelephoneNumberAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.TelephoneNumberAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into UserPasswordAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.UserPasswordAttributeSyntaxResponse)
	if err == nil {
		jsonUserPasswordAttributeSyntaxResponse, _ := json.Marshal(dst.UserPasswordAttributeSyntaxResponse)
		if string(jsonUserPasswordAttributeSyntaxResponse) == "{}" { // empty struct
			dst.UserPasswordAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.UserPasswordAttributeSyntaxResponse = nil
	}

	// try to unmarshal data into UuidAttributeSyntaxResponse
	err = newStrictDecoder(data).Decode(&dst.UuidAttributeSyntaxResponse)
	if err == nil {
		jsonUuidAttributeSyntaxResponse, _ := json.Marshal(dst.UuidAttributeSyntaxResponse)
		if string(jsonUuidAttributeSyntaxResponse) == "{}" { // empty struct
			dst.UuidAttributeSyntaxResponse = nil
		} else {
			match++
		}
	} else {
		dst.UuidAttributeSyntaxResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AttributeTypeDescriptionAttributeSyntaxResponse = nil
		dst.BitStringAttributeSyntaxResponse = nil
		dst.BooleanAttributeSyntaxResponse = nil
		dst.DirectoryStringAttributeSyntaxResponse = nil
		dst.DistinguishedNameAttributeSyntaxResponse = nil
		dst.GeneralizedTimeAttributeSyntaxResponse = nil
		dst.HexStringAttributeSyntaxResponse = nil
		dst.IntegerAttributeSyntaxResponse = nil
		dst.JsonObjectAttributeSyntaxResponse = nil
		dst.LdapUrlAttributeSyntaxResponse = nil
		dst.NameAndOptionalUidAttributeSyntaxResponse = nil
		dst.TelephoneNumberAttributeSyntaxResponse = nil
		dst.UserPasswordAttributeSyntaxResponse = nil
		dst.UuidAttributeSyntaxResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetAttributeSyntax200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetAttributeSyntax200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetAttributeSyntax200Response) MarshalJSON() ([]byte, error) {
	if src.AttributeTypeDescriptionAttributeSyntaxResponse != nil {
		return json.Marshal(&src.AttributeTypeDescriptionAttributeSyntaxResponse)
	}

	if src.BitStringAttributeSyntaxResponse != nil {
		return json.Marshal(&src.BitStringAttributeSyntaxResponse)
	}

	if src.BooleanAttributeSyntaxResponse != nil {
		return json.Marshal(&src.BooleanAttributeSyntaxResponse)
	}

	if src.DirectoryStringAttributeSyntaxResponse != nil {
		return json.Marshal(&src.DirectoryStringAttributeSyntaxResponse)
	}

	if src.DistinguishedNameAttributeSyntaxResponse != nil {
		return json.Marshal(&src.DistinguishedNameAttributeSyntaxResponse)
	}

	if src.GeneralizedTimeAttributeSyntaxResponse != nil {
		return json.Marshal(&src.GeneralizedTimeAttributeSyntaxResponse)
	}

	if src.HexStringAttributeSyntaxResponse != nil {
		return json.Marshal(&src.HexStringAttributeSyntaxResponse)
	}

	if src.IntegerAttributeSyntaxResponse != nil {
		return json.Marshal(&src.IntegerAttributeSyntaxResponse)
	}

	if src.JsonObjectAttributeSyntaxResponse != nil {
		return json.Marshal(&src.JsonObjectAttributeSyntaxResponse)
	}

	if src.LdapUrlAttributeSyntaxResponse != nil {
		return json.Marshal(&src.LdapUrlAttributeSyntaxResponse)
	}

	if src.NameAndOptionalUidAttributeSyntaxResponse != nil {
		return json.Marshal(&src.NameAndOptionalUidAttributeSyntaxResponse)
	}

	if src.TelephoneNumberAttributeSyntaxResponse != nil {
		return json.Marshal(&src.TelephoneNumberAttributeSyntaxResponse)
	}

	if src.UserPasswordAttributeSyntaxResponse != nil {
		return json.Marshal(&src.UserPasswordAttributeSyntaxResponse)
	}

	if src.UuidAttributeSyntaxResponse != nil {
		return json.Marshal(&src.UuidAttributeSyntaxResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetAttributeSyntax200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AttributeTypeDescriptionAttributeSyntaxResponse != nil {
		return obj.AttributeTypeDescriptionAttributeSyntaxResponse
	}

	if obj.BitStringAttributeSyntaxResponse != nil {
		return obj.BitStringAttributeSyntaxResponse
	}

	if obj.BooleanAttributeSyntaxResponse != nil {
		return obj.BooleanAttributeSyntaxResponse
	}

	if obj.DirectoryStringAttributeSyntaxResponse != nil {
		return obj.DirectoryStringAttributeSyntaxResponse
	}

	if obj.DistinguishedNameAttributeSyntaxResponse != nil {
		return obj.DistinguishedNameAttributeSyntaxResponse
	}

	if obj.GeneralizedTimeAttributeSyntaxResponse != nil {
		return obj.GeneralizedTimeAttributeSyntaxResponse
	}

	if obj.HexStringAttributeSyntaxResponse != nil {
		return obj.HexStringAttributeSyntaxResponse
	}

	if obj.IntegerAttributeSyntaxResponse != nil {
		return obj.IntegerAttributeSyntaxResponse
	}

	if obj.JsonObjectAttributeSyntaxResponse != nil {
		return obj.JsonObjectAttributeSyntaxResponse
	}

	if obj.LdapUrlAttributeSyntaxResponse != nil {
		return obj.LdapUrlAttributeSyntaxResponse
	}

	if obj.NameAndOptionalUidAttributeSyntaxResponse != nil {
		return obj.NameAndOptionalUidAttributeSyntaxResponse
	}

	if obj.TelephoneNumberAttributeSyntaxResponse != nil {
		return obj.TelephoneNumberAttributeSyntaxResponse
	}

	if obj.UserPasswordAttributeSyntaxResponse != nil {
		return obj.UserPasswordAttributeSyntaxResponse
	}

	if obj.UuidAttributeSyntaxResponse != nil {
		return obj.UuidAttributeSyntaxResponse
	}

	// all schemas are nil
	return nil
}

type NullableGetAttributeSyntax200Response struct {
	value *GetAttributeSyntax200Response
	isSet bool
}

func (v NullableGetAttributeSyntax200Response) Get() *GetAttributeSyntax200Response {
	return v.value
}

func (v *NullableGetAttributeSyntax200Response) Set(val *GetAttributeSyntax200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAttributeSyntax200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAttributeSyntax200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAttributeSyntax200Response(val *GetAttributeSyntax200Response) *NullableGetAttributeSyntax200Response {
	return &NullableGetAttributeSyntax200Response{value: val, isSet: true}
}

func (v NullableGetAttributeSyntax200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAttributeSyntax200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
