/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DiskSpaceUsageMonitorProviderResponse struct for DiskSpaceUsageMonitorProviderResponse
type DiskSpaceUsageMonitorProviderResponse struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas []EnumdiskSpaceUsageMonitorProviderSchemaUrn `json:"schemas"`
	// Name of the Monitor Provider
	Id *string `json:"id,omitempty"`
	// Specifies the low space warning threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
	LowSpaceWarningSizeThreshold *string `json:"lowSpaceWarningSizeThreshold,omitempty"`
	// Specifies the low space warning threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
	LowSpaceWarningPercentThreshold *int32 `json:"lowSpaceWarningPercentThreshold,omitempty"`
	// Specifies the low space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.
	LowSpaceErrorSizeThreshold *string `json:"lowSpaceErrorSizeThreshold,omitempty"`
	// Specifies the low space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.
	LowSpaceErrorPercentThreshold *int32 `json:"lowSpaceErrorPercentThreshold,omitempty"`
	// Specifies the out of space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
	OutOfSpaceErrorSizeThreshold *string `json:"outOfSpaceErrorSizeThreshold,omitempty"`
	// Specifies the out of space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
	OutOfSpaceErrorPercentThreshold *int32 `json:"outOfSpaceErrorPercentThreshold,omitempty"`
	// Specifies the length of time between administrative alerts generated in response to lack of usable disk space. Administrative alerts will be generated whenever the amount of usable space drops below any threshold, and they will also be generated at regular intervals as long as the amount of usable space remains below the threshold value. A value of zero indicates that alerts should only be generated when the amount of usable space drops below a configured threshold.
	AlertFrequency string `json:"alertFrequency"`
	// A description for this Monitor Provider
	Description *string `json:"description,omitempty"`
	// Indicates whether the Monitor Provider is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewDiskSpaceUsageMonitorProviderResponse instantiates a new DiskSpaceUsageMonitorProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDiskSpaceUsageMonitorProviderResponse(schemas []EnumdiskSpaceUsageMonitorProviderSchemaUrn, alertFrequency string, enabled bool) *DiskSpaceUsageMonitorProviderResponse {
	this := DiskSpaceUsageMonitorProviderResponse{}
	this.Schemas = schemas
	this.AlertFrequency = alertFrequency
	this.Enabled = enabled
	return &this
}

// NewDiskSpaceUsageMonitorProviderResponseWithDefaults instantiates a new DiskSpaceUsageMonitorProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDiskSpaceUsageMonitorProviderResponseWithDefaults() *DiskSpaceUsageMonitorProviderResponse {
	this := DiskSpaceUsageMonitorProviderResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
    return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *DiskSpaceUsageMonitorProviderResponse) GetSchemas() []EnumdiskSpaceUsageMonitorProviderSchemaUrn {
	if o == nil {
		var ret []EnumdiskSpaceUsageMonitorProviderSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetSchemasOk() ([]EnumdiskSpaceUsageMonitorProviderSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *DiskSpaceUsageMonitorProviderResponse) SetSchemas(v []EnumdiskSpaceUsageMonitorProviderSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetId() string {
	if o == nil || isNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetIdOk() (*string, bool) {
	if o == nil || isNil(o.Id) {
    return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasId() bool {
	if o != nil && !isNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetId(v string) {
	o.Id = &v
}

// GetLowSpaceWarningSizeThreshold returns the LowSpaceWarningSizeThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceWarningSizeThreshold() string {
	if o == nil || isNil(o.LowSpaceWarningSizeThreshold) {
		var ret string
		return ret
	}
	return *o.LowSpaceWarningSizeThreshold
}

// GetLowSpaceWarningSizeThresholdOk returns a tuple with the LowSpaceWarningSizeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceWarningSizeThresholdOk() (*string, bool) {
	if o == nil || isNil(o.LowSpaceWarningSizeThreshold) {
    return nil, false
	}
	return o.LowSpaceWarningSizeThreshold, true
}

// HasLowSpaceWarningSizeThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasLowSpaceWarningSizeThreshold() bool {
	if o != nil && !isNil(o.LowSpaceWarningSizeThreshold) {
		return true
	}

	return false
}

// SetLowSpaceWarningSizeThreshold gets a reference to the given string and assigns it to the LowSpaceWarningSizeThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetLowSpaceWarningSizeThreshold(v string) {
	o.LowSpaceWarningSizeThreshold = &v
}

// GetLowSpaceWarningPercentThreshold returns the LowSpaceWarningPercentThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceWarningPercentThreshold() int32 {
	if o == nil || isNil(o.LowSpaceWarningPercentThreshold) {
		var ret int32
		return ret
	}
	return *o.LowSpaceWarningPercentThreshold
}

// GetLowSpaceWarningPercentThresholdOk returns a tuple with the LowSpaceWarningPercentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceWarningPercentThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.LowSpaceWarningPercentThreshold) {
    return nil, false
	}
	return o.LowSpaceWarningPercentThreshold, true
}

// HasLowSpaceWarningPercentThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasLowSpaceWarningPercentThreshold() bool {
	if o != nil && !isNil(o.LowSpaceWarningPercentThreshold) {
		return true
	}

	return false
}

// SetLowSpaceWarningPercentThreshold gets a reference to the given int32 and assigns it to the LowSpaceWarningPercentThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetLowSpaceWarningPercentThreshold(v int32) {
	o.LowSpaceWarningPercentThreshold = &v
}

// GetLowSpaceErrorSizeThreshold returns the LowSpaceErrorSizeThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceErrorSizeThreshold() string {
	if o == nil || isNil(o.LowSpaceErrorSizeThreshold) {
		var ret string
		return ret
	}
	return *o.LowSpaceErrorSizeThreshold
}

// GetLowSpaceErrorSizeThresholdOk returns a tuple with the LowSpaceErrorSizeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceErrorSizeThresholdOk() (*string, bool) {
	if o == nil || isNil(o.LowSpaceErrorSizeThreshold) {
    return nil, false
	}
	return o.LowSpaceErrorSizeThreshold, true
}

// HasLowSpaceErrorSizeThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasLowSpaceErrorSizeThreshold() bool {
	if o != nil && !isNil(o.LowSpaceErrorSizeThreshold) {
		return true
	}

	return false
}

// SetLowSpaceErrorSizeThreshold gets a reference to the given string and assigns it to the LowSpaceErrorSizeThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetLowSpaceErrorSizeThreshold(v string) {
	o.LowSpaceErrorSizeThreshold = &v
}

// GetLowSpaceErrorPercentThreshold returns the LowSpaceErrorPercentThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceErrorPercentThreshold() int32 {
	if o == nil || isNil(o.LowSpaceErrorPercentThreshold) {
		var ret int32
		return ret
	}
	return *o.LowSpaceErrorPercentThreshold
}

// GetLowSpaceErrorPercentThresholdOk returns a tuple with the LowSpaceErrorPercentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetLowSpaceErrorPercentThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.LowSpaceErrorPercentThreshold) {
    return nil, false
	}
	return o.LowSpaceErrorPercentThreshold, true
}

// HasLowSpaceErrorPercentThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasLowSpaceErrorPercentThreshold() bool {
	if o != nil && !isNil(o.LowSpaceErrorPercentThreshold) {
		return true
	}

	return false
}

// SetLowSpaceErrorPercentThreshold gets a reference to the given int32 and assigns it to the LowSpaceErrorPercentThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetLowSpaceErrorPercentThreshold(v int32) {
	o.LowSpaceErrorPercentThreshold = &v
}

// GetOutOfSpaceErrorSizeThreshold returns the OutOfSpaceErrorSizeThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetOutOfSpaceErrorSizeThreshold() string {
	if o == nil || isNil(o.OutOfSpaceErrorSizeThreshold) {
		var ret string
		return ret
	}
	return *o.OutOfSpaceErrorSizeThreshold
}

// GetOutOfSpaceErrorSizeThresholdOk returns a tuple with the OutOfSpaceErrorSizeThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetOutOfSpaceErrorSizeThresholdOk() (*string, bool) {
	if o == nil || isNil(o.OutOfSpaceErrorSizeThreshold) {
    return nil, false
	}
	return o.OutOfSpaceErrorSizeThreshold, true
}

// HasOutOfSpaceErrorSizeThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasOutOfSpaceErrorSizeThreshold() bool {
	if o != nil && !isNil(o.OutOfSpaceErrorSizeThreshold) {
		return true
	}

	return false
}

// SetOutOfSpaceErrorSizeThreshold gets a reference to the given string and assigns it to the OutOfSpaceErrorSizeThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetOutOfSpaceErrorSizeThreshold(v string) {
	o.OutOfSpaceErrorSizeThreshold = &v
}

// GetOutOfSpaceErrorPercentThreshold returns the OutOfSpaceErrorPercentThreshold field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetOutOfSpaceErrorPercentThreshold() int32 {
	if o == nil || isNil(o.OutOfSpaceErrorPercentThreshold) {
		var ret int32
		return ret
	}
	return *o.OutOfSpaceErrorPercentThreshold
}

// GetOutOfSpaceErrorPercentThresholdOk returns a tuple with the OutOfSpaceErrorPercentThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetOutOfSpaceErrorPercentThresholdOk() (*int32, bool) {
	if o == nil || isNil(o.OutOfSpaceErrorPercentThreshold) {
    return nil, false
	}
	return o.OutOfSpaceErrorPercentThreshold, true
}

// HasOutOfSpaceErrorPercentThreshold returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasOutOfSpaceErrorPercentThreshold() bool {
	if o != nil && !isNil(o.OutOfSpaceErrorPercentThreshold) {
		return true
	}

	return false
}

// SetOutOfSpaceErrorPercentThreshold gets a reference to the given int32 and assigns it to the OutOfSpaceErrorPercentThreshold field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetOutOfSpaceErrorPercentThreshold(v int32) {
	o.OutOfSpaceErrorPercentThreshold = &v
}

// GetAlertFrequency returns the AlertFrequency field value
func (o *DiskSpaceUsageMonitorProviderResponse) GetAlertFrequency() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlertFrequency
}

// GetAlertFrequencyOk returns a tuple with the AlertFrequency field value
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetAlertFrequencyOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.AlertFrequency, true
}

// SetAlertFrequency sets field value
func (o *DiskSpaceUsageMonitorProviderResponse) SetAlertFrequency(v string) {
	o.AlertFrequency = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DiskSpaceUsageMonitorProviderResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DiskSpaceUsageMonitorProviderResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *DiskSpaceUsageMonitorProviderResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *DiskSpaceUsageMonitorProviderResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *DiskSpaceUsageMonitorProviderResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o DiskSpaceUsageMonitorProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.LowSpaceWarningSizeThreshold) {
		toSerialize["lowSpaceWarningSizeThreshold"] = o.LowSpaceWarningSizeThreshold
	}
	if !isNil(o.LowSpaceWarningPercentThreshold) {
		toSerialize["lowSpaceWarningPercentThreshold"] = o.LowSpaceWarningPercentThreshold
	}
	if !isNil(o.LowSpaceErrorSizeThreshold) {
		toSerialize["lowSpaceErrorSizeThreshold"] = o.LowSpaceErrorSizeThreshold
	}
	if !isNil(o.LowSpaceErrorPercentThreshold) {
		toSerialize["lowSpaceErrorPercentThreshold"] = o.LowSpaceErrorPercentThreshold
	}
	if !isNil(o.OutOfSpaceErrorSizeThreshold) {
		toSerialize["outOfSpaceErrorSizeThreshold"] = o.OutOfSpaceErrorSizeThreshold
	}
	if !isNil(o.OutOfSpaceErrorPercentThreshold) {
		toSerialize["outOfSpaceErrorPercentThreshold"] = o.OutOfSpaceErrorPercentThreshold
	}
	if true {
		toSerialize["alertFrequency"] = o.AlertFrequency
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableDiskSpaceUsageMonitorProviderResponse struct {
	value *DiskSpaceUsageMonitorProviderResponse
	isSet bool
}

func (v NullableDiskSpaceUsageMonitorProviderResponse) Get() *DiskSpaceUsageMonitorProviderResponse {
	return v.value
}

func (v *NullableDiskSpaceUsageMonitorProviderResponse) Set(val *DiskSpaceUsageMonitorProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDiskSpaceUsageMonitorProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDiskSpaceUsageMonitorProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDiskSpaceUsageMonitorProviderResponse(val *DiskSpaceUsageMonitorProviderResponse) *NullableDiskSpaceUsageMonitorProviderResponse {
	return &NullableDiskSpaceUsageMonitorProviderResponse{value: val, isSet: true}
}

func (v NullableDiskSpaceUsageMonitorProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDiskSpaceUsageMonitorProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


