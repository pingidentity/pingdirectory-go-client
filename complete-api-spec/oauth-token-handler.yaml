openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the OAuth Token Handler config object
  title: PingData OAuth Token Handler Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access oauth-token-handlers
  name: oauth-token-handler
paths:
  /oauth-token-handlers:
    post:
      summary: Add a new OAuth Token Handler to the config
      operationId: add-oauth-token-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-groovy-scripted-request'
              - $ref: '#/components/schemas/add-third-party-request'
        description: Create a new OAuth Token Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The OAuth Token Handler already exists
      security:
      - basicAuth: []
      tags:
      - location
  /oauth-token-handlers/{oauth-token-handler-name}:
    delete:
      summary: Delete a OAuth Token Handler
      operationId: delete-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be deleted
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
        "409":
          description: The OAuth Token Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single OAuth Token Handler
      operationId: get-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be read
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing OAuth Token Handler by name
      operationId: update-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be updated
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-oauth-token-handler-request'
        description: Update an existing OAuth Token Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      tags:
      - location
components:
  schemas:
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    add-groovy-scripted-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new OAuth Token Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-shared'
    groovy-scripted-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the OAuth Token Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-shared'
    groovy-scripted-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scriptedSchemaUrn'
        scriptClass:
          type: string
          description: The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted OAuth Token Handler.
        scriptArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Scripted OAuth Token Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this OAuth Token Handler
      required:
      - schemas
      - scriptClass
    Enumgroovy-scriptedSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:groovy-scripted"
    add-third-party-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new OAuth Token Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-shared'
    third-party-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the OAuth Token Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-shared'
    third-party-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-partySchemaUrn'
        extensionClass:
          type: string
          description: The fully-qualified name of the Java class providing the logic for the Third Party OAuth Token Handler.
        extensionArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Third Party OAuth Token Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this OAuth Token Handler
      required:
      - schemas
      - extensionClass
    Enumthird-partySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:third-party"
    update-oauth-token-handler-request:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
