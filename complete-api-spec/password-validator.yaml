openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Password Validator config object
  title: PingData Password Validator Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
tags:
- description: Access password-validators
  name: password-validator
paths:
  /password-validators:
    post:
      summary: Add a new Password Validator to the config
      operationId: add-password-validator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-character-set-password-validator-request'
              - $ref: '#/components/schemas/add-similarity-based-password-validator-request'
              - $ref: '#/components/schemas/add-attribute-value-password-validator-request'
              - $ref: '#/components/schemas/add-repeated-characters-password-validator-request'
              - $ref: '#/components/schemas/add-dictionary-password-validator-request'
              - $ref: '#/components/schemas/add-haystack-password-validator-request'
              - $ref: '#/components/schemas/add-groovy-scripted-password-validator-request'
              - $ref: '#/components/schemas/add-pwned-passwords-password-validator-request'
              - $ref: '#/components/schemas/add-length-based-password-validator-request'
              - $ref: '#/components/schemas/add-regular-expression-password-validator-request'
              - $ref: '#/components/schemas/add-unique-characters-password-validator-request'
              - $ref: '#/components/schemas/add-third-party-password-validator-request'
        description: Create a new Password Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Validator already exists
      security:
      - basicAuth: []
      tags:
      - password-validator
  /password-validators/{password-validator-name}:
    delete:
      summary: Delete a Password Validator
      operationId: delete-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
        "409":
          description: The Password Validator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-validator
    get:
      summary: Returns a single Password Validator
      operationId: get-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/custom-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      tags:
      - password-validator
    patch:
      summary: Update an existing Password Validator by name
      operationId: update-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Validator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/custom-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      tags:
      - password-validator
components:
  schemas:
    add-character-set-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/character-set-password-validator-shared'
      required:
      - validatorName
    character-set-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/character-set-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    character-set-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcharacter-set-password-validatorSchemaUrn'
        characterSet:
          type: array
          items:
            type: string
          description: >-
              Specifies a character set containing characters that a password may contain and a value indicating the minimum number of characters required from that set.
        allowUnclassifiedCharacters:
          type: boolean
          description: >-
              Indicates whether this password validator allows passwords to contain characters outside of any of the user-defined character sets.
        minimumRequiredCharacterSets:
          type: integer
          description: >-
              Specifies the minimum number of character sets that must be represented in a proposed password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - characterSet
      - allowUnclassifiedCharacters
      - enabled
    Enumcharacter-set-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:character-set"
    add-similarity-based-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
      required:
      - validatorName
    similarity-based-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    similarity-based-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimilarity-based-password-validatorSchemaUrn'
        minPasswordDifference:
          type: integer
          description: >-
              Specifies the minimum difference of new and old password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - minPasswordDifference
      - enabled
    Enumsimilarity-based-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:similarity-based"
    add-attribute-value-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
      required:
      - validatorName
    attribute-value-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    attribute-value-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumattribute-value-password-validatorSchemaUrn'
        matchAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the name(s) of the attribute(s) whose values should be checked to determine whether they match the provided password. If no values are provided, then the server checks if the proposed password matches the value of any user attribute in the target user's entry.
        testPasswordSubstringOfAttributeValue:
          type: boolean
          description: >-
              Indicates whether to reject any proposed password that is a substring of a value in one of the match attributes in the target user's entry.
        testAttributeValueSubstringOfPassword:
          type: boolean
          description: >-
              Indicates whether to reject any proposed password in which a value in one of the match attributes in the target user's entry is a substring of that password.
        minimumAttributeValueLengthForSubstringMatches:
          type: integer
          description: >-
              The minimum length that an attribute value must have for it to be considered when rejecting passwords that contain the value of another attribute as a substring.
        testReversedPassword:
          type: boolean
          description: >-
              Indicates whether to perform matching against the reversed value of the provided password in addition to the order in which it was given.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - testReversedPassword
      - enabled
    Enumattribute-value-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:attribute-value"
    custom-password-validator-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-password-validatorSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Validator
          description:
            type: string
            description: >-
                A description for this Password Validator
          enabled:
            type: boolean
            description: >-
                Indicates whether the password validator is enabled for use.
          validatorRequirementDescription:
            type: string
            description: >-
                Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
          validatorFailureMessage:
            type: string
            description: >-
                Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumcustom-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:custom"
    add-repeated-characters-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
      required:
      - validatorName
    repeated-characters-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    repeated-characters-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumrepeated-characters-password-validatorSchemaUrn'
        maxConsecutiveLength:
          type: integer
          description: >-
              Specifies the maximum number of times that any character can appear consecutively in a password value.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator should treat password characters in a case-sensitive manner.
        characterSet:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of characters that should be considered equivalent for the purpose of this password validator. This can be used, for example, to ensure that passwords contain no more than three consecutive digits.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - maxConsecutiveLength
      - caseSensitiveValidation
      - enabled
    Enumrepeated-characters-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:repeated-characters"
    add-dictionary-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
      required:
      - validatorName
    dictionary-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - dictionaryFile
      - caseSensitiveValidation
      - testReversedPassword
    dictionary-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdictionary-password-validatorSchemaUrn'
        dictionaryFile:
          type: string
          description: >-
              Specifies the path to the file containing a list of words that cannot be used as passwords.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator is to treat password characters in a case-sensitive manner.
        testReversedPassword:
          type: boolean
          description: >-
              Indicates whether this password validator is to test the reversed value of the provided password as well as the order in which it was given.
        ignoreLeadingNonAlphabeticCharacters:
          type: boolean
          description: >-
              Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the beginning of a proposed password.
        ignoreTrailingNonAlphabeticCharacters:
          type: boolean
          description: >-
              Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the end of a proposed password.
        stripDiacriticalMarks:
          type: boolean
          description: >-
              Indicates whether to strip characters of any diacritical marks (like accents, cedillas, circumflexes, diaereses, tildes, and umlauts) they may contain. Any characters with a diacritical mark would be replaced with a base version
        alternativePasswordCharacterMapping:
          type: array
          items:
            type: string
          description: >-
              Provides a set of character substitutions that can be applied to the proposed password when checking to see if it is in the provided dictionary. Each mapping should consist of a single character followed by a colon and a list of the alternative characters that may be used in place of that character.
        maximumAllowedPercentOfPassword:
          type: integer
          description: >-
              The maximum allowed percent of a proposed password that any single dictionary word is allowed to comprise. A value of 100 indicates that a proposed password will only be rejected if the dictionary contains the entire proposed password (after any configured transformations have been applied).
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumdictionary-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:dictionary"
    add-haystack-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/haystack-password-validator-shared'
      required:
      - validatorName
    haystack-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/haystack-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - assumedPasswordGuessesPerSecond
      - minimumAcceptableTimeToExhaustSearchSpace
    haystack-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhaystack-password-validatorSchemaUrn'
        assumedPasswordGuessesPerSecond:
          type: string
          description: >-
              The number of password guesses per second that a potential attacker may be expected to make.
        minimumAcceptableTimeToExhaustSearchSpace:
          type: string
          description: >-
              The minimum length of time (using the configured number of password guesses per second) required to exhaust the entire search space for a proposed password in order for that password to be considered acceptable.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumhaystack-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:haystack"
    add-groovy-scripted-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
      required:
      - validatorName
    groovy-scripted-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    groovy-scripted-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-password-validatorSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Password Validator.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Password Validator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:groovy-scripted"
    add-pwned-passwords-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
      required:
      - validatorName
    pwned-passwords-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - pwnedPasswordsBaseURL
      - invokeForAdd
      - invokeForSelfChange
      - invokeForAdminReset
      - acceptPasswordOnServiceError
    pwned-passwords-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpwned-passwords-password-validatorSchemaUrn'
        pwnedPasswordsBaseURL:
          type: string
          description: >-
              The base URL for requests used to interact with the Pwned Passwords service. The first five characters of the hexadecimal representation of the unsalted SHA-1 digest of a proposed password will be appended to this base URL to construct the HTTP GET request used to obtain information about potential matches.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Pwned Passwords service.
        invokeForAdd:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided in LDAP add requests.
        invokeForSelfChange:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided by an end user in the course of changing their own password.
        invokeForAdminReset:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided by administrators when changing the password for another user.
        acceptPasswordOnServiceError:
          type: boolean
          description: >-
              Indicates whether to accept the proposed password if an error occurs while attempting to interact with the Pwned Passwords service.
        keyManagerProvider:
          type: string
          description: >-
              Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
        trustManagerProvider:
          type: string
          description: >-
              Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the Pwned Password servers).
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumpwned-passwords-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:pwned-passwords"
    add-length-based-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/length-based-password-validator-shared'
      required:
      - validatorName
    length-based-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/length-based-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    length-based-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlength-based-password-validatorSchemaUrn'
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that can be included in a proposed password.
        minPasswordLength:
          type: integer
          description: >-
              Specifies the minimum number of characters that must be included in a proposed password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumlength-based-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:length-based"
    Enumpassword-validator-matchBehaviorProp:
      type: string
      enum:
      - "require-match"
      - "reject-match"
      description: >-
          The behavior to exhibit if a user's proposed password matches the regular expression defined in the match-pattern property.
    add-regular-expression-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
      required:
      - validatorName
    regular-expression-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    regular-expression-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumregular-expression-password-validatorSchemaUrn'
        matchPattern:
          type: string
          description: >-
              The regular expression to use for this password validator.
        matchBehavior:
          $ref: '#/components/schemas/Enumpassword-validator-matchBehaviorProp'
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - matchPattern
      - matchBehavior
      - enabled
    Enumregular-expression-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:regular-expression"
    add-unique-characters-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
      required:
      - validatorName
    unique-characters-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    unique-characters-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumunique-characters-password-validatorSchemaUrn'
        minUniqueCharacters:
          type: integer
          description: >-
              Specifies the minimum number of unique characters that a password will be allowed to contain.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator should treat password characters in a case-sensitive manner.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - minUniqueCharacters
      - caseSensitiveValidation
      - enabled
    Enumunique-characters-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:unique-characters"
    add-third-party-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new Password Validator
      - $ref: '#/components/schemas/third-party-password-validator-shared'
      required:
      - validatorName
    third-party-password-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Validator
      - $ref: '#/components/schemas/third-party-password-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    third-party-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-password-validatorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Password Validator.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Password Validator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
