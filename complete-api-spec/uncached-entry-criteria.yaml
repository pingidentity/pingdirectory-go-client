openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Uncached Entry Criteria config object
  title: PingData Uncached Entry Criteria Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access uncached-entry-criteria
  name: uncached-entry-criteria
paths:
  /uncached-entry-criteria:
    post:
      summary: Add a new Uncached Entry Criteria to the config
      operationId: add-uncached-entry-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-default-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-last-access-time-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-filter-based-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-groovy-scripted-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-third-party-uncached-entry-criteria-request'
        description: Create a new Uncached Entry Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Uncached Entry Criteria already exists
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
  /uncached-entry-criteria/{uncached-entry-criteria-name}:
    delete:
      summary: Delete a Uncached Entry Criteria
      operationId: delete-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be deleted
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
        "409":
          description: The Uncached Entry Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
    get:
      summary: Returns a single Uncached Entry Criteria
      operationId: get-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be read
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
    patch:
      summary: Update an existing Uncached Entry Criteria by name
      operationId: update-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be updated
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Uncached Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
components:
  schemas:
    add-default-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdefault-uncached-entry-criteriaSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - enabled
    Enumdefault-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:default"
    add-last-access-time-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlast-access-time-uncached-entry-criteriaSchemaUrn'
        accessTimeThreshold:
          type: string
          description: >-
              Specifies the maximum length of time that has passed since an entry was last accessed that it should still be included in the id2entry database. Entries that have not been accessed in more than this length of time may be written into the uncached-id2entry database.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - accessTimeThreshold
      - enabled
    Enumlast-access-time-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:last-access-time"
    add-filter-based-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
    filter-based-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
    filter-based-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfilter-based-uncached-entry-criteriaSchemaUrn'
        filter:
          type: string
          description: >-
              Specifies the search filter that should be used to differentiate entries into cached and uncached sets.
        filterIdentifiesUncachedEntries:
          type: boolean
          description: >-
              Indicates whether the associated filter identifies those entries which should be stored in the uncached-id2entry database (if true) or entries which should be stored in the id2entry database (if false).
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - filter
      - filterIdentifiesUncachedEntries
      - enabled
    Enumfilter-based-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:filter-based"
    add-groovy-scripted-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Uncached Entry Criteria.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:groovy-scripted"
    add-third-party-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-uncached-entry-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Uncached Entry Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
