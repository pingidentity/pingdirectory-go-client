openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Passphrase Provider config object
  title: PingData Passphrase Provider Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access passphrase-providers
  name: passphrase-provider
paths:
  /passphrase-providers:
    post:
      summary: Add a new Passphrase Provider to the config
      operationId: add-passphrase-provider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-environment-variable-passphrase-provider-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-passphrase-provider-request'
              - $ref: '#/components/schemas/add-obscured-value-passphrase-provider-request'
              - $ref: '#/components/schemas/add-azure-key-vault-passphrase-provider-request'
              - $ref: '#/components/schemas/add-file-based-passphrase-provider-request'
              - $ref: '#/components/schemas/add-conjur-passphrase-provider-request'
              - $ref: '#/components/schemas/add-vault-passphrase-provider-request'
              - $ref: '#/components/schemas/add-third-party-passphrase-provider-request'
        description: Create a new Passphrase Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Passphrase Provider already exists
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
  /passphrase-providers/{passphrase-provider-name}:
    delete:
      summary: Delete a Passphrase Provider
      operationId: delete-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be deleted
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
        "409":
          description: The Passphrase Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
    get:
      summary: Returns a single Passphrase Provider
      operationId: get-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be read
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
    patch:
      summary: Update an existing Passphrase Provider by name
      operationId: update-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be updated
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Passphrase Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
components:
  schemas:
    add-environment-variable-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
    environment-variable-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    environment-variable-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumenvironment-variable-passphrase-providerSchemaUrn'
        environmentVariable:
          type: string
          description: >-
              The name of the environment variable that is expected to hold the passphrase.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - environmentVariable
      - enabled
    Enumenvironment-variable-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:environment-variable"
    add-amazon-secrets-manager-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
    amazon-secrets-manager-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    amazon-secrets-manager-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-passphrase-providerSchemaUrn'
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the AWS Secrets Manager.
        secretID:
          type: string
          description: >-
              The Amazon Resource Name (ARN) or the user-friendly name of the secret to be retrieved.
        secretFieldName:
          type: string
          description: >-
              The name of the JSON field whose value is the passphrase that will be retrieved.
        secretVersionID:
          type: string
          description: >-
              The unique identifier for the version of the secret to be retrieved.
        secretVersionStage:
          type: string
          description: >-
              The staging label for the version of the secret to be retrieved.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - awsExternalServer
      - secretID
      - secretFieldName
      - enabled
    Enumamazon-secrets-manager-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:amazon-secrets-manager"
    add-obscured-value-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
    obscured-value-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    obscured-value-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumobscured-value-passphrase-providerSchemaUrn'
        obscuredValue:
          type: string
          format: password
          description: >-
              The value to be stored in an obscured form.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - obscuredValue
      - enabled
    Enumobscured-value-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:obscured-value"
    add-azure-key-vault-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
    azure-key-vault-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    azure-key-vault-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-passphrase-providerSchemaUrn'
        keyVaultURI:
          type: string
          description: >-
              The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Azure service.
        secretName:
          type: string
          description: >-
              The name of the secret to retrieve.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Azure Key Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from the Azure service.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - secretName
      - enabled
    Enumazure-key-vault-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:azure-key-vault"
    add-file-based-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
    file-based-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    file-based-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-passphrase-providerSchemaUrn'
        passwordFile:
          type: string
          description: >-
              The path to the file containing the passphrase.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from the target file. A value of zero seconds indicates that the provider should always attempt to read the passphrase from the file.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - passwordFile
      - enabled
    Enumfile-based-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:file-based"
    add-conjur-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
    conjur-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    conjur-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-passphrase-providerSchemaUrn'
        conjurExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Conjur instance containing the passphrase.
        conjurSecretRelativePath:
          type: string
          description: >-
              The portion of the path that follows the account name in the URI needed to obtain the desired secret. Any special characters in the path must be URL-encoded.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Conjur. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Conjur.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - conjurExternalServer
      - conjurSecretRelativePath
      - enabled
    Enumconjur-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:conjur"
    add-vault-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
    vault-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    vault-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-passphrase-providerSchemaUrn'
        vaultExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
        vaultSecretPath:
          type: string
          description: >-
              The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
        vaultSecretFieldName:
          type: string
          description: >-
              The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - vaultExternalServer
      - vaultSecretPath
      - vaultSecretFieldName
      - enabled
    Enumvault-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:vault"
    add-third-party-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
    third-party-passphrase-provider-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
      - $ref: '#/components/schemas/meta'
    third-party-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-passphrase-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Passphrase Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Passphrase Provider. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
