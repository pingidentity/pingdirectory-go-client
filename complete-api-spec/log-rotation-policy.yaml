openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Log Rotation Policy config object
  title: PingData Log Rotation Policy Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access log-rotation-policies
  name: log-rotation-policy
paths:
  /log-rotation-policies:
    post:
      summary: Add a new Log Rotation Policy to the config
      operationId: add-log-rotation-policy
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-time-limit-request'
              - $ref: '#/components/schemas/add-fixed-time-request'
              - $ref: '#/components/schemas/add-never-rotate-request'
              - $ref: '#/components/schemas/add-size-limit-request'
        description: Create a new Log Rotation Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-response'
                - $ref: '#/components/schemas/fixed-time-response'
                - $ref: '#/components/schemas/never-rotate-response'
                - $ref: '#/components/schemas/size-limit-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Rotation Policy already exists
      security:
      - basicAuth: []
      tags:
      - location
  /log-rotation-policies/{log-rotation-policy-name}:
    delete:
      summary: Delete a Log Rotation Policy
      operationId: delete-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be deleted
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
        "409":
          description: The Log Rotation Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single Log Rotation Policy
      operationId: get-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be read
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-response'
                - $ref: '#/components/schemas/fixed-time-response'
                - $ref: '#/components/schemas/never-rotate-response'
                - $ref: '#/components/schemas/size-limit-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing Log Rotation Policy by name
      operationId: update-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be updated
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-log-rotation-policy-request'
        description: Update an existing Log Rotation Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-response'
                - $ref: '#/components/schemas/fixed-time-response'
                - $ref: '#/components/schemas/never-rotate-response'
                - $ref: '#/components/schemas/size-limit-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      tags:
      - location
components:
  schemas:
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    add-time-limit-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/time-limit-shared'
    time-limit-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/time-limit-shared'
    time-limit-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtime-limitSchemaUrn'
        rotationInterval:
          type: string
          description: Specifies the time interval between rotations.
        description:
          type: string
          description: A description for this Log Rotation Policy
      required:
      - schemas
      - rotationInterval
    Enumtime-limitSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:time-limit"
    add-fixed-time-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/fixed-time-shared'
    fixed-time-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/fixed-time-shared'
    fixed-time-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfixed-timeSchemaUrn'
        timeOfDay:
          type: array
          items:
            type: string
            description: Specifies the time of day at which log rotation should occur.
        description:
          type: string
          description: A description for this Log Rotation Policy
      required:
      - schemas
      - timeOfDay
    Enumfixed-timeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:fixed-time"
    add-never-rotate-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/never-rotate-shared'
    never-rotate-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/never-rotate-shared'
    never-rotate-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnever-rotateSchemaUrn'
        description:
          type: string
          description: A description for this Log Rotation Policy
      required:
      - schemas
    Enumnever-rotateSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:never-rotate"
    add-size-limit-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/size-limit-shared'
    size-limit-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/size-limit-shared'
    size-limit-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsize-limitSchemaUrn'
        fileSizeLimit:
          type: string
          description: Specifies the maximum size that a log file can reach before it is rotated.
        description:
          type: string
          description: A description for this Log Rotation Policy
      required:
      - schemas
      - fileSizeLimit
    Enumsize-limitSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:size-limit"
    update-log-rotation-policy-request:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
