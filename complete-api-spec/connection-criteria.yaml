openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Connection Criteria config object
  title: PingData Connection Criteria Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
tags:
- description: Access connection-criteria
  name: connection-criteria
paths:
  /connection-criteria:
    post:
      summary: Add a new Connection Criteria to the config
      operationId: add-connection-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-simple-connection-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-connection-criteria-request'
              - $ref: '#/components/schemas/add-third-party-connection-criteria-request'
        description: Create a new Connection Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Connection Criteria already exists
      security:
      - basicAuth: []
      tags:
      - connection-criteria
  /connection-criteria/{connection-criteria-name}:
    delete:
      summary: Delete a Connection Criteria
      operationId: delete-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
        "409":
          description: The Connection Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - connection-criteria
    get:
      summary: Returns a single Connection Criteria
      operationId: get-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - connection-criteria
    patch:
      summary: Update an existing Connection Criteria by name
      operationId: update-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Connection Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - connection-criteria
components:
  schemas:
    Enumconnection-criteria-communicationSecurityLevelProp:
      type: string
      enum:
      - "any"
      - "secure-only"
      - "insecure-only"
      description: >-
          Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
    Enumconnection-criteria-userAuthTypeProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "sasl"
      - "internal"
      description: >-
          Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
    Enumconnection-criteria-authenticationSecurityLevelProp:
      type: string
      enum:
      - "any"
      - "secure-only"
      - "insecure-only"
      description: >-
          Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure manner. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-allIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-anyIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-notAllIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-noneIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    add-simple-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            type: string
            description: >-
                Name of the new Connection Criteria
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
      required:
      - criteriaName
    simple-connection-criteria-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Connection Criteria
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    simple-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-connection-criteriaSchemaUrn'
        includedClientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection Criteria.
        excludedClientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple Connection Criteria.
        includedConnectionHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
        excludedConnectionHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
        includedProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a communication protocol that should be used by clients included in this Simple Connection Criteria.
        excludedProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection Criteria.
        communicationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-communicationSecurityLevelProp'
          description: >-
              Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
        userAuthType:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-userAuthTypeProp'
          description: >-
              Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
        authenticationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-authenticationSecurityLevelProp'
          description: >-
              Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure manner. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        includedUserSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
        excludedUserSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
        includedUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        excludedUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        allIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        anyIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        notAllIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        noneIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        allIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        anyIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        notAllIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        noneIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        allIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-allIncludedUserPrivilegeProp'
          description: >-
              Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        anyIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-anyIncludedUserPrivilegeProp'
          description: >-
              Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        notAllIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-notAllIncludedUserPrivilegeProp'
          description: >-
              Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        noneIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-noneIncludedUserPrivilegeProp'
          description: >-
              Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
    Enumsimple-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:simple"
    add-aggregate-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            type: string
            description: >-
                Name of the new Connection Criteria
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
      required:
      - criteriaName
    aggregate-connection-criteria-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Connection Criteria
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    aggregate-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-connection-criteriaSchemaUrn'
        allIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that must match the associated client connection in order to match the aggregate connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must match all of them in order to match the aggregate connection criteria.
        anyIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that may match the associated client connection in order to match the aggregate connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must match at least one of them in order to match the aggregate connection criteria.
        notAllIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that should not match the associated client connection in order to match the aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate connection criteria.
        noneIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that must not match the associated client connection in order to match the aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client connection must not match any of them in order to match the aggregate connection criteria.
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
    Enumaggregate-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:aggregate"
    add-third-party-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            type: string
            description: >-
                Name of the new Connection Criteria
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
      required:
      - criteriaName
    third-party-connection-criteria-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Connection Criteria
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    third-party-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-connection-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
