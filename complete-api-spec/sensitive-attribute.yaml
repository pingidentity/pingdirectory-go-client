openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Sensitive Attribute config object
  title: PingData Sensitive Attribute Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-100/pd_ds_use_config_api
tags:
- description: Access sensitive-attributes
  name: sensitive-attribute
paths:
  /sensitive-attributes:
    get:
      summary: Returns a list of all Sensitive Attribute objects
      operationId: list-sensitive-attributes
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attributeListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
    post:
      summary: Add a new Sensitive Attribute to the config
      operationId: add-sensitive-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-sensitive-attribute-request'
        description: Create a new Sensitive Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Sensitive Attribute already exists
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
  /sensitive-attributes/{sensitive-attribute-name}:
    delete:
      summary: Delete a Sensitive Attribute
      operationId: delete-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
        "409":
          description: The Sensitive Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
    get:
      summary: Returns a single Sensitive Attribute
      operationId: get-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
    patch:
      summary: Update an existing Sensitive Attribute by name
      operationId: update-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Sensitive Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
components:
  schemas:
    Enumsensitive-attribute-allowInReturnedEntriesProp:
      type: string
      enum:
      - "allow"
      - "suppress"
      - "secure-only"
      description: >-
          Indicates whether sensitive attributes should be included in entries returned to the client. This includes not only search result entries, but also other forms including in the values of controls like the pre-read, post-read, get authorization entry, and LDAP join response controls.
    Enumsensitive-attribute-allowInFilterProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to include sensitive attributes in search filters. This also includes filters that may be used in other forms, including assertion and LDAP join request controls.
    Enumsensitive-attribute-allowInAddProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to include sensitive attributes in add requests.
    Enumsensitive-attribute-allowInCompareProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to target sensitive attributes with compare requests.
    Enumsensitive-attribute-allowInModifyProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to target sensitive attributes with modify requests.
    add-sensitive-attribute-request:
      allOf:
      - type: object
        properties:
          attributeName:
            type: string
            description: >-
                Name of the new Sensitive Attribute
      - $ref: '#/components/schemas/sensitive-attribute-shared'
      required:
      - attributeName
    sensitive-attribute-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Sensitive Attribute
      - $ref: '#/components/schemas/sensitive-attribute-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    sensitive-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsensitive-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Sensitive Attribute
        attributeType:
          type: array
          items:
            type: string
          description: >-
              The name(s) or OID(s) of the attribute types for attributes whose values may be considered sensitive.
        includeDefaultSensitiveOperationalAttributes:
          type: boolean
          description: >-
              Indicates whether to automatically include any server-generated operational attributes that may contain sensitive data.
        allowInReturnedEntries:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInReturnedEntriesProp'
        allowInFilter:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInFilterProp'
        allowInAdd:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInAddProp'
        allowInCompare:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInCompareProp'
        allowInModify:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInModifyProp'
      required:
      - attributeType
    Enumsensitive-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sensitive-attribute"
    sensitive-attributeListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/sensitive-attribute-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
