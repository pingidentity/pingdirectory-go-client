openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Alert Handler config object
  title: PingData Alert Handler Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access alert-handlers
  name: alert-handler
paths:
  /alert-handlers:
    post:
      summary: Add a new Alert Handler to the config
      operationId: add-alert-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-smtp-request'
              - $ref: '#/components/schemas/add-jmx-request'
              - $ref: '#/components/schemas/add-groovy-scripted-request'
              - $ref: '#/components/schemas/add-snmp-request'
              - $ref: '#/components/schemas/add-twilio-request'
              - $ref: '#/components/schemas/add-error-log-request'
              - $ref: '#/components/schemas/add-snmp-sub-agent-request'
              - $ref: '#/components/schemas/add-exec-request'
              - $ref: '#/components/schemas/add-third-party-request'
        description: Create a new Alert Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-response'
                - $ref: '#/components/schemas/jmx-response'
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/snmp-response'
                - $ref: '#/components/schemas/twilio-response'
                - $ref: '#/components/schemas/error-log-response'
                - $ref: '#/components/schemas/snmp-sub-agent-response'
                - $ref: '#/components/schemas/exec-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Alert Handler already exists
      security:
      - basicAuth: []
      tags:
      - location
  /alert-handlers/{alert-handler-name}:
    delete:
      summary: Delete a Alert Handler
      operationId: delete-alert-handler
      parameters:
      - description: Name of the Alert Handler to be deleted
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
        "409":
          description: The Alert Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single Alert Handler
      operationId: get-alert-handler
      parameters:
      - description: Name of the Alert Handler to be read
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/output-response'
                - $ref: '#/components/schemas/smtp-response'
                - $ref: '#/components/schemas/jmx-response'
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/snmp-response'
                - $ref: '#/components/schemas/twilio-response'
                - $ref: '#/components/schemas/error-log-response'
                - $ref: '#/components/schemas/snmp-sub-agent-response'
                - $ref: '#/components/schemas/exec-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing Alert Handler by name
      operationId: update-alert-handler
      parameters:
      - description: Name of the Alert Handler to be updated
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-alert-handler-request'
        description: Update an existing Alert Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/output-response'
                - $ref: '#/components/schemas/smtp-response'
                - $ref: '#/components/schemas/jmx-response'
                - $ref: '#/components/schemas/groovy-scripted-response'
                - $ref: '#/components/schemas/snmp-response'
                - $ref: '#/components/schemas/twilio-response'
                - $ref: '#/components/schemas/error-log-response'
                - $ref: '#/components/schemas/snmp-sub-agent-response'
                - $ref: '#/components/schemas/exec-response'
                - $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      tags:
      - location
components:
  schemas:
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    output-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumoutputSchemaUrn'
        outputLocation:
          $ref: '#/components/schemas/EnumoutputLocationProp'
        outputFormat:
          $ref: '#/components/schemas/EnumoutputFormatProp'
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - enabled
    EnumoutputSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:output"
    add-smtp-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/smtp-shared'
    smtp-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/smtp-shared'
    smtp-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumsmtpSchemaUrn'
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this SMTP Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        senderAddress:
          type: string
          description: Specifies the email address to use as the sender for messages generated by this alert handler.
        recipientAddress:
          type: array
          items:
            type: string
            description: Specifies an email address to which the messages should be sent.
        messageSubject:
          type: string
          description: Specifies the subject that should be used for email messages generated by this alert handler.
        messageBody:
          type: string
          description: Specifies the body that should be used for email messages generated by this alert handler.
        includeMonitorDataFilter:
          type: string
          description: Include monitor entries that match this filter.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - senderAddress
      - recipientAddress
      - messageSubject
      - messageBody
      - enabled
    EnumsmtpSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:smtp"
    add-jmx-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/jmx-shared'
    jmx-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jmx-shared'
    jmx-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumjmxSchemaUrn'
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this JMX Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - enabled
    EnumjmxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:jmx"
    add-groovy-scripted-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-shared'
    groovy-scripted-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-shared'
    groovy-scripted-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scriptedSchemaUrn'
        scriptClass:
          type: string
          description: The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Alert Handler.
        scriptArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Scripted Alert Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scriptedSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:groovy-scripted"
    add-snmp-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/snmp-shared'
    snmp-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/snmp-shared'
    snmp-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumsnmpSchemaUrn'
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this SNMP Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        serverHostName:
          type: string
          description: Specifies the address of the SNMP agent to which traps will be sent.
        serverPort:
          type: integer
          description: Specifies the port number of the SNMP agent to which traps will be sent.
        communityName:
          type: string
          description: Specifies the name of the community to which the traps will be sent.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - serverHostName
      - serverPort
      - communityName
      - enabled
    EnumsnmpSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp"
    add-twilio-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/twilio-shared'
    twilio-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/twilio-shared'
    twilio-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumtwilioSchemaUrn'
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Twilio Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        twilioAccountSID:
          type: string
          description: The unique identifier assigned to the Twilio account that will be used.
        twilioAuthToken:
          type: string
          format: password
          description: The auth token for the Twilio account that will be used.
        twilioAuthTokenPassphraseProvider:
          type: string
          description: The passphrase provider that may be used to obtain the auth token for the Twilio account that will be used.
        senderPhoneNumber:
          type: array
          items:
            type: string
            description: The outgoing phone number to use for the messages. Values must be phone numbers you have obtained for use with your Twilio account.
        recipientPhoneNumber:
          type: array
          items:
            type: string
            description: The phone number to which alert notifications should be delivered.
        longMessageBehavior:
          $ref: '#/components/schemas/EnumlongMessageBehaviorProp'
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - twilioAccountSID
      - senderPhoneNumber
      - recipientPhoneNumber
      - longMessageBehavior
      - enabled
    EnumtwilioSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:twilio"
    add-error-log-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/error-log-shared'
    error-log-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/error-log-shared'
    error-log-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumerror-logSchemaUrn'
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - enabled
    Enumerror-logSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:error-log"
    add-snmp-sub-agent-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/snmp-sub-agent-shared'
    snmp-sub-agent-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/snmp-sub-agent-shared'
    snmp-sub-agent-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsnmp-sub-agentSchemaUrn'
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this SNMP Sub Agent Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - enabled
    Enumsnmp-sub-agentSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp-sub-agent"
    add-exec-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/exec-shared'
    exec-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/exec-shared'
    exec-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumexecSchemaUrn'
        command:
          type: string
          description: Specifies the path of the command to execute, without any arguments. It must be an absolute path for reasons of security and reliability.
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Exec Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - command
      - enabled
    EnumexecSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:exec"
    add-third-party-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-shared'
    third-party-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-shared'
    third-party-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-partySchemaUrn'
        extensionClass:
          type: string
          description: The fully-qualified name of the Java class providing the logic for the Third Party Alert Handler.
        extensionArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Third Party Alert Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this Alert Handler
        enabled:
          type: boolean
          description: Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumenabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/EnumdisabledAlertTypeProp'
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-partySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:third-party"
    update-alert-handler-request:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    EnumenabledAlertSeverityProp:
      type: string
      enum:
      - "info"
      - "warning"
      - "error"
      - "fatal"
      description: Specifies the alert severities for which this alert handler should be used. If no values are provided, then this alert handler will be enabled for alerts with any severity.
    EnumoutputFormatProp:
      type: string
      enum:
      - "legacy-text"
      - "single-line-json"
      - "multi-line-json"
      description: The format to use when writing the alert messages.
    EnumoutputLocationProp:
      type: string
      enum:
      - "server-out-file"
      - "standard-output"
      - "standard-error"
      description: The location to which alert messages will be written.
    EnumenabledAlertTypeProp:
      type: string
      enum:
      - "access-control-change"
      - "access-control-disabled"
      - "access-control-enabled"
      - "access-control-parse-failure"
      - "access-log-criteria-matched"
      - "alarm-cleared"
      - "alarm-critical"
      - "alarm-major"
      - "alarm-minor"
      - "alarm-warning"
      - "backend-disabled"
      - "backend-initialization-failed"
      - "backup-failed"
      - "cannot-acquire-shared-backend-lock"
      - "cannot-copy-schema-files"
      - "cannot-decode-entry"
      - "cannot-find-recurring-task"
      - "cannot-register-backend"
      - "cannot-release-shared-backend-lock"
      - "cannot-rename-current-task-file"
      - "cannot-rename-new-task-file"
      - "cannot-restore-backup"
      - "cannot-schedule-recurring-task-iteration"
      - "cannot-write-configuration"
      - "cannot-write-new-schema-files"
      - "cannot-write-server-state-file"
      - "cannot-write-task-backing-file"
      - "config-change"
      - "console-logger-without-no-detach"
      - "crypto-manager-error"
      - "continuous-garbage-collection-detected"
      - "deadlock-detected"
      - "debug-logging-enabled"
      - "delegated-admin-configuration-errors"
      - "duplicate-alerts-suppressed"
      - "duplicate-error-alerts-suppressed"
      - "duplicate-fatal-alerts-suppressed"
      - "duplicate-info-alerts-suppressed"
      - "duplicate-warning-alerts-suppressed"
      - "embedded-postgresql-unavailable"
      - "entering-lockdown-mode"
      - "entry-references-removed-attribute-type"
      - "exec-task-launching-command"
      - "exploded-index-background-delete-cleanup-failed"
      - "exploded-index-background-delete-failed"
      - "external-config-file-edit-handled"
      - "external-config-file-edit-lost"
      - "external-server-initialization-failed"
      - "failed-to-apply-mirrored-configuration"
      - "file-retention-task-delete-failure"
      - "force-gc-complete"
      - "force-gc-starting"
      - "global-index-insufficient-disk-space-error"
      - "global-index-persistence-error"
      - "global-index-read-error"
      - "global-referential-integrity-update-failure"
      - "globally-unique-attribute-conflict"
      - "health-check-available-to-degraded"
      - "health-check-available-to-unavailable"
      - "health-check-degraded-to-available"
      - "health-check-degraded-to-unavailable"
      - "health-check-unavailable-to-available"
      - "health-check-unavailable-to-degraded"
      - "http-connection-handler-duplicate-context-path"
      - "http-connection-handler-duplicate-servlet-extension"
      - "index-corrupt"
      - "index-degraded"
      - "index-rebuild-completed"
      - "index-rebuild-in-progress"
      - "insecure-access-token-validator-enabled"
      - "invalid-privilege"
      - "je-background-sync-failed"
      - "je-cleaner-disabled"
      - "je-daemon-thread-exception"
      - "je-environment-not-closed-cleanly"
      - "je-recovery-required"
      - "jvm-misconfiguration"
      - "large-attribute-update-failure"
      - "lba-no-available-servers"
      - "ldap-connection-handler-cannot-listen"
      - "ldap-connection-handler-consecutive-failures"
      - "ldap-connection-handler-uncaught-error"
      - "ldif-backend-cannot-write"
      - "ldif-connection-handler-parse-error"
      - "ldif-connection-handler-io-error"
      - "leaving-lockdown-mode"
      - "log-file-rotation-listener-invoke-error"
      - "log-file-rotation-listener-processing-takes-too-long"
      - "logging-error"
      - "low-disk-space-error"
      - "low-disk-space-warning"
      - "mirrored-subtree-manager-forced-as-master-error"
      - "mirrored-subtree-manager-forced-as-master-warning"
      - "mirrored-subtree-manager-no-master-found"
      - "mirrored-subtree-server-not-in-topology"
      - "mirrored-subtree-manager-operation-error"
      - "mirrored-subtree-manager-failed-outbound-connection"
      - "mirrored-subtree-manager-connection-asymmetry"
      - "missing-schema-elements-referenced-by-backend"
      - "monitoring-endpoint-unable-to-connect"
      - "no-enabled-alert-handlers"
      - "offline-config-change-detected"
      - "out-of-disk-space-error"
      - "pdp-unavailable"
      - "pdp-trust-framework-version-deprecated"
      - "proxy-entry-balancing-operation-failure"
      - "proxy-entry-balancing-error-multiple-operations-succeeded"
      - "proxy-entry-rebalancing-admin-action-required"
      - "replication-backlogged"
      - "replication-metadata-decode-failure"
      - "replication-missing-changes"
      - "replication-monitor-data-unavailable"
      - "replication-plugin-message-serialization-failure"
      - "replication-server-changelog-failure"
      - "replication-server-listen-failure"
      - "replication-unresolved-conflict"
      - "replication-unsent-changes"
      - "replication-replay-failed"
      - "restart-required"
      - "schema-checking-disabled"
      - "scim-lookthrough-limit-exceeded"
      - "restricted-subtree-accessibility"
      - "server-shutting-down"
      - "server-starting"
      - "server-started"
      - "subtree-delete-interrupted"
      - "sync-resource-connection-error"
      - "sync-resource-operation-error"
      - "sync-pipe-initialization-error"
      - "sync-pipe-backlog-above-threshold"
      - "sync-pipe-backlog-below-threshold"
      - "system-nanotime-stopped"
      - "system-current-time-shifted"
      - "task-started"
      - "task-completed"
      - "task-failed"
      - "third-party-extension-exception"
      - "thread-exit-holding-lock"
      - "threshold-warning-entry"
      - "threshold-warning-exit"
      - "threshold-critical-entry"
      - "threshold-critical-exit"
      - "topology-registry-secret-key-deleted"
      - "uncaught-exception"
      - "unindexed-internal-search"
      - "unique-attribute-sync-conflict"
      - "unique-attribute-sync-error"
      - "uniqueness-control-post-commit-conflict"
      - "unlicensed-product"
      - "unrecognized-alert-type"
      - "user-defined-error"
      - "user-defined-fatal"
      - "user-defined-info"
      - "user-defined-warning"
      - "worker-thread-caught-error"
      - "work-queue-backlogged"
      - "work-queue-full"
      - "work-queue-no-threads-remaining"
      - "server-jvm-paused"
      - "sensitive-trace-data-logged-warning"
      - "replication-generation-id-mismatch"
      - "account-temporarily-locked-account-status-notification"
      - "account-permanently-locked-account-status-notification"
      - "account-unlocked-account-status-notification"
      - "account-idle-locked-account-status-notification"
      - "account-reset-locked-account-status-notification"
      - "account-disabled-account-status-notification"
      - "account-enabled-account-status-notification"
      - "account-not-yet-active-account-status-notification"
      - "account-expired-account-status-notification"
      - "password-expired-account-status-notification"
      - "password-expiring-account-status-notification"
      - "password-reset-account-status-notification"
      - "password-changed-account-status-notification"
      - "account-created-account-status-notification"
      - "account-updated-account-status-notification"
      - "bind-password-failed-validation-account-status-notification"
      - "must-change-password-account-status-notification"
      - "privilege-assigned"
      - "insecure-request-rejected"
      - "incremental-backups-deprecated"
      - "replace-certificate-succeeded"
      - "replace-certificate-failed"
      description: Specifies the names of the alert types that are enabled for this alert handler.
    EnumlongMessageBehaviorProp:
      type: string
      enum:
      - "truncate"
      - "send-as-multiple-messages"
      description: The behavior to use for alert messages that are longer than the 160-character size limit for SMS messages.
    EnumdisabledAlertTypeProp:
      type: string
      enum:
      - "access-control-change"
      - "access-control-disabled"
      - "access-control-enabled"
      - "access-control-parse-failure"
      - "access-log-criteria-matched"
      - "alarm-cleared"
      - "alarm-critical"
      - "alarm-major"
      - "alarm-minor"
      - "alarm-warning"
      - "backend-disabled"
      - "backend-initialization-failed"
      - "backup-failed"
      - "cannot-acquire-shared-backend-lock"
      - "cannot-copy-schema-files"
      - "cannot-decode-entry"
      - "cannot-find-recurring-task"
      - "cannot-register-backend"
      - "cannot-release-shared-backend-lock"
      - "cannot-rename-current-task-file"
      - "cannot-rename-new-task-file"
      - "cannot-restore-backup"
      - "cannot-schedule-recurring-task-iteration"
      - "cannot-write-configuration"
      - "cannot-write-new-schema-files"
      - "cannot-write-server-state-file"
      - "cannot-write-task-backing-file"
      - "config-change"
      - "console-logger-without-no-detach"
      - "crypto-manager-error"
      - "continuous-garbage-collection-detected"
      - "deadlock-detected"
      - "debug-logging-enabled"
      - "delegated-admin-configuration-errors"
      - "duplicate-alerts-suppressed"
      - "duplicate-error-alerts-suppressed"
      - "duplicate-fatal-alerts-suppressed"
      - "duplicate-info-alerts-suppressed"
      - "duplicate-warning-alerts-suppressed"
      - "embedded-postgresql-unavailable"
      - "entering-lockdown-mode"
      - "entry-references-removed-attribute-type"
      - "exec-task-launching-command"
      - "exploded-index-background-delete-cleanup-failed"
      - "exploded-index-background-delete-failed"
      - "external-config-file-edit-handled"
      - "external-config-file-edit-lost"
      - "external-server-initialization-failed"
      - "failed-to-apply-mirrored-configuration"
      - "file-retention-task-delete-failure"
      - "force-gc-complete"
      - "force-gc-starting"
      - "global-index-insufficient-disk-space-error"
      - "global-index-persistence-error"
      - "global-index-read-error"
      - "global-referential-integrity-update-failure"
      - "globally-unique-attribute-conflict"
      - "health-check-available-to-degraded"
      - "health-check-available-to-unavailable"
      - "health-check-degraded-to-available"
      - "health-check-degraded-to-unavailable"
      - "health-check-unavailable-to-available"
      - "health-check-unavailable-to-degraded"
      - "http-connection-handler-duplicate-context-path"
      - "http-connection-handler-duplicate-servlet-extension"
      - "index-corrupt"
      - "index-degraded"
      - "index-rebuild-completed"
      - "index-rebuild-in-progress"
      - "insecure-access-token-validator-enabled"
      - "invalid-privilege"
      - "je-background-sync-failed"
      - "je-cleaner-disabled"
      - "je-daemon-thread-exception"
      - "je-environment-not-closed-cleanly"
      - "je-recovery-required"
      - "jvm-misconfiguration"
      - "large-attribute-update-failure"
      - "lba-no-available-servers"
      - "ldap-connection-handler-cannot-listen"
      - "ldap-connection-handler-consecutive-failures"
      - "ldap-connection-handler-uncaught-error"
      - "ldif-backend-cannot-write"
      - "ldif-connection-handler-parse-error"
      - "ldif-connection-handler-io-error"
      - "leaving-lockdown-mode"
      - "log-file-rotation-listener-invoke-error"
      - "log-file-rotation-listener-processing-takes-too-long"
      - "logging-error"
      - "low-disk-space-error"
      - "low-disk-space-warning"
      - "mirrored-subtree-manager-forced-as-master-error"
      - "mirrored-subtree-manager-forced-as-master-warning"
      - "mirrored-subtree-manager-no-master-found"
      - "mirrored-subtree-server-not-in-topology"
      - "mirrored-subtree-manager-operation-error"
      - "mirrored-subtree-manager-failed-outbound-connection"
      - "mirrored-subtree-manager-connection-asymmetry"
      - "missing-schema-elements-referenced-by-backend"
      - "monitoring-endpoint-unable-to-connect"
      - "no-enabled-alert-handlers"
      - "offline-config-change-detected"
      - "out-of-disk-space-error"
      - "pdp-unavailable"
      - "pdp-trust-framework-version-deprecated"
      - "proxy-entry-balancing-operation-failure"
      - "proxy-entry-balancing-error-multiple-operations-succeeded"
      - "proxy-entry-rebalancing-admin-action-required"
      - "replication-backlogged"
      - "replication-metadata-decode-failure"
      - "replication-missing-changes"
      - "replication-monitor-data-unavailable"
      - "replication-plugin-message-serialization-failure"
      - "replication-server-changelog-failure"
      - "replication-server-listen-failure"
      - "replication-unresolved-conflict"
      - "replication-unsent-changes"
      - "replication-replay-failed"
      - "restart-required"
      - "schema-checking-disabled"
      - "scim-lookthrough-limit-exceeded"
      - "restricted-subtree-accessibility"
      - "server-shutting-down"
      - "server-starting"
      - "server-started"
      - "subtree-delete-interrupted"
      - "sync-resource-connection-error"
      - "sync-resource-operation-error"
      - "sync-pipe-initialization-error"
      - "sync-pipe-backlog-above-threshold"
      - "sync-pipe-backlog-below-threshold"
      - "system-nanotime-stopped"
      - "system-current-time-shifted"
      - "task-started"
      - "task-completed"
      - "task-failed"
      - "third-party-extension-exception"
      - "thread-exit-holding-lock"
      - "threshold-warning-entry"
      - "threshold-warning-exit"
      - "threshold-critical-entry"
      - "threshold-critical-exit"
      - "topology-registry-secret-key-deleted"
      - "uncaught-exception"
      - "unindexed-internal-search"
      - "unique-attribute-sync-conflict"
      - "unique-attribute-sync-error"
      - "uniqueness-control-post-commit-conflict"
      - "unlicensed-product"
      - "unrecognized-alert-type"
      - "user-defined-error"
      - "user-defined-fatal"
      - "user-defined-info"
      - "user-defined-warning"
      - "worker-thread-caught-error"
      - "work-queue-backlogged"
      - "work-queue-full"
      - "work-queue-no-threads-remaining"
      - "server-jvm-paused"
      - "sensitive-trace-data-logged-warning"
      - "replication-generation-id-mismatch"
      - "account-temporarily-locked-account-status-notification"
      - "account-permanently-locked-account-status-notification"
      - "account-unlocked-account-status-notification"
      - "account-idle-locked-account-status-notification"
      - "account-reset-locked-account-status-notification"
      - "account-disabled-account-status-notification"
      - "account-enabled-account-status-notification"
      - "account-not-yet-active-account-status-notification"
      - "account-expired-account-status-notification"
      - "password-expired-account-status-notification"
      - "password-expiring-account-status-notification"
      - "password-reset-account-status-notification"
      - "password-changed-account-status-notification"
      - "account-created-account-status-notification"
      - "account-updated-account-status-notification"
      - "bind-password-failed-validation-account-status-notification"
      - "must-change-password-account-status-notification"
      - "privilege-assigned"
      - "insecure-request-rejected"
      - "incremental-backups-deprecated"
      - "replace-certificate-succeeded"
      - "replace-certificate-failed"
      description: Specifies the names of the alert types that are disabled for this alert handler.
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
