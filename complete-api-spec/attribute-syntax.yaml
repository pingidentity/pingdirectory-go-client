openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Attribute Syntax config object
  title: PingData Attribute Syntax Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-93/pd_ds_use_config_api
tags:
- description: Access attribute-syntaxes
  name: attribute-syntax
paths:
  /attribute-syntaxes/{attribute-syntax-name}:
    get:
      summary: Returns a single Attribute Syntax
      operationId: get-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
                - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
                - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
                - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
                - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
                - $ref: '#/components/schemas/integer-attribute-syntax-response'
                - $ref: '#/components/schemas/uuid-attribute-syntax-response'
                - $ref: '#/components/schemas/generic-attribute-syntax-response'
                - $ref: '#/components/schemas/json-object-attribute-syntax-response'
                - $ref: '#/components/schemas/user-password-attribute-syntax-response'
                - $ref: '#/components/schemas/boolean-attribute-syntax-response'
                - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
                - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
                - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
                - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - attribute-syntax
    patch:
      summary: Update an existing Attribute Syntax by name
      operationId: update-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Attribute Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
                - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
                - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
                - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
                - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
                - $ref: '#/components/schemas/integer-attribute-syntax-response'
                - $ref: '#/components/schemas/uuid-attribute-syntax-response'
                - $ref: '#/components/schemas/generic-attribute-syntax-response'
                - $ref: '#/components/schemas/json-object-attribute-syntax-response'
                - $ref: '#/components/schemas/user-password-attribute-syntax-response'
                - $ref: '#/components/schemas/boolean-attribute-syntax-response'
                - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
                - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
                - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
                - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - attribute-syntax
components:
  schemas:
    attribute-type-description-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumattribute-type-description-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          stripSyntaxMinUpperBound:
            type: boolean
            description: >-
                Indicates whether the suggested minimum upper bound appended to an attribute's syntax OID in its schema definition Attribute Type Description should be stripped.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumattribute-type-description-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:attribute-type-description"
    directory-string-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdirectory-string-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          allowZeroLengthValues:
            type: boolean
            description: >-
                Indicates whether zero-length (that is, an empty string) values are allowed.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumdirectory-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:directory-string"
    telephone-number-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtelephone-number-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          strictFormat:
            type: boolean
            description: >-
                Indicates whether to require telephone number values to strictly comply with the standard definition for this syntax.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumtelephone-number-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:telephone-number"
    distinguished-name-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdistinguished-name-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumdistinguished-name-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:distinguished-name"
    generalized-time-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneralized-time-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumgeneralized-time-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generalized-time"
    integer-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enuminteger-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enuminteger-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:integer"
    uuid-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumuuid-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumuuid-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:uuid"
    generic-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneric-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumgeneric-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generic"
    json-object-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumjson-object-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumjson-object-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:json-object"
    user-password-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumuser-password-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumuser-password-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:user-password"
    boolean-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumboolean-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumboolean-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:boolean"
    hex-string-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhex-string-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumhex-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:hex-string"
    bit-string-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbit-string-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumbit-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:bit-string"
    ldap-url-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-url-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          strictFormat:
            type: boolean
            description: >-
                Indicates whether values for attributes with this syntax will be required to be in the valid LDAP URL format. If this is set to false, then arbitrary strings will be allowed.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumldap-url-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:ldap-url"
    name-and-optional-uid-attribute-syntax-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumname-and-optional-uid-attribute-syntaxSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Attribute Syntax
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumname-and-optional-uid-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:name-and-optional-uid"
    attribute-syntaxListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
            - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
            - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
            - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
            - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
            - $ref: '#/components/schemas/integer-attribute-syntax-response'
            - $ref: '#/components/schemas/uuid-attribute-syntax-response'
            - $ref: '#/components/schemas/generic-attribute-syntax-response'
            - $ref: '#/components/schemas/json-object-attribute-syntax-response'
            - $ref: '#/components/schemas/user-password-attribute-syntax-response'
            - $ref: '#/components/schemas/boolean-attribute-syntax-response'
            - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
            - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
            - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
            - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
