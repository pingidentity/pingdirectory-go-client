openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Server Instance config object
  title: PingData Server Instance Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-93/pd_ds_use_config_api
tags:
- description: Access server-instances
  name: server-instance
paths:
  /server-instances:
    get:
      summary: Returns a list of all Server Instance objects
      operationId: list-server-instances
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-instanceListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - server-instance
  /server-instances/{server-instance-name}:
    get:
      summary: Returns a single Server Instance
      operationId: get-server-instance
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/proxy-server-instance-response'
                - $ref: '#/components/schemas/metrics-engine-server-instance-response'
                - $ref: '#/components/schemas/authorize-server-instance-response'
                - $ref: '#/components/schemas/directory-server-instance-response'
                - $ref: '#/components/schemas/sync-server-instance-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance
    patch:
      summary: Update an existing Server Instance by name
      operationId: update-server-instance
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Instance
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/proxy-server-instance-response'
                - $ref: '#/components/schemas/metrics-engine-server-instance-response'
                - $ref: '#/components/schemas/authorize-server-instance-response'
                - $ref: '#/components/schemas/directory-server-instance-response'
                - $ref: '#/components/schemas/sync-server-instance-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance
  /server-instances/{server-instance-name}/server-instance-listeners:
    get:
      summary: Returns a list of all Server Instance Listener objects
      operationId: list-server-instance-listeners
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-instance-listenerListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - server-instance-listener
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}:
    get:
      summary: Returns a single Server Instance Listener
      operationId: get-server-instance-listener
      parameters:
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-server-instance-listener-response'
                - $ref: '#/components/schemas/http-server-instance-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Instance Listener does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance-listener
    patch:
      summary: Update an existing Server Instance Listener by name
      operationId: update-server-instance-listener
      parameters:
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Instance Listener
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-server-instance-listener-response'
                - $ref: '#/components/schemas/http-server-instance-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Instance Listener does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance-listener
  /server-instances/{server-instance-name}/mac-secret-keys:
    get:
      summary: Returns a list of all Mac Secret Key objects
      operationId: list-mac-secret-keys
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mac-secret-keyListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - mac-secret-key
  /server-instances/{server-instance-name}/mac-secret-keys/{mac-secret-key-name}:
    get:
      summary: Returns a single Mac Secret Key
      operationId: get-mac-secret-key
      parameters:
      - description: Name of the Mac Secret Key
        explode: false
        in: path
        name: mac-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mac-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Mac Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - mac-secret-key
    patch:
      summary: Update an existing Mac Secret Key by name
      operationId: update-mac-secret-key
      parameters:
      - description: Name of the Mac Secret Key
        explode: false
        in: path
        name: mac-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Mac Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mac-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Mac Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - mac-secret-key
  /server-instances/{server-instance-name}/cipher-secret-keys:
    get:
      summary: Returns a list of all Cipher Secret Key objects
      operationId: list-cipher-secret-keys
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cipher-secret-keyListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - cipher-secret-key
  /server-instances/{server-instance-name}/cipher-secret-keys/{cipher-secret-key-name}:
    get:
      summary: Returns a single Cipher Secret Key
      operationId: get-cipher-secret-key
      parameters:
      - description: Name of the Cipher Secret Key
        explode: false
        in: path
        name: cipher-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cipher-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-secret-key
    patch:
      summary: Update an existing Cipher Secret Key by name
      operationId: update-cipher-secret-key
      parameters:
      - description: Name of the Cipher Secret Key
        explode: false
        in: path
        name: cipher-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Cipher Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cipher-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Cipher Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-secret-key
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info:
    get:
      summary: Returns a list of all Inter Server Authentication Info objects
      operationId: list-inter-server-authentication-info
      parameters:
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inter-server-authentication-infoListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - inter-server-authentication-info
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info/{inter-server-authentication-info-name}:
    get:
      summary: Returns a single Inter Server Authentication Info
      operationId: get-inter-server-authentication-info
      parameters:
      - description: Name of the Inter Server Authentication Info
        explode: false
        in: path
        name: inter-server-authentication-info-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/password-inter-server-authentication-info-response'
                - $ref: '#/components/schemas/certificate-inter-server-authentication-info-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Inter Server Authentication Info does not exist
      security:
      - basicAuth: []
      tags:
      - inter-server-authentication-info
    patch:
      summary: Update an existing Inter Server Authentication Info by name
      operationId: update-inter-server-authentication-info
      parameters:
      - description: Name of the Inter Server Authentication Info
        explode: false
        in: path
        name: inter-server-authentication-info-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Inter Server Authentication Info
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/password-inter-server-authentication-info-response'
                - $ref: '#/components/schemas/certificate-inter-server-authentication-info-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Inter Server Authentication Info does not exist
      security:
      - basicAuth: []
      tags:
      - inter-server-authentication-info
components:
  schemas:
    Enumserver-instance-serverInstanceTypeProp:
      type: string
      enum:
      - "ds"
      - "proxy"
      - "authorize"
      - "metrics"
      - "sync"
      description: >-
          Specifies the type of server installation.
    Enumserver-instance-preferredSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      - "starttls"
      description: >-
          Specifies the preferred mechanism to use for securing connections to the server.
    proxy-server-instance-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumproxy-server-instanceSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - serverInstanceName
      - clusterName
      - serverVersion
    Enumproxy-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
    metrics-engine-server-instance-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummetrics-engine-server-instanceSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - serverInstanceName
      - clusterName
      - serverVersion
    Enummetrics-engine-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
    authorize-server-instance-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumauthorize-server-instanceSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - serverInstanceName
      - clusterName
      - serverVersion
    Enumauthorize-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
    directory-server-instance-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdirectory-server-instanceSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          replicationSetName:
            type: string
            description: >-
                The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.
          loadBalancingAlgorithmName:
            type: array
            items:
              type: string
            description: >-
                The name of the configuration object for a load-balancing algorithm that should include this server.
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - serverInstanceName
      - clusterName
      - serverVersion
    Enumdirectory-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
    sync-server-instance-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsync-server-instanceSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - serverInstanceName
      - clusterName
      - serverVersion
    Enumsync-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
    Enumserver-instance-listener-ldap-connectionSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      - "starttls"
      description: >-
          Specifies the mechanism to use for securing connections to the server.
    Enumserver-instance-listener-purposeProp:
      type: string
      enum:
      - "mirrored-config"
      description: >-
          Identifies the purpose of this Server Instance Listener.
    ldap-server-instance-listener-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-server-instance-listenerSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance Listener
          serverLDAPPort:
            type: integer
            description: >-
                The TCP port number on which the LDAP server is listening.
          connectionSecurity:
            $ref: '#/components/schemas/Enumserver-instance-listener-ldap-connectionSecurityProp'
          listenerCertificate:
            type: string
            description: >-
                The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enumserver-instance-listener-purposeProp'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
    Enumldap-server-instance-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
    Enumserver-instance-listener-http-connectionSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      description: >-
          Specifies the mechanism to use for securing connections to the server.
    http-server-instance-listener-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhttp-server-instance-listenerSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Server Instance Listener
          listenAddress:
            type: string
            description: >-
                If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.
          serverHTTPPort:
            type: integer
            description: >-
                The TCP port number on which the HTTP server is listening.
          connectionSecurity:
            $ref: '#/components/schemas/Enumserver-instance-listener-http-connectionSecurityProp'
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enumserver-instance-listener-purposeProp'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
    Enumhttp-server-instance-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
    mac-secret-key-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummac-secret-keySchemaUrn'
          id:
            type: string
            description: >-
                Name of the Mac Secret Key
          macAlgorithmName:
            type: string
            description: >-
                The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.
          keyID:
            type: string
            description: >-
                The unique system-generated identifier for the Secret Key.
          isCompromised:
            type: boolean
            description: >-
                If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
          symmetricKey:
            type: array
            items:
              type: string
            description: >-
                The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.
          keyLengthBits:
            type: integer
            description: >-
                The length of the key in bits.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - keyID
      - keyLengthBits
    Enummac-secret-keySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
    cipher-secret-key-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcipher-secret-keySchemaUrn'
          id:
            type: string
            description: >-
                Name of the Cipher Secret Key
          cipherTransformationName:
            type: string
            description: >-
                The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.
          initializationVectorLengthBits:
            type: integer
            description: >-
                The initialization vector length of the cipher in bits.
          keyID:
            type: string
            description: >-
                The unique system-generated identifier for the Secret Key.
          isCompromised:
            type: boolean
            description: >-
                If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
          symmetricKey:
            type: array
            items:
              type: string
            description: >-
                The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.
          keyLengthBits:
            type: integer
            description: >-
                The length of the key in bits.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - keyID
      - keyLengthBits
    Enumcipher-secret-keySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
    Enuminter-server-authentication-info-authenticationTypeProp:
      type: string
      enum:
      - "simple"
      - "sasl-plain"
      description: >-
          Identifies the type of password authentication that will be used.
    Enuminter-server-authentication-info-purposeProp:
      type: string
      enum:
      - "mirrored-config"
      description: >-
          Identifies the purpose of this Inter Server Authentication Info.
    password-inter-server-authentication-info-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumpassword-inter-server-authentication-infoSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Inter Server Authentication Info
          authenticationType:
            $ref: '#/components/schemas/Enuminter-server-authentication-info-authenticationTypeProp'
          bindDN:
            type: string
            description: >-
                A DN of the username that should be used for the bind request.
          username:
            type: string
            description: >-
                The username that should be used for the bind request.
          password:
            type: string
            format: password
            description: >-
                The password for the username or bind-dn.
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enuminter-server-authentication-info-purposeProp'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - password
    Enumpassword-inter-server-authentication-infoSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
    certificate-inter-server-authentication-info-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcertificate-inter-server-authentication-infoSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Inter Server Authentication Info
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enuminter-server-authentication-info-purposeProp'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
    Enumcertificate-inter-server-authentication-infoSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
    server-instanceListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/proxy-server-instance-response'
            - $ref: '#/components/schemas/metrics-engine-server-instance-response'
            - $ref: '#/components/schemas/authorize-server-instance-response'
            - $ref: '#/components/schemas/directory-server-instance-response'
            - $ref: '#/components/schemas/sync-server-instance-response'
    server-instance-listenerListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/ldap-server-instance-listener-response'
            - $ref: '#/components/schemas/http-server-instance-listener-response'
    mac-secret-keyListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/mac-secret-key-response'
    cipher-secret-keyListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/cipher-secret-key-response'
    inter-server-authentication-infoListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/password-inter-server-authentication-info-response'
            - $ref: '#/components/schemas/certificate-inter-server-authentication-info-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
