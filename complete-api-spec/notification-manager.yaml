openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Notification Manager config object
  title: PingData Notification Manager Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access notification-managers
  name: notification-manager
paths:
  /notification-managers:
    post:
      summary: Add a new Notification Manager to the config
      operationId: add-notification-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-third-party-request'
        description: Create a new Notification Manager in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Notification Manager already exists
      security:
      - basicAuth: []
      tags:
      - location
  /notification-managers/{notification-manager-name}:
    delete:
      summary: Delete a Notification Manager
      operationId: delete-notification-manager
      parameters:
      - description: Name of the Notification Manager to be deleted
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
        "409":
          description: The Notification Manager cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single Notification Manager
      operationId: get-notification-manager
      parameters:
      - description: Name of the Notification Manager to be read
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing Notification Manager by name
      operationId: update-notification-manager
      parameters:
      - description: Name of the Notification Manager to be updated
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-notification-manager-request'
        description: Update an existing Notification Manager
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      tags:
      - location
components:
  schemas:
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    add-third-party-request:
      allOf:
      - type: object
        properties:
          managerName:
            description: Name of the new Notification Manager
            type: string
        required:
        - managerName
      - $ref: '#/components/schemas/third-party-shared'
    third-party-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Notification Manager
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-shared'
    third-party-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-partySchemaUrn'
        extensionClass:
          type: string
          description: The fully-qualified name of the Java class providing the logic for the Third Party Notification Manager.
        extensionArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Third Party Notification Manager. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this Notification Manager
        enabled:
          type: boolean
          description: Indicates whether this Notification Manager is enabled within the server.
        subscriptionBaseDN:
          type: string
          description: Specifies the DN of the entry below which subscription data is stored for this Notification Manager. This needs to be in the backend that has the data to be notified on, and must not be the same entry as the backend base DN. The subscription base DN entry does not need to exist as it will be created by the server.
        transactionNotification:
          $ref: '#/components/schemas/EnumtransactionNotificationProp'
        monitorEntriesEnabled:
          type: boolean
          description: Enables monitor entries for this Notification Manager.
      required:
      - extensionClass
      - enabled
      - subscriptionBaseDN
      - transactionNotification
    Enumthird-partySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:notification-manager:third-party"
    update-notification-manager-request:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    EnumtransactionNotificationProp:
      type: string
      enum:
      - "individual"
      - "matched-operations"
      - "all-operations"
      description: Specifies how the operations in an external transaction (e.g. a multi-update extended operation or an LDAP transaction) are notified for this Notification Manager.
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
