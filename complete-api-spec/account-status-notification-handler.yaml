openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Account Status Notification Handler config object
  title: PingData Account Status Notification Handler Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access account-status-notification-handlers
  name: account-status-notification-handler
paths:
  /account-status-notification-handlers:
    post:
      summary: Add a new Account Status Notification Handler to the config
      operationId: add-account-status-notification-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-smtp-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-groovy-scripted-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-admin-alert-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-error-log-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-multi-part-email-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-third-party-account-status-notification-handler-request'
        description: Create a new Account Status Notification Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Account Status Notification Handler already exists
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
  /account-status-notification-handlers/{account-status-notification-handler-name}:
    delete:
      summary: Delete a Account Status Notification Handler
      operationId: delete-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be deleted
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
        "409":
          description: The Account Status Notification Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
    get:
      summary: Returns a single Account Status Notification Handler
      operationId: get-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be read
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
    patch:
      summary: Update an existing Account Status Notification Handler by name
      operationId: update-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be updated
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Account Status Notification Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
components:
  schemas:
    add-smtp-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
    smtp-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    smtp-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsmtp-account-status-notification-handlerSchemaUrn'
        emailAddressAttributeType:
          type: array
          items:
            type: string
          description: >-
              Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
        emailAddressJSONField:
          type: string
          description: >-
              The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
        emailAddressJSONObjectFilter:
          type: string
          description: >-
              A JSON object filter that may be used to identify which email address value to use when sending the message.
        recipientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.
        sendMessageWithoutEndUserAddress:
          type: boolean
          description: >-
              Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).
        senderAddress:
          type: string
          description: >-
              Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.
        messageSubject:
          type: array
          items:
            type: string
          description: >-
              Specifies the subject that should be used for email messages generated by this account status notification handler.
        messageTemplateFile:
          type: array
          items:
            type: string
          description: >-
              Specifies the path to the file containing the message template to generate the email notification messages.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - sendMessageWithoutEndUserAddress
      - senderAddress
      - messageSubject
      - messageTemplateFile
      - enabled
    Enumsmtp-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
    add-groovy-scripted-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
    groovy-scripted-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    groovy-scripted-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-account-status-notification-handlerSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
    add-admin-alert-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
    admin-alert-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    admin-alert-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumadmin-alert-account-status-notification-handlerSchemaUrn'
        accountStatusNotificationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - accountStatusNotificationType
      - enabled
    Enumadmin-alert-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
    add-error-log-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
    error-log-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    error-log-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumerror-log-account-status-notification-handlerSchemaUrn'
        accountStatusNotificationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - accountStatusNotificationType
      - enabled
    Enumerror-log-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
    add-multi-part-email-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
    multi-part-email-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    multi-part-email-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummulti-part-email-account-status-notification-handlerSchemaUrn'
        accountTemporarilyFailureLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
        accountPermanentlyFailureLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
        accountIdleLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
        accountResetLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
        accountUnlockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).
        accountDisabledMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.
        accountEnabledMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.
        accountNotYetActiveMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
        accountExpiredMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
        passwordExpiredMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
        passwordExpiringMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
        passwordResetMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.
        passwordChangedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
        accountCreatedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
        accountUpdatedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.
        bindPasswordFailedValidationMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
        mustChangePasswordMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - enabled
    Enummulti-part-email-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
    add-third-party-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
    third-party-account-status-notification-handler-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
      - $ref: '#/components/schemas/meta'
    third-party-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-account-status-notification-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
    Enumaccount-status-notification-handler-accountStatusNotificationTypeProp:
      type: string
      enum:
      - "account-temporarily-locked"
      - "account-permanently-locked"
      - "account-unlocked"
      - "account-idle-locked"
      - "account-reset-locked"
      - "account-disabled"
      - "account-enabled"
      - "account-not-yet-active"
      - "account-expired"
      - "password-expired"
      - "password-expiring"
      - "password-reset"
      - "password-changed"
      - "account-created"
      - "account-updated"
      - "bind-password-failed-validation"
      - "must-change-password"
      description: >-
          The types of account status notifications that should result in administrative alerts.
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
