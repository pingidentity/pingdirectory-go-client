openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Result Code Map config object
  title: PingData Result Code Map Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-100/pd_ds_use_config_api
tags:
- description: Access result-code-maps
  name: result-code-map
paths:
  /result-code-maps:
    get:
      summary: Returns a list of all Result Code Map objects
      operationId: list-result-code-maps
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-mapListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - result-code-map
    post:
      summary: Add a new Result Code Map to the config
      operationId: add-result-code-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-result-code-map-request'
        description: Create a new Result Code Map in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Result Code Map already exists
      security:
      - basicAuth: []
      tags:
      - result-code-map
  /result-code-maps/{result-code-map-name}:
    delete:
      summary: Delete a Result Code Map
      operationId: delete-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
        "409":
          description: The Result Code Map cannot be deleted
      security:
      - basicAuth: []
      tags:
      - result-code-map
    get:
      summary: Returns a single Result Code Map
      operationId: get-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      tags:
      - result-code-map
    patch:
      summary: Update an existing Result Code Map by name
      operationId: update-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Result Code Map
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      tags:
      - result-code-map
components:
  schemas:
    add-result-code-map-request:
      allOf:
      - type: object
        properties:
          mapName:
            type: string
            description: >-
                Name of the new Result Code Map
      - $ref: '#/components/schemas/result-code-map-shared'
      required:
      - mapName
    result-code-map-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Result Code Map
      - $ref: '#/components/schemas/result-code-map-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    result-code-map-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumresult-code-mapSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Result Code Map
        bindAccountLockedResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a bind attempt fails because the user's account is locked as a result of too many failed authentication attempts.
        bindMissingUserResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a bind attempt fails because the target user entry does not exist in the server.
        bindMissingPasswordResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a password-based bind attempt fails because the target user entry does not have a password.
        serverErrorResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a generic error occurs within the server.
    Enumresult-code-mapSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-code-map"
    result-code-mapListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            $ref: '#/components/schemas/result-code-map-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
