openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Data Security Auditor config object
  title: PingData Data Security Auditor Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-93/pd_ds_use_config_api
tags:
- description: Access data-security-auditors
  name: data-security-auditor
paths:
  /data-security-auditors:
    post:
      summary: Add a new Data Security Auditor to the config
      operationId: add-data-security-auditor
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-expired-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-idle-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-disabled-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-weakly-encoded-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-privilege-data-security-auditor-request'
              - $ref: '#/components/schemas/add-account-usability-issues-data-security-auditor-request'
              - $ref: '#/components/schemas/add-locked-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-filter-data-security-auditor-request'
              - $ref: '#/components/schemas/add-account-validity-window-data-security-auditor-request'
              - $ref: '#/components/schemas/add-multiple-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-deprecated-password-storage-scheme-data-security-auditor-request'
              - $ref: '#/components/schemas/add-nonexistent-password-policy-data-security-auditor-request'
              - $ref: '#/components/schemas/add-access-control-data-security-auditor-request'
              - $ref: '#/components/schemas/add-third-party-data-security-auditor-request'
        description: Create a new Data Security Auditor in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Data Security Auditor already exists
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
  /data-security-auditors/{data-security-auditor-name}:
    delete:
      summary: Delete a Data Security Auditor
      operationId: delete-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
        "409":
          description: The Data Security Auditor cannot be deleted
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
    get:
      summary: Returns a single Data Security Auditor
      operationId: get-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
    patch:
      summary: Update an existing Data Security Auditor by name
      operationId: update-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Data Security Auditor
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
components:
  schemas:
    Enumdata-security-auditor-auditSeverityProp:
      type: string
      enum:
      - "error"
      - "warning"
      - "notice"
      - "verbose"
      description: >-
          Specifies the severity of events to include in the report.
    add-expired-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
      required:
      - auditorName
    expired-password-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    expired-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexpired-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        passwordEvaluationAge:
          type: string
          description: >-
              If set, the auditor will report all users with passwords older than the specified value even if password expiration is not enabled.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumexpired-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:expired-password"
    add-idle-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/idle-account-data-security-auditor-shared'
      required:
      - auditorName
    idle-account-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/idle-account-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    idle-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumidle-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        idleAccountWarningInterval:
          type: string
          description: >-
              The length of time to use as the warning interval for idle accounts. If the length of time since a user last authenticated is greater than the warning interval but less than the error interval (or if it is greater than the warning interval and no error interval is defined), then a warning will be generated for that account.
        idleAccountErrorInterval:
          type: string
          description: >-
              The length of time to use as the error interval for idle accounts. If the length of time since a user last authenticated is greater than the error interval, then an error will be generated for that account. If no error interval is defined, then only the warning interval will be used.
        neverLoggedInAccountWarningInterval:
          type: string
          description: >-
              The length of time to use as the warning interval for accounts that do not appear to have authenticated. If this is not specified, then the idle account warning interval will be used.
        neverLoggedInAccountErrorInterval:
          type: string
          description: >-
              The length of time to use as the error interval for accounts that do not appear to have authenticated. If this is not specified, then the never-logged-in warning interval will be used. The idle account warning and error intervals will be used if no never-logged-in interval is configured.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - idleAccountWarningInterval
    Enumidle-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:idle-account"
    add-disabled-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
      required:
      - auditorName
    disabled-account-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    disabled-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdisabled-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumdisabled-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:disabled-account"
    Enumdata-security-auditor-weakCryptEncodingProp:
      type: string
      enum:
      - "crypt"
      - "md5"
      - "sha-2-256"
      - "sha-2-512"
      description: >-
          Reporting on users with passwords encoded using the Crypt Password Storage scheme may be further limited by selecting one or more encoding mechanisms that are considered weak.
    add-weakly-encoded-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
      required:
      - auditorName
    weakly-encoded-password-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - weakPasswordStorageScheme
      - enabled
    weakly-encoded-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumweakly-encoded-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        weakPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              The password storage schemes that are considered weak. Users with any of the specified password storage schemes will be included in the report.
        weakCryptEncoding:
          type: array
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-weakCryptEncodingProp'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumweakly-encoded-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:weakly-encoded-password"
    Enumdata-security-auditor-includePrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          If defined, only entries with the specified privileges will be reported. By default, entries with any privilege assigned will be reported.
    add-privilege-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
      required:
      - auditorName
    privilege-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    privilege-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumprivilege-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includePrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-includePrivilegeProp'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumprivilege-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:privilege"
    add-account-usability-issues-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-shared'
      required:
      - auditorName
    account-usability-issues-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    account-usability-issues-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccount-usability-issues-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccount-usability-issues-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-usability-issues"
    add-locked-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
      required:
      - auditorName
    locked-account-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    locked-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocked-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        maximumIdleTime:
          type: string
          description: >-
              If set, users that have not authenticated for more than the specified time will be reported even if idle account lockout is not configured. Note that users may only be reported if the last login time tracking is enabled.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumlocked-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:locked-account"
    add-filter-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/filter-data-security-auditor-shared'
      required:
      - auditorName
    filter-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/filter-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - enabled
    filter-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfilter-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        filter:
          type: array
          items:
            type: string
          description: >-
              The filter to use to identify entries that should be reported. Multiple filters may be configured, and each reported entry will indicate which of these filter(s) matched that entry.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - reportFile
      - filter
    Enumfilter-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:filter"
    add-account-validity-window-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/account-validity-window-data-security-auditor-shared'
      required:
      - auditorName
    account-validity-window-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/account-validity-window-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    account-validity-window-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccount-validity-window-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        accountExpirationWarningInterval:
          type: string
          description: >-
              If set, the auditor will report all users with account expiration times are in the future, but are within the specified length of time away from the current time.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccount-validity-window-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-validity-window"
    add-multiple-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
      required:
      - auditorName
    multiple-password-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    multiple-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummultiple-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enummultiple-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:multiple-password"
    add-deprecated-password-storage-scheme-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-shared'
      required:
      - auditorName
    deprecated-password-storage-scheme-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    deprecated-password-storage-scheme-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdeprecated-password-storage-scheme-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumdeprecated-password-storage-scheme-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:deprecated-password-storage-scheme"
    add-nonexistent-password-policy-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-shared'
      required:
      - auditorName
    nonexistent-password-policy-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    nonexistent-password-policy-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnonexistent-password-policy-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumnonexistent-password-policy-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:nonexistent-password-policy"
    add-access-control-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
      required:
      - auditorName
    access-control-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - reportFile
      - enabled
    access-control-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccess-control-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccess-control-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:access-control"
    add-third-party-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            type: string
            description: >-
                Name of the new Data Security Auditor
      - $ref: '#/components/schemas/third-party-data-security-auditor-shared'
      required:
      - auditorName
    third-party-data-security-auditor-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Data Security Auditor
      - $ref: '#/components/schemas/third-party-data-security-auditor-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - enabled
    third-party-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-data-security-auditorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Data Security Auditor.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Data Security Auditor. Each configuration property should be given in the form 'name=value'.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - extensionClass
      - reportFile
    Enumthird-party-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
