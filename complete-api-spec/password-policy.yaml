openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Password Policy config object
  title: PingData Password Policy Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-92/pd_ds_use_config_api
tags:
- description: Access password-policies
  name: password-policy
paths:
  /password-policies:
    post:
      summary: Add a new Password Policy to the config
      operationId: add-password-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-password-policy-request'
        description: Create a new Password Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Policy already exists
      security:
      - basicAuth: []
      tags:
      - password-policy
  /password-policies/{password-policy-name}:
    delete:
      summary: Delete a Password Policy
      operationId: delete-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
        "409":
          description: The Password Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-policy
    get:
      summary: Returns a single Password Policy
      operationId: get-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      tags:
      - password-policy
    patch:
      summary: Update an existing Password Policy by name
      operationId: update-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      tags:
      - password-policy
components:
  schemas:
    Enumpassword-policy-stateUpdateFailurePolicyProp:
      type: string
      enum:
      - "ignore"
      - "reactive"
      - "proactive"
      description: >-
          Specifies how the server deals with the inability to update password policy state information during an authentication attempt.
    Enumpassword-policy-bindPasswordValidationFailureActionProp:
      type: string
      enum:
      - "reject-bind"
      - "force-password-change"
      - "generate-account-status-notification"
      description: >-
          Specifies the behavior that the server should exhibit if a bind password fails validation by one or more of the configured bind password validators.
    Enumpassword-policy-returnPasswordExpirationControlsProp:
      type: string
      enum:
      - "unless-password-policy-control-is-used"
      - "always"
      - "never"
      description: >-
          Indicates whether the server should return the password expiring and password expired response controls (as described in draft-vchu-ldap-pwd-policy).
    Enumpassword-policy-passwordRetirementBehaviorProp:
      type: string
      enum:
      - "retire-on-self-change"
      - "retire-on-administrative-reset"
      - "retire-on-request-with-control"
      description: >-
          Specifies the conditions under which the server may retire a user's current password in the course of setting a new password for that user (whether via a modify operation or a password modify extended operation).
    Enumpassword-policy-allowedPasswordResetTokenUseConditionProp:
      type: string
      enum:
      - "account-usable"
      - "password-expired"
      - "account-locked-due-to-failures"
      - "account-locked-due-to-idle-time-limit"
      - "account-locked-due-to-admin-reset-timeout"
      - "account-locked-due-to-validation-failure"
      description: >-
          The set of conditions under which a user governed by this Password Policy will be permitted to generate a password reset token via the deliver password reset token extended operation, and to use that token in lieu of the current password via the password modify extended operation.
    Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp:
      type: string
      enum:
      - "collapse-similar-attempts-on-the-same-date"
      - "maintain-every-attempt"
      - "update-at-most-once-per-day"
      description: >-
          The behavior that the server will exhibit when multiple similar authentication attempts (with the same values for the successful, authentication-method, client-ip-address, and failure-reason fields) are processed for an account.
    add-password-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            type: string
            description: >-
                Name of the new Password Policy
      - $ref: '#/components/schemas/password-policy-shared'
      required:
      - policyName
    password-policy-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Policy
      - $ref: '#/components/schemas/password-policy-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    password-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpassword-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Password Policy
        requireSecureAuthentication:
          type: boolean
          description: >-
              Indicates whether users with the associated password policy are required to authenticate in a secure manner.
        requireSecurePasswordChanges:
          type: boolean
          description: >-
              Indicates whether users with the associated password policy are required to change their password in a secure manner that does not expose the credentials.
        accountStatusNotificationHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the account status notification handlers that are used with the associated password storage scheme.
        stateUpdateFailurePolicy:
          $ref: '#/components/schemas/Enumpassword-policy-stateUpdateFailurePolicyProp'
        enableDebug:
          type: boolean
          description: >-
              Indicates whether to enable debugging for the password policy state.
        passwordAttribute:
          type: string
          description: >-
              Specifies the attribute type used to hold user passwords.
        defaultPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password storage schemes that are used to encode clear-text passwords for this password policy.
        deprecatedPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password storage schemes that are considered deprecated for this password policy.
        allowMultiplePasswordValues:
          type: boolean
          description: >-
              Indicates whether user entries can have multiple distinct values for the password attribute.
        allowPreEncodedPasswords:
          type: boolean
          description: >-
              Indicates whether users can change their passwords by providing a pre-encoded value.
        passwordValidator:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password validators that are used with the associated password storage scheme.
        bindPasswordValidator:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password validators that should be invoked for bind operations.
        minimumBindPasswordValidationFrequency:
          type: string
          description: >-
              Indicates how frequently password validation should be performed during bind operations for each user to whom this password policy is assigned.
        bindPasswordValidationFailureAction:
          $ref: '#/components/schemas/Enumpassword-policy-bindPasswordValidationFailureActionProp'
        passwordGenerator:
          type: string
          description: >-
              Specifies the name of the password generator that is used with the associated password policy.
        passwordHistoryCount:
          type: integer
          description: >-
              Specifies the maximum number of former passwords to maintain in the password history.
        passwordHistoryDuration:
          type: string
          description: >-
              Specifies the maximum length of time that passwords remain in the password history.
        minPasswordAge:
          type: string
          description: >-
              Specifies the minimum length of time after a password change before the user is allowed to change the password again.
        maxPasswordAge:
          type: string
          description: >-
              Specifies the maximum length of time that a user can continue using the same password before it must be changed (that is, the password expiration interval).
        passwordExpirationWarningInterval:
          type: string
          description: >-
              Specifies the maximum length of time before a user's password actually expires that the server begins to include warning notifications in bind responses for that user.
        expirePasswordsWithoutWarning:
          type: boolean
          description: >-
              Indicates whether the Directory Server allows a user's password to expire even if that user has never seen an expiration warning notification.
        returnPasswordExpirationControls:
          $ref: '#/components/schemas/Enumpassword-policy-returnPasswordExpirationControlsProp'
        allowExpiredPasswordChanges:
          type: boolean
          description: >-
              Indicates whether a user whose password is expired is still allowed to change that password using the password modify extended operation.
        graceLoginCount:
          type: integer
          description: >-
              Specifies the number of grace logins that a user is allowed after the account has expired to allow that user to choose a new password.
        requireChangeByTime:
          type: string
          description: >-
              Specifies the time by which all users with the associated password policy must change their passwords.
        lockoutFailureCount:
          type: integer
          description: >-
              Specifies the maximum number of authentication failures that a user is allowed before the account is locked out.
        lockoutDuration:
          type: string
          description: >-
              Specifies the length of time that an account is locked after too many authentication failures.
        lockoutFailureExpirationInterval:
          type: string
          description: >-
              Specifies the length of time before an authentication failure is no longer counted against a user for the purposes of account lockout.
        ignoreDuplicatePasswordFailures:
          type: boolean
          description: >-
              Indicates whether to ignore subsequent authentication failures using the same password as an earlier failed authentication attempt (within the time frame defined by the lockout failure expiration interval). If this option is "true", then multiple failed attempts using the same password will be considered only a single failure. If this option is "false", then any failure will be tracked regardless of whether it used the same password as an earlier attempt.
        failureLockoutAction:
          type: string
          description: >-
              The action that the server should take for authentication attempts that target a user with more than the configured number of outstanding authentication failures.
        idleLockoutInterval:
          type: string
          description: >-
              Specifies the maximum length of time that an account may remain idle (that is, the associated user does not authenticate to the server) before that user is locked out.
        allowUserPasswordChanges:
          type: boolean
          description: >-
              Indicates whether users can change their own passwords.
        passwordChangeRequiresCurrentPassword:
          type: boolean
          description: >-
              Indicates whether user password changes must use the password modify extended operation and must include the user's current password before the change is allowed.
        passwordRetirementBehavior:
          type: array
          items:
            $ref: '#/components/schemas/Enumpassword-policy-passwordRetirementBehaviorProp'
        maxRetiredPasswordAge:
          type: string
          description: >-
              Specifies the maximum length of time that a retired password should be considered valid and may be used to authenticate to the server.
        allowedPasswordResetTokenUseCondition:
          type: array
          items:
            $ref: '#/components/schemas/Enumpassword-policy-allowedPasswordResetTokenUseConditionProp'
        forceChangeOnAdd:
          type: boolean
          description: >-
              Indicates whether users are forced to change their passwords upon first authenticating to the Directory Server after their account has been created.
        forceChangeOnReset:
          type: boolean
          description: >-
              Indicates whether users are forced to change their passwords if they are reset by an administrator. If a user's password is changed by any other user, that is considered an administrative password reset.
        maxPasswordResetAge:
          type: string
          description: >-
              Specifies the maximum length of time that users have to change passwords after they have been reset by an administrator before they become locked.
        skipValidationForAdministrators:
          type: boolean
          description: >-
              Indicates whether passwords set by administrators are allowed to bypass the password validation process that is required for user password changes.
        maximumRecentLoginHistorySuccessfulAuthenticationCount:
          type: integer
          description: >-
              The maximum number of successful authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistorySuccessfulAuthenticationDuration:
          type: string
          description: >-
              The maximum age of successful authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistoryFailedAuthenticationCount:
          type: integer
          description: >-
              The maximum number of failed authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistoryFailedAuthenticationDuration:
          type: string
          description: >-
              The maximum age of failed authentication attempts to include in the recent login history for each account.
        recentLoginHistorySimilarAttemptBehavior:
          $ref: '#/components/schemas/Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp'
        lastLoginIPAddressAttribute:
          type: string
          description: >-
              Specifies the name or OID of the attribute type that is used to hold the IP address of the client from which the user last authenticated.
        lastLoginTimeAttribute:
          type: string
          description: >-
              Specifies the name or OID of the attribute type that is used to hold the last login time for users with the associated password policy.
        lastLoginTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to generate the last login time value for users with the associated password policy. Last login time values will be written using the UTC (also known as GMT, or Greenwich Mean Time) time zone.
        previousLastLoginTimeFormat:
          type: array
          items:
            type: string
          description: >-
              Specifies the format string(s) that might have been used with the last login time at any point in the past for users associated with the password policy.
      required:
      - passwordAttribute
      - defaultPasswordStorageScheme
    Enumpassword-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-policy"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
