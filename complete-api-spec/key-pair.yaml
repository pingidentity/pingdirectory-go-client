openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Key Pair config object
  title: PingData Key Pair Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-91/pd_ds_use_config_api
tags:
- description: Access key-pairs
  name: key-pair
paths:
  /key-pairs:
    post:
      summary: Add a new Key Pair to the config
      operationId: add-key-pair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-key-pair-request'
        description: Create a new Key Pair in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Key Pair already exists
      security:
      - basicAuth: []
      tags:
      - key-pair
  /key-pairs/{key-pair-name}:
    delete:
      summary: Delete a Key Pair
      operationId: delete-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
        "409":
          description: The Key Pair cannot be deleted
      security:
      - basicAuth: []
      tags:
      - key-pair
    get:
      summary: Returns a single Key Pair
      operationId: get-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      tags:
      - key-pair
    patch:
      summary: Update an existing Key Pair by name
      operationId: update-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Key Pair
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      tags:
      - key-pair
components:
  schemas:
    Enumkey-pair-keyAlgorithmProp:
      type: string
      enum:
      - "RSA_2048"
      - "RSA_3072"
      - "RSA_4096"
      - "EC_256"
      - "EC_384"
      - "EC_521"
      description: >-
          The algorithm name and the length in bits of the key, e.g. RSA_2048.
    add-key-pair-request:
      allOf:
      - type: object
        properties:
          pairName:
            type: string
            description: >-
                Name of the new Key Pair
      - $ref: '#/components/schemas/key-pair-shared'
      required:
      - pairName
    key-pair-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Key Pair
      - $ref: '#/components/schemas/key-pair-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - keyAlgorithm
    key-pair-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumkey-pairSchemaUrn'
        keyAlgorithm:
          $ref: '#/components/schemas/Enumkey-pair-keyAlgorithmProp'
        selfSignedCertificateValidity:
          type: string
          description: >-
              The validity period for a self-signed certificate. If not specified, the self-signed certificate will be valid for approximately 20 years. This is not used when importing an existing key-pair. The system will not automatically rotate expired certificates. It is up to the administrator to do that when that happens.
        subjectDN:
          type: string
          description: >-
              The DN that should be used as the subject for the self-signed certificate and certificate signing request. This is not used when importing an existing key-pair.
        certificateChain:
          type: string
          description: >-
              The PEM-encoded X.509 certificate chain.
        privateKey:
          type: string
          format: password
          description: >-
              The base64-encoded private key that is encrypted using the preferred encryption settings definition.
    Enumkey-pairSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-pair"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
