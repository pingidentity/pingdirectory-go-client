openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the REST Resource Type config object
  title: PingData REST Resource Type Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access rest-resource-types
  name: rest-resource-type
paths:
  /rest-resource-types:
    post:
      summary: Add a new REST Resource Type to the config
      operationId: add-rest-resource-type
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-user-rest-resource-type-request'
              - $ref: '#/components/schemas/add-generic-rest-resource-type-request'
              - $ref: '#/components/schemas/add-group-rest-resource-type-request'
        description: Create a new REST Resource Type in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The REST Resource Type already exists
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}:
    delete:
      summary: Delete a REST Resource Type
      operationId: delete-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
        "409":
          description: The REST Resource Type cannot be deleted
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
    get:
      summary: Returns a single REST Resource Type
      operationId: get-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
    patch:
      summary: Update an existing REST Resource Type by name
      operationId: update-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing REST Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes:
    post:
      summary: Add a new Delegated Admin Attribute to the config
      operationId: add-delegated-admin-attribute
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-certificate-delegated-admin-attribute-request'
              - $ref: '#/components/schemas/add-photo-delegated-admin-attribute-request'
              - $ref: '#/components/schemas/add-generic-delegated-admin-attribute-request'
        description: Create a new Delegated Admin Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Attribute already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes/{delegated-admin-attribute-name}:
    delete:
      summary: Delete a Delegated Admin Attribute
      operationId: delete-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute does not exist
        "409":
          description: The Delegated Admin Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
    get:
      summary: Returns a single Delegated Admin Attribute
      operationId: get-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
    patch:
      summary: Update an existing Delegated Admin Attribute by name
      operationId: update-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources:
    post:
      summary: Add a new Delegated Admin Correlated REST Resource to the config
      operationId: add-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-correlated-rest-resource-request'
        description: Create a new Delegated Admin Correlated REST Resource in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Correlated REST Resource already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources/{delegated-admin-correlated-rest-resource-name}:
    delete:
      summary: Delete a Delegated Admin Correlated REST Resource
      operationId: delete-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
        "409":
          description: The Delegated Admin Correlated REST Resource cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
    get:
      summary: Returns a single Delegated Admin Correlated REST Resource
      operationId: get-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
    patch:
      summary: Update an existing Delegated Admin Correlated REST Resource by name
      operationId: update-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Correlated REST Resource
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
components:
  schemas:
    add-user-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumuser-rest-resource-typeSchemaUrn'
        passwordAttributeCategory:
          type: string
          description: >-
              Specifies which attribute category the password belongs to.
        passwordDisplayOrderIndex:
          type: integer
          description: >-
              This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumuser-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
    add-generic-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/generic-rest-resource-type-shared'
    generic-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generic-rest-resource-type-shared'
    generic-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-rest-resource-typeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumgeneric-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
    add-group-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroup-rest-resource-typeSchemaUrn'
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumgroup-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
    add-certificate-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/certificate-delegated-admin-attribute-shared'
    certificate-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/certificate-delegated-admin-attribute-shared'
    certificate-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcertificate-delegated-admin-attributeSchemaUrn'
        allowedMIMEType:
          type: array
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-allowedMIMETypeProp'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
      - mutability
      - multiValued
      - displayOrderIndex
    Enumcertificate-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
    add-photo-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/photo-delegated-admin-attribute-shared'
    photo-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/photo-delegated-admin-attribute-shared'
    photo-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumphoto-delegated-admin-attributeSchemaUrn'
        allowedMIMEType:
          type: array
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-allowedMIMETypeProp'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
      - mutability
      - multiValued
      - displayOrderIndex
    Enumphoto-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
    add-generic-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/generic-delegated-admin-attribute-shared'
    generic-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generic-delegated-admin-attribute-shared'
    generic-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-delegated-admin-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        includeInSummary:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
      - mutability
      - multiValued
      - includeInSummary
      - displayOrderIndex
    Enumgeneric-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
    add-delegated-admin-correlated-rest-resource-request:
      allOf:
      - type: object
        properties:
          resourceName:
            description: Name of the new Delegated Admin Correlated REST Resource
            type: string
        required:
        - resourceName
      - $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-shared'
    delegated-admin-correlated-rest-resource-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Correlated REST Resource
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-shared'
    delegated-admin-correlated-rest-resource-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-correlated-rest-resourceSchemaUrn'
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Correlated REST Resource.
        correlatedRESTResource:
          type: string
          description: >-
              The REST Resource Type that will be linked to this REST Resource Type.
        primaryRESTResourceCorrelationAttribute:
          type: string
          description: >-
              The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.
        secondaryRESTResourceCorrelationAttribute:
          type: string
          description: >-
              The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.
        useSecondaryValueForLinking:
          type: boolean
          description: >-
              Indicates whether links should be created using the secondary correlation attribute value.
      required:
      - displayName
      - correlatedRESTResource
      - primaryRESTResourceCorrelationAttribute
      - secondaryRESTResourceCorrelationAttribute
    Enumdelegated-admin-correlated-rest-resourceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
    Enumdelegated-admin-attribute-mutabilityProp:
      type: string
      enum:
      - "read-only"
      - "read-write"
      description: >-
          Specifies the circumstances under which the values of the attribute can be written.
    Enumdelegated-admin-attribute-allowedMIMETypeProp:
      type: string
      enum:
      - "cer"
      - "crt"
      - "der"
      - "key"
      - "p7b"
      - "p7c"
      - "p8"
      - "p10"
      - "p12"
      - "pem"
      - "pfx"
      - "spc"
      description: >-
          The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
    Enumdelegated-admin-attribute-attributePresentationProp:
      type: string
      enum:
      - "default"
      - "custom"
      description: >-
          Indicates how the attribute is presented to the user of the app.
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
