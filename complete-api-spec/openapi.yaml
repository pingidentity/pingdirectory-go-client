openapi: 3.0.3
info:
  description: This is the PingData Configuration API
  title: PingData Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access the Global Configuration
  name: global-configuration
- description: Access id-token-validators
  name: id-token-validator
- description: Access the Plugin Root
  name: plugin-root
- description: Access sensitive-attributes
  name: sensitive-attribute
- description: Access access-token-validators
  name: access-token-validator
- description: Access the Root DSE Backend
  name: root-dse-backend
- description: Access log-field-mappings
  name: log-field-mapping
- description: Access password-generators
  name: password-generator
- description: Access otp-delivery-mechanisms
  name: otp-delivery-mechanism
- description: Access log-field-behaviors
  name: log-field-behavior
- description: Access server-instances
  name: server-instance
- description: Access log-file-rotation-listeners
  name: log-file-rotation-listener
- description: Access password-policies
  name: password-policy
- description: Access delegated-admin-rights
  name: delegated-admin-rights
- description: Access uncached-attribute-criteria
  name: uncached-attribute-criteria
- description: Access result-code-maps
  name: result-code-map
- description: Access synchronization-providers
  name: synchronization-provider
- description: Access connection-criteria
  name: connection-criteria
- description: Access the Root DN
  name: root-dn
- description: Access trust-manager-providers
  name: trust-manager-provider
- description: Access key-pairs
  name: key-pair
- description: Access request-criteria
  name: request-criteria
- description: Access log-rotation-policies
  name: log-rotation-policy
- description: Access log-field-syntaxes
  name: log-field-syntax
- description: Access extended-operation-handlers
  name: extended-operation-handler
- description: Access azure-authentication-methods
  name: azure-authentication-method
- description: Access passphrase-providers
  name: passphrase-provider
- description: Access soft-delete-policies
  name: soft-delete-policy
- description: Access recurring-task-chains
  name: recurring-task-chain
- description: Access gauges
  name: gauge
- description: Access search-reference-criteria
  name: search-reference-criteria
- description: Access entry-caches
  name: entry-cache
- description: Access the Access Control Handler
  name: access-control-handler
- description: Access alert-handlers
  name: alert-handler
- description: Access the License
  name: license
- description: Access cipher-stream-providers
  name: cipher-stream-provider
- description: Access vault-authentication-methods
  name: vault-authentication-method
- description: Access account-status-notification-handlers
  name: account-status-notification-handler
- description: Access server-groups
  name: server-group
- description: Access pass-through-authentication-handlers
  name: pass-through-authentication-handler
- description: Access consent-definitions
  name: consent-definition
- description: Access the Consent Service
  name: consent-service
- description: Access topology-admin-users
  name: topology-admin-user
- description: Access change-subscriptions
  name: change-subscription
- description: Access the LDAP SDK Debug Logger
  name: ldap-sdk-debug-logger
- description: Access conjur-authentication-methods
  name: conjur-authentication-method
- description: Access constructed-attributes
  name: constructed-attribute
- description: Access password-validators
  name: password-validator
- description: Access the Alarm Manager
  name: alarm-manager
- description: Access connection-handlers
  name: connection-handler
- description: Access web-application-extensions
  name: web-application-extension
- description: Access trusted-certificates
  name: trusted-certificate
- description: Access search-entry-criteria
  name: search-entry-criteria
- description: Access failure-lockout-actions
  name: failure-lockout-action
- description: Access certificate-mappers
  name: certificate-mapper
- description: Access log-publishers
  name: log-publisher
- description: Access replication-assurance-policies
  name: replication-assurance-policy
- description: Access key-manager-providers
  name: key-manager-provider
- description: Access external-servers
  name: external-server
- description: Access dn-maps
  name: dn-map
- description: Access change-subscription-handlers
  name: change-subscription-handler
- description: Access obscured-values
  name: obscured-value
- description: Access the Crypto Manager
  name: crypto-manager
- description: Access monitor-providers
  name: monitor-provider
- description: Access group-implementations
  name: group-implementation
- description: Access gauge-data-sources
  name: gauge-data-source
- description: Access backends
  name: backend
- description: Access attribute-syntaxes
  name: attribute-syntax
- description: Access the Work Queue
  name: work-queue
- description: Access uncached-entry-criteria
  name: uncached-entry-criteria
- description: Access http-servlet-extensions
  name: http-servlet-extension
- description: Access client-connection-policies
  name: client-connection-policy
- description: Access matching-rules
  name: matching-rule
- description: Access virtual-attributes
  name: virtual-attribute
- description: Access notification-managers
  name: notification-manager
- description: Access result-criteria
  name: result-criteria
- description: Access identity-mappers
  name: identity-mapper
- description: Access recurring-tasks
  name: recurring-task
- description: Access rest-resource-types
  name: rest-resource-type
- description: Access sasl-mechanism-handlers
  name: sasl-mechanism-handler
- description: Access data-security-auditors
  name: data-security-auditor
- description: Access monitoring-endpoints
  name: monitoring-endpoint
- description: Access password-storage-schemes
  name: password-storage-scheme
- description: Access the HTTP Configuration
  name: http-configuration
- description: Access json-attribute-constraints
  name: json-attribute-constraints
- description: Access http-servlet-cross-origin-policies
  name: http-servlet-cross-origin-policy
- description: Access delegated-admin-attribute-categories
  name: delegated-admin-attribute-category
- description: Access scim-schemas
  name: scim-schema
- description: Access locations
  name: location
- description: Access log-retention-policies
  name: log-retention-policy
- description: Access oauth-token-handlers
  name: oauth-token-handler
paths:
  /global-configuration:
    get:
      summary: Returns a single Global Configuration
      operationId: get-global-configuration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global-configuration-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Global Configuration does not exist
      security:
      - basicAuth: []
      tags:
      - global-configuration
    patch:
      summary: Update an existing Global Configuration by name
      operationId: update-global-configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Global Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global-configuration-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Global Configuration does not exist
      security:
      - basicAuth: []
      tags:
      - global-configuration
  /id-token-validators:
    post:
      summary: Add a new ID Token Validator to the config
      operationId: add-id-token-validator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-ping-one-id-token-validator-request'
              - $ref: '#/components/schemas/add-openid-connect-id-token-validator-request'
        description: Create a new ID Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The ID Token Validator already exists
      security:
      - basicAuth: []
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}:
    delete:
      summary: Delete a ID Token Validator
      operationId: delete-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
        "409":
          description: The ID Token Validator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - id-token-validator
    get:
      summary: Returns a single ID Token Validator
      operationId: get-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - id-token-validator
    patch:
      summary: Update an existing ID Token Validator by name
      operationId: update-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}/token-claim-validations:
    post:
      summary: Add a new Token Claim Validation to the config
      operationId: add-token-claim-validation
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-string-array-token-claim-validation-request'
              - $ref: '#/components/schemas/add-boolean-token-claim-validation-request'
              - $ref: '#/components/schemas/add-string-token-claim-validation-request'
        description: Create a new Token Claim Validation in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Token Claim Validation already exists
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
  /id-token-validators/{id-token-validator-name}/token-claim-validations/{token-claim-validation-name}:
    delete:
      summary: Delete a Token Claim Validation
      operationId: delete-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Token Claim Validation does not exist
        "409":
          description: The Token Claim Validation cannot be deleted
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
    get:
      summary: Returns a single Token Claim Validation
      operationId: get-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Token Claim Validation does not exist
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
    patch:
      summary: Update an existing Token Claim Validation by name
      operationId: update-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Token Claim Validation does not exist
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
  /plugin-root:
    get:
      summary: Returns a single Plugin Root
      operationId: get-plugin-root
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plugin-root-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Plugin Root does not exist
      security:
      - basicAuth: []
      tags:
      - plugin-root
    patch:
      summary: Update an existing Plugin Root by name
      operationId: update-plugin-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Plugin Root
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plugin-root-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Plugin Root does not exist
      security:
      - basicAuth: []
      tags:
      - plugin-root
  /plugin-root/plugins:
    post:
      summary: Add a new Plugin to the config
      operationId: add-plugin
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-internal-search-rate-plugin-request'
              - $ref: '#/components/schemas/add-modifiable-password-policy-state-plugin-request'
              - $ref: '#/components/schemas/add-seven-bit-clean-plugin-request'
              - $ref: '#/components/schemas/add-clean-up-expired-pingfederate-persistent-access-grants-plugin-request'
              - $ref: '#/components/schemas/add-periodic-gc-plugin-request'
              - $ref: '#/components/schemas/add-ping-one-pass-through-authentication-plugin-request'
              - $ref: '#/components/schemas/add-search-shutdown-plugin-request'
              - $ref: '#/components/schemas/add-periodic-stats-logger-plugin-request'
              - $ref: '#/components/schemas/add-purge-expired-data-plugin-request'
              - $ref: '#/components/schemas/add-sub-operation-timing-plugin-request'
              - $ref: '#/components/schemas/add-third-party-plugin-request'
              - $ref: '#/components/schemas/add-pass-through-authentication-plugin-request'
              - $ref: '#/components/schemas/add-dn-mapper-plugin-request'
              - $ref: '#/components/schemas/add-referral-on-update-plugin-request'
              - $ref: '#/components/schemas/add-simple-to-external-bind-plugin-request'
              - $ref: '#/components/schemas/add-snmp-subagent-plugin-request'
              - $ref: '#/components/schemas/add-clean-up-inactive-pingfederate-persistent-sessions-plugin-request'
              - $ref: '#/components/schemas/add-composed-attribute-plugin-request'
              - $ref: '#/components/schemas/add-attribute-mapper-plugin-request'
              - $ref: '#/components/schemas/add-delay-plugin-request'
              - $ref: '#/components/schemas/add-clean-up-expired-pingfederate-persistent-sessions-plugin-request'
              - $ref: '#/components/schemas/add-groovy-scripted-plugin-request'
              - $ref: '#/components/schemas/add-pluggable-pass-through-authentication-plugin-request'
              - $ref: '#/components/schemas/add-referential-integrity-plugin-request'
              - $ref: '#/components/schemas/add-unique-attribute-plugin-request'
        description: Create a new Plugin in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/internal-search-rate-plugin-response'
                - $ref: '#/components/schemas/modifiable-password-policy-state-plugin-response'
                - $ref: '#/components/schemas/seven-bit-clean-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-access-grants-plugin-response'
                - $ref: '#/components/schemas/periodic-gc-plugin-response'
                - $ref: '#/components/schemas/ping-one-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/search-shutdown-plugin-response'
                - $ref: '#/components/schemas/periodic-stats-logger-plugin-response'
                - $ref: '#/components/schemas/purge-expired-data-plugin-response'
                - $ref: '#/components/schemas/sub-operation-timing-plugin-response'
                - $ref: '#/components/schemas/third-party-plugin-response'
                - $ref: '#/components/schemas/pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/dn-mapper-plugin-response'
                - $ref: '#/components/schemas/referral-on-update-plugin-response'
                - $ref: '#/components/schemas/simple-to-external-bind-plugin-response'
                - $ref: '#/components/schemas/snmp-subagent-plugin-response'
                - $ref: '#/components/schemas/clean-up-inactive-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/composed-attribute-plugin-response'
                - $ref: '#/components/schemas/attribute-mapper-plugin-response'
                - $ref: '#/components/schemas/delay-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/groovy-scripted-plugin-response'
                - $ref: '#/components/schemas/pluggable-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/referential-integrity-plugin-response'
                - $ref: '#/components/schemas/unique-attribute-plugin-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Plugin already exists
      security:
      - basicAuth: []
      tags:
      - plugin
  /plugin-root/plugins/{plugin-name}:
    delete:
      summary: Delete a Plugin
      operationId: delete-plugin
      parameters:
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Plugin does not exist
        "409":
          description: The Plugin cannot be deleted
      security:
      - basicAuth: []
      tags:
      - plugin
    get:
      summary: Returns a single Plugin
      operationId: get-plugin
      parameters:
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/last-access-time-plugin-response'
                - $ref: '#/components/schemas/stats-collector-plugin-response'
                - $ref: '#/components/schemas/internal-search-rate-plugin-response'
                - $ref: '#/components/schemas/modifiable-password-policy-state-plugin-response'
                - $ref: '#/components/schemas/seven-bit-clean-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-access-grants-plugin-response'
                - $ref: '#/components/schemas/periodic-gc-plugin-response'
                - $ref: '#/components/schemas/ping-one-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/changelog-password-encryption-plugin-response'
                - $ref: '#/components/schemas/processing-time-histogram-plugin-response'
                - $ref: '#/components/schemas/search-shutdown-plugin-response'
                - $ref: '#/components/schemas/periodic-stats-logger-plugin-response'
                - $ref: '#/components/schemas/purge-expired-data-plugin-response'
                - $ref: '#/components/schemas/change-subscription-notification-plugin-response'
                - $ref: '#/components/schemas/sub-operation-timing-plugin-response'
                - $ref: '#/components/schemas/third-party-plugin-response'
                - $ref: '#/components/schemas/encrypt-attribute-values-plugin-response'
                - $ref: '#/components/schemas/pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/dn-mapper-plugin-response'
                - $ref: '#/components/schemas/monitor-history-plugin-response'
                - $ref: '#/components/schemas/referral-on-update-plugin-response'
                - $ref: '#/components/schemas/simple-to-external-bind-plugin-response'
                - $ref: '#/components/schemas/custom-plugin-response'
                - $ref: '#/components/schemas/snmp-subagent-plugin-response'
                - $ref: '#/components/schemas/password-policy-import-plugin-response'
                - $ref: '#/components/schemas/profiler-plugin-response'
                - $ref: '#/components/schemas/clean-up-inactive-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/composed-attribute-plugin-response'
                - $ref: '#/components/schemas/ldap-result-code-tracker-plugin-response'
                - $ref: '#/components/schemas/attribute-mapper-plugin-response'
                - $ref: '#/components/schemas/delay-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/groovy-scripted-plugin-response'
                - $ref: '#/components/schemas/last-mod-plugin-response'
                - $ref: '#/components/schemas/pluggable-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/referential-integrity-plugin-response'
                - $ref: '#/components/schemas/unique-attribute-plugin-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Plugin does not exist
      security:
      - basicAuth: []
      tags:
      - plugin
    patch:
      summary: Update an existing Plugin by name
      operationId: update-plugin
      parameters:
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Plugin
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/last-access-time-plugin-response'
                - $ref: '#/components/schemas/stats-collector-plugin-response'
                - $ref: '#/components/schemas/internal-search-rate-plugin-response'
                - $ref: '#/components/schemas/modifiable-password-policy-state-plugin-response'
                - $ref: '#/components/schemas/seven-bit-clean-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-access-grants-plugin-response'
                - $ref: '#/components/schemas/periodic-gc-plugin-response'
                - $ref: '#/components/schemas/ping-one-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/changelog-password-encryption-plugin-response'
                - $ref: '#/components/schemas/processing-time-histogram-plugin-response'
                - $ref: '#/components/schemas/search-shutdown-plugin-response'
                - $ref: '#/components/schemas/periodic-stats-logger-plugin-response'
                - $ref: '#/components/schemas/purge-expired-data-plugin-response'
                - $ref: '#/components/schemas/change-subscription-notification-plugin-response'
                - $ref: '#/components/schemas/sub-operation-timing-plugin-response'
                - $ref: '#/components/schemas/third-party-plugin-response'
                - $ref: '#/components/schemas/encrypt-attribute-values-plugin-response'
                - $ref: '#/components/schemas/pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/dn-mapper-plugin-response'
                - $ref: '#/components/schemas/monitor-history-plugin-response'
                - $ref: '#/components/schemas/referral-on-update-plugin-response'
                - $ref: '#/components/schemas/simple-to-external-bind-plugin-response'
                - $ref: '#/components/schemas/custom-plugin-response'
                - $ref: '#/components/schemas/snmp-subagent-plugin-response'
                - $ref: '#/components/schemas/password-policy-import-plugin-response'
                - $ref: '#/components/schemas/profiler-plugin-response'
                - $ref: '#/components/schemas/clean-up-inactive-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/composed-attribute-plugin-response'
                - $ref: '#/components/schemas/ldap-result-code-tracker-plugin-response'
                - $ref: '#/components/schemas/attribute-mapper-plugin-response'
                - $ref: '#/components/schemas/delay-plugin-response'
                - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-sessions-plugin-response'
                - $ref: '#/components/schemas/groovy-scripted-plugin-response'
                - $ref: '#/components/schemas/last-mod-plugin-response'
                - $ref: '#/components/schemas/pluggable-pass-through-authentication-plugin-response'
                - $ref: '#/components/schemas/referential-integrity-plugin-response'
                - $ref: '#/components/schemas/unique-attribute-plugin-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Plugin does not exist
      security:
      - basicAuth: []
      tags:
      - plugin
  /plugin-root/plugins/{plugin-name}/custom-logged-stats:
    post:
      summary: Add a new Custom Logged Stats to the config
      operationId: add-custom-logged-stats
      parameters:
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-custom-logged-stats-request'
        description: Create a new Custom Logged Stats in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-logged-stats-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Custom Logged Stats already exists
      security:
      - basicAuth: []
      tags:
      - custom-logged-stats
  /plugin-root/plugins/{plugin-name}/custom-logged-stats/{custom-logged-stats-name}:
    delete:
      summary: Delete a Custom Logged Stats
      operationId: delete-custom-logged-stats
      parameters:
      - description: Name of the Custom Logged Stats
        explode: false
        in: path
        name: custom-logged-stats-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Custom Logged Stats does not exist
        "409":
          description: The Custom Logged Stats cannot be deleted
      security:
      - basicAuth: []
      tags:
      - custom-logged-stats
    get:
      summary: Returns a single Custom Logged Stats
      operationId: get-custom-logged-stats
      parameters:
      - description: Name of the Custom Logged Stats
        explode: false
        in: path
        name: custom-logged-stats-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-logged-stats-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Custom Logged Stats does not exist
      security:
      - basicAuth: []
      tags:
      - custom-logged-stats
    patch:
      summary: Update an existing Custom Logged Stats by name
      operationId: update-custom-logged-stats
      parameters:
      - description: Name of the Custom Logged Stats
        explode: false
        in: path
        name: custom-logged-stats-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Plugin
        explode: false
        in: path
        name: plugin-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Custom Logged Stats
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/custom-logged-stats-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Custom Logged Stats does not exist
      security:
      - basicAuth: []
      tags:
      - custom-logged-stats
  /sensitive-attributes:
    post:
      summary: Add a new Sensitive Attribute to the config
      operationId: add-sensitive-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-sensitive-attribute-request'
        description: Create a new Sensitive Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Sensitive Attribute already exists
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
  /sensitive-attributes/{sensitive-attribute-name}:
    delete:
      summary: Delete a Sensitive Attribute
      operationId: delete-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
        "409":
          description: The Sensitive Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
    get:
      summary: Returns a single Sensitive Attribute
      operationId: get-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
    patch:
      summary: Update an existing Sensitive Attribute by name
      operationId: update-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Sensitive Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - sensitive-attribute
  /access-token-validators:
    post:
      summary: Add a new Access Token Validator to the config
      operationId: add-access-token-validator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-ping-federate-access-token-validator-request'
              - $ref: '#/components/schemas/add-jwt-access-token-validator-request'
              - $ref: '#/components/schemas/add-mock-access-token-validator-request'
              - $ref: '#/components/schemas/add-third-party-access-token-validator-request'
        description: Create a new Access Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-federate-access-token-validator-response'
                - $ref: '#/components/schemas/jwt-access-token-validator-response'
                - $ref: '#/components/schemas/mock-access-token-validator-response'
                - $ref: '#/components/schemas/third-party-access-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Access Token Validator already exists
      security:
      - basicAuth: []
      tags:
      - access-token-validator
  /access-token-validators/{access-token-validator-name}:
    delete:
      summary: Delete a Access Token Validator
      operationId: delete-access-token-validator
      parameters:
      - description: Name of the Access Token Validator
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Token Validator does not exist
        "409":
          description: The Access Token Validator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - access-token-validator
    get:
      summary: Returns a single Access Token Validator
      operationId: get-access-token-validator
      parameters:
      - description: Name of the Access Token Validator
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-federate-access-token-validator-response'
                - $ref: '#/components/schemas/jwt-access-token-validator-response'
                - $ref: '#/components/schemas/mock-access-token-validator-response'
                - $ref: '#/components/schemas/third-party-access-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - access-token-validator
    patch:
      summary: Update an existing Access Token Validator by name
      operationId: update-access-token-validator
      parameters:
      - description: Name of the Access Token Validator
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Access Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-federate-access-token-validator-response'
                - $ref: '#/components/schemas/jwt-access-token-validator-response'
                - $ref: '#/components/schemas/mock-access-token-validator-response'
                - $ref: '#/components/schemas/third-party-access-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Access Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - access-token-validator
  /root-dse-backend:
    get:
      summary: Returns a single Root DSE Backend
      operationId: get-root-dse-backend
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dse-backend-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DSE Backend does not exist
      security:
      - basicAuth: []
      tags:
      - root-dse-backend
    patch:
      summary: Update an existing Root DSE Backend by name
      operationId: update-root-dse-backend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Root DSE Backend
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dse-backend-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Root DSE Backend does not exist
      security:
      - basicAuth: []
      tags:
      - root-dse-backend
  /log-field-mappings:
    post:
      summary: Add a new Log Field Mapping to the config
      operationId: add-log-field-mapping
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-access-log-field-mapping-request'
              - $ref: '#/components/schemas/add-error-log-field-mapping-request'
        description: Create a new Log Field Mapping in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/access-log-field-mapping-response'
                - $ref: '#/components/schemas/error-log-field-mapping-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Field Mapping already exists
      security:
      - basicAuth: []
      tags:
      - log-field-mapping
  /log-field-mappings/{log-field-mapping-name}:
    delete:
      summary: Delete a Log Field Mapping
      operationId: delete-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Mapping does not exist
        "409":
          description: The Log Field Mapping cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-field-mapping
    get:
      summary: Returns a single Log Field Mapping
      operationId: get-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/access-log-field-mapping-response'
                - $ref: '#/components/schemas/error-log-field-mapping-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Mapping does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-mapping
    patch:
      summary: Update an existing Log Field Mapping by name
      operationId: update-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Mapping
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/access-log-field-mapping-response'
                - $ref: '#/components/schemas/error-log-field-mapping-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Mapping does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-mapping
  /password-generators:
    post:
      summary: Add a new Password Generator to the config
      operationId: add-password-generator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-random-password-generator-request'
              - $ref: '#/components/schemas/add-groovy-scripted-password-generator-request'
              - $ref: '#/components/schemas/add-passphrase-password-generator-request'
              - $ref: '#/components/schemas/add-third-party-password-generator-request'
        description: Create a new Password Generator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/random-password-generator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-generator-response'
                - $ref: '#/components/schemas/passphrase-password-generator-response'
                - $ref: '#/components/schemas/third-party-password-generator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Generator already exists
      security:
      - basicAuth: []
      tags:
      - password-generator
  /password-generators/{password-generator-name}:
    delete:
      summary: Delete a Password Generator
      operationId: delete-password-generator
      parameters:
      - description: Name of the Password Generator
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Generator does not exist
        "409":
          description: The Password Generator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-generator
    get:
      summary: Returns a single Password Generator
      operationId: get-password-generator
      parameters:
      - description: Name of the Password Generator
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/random-password-generator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-generator-response'
                - $ref: '#/components/schemas/passphrase-password-generator-response'
                - $ref: '#/components/schemas/third-party-password-generator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Generator does not exist
      security:
      - basicAuth: []
      tags:
      - password-generator
    patch:
      summary: Update an existing Password Generator by name
      operationId: update-password-generator
      parameters:
      - description: Name of the Password Generator
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Generator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/random-password-generator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-generator-response'
                - $ref: '#/components/schemas/passphrase-password-generator-response'
                - $ref: '#/components/schemas/third-party-password-generator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Generator does not exist
      security:
      - basicAuth: []
      tags:
      - password-generator
  /otp-delivery-mechanisms:
    post:
      summary: Add a new OTP Delivery Mechanism to the config
      operationId: add-otp-delivery-mechanism
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-twilio-otp-delivery-mechanism-request'
              - $ref: '#/components/schemas/add-email-otp-delivery-mechanism-request'
              - $ref: '#/components/schemas/add-third-party-otp-delivery-mechanism-request'
        description: Create a new OTP Delivery Mechanism in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/email-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The OTP Delivery Mechanism already exists
      security:
      - basicAuth: []
      tags:
      - otp-delivery-mechanism
  /otp-delivery-mechanisms/{otp-delivery-mechanism-name}:
    delete:
      summary: Delete a OTP Delivery Mechanism
      operationId: delete-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OTP Delivery Mechanism does not exist
        "409":
          description: The OTP Delivery Mechanism cannot be deleted
      security:
      - basicAuth: []
      tags:
      - otp-delivery-mechanism
    get:
      summary: Returns a single OTP Delivery Mechanism
      operationId: get-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/email-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OTP Delivery Mechanism does not exist
      security:
      - basicAuth: []
      tags:
      - otp-delivery-mechanism
    patch:
      summary: Update an existing OTP Delivery Mechanism by name
      operationId: update-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing OTP Delivery Mechanism
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/email-otp-delivery-mechanism-response'
                - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The OTP Delivery Mechanism does not exist
      security:
      - basicAuth: []
      tags:
      - otp-delivery-mechanism
  /log-field-behaviors:
    post:
      summary: Add a new Log Field Behavior to the config
      operationId: add-log-field-behavior
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-text-access-log-field-behavior-request'
              - $ref: '#/components/schemas/add-json-formatted-access-log-field-behavior-request'
        description: Create a new Log Field Behavior in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/text-access-log-field-behavior-response'
                - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Field Behavior already exists
      security:
      - basicAuth: []
      tags:
      - log-field-behavior
  /log-field-behaviors/{log-field-behavior-name}:
    delete:
      summary: Delete a Log Field Behavior
      operationId: delete-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Behavior does not exist
        "409":
          description: The Log Field Behavior cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-field-behavior
    get:
      summary: Returns a single Log Field Behavior
      operationId: get-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/text-access-log-field-behavior-response'
                - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Behavior does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-behavior
    patch:
      summary: Update an existing Log Field Behavior by name
      operationId: update-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Behavior
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/text-access-log-field-behavior-response'
                - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Behavior does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-behavior
  /server-instances/{server-instance-name}:
    get:
      summary: Returns a single Server Instance
      operationId: get-server-instance
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/proxy-server-instance-response'
                - $ref: '#/components/schemas/metrics-engine-server-instance-response'
                - $ref: '#/components/schemas/authorize-server-instance-response'
                - $ref: '#/components/schemas/directory-server-instance-response'
                - $ref: '#/components/schemas/sync-server-instance-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance
    patch:
      summary: Update an existing Server Instance by name
      operationId: update-server-instance
      parameters:
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Instance
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/proxy-server-instance-response'
                - $ref: '#/components/schemas/metrics-engine-server-instance-response'
                - $ref: '#/components/schemas/authorize-server-instance-response'
                - $ref: '#/components/schemas/directory-server-instance-response'
                - $ref: '#/components/schemas/sync-server-instance-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}:
    get:
      summary: Returns a single Server Instance Listener
      operationId: get-server-instance-listener
      parameters:
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-server-instance-listener-response'
                - $ref: '#/components/schemas/http-server-instance-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Instance Listener does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance-listener
    patch:
      summary: Update an existing Server Instance Listener by name
      operationId: update-server-instance-listener
      parameters:
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Instance Listener
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-server-instance-listener-response'
                - $ref: '#/components/schemas/http-server-instance-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Instance Listener does not exist
      security:
      - basicAuth: []
      tags:
      - server-instance-listener
  /server-instances/{server-instance-name}/mac-secret-keys/{mac-secret-key-name}:
    get:
      summary: Returns a single Mac Secret Key
      operationId: get-mac-secret-key
      parameters:
      - description: Name of the Mac Secret Key
        explode: false
        in: path
        name: mac-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mac-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Mac Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - mac-secret-key
    patch:
      summary: Update an existing Mac Secret Key by name
      operationId: update-mac-secret-key
      parameters:
      - description: Name of the Mac Secret Key
        explode: false
        in: path
        name: mac-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Mac Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/mac-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Mac Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - mac-secret-key
  /server-instances/{server-instance-name}/cipher-secret-keys/{cipher-secret-key-name}:
    get:
      summary: Returns a single Cipher Secret Key
      operationId: get-cipher-secret-key
      parameters:
      - description: Name of the Cipher Secret Key
        explode: false
        in: path
        name: cipher-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cipher-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-secret-key
    patch:
      summary: Update an existing Cipher Secret Key by name
      operationId: update-cipher-secret-key
      parameters:
      - description: Name of the Cipher Secret Key
        explode: false
        in: path
        name: cipher-secret-key-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Cipher Secret Key
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/cipher-secret-key-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Cipher Secret Key does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-secret-key
  /server-instances/{server-instance-name}/server-instance-listeners/{server-instance-listener-name}/inter-server-authentication-info/{inter-server-authentication-info-name}:
    get:
      summary: Returns a single Inter Server Authentication Info
      operationId: get-inter-server-authentication-info
      parameters:
      - description: Name of the Inter Server Authentication Info
        explode: false
        in: path
        name: inter-server-authentication-info-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/password-inter-server-authentication-info-response'
                - $ref: '#/components/schemas/certificate-inter-server-authentication-info-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Inter Server Authentication Info does not exist
      security:
      - basicAuth: []
      tags:
      - inter-server-authentication-info
    patch:
      summary: Update an existing Inter Server Authentication Info by name
      operationId: update-inter-server-authentication-info
      parameters:
      - description: Name of the Inter Server Authentication Info
        explode: false
        in: path
        name: inter-server-authentication-info-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance Listener
        explode: false
        in: path
        name: server-instance-listener-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Server Instance
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Inter Server Authentication Info
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/password-inter-server-authentication-info-response'
                - $ref: '#/components/schemas/certificate-inter-server-authentication-info-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Inter Server Authentication Info does not exist
      security:
      - basicAuth: []
      tags:
      - inter-server-authentication-info
  /log-file-rotation-listeners:
    post:
      summary: Add a new Log File Rotation Listener to the config
      operationId: add-log-file-rotation-listener
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-summarize-log-file-rotation-listener-request'
              - $ref: '#/components/schemas/add-copy-log-file-rotation-listener-request'
              - $ref: '#/components/schemas/add-third-party-log-file-rotation-listener-request'
        description: Create a new Log File Rotation Listener in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/summarize-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/copy-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/third-party-log-file-rotation-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log File Rotation Listener already exists
      security:
      - basicAuth: []
      tags:
      - log-file-rotation-listener
  /log-file-rotation-listeners/{log-file-rotation-listener-name}:
    delete:
      summary: Delete a Log File Rotation Listener
      operationId: delete-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log File Rotation Listener does not exist
        "409":
          description: The Log File Rotation Listener cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-file-rotation-listener
    get:
      summary: Returns a single Log File Rotation Listener
      operationId: get-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/summarize-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/copy-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/third-party-log-file-rotation-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log File Rotation Listener does not exist
      security:
      - basicAuth: []
      tags:
      - log-file-rotation-listener
    patch:
      summary: Update an existing Log File Rotation Listener by name
      operationId: update-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log File Rotation Listener
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/summarize-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/copy-log-file-rotation-listener-response'
                - $ref: '#/components/schemas/third-party-log-file-rotation-listener-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log File Rotation Listener does not exist
      security:
      - basicAuth: []
      tags:
      - log-file-rotation-listener
  /password-policies:
    post:
      summary: Add a new Password Policy to the config
      operationId: add-password-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-password-policy-request'
        description: Create a new Password Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Policy already exists
      security:
      - basicAuth: []
      tags:
      - password-policy
  /password-policies/{password-policy-name}:
    delete:
      summary: Delete a Password Policy
      operationId: delete-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
        "409":
          description: The Password Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-policy
    get:
      summary: Returns a single Password Policy
      operationId: get-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      tags:
      - password-policy
    patch:
      summary: Update an existing Password Policy by name
      operationId: update-password-policy
      parameters:
      - description: Name of the Password Policy
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      tags:
      - password-policy
  /delegated-admin-rights:
    post:
      summary: Add a new Delegated Admin Rights to the config
      operationId: add-delegated-admin-rights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-rights-request'
        description: Create a new Delegated Admin Rights in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Rights already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-rights
  /delegated-admin-rights/{delegated-admin-rights-name}:
    delete:
      summary: Delete a Delegated Admin Rights
      operationId: delete-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Rights does not exist
        "409":
          description: The Delegated Admin Rights cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-rights
    get:
      summary: Returns a single Delegated Admin Rights
      operationId: get-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Rights does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-rights
    patch:
      summary: Update an existing Delegated Admin Rights by name
      operationId: update-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Rights
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Rights does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-rights
  /delegated-admin-rights/{delegated-admin-rights-name}/delegated-admin-resource-rights:
    post:
      summary: Add a new Delegated Admin Resource Rights to the config
      operationId: add-delegated-admin-resource-rights
      parameters:
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-resource-rights-request'
        description: Create a new Delegated Admin Resource Rights in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-resource-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Resource Rights already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-resource-rights
  /delegated-admin-rights/{delegated-admin-rights-name}/delegated-admin-resource-rights/{delegated-admin-resource-rights-name}:
    delete:
      summary: Delete a Delegated Admin Resource Rights
      operationId: delete-delegated-admin-resource-rights
      parameters:
      - description: Name of the Delegated Admin Resource Rights
        explode: false
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Resource Rights does not exist
        "409":
          description: The Delegated Admin Resource Rights cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-resource-rights
    get:
      summary: Returns a single Delegated Admin Resource Rights
      operationId: get-delegated-admin-resource-rights
      parameters:
      - description: Name of the Delegated Admin Resource Rights
        explode: false
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-resource-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Resource Rights does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-resource-rights
    patch:
      summary: Update an existing Delegated Admin Resource Rights by name
      operationId: update-delegated-admin-resource-rights
      parameters:
      - description: Name of the Delegated Admin Resource Rights
        explode: false
        in: path
        name: delegated-admin-resource-rights-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Delegated Admin Rights
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Resource Rights
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-resource-rights-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Resource Rights does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-resource-rights
  /uncached-attribute-criteria:
    post:
      summary: Add a new Uncached Attribute Criteria to the config
      operationId: add-uncached-attribute-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-default-uncached-attribute-criteria-request'
              - $ref: '#/components/schemas/add-groovy-scripted-uncached-attribute-criteria-request'
              - $ref: '#/components/schemas/add-simple-uncached-attribute-criteria-request'
              - $ref: '#/components/schemas/add-third-party-uncached-attribute-criteria-request'
        description: Create a new Uncached Attribute Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/simple-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Uncached Attribute Criteria already exists
      security:
      - basicAuth: []
      tags:
      - uncached-attribute-criteria
  /uncached-attribute-criteria/{uncached-attribute-criteria-name}:
    delete:
      summary: Delete a Uncached Attribute Criteria
      operationId: delete-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Attribute Criteria does not exist
        "409":
          description: The Uncached Attribute Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - uncached-attribute-criteria
    get:
      summary: Returns a single Uncached Attribute Criteria
      operationId: get-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/simple-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Attribute Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-attribute-criteria
    patch:
      summary: Update an existing Uncached Attribute Criteria by name
      operationId: update-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Uncached Attribute Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/simple-uncached-attribute-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Uncached Attribute Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-attribute-criteria
  /result-code-maps:
    post:
      summary: Add a new Result Code Map to the config
      operationId: add-result-code-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-result-code-map-request'
        description: Create a new Result Code Map in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Result Code Map already exists
      security:
      - basicAuth: []
      tags:
      - result-code-map
  /result-code-maps/{result-code-map-name}:
    delete:
      summary: Delete a Result Code Map
      operationId: delete-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
        "409":
          description: The Result Code Map cannot be deleted
      security:
      - basicAuth: []
      tags:
      - result-code-map
    get:
      summary: Returns a single Result Code Map
      operationId: get-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      tags:
      - result-code-map
    patch:
      summary: Update an existing Result Code Map by name
      operationId: update-result-code-map
      parameters:
      - description: Name of the Result Code Map
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Result Code Map
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      tags:
      - result-code-map
  /synchronization-providers/{synchronization-provider-name}:
    get:
      summary: Returns a single Synchronization Provider
      operationId: get-synchronization-provider
      parameters:
      - description: Name of the Synchronization Provider
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/replication-synchronization-provider-response'
                - $ref: '#/components/schemas/custom-synchronization-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Synchronization Provider does not exist
      security:
      - basicAuth: []
      tags:
      - synchronization-provider
    patch:
      summary: Update an existing Synchronization Provider by name
      operationId: update-synchronization-provider
      parameters:
      - description: Name of the Synchronization Provider
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Synchronization Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/replication-synchronization-provider-response'
                - $ref: '#/components/schemas/custom-synchronization-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Synchronization Provider does not exist
      security:
      - basicAuth: []
      tags:
      - synchronization-provider
  /synchronization-providers/{synchronization-provider-name}/replication-domains/{replication-domain-name}:
    get:
      summary: Returns a single Replication Domain
      operationId: get-replication-domain
      parameters:
      - description: Name of the Replication Domain
        explode: false
        in: path
        name: replication-domain-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Synchronization Provider
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-domain-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Replication Domain does not exist
      security:
      - basicAuth: []
      tags:
      - replication-domain
    patch:
      summary: Update an existing Replication Domain by name
      operationId: update-replication-domain
      parameters:
      - description: Name of the Replication Domain
        explode: false
        in: path
        name: replication-domain-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Synchronization Provider
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Replication Domain
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-domain-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Replication Domain does not exist
      security:
      - basicAuth: []
      tags:
      - replication-domain
  /connection-criteria:
    post:
      summary: Add a new Connection Criteria to the config
      operationId: add-connection-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-simple-connection-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-connection-criteria-request'
              - $ref: '#/components/schemas/add-third-party-connection-criteria-request'
        description: Create a new Connection Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Connection Criteria already exists
      security:
      - basicAuth: []
      tags:
      - connection-criteria
  /connection-criteria/{connection-criteria-name}:
    delete:
      summary: Delete a Connection Criteria
      operationId: delete-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
        "409":
          description: The Connection Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - connection-criteria
    get:
      summary: Returns a single Connection Criteria
      operationId: get-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - connection-criteria
    patch:
      summary: Update an existing Connection Criteria by name
      operationId: update-connection-criteria
      parameters:
      - description: Name of the Connection Criteria
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Connection Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-connection-criteria-response'
                - $ref: '#/components/schemas/aggregate-connection-criteria-response'
                - $ref: '#/components/schemas/third-party-connection-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - connection-criteria
  /root-dn:
    get:
      summary: Returns a single Root DN
      operationId: get-root-dn
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DN does not exist
      security:
      - basicAuth: []
      tags:
      - root-dn
    patch:
      summary: Update an existing Root DN by name
      operationId: update-root-dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Root DN
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Root DN does not exist
      security:
      - basicAuth: []
      tags:
      - root-dn
  /root-dn/root-dn-users:
    post:
      summary: Add a new Root DN User to the config
      operationId: add-root-dn-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-root-dn-user-request'
        description: Create a new Root DN User in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Root DN User already exists
      security:
      - basicAuth: []
      tags:
      - root-dn-user
  /root-dn/root-dn-users/{root-dn-user-name}:
    delete:
      summary: Delete a Root DN User
      operationId: delete-root-dn-user
      parameters:
      - description: Name of the Root DN User
        explode: false
        in: path
        name: root-dn-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DN User does not exist
        "409":
          description: The Root DN User cannot be deleted
      security:
      - basicAuth: []
      tags:
      - root-dn-user
    get:
      summary: Returns a single Root DN User
      operationId: get-root-dn-user
      parameters:
      - description: Name of the Root DN User
        explode: false
        in: path
        name: root-dn-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DN User does not exist
      security:
      - basicAuth: []
      tags:
      - root-dn-user
    patch:
      summary: Update an existing Root DN User by name
      operationId: update-root-dn-user
      parameters:
      - description: Name of the Root DN User
        explode: false
        in: path
        name: root-dn-user-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Root DN User
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Root DN User does not exist
      security:
      - basicAuth: []
      tags:
      - root-dn-user
  /trust-manager-providers:
    post:
      summary: Add a new Trust Manager Provider to the config
      operationId: add-trust-manager-provider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-blind-trust-manager-provider-request'
              - $ref: '#/components/schemas/add-file-based-trust-manager-provider-request'
              - $ref: '#/components/schemas/add-jvm-default-trust-manager-provider-request'
              - $ref: '#/components/schemas/add-third-party-trust-manager-provider-request'
        description: Create a new Trust Manager Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/blind-trust-manager-provider-response'
                - $ref: '#/components/schemas/file-based-trust-manager-provider-response'
                - $ref: '#/components/schemas/jvm-default-trust-manager-provider-response'
                - $ref: '#/components/schemas/third-party-trust-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Trust Manager Provider already exists
      security:
      - basicAuth: []
      tags:
      - trust-manager-provider
  /trust-manager-providers/{trust-manager-provider-name}:
    delete:
      summary: Delete a Trust Manager Provider
      operationId: delete-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trust Manager Provider does not exist
        "409":
          description: The Trust Manager Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - trust-manager-provider
    get:
      summary: Returns a single Trust Manager Provider
      operationId: get-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/blind-trust-manager-provider-response'
                - $ref: '#/components/schemas/file-based-trust-manager-provider-response'
                - $ref: '#/components/schemas/jvm-default-trust-manager-provider-response'
                - $ref: '#/components/schemas/third-party-trust-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trust Manager Provider does not exist
      security:
      - basicAuth: []
      tags:
      - trust-manager-provider
    patch:
      summary: Update an existing Trust Manager Provider by name
      operationId: update-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Trust Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/blind-trust-manager-provider-response'
                - $ref: '#/components/schemas/file-based-trust-manager-provider-response'
                - $ref: '#/components/schemas/jvm-default-trust-manager-provider-response'
                - $ref: '#/components/schemas/third-party-trust-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Trust Manager Provider does not exist
      security:
      - basicAuth: []
      tags:
      - trust-manager-provider
  /key-pairs:
    post:
      summary: Add a new Key Pair to the config
      operationId: add-key-pair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-key-pair-request'
        description: Create a new Key Pair in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Key Pair already exists
      security:
      - basicAuth: []
      tags:
      - key-pair
  /key-pairs/{key-pair-name}:
    delete:
      summary: Delete a Key Pair
      operationId: delete-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
        "409":
          description: The Key Pair cannot be deleted
      security:
      - basicAuth: []
      tags:
      - key-pair
    get:
      summary: Returns a single Key Pair
      operationId: get-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      tags:
      - key-pair
    patch:
      summary: Update an existing Key Pair by name
      operationId: update-key-pair
      parameters:
      - description: Name of the Key Pair
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Key Pair
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      tags:
      - key-pair
  /request-criteria:
    post:
      summary: Add a new Request Criteria to the config
      operationId: add-request-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-root-dse-request-criteria-request'
              - $ref: '#/components/schemas/add-simple-request-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-request-criteria-request'
              - $ref: '#/components/schemas/add-third-party-request-criteria-request'
        description: Create a new Request Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/root-dse-request-criteria-response'
                - $ref: '#/components/schemas/simple-request-criteria-response'
                - $ref: '#/components/schemas/aggregate-request-criteria-response'
                - $ref: '#/components/schemas/third-party-request-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Request Criteria already exists
      security:
      - basicAuth: []
      tags:
      - request-criteria
  /request-criteria/{request-criteria-name}:
    delete:
      summary: Delete a Request Criteria
      operationId: delete-request-criteria
      parameters:
      - description: Name of the Request Criteria
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Request Criteria does not exist
        "409":
          description: The Request Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - request-criteria
    get:
      summary: Returns a single Request Criteria
      operationId: get-request-criteria
      parameters:
      - description: Name of the Request Criteria
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/root-dse-request-criteria-response'
                - $ref: '#/components/schemas/simple-request-criteria-response'
                - $ref: '#/components/schemas/aggregate-request-criteria-response'
                - $ref: '#/components/schemas/third-party-request-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Request Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - request-criteria
    patch:
      summary: Update an existing Request Criteria by name
      operationId: update-request-criteria
      parameters:
      - description: Name of the Request Criteria
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Request Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/root-dse-request-criteria-response'
                - $ref: '#/components/schemas/simple-request-criteria-response'
                - $ref: '#/components/schemas/aggregate-request-criteria-response'
                - $ref: '#/components/schemas/third-party-request-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Request Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - request-criteria
  /log-rotation-policies:
    post:
      summary: Add a new Log Rotation Policy to the config
      operationId: add-log-rotation-policy
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-time-limit-log-rotation-policy-request'
              - $ref: '#/components/schemas/add-fixed-time-log-rotation-policy-request'
              - $ref: '#/components/schemas/add-never-rotate-log-rotation-policy-request'
              - $ref: '#/components/schemas/add-size-limit-log-rotation-policy-request'
        description: Create a new Log Rotation Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-rotation-policy-response'
                - $ref: '#/components/schemas/fixed-time-log-rotation-policy-response'
                - $ref: '#/components/schemas/never-rotate-log-rotation-policy-response'
                - $ref: '#/components/schemas/size-limit-log-rotation-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Rotation Policy already exists
      security:
      - basicAuth: []
      tags:
      - log-rotation-policy
  /log-rotation-policies/{log-rotation-policy-name}:
    delete:
      summary: Delete a Log Rotation Policy
      operationId: delete-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
        "409":
          description: The Log Rotation Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-rotation-policy
    get:
      summary: Returns a single Log Rotation Policy
      operationId: get-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-rotation-policy-response'
                - $ref: '#/components/schemas/fixed-time-log-rotation-policy-response'
                - $ref: '#/components/schemas/never-rotate-log-rotation-policy-response'
                - $ref: '#/components/schemas/size-limit-log-rotation-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      tags:
      - log-rotation-policy
    patch:
      summary: Update an existing Log Rotation Policy by name
      operationId: update-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Rotation Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-rotation-policy-response'
                - $ref: '#/components/schemas/fixed-time-log-rotation-policy-response'
                - $ref: '#/components/schemas/never-rotate-log-rotation-policy-response'
                - $ref: '#/components/schemas/size-limit-log-rotation-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      tags:
      - log-rotation-policy
  /log-field-syntaxes/{log-field-syntax-name}:
    get:
      summary: Returns a single Log Field Syntax
      operationId: get-log-field-syntax
      parameters:
      - description: Name of the Log Field Syntax
        explode: false
        in: path
        name: log-field-syntax-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/json-log-field-syntax-response'
                - $ref: '#/components/schemas/attribute-based-log-field-syntax-response'
                - $ref: '#/components/schemas/generic-log-field-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-syntax
    patch:
      summary: Update an existing Log Field Syntax by name
      operationId: update-log-field-syntax
      parameters:
      - description: Name of the Log Field Syntax
        explode: false
        in: path
        name: log-field-syntax-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/json-log-field-syntax-response'
                - $ref: '#/components/schemas/attribute-based-log-field-syntax-response'
                - $ref: '#/components/schemas/generic-log-field-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - log-field-syntax
  /extended-operation-handlers:
    post:
      summary: Add a new Extended Operation Handler to the config
      operationId: add-extended-operation-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-validate-totp-password-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-replace-certificate-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-collect-support-data-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-export-reversible-passwords-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-single-use-tokens-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-deliver-password-reset-token-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-deliver-otp-extended-operation-handler-request'
              - $ref: '#/components/schemas/add-third-party-extended-operation-handler-request'
        description: Create a new Extended Operation Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-response'
                - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-response'
                - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-response'
                - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-response'
                - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-response'
                - $ref: '#/components/schemas/third-party-extended-operation-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Extended Operation Handler already exists
      security:
      - basicAuth: []
      tags:
      - extended-operation-handler
  /extended-operation-handlers/{extended-operation-handler-name}:
    delete:
      summary: Delete a Extended Operation Handler
      operationId: delete-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Extended Operation Handler does not exist
        "409":
          description: The Extended Operation Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - extended-operation-handler
    get:
      summary: Returns a single Extended Operation Handler
      operationId: get-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/cancel-extended-operation-handler-response'
                - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-response'
                - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-connection-id-extended-operation-handler-response'
                - $ref: '#/components/schemas/multi-update-extended-operation-handler-response'
                - $ref: '#/components/schemas/notification-subscription-extended-operation-handler-response'
                - $ref: '#/components/schemas/password-modify-extended-operation-handler-response'
                - $ref: '#/components/schemas/custom-extended-operation-handler-response'
                - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-response'
                - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-response'
                - $ref: '#/components/schemas/batched-transactions-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-changelog-batch-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-supported-otp-delivery-mechanisms-extended-operation-handler-response'
                - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-response'
                - $ref: '#/components/schemas/generate-password-extended-operation-handler-response'
                - $ref: '#/components/schemas/who-am-i-extended-operation-handler-response'
                - $ref: '#/components/schemas/start-tls-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-response'
                - $ref: '#/components/schemas/password-policy-state-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-password-quality-requirements-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-response'
                - $ref: '#/components/schemas/third-party-extended-operation-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Extended Operation Handler does not exist
      security:
      - basicAuth: []
      tags:
      - extended-operation-handler
    patch:
      summary: Update an existing Extended Operation Handler by name
      operationId: update-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Extended Operation Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/cancel-extended-operation-handler-response'
                - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-response'
                - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-connection-id-extended-operation-handler-response'
                - $ref: '#/components/schemas/multi-update-extended-operation-handler-response'
                - $ref: '#/components/schemas/notification-subscription-extended-operation-handler-response'
                - $ref: '#/components/schemas/password-modify-extended-operation-handler-response'
                - $ref: '#/components/schemas/custom-extended-operation-handler-response'
                - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-response'
                - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-response'
                - $ref: '#/components/schemas/batched-transactions-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-changelog-batch-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-supported-otp-delivery-mechanisms-extended-operation-handler-response'
                - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-response'
                - $ref: '#/components/schemas/generate-password-extended-operation-handler-response'
                - $ref: '#/components/schemas/who-am-i-extended-operation-handler-response'
                - $ref: '#/components/schemas/start-tls-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-response'
                - $ref: '#/components/schemas/password-policy-state-extended-operation-handler-response'
                - $ref: '#/components/schemas/get-password-quality-requirements-extended-operation-handler-response'
                - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-response'
                - $ref: '#/components/schemas/third-party-extended-operation-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Extended Operation Handler does not exist
      security:
      - basicAuth: []
      tags:
      - extended-operation-handler
  /azure-authentication-methods:
    post:
      summary: Add a new Azure Authentication Method to the config
      operationId: add-azure-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-default-azure-authentication-method-request'
              - $ref: '#/components/schemas/add-client-secret-azure-authentication-method-request'
              - $ref: '#/components/schemas/add-username-password-azure-authentication-method-request'
        description: Create a new Azure Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-azure-authentication-method-response'
                - $ref: '#/components/schemas/client-secret-azure-authentication-method-response'
                - $ref: '#/components/schemas/username-password-azure-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Azure Authentication Method already exists
      security:
      - basicAuth: []
      tags:
      - azure-authentication-method
  /azure-authentication-methods/{azure-authentication-method-name}:
    delete:
      summary: Delete a Azure Authentication Method
      operationId: delete-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Azure Authentication Method does not exist
        "409":
          description: The Azure Authentication Method cannot be deleted
      security:
      - basicAuth: []
      tags:
      - azure-authentication-method
    get:
      summary: Returns a single Azure Authentication Method
      operationId: get-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-azure-authentication-method-response'
                - $ref: '#/components/schemas/client-secret-azure-authentication-method-response'
                - $ref: '#/components/schemas/username-password-azure-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Azure Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - azure-authentication-method
    patch:
      summary: Update an existing Azure Authentication Method by name
      operationId: update-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Azure Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-azure-authentication-method-response'
                - $ref: '#/components/schemas/client-secret-azure-authentication-method-response'
                - $ref: '#/components/schemas/username-password-azure-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Azure Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - azure-authentication-method
  /passphrase-providers:
    post:
      summary: Add a new Passphrase Provider to the config
      operationId: add-passphrase-provider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-environment-variable-passphrase-provider-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-passphrase-provider-request'
              - $ref: '#/components/schemas/add-obscured-value-passphrase-provider-request'
              - $ref: '#/components/schemas/add-azure-key-vault-passphrase-provider-request'
              - $ref: '#/components/schemas/add-file-based-passphrase-provider-request'
              - $ref: '#/components/schemas/add-conjur-passphrase-provider-request'
              - $ref: '#/components/schemas/add-vault-passphrase-provider-request'
              - $ref: '#/components/schemas/add-third-party-passphrase-provider-request'
        description: Create a new Passphrase Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Passphrase Provider already exists
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
  /passphrase-providers/{passphrase-provider-name}:
    delete:
      summary: Delete a Passphrase Provider
      operationId: delete-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
        "409":
          description: The Passphrase Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
    get:
      summary: Returns a single Passphrase Provider
      operationId: get-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
    patch:
      summary: Update an existing Passphrase Provider by name
      operationId: update-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Passphrase Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
                - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
                - $ref: '#/components/schemas/file-based-passphrase-provider-response'
                - $ref: '#/components/schemas/conjur-passphrase-provider-response'
                - $ref: '#/components/schemas/vault-passphrase-provider-response'
                - $ref: '#/components/schemas/third-party-passphrase-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      tags:
      - passphrase-provider
  /soft-delete-policies:
    post:
      summary: Add a new Soft Delete Policy to the config
      operationId: add-soft-delete-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-soft-delete-policy-request'
        description: Create a new Soft Delete Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Soft Delete Policy already exists
      security:
      - basicAuth: []
      tags:
      - soft-delete-policy
  /soft-delete-policies/{soft-delete-policy-name}:
    delete:
      summary: Delete a Soft Delete Policy
      operationId: delete-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Soft Delete Policy does not exist
        "409":
          description: The Soft Delete Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - soft-delete-policy
    get:
      summary: Returns a single Soft Delete Policy
      operationId: get-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Soft Delete Policy does not exist
      security:
      - basicAuth: []
      tags:
      - soft-delete-policy
    patch:
      summary: Update an existing Soft Delete Policy by name
      operationId: update-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Soft Delete Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Soft Delete Policy does not exist
      security:
      - basicAuth: []
      tags:
      - soft-delete-policy
  /recurring-task-chains:
    post:
      summary: Add a new Recurring Task Chain to the config
      operationId: add-recurring-task-chain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-recurring-task-chain-request'
        description: Create a new Recurring Task Chain in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Recurring Task Chain already exists
      security:
      - basicAuth: []
      tags:
      - recurring-task-chain
  /recurring-task-chains/{recurring-task-chain-name}:
    delete:
      summary: Delete a Recurring Task Chain
      operationId: delete-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task Chain does not exist
        "409":
          description: The Recurring Task Chain cannot be deleted
      security:
      - basicAuth: []
      tags:
      - recurring-task-chain
    get:
      summary: Returns a single Recurring Task Chain
      operationId: get-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task Chain does not exist
      security:
      - basicAuth: []
      tags:
      - recurring-task-chain
    patch:
      summary: Update an existing Recurring Task Chain by name
      operationId: update-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Recurring Task Chain
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Recurring Task Chain does not exist
      security:
      - basicAuth: []
      tags:
      - recurring-task-chain
  /gauges:
    post:
      summary: Add a new Gauge to the config
      operationId: add-gauge
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-indicator-gauge-request'
              - $ref: '#/components/schemas/add-numeric-gauge-request'
        description: Create a new Gauge in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-response'
                - $ref: '#/components/schemas/numeric-gauge-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Gauge already exists
      security:
      - basicAuth: []
      tags:
      - gauge
  /gauges/{gauge-name}:
    delete:
      summary: Delete a Gauge
      operationId: delete-gauge
      parameters:
      - description: Name of the Gauge
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge does not exist
        "409":
          description: The Gauge cannot be deleted
      security:
      - basicAuth: []
      tags:
      - gauge
    get:
      summary: Returns a single Gauge
      operationId: get-gauge
      parameters:
      - description: Name of the Gauge
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-response'
                - $ref: '#/components/schemas/numeric-gauge-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge does not exist
      security:
      - basicAuth: []
      tags:
      - gauge
    patch:
      summary: Update an existing Gauge by name
      operationId: update-gauge
      parameters:
      - description: Name of the Gauge
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Gauge
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-response'
                - $ref: '#/components/schemas/numeric-gauge-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Gauge does not exist
      security:
      - basicAuth: []
      tags:
      - gauge
  /search-reference-criteria:
    post:
      summary: Add a new Search Reference Criteria to the config
      operationId: add-search-reference-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-simple-search-reference-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-search-reference-criteria-request'
              - $ref: '#/components/schemas/add-third-party-search-reference-criteria-request'
        description: Create a new Search Reference Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-reference-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-reference-criteria-response'
                - $ref: '#/components/schemas/third-party-search-reference-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Search Reference Criteria already exists
      security:
      - basicAuth: []
      tags:
      - search-reference-criteria
  /search-reference-criteria/{search-reference-criteria-name}:
    delete:
      summary: Delete a Search Reference Criteria
      operationId: delete-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Reference Criteria does not exist
        "409":
          description: The Search Reference Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - search-reference-criteria
    get:
      summary: Returns a single Search Reference Criteria
      operationId: get-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-reference-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-reference-criteria-response'
                - $ref: '#/components/schemas/third-party-search-reference-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Reference Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - search-reference-criteria
    patch:
      summary: Update an existing Search Reference Criteria by name
      operationId: update-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Search Reference Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-reference-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-reference-criteria-response'
                - $ref: '#/components/schemas/third-party-search-reference-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Search Reference Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - search-reference-criteria
  /entry-caches:
    post:
      summary: Add a new Entry Cache to the config
      operationId: add-entry-cache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-fifo-entry-cache-request'
        description: Create a new Entry Cache in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Entry Cache already exists
      security:
      - basicAuth: []
      tags:
      - entry-cache
  /entry-caches/{entry-cache-name}:
    delete:
      summary: Delete a Entry Cache
      operationId: delete-entry-cache
      parameters:
      - description: Name of the Entry Cache
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Entry Cache does not exist
        "409":
          description: The Entry Cache cannot be deleted
      security:
      - basicAuth: []
      tags:
      - entry-cache
    get:
      summary: Returns a single Entry Cache
      operationId: get-entry-cache
      parameters:
      - description: Name of the Entry Cache
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Entry Cache does not exist
      security:
      - basicAuth: []
      tags:
      - entry-cache
    patch:
      summary: Update an existing Entry Cache by name
      operationId: update-entry-cache
      parameters:
      - description: Name of the Entry Cache
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Entry Cache
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Entry Cache does not exist
      security:
      - basicAuth: []
      tags:
      - entry-cache
  /access-control-handler:
    get:
      summary: Returns a single Access Control Handler
      operationId: get-access-control-handler
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsee-compat-access-control-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Control Handler does not exist
      security:
      - basicAuth: []
      tags:
      - access-control-handler
    patch:
      summary: Update an existing Access Control Handler by name
      operationId: update-access-control-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Access Control Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsee-compat-access-control-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Access Control Handler does not exist
      security:
      - basicAuth: []
      tags:
      - access-control-handler
  /alert-handlers:
    post:
      summary: Add a new Alert Handler to the config
      operationId: add-alert-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-smtp-alert-handler-request'
              - $ref: '#/components/schemas/add-jmx-alert-handler-request'
              - $ref: '#/components/schemas/add-groovy-scripted-alert-handler-request'
              - $ref: '#/components/schemas/add-snmp-alert-handler-request'
              - $ref: '#/components/schemas/add-twilio-alert-handler-request'
              - $ref: '#/components/schemas/add-error-log-alert-handler-request'
              - $ref: '#/components/schemas/add-snmp-sub-agent-alert-handler-request'
              - $ref: '#/components/schemas/add-exec-alert-handler-request'
              - $ref: '#/components/schemas/add-third-party-alert-handler-request'
        description: Create a new Alert Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-alert-handler-response'
                - $ref: '#/components/schemas/jmx-alert-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-alert-handler-response'
                - $ref: '#/components/schemas/snmp-alert-handler-response'
                - $ref: '#/components/schemas/twilio-alert-handler-response'
                - $ref: '#/components/schemas/error-log-alert-handler-response'
                - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-response'
                - $ref: '#/components/schemas/exec-alert-handler-response'
                - $ref: '#/components/schemas/third-party-alert-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Alert Handler already exists
      security:
      - basicAuth: []
      tags:
      - alert-handler
  /alert-handlers/{alert-handler-name}:
    delete:
      summary: Delete a Alert Handler
      operationId: delete-alert-handler
      parameters:
      - description: Name of the Alert Handler
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
        "409":
          description: The Alert Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - alert-handler
    get:
      summary: Returns a single Alert Handler
      operationId: get-alert-handler
      parameters:
      - description: Name of the Alert Handler
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/output-alert-handler-response'
                - $ref: '#/components/schemas/smtp-alert-handler-response'
                - $ref: '#/components/schemas/jmx-alert-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-alert-handler-response'
                - $ref: '#/components/schemas/custom-alert-handler-response'
                - $ref: '#/components/schemas/snmp-alert-handler-response'
                - $ref: '#/components/schemas/twilio-alert-handler-response'
                - $ref: '#/components/schemas/error-log-alert-handler-response'
                - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-response'
                - $ref: '#/components/schemas/exec-alert-handler-response'
                - $ref: '#/components/schemas/third-party-alert-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      tags:
      - alert-handler
    patch:
      summary: Update an existing Alert Handler by name
      operationId: update-alert-handler
      parameters:
      - description: Name of the Alert Handler
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Alert Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/output-alert-handler-response'
                - $ref: '#/components/schemas/smtp-alert-handler-response'
                - $ref: '#/components/schemas/jmx-alert-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-alert-handler-response'
                - $ref: '#/components/schemas/custom-alert-handler-response'
                - $ref: '#/components/schemas/snmp-alert-handler-response'
                - $ref: '#/components/schemas/twilio-alert-handler-response'
                - $ref: '#/components/schemas/error-log-alert-handler-response'
                - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-response'
                - $ref: '#/components/schemas/exec-alert-handler-response'
                - $ref: '#/components/schemas/third-party-alert-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      tags:
      - alert-handler
  /license:
    get:
      summary: Returns a single License
      operationId: get-license
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/license-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The License does not exist
      security:
      - basicAuth: []
      tags:
      - license
    patch:
      summary: Update an existing License by name
      operationId: update-license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing License
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/license-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The License does not exist
      security:
      - basicAuth: []
      tags:
      - license
  /cipher-stream-providers:
    post:
      summary: Add a new Cipher Stream Provider to the config
      operationId: add-cipher-stream-provider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-amazon-key-management-service-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-azure-key-vault-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-file-based-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-wait-for-passphrase-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-conjur-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-pkcs11-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-vault-cipher-stream-provider-request'
              - $ref: '#/components/schemas/add-third-party-cipher-stream-provider-request'
        description: Create a new Cipher Stream Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/file-based-cipher-stream-provider-response'
                - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-response'
                - $ref: '#/components/schemas/conjur-cipher-stream-provider-response'
                - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-response'
                - $ref: '#/components/schemas/vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/third-party-cipher-stream-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Cipher Stream Provider already exists
      security:
      - basicAuth: []
      tags:
      - cipher-stream-provider
  /cipher-stream-providers/{cipher-stream-provider-name}:
    delete:
      summary: Delete a Cipher Stream Provider
      operationId: delete-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Stream Provider does not exist
        "409":
          description: The Cipher Stream Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - cipher-stream-provider
    get:
      summary: Returns a single Cipher Stream Provider
      operationId: get-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/file-based-cipher-stream-provider-response'
                - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-response'
                - $ref: '#/components/schemas/conjur-cipher-stream-provider-response'
                - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-response'
                - $ref: '#/components/schemas/vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/third-party-cipher-stream-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Stream Provider does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-stream-provider
    patch:
      summary: Update an existing Cipher Stream Provider by name
      operationId: update-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Cipher Stream Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-response'
                - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/file-based-cipher-stream-provider-response'
                - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-response'
                - $ref: '#/components/schemas/conjur-cipher-stream-provider-response'
                - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-response'
                - $ref: '#/components/schemas/vault-cipher-stream-provider-response'
                - $ref: '#/components/schemas/third-party-cipher-stream-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Cipher Stream Provider does not exist
      security:
      - basicAuth: []
      tags:
      - cipher-stream-provider
  /vault-authentication-methods:
    post:
      summary: Add a new Vault Authentication Method to the config
      operationId: add-vault-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-static-token-vault-authentication-method-request'
              - $ref: '#/components/schemas/add-app-role-vault-authentication-method-request'
              - $ref: '#/components/schemas/add-user-pass-vault-authentication-method-request'
        description: Create a new Vault Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/static-token-vault-authentication-method-response'
                - $ref: '#/components/schemas/app-role-vault-authentication-method-response'
                - $ref: '#/components/schemas/user-pass-vault-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Vault Authentication Method already exists
      security:
      - basicAuth: []
      tags:
      - vault-authentication-method
  /vault-authentication-methods/{vault-authentication-method-name}:
    delete:
      summary: Delete a Vault Authentication Method
      operationId: delete-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Vault Authentication Method does not exist
        "409":
          description: The Vault Authentication Method cannot be deleted
      security:
      - basicAuth: []
      tags:
      - vault-authentication-method
    get:
      summary: Returns a single Vault Authentication Method
      operationId: get-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/static-token-vault-authentication-method-response'
                - $ref: '#/components/schemas/app-role-vault-authentication-method-response'
                - $ref: '#/components/schemas/user-pass-vault-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Vault Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - vault-authentication-method
    patch:
      summary: Update an existing Vault Authentication Method by name
      operationId: update-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Vault Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/static-token-vault-authentication-method-response'
                - $ref: '#/components/schemas/app-role-vault-authentication-method-response'
                - $ref: '#/components/schemas/user-pass-vault-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Vault Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - vault-authentication-method
  /account-status-notification-handlers:
    post:
      summary: Add a new Account Status Notification Handler to the config
      operationId: add-account-status-notification-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-smtp-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-groovy-scripted-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-admin-alert-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-error-log-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-multi-part-email-account-status-notification-handler-request'
              - $ref: '#/components/schemas/add-third-party-account-status-notification-handler-request'
        description: Create a new Account Status Notification Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Account Status Notification Handler already exists
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
  /account-status-notification-handlers/{account-status-notification-handler-name}:
    delete:
      summary: Delete a Account Status Notification Handler
      operationId: delete-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
        "409":
          description: The Account Status Notification Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
    get:
      summary: Returns a single Account Status Notification Handler
      operationId: get-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
    patch:
      summary: Update an existing Account Status Notification Handler by name
      operationId: update-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Account Status Notification Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
                - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
                - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
                - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
                - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
                - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      tags:
      - account-status-notification-handler
  /server-groups:
    post:
      summary: Add a new Server Group to the config
      operationId: add-server-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-server-group-request'
        description: Create a new Server Group in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Server Group already exists
      security:
      - basicAuth: []
      tags:
      - server-group
  /server-groups/{server-group-name}:
    delete:
      summary: Delete a Server Group
      operationId: delete-server-group
      parameters:
      - description: Name of the Server Group
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Group does not exist
        "409":
          description: The Server Group cannot be deleted
      security:
      - basicAuth: []
      tags:
      - server-group
    get:
      summary: Returns a single Server Group
      operationId: get-server-group
      parameters:
      - description: Name of the Server Group
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Group does not exist
      security:
      - basicAuth: []
      tags:
      - server-group
    patch:
      summary: Update an existing Server Group by name
      operationId: update-server-group
      parameters:
      - description: Name of the Server Group
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Group
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Group does not exist
      security:
      - basicAuth: []
      tags:
      - server-group
  /pass-through-authentication-handlers:
    post:
      summary: Add a new Pass Through Authentication Handler to the config
      operationId: add-pass-through-authentication-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-ldap-pass-through-authentication-handler-request'
              - $ref: '#/components/schemas/add-third-party-pass-through-authentication-handler-request'
        description: Create a new Pass Through Authentication Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-response'
                - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Pass Through Authentication Handler already exists
      security:
      - basicAuth: []
      tags:
      - pass-through-authentication-handler
  /pass-through-authentication-handlers/{pass-through-authentication-handler-name}:
    delete:
      summary: Delete a Pass Through Authentication Handler
      operationId: delete-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Pass Through Authentication Handler does not exist
        "409":
          description: The Pass Through Authentication Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - pass-through-authentication-handler
    get:
      summary: Returns a single Pass Through Authentication Handler
      operationId: get-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-response'
                - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Pass Through Authentication Handler does not exist
      security:
      - basicAuth: []
      tags:
      - pass-through-authentication-handler
    patch:
      summary: Update an existing Pass Through Authentication Handler by name
      operationId: update-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Pass Through Authentication Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-response'
                - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Pass Through Authentication Handler does not exist
      security:
      - basicAuth: []
      tags:
      - pass-through-authentication-handler
  /consent-definitions:
    post:
      summary: Add a new Consent Definition to the config
      operationId: add-consent-definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-consent-definition-request'
        description: Create a new Consent Definition in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Consent Definition already exists
      security:
      - basicAuth: []
      tags:
      - consent-definition
  /consent-definitions/{consent-definition-name}:
    delete:
      summary: Delete a Consent Definition
      operationId: delete-consent-definition
      parameters:
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition does not exist
        "409":
          description: The Consent Definition cannot be deleted
      security:
      - basicAuth: []
      tags:
      - consent-definition
    get:
      summary: Returns a single Consent Definition
      operationId: get-consent-definition
      parameters:
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition does not exist
      security:
      - basicAuth: []
      tags:
      - consent-definition
    patch:
      summary: Update an existing Consent Definition by name
      operationId: update-consent-definition
      parameters:
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Consent Definition
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Consent Definition does not exist
      security:
      - basicAuth: []
      tags:
      - consent-definition
  /consent-definitions/{consent-definition-name}/consent-definition-localizations:
    post:
      summary: Add a new Consent Definition Localization to the config
      operationId: add-consent-definition-localization
      parameters:
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-consent-definition-localization-request'
        description: Create a new Consent Definition Localization in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-localization-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Consent Definition Localization already exists
      security:
      - basicAuth: []
      tags:
      - consent-definition-localization
  /consent-definitions/{consent-definition-name}/consent-definition-localizations/{consent-definition-localization-name}:
    delete:
      summary: Delete a Consent Definition Localization
      operationId: delete-consent-definition-localization
      parameters:
      - description: Name of the Consent Definition Localization
        explode: false
        in: path
        name: consent-definition-localization-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition Localization does not exist
        "409":
          description: The Consent Definition Localization cannot be deleted
      security:
      - basicAuth: []
      tags:
      - consent-definition-localization
    get:
      summary: Returns a single Consent Definition Localization
      operationId: get-consent-definition-localization
      parameters:
      - description: Name of the Consent Definition Localization
        explode: false
        in: path
        name: consent-definition-localization-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-localization-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition Localization does not exist
      security:
      - basicAuth: []
      tags:
      - consent-definition-localization
    patch:
      summary: Update an existing Consent Definition Localization by name
      operationId: update-consent-definition-localization
      parameters:
      - description: Name of the Consent Definition Localization
        explode: false
        in: path
        name: consent-definition-localization-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Consent Definition
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Consent Definition Localization
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-localization-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Consent Definition Localization does not exist
      security:
      - basicAuth: []
      tags:
      - consent-definition-localization
  /consent-service:
    get:
      summary: Returns a single Consent Service
      operationId: get-consent-service
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-service-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Service does not exist
      security:
      - basicAuth: []
      tags:
      - consent-service
    patch:
      summary: Update an existing Consent Service by name
      operationId: update-consent-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Consent Service
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-service-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Consent Service does not exist
      security:
      - basicAuth: []
      tags:
      - consent-service
  /topology-admin-users:
    post:
      summary: Add a new Topology Admin User to the config
      operationId: add-topology-admin-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-topology-admin-user-request'
        description: Create a new Topology Admin User in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Topology Admin User already exists
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
  /topology-admin-users/{topology-admin-user-name}:
    delete:
      summary: Delete a Topology Admin User
      operationId: delete-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
        "409":
          description: The Topology Admin User cannot be deleted
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
    get:
      summary: Returns a single Topology Admin User
      operationId: get-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
    patch:
      summary: Update an existing Topology Admin User by name
      operationId: update-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Topology Admin User
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
  /change-subscriptions:
    post:
      summary: Add a new Change Subscription to the config
      operationId: add-change-subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-change-subscription-request'
        description: Create a new Change Subscription in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Change Subscription already exists
      security:
      - basicAuth: []
      tags:
      - change-subscription
  /change-subscriptions/{change-subscription-name}:
    delete:
      summary: Delete a Change Subscription
      operationId: delete-change-subscription
      parameters:
      - description: Name of the Change Subscription
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription does not exist
        "409":
          description: The Change Subscription cannot be deleted
      security:
      - basicAuth: []
      tags:
      - change-subscription
    get:
      summary: Returns a single Change Subscription
      operationId: get-change-subscription
      parameters:
      - description: Name of the Change Subscription
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription does not exist
      security:
      - basicAuth: []
      tags:
      - change-subscription
    patch:
      summary: Update an existing Change Subscription by name
      operationId: update-change-subscription
      parameters:
      - description: Name of the Change Subscription
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Change Subscription
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Change Subscription does not exist
      security:
      - basicAuth: []
      tags:
      - change-subscription
  /ldap-sdk-debug-logger:
    get:
      summary: Returns a single LDAP SDK Debug Logger
      operationId: get-ldap-sdk-debug-logger
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-sdk-debug-logger-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The LDAP SDK Debug Logger does not exist
      security:
      - basicAuth: []
      tags:
      - ldap-sdk-debug-logger
    patch:
      summary: Update an existing LDAP SDK Debug Logger by name
      operationId: update-ldap-sdk-debug-logger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing LDAP SDK Debug Logger
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-sdk-debug-logger-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The LDAP SDK Debug Logger does not exist
      security:
      - basicAuth: []
      tags:
      - ldap-sdk-debug-logger
  /conjur-authentication-methods:
    post:
      summary: Add a new Conjur Authentication Method to the config
      operationId: add-conjur-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-api-key-conjur-authentication-method-request'
        description: Create a new Conjur Authentication Method in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Conjur Authentication Method already exists
      security:
      - basicAuth: []
      tags:
      - conjur-authentication-method
  /conjur-authentication-methods/{conjur-authentication-method-name}:
    delete:
      summary: Delete a Conjur Authentication Method
      operationId: delete-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Conjur Authentication Method does not exist
        "409":
          description: The Conjur Authentication Method cannot be deleted
      security:
      - basicAuth: []
      tags:
      - conjur-authentication-method
    get:
      summary: Returns a single Conjur Authentication Method
      operationId: get-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Conjur Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - conjur-authentication-method
    patch:
      summary: Update an existing Conjur Authentication Method by name
      operationId: update-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Conjur Authentication Method
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Conjur Authentication Method does not exist
      security:
      - basicAuth: []
      tags:
      - conjur-authentication-method
  /constructed-attributes:
    post:
      summary: Add a new Constructed Attribute to the config
      operationId: add-constructed-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-constructed-attribute-request'
        description: Create a new Constructed Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Constructed Attribute already exists
      security:
      - basicAuth: []
      tags:
      - constructed-attribute
  /constructed-attributes/{constructed-attribute-name}:
    delete:
      summary: Delete a Constructed Attribute
      operationId: delete-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Constructed Attribute does not exist
        "409":
          description: The Constructed Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - constructed-attribute
    get:
      summary: Returns a single Constructed Attribute
      operationId: get-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Constructed Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - constructed-attribute
    patch:
      summary: Update an existing Constructed Attribute by name
      operationId: update-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Constructed Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Constructed Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - constructed-attribute
  /password-validators:
    post:
      summary: Add a new Password Validator to the config
      operationId: add-password-validator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-character-set-password-validator-request'
              - $ref: '#/components/schemas/add-similarity-based-password-validator-request'
              - $ref: '#/components/schemas/add-attribute-value-password-validator-request'
              - $ref: '#/components/schemas/add-repeated-characters-password-validator-request'
              - $ref: '#/components/schemas/add-dictionary-password-validator-request'
              - $ref: '#/components/schemas/add-haystack-password-validator-request'
              - $ref: '#/components/schemas/add-groovy-scripted-password-validator-request'
              - $ref: '#/components/schemas/add-pwned-passwords-password-validator-request'
              - $ref: '#/components/schemas/add-length-based-password-validator-request'
              - $ref: '#/components/schemas/add-regular-expression-password-validator-request'
              - $ref: '#/components/schemas/add-unique-characters-password-validator-request'
              - $ref: '#/components/schemas/add-third-party-password-validator-request'
        description: Create a new Password Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Validator already exists
      security:
      - basicAuth: []
      tags:
      - password-validator
  /password-validators/{password-validator-name}:
    delete:
      summary: Delete a Password Validator
      operationId: delete-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
        "409":
          description: The Password Validator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-validator
    get:
      summary: Returns a single Password Validator
      operationId: get-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/custom-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      tags:
      - password-validator
    patch:
      summary: Update an existing Password Validator by name
      operationId: update-password-validator
      parameters:
      - description: Name of the Password Validator
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Validator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/character-set-password-validator-response'
                - $ref: '#/components/schemas/similarity-based-password-validator-response'
                - $ref: '#/components/schemas/attribute-value-password-validator-response'
                - $ref: '#/components/schemas/custom-password-validator-response'
                - $ref: '#/components/schemas/repeated-characters-password-validator-response'
                - $ref: '#/components/schemas/dictionary-password-validator-response'
                - $ref: '#/components/schemas/haystack-password-validator-response'
                - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
                - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
                - $ref: '#/components/schemas/length-based-password-validator-response'
                - $ref: '#/components/schemas/regular-expression-password-validator-response'
                - $ref: '#/components/schemas/unique-characters-password-validator-response'
                - $ref: '#/components/schemas/third-party-password-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      tags:
      - password-validator
  /alarm-manager:
    get:
      summary: Returns a single Alarm Manager
      operationId: get-alarm-manager
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alarm-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alarm Manager does not exist
      security:
      - basicAuth: []
      tags:
      - alarm-manager
    patch:
      summary: Update an existing Alarm Manager by name
      operationId: update-alarm-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Alarm Manager
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alarm-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Alarm Manager does not exist
      security:
      - basicAuth: []
      tags:
      - alarm-manager
  /connection-handlers:
    post:
      summary: Add a new Connection Handler to the config
      operationId: add-connection-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-jmx-connection-handler-request'
              - $ref: '#/components/schemas/add-ldap-connection-handler-request'
              - $ref: '#/components/schemas/add-ldif-connection-handler-request'
              - $ref: '#/components/schemas/add-http-connection-handler-request'
        description: Create a new Connection Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/jmx-connection-handler-response'
                - $ref: '#/components/schemas/ldap-connection-handler-response'
                - $ref: '#/components/schemas/ldif-connection-handler-response'
                - $ref: '#/components/schemas/http-connection-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Connection Handler already exists
      security:
      - basicAuth: []
      tags:
      - connection-handler
  /connection-handlers/{connection-handler-name}:
    delete:
      summary: Delete a Connection Handler
      operationId: delete-connection-handler
      parameters:
      - description: Name of the Connection Handler
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Handler does not exist
        "409":
          description: The Connection Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - connection-handler
    get:
      summary: Returns a single Connection Handler
      operationId: get-connection-handler
      parameters:
      - description: Name of the Connection Handler
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/jmx-connection-handler-response'
                - $ref: '#/components/schemas/ldap-connection-handler-response'
                - $ref: '#/components/schemas/ldif-connection-handler-response'
                - $ref: '#/components/schemas/http-connection-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Handler does not exist
      security:
      - basicAuth: []
      tags:
      - connection-handler
    patch:
      summary: Update an existing Connection Handler by name
      operationId: update-connection-handler
      parameters:
      - description: Name of the Connection Handler
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Connection Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/jmx-connection-handler-response'
                - $ref: '#/components/schemas/ldap-connection-handler-response'
                - $ref: '#/components/schemas/ldif-connection-handler-response'
                - $ref: '#/components/schemas/http-connection-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Connection Handler does not exist
      security:
      - basicAuth: []
      tags:
      - connection-handler
  /web-application-extensions:
    post:
      summary: Add a new Web Application Extension to the config
      operationId: add-web-application-extension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-generic-web-application-extension-request'
        description: Create a new Web Application Extension in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Web Application Extension already exists
      security:
      - basicAuth: []
      tags:
      - web-application-extension
  /web-application-extensions/{web-application-extension-name}:
    delete:
      summary: Delete a Web Application Extension
      operationId: delete-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Web Application Extension does not exist
        "409":
          description: The Web Application Extension cannot be deleted
      security:
      - basicAuth: []
      tags:
      - web-application-extension
    get:
      summary: Returns a single Web Application Extension
      operationId: get-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/console-web-application-extension-response'
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      tags:
      - web-application-extension
    patch:
      summary: Update an existing Web Application Extension by name
      operationId: update-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Web Application Extension
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/console-web-application-extension-response'
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      tags:
      - web-application-extension
  /trusted-certificates:
    post:
      summary: Add a new Trusted Certificate to the config
      operationId: add-trusted-certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-trusted-certificate-request'
        description: Create a new Trusted Certificate in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Trusted Certificate already exists
      security:
      - basicAuth: []
      tags:
      - trusted-certificate
  /trusted-certificates/{trusted-certificate-name}:
    delete:
      summary: Delete a Trusted Certificate
      operationId: delete-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trusted Certificate does not exist
        "409":
          description: The Trusted Certificate cannot be deleted
      security:
      - basicAuth: []
      tags:
      - trusted-certificate
    get:
      summary: Returns a single Trusted Certificate
      operationId: get-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trusted Certificate does not exist
      security:
      - basicAuth: []
      tags:
      - trusted-certificate
    patch:
      summary: Update an existing Trusted Certificate by name
      operationId: update-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Trusted Certificate
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Trusted Certificate does not exist
      security:
      - basicAuth: []
      tags:
      - trusted-certificate
  /search-entry-criteria:
    post:
      summary: Add a new Search Entry Criteria to the config
      operationId: add-search-entry-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-simple-search-entry-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-search-entry-criteria-request'
              - $ref: '#/components/schemas/add-third-party-search-entry-criteria-request'
        description: Create a new Search Entry Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-entry-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-search-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Search Entry Criteria already exists
      security:
      - basicAuth: []
      tags:
      - search-entry-criteria
  /search-entry-criteria/{search-entry-criteria-name}:
    delete:
      summary: Delete a Search Entry Criteria
      operationId: delete-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Entry Criteria does not exist
        "409":
          description: The Search Entry Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - search-entry-criteria
    get:
      summary: Returns a single Search Entry Criteria
      operationId: get-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-entry-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-search-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - search-entry-criteria
    patch:
      summary: Update an existing Search Entry Criteria by name
      operationId: update-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Search Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-search-entry-criteria-response'
                - $ref: '#/components/schemas/aggregate-search-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-search-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Search Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - search-entry-criteria
  /failure-lockout-actions:
    post:
      summary: Add a new Failure Lockout Action to the config
      operationId: add-failure-lockout-action
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-delay-bind-response-failure-lockout-action-request'
              - $ref: '#/components/schemas/add-no-operation-failure-lockout-action-request'
              - $ref: '#/components/schemas/add-lock-account-failure-lockout-action-request'
        description: Create a new Failure Lockout Action in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-response'
                - $ref: '#/components/schemas/no-operation-failure-lockout-action-response'
                - $ref: '#/components/schemas/lock-account-failure-lockout-action-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Failure Lockout Action already exists
      security:
      - basicAuth: []
      tags:
      - failure-lockout-action
  /failure-lockout-actions/{failure-lockout-action-name}:
    delete:
      summary: Delete a Failure Lockout Action
      operationId: delete-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Failure Lockout Action does not exist
        "409":
          description: The Failure Lockout Action cannot be deleted
      security:
      - basicAuth: []
      tags:
      - failure-lockout-action
    get:
      summary: Returns a single Failure Lockout Action
      operationId: get-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-response'
                - $ref: '#/components/schemas/no-operation-failure-lockout-action-response'
                - $ref: '#/components/schemas/lock-account-failure-lockout-action-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Failure Lockout Action does not exist
      security:
      - basicAuth: []
      tags:
      - failure-lockout-action
    patch:
      summary: Update an existing Failure Lockout Action by name
      operationId: update-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Failure Lockout Action
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-response'
                - $ref: '#/components/schemas/no-operation-failure-lockout-action-response'
                - $ref: '#/components/schemas/lock-account-failure-lockout-action-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Failure Lockout Action does not exist
      security:
      - basicAuth: []
      tags:
      - failure-lockout-action
  /certificate-mappers:
    post:
      summary: Add a new Certificate Mapper to the config
      operationId: add-certificate-mapper
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-subject-equals-dn-certificate-mapper-request'
              - $ref: '#/components/schemas/add-subject-dn-to-user-attribute-certificate-mapper-request'
              - $ref: '#/components/schemas/add-groovy-scripted-certificate-mapper-request'
              - $ref: '#/components/schemas/add-subject-attribute-to-user-attribute-certificate-mapper-request'
              - $ref: '#/components/schemas/add-fingerprint-certificate-mapper-request'
              - $ref: '#/components/schemas/add-third-party-certificate-mapper-request'
        description: Create a new Certificate Mapper in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/fingerprint-certificate-mapper-response'
                - $ref: '#/components/schemas/third-party-certificate-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Certificate Mapper already exists
      security:
      - basicAuth: []
      tags:
      - certificate-mapper
  /certificate-mappers/{certificate-mapper-name}:
    delete:
      summary: Delete a Certificate Mapper
      operationId: delete-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Certificate Mapper does not exist
        "409":
          description: The Certificate Mapper cannot be deleted
      security:
      - basicAuth: []
      tags:
      - certificate-mapper
    get:
      summary: Returns a single Certificate Mapper
      operationId: get-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/fingerprint-certificate-mapper-response'
                - $ref: '#/components/schemas/third-party-certificate-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Certificate Mapper does not exist
      security:
      - basicAuth: []
      tags:
      - certificate-mapper
    patch:
      summary: Update an existing Certificate Mapper by name
      operationId: update-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Certificate Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-response'
                - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-response'
                - $ref: '#/components/schemas/fingerprint-certificate-mapper-response'
                - $ref: '#/components/schemas/third-party-certificate-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Certificate Mapper does not exist
      security:
      - basicAuth: []
      tags:
      - certificate-mapper
  /log-publishers:
    post:
      summary: Add a new Log Publisher to the config
      operationId: add-log-publisher
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-syslog-json-audit-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-based-error-log-publisher-request'
              - $ref: '#/components/schemas/add-third-party-file-based-access-log-publisher-request'
              - $ref: '#/components/schemas/add-operation-timing-access-log-publisher-request'
              - $ref: '#/components/schemas/add-third-party-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-admin-alert-access-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-trace-log-publisher-request'
              - $ref: '#/components/schemas/add-jdbc-based-error-log-publisher-request'
              - $ref: '#/components/schemas/add-jdbc-based-access-log-publisher-request'
              - $ref: '#/components/schemas/add-common-log-file-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-text-error-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-based-access-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-json-audit-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-debug-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-error-log-publisher-request'
              - $ref: '#/components/schemas/add-third-party-error-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-text-access-log-publisher-request'
              - $ref: '#/components/schemas/add-detailed-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-json-access-log-publisher-request'
              - $ref: '#/components/schemas/add-debug-access-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-json-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-third-party-access-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-audit-log-publisher-request'
              - $ref: '#/components/schemas/add-json-error-log-publisher-request'
              - $ref: '#/components/schemas/add-groovy-scripted-file-based-access-log-publisher-request'
              - $ref: '#/components/schemas/add-groovy-scripted-file-based-error-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-json-access-log-publisher-request'
              - $ref: '#/components/schemas/add-groovy-scripted-access-log-publisher-request'
              - $ref: '#/components/schemas/add-third-party-file-based-error-log-publisher-request'
              - $ref: '#/components/schemas/add-console-json-audit-log-publisher-request'
              - $ref: '#/components/schemas/add-console-json-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-access-log-publisher-request'
              - $ref: '#/components/schemas/add-groovy-scripted-error-log-publisher-request'
              - $ref: '#/components/schemas/add-file-based-json-http-operation-log-publisher-request'
              - $ref: '#/components/schemas/add-syslog-json-error-log-publisher-request'
              - $ref: '#/components/schemas/add-groovy-scripted-http-operation-log-publisher-request'
        description: Create a new Log Publisher in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/syslog-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/operation-timing-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/admin-alert-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-trace-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-error-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-access-log-publisher-response'
                - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/file-based-debug-log-publisher-response'
                - $ref: '#/components/schemas/file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-access-log-publisher-response'
                - $ref: '#/components/schemas/detailed-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/json-access-log-publisher-response'
                - $ref: '#/components/schemas/debug-access-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/third-party-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-audit-log-publisher-response'
                - $ref: '#/components/schemas/json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/console-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/console-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Publisher already exists
      security:
      - basicAuth: []
      tags:
      - log-publisher
  /log-publishers/{log-publisher-name}:
    delete:
      summary: Delete a Log Publisher
      operationId: delete-log-publisher
      parameters:
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Publisher does not exist
        "409":
          description: The Log Publisher cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-publisher
    get:
      summary: Returns a single Log Publisher
      operationId: get-log-publisher
      parameters:
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/syslog-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/operation-timing-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/admin-alert-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-trace-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-error-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-access-log-publisher-response'
                - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/console-json-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/file-based-debug-log-publisher-response'
                - $ref: '#/components/schemas/file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-access-log-publisher-response'
                - $ref: '#/components/schemas/detailed-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/json-access-log-publisher-response'
                - $ref: '#/components/schemas/debug-access-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/third-party-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-audit-log-publisher-response'
                - $ref: '#/components/schemas/json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/console-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/console-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/console-json-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Publisher does not exist
      security:
      - basicAuth: []
      tags:
      - log-publisher
    patch:
      summary: Update an existing Log Publisher by name
      operationId: update-log-publisher
      parameters:
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Publisher
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/syslog-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/operation-timing-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/admin-alert-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-trace-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-error-log-publisher-response'
                - $ref: '#/components/schemas/jdbc-based-access-log-publisher-response'
                - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/console-json-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-based-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/file-based-debug-log-publisher-response'
                - $ref: '#/components/schemas/file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/third-party-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-text-access-log-publisher-response'
                - $ref: '#/components/schemas/detailed-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/json-access-log-publisher-response'
                - $ref: '#/components/schemas/debug-access-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/third-party-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-audit-log-publisher-response'
                - $ref: '#/components/schemas/json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-response'
                - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-response'
                - $ref: '#/components/schemas/console-json-audit-log-publisher-response'
                - $ref: '#/components/schemas/console-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/console-json-access-log-publisher-response'
                - $ref: '#/components/schemas/file-based-access-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-response'
                - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-response'
                - $ref: '#/components/schemas/syslog-json-error-log-publisher-response'
                - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Publisher does not exist
      security:
      - basicAuth: []
      tags:
      - log-publisher
  /log-publishers/{log-publisher-name}/debug-targets:
    post:
      summary: Add a new Debug Target to the config
      operationId: add-debug-target
      parameters:
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-debug-target-request'
        description: Create a new Debug Target in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/debug-target-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Debug Target already exists
      security:
      - basicAuth: []
      tags:
      - debug-target
  /log-publishers/{log-publisher-name}/debug-targets/{debug-target-name}:
    delete:
      summary: Delete a Debug Target
      operationId: delete-debug-target
      parameters:
      - description: Name of the Debug Target
        explode: false
        in: path
        name: debug-target-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Debug Target does not exist
        "409":
          description: The Debug Target cannot be deleted
      security:
      - basicAuth: []
      tags:
      - debug-target
    get:
      summary: Returns a single Debug Target
      operationId: get-debug-target
      parameters:
      - description: Name of the Debug Target
        explode: false
        in: path
        name: debug-target-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/debug-target-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Debug Target does not exist
      security:
      - basicAuth: []
      tags:
      - debug-target
    patch:
      summary: Update an existing Debug Target by name
      operationId: update-debug-target
      parameters:
      - description: Name of the Debug Target
        explode: false
        in: path
        name: debug-target-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Log Publisher
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Debug Target
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/debug-target-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Debug Target does not exist
      security:
      - basicAuth: []
      tags:
      - debug-target
  /replication-assurance-policies:
    post:
      summary: Add a new Replication Assurance Policy to the config
      operationId: add-replication-assurance-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-replication-assurance-policy-request'
        description: Create a new Replication Assurance Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Replication Assurance Policy already exists
      security:
      - basicAuth: []
      tags:
      - replication-assurance-policy
  /replication-assurance-policies/{replication-assurance-policy-name}:
    delete:
      summary: Delete a Replication Assurance Policy
      operationId: delete-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Replication Assurance Policy does not exist
        "409":
          description: The Replication Assurance Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - replication-assurance-policy
    get:
      summary: Returns a single Replication Assurance Policy
      operationId: get-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Replication Assurance Policy does not exist
      security:
      - basicAuth: []
      tags:
      - replication-assurance-policy
    patch:
      summary: Update an existing Replication Assurance Policy by name
      operationId: update-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Replication Assurance Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Replication Assurance Policy does not exist
      security:
      - basicAuth: []
      tags:
      - replication-assurance-policy
  /key-manager-providers:
    post:
      summary: Add a new Key Manager Provider to the config
      operationId: add-key-manager-provider
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-file-based-key-manager-provider-request'
              - $ref: '#/components/schemas/add-pkcs11-key-manager-provider-request'
              - $ref: '#/components/schemas/add-third-party-key-manager-provider-request'
        description: Create a new Key Manager Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/file-based-key-manager-provider-response'
                - $ref: '#/components/schemas/pkcs11-key-manager-provider-response'
                - $ref: '#/components/schemas/third-party-key-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Key Manager Provider already exists
      security:
      - basicAuth: []
      tags:
      - key-manager-provider
  /key-manager-providers/{key-manager-provider-name}:
    delete:
      summary: Delete a Key Manager Provider
      operationId: delete-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Manager Provider does not exist
        "409":
          description: The Key Manager Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - key-manager-provider
    get:
      summary: Returns a single Key Manager Provider
      operationId: get-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/file-based-key-manager-provider-response'
                - $ref: '#/components/schemas/custom-key-manager-provider-response'
                - $ref: '#/components/schemas/pkcs11-key-manager-provider-response'
                - $ref: '#/components/schemas/third-party-key-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Manager Provider does not exist
      security:
      - basicAuth: []
      tags:
      - key-manager-provider
    patch:
      summary: Update an existing Key Manager Provider by name
      operationId: update-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Key Manager Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/file-based-key-manager-provider-response'
                - $ref: '#/components/schemas/custom-key-manager-provider-response'
                - $ref: '#/components/schemas/pkcs11-key-manager-provider-response'
                - $ref: '#/components/schemas/third-party-key-manager-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Key Manager Provider does not exist
      security:
      - basicAuth: []
      tags:
      - key-manager-provider
  /external-servers:
    post:
      summary: Add a new External Server to the config
      operationId: add-external-server
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-smtp-external-server-request'
              - $ref: '#/components/schemas/add-nokia-ds-external-server-request'
              - $ref: '#/components/schemas/add-ping-identity-ds-external-server-request'
              - $ref: '#/components/schemas/add-active-directory-external-server-request'
              - $ref: '#/components/schemas/add-jdbc-external-server-request'
              - $ref: '#/components/schemas/add-syslog-external-server-request'
              - $ref: '#/components/schemas/add-ping-identity-proxy-server-external-server-request'
              - $ref: '#/components/schemas/add-http-proxy-external-server-request'
              - $ref: '#/components/schemas/add-nokia-proxy-server-external-server-request'
              - $ref: '#/components/schemas/add-opendj-external-server-request'
              - $ref: '#/components/schemas/add-ldap-external-server-request'
              - $ref: '#/components/schemas/add-ping-one-http-external-server-request'
              - $ref: '#/components/schemas/add-http-external-server-request'
              - $ref: '#/components/schemas/add-oracle-unified-directory-external-server-request'
              - $ref: '#/components/schemas/add-conjur-external-server-request'
              - $ref: '#/components/schemas/add-amazon-aws-external-server-request'
              - $ref: '#/components/schemas/add-vault-external-server-request'
        description: Create a new External Server in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-external-server-response'
                - $ref: '#/components/schemas/nokia-ds-external-server-response'
                - $ref: '#/components/schemas/ping-identity-ds-external-server-response'
                - $ref: '#/components/schemas/active-directory-external-server-response'
                - $ref: '#/components/schemas/jdbc-external-server-response'
                - $ref: '#/components/schemas/syslog-external-server-response'
                - $ref: '#/components/schemas/ping-identity-proxy-server-external-server-response'
                - $ref: '#/components/schemas/http-proxy-external-server-response'
                - $ref: '#/components/schemas/nokia-proxy-server-external-server-response'
                - $ref: '#/components/schemas/opendj-external-server-response'
                - $ref: '#/components/schemas/ldap-external-server-response'
                - $ref: '#/components/schemas/ping-one-http-external-server-response'
                - $ref: '#/components/schemas/http-external-server-response'
                - $ref: '#/components/schemas/oracle-unified-directory-external-server-response'
                - $ref: '#/components/schemas/conjur-external-server-response'
                - $ref: '#/components/schemas/amazon-aws-external-server-response'
                - $ref: '#/components/schemas/vault-external-server-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The External Server already exists
      security:
      - basicAuth: []
      tags:
      - external-server
  /external-servers/{external-server-name}:
    delete:
      summary: Delete a External Server
      operationId: delete-external-server
      parameters:
      - description: Name of the External Server
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The External Server does not exist
        "409":
          description: The External Server cannot be deleted
      security:
      - basicAuth: []
      tags:
      - external-server
    get:
      summary: Returns a single External Server
      operationId: get-external-server
      parameters:
      - description: Name of the External Server
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-external-server-response'
                - $ref: '#/components/schemas/nokia-ds-external-server-response'
                - $ref: '#/components/schemas/ping-identity-ds-external-server-response'
                - $ref: '#/components/schemas/active-directory-external-server-response'
                - $ref: '#/components/schemas/jdbc-external-server-response'
                - $ref: '#/components/schemas/syslog-external-server-response'
                - $ref: '#/components/schemas/ping-identity-proxy-server-external-server-response'
                - $ref: '#/components/schemas/http-proxy-external-server-response'
                - $ref: '#/components/schemas/nokia-proxy-server-external-server-response'
                - $ref: '#/components/schemas/opendj-external-server-response'
                - $ref: '#/components/schemas/ldap-external-server-response'
                - $ref: '#/components/schemas/ping-one-http-external-server-response'
                - $ref: '#/components/schemas/http-external-server-response'
                - $ref: '#/components/schemas/oracle-unified-directory-external-server-response'
                - $ref: '#/components/schemas/conjur-external-server-response'
                - $ref: '#/components/schemas/amazon-aws-external-server-response'
                - $ref: '#/components/schemas/vault-external-server-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The External Server does not exist
      security:
      - basicAuth: []
      tags:
      - external-server
    patch:
      summary: Update an existing External Server by name
      operationId: update-external-server
      parameters:
      - description: Name of the External Server
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing External Server
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/smtp-external-server-response'
                - $ref: '#/components/schemas/nokia-ds-external-server-response'
                - $ref: '#/components/schemas/ping-identity-ds-external-server-response'
                - $ref: '#/components/schemas/active-directory-external-server-response'
                - $ref: '#/components/schemas/jdbc-external-server-response'
                - $ref: '#/components/schemas/syslog-external-server-response'
                - $ref: '#/components/schemas/ping-identity-proxy-server-external-server-response'
                - $ref: '#/components/schemas/http-proxy-external-server-response'
                - $ref: '#/components/schemas/nokia-proxy-server-external-server-response'
                - $ref: '#/components/schemas/opendj-external-server-response'
                - $ref: '#/components/schemas/ldap-external-server-response'
                - $ref: '#/components/schemas/ping-one-http-external-server-response'
                - $ref: '#/components/schemas/http-external-server-response'
                - $ref: '#/components/schemas/oracle-unified-directory-external-server-response'
                - $ref: '#/components/schemas/conjur-external-server-response'
                - $ref: '#/components/schemas/amazon-aws-external-server-response'
                - $ref: '#/components/schemas/vault-external-server-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The External Server does not exist
      security:
      - basicAuth: []
      tags:
      - external-server
  /dn-maps:
    post:
      summary: Add a new DN Map to the config
      operationId: add-dn-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-dn-map-request'
        description: Create a new DN Map in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The DN Map already exists
      security:
      - basicAuth: []
      tags:
      - dn-map
  /dn-maps/{dn-map-name}:
    delete:
      summary: Delete a DN Map
      operationId: delete-dn-map
      parameters:
      - description: Name of the DN Map
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The DN Map does not exist
        "409":
          description: The DN Map cannot be deleted
      security:
      - basicAuth: []
      tags:
      - dn-map
    get:
      summary: Returns a single DN Map
      operationId: get-dn-map
      parameters:
      - description: Name of the DN Map
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The DN Map does not exist
      security:
      - basicAuth: []
      tags:
      - dn-map
    patch:
      summary: Update an existing DN Map by name
      operationId: update-dn-map
      parameters:
      - description: Name of the DN Map
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing DN Map
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The DN Map does not exist
      security:
      - basicAuth: []
      tags:
      - dn-map
  /change-subscription-handlers:
    post:
      summary: Add a new Change Subscription Handler to the config
      operationId: add-change-subscription-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-groovy-scripted-change-subscription-handler-request'
              - $ref: '#/components/schemas/add-logging-change-subscription-handler-request'
              - $ref: '#/components/schemas/add-third-party-change-subscription-handler-request'
        description: Create a new Change Subscription Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-response'
                - $ref: '#/components/schemas/logging-change-subscription-handler-response'
                - $ref: '#/components/schemas/third-party-change-subscription-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Change Subscription Handler already exists
      security:
      - basicAuth: []
      tags:
      - change-subscription-handler
  /change-subscription-handlers/{change-subscription-handler-name}:
    delete:
      summary: Delete a Change Subscription Handler
      operationId: delete-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription Handler does not exist
        "409":
          description: The Change Subscription Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - change-subscription-handler
    get:
      summary: Returns a single Change Subscription Handler
      operationId: get-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-response'
                - $ref: '#/components/schemas/logging-change-subscription-handler-response'
                - $ref: '#/components/schemas/third-party-change-subscription-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription Handler does not exist
      security:
      - basicAuth: []
      tags:
      - change-subscription-handler
    patch:
      summary: Update an existing Change Subscription Handler by name
      operationId: update-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Change Subscription Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-response'
                - $ref: '#/components/schemas/logging-change-subscription-handler-response'
                - $ref: '#/components/schemas/third-party-change-subscription-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Change Subscription Handler does not exist
      security:
      - basicAuth: []
      tags:
      - change-subscription-handler
  /obscured-values:
    post:
      summary: Add a new Obscured Value to the config
      operationId: add-obscured-value
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-obscured-value-request'
        description: Create a new Obscured Value in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Obscured Value already exists
      security:
      - basicAuth: []
      tags:
      - obscured-value
  /obscured-values/{obscured-value-name}:
    delete:
      summary: Delete a Obscured Value
      operationId: delete-obscured-value
      parameters:
      - description: Name of the Obscured Value
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Obscured Value does not exist
        "409":
          description: The Obscured Value cannot be deleted
      security:
      - basicAuth: []
      tags:
      - obscured-value
    get:
      summary: Returns a single Obscured Value
      operationId: get-obscured-value
      parameters:
      - description: Name of the Obscured Value
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Obscured Value does not exist
      security:
      - basicAuth: []
      tags:
      - obscured-value
    patch:
      summary: Update an existing Obscured Value by name
      operationId: update-obscured-value
      parameters:
      - description: Name of the Obscured Value
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Obscured Value
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Obscured Value does not exist
      security:
      - basicAuth: []
      tags:
      - obscured-value
  /crypto-manager:
    get:
      summary: Returns a single Crypto Manager
      operationId: get-crypto-manager
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crypto-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Crypto Manager does not exist
      security:
      - basicAuth: []
      tags:
      - crypto-manager
    patch:
      summary: Update an existing Crypto Manager by name
      operationId: update-crypto-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Crypto Manager
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crypto-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Crypto Manager does not exist
      security:
      - basicAuth: []
      tags:
      - crypto-manager
  /monitor-providers:
    post:
      summary: Add a new Monitor Provider to the config
      operationId: add-monitor-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-third-party-monitor-provider-request'
        description: Create a new Monitor Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/third-party-monitor-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Monitor Provider already exists
      security:
      - basicAuth: []
      tags:
      - monitor-provider
  /monitor-providers/{monitor-provider-name}:
    delete:
      summary: Delete a Monitor Provider
      operationId: delete-monitor-provider
      parameters:
      - description: Name of the Monitor Provider
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitor Provider does not exist
        "409":
          description: The Monitor Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - monitor-provider
    get:
      summary: Returns a single Monitor Provider
      operationId: get-monitor-provider
      parameters:
      - description: Name of the Monitor Provider
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/general-monitor-provider-response'
                - $ref: '#/components/schemas/memory-usage-monitor-provider-response'
                - $ref: '#/components/schemas/stack-trace-monitor-provider-response'
                - $ref: '#/components/schemas/disk-space-usage-monitor-provider-response'
                - $ref: '#/components/schemas/system-info-monitor-provider-response'
                - $ref: '#/components/schemas/custom-monitor-provider-response'
                - $ref: '#/components/schemas/active-operations-monitor-provider-response'
                - $ref: '#/components/schemas/ssl-context-monitor-provider-response'
                - $ref: '#/components/schemas/client-connection-monitor-provider-response'
                - $ref: '#/components/schemas/version-monitor-provider-response'
                - $ref: '#/components/schemas/host-system-monitor-provider-response'
                - $ref: '#/components/schemas/third-party-monitor-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitor Provider does not exist
      security:
      - basicAuth: []
      tags:
      - monitor-provider
    patch:
      summary: Update an existing Monitor Provider by name
      operationId: update-monitor-provider
      parameters:
      - description: Name of the Monitor Provider
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Monitor Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/general-monitor-provider-response'
                - $ref: '#/components/schemas/memory-usage-monitor-provider-response'
                - $ref: '#/components/schemas/stack-trace-monitor-provider-response'
                - $ref: '#/components/schemas/disk-space-usage-monitor-provider-response'
                - $ref: '#/components/schemas/system-info-monitor-provider-response'
                - $ref: '#/components/schemas/custom-monitor-provider-response'
                - $ref: '#/components/schemas/active-operations-monitor-provider-response'
                - $ref: '#/components/schemas/ssl-context-monitor-provider-response'
                - $ref: '#/components/schemas/client-connection-monitor-provider-response'
                - $ref: '#/components/schemas/version-monitor-provider-response'
                - $ref: '#/components/schemas/host-system-monitor-provider-response'
                - $ref: '#/components/schemas/third-party-monitor-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Monitor Provider does not exist
      security:
      - basicAuth: []
      tags:
      - monitor-provider
  /group-implementations/{group-implementation-name}:
    get:
      summary: Returns a single Group Implementation
      operationId: get-group-implementation
      parameters:
      - description: Name of the Group Implementation
        explode: false
        in: path
        name: group-implementation-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/static-group-implementation-response'
                - $ref: '#/components/schemas/virtual-static-group-implementation-response'
                - $ref: '#/components/schemas/dynamic-group-implementation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Group Implementation does not exist
      security:
      - basicAuth: []
      tags:
      - group-implementation
    patch:
      summary: Update an existing Group Implementation by name
      operationId: update-group-implementation
      parameters:
      - description: Name of the Group Implementation
        explode: false
        in: path
        name: group-implementation-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Group Implementation
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/static-group-implementation-response'
                - $ref: '#/components/schemas/virtual-static-group-implementation-response'
                - $ref: '#/components/schemas/dynamic-group-implementation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Group Implementation does not exist
      security:
      - basicAuth: []
      tags:
      - group-implementation
  /gauge-data-sources:
    post:
      summary: Add a new Gauge Data Source to the config
      operationId: add-gauge-data-source
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-indicator-gauge-data-source-request'
              - $ref: '#/components/schemas/add-numeric-gauge-data-source-request'
        description: Create a new Gauge Data Source in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-data-source-response'
                - $ref: '#/components/schemas/numeric-gauge-data-source-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Gauge Data Source already exists
      security:
      - basicAuth: []
      tags:
      - gauge-data-source
  /gauge-data-sources/{gauge-data-source-name}:
    delete:
      summary: Delete a Gauge Data Source
      operationId: delete-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge Data Source does not exist
        "409":
          description: The Gauge Data Source cannot be deleted
      security:
      - basicAuth: []
      tags:
      - gauge-data-source
    get:
      summary: Returns a single Gauge Data Source
      operationId: get-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-data-source-response'
                - $ref: '#/components/schemas/numeric-gauge-data-source-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge Data Source does not exist
      security:
      - basicAuth: []
      tags:
      - gauge-data-source
    patch:
      summary: Update an existing Gauge Data Source by name
      operationId: update-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Gauge Data Source
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/indicator-gauge-data-source-response'
                - $ref: '#/components/schemas/numeric-gauge-data-source-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Gauge Data Source does not exist
      security:
      - basicAuth: []
      tags:
      - gauge-data-source
  /backends:
    post:
      summary: Add a new Backend to the config
      operationId: add-backend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-local-db-backend-request'
        description: Create a new Backend in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/local-db-backend-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Backend already exists
      security:
      - basicAuth: []
      tags:
      - backend
  /backends/{backend-name}:
    delete:
      summary: Delete a Backend
      operationId: delete-backend
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Backend does not exist
        "409":
          description: The Backend cannot be deleted
      security:
      - basicAuth: []
      tags:
      - backend
    get:
      summary: Returns a single Backend
      operationId: get-backend
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/schema-backend-response'
                - $ref: '#/components/schemas/backup-backend-response'
                - $ref: '#/components/schemas/encryption-settings-backend-response'
                - $ref: '#/components/schemas/ldif-backend-response'
                - $ref: '#/components/schemas/trust-store-backend-response'
                - $ref: '#/components/schemas/custom-backend-response'
                - $ref: '#/components/schemas/changelog-backend-response'
                - $ref: '#/components/schemas/monitor-backend-response'
                - $ref: '#/components/schemas/local-db-backend-response'
                - $ref: '#/components/schemas/config-file-handler-backend-response'
                - $ref: '#/components/schemas/task-backend-response'
                - $ref: '#/components/schemas/alert-backend-response'
                - $ref: '#/components/schemas/alarm-backend-response'
                - $ref: '#/components/schemas/metrics-backend-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Backend does not exist
      security:
      - basicAuth: []
      tags:
      - backend
    patch:
      summary: Update an existing Backend by name
      operationId: update-backend
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Backend
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/schema-backend-response'
                - $ref: '#/components/schemas/backup-backend-response'
                - $ref: '#/components/schemas/encryption-settings-backend-response'
                - $ref: '#/components/schemas/ldif-backend-response'
                - $ref: '#/components/schemas/trust-store-backend-response'
                - $ref: '#/components/schemas/custom-backend-response'
                - $ref: '#/components/schemas/changelog-backend-response'
                - $ref: '#/components/schemas/monitor-backend-response'
                - $ref: '#/components/schemas/local-db-backend-response'
                - $ref: '#/components/schemas/config-file-handler-backend-response'
                - $ref: '#/components/schemas/task-backend-response'
                - $ref: '#/components/schemas/alert-backend-response'
                - $ref: '#/components/schemas/alarm-backend-response'
                - $ref: '#/components/schemas/metrics-backend-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Backend does not exist
      security:
      - basicAuth: []
      tags:
      - backend
  /backends/{backend-name}/local-db-composite-indexes:
    post:
      summary: Add a new Local DB Composite Index to the config
      operationId: add-local-db-composite-index
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-local-db-composite-index-request'
        description: Create a new Local DB Composite Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-composite-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Local DB Composite Index already exists
      security:
      - basicAuth: []
      tags:
      - local-db-composite-index
  /backends/{backend-name}/local-db-composite-indexes/{local-db-composite-index-name}:
    delete:
      summary: Delete a Local DB Composite Index
      operationId: delete-local-db-composite-index
      parameters:
      - description: Name of the Local DB Composite Index
        explode: false
        in: path
        name: local-db-composite-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB Composite Index does not exist
        "409":
          description: The Local DB Composite Index cannot be deleted
      security:
      - basicAuth: []
      tags:
      - local-db-composite-index
    get:
      summary: Returns a single Local DB Composite Index
      operationId: get-local-db-composite-index
      parameters:
      - description: Name of the Local DB Composite Index
        explode: false
        in: path
        name: local-db-composite-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-composite-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB Composite Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-composite-index
    patch:
      summary: Update an existing Local DB Composite Index by name
      operationId: update-local-db-composite-index
      parameters:
      - description: Name of the Local DB Composite Index
        explode: false
        in: path
        name: local-db-composite-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Local DB Composite Index
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-composite-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Local DB Composite Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-composite-index
  /backends/{backend-name}/local-db-vlv-indexes:
    post:
      summary: Add a new Local DB VLV Index to the config
      operationId: add-local-db-vlv-index
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-local-db-vlv-index-request'
        description: Create a new Local DB VLV Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-vlv-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Local DB VLV Index already exists
      security:
      - basicAuth: []
      tags:
      - local-db-vlv-index
  /backends/{backend-name}/local-db-vlv-indexes/{local-db-vlv-index-name}:
    delete:
      summary: Delete a Local DB VLV Index
      operationId: delete-local-db-vlv-index
      parameters:
      - description: Name of the Local DB VLV Index
        explode: false
        in: path
        name: local-db-vlv-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB VLV Index does not exist
        "409":
          description: The Local DB VLV Index cannot be deleted
      security:
      - basicAuth: []
      tags:
      - local-db-vlv-index
    get:
      summary: Returns a single Local DB VLV Index
      operationId: get-local-db-vlv-index
      parameters:
      - description: Name of the Local DB VLV Index
        explode: false
        in: path
        name: local-db-vlv-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-vlv-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB VLV Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-vlv-index
    patch:
      summary: Update an existing Local DB VLV Index by name
      operationId: update-local-db-vlv-index
      parameters:
      - description: Name of the Local DB VLV Index
        explode: false
        in: path
        name: local-db-vlv-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Local DB VLV Index
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-vlv-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Local DB VLV Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-vlv-index
  /backends/{backend-name}/local-db-indexes:
    post:
      summary: Add a new Local DB Index to the config
      operationId: add-local-db-index
      parameters:
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-local-db-index-request'
        description: Create a new Local DB Index in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Local DB Index already exists
      security:
      - basicAuth: []
      tags:
      - local-db-index
  /backends/{backend-name}/local-db-indexes/{local-db-index-name}:
    delete:
      summary: Delete a Local DB Index
      operationId: delete-local-db-index
      parameters:
      - description: Name of the Local DB Index
        explode: false
        in: path
        name: local-db-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB Index does not exist
        "409":
          description: The Local DB Index cannot be deleted
      security:
      - basicAuth: []
      tags:
      - local-db-index
    get:
      summary: Returns a single Local DB Index
      operationId: get-local-db-index
      parameters:
      - description: Name of the Local DB Index
        explode: false
        in: path
        name: local-db-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Local DB Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-index
    patch:
      summary: Update an existing Local DB Index by name
      operationId: update-local-db-index
      parameters:
      - description: Name of the Local DB Index
        explode: false
        in: path
        name: local-db-index-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the Backend
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Local DB Index
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/local-db-index-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Local DB Index does not exist
      security:
      - basicAuth: []
      tags:
      - local-db-index
  /attribute-syntaxes/{attribute-syntax-name}:
    get:
      summary: Returns a single Attribute Syntax
      operationId: get-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
                - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
                - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
                - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
                - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
                - $ref: '#/components/schemas/integer-attribute-syntax-response'
                - $ref: '#/components/schemas/uuid-attribute-syntax-response'
                - $ref: '#/components/schemas/generic-attribute-syntax-response'
                - $ref: '#/components/schemas/json-object-attribute-syntax-response'
                - $ref: '#/components/schemas/user-password-attribute-syntax-response'
                - $ref: '#/components/schemas/boolean-attribute-syntax-response'
                - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
                - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
                - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
                - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - attribute-syntax
    patch:
      summary: Update an existing Attribute Syntax by name
      operationId: update-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Attribute Syntax
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
                - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
                - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
                - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
                - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
                - $ref: '#/components/schemas/integer-attribute-syntax-response'
                - $ref: '#/components/schemas/uuid-attribute-syntax-response'
                - $ref: '#/components/schemas/generic-attribute-syntax-response'
                - $ref: '#/components/schemas/json-object-attribute-syntax-response'
                - $ref: '#/components/schemas/user-password-attribute-syntax-response'
                - $ref: '#/components/schemas/boolean-attribute-syntax-response'
                - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
                - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
                - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
                - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      tags:
      - attribute-syntax
  /work-queue:
    get:
      summary: Returns a single Work Queue
      operationId: get-work-queue
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/high-throughput-work-queue-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Work Queue does not exist
      security:
      - basicAuth: []
      tags:
      - work-queue
    patch:
      summary: Update an existing Work Queue by name
      operationId: update-work-queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Work Queue
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/high-throughput-work-queue-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Work Queue does not exist
      security:
      - basicAuth: []
      tags:
      - work-queue
  /uncached-entry-criteria:
    post:
      summary: Add a new Uncached Entry Criteria to the config
      operationId: add-uncached-entry-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-default-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-last-access-time-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-filter-based-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-groovy-scripted-uncached-entry-criteria-request'
              - $ref: '#/components/schemas/add-third-party-uncached-entry-criteria-request'
        description: Create a new Uncached Entry Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Uncached Entry Criteria already exists
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
  /uncached-entry-criteria/{uncached-entry-criteria-name}:
    delete:
      summary: Delete a Uncached Entry Criteria
      operationId: delete-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
        "409":
          description: The Uncached Entry Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
    get:
      summary: Returns a single Uncached Entry Criteria
      operationId: get-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
    patch:
      summary: Update an existing Uncached Entry Criteria by name
      operationId: update-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Uncached Entry Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
                - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - uncached-entry-criteria
  /http-servlet-extensions:
    post:
      summary: Add a new HTTP Servlet Extension to the config
      operationId: add-http-servlet-extension
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-quickstart-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-availability-state-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-prometheus-monitoring-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-ldap-mapped-scim-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-groovy-scripted-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-file-server-http-servlet-extension-request'
              - $ref: '#/components/schemas/add-third-party-http-servlet-extension-request'
        description: Create a new HTTP Servlet Extension in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/quickstart-http-servlet-extension-response'
                - $ref: '#/components/schemas/availability-state-http-servlet-extension-response'
                - $ref: '#/components/schemas/prometheus-monitoring-http-servlet-extension-response'
                - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-response'
                - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-response'
                - $ref: '#/components/schemas/file-server-http-servlet-extension-response'
                - $ref: '#/components/schemas/third-party-http-servlet-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The HTTP Servlet Extension already exists
      security:
      - basicAuth: []
      tags:
      - http-servlet-extension
  /http-servlet-extensions/{http-servlet-extension-name}:
    delete:
      summary: Delete a HTTP Servlet Extension
      operationId: delete-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Extension does not exist
        "409":
          description: The HTTP Servlet Extension cannot be deleted
      security:
      - basicAuth: []
      tags:
      - http-servlet-extension
    get:
      summary: Returns a single HTTP Servlet Extension
      operationId: get-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/delegated-admin-http-servlet-extension-response'
                - $ref: '#/components/schemas/quickstart-http-servlet-extension-response'
                - $ref: '#/components/schemas/availability-state-http-servlet-extension-response'
                - $ref: '#/components/schemas/prometheus-monitoring-http-servlet-extension-response'
                - $ref: '#/components/schemas/velocity-http-servlet-extension-response'
                - $ref: '#/components/schemas/consent-http-servlet-extension-response'
                - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-response'
                - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-response'
                - $ref: '#/components/schemas/file-server-http-servlet-extension-response'
                - $ref: '#/components/schemas/config-http-servlet-extension-response'
                - $ref: '#/components/schemas/scim2-http-servlet-extension-response'
                - $ref: '#/components/schemas/directory-rest-api-http-servlet-extension-response'
                - $ref: '#/components/schemas/third-party-http-servlet-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Extension does not exist
      security:
      - basicAuth: []
      tags:
      - http-servlet-extension
    patch:
      summary: Update an existing HTTP Servlet Extension by name
      operationId: update-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Servlet Extension
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/delegated-admin-http-servlet-extension-response'
                - $ref: '#/components/schemas/quickstart-http-servlet-extension-response'
                - $ref: '#/components/schemas/availability-state-http-servlet-extension-response'
                - $ref: '#/components/schemas/prometheus-monitoring-http-servlet-extension-response'
                - $ref: '#/components/schemas/velocity-http-servlet-extension-response'
                - $ref: '#/components/schemas/consent-http-servlet-extension-response'
                - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-response'
                - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-response'
                - $ref: '#/components/schemas/file-server-http-servlet-extension-response'
                - $ref: '#/components/schemas/config-http-servlet-extension-response'
                - $ref: '#/components/schemas/scim2-http-servlet-extension-response'
                - $ref: '#/components/schemas/directory-rest-api-http-servlet-extension-response'
                - $ref: '#/components/schemas/third-party-http-servlet-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Servlet Extension does not exist
      security:
      - basicAuth: []
      tags:
      - http-servlet-extension
  /http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics:
    post:
      summary: Add a new Prometheus Monitor Attribute Metric to the config
      operationId: add-prometheus-monitor-attribute-metric
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-prometheus-monitor-attribute-metric-request'
        description: Create a new Prometheus Monitor Attribute Metric in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prometheus-monitor-attribute-metric-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Prometheus Monitor Attribute Metric already exists
      security:
      - basicAuth: []
      tags:
      - prometheus-monitor-attribute-metric
  /http-servlet-extensions/{http-servlet-extension-name}/prometheus-monitor-attribute-metrics/{prometheus-monitor-attribute-metric-name}:
    delete:
      summary: Delete a Prometheus Monitor Attribute Metric
      operationId: delete-prometheus-monitor-attribute-metric
      parameters:
      - description: Name of the Prometheus Monitor Attribute Metric
        explode: false
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Prometheus Monitor Attribute Metric does not exist
        "409":
          description: The Prometheus Monitor Attribute Metric cannot be deleted
      security:
      - basicAuth: []
      tags:
      - prometheus-monitor-attribute-metric
    get:
      summary: Returns a single Prometheus Monitor Attribute Metric
      operationId: get-prometheus-monitor-attribute-metric
      parameters:
      - description: Name of the Prometheus Monitor Attribute Metric
        explode: false
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prometheus-monitor-attribute-metric-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Prometheus Monitor Attribute Metric does not exist
      security:
      - basicAuth: []
      tags:
      - prometheus-monitor-attribute-metric
    patch:
      summary: Update an existing Prometheus Monitor Attribute Metric by name
      operationId: update-prometheus-monitor-attribute-metric
      parameters:
      - description: Name of the Prometheus Monitor Attribute Metric
        explode: false
        in: path
        name: prometheus-monitor-attribute-metric-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Prometheus Monitor Attribute Metric
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/prometheus-monitor-attribute-metric-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Prometheus Monitor Attribute Metric does not exist
      security:
      - basicAuth: []
      tags:
      - prometheus-monitor-attribute-metric
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers:
    post:
      summary: Add a new Velocity Context Provider to the config
      operationId: add-velocity-context-provider
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-velocity-tools-velocity-context-provider-request'
              - $ref: '#/components/schemas/add-third-party-velocity-context-provider-request'
        description: Create a new Velocity Context Provider in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/velocity-tools-velocity-context-provider-response'
                - $ref: '#/components/schemas/third-party-velocity-context-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Velocity Context Provider already exists
      security:
      - basicAuth: []
      tags:
      - velocity-context-provider
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-context-providers/{velocity-context-provider-name}:
    delete:
      summary: Delete a Velocity Context Provider
      operationId: delete-velocity-context-provider
      parameters:
      - description: Name of the Velocity Context Provider
        explode: false
        in: path
        name: velocity-context-provider-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Velocity Context Provider does not exist
        "409":
          description: The Velocity Context Provider cannot be deleted
      security:
      - basicAuth: []
      tags:
      - velocity-context-provider
    get:
      summary: Returns a single Velocity Context Provider
      operationId: get-velocity-context-provider
      parameters:
      - description: Name of the Velocity Context Provider
        explode: false
        in: path
        name: velocity-context-provider-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/velocity-tools-velocity-context-provider-response'
                - $ref: '#/components/schemas/custom-velocity-context-provider-response'
                - $ref: '#/components/schemas/third-party-velocity-context-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Velocity Context Provider does not exist
      security:
      - basicAuth: []
      tags:
      - velocity-context-provider
    patch:
      summary: Update an existing Velocity Context Provider by name
      operationId: update-velocity-context-provider
      parameters:
      - description: Name of the Velocity Context Provider
        explode: false
        in: path
        name: velocity-context-provider-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Velocity Context Provider
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/velocity-tools-velocity-context-provider-response'
                - $ref: '#/components/schemas/custom-velocity-context-provider-response'
                - $ref: '#/components/schemas/third-party-velocity-context-provider-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Velocity Context Provider does not exist
      security:
      - basicAuth: []
      tags:
      - velocity-context-provider
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders:
    post:
      summary: Add a new Velocity Template Loader to the config
      operationId: add-velocity-template-loader
      parameters:
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-velocity-template-loader-request'
        description: Create a new Velocity Template Loader in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity-template-loader-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Velocity Template Loader already exists
      security:
      - basicAuth: []
      tags:
      - velocity-template-loader
  /http-servlet-extensions/{http-servlet-extension-name}/velocity-template-loaders/{velocity-template-loader-name}:
    delete:
      summary: Delete a Velocity Template Loader
      operationId: delete-velocity-template-loader
      parameters:
      - description: Name of the Velocity Template Loader
        explode: false
        in: path
        name: velocity-template-loader-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Velocity Template Loader does not exist
        "409":
          description: The Velocity Template Loader cannot be deleted
      security:
      - basicAuth: []
      tags:
      - velocity-template-loader
    get:
      summary: Returns a single Velocity Template Loader
      operationId: get-velocity-template-loader
      parameters:
      - description: Name of the Velocity Template Loader
        explode: false
        in: path
        name: velocity-template-loader-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity-template-loader-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Velocity Template Loader does not exist
      security:
      - basicAuth: []
      tags:
      - velocity-template-loader
    patch:
      summary: Update an existing Velocity Template Loader by name
      operationId: update-velocity-template-loader
      parameters:
      - description: Name of the Velocity Template Loader
        explode: false
        in: path
        name: velocity-template-loader-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the HTTP Servlet Extension
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Velocity Template Loader
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/velocity-template-loader-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Velocity Template Loader does not exist
      security:
      - basicAuth: []
      tags:
      - velocity-template-loader
  /client-connection-policies:
    post:
      summary: Add a new Client Connection Policy to the config
      operationId: add-client-connection-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-client-connection-policy-request'
        description: Create a new Client Connection Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Client Connection Policy already exists
      security:
      - basicAuth: []
      tags:
      - client-connection-policy
  /client-connection-policies/{client-connection-policy-name}:
    delete:
      summary: Delete a Client Connection Policy
      operationId: delete-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Client Connection Policy does not exist
        "409":
          description: The Client Connection Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - client-connection-policy
    get:
      summary: Returns a single Client Connection Policy
      operationId: get-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Client Connection Policy does not exist
      security:
      - basicAuth: []
      tags:
      - client-connection-policy
    patch:
      summary: Update an existing Client Connection Policy by name
      operationId: update-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Client Connection Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Client Connection Policy does not exist
      security:
      - basicAuth: []
      tags:
      - client-connection-policy
  /matching-rules/{matching-rule-name}:
    get:
      summary: Returns a single Matching Rule
      operationId: get-matching-rule
      parameters:
      - description: Name of the Matching Rule
        explode: false
        in: path
        name: matching-rule-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ordering-matching-rule-response'
                - $ref: '#/components/schemas/approximate-matching-rule-response'
                - $ref: '#/components/schemas/equality-matching-rule-response'
                - $ref: '#/components/schemas/substring-matching-rule-response'
                - $ref: '#/components/schemas/generic-matching-rule-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Matching Rule does not exist
      security:
      - basicAuth: []
      tags:
      - matching-rule
    patch:
      summary: Update an existing Matching Rule by name
      operationId: update-matching-rule
      parameters:
      - description: Name of the Matching Rule
        explode: false
        in: path
        name: matching-rule-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Matching Rule
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ordering-matching-rule-response'
                - $ref: '#/components/schemas/approximate-matching-rule-response'
                - $ref: '#/components/schemas/equality-matching-rule-response'
                - $ref: '#/components/schemas/substring-matching-rule-response'
                - $ref: '#/components/schemas/generic-matching-rule-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Matching Rule does not exist
      security:
      - basicAuth: []
      tags:
      - matching-rule
  /virtual-attributes:
    post:
      summary: Add a new Virtual Attribute to the config
      operationId: add-virtual-attribute
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-mirror-virtual-attribute-request'
              - $ref: '#/components/schemas/add-constructed-virtual-attribute-request'
              - $ref: '#/components/schemas/add-is-member-of-virtual-attribute-request'
              - $ref: '#/components/schemas/add-reverse-dn-join-virtual-attribute-request'
              - $ref: '#/components/schemas/add-identify-references-virtual-attribute-request'
              - $ref: '#/components/schemas/add-user-defined-virtual-attribute-request'
              - $ref: '#/components/schemas/add-entry-dn-virtual-attribute-request'
              - $ref: '#/components/schemas/add-equality-join-virtual-attribute-request'
              - $ref: '#/components/schemas/add-groovy-scripted-virtual-attribute-request'
              - $ref: '#/components/schemas/add-member-virtual-attribute-request'
              - $ref: '#/components/schemas/add-password-policy-state-json-virtual-attribute-request'
              - $ref: '#/components/schemas/add-dn-join-virtual-attribute-request'
              - $ref: '#/components/schemas/add-third-party-virtual-attribute-request'
        description: Create a new Virtual Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/mirror-virtual-attribute-response'
                - $ref: '#/components/schemas/constructed-virtual-attribute-response'
                - $ref: '#/components/schemas/is-member-of-virtual-attribute-response'
                - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/identify-references-virtual-attribute-response'
                - $ref: '#/components/schemas/user-defined-virtual-attribute-response'
                - $ref: '#/components/schemas/entry-dn-virtual-attribute-response'
                - $ref: '#/components/schemas/equality-join-virtual-attribute-response'
                - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-response'
                - $ref: '#/components/schemas/member-virtual-attribute-response'
                - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-response'
                - $ref: '#/components/schemas/dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/third-party-virtual-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Virtual Attribute already exists
      security:
      - basicAuth: []
      tags:
      - virtual-attribute
  /virtual-attributes/{virtual-attribute-name}:
    delete:
      summary: Delete a Virtual Attribute
      operationId: delete-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Virtual Attribute does not exist
        "409":
          description: The Virtual Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - virtual-attribute
    get:
      summary: Returns a single Virtual Attribute
      operationId: get-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/mirror-virtual-attribute-response'
                - $ref: '#/components/schemas/entry-checksum-virtual-attribute-response'
                - $ref: '#/components/schemas/member-of-server-group-virtual-attribute-response'
                - $ref: '#/components/schemas/constructed-virtual-attribute-response'
                - $ref: '#/components/schemas/is-member-of-virtual-attribute-response'
                - $ref: '#/components/schemas/custom-virtual-attribute-response'
                - $ref: '#/components/schemas/num-subordinates-virtual-attribute-response'
                - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/identify-references-virtual-attribute-response'
                - $ref: '#/components/schemas/user-defined-virtual-attribute-response'
                - $ref: '#/components/schemas/current-time-virtual-attribute-response'
                - $ref: '#/components/schemas/short-unique-id-virtual-attribute-response'
                - $ref: '#/components/schemas/entry-dn-virtual-attribute-response'
                - $ref: '#/components/schemas/has-subordinates-virtual-attribute-response'
                - $ref: '#/components/schemas/equality-join-virtual-attribute-response'
                - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-response'
                - $ref: '#/components/schemas/instance-name-virtual-attribute-response'
                - $ref: '#/components/schemas/replication-state-detail-virtual-attribute-response'
                - $ref: '#/components/schemas/member-virtual-attribute-response'
                - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-response'
                - $ref: '#/components/schemas/subschema-subentry-virtual-attribute-response'
                - $ref: '#/components/schemas/dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/third-party-virtual-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Virtual Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - virtual-attribute
    patch:
      summary: Update an existing Virtual Attribute by name
      operationId: update-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Virtual Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/mirror-virtual-attribute-response'
                - $ref: '#/components/schemas/entry-checksum-virtual-attribute-response'
                - $ref: '#/components/schemas/member-of-server-group-virtual-attribute-response'
                - $ref: '#/components/schemas/constructed-virtual-attribute-response'
                - $ref: '#/components/schemas/is-member-of-virtual-attribute-response'
                - $ref: '#/components/schemas/custom-virtual-attribute-response'
                - $ref: '#/components/schemas/num-subordinates-virtual-attribute-response'
                - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/identify-references-virtual-attribute-response'
                - $ref: '#/components/schemas/user-defined-virtual-attribute-response'
                - $ref: '#/components/schemas/current-time-virtual-attribute-response'
                - $ref: '#/components/schemas/short-unique-id-virtual-attribute-response'
                - $ref: '#/components/schemas/entry-dn-virtual-attribute-response'
                - $ref: '#/components/schemas/has-subordinates-virtual-attribute-response'
                - $ref: '#/components/schemas/equality-join-virtual-attribute-response'
                - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-response'
                - $ref: '#/components/schemas/instance-name-virtual-attribute-response'
                - $ref: '#/components/schemas/replication-state-detail-virtual-attribute-response'
                - $ref: '#/components/schemas/member-virtual-attribute-response'
                - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-response'
                - $ref: '#/components/schemas/subschema-subentry-virtual-attribute-response'
                - $ref: '#/components/schemas/dn-join-virtual-attribute-response'
                - $ref: '#/components/schemas/third-party-virtual-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Virtual Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - virtual-attribute
  /notification-managers:
    post:
      summary: Add a new Notification Manager to the config
      operationId: add-notification-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-third-party-notification-manager-request'
        description: Create a new Notification Manager in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Notification Manager already exists
      security:
      - basicAuth: []
      tags:
      - notification-manager
  /notification-managers/{notification-manager-name}:
    delete:
      summary: Delete a Notification Manager
      operationId: delete-notification-manager
      parameters:
      - description: Name of the Notification Manager
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
        "409":
          description: The Notification Manager cannot be deleted
      security:
      - basicAuth: []
      tags:
      - notification-manager
    get:
      summary: Returns a single Notification Manager
      operationId: get-notification-manager
      parameters:
      - description: Name of the Notification Manager
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      tags:
      - notification-manager
    patch:
      summary: Update an existing Notification Manager by name
      operationId: update-notification-manager
      parameters:
      - description: Name of the Notification Manager
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Notification Manager
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      tags:
      - notification-manager
  /result-criteria:
    post:
      summary: Add a new Result Criteria to the config
      operationId: add-result-criteria
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-simple-result-criteria-request'
              - $ref: '#/components/schemas/add-aggregate-result-criteria-request'
              - $ref: '#/components/schemas/add-replication-assurance-result-criteria-request'
              - $ref: '#/components/schemas/add-third-party-result-criteria-request'
        description: Create a new Result Criteria in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-result-criteria-response'
                - $ref: '#/components/schemas/aggregate-result-criteria-response'
                - $ref: '#/components/schemas/replication-assurance-result-criteria-response'
                - $ref: '#/components/schemas/third-party-result-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Result Criteria already exists
      security:
      - basicAuth: []
      tags:
      - result-criteria
  /result-criteria/{result-criteria-name}:
    delete:
      summary: Delete a Result Criteria
      operationId: delete-result-criteria
      parameters:
      - description: Name of the Result Criteria
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Criteria does not exist
        "409":
          description: The Result Criteria cannot be deleted
      security:
      - basicAuth: []
      tags:
      - result-criteria
    get:
      summary: Returns a single Result Criteria
      operationId: get-result-criteria
      parameters:
      - description: Name of the Result Criteria
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-result-criteria-response'
                - $ref: '#/components/schemas/aggregate-result-criteria-response'
                - $ref: '#/components/schemas/replication-assurance-result-criteria-response'
                - $ref: '#/components/schemas/third-party-result-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - result-criteria
    patch:
      summary: Update an existing Result Criteria by name
      operationId: update-result-criteria
      parameters:
      - description: Name of the Result Criteria
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Result Criteria
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/simple-result-criteria-response'
                - $ref: '#/components/schemas/aggregate-result-criteria-response'
                - $ref: '#/components/schemas/replication-assurance-result-criteria-response'
                - $ref: '#/components/schemas/third-party-result-criteria-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Result Criteria does not exist
      security:
      - basicAuth: []
      tags:
      - result-criteria
  /identity-mappers:
    post:
      summary: Add a new Identity Mapper to the config
      operationId: add-identity-mapper
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-exact-match-identity-mapper-request'
              - $ref: '#/components/schemas/add-groovy-scripted-identity-mapper-request'
              - $ref: '#/components/schemas/add-regular-expression-identity-mapper-request'
              - $ref: '#/components/schemas/add-aggregate-identity-mapper-request'
              - $ref: '#/components/schemas/add-third-party-identity-mapper-request'
        description: Create a new Identity Mapper in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/exact-match-identity-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-identity-mapper-response'
                - $ref: '#/components/schemas/regular-expression-identity-mapper-response'
                - $ref: '#/components/schemas/aggregate-identity-mapper-response'
                - $ref: '#/components/schemas/third-party-identity-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Identity Mapper already exists
      security:
      - basicAuth: []
      tags:
      - identity-mapper
  /identity-mappers/{identity-mapper-name}:
    delete:
      summary: Delete a Identity Mapper
      operationId: delete-identity-mapper
      parameters:
      - description: Name of the Identity Mapper
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Identity Mapper does not exist
        "409":
          description: The Identity Mapper cannot be deleted
      security:
      - basicAuth: []
      tags:
      - identity-mapper
    get:
      summary: Returns a single Identity Mapper
      operationId: get-identity-mapper
      parameters:
      - description: Name of the Identity Mapper
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/exact-match-identity-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-identity-mapper-response'
                - $ref: '#/components/schemas/regular-expression-identity-mapper-response'
                - $ref: '#/components/schemas/aggregate-identity-mapper-response'
                - $ref: '#/components/schemas/third-party-identity-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Identity Mapper does not exist
      security:
      - basicAuth: []
      tags:
      - identity-mapper
    patch:
      summary: Update an existing Identity Mapper by name
      operationId: update-identity-mapper
      parameters:
      - description: Name of the Identity Mapper
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Identity Mapper
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/exact-match-identity-mapper-response'
                - $ref: '#/components/schemas/groovy-scripted-identity-mapper-response'
                - $ref: '#/components/schemas/regular-expression-identity-mapper-response'
                - $ref: '#/components/schemas/aggregate-identity-mapper-response'
                - $ref: '#/components/schemas/third-party-identity-mapper-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Identity Mapper does not exist
      security:
      - basicAuth: []
      tags:
      - identity-mapper
  /recurring-tasks:
    post:
      summary: Add a new Recurring Task to the config
      operationId: add-recurring-task
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-generate-server-profile-recurring-task-request'
              - $ref: '#/components/schemas/add-leave-lockdown-mode-recurring-task-request'
              - $ref: '#/components/schemas/add-backup-recurring-task-request'
              - $ref: '#/components/schemas/add-delay-recurring-task-request'
              - $ref: '#/components/schemas/add-statically-defined-recurring-task-request'
              - $ref: '#/components/schemas/add-collect-support-data-recurring-task-request'
              - $ref: '#/components/schemas/add-ldif-export-recurring-task-request'
              - $ref: '#/components/schemas/add-enter-lockdown-mode-recurring-task-request'
              - $ref: '#/components/schemas/add-audit-data-security-recurring-task-request'
              - $ref: '#/components/schemas/add-exec-recurring-task-request'
              - $ref: '#/components/schemas/add-file-retention-recurring-task-request'
              - $ref: '#/components/schemas/add-third-party-recurring-task-request'
        description: Create a new Recurring Task in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/generate-server-profile-recurring-task-response'
                - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/backup-recurring-task-response'
                - $ref: '#/components/schemas/delay-recurring-task-response'
                - $ref: '#/components/schemas/statically-defined-recurring-task-response'
                - $ref: '#/components/schemas/collect-support-data-recurring-task-response'
                - $ref: '#/components/schemas/ldif-export-recurring-task-response'
                - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/audit-data-security-recurring-task-response'
                - $ref: '#/components/schemas/exec-recurring-task-response'
                - $ref: '#/components/schemas/file-retention-recurring-task-response'
                - $ref: '#/components/schemas/third-party-recurring-task-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Recurring Task already exists
      security:
      - basicAuth: []
      tags:
      - recurring-task
  /recurring-tasks/{recurring-task-name}:
    delete:
      summary: Delete a Recurring Task
      operationId: delete-recurring-task
      parameters:
      - description: Name of the Recurring Task
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task does not exist
        "409":
          description: The Recurring Task cannot be deleted
      security:
      - basicAuth: []
      tags:
      - recurring-task
    get:
      summary: Returns a single Recurring Task
      operationId: get-recurring-task
      parameters:
      - description: Name of the Recurring Task
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/generate-server-profile-recurring-task-response'
                - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/backup-recurring-task-response'
                - $ref: '#/components/schemas/delay-recurring-task-response'
                - $ref: '#/components/schemas/statically-defined-recurring-task-response'
                - $ref: '#/components/schemas/collect-support-data-recurring-task-response'
                - $ref: '#/components/schemas/ldif-export-recurring-task-response'
                - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/audit-data-security-recurring-task-response'
                - $ref: '#/components/schemas/exec-recurring-task-response'
                - $ref: '#/components/schemas/file-retention-recurring-task-response'
                - $ref: '#/components/schemas/third-party-recurring-task-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task does not exist
      security:
      - basicAuth: []
      tags:
      - recurring-task
    patch:
      summary: Update an existing Recurring Task by name
      operationId: update-recurring-task
      parameters:
      - description: Name of the Recurring Task
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Recurring Task
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/generate-server-profile-recurring-task-response'
                - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/backup-recurring-task-response'
                - $ref: '#/components/schemas/delay-recurring-task-response'
                - $ref: '#/components/schemas/statically-defined-recurring-task-response'
                - $ref: '#/components/schemas/collect-support-data-recurring-task-response'
                - $ref: '#/components/schemas/ldif-export-recurring-task-response'
                - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-response'
                - $ref: '#/components/schemas/audit-data-security-recurring-task-response'
                - $ref: '#/components/schemas/exec-recurring-task-response'
                - $ref: '#/components/schemas/file-retention-recurring-task-response'
                - $ref: '#/components/schemas/third-party-recurring-task-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Recurring Task does not exist
      security:
      - basicAuth: []
      tags:
      - recurring-task
  /rest-resource-types:
    post:
      summary: Add a new REST Resource Type to the config
      operationId: add-rest-resource-type
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-user-rest-resource-type-request'
              - $ref: '#/components/schemas/add-generic-rest-resource-type-request'
              - $ref: '#/components/schemas/add-group-rest-resource-type-request'
        description: Create a new REST Resource Type in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The REST Resource Type already exists
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}:
    delete:
      summary: Delete a REST Resource Type
      operationId: delete-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
        "409":
          description: The REST Resource Type cannot be deleted
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
    get:
      summary: Returns a single REST Resource Type
      operationId: get-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
    patch:
      summary: Update an existing REST Resource Type by name
      operationId: update-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing REST Resource Type
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/user-rest-resource-type-response'
                - $ref: '#/components/schemas/generic-rest-resource-type-response'
                - $ref: '#/components/schemas/group-rest-resource-type-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes:
    post:
      summary: Add a new Delegated Admin Attribute to the config
      operationId: add-delegated-admin-attribute
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-certificate-delegated-admin-attribute-request'
              - $ref: '#/components/schemas/add-photo-delegated-admin-attribute-request'
              - $ref: '#/components/schemas/add-generic-delegated-admin-attribute-request'
        description: Create a new Delegated Admin Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Attribute already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-attributes/{delegated-admin-attribute-name}:
    delete:
      summary: Delete a Delegated Admin Attribute
      operationId: delete-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute does not exist
        "409":
          description: The Delegated Admin Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
    get:
      summary: Returns a single Delegated Admin Attribute
      operationId: get-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
    patch:
      summary: Update an existing Delegated Admin Attribute by name
      operationId: update-delegated-admin-attribute
      parameters:
      - description: Name of the Delegated Admin Attribute
        explode: false
        in: path
        name: delegated-admin-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/certificate-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/photo-delegated-admin-attribute-response'
                - $ref: '#/components/schemas/generic-delegated-admin-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources:
    post:
      summary: Add a new Delegated Admin Correlated REST Resource to the config
      operationId: add-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-correlated-rest-resource-request'
        description: Create a new Delegated Admin Correlated REST Resource in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Correlated REST Resource already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
  /rest-resource-types/{rest-resource-type-name}/delegated-admin-correlated-rest-resources/{delegated-admin-correlated-rest-resource-name}:
    delete:
      summary: Delete a Delegated Admin Correlated REST Resource
      operationId: delete-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
        "409":
          description: The Delegated Admin Correlated REST Resource cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
    get:
      summary: Returns a single Delegated Admin Correlated REST Resource
      operationId: get-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
    patch:
      summary: Update an existing Delegated Admin Correlated REST Resource by name
      operationId: update-delegated-admin-correlated-rest-resource
      parameters:
      - description: Name of the Delegated Admin Correlated REST Resource
        explode: false
        in: path
        name: delegated-admin-correlated-rest-resource-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the REST Resource Type
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Correlated REST Resource
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Correlated REST Resource does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-correlated-rest-resource
  /sasl-mechanism-handlers:
    post:
      summary: Add a new SASL Mechanism Handler to the config
      operationId: add-sasl-mechanism-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-unboundid-ms-chap-v2-sasl-mechanism-handler-request'
              - $ref: '#/components/schemas/add-unboundid-delivered-otp-sasl-mechanism-handler-request'
              - $ref: '#/components/schemas/add-oauth-bearer-sasl-mechanism-handler-request'
              - $ref: '#/components/schemas/add-third-party-sasl-mechanism-handler-request'
        description: Create a new SASL Mechanism Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SASL Mechanism Handler already exists
      security:
      - basicAuth: []
      tags:
      - sasl-mechanism-handler
  /sasl-mechanism-handlers/{sasl-mechanism-handler-name}:
    delete:
      summary: Delete a SASL Mechanism Handler
      operationId: delete-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SASL Mechanism Handler does not exist
        "409":
          description: The SASL Mechanism Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - sasl-mechanism-handler
    get:
      summary: Returns a single SASL Mechanism Handler
      operationId: get-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-totp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-yubikey-otp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/external-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/digest-md5-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/plain-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-external-auth-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/anonymous-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/cram-md5-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-certificate-plus-password-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/gssapi-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SASL Mechanism Handler does not exist
      security:
      - basicAuth: []
      tags:
      - sasl-mechanism-handler
    patch:
      summary: Update an existing SASL Mechanism Handler by name
      operationId: update-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SASL Mechanism Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-totp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-yubikey-otp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/external-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/digest-md5-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/plain-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-external-auth-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/anonymous-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/cram-md5-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/unboundid-certificate-plus-password-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/gssapi-sasl-mechanism-handler-response'
                - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SASL Mechanism Handler does not exist
      security:
      - basicAuth: []
      tags:
      - sasl-mechanism-handler
  /data-security-auditors:
    post:
      summary: Add a new Data Security Auditor to the config
      operationId: add-data-security-auditor
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-expired-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-idle-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-disabled-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-weakly-encoded-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-privilege-data-security-auditor-request'
              - $ref: '#/components/schemas/add-account-usability-issues-data-security-auditor-request'
              - $ref: '#/components/schemas/add-locked-account-data-security-auditor-request'
              - $ref: '#/components/schemas/add-filter-data-security-auditor-request'
              - $ref: '#/components/schemas/add-account-validity-window-data-security-auditor-request'
              - $ref: '#/components/schemas/add-multiple-password-data-security-auditor-request'
              - $ref: '#/components/schemas/add-deprecated-password-storage-scheme-data-security-auditor-request'
              - $ref: '#/components/schemas/add-nonexistent-password-policy-data-security-auditor-request'
              - $ref: '#/components/schemas/add-access-control-data-security-auditor-request'
              - $ref: '#/components/schemas/add-third-party-data-security-auditor-request'
        description: Create a new Data Security Auditor in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Data Security Auditor already exists
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
  /data-security-auditors/{data-security-auditor-name}:
    delete:
      summary: Delete a Data Security Auditor
      operationId: delete-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
        "409":
          description: The Data Security Auditor cannot be deleted
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
    get:
      summary: Returns a single Data Security Auditor
      operationId: get-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
    patch:
      summary: Update an existing Data Security Auditor by name
      operationId: update-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Data Security Auditor
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
                - $ref: '#/components/schemas/idle-account-data-security-auditor-response'
                - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
                - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
                - $ref: '#/components/schemas/privilege-data-security-auditor-response'
                - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-response'
                - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
                - $ref: '#/components/schemas/filter-data-security-auditor-response'
                - $ref: '#/components/schemas/account-validity-window-data-security-auditor-response'
                - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
                - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-response'
                - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-response'
                - $ref: '#/components/schemas/access-control-data-security-auditor-response'
                - $ref: '#/components/schemas/third-party-data-security-auditor-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      tags:
      - data-security-auditor
  /monitoring-endpoints:
    post:
      summary: Add a new Monitoring Endpoint to the config
      operationId: add-monitoring-endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-statsd-monitoring-endpoint-request'
        description: Create a new Monitoring Endpoint in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Monitoring Endpoint already exists
      security:
      - basicAuth: []
      tags:
      - monitoring-endpoint
  /monitoring-endpoints/{monitoring-endpoint-name}:
    delete:
      summary: Delete a Monitoring Endpoint
      operationId: delete-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitoring Endpoint does not exist
        "409":
          description: The Monitoring Endpoint cannot be deleted
      security:
      - basicAuth: []
      tags:
      - monitoring-endpoint
    get:
      summary: Returns a single Monitoring Endpoint
      operationId: get-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitoring Endpoint does not exist
      security:
      - basicAuth: []
      tags:
      - monitoring-endpoint
    patch:
      summary: Update an existing Monitoring Endpoint by name
      operationId: update-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Monitoring Endpoint
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Monitoring Endpoint does not exist
      security:
      - basicAuth: []
      tags:
      - monitoring-endpoint
  /password-storage-schemes:
    post:
      summary: Add a new Password Storage Scheme to the config
      operationId: add-password-storage-scheme
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-argon2d-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-crypt-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2i-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2id-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-vault-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-third-party-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-third-party-enhanced-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-pbkdf2-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-aes-256-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-bcrypt-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-azure-key-vault-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-conjur-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-scrypt-password-storage-scheme-request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Storage Scheme already exists
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
  /password-storage-schemes/{password-storage-scheme-name}:
    delete:
      summary: Delete a Password Storage Scheme
      operationId: delete-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
        "409":
          description: The Password Storage Scheme cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
    get:
      summary: Returns a single Password Storage Scheme
      operationId: get-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/base64-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
                - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
                - $ref: '#/components/schemas/clear-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
                - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/md5-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
    patch:
      summary: Update an existing Password Storage Scheme by name
      operationId: update-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/base64-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
                - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
                - $ref: '#/components/schemas/clear-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
                - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/md5-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
  /http-configuration:
    get:
      summary: Returns a single HTTP Configuration
      operationId: get-http-configuration
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-configuration-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Configuration does not exist
      security:
      - basicAuth: []
      tags:
      - http-configuration
    patch:
      summary: Update an existing HTTP Configuration by name
      operationId: update-http-configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Configuration
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-configuration-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Configuration does not exist
      security:
      - basicAuth: []
      tags:
      - http-configuration
  /json-attribute-constraints:
    post:
      summary: Add a new JSON Attribute Constraints to the config
      operationId: add-json-attribute-constraints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-json-attribute-constraints-request'
        description: Create a new JSON Attribute Constraints in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The JSON Attribute Constraints already exists
      security:
      - basicAuth: []
      tags:
      - json-attribute-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}:
    delete:
      summary: Delete a JSON Attribute Constraints
      operationId: delete-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Attribute Constraints does not exist
        "409":
          description: The JSON Attribute Constraints cannot be deleted
      security:
      - basicAuth: []
      tags:
      - json-attribute-constraints
    get:
      summary: Returns a single JSON Attribute Constraints
      operationId: get-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Attribute Constraints does not exist
      security:
      - basicAuth: []
      tags:
      - json-attribute-constraints
    patch:
      summary: Update an existing JSON Attribute Constraints by name
      operationId: update-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing JSON Attribute Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The JSON Attribute Constraints does not exist
      security:
      - basicAuth: []
      tags:
      - json-attribute-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints:
    post:
      summary: Add a new JSON Field Constraints to the config
      operationId: add-json-field-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-json-field-constraints-request'
        description: Create a new JSON Field Constraints in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-field-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The JSON Field Constraints already exists
      security:
      - basicAuth: []
      tags:
      - json-field-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}/json-field-constraints/{json-field-constraints-name}:
    delete:
      summary: Delete a JSON Field Constraints
      operationId: delete-json-field-constraints
      parameters:
      - description: Name of the JSON Field Constraints
        explode: false
        in: path
        name: json-field-constraints-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Field Constraints does not exist
        "409":
          description: The JSON Field Constraints cannot be deleted
      security:
      - basicAuth: []
      tags:
      - json-field-constraints
    get:
      summary: Returns a single JSON Field Constraints
      operationId: get-json-field-constraints
      parameters:
      - description: Name of the JSON Field Constraints
        explode: false
        in: path
        name: json-field-constraints-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-field-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Field Constraints does not exist
      security:
      - basicAuth: []
      tags:
      - json-field-constraints
    patch:
      summary: Update an existing JSON Field Constraints by name
      operationId: update-json-field-constraints
      parameters:
      - description: Name of the JSON Field Constraints
        explode: false
        in: path
        name: json-field-constraints-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the JSON Attribute Constraints
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing JSON Field Constraints
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-field-constraints-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The JSON Field Constraints does not exist
      security:
      - basicAuth: []
      tags:
      - json-field-constraints
  /http-servlet-cross-origin-policies:
    post:
      summary: Add a new HTTP Servlet Cross Origin Policy to the config
      operationId: add-http-servlet-cross-origin-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-http-servlet-cross-origin-policy-request'
        description: Create a new HTTP Servlet Cross Origin Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The HTTP Servlet Cross Origin Policy already exists
      security:
      - basicAuth: []
      tags:
      - http-servlet-cross-origin-policy
  /http-servlet-cross-origin-policies/{http-servlet-cross-origin-policy-name}:
    delete:
      summary: Delete a HTTP Servlet Cross Origin Policy
      operationId: delete-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
        "409":
          description: The HTTP Servlet Cross Origin Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - http-servlet-cross-origin-policy
    get:
      summary: Returns a single HTTP Servlet Cross Origin Policy
      operationId: get-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
      security:
      - basicAuth: []
      tags:
      - http-servlet-cross-origin-policy
    patch:
      summary: Update an existing HTTP Servlet Cross Origin Policy by name
      operationId: update-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Servlet Cross Origin Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
      security:
      - basicAuth: []
      tags:
      - http-servlet-cross-origin-policy
  /delegated-admin-attribute-categories:
    post:
      summary: Add a new Delegated Admin Attribute Category to the config
      operationId: add-delegated-admin-attribute-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-attribute-category-request'
        description: Create a new Delegated Admin Attribute Category in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Attribute Category already exists
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute-category
  /delegated-admin-attribute-categories/{delegated-admin-attribute-category-name}:
    delete:
      summary: Delete a Delegated Admin Attribute Category
      operationId: delete-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute Category does not exist
        "409":
          description: The Delegated Admin Attribute Category cannot be deleted
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute-category
    get:
      summary: Returns a single Delegated Admin Attribute Category
      operationId: get-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute Category does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute-category
    patch:
      summary: Update an existing Delegated Admin Attribute Category by name
      operationId: update-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Attribute Category
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Attribute Category does not exist
      security:
      - basicAuth: []
      tags:
      - delegated-admin-attribute-category
  /scim-schemas:
    post:
      summary: Add a new SCIM Schema to the config
      operationId: add-scim-schema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-scim-schema-request'
        description: Create a new SCIM Schema in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SCIM Schema already exists
      security:
      - basicAuth: []
      tags:
      - scim-schema
  /scim-schemas/{scim-schema-name}:
    delete:
      summary: Delete a SCIM Schema
      operationId: delete-scim-schema
      parameters:
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Schema does not exist
        "409":
          description: The SCIM Schema cannot be deleted
      security:
      - basicAuth: []
      tags:
      - scim-schema
    get:
      summary: Returns a single SCIM Schema
      operationId: get-scim-schema
      parameters:
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Schema does not exist
      security:
      - basicAuth: []
      tags:
      - scim-schema
    patch:
      summary: Update an existing SCIM Schema by name
      operationId: update-scim-schema
      parameters:
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SCIM Schema
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SCIM Schema does not exist
      security:
      - basicAuth: []
      tags:
      - scim-schema
  /scim-schemas/{scim-schema-name}/scim-attributes:
    post:
      summary: Add a new SCIM Attribute to the config
      operationId: add-scim-attribute
      parameters:
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-scim-attribute-request'
        description: Create a new SCIM Attribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SCIM Attribute already exists
      security:
      - basicAuth: []
      tags:
      - scim-attribute
  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}:
    delete:
      summary: Delete a SCIM Attribute
      operationId: delete-scim-attribute
      parameters:
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Attribute does not exist
        "409":
          description: The SCIM Attribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - scim-attribute
    get:
      summary: Returns a single SCIM Attribute
      operationId: get-scim-attribute
      parameters:
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - scim-attribute
    patch:
      summary: Update an existing SCIM Attribute by name
      operationId: update-scim-attribute
      parameters:
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SCIM Attribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-attribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SCIM Attribute does not exist
      security:
      - basicAuth: []
      tags:
      - scim-attribute
  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}/scim-subattributes:
    post:
      summary: Add a new SCIM Subattribute to the config
      operationId: add-scim-subattribute
      parameters:
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-scim-subattribute-request'
        description: Create a new SCIM Subattribute in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-subattribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SCIM Subattribute already exists
      security:
      - basicAuth: []
      tags:
      - scim-subattribute
  /scim-schemas/{scim-schema-name}/scim-attributes/{scim-attribute-name}/scim-subattributes/{scim-subattribute-name}:
    delete:
      summary: Delete a SCIM Subattribute
      operationId: delete-scim-subattribute
      parameters:
      - description: Name of the SCIM Subattribute
        explode: false
        in: path
        name: scim-subattribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Subattribute does not exist
        "409":
          description: The SCIM Subattribute cannot be deleted
      security:
      - basicAuth: []
      tags:
      - scim-subattribute
    get:
      summary: Returns a single SCIM Subattribute
      operationId: get-scim-subattribute
      parameters:
      - description: Name of the SCIM Subattribute
        explode: false
        in: path
        name: scim-subattribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-subattribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Subattribute does not exist
      security:
      - basicAuth: []
      tags:
      - scim-subattribute
    patch:
      summary: Update an existing SCIM Subattribute by name
      operationId: update-scim-subattribute
      parameters:
      - description: Name of the SCIM Subattribute
        explode: false
        in: path
        name: scim-subattribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Attribute
        explode: false
        in: path
        name: scim-attribute-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the SCIM Schema
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SCIM Subattribute
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-subattribute-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SCIM Subattribute does not exist
      security:
      - basicAuth: []
      tags:
      - scim-subattribute
  /locations:
    post:
      summary: Add a new Location to the config
      operationId: add-location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-location-request'
        description: Create a new Location in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Location already exists
      security:
      - basicAuth: []
      tags:
      - location
  /locations/{location-name}:
    delete:
      summary: Delete a Location
      operationId: delete-location
      parameters:
      - description: Name of the Location
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Location does not exist
        "409":
          description: The Location cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single Location
      operationId: get-location
      parameters:
      - description: Name of the Location
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Location does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing Location by name
      operationId: update-location
      parameters:
      - description: Name of the Location
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Location
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Location does not exist
      security:
      - basicAuth: []
      tags:
      - location
  /log-retention-policies:
    post:
      summary: Add a new Log Retention Policy to the config
      operationId: add-log-retention-policy
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-time-limit-log-retention-policy-request'
              - $ref: '#/components/schemas/add-never-delete-log-retention-policy-request'
              - $ref: '#/components/schemas/add-file-count-log-retention-policy-request'
              - $ref: '#/components/schemas/add-free-disk-space-log-retention-policy-request'
              - $ref: '#/components/schemas/add-size-limit-log-retention-policy-request'
        description: Create a new Log Retention Policy in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-retention-policy-response'
                - $ref: '#/components/schemas/never-delete-log-retention-policy-response'
                - $ref: '#/components/schemas/file-count-log-retention-policy-response'
                - $ref: '#/components/schemas/free-disk-space-log-retention-policy-response'
                - $ref: '#/components/schemas/size-limit-log-retention-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Retention Policy already exists
      security:
      - basicAuth: []
      tags:
      - log-retention-policy
  /log-retention-policies/{log-retention-policy-name}:
    delete:
      summary: Delete a Log Retention Policy
      operationId: delete-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Retention Policy does not exist
        "409":
          description: The Log Retention Policy cannot be deleted
      security:
      - basicAuth: []
      tags:
      - log-retention-policy
    get:
      summary: Returns a single Log Retention Policy
      operationId: get-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-retention-policy-response'
                - $ref: '#/components/schemas/never-delete-log-retention-policy-response'
                - $ref: '#/components/schemas/file-count-log-retention-policy-response'
                - $ref: '#/components/schemas/free-disk-space-log-retention-policy-response'
                - $ref: '#/components/schemas/size-limit-log-retention-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Retention Policy does not exist
      security:
      - basicAuth: []
      tags:
      - log-retention-policy
    patch:
      summary: Update an existing Log Retention Policy by name
      operationId: update-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Retention Policy
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/time-limit-log-retention-policy-response'
                - $ref: '#/components/schemas/never-delete-log-retention-policy-response'
                - $ref: '#/components/schemas/file-count-log-retention-policy-response'
                - $ref: '#/components/schemas/free-disk-space-log-retention-policy-response'
                - $ref: '#/components/schemas/size-limit-log-retention-policy-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Retention Policy does not exist
      security:
      - basicAuth: []
      tags:
      - log-retention-policy
  /oauth-token-handlers:
    post:
      summary: Add a new OAuth Token Handler to the config
      operationId: add-oauth-token-handler
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-groovy-scripted-oauth-token-handler-request'
              - $ref: '#/components/schemas/add-third-party-oauth-token-handler-request'
        description: Create a new OAuth Token Handler in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-response'
                - $ref: '#/components/schemas/third-party-oauth-token-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The OAuth Token Handler already exists
      security:
      - basicAuth: []
      tags:
      - oauth-token-handler
  /oauth-token-handlers/{oauth-token-handler-name}:
    delete:
      summary: Delete a OAuth Token Handler
      operationId: delete-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
        "409":
          description: The OAuth Token Handler cannot be deleted
      security:
      - basicAuth: []
      tags:
      - oauth-token-handler
    get:
      summary: Returns a single OAuth Token Handler
      operationId: get-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-response'
                - $ref: '#/components/schemas/third-party-oauth-token-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      tags:
      - oauth-token-handler
    patch:
      summary: Update an existing OAuth Token Handler by name
      operationId: update-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing OAuth Token Handler
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-response'
                - $ref: '#/components/schemas/third-party-oauth-token-handler-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      tags:
      - oauth-token-handler
components:
  schemas:
    global-configuration-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumglobal-configurationSchemaUrn'
          instanceName:
            type: string
            description: >-
                Specifies a name that may be used to uniquely identify this Directory Server instance among other instances in the environment.
          location:
            type: string
            description: >-
                Specifies the location for this Directory Server. Operations performed which involve communication with other servers may prefer servers in the same location to help ensure low-latency responses.
          configurationServerGroup:
            type: string
            description: >-
                When this property is set, changes made to this server using the console or dsconfig can be automatically applied to all servers in the specified server group.
          forceAsMasterForMirroredData:
            type: boolean
            description: >-
                Indicates whether this server should be forced to assume the master role if no other suitable server is found to act as master or if multiple masters are detected. A master is only needed when changes are made to mirrored data, i.e. data specific to the topology itself and cluster-wide configuration data.
          encryptData:
            type: boolean
            description: >-
                Indicates whether the Directory Server should encrypt the data that it stores in all components that support it. This may include certain types of backends (including local DB and large attribute backends), the LDAP changelog, and the replication server database.
          encryptionSettingsCipherStreamProvider:
            type: string
            description: >-
                Specifies the cipher stream provider that should be used to protect the contents of the encryption settings database.
          encryptBackupsByDefault:
            type: boolean
            description: >-
                Indicates whether the server should encrypt backups by default.
          backupEncryptionSettingsDefinitionID:
            type: string
            description: >-
                The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted backups by default.
          encryptLDIFExportsByDefault:
            type: boolean
            description: >-
                Indicates whether the server should encrypt LDIF exports by default.
          ldifExportEncryptionSettingsDefinitionID:
            type: string
            description: >-
                The unique identifier for the encryption settings definition to use to generate the encryption key for encrypted LDIF exports by default.
          automaticallyCompressEncryptedLDIFExports:
            type: boolean
            description: >-
                Indicates whether to automatically compress LDIF exports that are also encrypted.
          redactSensitiveValuesInConfigLogs:
            type: boolean
            description: >-
                Indicates whether the values of sensitive configuration properties should be redacted when logging configuration changes, including in the configuration audit log, the error log, and the server.out log file.
          sensitiveAttribute:
            type: array
            items:
              type: string
            description: >-
                Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.
          rejectInsecureRequests:
            type: boolean
            description: >-
                Indicates whether the Directory Server should reject any LDAP request (other than StartTLS) received from a client that is not using an encrypted connection.
          allowedInsecureRequestCriteria:
            type: string
            description: >-
                A set of criteria that may be used to match LDAP requests that may be permitted over an insecure connection even if reject-insecure-requests is true. Note that some types of requests will always be permitted, including StartTLS and start administrative session requests.
          rejectUnauthenticatedRequests:
            type: boolean
            description: >-
                Indicates whether the Directory Server should reject any LDAP request (other than bind or StartTLS requests) received from a client that has not yet been authenticated, whose last authentication attempt was unsuccessful, or whose last authentication attempt used anonymous authentication.
          allowedUnauthenticatedRequestCriteria:
            type: string
            description: >-
                A set of criteria that may be used to match LDAP requests that may be permitted over an unauthenticated connection even if reject-unauthenticated-requests is true. Note that some types of requests will always be permitted, including bind, StartTLS, and start administrative session requests.
          bindWithDNRequiresPassword:
            type: boolean
            description: >-
                Indicates whether the Directory Server should reject any simple bind request that contains a DN but no password.
          disabledPrivilege:
            type: array
            items:
              $ref: '#/components/schemas/Enumglobal-configuration-disabledPrivilegeProp'
          defaultPasswordPolicy:
            type: string
            description: >-
                Specifies the name of the password policy that is in effect for users whose entries do not specify an alternate password policy (either via a real or virtual attribute).
          maximumUserDataPasswordPoliciesToCache:
            type: integer
            description: >-
                Specifies the maximum number of password policies that are defined in the user data (that is, outside of the configuration) that the server should cache in memory for faster access. A value of zero indicates that the server should not cache any user data password policies.
          proxiedAuthorizationIdentityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper to map authorization ID values (using the "u:" form) provided in the proxied authorization control to the corresponding user entry.
          verifyEntryDigests:
            type: boolean
            description: >-
                Indicates whether the digest should always be verified whenever an entry containing a digest is decoded. If this is "true", then if a digest exists, it will always be verified. Otherwise, the digest will be written when encoding entries but ignored when decoding entries but may still be available for other verification processing.
          allowedInsecureTLSProtocol:
            type: array
            items:
              $ref: '#/components/schemas/Enumglobal-configuration-allowedInsecureTLSProtocolProp'
          allowInsecureLocalJMXConnections:
            type: boolean
            description: >-
                Indicates that processes attaching to this server's local JVM are allowed to access internal data through JMX without the authentication requirements that remote JMX connections are subject to. Please review and understand the data that this option will expose (such as cn=monitor) to client applications to ensure there are no security concerns.
          defaultInternalOperationClientConnectionPolicy:
            type: string
            description: >-
                Specifies the client connection policy that will be used by default for internal operations.
          sizeLimit:
            type: integer
            description: >-
                Specifies the maximum number of entries that the Directory Server should return to clients by default when processing a search operation.
          unauthenticatedSizeLimit:
            type: integer
            description: >-
                The size limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the size-limit property will be applied for both authenticated and unauthenticated connections.
          timeLimit:
            type: string
            description: >-
                Specifies the maximum length of time that the Directory Server should be allowed to spend processing a search operation.
          unauthenticatedTimeLimit:
            type: string
            description: >-
                The time limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the time-limit property will be applied for both authenticated and unauthenticated connections.
          idleTimeLimit:
            type: string
            description: >-
                Specifies the maximum length of time that a client connection may remain established since its last completed operation.
          unauthenticatedIdleTimeLimit:
            type: string
            description: >-
                The idle-time-limit limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the idle-time-limit property will be applied for both authenticated and unauthenticated connections.
          lookthroughLimit:
            type: integer
            description: >-
                Specifies the maximum number of entries that the Directory Server should "look through" in the course of processing a search request.
          unauthenticatedLookthroughLimit:
            type: integer
            description: >-
                The lookthrough limit value that will apply for connections from unauthenticated clients. If this is not specified, then the value of the lookthrough-limit property will be applied for both authenticated and unauthenticated connections.
          ldapJoinSizeLimit:
            type: integer
            description: >-
                Specifies the maximum number of entries that may be directly joined with any individual search result entry.
          maximumConcurrentConnections:
            type: integer
            description: >-
                Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same time.
          maximumConcurrentConnectionsPerIPAddress:
            type: integer
            description: >-
                Specifies the maximum number of LDAP client connections originating from the same IP address which may be established to this Directory Server at the same time.
          maximumConcurrentConnectionsPerBindDN:
            type: integer
            description: >-
                Specifies the maximum number of LDAP client connections which may be established to this Directory Server at the same time and authenticated as the same user.
          maximumConcurrentUnindexedSearches:
            type: integer
            description: >-
                Specifies the maximum number of unindexed searches that may be in progress in this backend at any given time. Any unindexed searches requested while the maximum number of unindexed searches are already being processed will be rejected. A value of zero indicates that no limit will be enforced.
          maximumAttributesPerAddRequest:
            type: integer
            description: >-
                Specifies the maximum number of attributes that may be included in an add request. This property does not impose any limit on the number of values that an attribute may have.
          maximumModificationsPerModifyRequest:
            type: integer
            description: >-
                Specifies the maximum number of modifications that may be included in a modify request. This property does not impose any limit on the number of attribute values that a modification may have.
          backgroundThreadForEachPersistentSearch:
            type: boolean
            description: >-
                Indicates whether the server should use a separate background thread for each persistent search.
          allowAttributeNameExceptions:
            type: boolean
            description: >-
                Indicates whether the Directory Server should allow underscores in attribute names and allow attribute names to begin with numeric digits (both of which are violations of the LDAP standards).
          invalidAttributeSyntaxBehavior:
            $ref: '#/components/schemas/Enumglobal-configuration-invalidAttributeSyntaxBehaviorProp'
          permitSyntaxViolationsForAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of attribute types for which the server will permit values that do not conform to the associated attribute syntax.
          singleStructuralObjectclassBehavior:
            $ref: '#/components/schemas/Enumglobal-configuration-singleStructuralObjectclassBehaviorProp'
          attributesModifiableWithIgnoreNoUserModificationRequestControl:
            type: array
            items:
              $ref: '#/components/schemas/Enumglobal-configuration-attributesModifiableWithIgnoreNoUserModificationRequestControlProp'
          maximumServerOutLogFileSize:
            type: string
            description: >-
                The maximum allowed size that the server.out log file will be allowed to have. If a write would cause the file to exceed this size, then the current file will be rotated out of place and a new empty file will be created and the message written to it.
          maximumServerOutLogFileCount:
            type: integer
            description: >-
                The maximum number of server.out log files (including the current active log file) that should be retained. When rotating the log file, if the total number of files exceeds this count, then the oldest file(s) will be removed so that the total number of log files is within this limit.
          startupErrorLoggerOutputLocation:
            $ref: '#/components/schemas/Enumglobal-configuration-startupErrorLoggerOutputLocationProp'
          exitOnJVMError:
            type: boolean
            description: >-
                Indicates whether the Directory Server should be shut down if a severe error is raised (e.g., an out of memory error) which may prevent the JVM from continuing to run properly.
          serverErrorResultCode:
            type: integer
            description: >-
                Specifies the numeric value of the result code when request processing fails due to an internal server error.
          resultCodeMap:
            type: string
            description: >-
                Specifies a result code map that should be used for clients that do not have a map associated with their client connection policy. If the associated client connection policy has a result code map, then that map will be used instead. If no map is associated either with the client connection policy or the global configuration, then an internal default will be used.
          returnBindErrorMessages:
            type: boolean
            description: >-
                Indicates whether responses for failed bind operations should include a message string providing the reason for the authentication failure.
          notifyAbandonedOperations:
            type: boolean
            description: >-
                Indicates whether the Directory Server should send a response to any operation that is interrupted via an abandon request.
          duplicateErrorLogLimit:
            type: integer
            description: >-
                Specifies the maximum number of duplicate error log messages that should be logged in the time window specified by the duplicate-error-log-time-limit property.
          duplicateErrorLogTimeLimit:
            type: string
            description: >-
                Specifies the length of time that must expire before duplicate log messages above the duplicate-error-log-limit threshold are logged again to the error log.
          duplicateAlertLimit:
            type: integer
            description: >-
                Specifies the maximum number of duplicate alert messages that should be sent via the administrative alert framework in the time window specified by the duplicate-alert-time-limit property.
          duplicateAlertTimeLimit:
            type: string
            description: >-
                Specifies the length of time that must expire before duplicate messages are sent via the administrative alert framework.
          writabilityMode:
            $ref: '#/components/schemas/Enumglobal-configuration-writabilityModeProp'
          unrecoverableDatabaseErrorMode:
            $ref: '#/components/schemas/Enumglobal-configuration-unrecoverableDatabaseErrorModeProp'
          databaseOnVirtualizedOrNetworkStorage:
            type: boolean
            description: >-
                This setting provides data integrity options when the Directory Server is installed with a database on a network storage device. A storage device may be accessed directly by a physical server, or indirectly through a virtual machine running on a hypervisor. Enabling this setting will apply changes to all Local DB Backends, the LDAP Changelog Backend, and the replication changelog database.
          autoNameWithEntryUUIDConnectionCriteria:
            type: string
            description: >-
                Connection criteria that may be used to identify clients whose add requests should use entryUUID as the naming attribute.
          autoNameWithEntryUUIDRequestCriteria:
            type: string
            description: >-
                Request criteria that may be used to identify add requests that should use entryUUID as the naming attribute.
          softDeletePolicy:
            type: string
            description: >-
                Specifies the soft delete policy that will be used by default for delete operations. Soft delete operations introduce the ability to control the server behavior of the delete operation. Instead of performing a permanent delete of an entry, deleted entries can be retained as soft deleted entries by their entryUUID values and are available for undelete at a later time. In addition to a soft delete policy enabling soft deletes, delete operations sent to the server must have the soft delete request control present with sufficient access privileges to access the soft delete request control.
          subtreeAccessibilityAlertTimeLimit:
            type: string
            description: >-
                Specifies the length of time that a subtree may remain hidden or read-only before an administrative alert is sent.
          warnForBackendsWithMultipleBaseDns:
            type: boolean
            description: >-
                Indicates whether the server should issue a warning when enabling a backend that contains multiple base DNs.
          forcedGCPrimeDuration:
            type: string
            description: >-
                Specifies the minimum length of time required for backend or request processor initialization that will trigger the server to force an explicit garbage collection. A value of "0 seconds" indicates that the server should never invoke an explicit garbage collection regardless of the length of time required to initialize the server backends.
          replicationSetName:
            type: string
            description: >-
                The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.
          startupMinReplicationBacklogCount:
            type: integer
            description: >-
                The number of outstanding changes any replica can have before the Directory Server will start accepting connections. The Directory Server may never accept connections if this setting is too low. If you are unsure which value to use, you can use the number of expected updates within a five second interval.
          replicationBacklogCountAlertThreshold:
            type: integer
            description: >-
                An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded this threshold for longer than the replication backlog duration alert threshold.
          replicationBacklogDurationAlertThreshold:
            type: string
            description: >-
                An alert is sent when the number of outstanding replication changes for the Directory Server has exceeded the replication backlog count alert threshold for longer than this duration.
          replicationAssuranceSourceTimeoutSuspendDuration:
            type: string
            description: >-
                The amount of time a replication assurance source (i.e. a peer Directory Server) will be suspended from assurance requirements on this Directory Server if it experiences an assurance timeout.
          replicationAssuranceSourceBacklogFastStartThreshold:
            type: integer
            description: >-
                The maximum number of replication backlog updates a replication assurance source (i.e. a peer Directory Server) can have and be immediately recognized as an available assurance source by this Directory Server.
          replicationHistoryLimit:
            type: integer
            description: >-
                Specifies the size limit for historical information.
          allowInheritedReplicationOfSubordinateBackends:
            type: boolean
            description: >-
                Allow replication to be inherited by subordinate/child backends.
          replicationPurgeObsoleteReplicas:
            type: boolean
            description: >-
                Indicates whether state about obsolete replicas is automatically purged.
          smtpServer:
            type: array
            items:
              type: string
            description: >-
                Specifies the set of servers that will be used to send email messages. The order in which the servers are listed indicates the order in which the Directory Server will attempt to use them in the course of sending a message. The first attempt will always go to the server at the top of the list, and servers further down the list will only be used if none of the servers listed above it were able to successfully send the message.
          maxSMTPConnectionCount:
            type: integer
            description: >-
                The maximum number of SMTP connections that will be maintained for delivering email messages.
          maxSMTPConnectionAge:
            type: string
            description: >-
                The maximum length of time that a connection to an SMTP server should be considered valid.
          smtpConnectionHealthCheckInterval:
            type: string
            description: >-
                The length of time between checks to ensure that available SMTP connections are still valid.
          allowedTask:
            type: array
            items:
              type: string
            description: >-
                Specifies the fully-qualified name of a Java class that may be invoked in the server.
          enableSubOperationTimer:
            type: boolean
            description: >-
                Indicates whether the Directory Server should attempt to record information about the length of time required to process various phases of an operation. Enabling this feature may impact performance, but could make it easier to identify potential bottlenecks in operation processing.
          maximumShutdownTime:
            type: string
            description: >-
                Specifies the maximum amount of time the shutdown of Directory Server may take.
          networkAddressCacheTTL:
            type: string
            description: >-
                Specifies the length of time that the Directory Server should cache the IP addresses associated with the names of systems with which it interacts.
          networkAddressOutageCacheEnabled:
            type: boolean
            description: >-
                Specifies whether the Directory Server should cache the last valid IP addresses associated with the names of systems with which it interacts with when the domain name service returns an unknown host exception. Java may return an unknown host exception when there is unexpected interruption in domain name service so this setting protects the Directory Server from temporary DNS server outages if previous results have been cached.
          trackedApplication:
            type: array
            items:
              type: string
            description: >-
                Specifies criteria for identifying specific applications that access the server to enable tracking throughput and latency of LDAP operations issued by an application.
          jmxValueBehavior:
            $ref: '#/components/schemas/Enumglobal-configuration-jmxValueBehaviorProp'
          jmxUseLegacyMbeanNames:
            type: boolean
            description: >-
                When set to true, the server will use its original, non-standard JMX MBean names for the monitoring MBeans. These include RDN keys of "Rdn1" and "Rdn2" instead of the recommended "type" and "name" keys. This should option should only be enabled for installations that have monitoring infrastructure that depends on the old keys.
        required:
        - instanceName
        - defaultPasswordPolicy
        - proxiedAuthorizationIdentityMapper
        - duplicateErrorLogLimit
        - duplicateErrorLogTimeLimit
        - duplicateAlertLimit
        - duplicateAlertTimeLimit
        - startupMinReplicationBacklogCount
        - replicationBacklogCountAlertThreshold
        - replicationBacklogDurationAlertThreshold
        - replicationAssuranceSourceTimeoutSuspendDuration
        - replicationAssuranceSourceBacklogFastStartThreshold
        - allowInheritedReplicationOfSubordinateBackends
    Enumglobal-configurationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:global"
    Enumglobal-configuration-allowedInsecureTLSProtocolProp:
      type: string
      enum:
      - "sslv3"
      description: >-
          Specifies a set of TLS protocols that will be permitted for use in the server even though there may be known vulnerabilities that could cause their use to be unsafe in some conditions. Enabling support for insecure TLS protocols is discouraged, and is generally recommended only as a short-term measure to permit legacy clients to interact with the server until they can be updated to support more secure communication protocols.
    Enumglobal-configuration-startupErrorLoggerOutputLocationProp:
      type: string
      enum:
      - "standard-output"
      - "standard-error"
      - "server-out-file"
      - "standard-output-and-server-out-file"
      - "standard-error-and-server-out-file"
      - "disabled"
      description: >-
          Specifies how the server should handle error log messages (which may include errors, warnings, and notices) generated during startup. All of these messages will be written to all configured error loggers, but they may also be written to other locations (like standard output, standard error, or the server.out log file) so that they are displayed on the console when the server is starting.
    Enumglobal-configuration-unrecoverableDatabaseErrorModeProp:
      type: string
      enum:
      - "enter-lockdown-mode"
      - "raise-unavailable-alarm"
      - "initiate-server-shutdown"
      description: >-
          Specifies the action which should be taken for any database that experiences an unrecoverable error. Action applies to local database backends and the replication recent changes database.
    Enumglobal-configuration-invalidAttributeSyntaxBehaviorProp:
      type: string
      enum:
      - "accept"
      - "reject"
      - "warn"
      description: >-
          Specifies how the Directory Server should handle operations whenever an attribute value violates the associated attribute syntax.
    Enumglobal-configuration-jmxValueBehaviorProp:
      type: string
      enum:
      - "inferred"
      - "string"
      description: >-
          Specifies how a Java type is chosen for monitor attributes exposed as JMX attribute values.
    Enumglobal-configuration-writabilityModeProp:
      type: string
      enum:
      - "enabled"
      - "disabled"
      - "internal-only"
      description: >-
          Specifies the kinds of write operations the Directory Server can process.
    Enumglobal-configuration-disabledPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that should not be evaluated by the server.
    Enumglobal-configuration-singleStructuralObjectclassBehaviorProp:
      type: string
      enum:
      - "accept"
      - "reject"
      - "warn"
      description: >-
          Specifies how the Directory Server should handle operations for an entry does not contain a structural object class, or for an entry that contains multiple structural classes.
    Enumglobal-configuration-attributesModifiableWithIgnoreNoUserModificationRequestControlProp:
      type: string
      enum:
      - "creatorsName"
      - "createTimestamp"
      - "modifiersName"
      - "modifyTimestamp"
      description: >-
          Specifies the operational attribute types that are defined in the schema with the NO-USER-MODIFICATION constraint that the server will allow to be altered if the associated request contains the ignore NO-USER-MODIFICATION request control.
    add-ping-one-id-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new ID Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
    ping-one-id-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the ID Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
      required:
      - OpenIDConnectProvider
    ping-one-id-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-one-id-token-validatorSchemaUrn'
        issuerURL:
          type: string
          description: >-
              Specifies a PingOne base issuer URL.
        OpenIDConnectProvider:
          type: string
          description: >-
              Specifies HTTPS connection settings for the PingOne OpenID Connect provider.
        OpenIDConnectMetadataCacheDuration:
          type: string
          description: >-
              How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.
        description:
          type: string
          description: >-
              A description for this ID Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this ID Token Validator is enabled for use in the Directory Server.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject; i.e., the authenticated user.
        clockSkewGracePeriod:
          type: string
          description: >-
              Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.
        jwksCacheDuration:
          type: string
          description: >-
              How often the ID Token Validator should refresh its cache of JWKS token signing keys.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      required:
      - schemas
      - issuerURL
      - enabled
      - identityMapper
      - evaluationOrderIndex
    Enumping-one-id-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
    add-openid-connect-id-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new ID Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
    openid-connect-id-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the ID Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
    openid-connect-id-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumopenid-connect-id-token-validatorSchemaUrn'
        allowedSigningAlgorithm:
          type: array
          items:
            $ref: '#/components/schemas/Enumid-token-validator-allowedSigningAlgorithmProp'
        signingCertificate:
          type: array
          items:
            type: string
          description: >-
              Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.
        OpenIDConnectProvider:
          type: string
          description: >-
              Specifies the OpenID Connect provider that issues ID tokens handled by this OpenID Connect ID Token Validator. This property is used in conjunction with the jwks-endpoint-path property.
        jwksEndpointPath:
          type: string
          description: >-
              The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.
        description:
          type: string
          description: >-
              A description for this ID Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this ID Token Validator is enabled for use in the Directory Server.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject; i.e., the authenticated user.
        issuerURL:
          type: string
          description: >-
              Specifies the OpenID Connect provider's issuer URL.
        clockSkewGracePeriod:
          type: string
          description: >-
              Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.
        jwksCacheDuration:
          type: string
          description: >-
              How often the ID Token Validator should refresh its cache of JWKS token signing keys.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      required:
      - schemas
      - allowedSigningAlgorithm
      - enabled
      - identityMapper
      - issuerURL
      - evaluationOrderIndex
    Enumopenid-connect-id-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
    add-string-array-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            description: Name of the new Token Claim Validation
            type: string
        required:
        - validationName
      - $ref: '#/components/schemas/string-array-token-claim-validation-shared'
    string-array-token-claim-validation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Token Claim Validation
            type: string
        required:
        - id
      - $ref: '#/components/schemas/string-array-token-claim-validation-shared'
    string-array-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstring-array-token-claim-validationSchemaUrn'
        allRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of all values that the claim must have to be considered valid.
        anyRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of values that the claim may have to be considered valid.
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - claimName
    Enumstring-array-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
    add-boolean-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            description: Name of the new Token Claim Validation
            type: string
        required:
        - validationName
      - $ref: '#/components/schemas/boolean-token-claim-validation-shared'
    boolean-token-claim-validation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Token Claim Validation
            type: string
        required:
        - id
      - $ref: '#/components/schemas/boolean-token-claim-validation-shared'
    boolean-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumboolean-token-claim-validationSchemaUrn'
        requiredValue:
          $ref: '#/components/schemas/Enumtoken-claim-validation-requiredValueProp'
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - requiredValue
      - claimName
    Enumboolean-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
    add-string-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            description: Name of the new Token Claim Validation
            type: string
        required:
        - validationName
      - $ref: '#/components/schemas/string-token-claim-validation-shared'
    string-token-claim-validation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Token Claim Validation
            type: string
        required:
        - id
      - $ref: '#/components/schemas/string-token-claim-validation-shared'
    string-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstring-token-claim-validationSchemaUrn'
        anyRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of values that the claim may have to be considered valid.
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - anyRequiredValue
      - claimName
    Enumstring-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
    Enumid-token-validator-allowedSigningAlgorithmProp:
      type: string
      enum:
      - "RS256"
      - "RS384"
      - "RS512"
      - "ES256"
      - "ES384"
      - "ES512"
      description: >-
          Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.
    Enumtoken-claim-validation-requiredValueProp:
      type: string
      enum:
      - "true"
      - "false"
      description: >-
          Specifies the boolean claim's required value.
    plugin-root-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumplugin-rootSchemaUrn'
          pluginOrderStartup:
            type: string
            description: >-
                Specifies the order in which startup plug-ins are to be loaded and invoked.
          pluginOrderShutdown:
            type: string
            description: >-
                Specifies the order in which shutdown plug-ins are to be loaded and invoked.
          pluginOrderPostConnect:
            type: string
            description: >-
                Specifies the order in which post-connect plug-ins are to be loaded and invoked.
          pluginOrderPostDisconnect:
            type: string
            description: >-
                Specifies the order in which post-disconnect plug-ins are to be loaded and invoked.
          pluginOrderLDIFImport:
            type: string
            description: >-
                Specifies the order in which LDIF import plug-ins are to be loaded and invoked.
          pluginOrderLDIFExport:
            type: string
            description: >-
                Specifies the order in which LDIF export plug-ins are to be loaded and invoked.
          pluginOrderPreParseAbandon:
            type: string
            description: >-
                Specifies the order in which pre-parse abandon plug-ins are to be loaded and invoked.
          pluginOrderPreParseAdd:
            type: string
            description: >-
                Specifies the order in which pre-parse add plug-ins are to be loaded and invoked.
          pluginOrderPreParseBind:
            type: string
            description: >-
                Specifies the order in which pre-parse bind plug-ins are to be loaded and invoked.
          pluginOrderPreParseCompare:
            type: string
            description: >-
                Specifies the order in which pre-parse compare plug-ins are to be loaded and invoked.
          pluginOrderPreParseDelete:
            type: string
            description: >-
                Specifies the order in which pre-parse delete plug-ins are to be loaded and invoked.
          pluginOrderPreParseExtended:
            type: string
            description: >-
                Specifies the order in which pre-parse extended operation plug-ins are to be loaded and invoked.
          pluginOrderPreParseModify:
            type: string
            description: >-
                Specifies the order in which pre-parse modify plug-ins are to be loaded and invoked.
          pluginOrderPreParseModifyDN:
            type: string
            description: >-
                Specifies the order in which pre-parse modify DN plug-ins are to be loaded and invoked.
          pluginOrderPreParseSearch:
            type: string
            description: >-
                Specifies the order in which pre-parse search plug-ins are to be loaded and invoked.
          pluginOrderPreParseUnbind:
            type: string
            description: >-
                Specifies the order in which pre-parse unbind plug-ins are to be loaded and invoked.
          pluginOrderPreOperationAdd:
            type: string
            description: >-
                Specifies the order in which pre-operation add plug-ins are to be loaded and invoked.
          pluginOrderPreOperationBind:
            type: string
            description: >-
                Specifies the order in which pre-operation bind plug-ins are to be loaded and invoked.
          pluginOrderPreOperationCompare:
            type: string
            description: >-
                Specifies the order in which pre-operation compare plug-ins are to be loaded and invoked.
          pluginOrderPreOperationDelete:
            type: string
            description: >-
                Specifies the order in which pre-operation delete plug-ins are to be loaded and invoked.
          pluginOrderPreOperationExtended:
            type: string
            description: >-
                Specifies the order in which pre-operation extended operation plug-ins are to be loaded and invoked.
          pluginOrderPreOperationModify:
            type: string
            description: >-
                Specifies the order in which pre-operation modify plug-ins are to be loaded and invoked.
          pluginOrderPreOperationModifyDN:
            type: string
            description: >-
                Specifies the order in which pre-operation modify DN plug-ins are to be loaded and invoked.
          pluginOrderPreOperationSearch:
            type: string
            description: >-
                Specifies the order in which pre-operation search plug-ins are to be loaded and invoked.
          pluginOrderPostOperationAbandon:
            type: string
            description: >-
                Specifies the order in which post-operation abandon plug-ins are to be loaded and invoked.
          pluginOrderPostOperationAdd:
            type: string
            description: >-
                Specifies the order in which post-operation add plug-ins are to be loaded and invoked.
          pluginOrderPostOperationBind:
            type: string
            description: >-
                Specifies the order in which post-operation bind plug-ins are to be loaded and invoked.
          pluginOrderPostOperationCompare:
            type: string
            description: >-
                Specifies the order in which post-operation compare plug-ins are to be loaded and invoked.
          pluginOrderPostOperationDelete:
            type: string
            description: >-
                Specifies the order in which post-operation delete plug-ins are to be loaded and invoked.
          pluginOrderPostOperationExtended:
            type: string
            description: >-
                Specifies the order in which post-operation extended operation plug-ins are to be loaded and invoked.
          pluginOrderPostOperationModify:
            type: string
            description: >-
                Specifies the order in which post-operation modify plug-ins are to be loaded and invoked.
          pluginOrderPostOperationModifyDN:
            type: string
            description: >-
                Specifies the order in which post-operation modify DN plug-ins are to be loaded and invoked.
          pluginOrderPostOperationSearch:
            type: string
            description: >-
                Specifies the order in which post-operation search plug-ins are to be loaded and invoked.
          pluginOrderPostOperationUnbind:
            type: string
            description: >-
                Specifies the order in which post-operation unbind plug-ins are to be loaded and invoked.
          pluginOrderPostResponseAdd:
            type: string
            description: >-
                Specifies the order in which post-response add plug-ins are to be loaded and invoked.
          pluginOrderPostResponseBind:
            type: string
            description: >-
                Specifies the order in which post-response bind plug-ins are to be loaded and invoked.
          pluginOrderPostResponseCompare:
            type: string
            description: >-
                Specifies the order in which post-response compare plug-ins are to be loaded and invoked.
          pluginOrderPostResponseDelete:
            type: string
            description: >-
                Specifies the order in which post-response delete plug-ins are to be loaded and invoked.
          pluginOrderPostResponseExtended:
            type: string
            description: >-
                Specifies the order in which post-response extended operation plug-ins are to be loaded and invoked.
          pluginOrderPostResponseModify:
            type: string
            description: >-
                Specifies the order in which post-response modify plug-ins are to be loaded and invoked.
          pluginOrderPostResponseModifyDN:
            type: string
            description: >-
                Specifies the order in which post-response modify DN plug-ins are to be loaded and invoked.
          pluginOrderPostSynchronizationAdd:
            type: string
            description: >-
                Specifies the order in which post-synchronization add plug-ins are to be loaded and invoked.
          pluginOrderPostSynchronizationDelete:
            type: string
            description: >-
                Specifies the order in which post-synchronization delete plug-ins are to be loaded and invoked.
          pluginOrderPostSynchronizationModify:
            type: string
            description: >-
                Specifies the order in which post-synchronization modify plug-ins are to be loaded and invoked.
          pluginOrderPostSynchronizationModifyDN:
            type: string
            description: >-
                Specifies the order in which post-synchronization modify DN plug-ins are to be loaded and invoked.
          pluginOrderPostResponseSearch:
            type: string
            description: >-
                Specifies the order in which post-response search plug-ins are to be loaded and invoked.
          pluginOrderSearchResultEntry:
            type: string
            description: >-
                Specifies the order in which search result entry plug-ins are to be loaded and invoked.
          pluginOrderSearchResultReference:
            type: string
            description: >-
                Specifies the order in which search result reference plug-ins are to be loaded and invoked.
          pluginOrderSubordinateModifyDN:
            type: string
            description: >-
                Specifies the order in which subordinate modify DN plug-ins are to be loaded and invoked.
          pluginOrderIntermediateResponse:
            type: string
            description: >-
                Specifies the order in which intermediate response plug-ins are to be loaded and invoked.
    Enumplugin-rootSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin-root"
    last-access-time-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumlast-access-time-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          maxUpdateFrequency:
            type: string
            description: >-
                Specifies the maximum frequency with which last access time values should be written for an entry. This may help limit the rate of internal write operations processed in the server.
          operationType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-operationTypeProp'
          invokeForFailedBinds:
            type: boolean
            description: >-
                Indicates whether to update the last access time for an entry targeted by a bind operation if the bind is unsuccessful.
          maxSearchResultEntriesToUpdate:
            type: integer
            description: >-
                Specifies the maximum number of entries that should be updated in a search operation. Only search result entries actually returned to the client may have their last access time updated, but because a single search operation may return a very large number of entries, the plugin will only update entries if no more than a specified number of entries are updated.
          requestCriteria:
            type: string
            description: >-
                Specifies a set of request criteria that may be used to indicate whether to apply access time updates for the associated operation.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumlast-access-time-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:last-access-time"
    stats-collector-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumstats-collector-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          sampleInterval:
            type: string
            description: >-
                The duration between statistics collections. Setting this value too small can have an impact on performance. This value should be a multiple of collection-interval.
          collectionInterval:
            type: string
            description: >-
                Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered, and setting this value too small can have an adverse impact on performance.
          ldapInfo:
            $ref: '#/components/schemas/Enumplugin-ldapInfoProp'
          serverInfo:
            $ref: '#/components/schemas/Enumplugin-serverInfoProp'
          perApplicationLDAPStats:
            $ref: '#/components/schemas/Enumplugin-stats-collector-perApplicationLDAPStatsProp'
          ldapChangelogInfo:
            $ref: '#/components/schemas/Enumplugin-ldapChangelogInfoProp'
          statusSummaryInfo:
            $ref: '#/components/schemas/Enumplugin-statusSummaryInfoProp'
          generateCollectorFiles:
            type: boolean
            description: >-
                Indicates whether this plugin should store metric samples on disk for use by the Data Metrics Server. If the Stats Collector Plugin is only being used to collect metrics for one or more StatsD Monitoring Endpoints, then this can be set to false to prevent unnecessary I/O.
          localDBBackendInfo:
            $ref: '#/components/schemas/Enumplugin-localDBBackendInfoProp'
          replicationInfo:
            $ref: '#/components/schemas/Enumplugin-replicationInfoProp'
          entryCacheInfo:
            $ref: '#/components/schemas/Enumplugin-entryCacheInfoProp'
          hostInfo:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-hostInfoProp'
          includedLDAPApplication:
            type: array
            items:
              type: string
            description: >-
                If statistics should not be included for all applications, this property names the subset of applications that should be included.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
        required:
        - schemas
        - sampleInterval
        - collectionInterval
        - enabled
        - id
    Enumstats-collector-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:stats-collector"
    add-internal-search-rate-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/internal-search-rate-plugin-shared'
    internal-search-rate-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/internal-search-rate-plugin-shared'
      required:
      - pluginType
      - numThreads
    internal-search-rate-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enuminternal-search-rate-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        numThreads:
          type: integer
          description: >-
              Specifies the number of concurrent threads that should be used to process the search operations.
        baseDN:
          type: string
          description: >-
              Specifies the base DN to use for the searches to perform.
        lowerBound:
          type: integer
          description: >-
              Specifies the lower bound for the numeric value which will be inserted into the search filter.
        upperBound:
          type: integer
          description: >-
              Specifies the upper bound for the numeric value which will be inserted into the search filter.
        filterPrefix:
          type: string
          description: >-
              Specifies a prefix which will be used in front of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should contain the entire filter string.
        filterSuffix:
          type: string
          description: >-
              Specifies a suffix which will be used after of the randomly-selected numeric value in all search filters used. If no upper bound is defined, then this should be omitted.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - baseDN
      - filterPrefix
      - enabled
    Enuminternal-search-rate-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:internal-search-rate"
    add-modifiable-password-policy-state-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/modifiable-password-policy-state-plugin-shared'
    modifiable-password-policy-state-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/modifiable-password-policy-state-plugin-shared'
    modifiable-password-policy-state-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummodifiable-password-policy-state-pluginSchemaUrn'
        baseDN:
          type: array
          items:
            type: string
          description: >-
              A base DN that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - enabled
    Enummodifiable-password-policy-state-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:modifiable-password-policy-state"
    add-seven-bit-clean-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/seven-bit-clean-plugin-shared'
    seven-bit-clean-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/seven-bit-clean-plugin-shared'
      required:
      - pluginType
      - attributeType
    seven-bit-clean-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumseven-bit-clean-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        attributeType:
          type: array
          items:
            type: string
          description: >-
              Specifies the name or OID of an attribute type for which values should be checked to ensure that they are 7-bit clean.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DN below which the checking is performed.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - enabled
    Enumseven-bit-clean-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:seven-bit-clean"
    add-clean-up-expired-pingfederate-persistent-access-grants-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-access-grants-plugin-shared'
    clean-up-expired-pingfederate-persistent-access-grants-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-access-grants-plugin-shared'
      required:
      - pollingInterval
      - maxUpdatesPerSecond
      - numDeleteThreads
    clean-up-expired-pingfederate-persistent-access-grants-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumclean-up-expired-pingfederate-persistent-access-grants-pluginSchemaUrn'
        pollingInterval:
          type: string
          description: >-
              This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
        peerServerPriorityIndex:
          type: integer
          description: >-
              In a replicated environment, this determines the order in which peer servers should attempt to purge data.
        baseDN:
          type: string
          description: >-
              Only entries located within the subtree specified by this base DN are eligible for purging.
        maxUpdatesPerSecond:
          type: integer
          description: >-
              This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
        numDeleteThreads:
          type: integer
          description: >-
              The number of threads used to delete expired entries.
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - enabled
    Enumclean-up-expired-pingfederate-persistent-access-grants-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-access-grants"
    add-periodic-gc-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/periodic-gc-plugin-shared'
    periodic-gc-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/periodic-gc-plugin-shared'
      required:
      - pluginType
    periodic-gc-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumperiodic-gc-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        invokeGCDayOfWeek:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-invokeGCDayOfWeekProp'
        invokeGCTimeUtc:
          type: array
          items:
            type: string
          description: >-
              Specifies the times of the day at which garbage collection may be explicitly invoked. The times should be specified in "HH:MM" format, with "HH" as a two-digit numeric value between 00 and 23 representing the hour of the day, and MM as a two-digit numeric value between 00 and 59 representing the minute of the hour. All times will be interpreted in the UTC time zone.
        delayAfterAlert:
          type: string
          description: >-
              Specifies the length of time that the Directory Server should wait after sending the "force-gc-starting" administrative alert before actually invoking the garbage collection processing.
        delayPostGC:
          type: string
          description: >-
              Specifies the length of time that the Directory Server should wait after successfully completing the garbage collection processing, before removing the "force-gc-starting" administrative alert, which marks the server as unavailable.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - invokeGCTimeUtc
      - enabled
    Enumperiodic-gc-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-gc"
    add-ping-one-pass-through-authentication-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/ping-one-pass-through-authentication-plugin-shared'
    ping-one-pass-through-authentication-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-one-pass-through-authentication-plugin-shared'
    ping-one-pass-through-authentication-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-one-pass-through-authentication-pluginSchemaUrn'
        apiURL:
          type: string
          description: >-
              Specifies the API endpoint for the PingOne web service.
        authURL:
          type: string
          description: >-
              Specifies the API endpoint for the PingOne authentication service.
        OAuthClientID:
          type: string
          description: >-
              Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
        OAuthClientSecret:
          type: string
          format: password
          description: >-
              Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
        OAuthClientSecretPassphraseProvider:
          type: string
          description: >-
              Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.
        environmentID:
          type: string
          description: >-
              Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Plugin.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.
        includedLocalEntryBaseDN:
          type: array
          items:
            type: string
          description: >-
              The base DNs for the local users whose authentication attempts may be passed through to the PingOne service.
        connectionCriteria:
          type: string
          description: >-
              A reference to connection criteria that will be used to indicate which bind requests should be passed through to the PingOne service.
        requestCriteria:
          type: string
          description: >-
              A reference to request criteria that will be used to indicate which bind requests should be passed through to the PingOne service.
        tryLocalBind:
          type: boolean
          description: >-
              Indicates whether to attempt the bind in the local server first, or to only send it to the PingOne service.
        overrideLocalPassword:
          type: boolean
          description: >-
              Indicates whether to attempt the authentication in the PingOne service if the local user entry includes a password. This property will only be used if try-local-bind is true.
        updateLocalPassword:
          type: boolean
          description: >-
              Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the PingOne service.
        updateLocalPasswordDN:
          type: string
          description: >-
              This is the DN of the user that will be used to overwrite the user's local password if update-local-password is set. The DN put here should be added to 'ignore-changes-by-dn' in the appropriate Sync Source.
        allowLaxPassThroughAuthenticationPasswords:
          type: boolean
          description: >-
              Indicates whether to overwrite the user's local password even if the password used to authenticate to the PingOne service would have failed validation if the user attempted to set it directly.
        ignoredPasswordPolicyStateErrorCondition:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-ignoredPasswordPolicyStateErrorConditionProp'
        userMappingLocalAttribute:
          type: array
          items:
            type: string
          description: >-
              The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.
        userMappingRemoteJSONField:
          type: array
          items:
            type: string
          description: >-
              The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.
        additionalUserMappingSCIMFilter:
          type: string
          description: >-
              An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the "eq", "sw", "and", and "or" filter types may be used.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - apiURL
      - authURL
      - OAuthClientID
      - environmentID
      - userMappingLocalAttribute
      - userMappingRemoteJSONField
      - enabled
    Enumping-one-pass-through-authentication-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:ping-one-pass-through-authentication"
    changelog-password-encryption-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumchangelog-password-encryption-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          changelogPasswordEncryptionKey:
            type: string
            format: password
            description: >-
                A passphrase that may be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
          changelogPasswordEncryptionKeyPassphraseProvider:
            type: string
            description: >-
                A passphrase provider that may be used to obtain the passphrase that will be used to generate the key for encrypting passwords stored in the changelog. The same passphrase also needs to be set (either through the "changelog-password-decryption-key" property or the "changelog-password-decryption-key-passphrase-provider" property) in the Global Sync Configuration in the Data Sync Server.
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - enabled
        - id
    Enumchangelog-password-encryption-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:changelog-password-encryption"
    processing-time-histogram-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumprocessing-time-histogram-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          histogramCategoryBoundary:
            type: array
            items:
              type: string
            description: >-
                Specifies the boundary values that will be used to separate the processing times into categories. Values should be specified as durations, and all values must be greater than zero.
          includeQueueTime:
            type: boolean
            description: >-
                Indicates whether operation processing times should include the time spent waiting on the work queue. This will only be available if the work queue is configured to monitor the queue time.
          separateMonitorEntryPerTrackedApplication:
            type: boolean
            description: >-
                When enabled, separate monitor entries will be included for each application defined in the Global Configuration's tracked-application property.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - histogramCategoryBoundary
        - enabled
        - id
    Enumprocessing-time-histogram-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:processing-time-histogram"
    add-search-shutdown-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/search-shutdown-plugin-shared'
    search-shutdown-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/search-shutdown-plugin-shared'
    search-shutdown-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsearch-shutdown-pluginSchemaUrn'
        baseDN:
          type: string
          description: >-
              The base DN to use for the search.
        scope:
          $ref: '#/components/schemas/Enumplugin-scopeProp'
        filter:
          type: string
          description: >-
              The filter to use for the search.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              The name of an attribute that should be included in the results. This may include any token which is allowed as a requested attribute in search requests, including the name of an attribute, an asterisk (to indicate all user attributes), a plus sign (to indicate all operational attributes), an object class name preceded with an at symbol (to indicate all attributes associated with that object class), an attribute name preceded by a caret (to indicate that attribute should be excluded), or an object class name preceded by a caret and an at symbol (to indicate that all attributes associated with that object class should be excluded).
        outputFile:
          type: string
          description: >-
              The path of an LDIF file that should be created with the results of the search.
        previousFileExtension:
          type: string
          description: >-
              An extension that should be appended to the name of an existing output file rather than deleting it. If a file already exists with the full previous file name, then it will be deleted before the current file is renamed to become the previous file.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - scope
      - filter
      - outputFile
      - enabled
    Enumsearch-shutdown-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:search-shutdown"
    add-periodic-stats-logger-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/periodic-stats-logger-plugin-shared'
    periodic-stats-logger-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/periodic-stats-logger-plugin-shared'
      required:
      - logInterval
      - collectionInterval
      - suppressIfIdle
      - linesBetweenHeader
      - histogramFormat
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
    periodic-stats-logger-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumperiodic-stats-logger-pluginSchemaUrn'
        logInterval:
          type: string
          description: >-
              The duration between statistics collection and logging. A new line is logged to the output for each interval. Setting this value too small can have an impact on performance.
        collectionInterval:
          type: string
          description: >-
              Some of the calculated statistics, such as the average and maximum queue sizes, can use multiple samples within a log interval. This value controls how often samples are gathered. It should be a multiple of the log-interval.
        suppressIfIdle:
          type: boolean
          description: >-
              If the server is idle during the specified interval, then do not log any output if this property is set to true. The server is idle if during the interval, no new connections were established, no operations were processed, and no operations are pending.
        headerPrefixPerColumn:
          type: boolean
          description: >-
              This property controls whether the header prefix, which applies to a group of columns, appears at the start of each column header or only the first column in a group.
        emptyInsteadOfZero:
          type: boolean
          description: >-
              This property controls whether a value in the output is shown as empty if the value is zero.
        linesBetweenHeader:
          type: integer
          description: >-
              The number of lines to log between logging the header line that summarizes the columns in the table.
        includedLDAPStat:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-includedLDAPStatProp'
        includedResourceStat:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-includedResourceStatProp'
        histogramFormat:
          $ref: '#/components/schemas/Enumplugin-histogramFormatProp'
        histogramOpType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-histogramOpTypeProp'
        perApplicationLDAPStats:
          $ref: '#/components/schemas/Enumplugin-periodic-stats-logger-perApplicationLDAPStatsProp'
        statusSummaryInfo:
          $ref: '#/components/schemas/Enumplugin-statusSummaryInfoProp'
        ldapChangelogInfo:
          $ref: '#/components/schemas/Enumplugin-ldapChangelogInfoProp'
        gaugeInfo:
          $ref: '#/components/schemas/Enumplugin-gaugeInfoProp'
        logFileFormat:
          $ref: '#/components/schemas/Enumplugin-logFileFormatProp'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Periodic Stats Logger Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Periodic Stats Logger Plugin.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Periodic Stats Logger Plugin .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Periodic Stats Logger Plugin .
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumplugin-loggingErrorBehaviorProp'
        localDBBackendInfo:
          $ref: '#/components/schemas/Enumplugin-localDBBackendInfoProp'
        replicationInfo:
          $ref: '#/components/schemas/Enumplugin-replicationInfoProp'
        entryCacheInfo:
          $ref: '#/components/schemas/Enumplugin-entryCacheInfoProp'
        hostInfo:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-hostInfoProp'
        includedLDAPApplication:
          type: array
          items:
            type: string
          description: >-
              If statistics should not be included for all applications, this property names the subset of applications that should be included.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - logFile
      - enabled
    Enumperiodic-stats-logger-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:periodic-stats-logger"
    add-purge-expired-data-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/purge-expired-data-plugin-shared'
    purge-expired-data-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/purge-expired-data-plugin-shared'
      required:
      - datetimeFormat
      - pollingInterval
      - maxUpdatesPerSecond
      - numDeleteThreads
    purge-expired-data-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpurge-expired-data-pluginSchemaUrn'
        datetimeAttribute:
          type: string
          description: >-
              The LDAP attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
        datetimeJSONField:
          type: string
          description: >-
              The top-level JSON field within the configured datetime-attribute that determines when data should be deleted. This could store the expiration time, or it could store the creation time and the expiration-offset property specifies the duration before data is deleted.
        datetimeFormat:
          $ref: '#/components/schemas/Enumplugin-datetimeFormatProp'
        customDatetimeFormat:
          type: string
          description: >-
              When the datetime-format property is configured with a value of "custom", this specifies the format (using a string compatible with the java.text.SimpleDateFormat class) that will be used to search for expired data.
        customTimezone:
          type: string
          description: >-
              Specifies the time zone to use when generating a date string using the configured custom-datetime-format value. The provided value must be accepted by java.util.TimeZone.getTimeZone.
        expirationOffset:
          type: string
          description: >-
              The duration to wait after the value specified in datetime-attribute (and optionally datetime-json-field) before purging the data.
        purgeBehavior:
          $ref: '#/components/schemas/Enumplugin-purgeBehaviorProp'
        baseDN:
          type: string
          description: >-
              Only entries located within the subtree specified by this base DN are eligible for purging.
        filter:
          type: string
          description: >-
              Only entries that match this LDAP filter will be eligible for having data purged.
        pollingInterval:
          type: string
          description: >-
              This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
        maxUpdatesPerSecond:
          type: integer
          description: >-
              This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
        peerServerPriorityIndex:
          type: integer
          description: >-
              In a replicated environment, this determines the order in which peer servers should attempt to purge data.
        numDeleteThreads:
          type: integer
          description: >-
              The number of threads used to delete expired entries.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - datetimeAttribute
      - expirationOffset
      - enabled
    Enumpurge-expired-data-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:purge-expired-data"
    change-subscription-notification-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumchange-subscription-notification-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - enabled
        - id
    Enumchange-subscription-notification-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:change-subscription-notification"
    add-sub-operation-timing-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/sub-operation-timing-plugin-shared'
    sub-operation-timing-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/sub-operation-timing-plugin-shared'
      required:
      - pluginType
      - numMostExpensivePhasesShown
    sub-operation-timing-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsub-operation-timing-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria used to indicate that only operations for requests matching this criteria should be counted when aggregating timing data.
        numMostExpensivePhasesShown:
          type: integer
          description: >-
              This controls how many of the most expensive phases are included per operation type in the monitor entry.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - enabled
    Enumsub-operation-timing-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:sub-operation-timing"
    add-third-party-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/third-party-plugin-shared'
    third-party-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-plugin-shared'
    third-party-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-pluginSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Plugin.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Plugin. Each configuration property should be given in the form 'name=value'.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that may be used to indicate that this Third Party Plugin should only be invoked for operations in which the associated request matches this criteria.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - extensionClass
      - enabled
      - pluginType
    Enumthird-party-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:third-party"
    encrypt-attribute-values-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumencrypt-attribute-values-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          attributeType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-attributeTypeProp'
          encryptionSettingsDefinitionID:
            type: string
            description: >-
                Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - attributeType
        - enabled
        - id
    Enumencrypt-attribute-values-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:encrypt-attribute-values"
    add-pass-through-authentication-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/pass-through-authentication-plugin-shared'
    pass-through-authentication-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pass-through-authentication-plugin-shared'
      required:
      - pluginType
      - tryLocalBind
      - overrideLocalPassword
      - updateLocalPassword
      - serverAccessMode
      - initialConnections
      - maxConnections
    pass-through-authentication-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpass-through-authentication-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        server:
          type: array
          items:
            type: string
          description: >-
              Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
        tryLocalBind:
          type: boolean
          description: >-
              Indicates whether the bind attempt should first be attempted against the local server. Depending on the value of the override-local-password property, the bind attempt may then be attempted against a remote server if the local bind fails.
        overrideLocalPassword:
          type: boolean
          description: >-
              Indicates whether the bind attempt should be attempted against a remote server in the event that the local bind fails but the local password is present.
        updateLocalPassword:
          type: boolean
          description: >-
              Indicates whether the local password value should be updated to the value used in the bind request in the event that the local bind fails but the remote bind succeeds.
        allowLaxPassThroughAuthenticationPasswords:
          type: boolean
          description: >-
              Indicates whether updates to the local password value should accept passwords that do not meet password policy constraints.
        serverAccessMode:
          $ref: '#/components/schemas/Enumplugin-serverAccessModeProp'
        includedLocalEntryBaseDN:
          type: array
          items:
            type: string
          description: >-
              The base DNs for the local users whose authentication attempts may be passed through to an alternate server.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the client associated with the bind request for the bind to be passed through to an alternate server.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the bind request for the bind to be passed through to an alternate server.
        dnMap:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
        bindDNPattern:
          type: string
          description: >-
              A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
        searchBaseDN:
          type: string
          description: >-
              The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
        searchFilterPattern:
          type: string
          description: >-
              A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
        initialConnections:
          type: integer
          description: >-
              Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
        maxConnections:
          type: integer
          description: >-
              Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - server
      - enabled
    Enumpass-through-authentication-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:pass-through-authentication"
    add-dn-mapper-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/dn-mapper-plugin-shared'
    dn-mapper-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/dn-mapper-plugin-shared'
      required:
      - pluginType
      - enableAttributeMapping
      - enableControlMapping
      - alwaysMapResponses
    dn-mapper-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdn-mapper-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        sourceDN:
          type: string
          description: >-
              Specifies the source DN that may appear in client requests which should be remapped to the target DN. Note that the source DN must not be equal to the target DN.
        targetDN:
          type: string
          description: >-
              Specifies the DN to which the source DN should be mapped. Note that the target DN must not be equal to the source DN.
        enableAttributeMapping:
          type: boolean
          description: >-
              Indicates whether DN mapping should be applied to the values of attributes with appropriate syntaxes.
        mapAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of specific attributes for which DN mapping should be applied. This will only be applicable if the enable-attribute-mapping property has a value of "true". Any attributes listed must be defined in the server schema with either the distinguished name syntax or the name and optional UID syntax.
        enableControlMapping:
          type: boolean
          description: >-
              Indicates whether DN mapping should be applied to DNs that may be present in specific controls. DN mapping will only be applied for control types which are specifically supported by the DN mapper plugin.
        alwaysMapResponses:
          type: boolean
          description: >-
              Indicates whether DNs in response messages containing the target DN should always be remapped back to the source DN. If this is "false", then mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - sourceDN
      - targetDN
      - enabled
    Enumdn-mapper-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:dn-mapper"
    monitor-history-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummonitor-history-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          logInterval:
            type: string
            description: >-
                The duration between logging dumps of cn=monitor to a file.
          logFile:
            type: string
            description: >-
                The file name to use for the log files generated by the Monitor History Plugin. The path to the file can be specified either as relative to the server root or as an absolute path.
          logFilePermissions:
            type: string
            description: >-
                The UNIX permissions of the log files created by this Monitor History Plugin.
          loggingErrorBehavior:
            $ref: '#/components/schemas/Enumplugin-loggingErrorBehaviorProp'
          retentionPolicy:
            type: array
            items:
              type: string
            description: >-
                The retention policy to use for the Monitor History Plugin .
          retainFilesSparselyByAge:
            type: boolean
            description: >-
                Retain some older files to give greater perspective on how monitoring information has changed over time.
          sanitize:
            type: boolean
            description: >-
                Server monitoring data can include a small amount of personally identifiable information in the form of LDAP DNs and search filters. Setting this property to true will redact this information from the monitor files. This should only be used when necessary, as it reduces the information available in the archive and can increase the time to find the source of support issues.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
        required:
        - schemas
        - logInterval
        - logFile
        - logFilePermissions
        - retentionPolicy
        - enabled
        - id
    Enummonitor-history-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:monitor-history"
    add-referral-on-update-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/referral-on-update-plugin-shared'
    referral-on-update-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/referral-on-update-plugin-shared'
      required:
      - pluginType
    referral-on-update-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreferral-on-update-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        referralBaseURL:
          type: array
          items:
            type: string
          description: >-
              Specifies the base URL to use for the referrals generated by this plugin. It should include only the scheme, address, and port to use to communicate with the target server (e.g., "ldap://server.example.com:389/").
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN for requests for which to send referrals in response to update operations.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - referralBaseURL
      - enabled
    Enumreferral-on-update-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:referral-on-update"
    add-simple-to-external-bind-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/simple-to-external-bind-plugin-shared'
    simple-to-external-bind-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-to-external-bind-plugin-shared'
    simple-to-external-bind-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-to-external-bind-pluginSchemaUrn'
        connectionCriteria:
          type: string
          description: >-
              Specifies a connection criteria object that may be used to indicate the set of clients for which this plugin should be used. If a value is provided, then this plugin will only be used for requests from client connections matching this criteria.
        requestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that may be used to indicate the set of requests for which this plugin should be used. If a value is provided, then this plugin will only be used for bind requests matching this criteria.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - enabled
    Enumsimple-to-external-bind-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:simple-to-external-bind"
    custom-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - enabled
        - pluginType
        - id
    Enumcustom-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:custom"
    add-snmp-subagent-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/snmp-subagent-plugin-shared'
    snmp-subagent-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/snmp-subagent-plugin-shared'
      required:
      - agentxAddress
      - agentxPort
    snmp-subagent-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsnmp-subagent-pluginSchemaUrn'
        contextName:
          type: string
          description: >-
              The SNMP context name for this sub-agent. The context name must not be longer than 30 ASCII characters. Each server in a topology must have a unique SNMP context name.
        agentxAddress:
          type: string
          description: >-
              The hostname or IP address of the SNMP master agent.
        agentxPort:
          type: integer
          description: >-
              The port number on which the SNMP master agent will be contacted.
        numWorkerThreads:
          type: integer
          description: >-
              The number of worker threads to use to handle SNMP requests.
        sessionTimeout:
          type: string
          description: >-
              Specifies the maximum amount of time to wait for a session to the master agent to be established.
        connectRetryMaxWait:
          type: string
          description: >-
              The maximum amount of time to wait between attempts to establish a connection to the master agent.
        pingInterval:
          type: string
          description: >-
              The amount of time between consecutive pings sent by the sub-agent on its connection to the master agent. A value of zero disables the sending of pings by the sub-agent.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - enabled
    Enumsnmp-subagent-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:snmp-subagent"
    password-policy-import-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumpassword-policy-import-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
          defaultUserPasswordStorageScheme:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of the password storage schemes to be used for encoding passwords contained in attributes with the user password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy is to be used to govern them.
          defaultAuthPasswordStorageScheme:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of password storage schemes that to be used for encoding passwords contained in attributes with the auth password syntax for entries that do not include the ds-pwp-password-policy-dn attribute specifying which password policy should be used to govern them.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumpassword-policy-import-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:password-policy-import"
    profiler-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumprofiler-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          profileSampleInterval:
            type: string
            description: >-
                Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
          profileDirectory:
            type: string
            description: >-
                Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.
          enableProfilingOnStartup:
            type: boolean
            description: >-
                Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
          profileAction:
            $ref: '#/components/schemas/Enumplugin-profileActionProp'
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
        required:
        - schemas
        - profileSampleInterval
        - profileDirectory
        - enableProfilingOnStartup
        - enabled
        - id
    Enumprofiler-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:profiler"
    add-clean-up-inactive-pingfederate-persistent-sessions-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/clean-up-inactive-pingfederate-persistent-sessions-plugin-shared'
    clean-up-inactive-pingfederate-persistent-sessions-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/clean-up-inactive-pingfederate-persistent-sessions-plugin-shared'
      required:
      - pollingInterval
      - maxUpdatesPerSecond
      - numDeleteThreads
    clean-up-inactive-pingfederate-persistent-sessions-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumclean-up-inactive-pingfederate-persistent-sessions-pluginSchemaUrn'
        expirationOffset:
          type: string
          description: >-
              Sessions whose last activity timestamp is older than this offset will be removed.
        pollingInterval:
          type: string
          description: >-
              This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
        peerServerPriorityIndex:
          type: integer
          description: >-
              In a replicated environment, this determines the order in which peer servers should attempt to purge data.
        baseDN:
          type: string
          description: >-
              Only entries located within the subtree specified by this base DN are eligible for purging.
        maxUpdatesPerSecond:
          type: integer
          description: >-
              This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
        numDeleteThreads:
          type: integer
          description: >-
              The number of threads used to delete expired entries.
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - expirationOffset
      - enabled
    Enumclean-up-inactive-pingfederate-persistent-sessions-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-inactive-pingfederate-persistent-sessions"
    add-composed-attribute-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/composed-attribute-plugin-shared'
    composed-attribute-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/composed-attribute-plugin-shared'
      required:
      - pluginType
    composed-attribute-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcomposed-attribute-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        attributeType:
          type: string
          description: >-
              The name or OID of the attribute type for which values are to be generated.
        valuePattern:
          type: array
          items:
            type: string
          description: >-
              Specifies a pattern for constructing the values to use for the target attribute type.
        multipleValuePatternBehavior:
          $ref: '#/components/schemas/Enumplugin-multipleValuePatternBehaviorProp'
        multiValuedAttributeBehavior:
          $ref: '#/components/schemas/Enumplugin-multiValuedAttributeBehaviorProp'
        targetAttributeExistsDuringInitialPopulationBehavior:
          $ref: '#/components/schemas/Enumplugin-targetAttributeExistsDuringInitialPopulationBehaviorProp'
        updateSourceAttributeBehavior:
          $ref: '#/components/schemas/Enumplugin-updateSourceAttributeBehaviorProp'
        sourceAttributeRemovalBehavior:
          $ref: '#/components/schemas/Enumplugin-sourceAttributeRemovalBehaviorProp'
        updateTargetAttributeBehavior:
          $ref: '#/components/schemas/Enumplugin-updateTargetAttributeBehaviorProp'
        includeBaseDN:
          type: array
          items:
            type: string
          description: >-
              The set of base DNs below which composed values may be generated.
        excludeBaseDN:
          type: array
          items:
            type: string
          description: >-
              The set of base DNs below which composed values will not be generated.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of search filters that identify entries for which composed values may be generated.
        excludeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of search filters that identify entries for which composed values will not be generated.
        updatedEntryNewlyMatchesCriteriaBehavior:
          $ref: '#/components/schemas/Enumplugin-updatedEntryNewlyMatchesCriteriaBehaviorProp'
        updatedEntryNoLongerMatchesCriteriaBehavior:
          $ref: '#/components/schemas/Enumplugin-updatedEntryNoLongerMatchesCriteriaBehaviorProp'
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - attributeType
      - valuePattern
      - enabled
    Enumcomposed-attribute-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:composed-attribute"
    ldap-result-code-tracker-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-result-code-tracker-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - enabled
        - id
    Enumldap-result-code-tracker-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:ldap-result-code-tracker"
    add-attribute-mapper-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/attribute-mapper-plugin-shared'
    attribute-mapper-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/attribute-mapper-plugin-shared'
      required:
      - pluginType
      - enableControlMapping
      - alwaysMapResponses
    attribute-mapper-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumattribute-mapper-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        sourceAttribute:
          type: string
          description: >-
              Specifies the source attribute type that may appear in client requests which should be remapped to the target attribute. Note that the source attribute type must be defined in the server schema and must not be equal to the target attribute type.
        targetAttribute:
          type: string
          description: >-
              Specifies the target attribute type to which the source attribute type should be mapped. Note that the target attribute type must be defined in the server schema and must not be equal to the source attribute type.
        enableControlMapping:
          type: boolean
          description: >-
              Indicates whether mapping should be applied to attribute types that may be present in specific controls. If enabled, attribute mapping will only be applied for control types which are specifically supported by the attribute mapper plugin.
        alwaysMapResponses:
          type: boolean
          description: >-
              Indicates whether the target attribute in response messages should always be remapped back to the source attribute. If this is "false", then the mapping will be performed for a response message only if one or more elements of the associated request are mapped. Otherwise, the mapping will be performed for all responses regardless of whether the mapping was applied to the request.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - sourceAttribute
      - targetAttribute
      - enabled
    Enumattribute-mapper-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:attribute-mapper"
    add-delay-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/delay-plugin-shared'
    delay-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delay-plugin-shared'
      required:
      - pluginType
    delay-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelay-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        delay:
          type: string
          description: >-
              The delay to inject for operations matching the associated criteria.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria used to indicate that only operations from clients matching this criteria should be subject to the configured delay.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria used to indicate that only operations for requests matching this criteria should be subject to the configured delay.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - delay
      - enabled
    Enumdelay-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:delay"
    add-clean-up-expired-pingfederate-persistent-sessions-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-sessions-plugin-shared'
    clean-up-expired-pingfederate-persistent-sessions-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/clean-up-expired-pingfederate-persistent-sessions-plugin-shared'
      required:
      - pollingInterval
      - maxUpdatesPerSecond
      - numDeleteThreads
    clean-up-expired-pingfederate-persistent-sessions-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumclean-up-expired-pingfederate-persistent-sessions-pluginSchemaUrn'
        pollingInterval:
          type: string
          description: >-
              This specifies how often the plugin should check for expired data. It also controls the offset of peer servers (see the peer-server-priority-index for more information).
        peerServerPriorityIndex:
          type: integer
          description: >-
              In a replicated environment, this determines the order in which peer servers should attempt to purge data.
        baseDN:
          type: string
          description: >-
              Only entries located within the subtree specified by this base DN are eligible for purging.
        maxUpdatesPerSecond:
          type: integer
          description: >-
              This setting smooths out the performance impact on the server by throttling the purging to the specified maximum number of updates per second. To avoid a large backlog, this value should be set comfortably above the average rate that expired data is generated. When purge-behavior is set to subtree-delete-entries, then deletion of the entire subtree is considered a single update for the purposes of throttling.
        numDeleteThreads:
          type: integer
          description: >-
              The number of threads used to delete expired entries.
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
      required:
      - schemas
      - enabled
    Enumclean-up-expired-pingfederate-persistent-sessions-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:clean-up-expired-pingfederate-persistent-sessions"
    add-groovy-scripted-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/groovy-scripted-plugin-shared'
    groovy-scripted-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-plugin-shared'
    groovy-scripted-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-pluginSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Plugin.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that may be used to indicate that this Groovy Scripted Plugin should only be invoked for operations in which the associated request matches this criteria.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Plugin. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - scriptClass
      - enabled
      - pluginType
    Enumgroovy-scripted-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:groovy-scripted"
    last-mod-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumlast-mod-pluginSchemaUrn'
          id:
            description: Name of the Plugin
            type: string
          pluginType:
            type: array
            items:
              $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
          includeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies the name or OID of an attribute type that must be updated in order for the modifiersName and modifyTimestamp attributes to be updated in the target entry.
          excludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies the name or OID of an attribute type which may be updated in a modify or modify DN operation without causing the modifiersName and modifyTimestamp values to be updated for that entry.
          description:
            type: string
            description: >-
                A description for this Plugin
          enabled:
            type: boolean
            description: >-
                Indicates whether the plug-in is enabled for use.
          invokeForInternalOperations:
            type: boolean
            description: >-
                Indicates whether the plug-in should be invoked for internal operations.
        required:
        - schemas
        - pluginType
        - enabled
        - id
    Enumlast-mod-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:last-mod"
    add-pluggable-pass-through-authentication-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/pluggable-pass-through-authentication-plugin-shared'
    pluggable-pass-through-authentication-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pluggable-pass-through-authentication-plugin-shared'
    pluggable-pass-through-authentication-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpluggable-pass-through-authentication-pluginSchemaUrn'
        passThroughAuthenticationHandler:
          type: string
          description: >-
              The component used to manage authentication with the external authentication service.
        includedLocalEntryBaseDN:
          type: array
          items:
            type: string
          description: >-
              The base DNs for the local users whose authentication attempts may be passed through to the external authentication service.
        connectionCriteria:
          type: string
          description: >-
              A reference to connection criteria that will be used to indicate which bind requests should be passed through to the external authentication service.
        requestCriteria:
          type: string
          description: >-
              A reference to request criteria that will be used to indicate which bind requests should be passed through to the external authentication service.
        tryLocalBind:
          type: boolean
          description: >-
              Indicates whether to attempt the bind in the local server first and only send the request to the external authentication service if the local bind attempt fails, or to only attempt the bind in the external service.
        overrideLocalPassword:
          type: boolean
          description: >-
              Indicates whether to attempt the authentication in the external service if the local user entry includes a password. This property will be ignored if try-local-bind is false.
        updateLocalPassword:
          type: boolean
          description: >-
              Indicates whether to overwrite the user's local password if the local bind fails but the authentication attempt succeeds when attempted in the external service. This property may only be set to true if try-local-bind is also true.
        updateLocalPasswordDN:
          type: string
          description: >-
              The DN of the authorization identity that will be used when updating the user's local password if update-local-password is true. This is primarily intended for use if the Data Sync Server will be used to synchronize passwords between the local server and the external service, and in that case, the DN used here should also be added to the ignore-changes-by-dn property in the appropriate Sync Source object in the Data Sync Server configuration.
        allowLaxPassThroughAuthenticationPasswords:
          type: boolean
          description: >-
              Indicates whether to overwrite the user's local password even if the password used to authenticate to the external service would have failed validation if the user attempted to set it directly.
        ignoredPasswordPolicyStateErrorCondition:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-ignoredPasswordPolicyStateErrorConditionProp'
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - passThroughAuthenticationHandler
      - enabled
    Enumpluggable-pass-through-authentication-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:pluggable-pass-through-authentication"
    add-referential-integrity-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/referential-integrity-plugin-shared'
    referential-integrity-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/referential-integrity-plugin-shared'
      required:
      - pluginType
    referential-integrity-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreferential-integrity-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        attributeType:
          type: array
          items:
            type: string
          description: >-
              Specifies the attribute types for which referential integrity is to be maintained.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DN that limits the scope within which referential integrity is maintained.
        logFile:
          type: string
          description: >-
              Specifies the log file location where the update records are written when the plug-in is in background-mode processing.
        updateInterval:
          type: string
          description: >-
              Specifies the interval in seconds when referential integrity updates are made.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - attributeType
      - enabled
    Enumreferential-integrity-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:referential-integrity"
    add-unique-attribute-plugin-request:
      allOf:
      - type: object
        properties:
          pluginName:
            description: Name of the new Plugin
            type: string
        required:
        - pluginName
      - $ref: '#/components/schemas/unique-attribute-plugin-shared'
    unique-attribute-plugin-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Plugin
            type: string
        required:
        - id
      - $ref: '#/components/schemas/unique-attribute-plugin-shared'
      required:
      - pluginType
    unique-attribute-plugin-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumunique-attribute-pluginSchemaUrn'
        pluginType:
          type: array
          items:
            $ref: '#/components/schemas/Enumplugin-pluginTypeProp'
        type:
          type: array
          items:
            type: string
          description: >-
              Specifies the type of attributes to check for value uniqueness.
        multipleAttributeBehavior:
          $ref: '#/components/schemas/Enumplugin-multipleAttributeBehaviorProp'
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN within which the attribute must be unique.
        preventConflictsWithSoftDeletedEntries:
          type: boolean
          description: >-
              Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.
        filter:
          type: string
          description: >-
              Specifies the search filter to apply to determine if attribute uniqueness is enforced for the matching entries.
        description:
          type: string
          description: >-
              A description for this Plugin
        enabled:
          type: boolean
          description: >-
              Indicates whether the plug-in is enabled for use.
        invokeForInternalOperations:
          type: boolean
          description: >-
              Indicates whether the plug-in should be invoked for internal operations.
      required:
      - schemas
      - type
      - enabled
    Enumunique-attribute-pluginSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:plugin:unique-attribute"
    add-custom-logged-stats-request:
      allOf:
      - type: object
        properties:
          statsName:
            description: Name of the new Custom Logged Stats
            type: string
        required:
        - statsName
      - $ref: '#/components/schemas/custom-logged-stats-shared'
    custom-logged-stats-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Custom Logged Stats
            type: string
        required:
        - id
      - $ref: '#/components/schemas/custom-logged-stats-shared'
      required:
      - enabled
    custom-logged-stats-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcustom-logged-statsSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Custom Logged Stats
        enabled:
          type: boolean
          description: >-
              Indicates whether the Custom Logged Stats object is enabled.
        monitorObjectclass:
          type: string
          description: >-
              The objectclass name of the monitor entries to examine for generating these statistics.
        includeFilter:
          type: string
          description: >-
              An optional LDAP filter that can be used restrict which monitor entries are used to produce the output.
        attributeToLog:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes on the monitor entries that should be included in the output.
        columnName:
          type: array
          items:
            type: string
          description: >-
              Optionally, specifies an explicit name for each column header instead of having these names automatically generated from the monitored attribute name.
        statisticType:
          type: array
          items:
            $ref: '#/components/schemas/Enumcustom-logged-stats-statisticTypeProp'
        headerPrefix:
          type: string
          description: >-
              An optional prefix that is included in the header before the column name.
        headerPrefixAttribute:
          type: string
          description: >-
              An optional attribute from the monitor entry that is included as a prefix before the column name in the column header.
        regexPattern:
          type: string
          description: >-
              An optional regular expression pattern, that when used in conjunction with regex-replacement, can alter the value of the attribute being monitored.
        regexReplacement:
          type: string
          description: >-
              An optional regular expression replacement value, that when used in conjunction with regex-pattern, can alter the value of the attribute being monitored.
        divideValueBy:
          type: string
          description: >-
              An optional floating point value that can be used to scale the resulting value.
        divideValueByAttribute:
          type: string
          description: >-
              An optional property that can scale the resulting value by another attribute in the monitored entry.
        decimalFormat:
          type: string
          description: >-
              This provides a way to format the monitored attribute value in the output to control the precision for instance.
        nonZeroImpliesNotIdle:
          type: boolean
          description: >-
              If this property is set to true, then the value of any of the monitored attributes here can contribute to whether an interval is considered "idle" by the Periodic Stats Logger.
      required:
      - monitorObjectclass
      - attributeToLog
      - statisticType
    Enumcustom-logged-statsSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:custom-logged-stats"
    Enumplugin-ldapInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      description: >-
          Specifies the level of detail to include about the LDAP connection handlers.
    Enumplugin-histogramOpTypeProp:
      type: string
      enum:
      - "all"
      - "add"
      - "bind"
      - "compare"
      - "delete"
      - "extended"
      - "modify"
      - "modify-dn"
      - "search"
      description: >-
          Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.
    Enumplugin-logFileFormatProp:
      type: string
      enum:
      - "csv"
      - "json"
      description: >-
          Specifies the format to use when logging server statistics.
    Enumplugin-multiValuedAttributeBehaviorProp:
      type: string
      enum:
      - "use-first-value"
      - "reject-entries-with-any-multivalued-source-attribute"
      - "use-all-values-if-possible-but-reject-if-not"
      - "use-all-values-if-possible-but-only-first-value-if-not"
      description: >-
          The behavior to exhibit for source attributes that have multiple values.
    Enumplugin-periodic-stats-logger-perApplicationLDAPStatsProp:
      type: string
      enum:
      - "aggregate-only"
      - "per-application-only"
      - "per-application-and-aggregate"
      description: >-
          Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
    Enumplugin-updatedEntryNoLongerMatchesCriteriaBehaviorProp:
      type: string
      enum:
      - "preserve-all-values"
      - "preserve-non-composed-values"
      - "remove-all-values-but-preserve-all-if-required"
      - "remove-all-values-but-preserve-non-composed-if-required"
      description: >-
          The behavior to exhibit for modify or modify DN operations that update an entry that previously satisfied the base DN and filter criteria, but now no longer satisfies that criteria.
    Enumplugin-profileActionProp:
      type: string
      enum:
      - "none"
      - "start"
      - "stop"
      - "cancel"
      description: >-
          Specifies the action that should be taken by the profiler.
    Enumplugin-targetAttributeExistsDuringInitialPopulationBehaviorProp:
      type: string
      enum:
      - "preserve-existing-values"
      - "overwrite-existing-values"
      - "merge-existing-and-composed-values"
      - "reject-existing-values-in-add-but-preserve-in-ldif-import"
      - "reject-existing-values-in-add-but-overwrite-in-ldif-import"
      - "reject-existing-values-in-add-but-merge-in-ldif-import"
      description: >-
          The behavior to exhibit if the target attribute exists when initially populating the entry with composed values (whether during an LDIF import, an add operation, or an invocation of the populate composed attribute values task).
    Enumplugin-statusSummaryInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "verbose"
      description: >-
          Specifies the level of detail to include about the status summary monitor entry.
    Enumplugin-ignoredPasswordPolicyStateErrorConditionProp:
      type: string
      enum:
      - "temporarily-locked-due-to-failures"
      - "permanently-locked-due-to-failures"
      - "locked-due-to-idle-interval"
      - "locked-due-to-maximum-reset-age"
      - "locked-due-to-validation-failure"
      - "password-is-expired"
      description: >-
          A set of password policy state error conditions that should not be enforced when authentication succeeds when attempted in the PingOne service. This option can only be used if try-local-bind is true.
    Enumplugin-multipleAttributeBehaviorProp:
      type: string
      enum:
      - "unique-within-each-attribute"
      - "unique-across-all-attributes-including-in-same-entry"
      - "unique-across-all-attributes-except-in-same-entry"
      description: >-
          The behavior to exhibit if multiple attribute types are specified.
    Enumplugin-hostInfoProp:
      type: string
      enum:
      - "cpu"
      - "disk"
      - "network"
      description: >-
          Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.
    Enumplugin-updatedEntryNewlyMatchesCriteriaBehaviorProp:
      type: string
      enum:
      - "preserve-existing-values-without-composing-new-values"
      - "preserve-existing-values-or-compose-new-values"
      - "preserve-existing-values-and-compose-new-values"
      - "compose-new-values-without-preserving-existing-values"
      description: >-
          The behavior to exhibit for modify or modify DN operations that update an entry that previously did not satisfy either the base DN or filter criteria, but now do satisfy that criteria.
    Enumcustom-logged-stats-statisticTypeProp:
      type: string
      enum:
      - "raw"
      - "counter"
      - "average"
      - "minimum"
      - "maximum"
      description: >-
          Specifies the type of statistic to include in the output for each monitored attribute.
    Enumplugin-invokeGCDayOfWeekProp:
      type: string
      enum:
      - "sunday"
      - "monday"
      - "tuesday"
      - "wednesday"
      - "thursday"
      - "friday"
      - "saturday"
      description: >-
          Specifies the days of the week which the Periodic GC Plugin should run. If no values are provided, then the plugin will run every day at the specified time.
    Enumplugin-ldapChangelogInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      - "verbose"
      description: >-
          Specifies the level of detail to include for the LDAP changelog.
    Enumplugin-multipleValuePatternBehaviorProp:
      type: string
      enum:
      - "use-first-non-rejected-value-pattern-with-non-empty-values-but-may-reject"
      - "use-first-non-rejected-value-pattern-with-non-empty-values-and-never-reject"
      - "use-first-rejection-or-first-value-pattern-with-non-empty-values"
      - "use-all-non-rejected-value-patterns-with-non-empty-values-but-may-reject"
      - "use-all-non-rejected-value-patterns-with-non-empty-values-and-never-reject"
      - "use-first-rejection-or-all-value-patterns-with-non-empty-values"
      description: >-
          The behavior to exhibit if the plugin is configured with multiple value patterns.
    Enumplugin-scopeProp:
      type: string
      enum:
      - "base"
      - "one"
      - "sub"
      - "subordinate-subtree"
      description: >-
          The scope to use for the search.
    Enumplugin-includedLDAPStatProp:
      type: string
      enum:
      - "active-operations"
      - "num-connections"
      - "op-count-and-latency"
      - "work-queue"
      - "ldap-protocol"
      description: >-
          Specifies the types of statistics related to LDAP connections and operation processing that should be included in the output.
    Enumplugin-includedResourceStatProp:
      type: string
      enum:
      - "memory-utilization"
      description: >-
          Specifies whether statistics related to resource utilization such as JVM memory.
    Enumplugin-purgeBehaviorProp:
      type: string
      enum:
      - "delete-entries"
      - "subtree-delete-entries"
      - "delete-json-attribute-values"
      description: >-
          Specifies whether to delete expired entries or attribute values. By default entries are deleted.
    Enumplugin-serverAccessModeProp:
      type: string
      enum:
      - "round-robin"
      - "failover-on-unavailable"
      - "failover-on-any-failure"
      description: >-
          Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
    Enumplugin-operationTypeProp:
      type: string
      enum:
      - "add"
      - "bind"
      - "compare"
      - "modify"
      - "modify-dn"
      - "search"
      description: >-
          Specifies the types of operations that should result in access time updates.
    Enumplugin-serverInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      description: >-
          Specifies whether statistics related to resource utilization such as JVM memory and CPU/Network/Disk utilization.
    Enumplugin-histogramFormatProp:
      type: string
      enum:
      - "count"
      - "aggregate-percentage"
      description: >-
          The format of the data in the processing time histogram.
    Enumplugin-localDBBackendInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      - "verbose"
      description: >-
          Specifies the level of detail to include about the Local DB Backends.
    Enumplugin-gaugeInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      description: >-
          Specifies the level of detail to include for Gauges.
    Enumplugin-loggingErrorBehaviorProp:
      type: string
      enum:
      - "standard-error"
      - "lockdown-mode"
      description: >-
          Specifies the behavior that the server should exhibit if an error occurs during logging processing.
    Enumplugin-entryCacheInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      description: >-
          Specifies the level of detail to include for each entry cache.
    Enumplugin-datetimeFormatProp:
      type: string
      enum:
      - "generalized-time"
      - "java-system-time-millis"
      - "custom"
      description: >-
          Specifies the format of the datetime stored within the entry that determines when data should be purged.
    Enumplugin-attributeTypeProp:
      type: string
      enum:
      - "ds-auth-totp-shared-secret"
      - "ds-auth-totp-last-password-used"
      - "ds-auth-delivered-otp"
      - "ds-auth-password-reset-token"
      - "ds-auth-single-use-token"
      description: >-
          The attribute types whose values should be encrypted.
    Enumplugin-replicationInfoProp:
      type: string
      enum:
      - "none"
      - "basic"
      - "extended"
      - "verbose"
      description: >-
          Specifies the level of detail to include about replication.
    Enumplugin-pluginTypeProp:
      type: string
      enum:
      - "startup"
      - "shutdown"
      - "postconnect"
      - "postdisconnect"
      - "ldifimport"
      - "ldifexport"
      - "preparseabandon"
      - "preparseadd"
      - "preparsebind"
      - "preparsecompare"
      - "preparsedelete"
      - "preparseextended"
      - "preparsemodify"
      - "preparsemodifydn"
      - "preparsesearch"
      - "preparseunbind"
      - "preoperationadd"
      - "preoperationbind"
      - "preoperationcompare"
      - "preoperationdelete"
      - "preoperationextended"
      - "preoperationmodify"
      - "preoperationmodifydn"
      - "preoperationsearch"
      - "postoperationabandon"
      - "postoperationadd"
      - "postoperationbind"
      - "postoperationcompare"
      - "postoperationdelete"
      - "postoperationextended"
      - "postoperationmodify"
      - "postoperationmodifydn"
      - "postoperationsearch"
      - "postoperationunbind"
      - "preresponseadd"
      - "preresponsebind"
      - "preresponsecompare"
      - "preresponsedelete"
      - "preresponseextended"
      - "preresponsemodify"
      - "preresponsemodifydn"
      - "preresponsesearch"
      - "postresponseadd"
      - "postresponsebind"
      - "postresponsecompare"
      - "postresponsedelete"
      - "postresponseextended"
      - "postresponsemodify"
      - "postresponsemodifydn"
      - "postresponsesearch"
      - "postsynchronizationadd"
      - "postsynchronizationdelete"
      - "postsynchronizationmodify"
      - "postsynchronizationmodifydn"
      - "searchresultentry"
      - "searchresultreference"
      - "subordinatemodifydn"
      - "intermediateresponse"
      description: >-
          Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
    Enumplugin-sourceAttributeRemovalBehaviorProp:
      type: string
      enum:
      - "preserve-non-composed-values"
      - "preserve-all-values"
      - "remove-all-values-but-preserve-all-if-required"
      - "remove-all-values-but-preserve-non-composed-if-required"
      description: >-
          The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.
    Enumplugin-updateTargetAttributeBehaviorProp:
      type: string
      enum:
      - "always-allow"
      - "allow-only-for-non-composed-values"
      - "never-allow"
      description: >-
          The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.
    Enumplugin-stats-collector-perApplicationLDAPStatsProp:
      type: string
      enum:
      - "aggregate-only"
      - "per-application-only"
      description: >-
          Controls whether per application LDAP statistics are included in the output for selected LDAP operation statistics.
    Enumplugin-updateSourceAttributeBehaviorProp:
      type: string
      enum:
      - "replace-composed-values"
      - "replace-all-values"
      - "preserve-existing-values"
      description: >-
          The behavior to exhibit for modify and modify DN operations that update one or more of the source attributes used in any of the value patterns.
    add-sensitive-attribute-request:
      allOf:
      - type: object
        properties:
          attributeName:
            description: Name of the new Sensitive Attribute
            type: string
        required:
        - attributeName
      - $ref: '#/components/schemas/sensitive-attribute-shared'
    sensitive-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Sensitive Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/sensitive-attribute-shared'
    sensitive-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsensitive-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Sensitive Attribute
        attributeType:
          type: array
          items:
            type: string
          description: >-
              The name(s) or OID(s) of the attribute types for attributes whose values may be considered sensitive.
        includeDefaultSensitiveOperationalAttributes:
          type: boolean
          description: >-
              Indicates whether to automatically include any server-generated operational attributes that may contain sensitive data.
        allowInReturnedEntries:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInReturnedEntriesProp'
        allowInFilter:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInFilterProp'
        allowInAdd:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInAddProp'
        allowInCompare:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInCompareProp'
        allowInModify:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInModifyProp'
      required:
      - attributeType
    Enumsensitive-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sensitive-attribute"
    Enumsensitive-attribute-allowInAddProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to include sensitive attributes in add requests.
    Enumsensitive-attribute-allowInReturnedEntriesProp:
      type: string
      enum:
      - "allow"
      - "suppress"
      - "secure-only"
      description: >-
          Indicates whether sensitive attributes should be included in entries returned to the client. This includes not only search result entries, but also other forms including in the values of controls like the pre-read, post-read, get authorization entry, and LDAP join response controls.
    Enumsensitive-attribute-allowInFilterProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to include sensitive attributes in search filters. This also includes filters that may be used in other forms, including assertion and LDAP join request controls.
    Enumsensitive-attribute-allowInModifyProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to target sensitive attributes with modify requests.
    Enumsensitive-attribute-allowInCompareProp:
      type: string
      enum:
      - "allow"
      - "reject"
      - "secure-only"
      description: >-
          Indicates whether clients will be allowed to target sensitive attributes with compare requests.
    add-ping-federate-access-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Access Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/ping-federate-access-token-validator-shared'
    ping-federate-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Access Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-federate-access-token-validator-shared'
      required:
      - evaluationOrderIndex
    ping-federate-access-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-federate-access-token-validatorSchemaUrn'
        clientID:
          type: string
          description: >-
              The client identifier to use when authenticating to the PingFederate authorization server.
        clientSecret:
          type: string
          format: password
          description: >-
              The client secret to use when authenticating to the PingFederate authorization server.
        clientSecretPassphraseProvider:
          type: string
          description: >-
              The passphrase provider for obtaining the client secret to use when authenticating to the PingFederate authorization server.
        includeAudParameter:
          type: boolean
          description: >-
              Whether to include the incoming request URL as the "aud" parameter when calling the PingFederate introspection endpoint. This property is ignored if the access-token-manager-id property is set.
        accessTokenManagerID:
          type: string
          description: >-
              The Access Token Manager instance ID to specify when calling the PingFederate introspection endpoint. If this property is set the include-aud-parameter property is ignored.
        endpointCacheRefresh:
          type: string
          description: >-
              How often the Access Token Validator should refresh its stored value of the PingFederate server's token introspection endpoint.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple Ping Federate Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all Ping Federate Access Token Validators defined within Directory Server but not necessarily contiguous. Ping Federate Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
        authorizationServer:
          type: string
          description: >-
              Specifies the external server that will be used to aid in validating access tokens. In most cases this will be the Authorization Server that minted the token.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
        description:
          type: string
          description: >-
              A description for this Access Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this Access Token Validator is enabled for use in Directory Server.
      required:
      - schemas
      - clientID
      - enabled
    Enumping-federate-access-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:ping-federate"
    add-jwt-access-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Access Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/jwt-access-token-validator-shared'
    jwt-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Access Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jwt-access-token-validator-shared'
      required:
      - allowedSigningAlgorithm
      - allowedKeyEncryptionAlgorithm
      - allowedContentEncryptionAlgorithm
      - evaluationOrderIndex
    jwt-access-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjwt-access-token-validatorSchemaUrn'
        allowedSigningAlgorithm:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedSigningAlgorithmProp'
        signingCertificate:
          type: array
          items:
            type: string
          description: >-
              Specifies the locally stored certificates that may be used to validate the signature of an incoming JWT access token. If this property is specified, the JWT Access Token Validator will not use a JWKS endpoint to retrieve public keys.
        jwksEndpointPath:
          type: string
          description: >-
              The relative path to JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming JWT access token. This path is relative to the base_url property defined for the validator's external authorization server. If jwks-endpoint-path is specified, the JWT Access Token Validator will not consult locally stored certificates for validating token signatures.
        encryptionKeyPair:
          type: string
          description: >-
              The public-private key pair that is used to encrypt the JWT payload. If specified, the JWT Access Token Validator will use the private key to decrypt the JWT payload, and the public key must be exported to the Authorization Server that is issuing access tokens.
        allowedKeyEncryptionAlgorithm:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedKeyEncryptionAlgorithmProp'
        allowedContentEncryptionAlgorithm:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp'
        clockSkewGracePeriod:
          type: string
          description: >-
              Specifies the amount of clock skew that is tolerated by the JWT Access Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.
        clientIDClaimName:
          type: string
          description: >-
              The name of the token claim that contains the OAuth2 client Id.
        scopeClaimName:
          type: string
          description: >-
              The name of the token claim that contains the scopes granted by the token.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple JWT Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all JWT Access Token Validators defined within Directory Server but not necessarily contiguous. JWT Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
        authorizationServer:
          type: string
          description: >-
              Specifies the external server that will be used to aid in validating access tokens. In most cases this will be the Authorization Server that minted the token.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
        description:
          type: string
          description: >-
              A description for this Access Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this Access Token Validator is enabled for use in Directory Server.
      required:
      - schemas
      - enabled
    Enumjwt-access-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:jwt"
    add-mock-access-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Access Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/mock-access-token-validator-shared'
    mock-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Access Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/mock-access-token-validator-shared'
      required:
      - evaluationOrderIndex
    mock-access-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummock-access-token-validatorSchemaUrn'
        clientIDClaimName:
          type: string
          description: >-
              The name of the token claim that contains the OAuth2 client ID.
        scopeClaimName:
          type: string
          description: >-
              The name of the token claim that contains the scopes granted by the token.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple Mock Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all Mock Access Token Validators defined within Directory Server but not necessarily contiguous. Mock Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
        description:
          type: string
          description: >-
              A description for this Access Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this Access Token Validator is enabled for use in Directory Server.
      required:
      - schemas
      - enabled
    Enummock-access-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:mock"
    add-third-party-access-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Access Token Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/third-party-access-token-validator-shared'
    third-party-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Access Token Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-access-token-validator-shared'
    third-party-access-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-access-token-validatorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Access Token Validator.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Access Token Validator. Each configuration property should be given in the form 'name=value'.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
        description:
          type: string
          description: >-
              A description for this Access Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this Access Token Validator is enabled for use in Directory Server.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all Access Token Validators defined within Directory Server but not necessarily contiguous. Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
      required:
      - schemas
      - extensionClass
      - enabled
      - evaluationOrderIndex
    Enumthird-party-access-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:access-token-validator:third-party"
    Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp:
      type: string
      enum:
      - "A128CBC_HS256"
      - "A192CBC_HS384"
      - "A256CBC_HS512"
      description: >-
          Specifies an allow list of JWT content encryption algorithms that will be accepted by the JWT Access Token Validator.
    Enumaccess-token-validator-allowedKeyEncryptionAlgorithmProp:
      type: string
      enum:
      - "RSA_OAEP"
      - "ECDH_ES"
      - "ECDH_ES_A128KW"
      - "ECDH_ES_A192KW"
      - "ECDH_ES_A256KW"
      description: >-
          Specifies an allow list of JWT key encryption algorithms that will be accepted by the JWT Access Token Validator. This setting is only used if encryption-key-pair is set.
    Enumaccess-token-validator-allowedSigningAlgorithmProp:
      type: string
      enum:
      - "RS256"
      - "RS384"
      - "RS512"
      - "ES256"
      - "ES384"
      - "ES512"
      description: >-
          Specifies an allow list of JWT signing algorithms that will be accepted by the JWT Access Token Validator.
    root-dse-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumroot-dse-backendSchemaUrn'
          subordinateBaseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the set of base DNs used for singleLevel, wholeSubtree, and subordinateSubtree searches based at the root DSE.
          additionalSupportedControlOID:
            type: array
            items:
              type: string
            description: >-
                Specifies an additional OID that should appear in the list of supportedControl values in the server's root DSE.
          showAllAttributes:
            type: boolean
            description: >-
                Indicates whether all attributes in the root DSE are to be treated like user attributes (and therefore returned to clients by default) regardless of the Directory Server schema configuration.
          useLegacyVendorVersion:
            type: boolean
            description: >-
                Indicates whether the server's root DSE should reflect current or legacy values for the vendorName and vendorVersion attributes.
        required:
        - showAllAttributes
    Enumroot-dse-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:root-dse-backend"
    add-access-log-field-mapping-request:
      allOf:
      - type: object
        properties:
          mappingName:
            description: Name of the new Log Field Mapping
            type: string
        required:
        - mappingName
      - $ref: '#/components/schemas/access-log-field-mapping-shared'
    access-log-field-mapping-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Field Mapping
            type: string
        required:
        - id
      - $ref: '#/components/schemas/access-log-field-mapping-shared'
    access-log-field-mapping-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccess-log-field-mappingSchemaUrn'
        logFieldTimestamp:
          type: string
          description: >-
              The time that the operation was processed.
        logFieldConnectionID:
          type: string
          description: >-
              The connection ID assigned to the client connection.
        logFieldStartupid:
          type: string
          description: >-
              The startup ID for the Directory Server. A different value will be generated each time the server is started, and it may be used to distinguish between operations with the same connection ID and operation ID across server restarts.
        logFieldProductName:
          type: string
          description: >-
              The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.
        logFieldInstanceName:
          type: string
          description: >-
              A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.
        logFieldOperationID:
          type: string
          description: >-
              The operation ID for the operation processed by the server.
        logFieldMessageType:
          type: string
          description: >-
              The type of log message. Message types may include "CONNECT", "DISCONNECT", "FORWARD", "RESULT", "ENTRY", or "REFERENCE".
        logFieldOperationType:
          type: string
          description: >-
              The type of operation that was processed.
        logFieldMessageID:
          type: string
          description: >-
              The message ID included in the client request.
        logFieldResultCode:
          type: string
          description: >-
              The numeric result code for the operation.
        logFieldMessage:
          type: string
          description: >-
              The diagnostic message for the operation.
        logFieldOrigin:
          type: string
          description: >-
              The origin for the operation. Values may include "replication" (if the operation was received via replication), "internal" (if it was an internal operation processed by a server component), or "external" (if it was a request from a client).
        logFieldRequesterDN:
          type: string
          description: >-
              The DN of the user that requested the operation.
        logFieldDisconnectReason:
          type: string
          description: >-
              The reason that the client connection was closed.
        logFieldDeleteOldRDN:
          type: string
          description: >-
              Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
        logFieldAuthenticatedUserDN:
          type: string
          description: >-
              The DN of the user that authenticated to the server.
        logFieldProcessingTime:
          type: string
          description: >-
              The length of time (in milliseconds with microsecond accuracy) required to process the operation.
        logFieldRequestedAttributes:
          type: string
          description: >-
              The set of requested attributes for the search operation.
        logFieldSASLMechanismName:
          type: string
          description: >-
              The name of the SASL mechanism used to authenticate.
        logFieldNewRDN:
          type: string
          description: >-
              The new RDN to use for a modify DN operation.
        logFieldBaseDN:
          type: string
          description: >-
              The base DN for a search operation.
        logFieldBindDN:
          type: string
          description: >-
              The bind DN for a bind operation.
        logFieldMatchedDN:
          type: string
          description: >-
              The DN of the superior entry closest to the DN specified by the client.
        logFieldRequesterIPAddress:
          type: string
          description: >-
              The IP address of the client that requested the operation.
        logFieldAuthenticationType:
          type: string
          description: >-
              The type of authentication requested by the client.
        logFieldNewSuperiorDN:
          type: string
          description: >-
              The new superior DN from a modify DN operation.
        logFieldFilter:
          type: string
          description: >-
              The filter from a search operation.
        logFieldAlternateAuthorizationDN:
          type: string
          description: >-
              The DN of the alternate authorization identity used when processing the operation.
        logFieldEntryDN:
          type: string
          description: >-
              The DN of the entry targeted by the operation.
        logFieldEntriesReturned:
          type: string
          description: >-
              The number of search result entries returned to the client.
        logFieldAuthenticationFailureID:
          type: string
          description: >-
              The numeric identifier for the authentication failure reason.
        logFieldRequestOID:
          type: string
          description: >-
              The OID of an extended request.
        logFieldResponseOID:
          type: string
          description: >-
              The OID of an extended response.
        logFieldTargetProtocol:
          type: string
          description: >-
              The protocol used when forwarding the request to a backend server.
        logFieldTargetPort:
          type: string
          description: >-
              The network port of the Directory Server to which the client connection has been established, or of the backend server to which the request has been forwarded.
        logFieldTargetAddress:
          type: string
          description: >-
              The network address of the Directory Server to which the client connection has been established.
        logFieldTargetAttribute:
          type: string
          description: >-
              The name of the attribute targeted by a compare operation.
        logFieldTargetHost:
          type: string
          description: >-
              The address of the server to which the request has been forwarded.
        logFieldProtocolVersion:
          type: string
          description: >-
              The protocol version used by the client when communicating with the Directory Server.
        logFieldProtocolName:
          type: string
          description: >-
              The name of the protocol the client is using to communicate with the Directory Server.
        logFieldAuthenticationFailureReason:
          type: string
          description: >-
              A message explaining the reason that the authentication attempt failed.
        logFieldAdditionalInformation:
          type: string
          description: >-
              Additional information about the operation that was processed which was not returned to the client.
        logFieldUnindexed:
          type: string
          description: >-
              Indicates whether the requested search operation was unindexed.
        logFieldScope:
          type: string
          description: >-
              The scope for the search operation.
        logFieldReferralUrls:
          type: string
          description: >-
              The referral URLs returned to the client.
        logFieldSourceAddress:
          type: string
          description: >-
              The address of the client from which the connection was established.
        logFieldMessageIDToAbandon:
          type: string
          description: >-
              The message ID of the operation to be abandoned.
        logFieldResponseControls:
          type: string
          description: >-
              The OIDs of the response controls returned to the client.
        logFieldRequestControls:
          type: string
          description: >-
              The OIDs of the request controls returned to the client.
        logFieldIntermediateClientResult:
          type: string
          description: >-
              The contents of the intermediate client response control returned to the client.
        logFieldIntermediateClientRequest:
          type: string
          description: >-
              The contents of the intermediate client request control provided by the client.
        logFieldReplicationChangeID:
          type: string
          description: >-
              The replication change ID.
        description:
          type: string
          description: >-
              A description for this Log Field Mapping
      required:
      - schemas
    Enumaccess-log-field-mappingSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-mapping:access"
    add-error-log-field-mapping-request:
      allOf:
      - type: object
        properties:
          mappingName:
            description: Name of the new Log Field Mapping
            type: string
        required:
        - mappingName
      - $ref: '#/components/schemas/error-log-field-mapping-shared'
    error-log-field-mapping-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Field Mapping
            type: string
        required:
        - id
      - $ref: '#/components/schemas/error-log-field-mapping-shared'
    error-log-field-mapping-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumerror-log-field-mappingSchemaUrn'
        logFieldTimestamp:
          type: string
          description: >-
              The time that the log message was generated.
        logFieldProductName:
          type: string
          description: >-
              The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.
        logFieldInstanceName:
          type: string
          description: >-
              A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.
        logFieldStartupid:
          type: string
          description: >-
              The startup ID for the Directory Server. A different value will be generated each time the server is started.
        logFieldCategory:
          type: string
          description: >-
              The category for the log message.
        logFieldSeverity:
          type: string
          description: >-
              The severity for the log message.
        logFieldMessageID:
          type: string
          description: >-
              The numeric value which uniquely identifies the type of message.
        logFieldMessage:
          type: string
          description: >-
              The text of the log message.
        description:
          type: string
          description: >-
              A description for this Log Field Mapping
      required:
      - schemas
    Enumerror-log-field-mappingSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-mapping:error"
    add-random-password-generator-request:
      allOf:
      - type: object
        properties:
          generatorName:
            description: Name of the new Password Generator
            type: string
        required:
        - generatorName
      - $ref: '#/components/schemas/random-password-generator-shared'
    random-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Generator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/random-password-generator-shared'
    random-password-generator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumrandom-password-generatorSchemaUrn'
        passwordCharacterSet:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more named character sets.
        passwordFormat:
          type: string
          description: >-
              Specifies the format to use for the generated password.
        description:
          type: string
          description: >-
              A description for this Password Generator
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Generator is enabled for use.
      required:
      - schemas
      - passwordCharacterSet
      - passwordFormat
      - enabled
    Enumrandom-password-generatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-generator:random"
    add-groovy-scripted-password-generator-request:
      allOf:
      - type: object
        properties:
          generatorName:
            description: Name of the new Password Generator
            type: string
        required:
        - generatorName
      - $ref: '#/components/schemas/groovy-scripted-password-generator-shared'
    groovy-scripted-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Generator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-password-generator-shared'
    groovy-scripted-password-generator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-password-generatorSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Password Generator.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Password Generator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Generator
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Generator is enabled for use.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-password-generatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-generator:groovy-scripted"
    add-passphrase-password-generator-request:
      allOf:
      - type: object
        properties:
          generatorName:
            description: Name of the new Password Generator
            type: string
        required:
        - generatorName
      - $ref: '#/components/schemas/passphrase-password-generator-shared'
    passphrase-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Generator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/passphrase-password-generator-shared'
    passphrase-password-generator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpassphrase-password-generatorSchemaUrn'
        dictionaryFile:
          type: string
          description: >-
              The path to the dictionary file that will be used to obtain the words for use in generated passwords.
        minimumPasswordCharacters:
          type: integer
          description: >-
              The minimum number of characters that generated passwords will be required to have.
        minimumPasswordWords:
          type: integer
          description: >-
              The minimum number of words that must be concatenated in the course of generating a password.
        capitalizeWords:
          type: boolean
          description: >-
              Indicates whether to capitalize each word used in the generated password.
        description:
          type: string
          description: >-
              A description for this Password Generator
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Generator is enabled for use.
      required:
      - schemas
      - dictionaryFile
      - enabled
    Enumpassphrase-password-generatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-generator:passphrase"
    add-third-party-password-generator-request:
      allOf:
      - type: object
        properties:
          generatorName:
            description: Name of the new Password Generator
            type: string
        required:
        - generatorName
      - $ref: '#/components/schemas/third-party-password-generator-shared'
    third-party-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Generator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-password-generator-shared'
    third-party-password-generator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-password-generatorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Password Generator.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Password Generator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Generator
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Generator is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-password-generatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-generator:third-party"
    add-twilio-otp-delivery-mechanism-request:
      allOf:
      - type: object
        properties:
          mechanismName:
            description: Name of the new OTP Delivery Mechanism
            type: string
        required:
        - mechanismName
      - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-shared'
    twilio-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the OTP Delivery Mechanism
            type: string
        required:
        - id
      - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-shared'
      required:
      - phoneNumberAttributeType
    twilio-otp-delivery-mechanism-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtwilio-otp-delivery-mechanismSchemaUrn'
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Twilio service.
        twilioAccountSID:
          type: string
          description: >-
              The unique identifier assigned to the Twilio account that will be used.
        twilioAuthToken:
          type: string
          format: password
          description: >-
              The auth token for the Twilio account that will be used.
        twilioAuthTokenPassphraseProvider:
          type: string
          description: >-
              The passphrase provider that may be used to obtain the auth token for the Twilio account that will be used.
        phoneNumberAttributeType:
          type: string
          description: >-
              The name or OID of the attribute in the user's entry that holds the phone number to which the message should be sent.
        phoneNumberJSONField:
          type: string
          description: >-
              The name of the JSON field whose value is the phone number to which the message should be sent. The phone number must be contained in a top-level field whose value is a single string.
        phoneNumberJSONObjectFilter:
          type: string
          description: >-
              A JSON object filter that may be used to identify which phone number value to use when sending the message.
        senderPhoneNumber:
          type: array
          items:
            type: string
          description: >-
              The outgoing phone number to use for the messages. Values must be phone numbers you have obtained for use with your Twilio account.
        messageTextBeforeOTP:
          type: string
          description: >-
              Any text that should appear in the message before the one-time password value.
        messageTextAfterOTP:
          type: string
          description: >-
              Any text that should appear in the message after the one-time password value.
        description:
          type: string
          description: >-
              A description for this OTP Delivery Mechanism
        enabled:
          type: boolean
          description: >-
              Indicates whether this OTP Delivery Mechanism is enabled for use in the server.
      required:
      - schemas
      - twilioAccountSID
      - senderPhoneNumber
      - enabled
    Enumtwilio-otp-delivery-mechanismSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:twilio"
    add-email-otp-delivery-mechanism-request:
      allOf:
      - type: object
        properties:
          mechanismName:
            description: Name of the new OTP Delivery Mechanism
            type: string
        required:
        - mechanismName
      - $ref: '#/components/schemas/email-otp-delivery-mechanism-shared'
    email-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the OTP Delivery Mechanism
            type: string
        required:
        - id
      - $ref: '#/components/schemas/email-otp-delivery-mechanism-shared'
      required:
      - emailAddressAttributeType
      - messageSubject
    email-otp-delivery-mechanism-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumemail-otp-delivery-mechanismSchemaUrn'
        emailAddressAttributeType:
          type: string
          description: >-
              The name or OID of the attribute that holds the email address to which the message should be sent.
        emailAddressJSONField:
          type: string
          description: >-
              The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
        emailAddressJSONObjectFilter:
          type: string
          description: >-
              A JSON object filter that may be used to identify which email address value to use when sending the message.
        senderAddress:
          type: string
          description: >-
              The e-mail address to use as the sender for the one-time password.
        messageSubject:
          type: string
          description: >-
              The subject to use for the e-mail message.
        messageTextBeforeOTP:
          type: string
          description: >-
              Any text that should appear in the message before the one-time password value.
        messageTextAfterOTP:
          type: string
          description: >-
              Any text that should appear in the message after the one-time password value.
        description:
          type: string
          description: >-
              A description for this OTP Delivery Mechanism
        enabled:
          type: boolean
          description: >-
              Indicates whether this OTP Delivery Mechanism is enabled for use in the server.
      required:
      - schemas
      - senderAddress
      - enabled
    Enumemail-otp-delivery-mechanismSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:email"
    add-third-party-otp-delivery-mechanism-request:
      allOf:
      - type: object
        properties:
          mechanismName:
            description: Name of the new OTP Delivery Mechanism
            type: string
        required:
        - mechanismName
      - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-shared'
    third-party-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the OTP Delivery Mechanism
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-shared'
    third-party-otp-delivery-mechanism-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-otp-delivery-mechanismSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party OTP Delivery Mechanism.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party OTP Delivery Mechanism. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this OTP Delivery Mechanism
        enabled:
          type: boolean
          description: >-
              Indicates whether this OTP Delivery Mechanism is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-otp-delivery-mechanismSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:third-party"
    add-text-access-log-field-behavior-request:
      allOf:
      - type: object
        properties:
          behaviorName:
            description: Name of the new Log Field Behavior
            type: string
        required:
        - behaviorName
      - $ref: '#/components/schemas/text-access-log-field-behavior-shared'
    text-access-log-field-behavior-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Field Behavior
            type: string
        required:
        - id
      - $ref: '#/components/schemas/text-access-log-field-behavior-shared'
    text-access-log-field-behavior-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtext-access-log-field-behaviorSchemaUrn'
        preserveField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-preserveFieldProp'
        preserveFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be preserved. This should generally only be used for fields that are not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
        omitField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-omitFieldProp'
        omitFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields that should be omitted from log messages. This should generally only be used for fields that are not available through the omit-field property (for example, custom log fields defined in Server SDK extensions).
        redactEntireValueField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-redactEntireValueFieldProp'
        redactEntireValueFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be completely redacted. This should generally only be used for fields that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
        redactValueComponentsField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-redactValueComponentsFieldProp'
        redactValueComponentsFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields for which to redact components within the value. This should generally only be used for fields that are not available through the redact-value-components-field property (for example, custom log fields defined in Server SDK extensions).
        tokenizeEntireValueField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-tokenizeEntireValueFieldProp'
        tokenizeEntireValueFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be completely tokenized. This should generally only be used for fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
        tokenizeValueComponentsField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-text-access-tokenizeValueComponentsFieldProp'
        tokenizeValueComponentsFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields for which to tokenize components within the value. This should generally only be used for fields that are not available through the tokenize-value-components-field property (for example, custom log fields defined in Server SDK extensions).
        description:
          type: string
          description: >-
              A description for this Log Field Behavior
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-behavior-defaultBehaviorProp'
      required:
      - schemas
    Enumtext-access-log-field-behaviorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-behavior:text-access"
    add-json-formatted-access-log-field-behavior-request:
      allOf:
      - type: object
        properties:
          behaviorName:
            description: Name of the new Log Field Behavior
            type: string
        required:
        - behaviorName
      - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-shared'
    json-formatted-access-log-field-behavior-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Field Behavior
            type: string
        required:
        - id
      - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-shared'
    json-formatted-access-log-field-behavior-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjson-formatted-access-log-field-behaviorSchemaUrn'
        preserveField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-preserveFieldProp'
        preserveFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be preserved. This should generally only be used for fields that are not available through the preserve-field property (for example, custom log fields defined in Server SDK extensions).
        omitField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-omitFieldProp'
        omitFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields that should be omitted from log messages. This should generally only be used for fields that are not available through the omit-field property (for example, custom log fields defined in Server SDK extensions).
        redactEntireValueField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-redactEntireValueFieldProp'
        redactEntireValueFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be completely redacted. This should generally only be used for fields that are not available through the redact-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
        redactValueComponentsField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-redactValueComponentsFieldProp'
        redactValueComponentsFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields for which to redact components within the value. This should generally only be used for fields that are not available through the redact-value-components-field property (for example, custom log fields defined in Server SDK extensions).
        tokenizeEntireValueField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-tokenizeEntireValueFieldProp'
        tokenizeEntireValueFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields whose values should be completely tokenized. This should generally only be used for fields that are not available through the tokenize-entire-value-field property (for example, custom log fields defined in Server SDK extensions).
        tokenizeValueComponentsField:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-json-formatted-access-tokenizeValueComponentsFieldProp'
        tokenizeValueComponentsFieldName:
          type: array
          items:
            type: string
          description: >-
              The names of any custom fields for which to tokenize components within the value. This should generally only be used for fields that are not available through the tokenize-value-components-field property (for example, custom log fields defined in Server SDK extensions).
        description:
          type: string
          description: >-
              A description for this Log Field Behavior
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-behavior-defaultBehaviorProp'
      required:
      - schemas
    Enumjson-formatted-access-log-field-behaviorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-behavior:json-formatted-access"
    Enumlog-field-behavior-text-access-preserveFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be logged with the intended value. The values for these fields will be preserved, although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the value), and values that are too long may be truncated.
    Enumlog-field-behavior-json-formatted-access-omitFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
    Enumlog-field-behavior-text-access-tokenizeValueComponentsFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values will include tokenized components.
    Enumlog-field-behavior-text-access-tokenizeEntireValueFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be completely tokenized in log messages. The field name will be included, but the value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
    Enumlog-field-behavior-json-formatted-access-tokenizeEntireValueFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be completely tokenized in log messages. The field name will be included, but the value will be replaced with a token that does not reveal the actual value, but that is generated from the value.
    Enumlog-field-behavior-json-formatted-access-redactValueComponentsFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values will include redacted components.
    Enumlog-field-behavior-defaultBehaviorProp:
      type: string
      enum:
      - "preserve"
      - "omit"
      - "redact-entire-value"
      - "redact-value-components"
      - "tokenize-entire-value"
      - "tokenize-value-components"
      description: >-
          The default behavior that the server should exhibit for fields for which no explicit behavior is defined. If no default behavior is defined, the server will fall back to using the default behavior configured for the syntax used for each log field.
    Enumlog-field-behavior-text-access-omitFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields that should be omitted entirely from log messages. Neither the field name nor value will be included.
    Enumlog-field-behavior-text-access-redactValueComponentsFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values will include redacted components.
    Enumlog-field-behavior-text-access-redactEntireValueFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-id"
      - "bind-authentication-failure-name"
      - "bind-authentication-failure-reason"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-altered"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-component"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-properties"
      - "inter-server-operation-purpose"
      - "intermediate-client-request"
      - "intermediate-client-result"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "issuer-certificate-subject-dn"
      - "ldap-client-decode-error-message"
      - "local-assurance-level"
      - "local-assurance-satisfied"
      - "matched-dn"
      - "message-id"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "origin"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-level"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "response-delayed-by-assurance"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "search-unindexed"
      - "server-assurance-results"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be completely redacted in log messages. The field name will be included, but with a fixed value that does not reflect the actual value for the field.
    Enumlog-field-behavior-json-formatted-access-preserveFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be logged with the intended value. The values for these fields will be preserved, although they may be sanitized for parsability or safety purposes (for example, to escape special characters in the value), and values that are too long may be truncated.
    Enumlog-field-behavior-json-formatted-access-tokenizeValueComponentsFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values will include tokenized components.
    Enumlog-field-behavior-json-formatted-access-redactEntireValueFieldProp:
      type: string
      enum:
      - "abandon-message-id"
      - "add-attributes"
      - "add-entry-dn"
      - "add-undelete-from-dn"
      - "additional-info"
      - "administrative-operation"
      - "assured-replication-requirements"
      - "assured-replication-requirements-altered-by-request-control"
      - "assured-replication-requirements-local-assurance-level"
      - "assured-replication-requirements-remote-assurance-level"
      - "assured-replication-requirements-response-delayed-by-assurance"
      - "assured-replication-requirements-assurance-timeout-millis"
      - "authorization-dn"
      - "auto-authenticated-as"
      - "bind-authentication-dn"
      - "bind-authentication-failure-reason"
      - "bind-authentication-failure-reason-id"
      - "bind-authentication-failure-reason-message"
      - "bind-authentication-failure-reason-name"
      - "bind-authentication-type"
      - "bind-authorization-dn"
      - "bind-dn"
      - "bind-protocol-version"
      - "bind-retired-password-used"
      - "bind-sasl-mechanism"
      - "change-to-soft-deleted-entry"
      - "cipher"
      - "client-connection-policy"
      - "collect-support-data-comment"
      - "collect-support-data-encrypted"
      - "collect-support-data-include-binary-files"
      - "collect-support-data-include-expensive-data"
      - "collect-support-data-include-extension-source"
      - "collect-support-data-include-replication-state-dump"
      - "collect-support-data-jstack-count"
      - "collect-support-data-log-duration"
      - "collect-support-data-log-file-head-collection-size-kb"
      - "collect-support-data-log-file-tail-collection-size-kb"
      - "collect-support-data-log-time-window"
      - "collect-support-data-report-count"
      - "collect-support-data-report-interval-seconds"
      - "collect-support-data-security-level"
      - "collect-support-data-use-sequential-mode"
      - "compare-assertion-value"
      - "compare-attribute-name"
      - "compare-entry-dn"
      - "connect-from-address"
      - "connect-from-port"
      - "connect-to-address"
      - "connect-to-port"
      - "connection-id"
      - "delete-entry-dn"
      - "delete-soft-deleted-entry-dn"
      - "deliver-otp-authentication-id"
      - "deliver-otp-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-dn"
      - "deliver-password-reset-token-preferred-delivery-mechanisms"
      - "deliver-password-reset-token-successful-delivery-mechanism"
      - "deliver-password-reset-token-unsuccessful-delivery-mechanisms"
      - "diagnostic-message"
      - "disconnect-message"
      - "disconnect-reason"
      - "entry-rebalancing-admin-action-message"
      - "entry-rebalancing-base-dn"
      - "entry-rebalancing-entries-added-to-target"
      - "entry-rebalancing-entries-deleted-from-source"
      - "entry-rebalancing-entries-read-from-source"
      - "entry-rebalancing-error-message"
      - "entry-rebalancing-operation-id"
      - "entry-rebalancing-size-limit"
      - "entry-rebalancing-source-backend-set"
      - "entry-rebalancing-source-server"
      - "entry-rebalancing-source-server-address"
      - "entry-rebalancing-source-server-altered"
      - "entry-rebalancing-source-server-port"
      - "entry-rebalancing-target-backend-set"
      - "entry-rebalancing-target-server"
      - "entry-rebalancing-target-server-address"
      - "entry-rebalancing-target-server-altered"
      - "entry-rebalancing-target-server-port"
      - "export-reversible-passwords-backend-id"
      - "export-reversible-passwords-encryption-settings-definition-id"
      - "export-reversible-passwords-entries-excluded-not-matching-filter"
      - "export-reversible-passwords-entries-excluded-without-passwords"
      - "export-reversible-passwords-entries-exported-with-non-reversible-passwords"
      - "export-reversible-passwords-entries-exported-with-reversible-passwords"
      - "export-reversible-passwords-entries-exported-without-passwords"
      - "export-reversible-passwords-export-non-reversible-passwords"
      - "export-reversible-passwords-export-only-entries-with-passwords"
      - "export-reversible-passwords-filter"
      - "export-reversible-passwords-include-virtual-attributes"
      - "export-reversible-passwords-output-file"
      - "export-reversible-passwords-total-entries-examined"
      - "export-reversible-passwords-total-entries-excluded"
      - "export-reversible-passwords-total-entries-exported"
      - "extended-request-oid"
      - "extended-request-type"
      - "extended-response-oid"
      - "extended-response-type"
      - "externally-processed-bind-authentication-id"
      - "externally-processed-bind-auth-failure-reason"
      - "externally-processed-bind-end-client-ip-address"
      - "externally-processed-bind-external-mechanism-name"
      - "externally-processed-bind-was-password-based"
      - "externally-processed-bind-was-secure"
      - "externally-processed-bind-was-successful"
      - "generate-password-num-passwords"
      - "generate-password-max-validation-attempts"
      - "generate-password-password-generator"
      - "generate-password-password-policy"
      - "get-supported-otp-delivery-mechanisms-dn"
      - "gssapi-bind-qop"
      - "gssapi-bind-requested-authentication-id"
      - "gssapi-bind-requested-authorization-id"
      - "indexes-with-keys-accessed-exceeding-entry-limit"
      - "indexes-with-keys-accessed-near-entry-limit"
      - "instance-name"
      - "inter-server-bind-connection-privileges"
      - "inter-server-bind-connection-purpose"
      - "inter-server-bind-source-certificate-subject"
      - "inter-server-control-forwarded-client-connection-policy"
      - "inter-server-request-controls"
      - "inter-server-request-controls-component-name"
      - "inter-server-request-controls-operation-purpose"
      - "inter-server-request-controls-properties"
      - "inter-server-request-controls-properties-name"
      - "inter-server-request-controls-properties-value"
      - "intermediate-client-request-control"
      - "intermediate-client-request-control-client-identity"
      - "intermediate-client-request-control-client-name"
      - "intermediate-client-request-control-downstream-client-address"
      - "intermediate-client-request-control-downstream-client-secure"
      - "intermediate-client-request-control-downstream-request"
      - "intermediate-client-request-control-request-id"
      - "intermediate-client-request-control-session-id"
      - "intermediate-client-response-control"
      - "intermediate-client-response-control-response-id"
      - "intermediate-client-response-control-server-name"
      - "intermediate-client-response-control-session-id"
      - "intermediate-client-response-control-upstream-response"
      - "intermediate-client-response-control-upstream-server-address"
      - "intermediate-client-response-control-upstream-server-secure"
      - "intermediate-response-name"
      - "intermediate-response-oid"
      - "intermediate-response-value"
      - "intermediate-responses-returned"
      - "ldap-client-decode-error-message"
      - "local-assurance-satisfied"
      - "log-type"
      - "matched-dn"
      - "message-id"
      - "message-type"
      - "missing-privileges"
      - "moddn-delete-old-rdn"
      - "moddn-entry-dn"
      - "moddn-new-rdn"
      - "moddn-new-superior-dn"
      - "modify-attributes"
      - "modify-entry-dn"
      - "multi-update-connection-id"
      - "multi-update-first-failed-operation"
      - "multi-update-first-failed-operation-error-message"
      - "multi-update-first-failed-operation-result-code"
      - "multi-update-operation-id"
      - "non-critical-json-formatted-request-control-decode-errors"
      - "non-critical-request-controls-ignored-due-to-acl"
      - "oauthbearer-bind-access-token-client-id"
      - "oauthbearer-bind-access-token-expiration-time"
      - "oauthbearer-bind-access-token-identifier"
      - "oauthbearer-bind-access-token-identity-mapper"
      - "oauthbearer-bind-access-token-is-active"
      - "oauthbearer-bind-access-token-issued-at"
      - "oauthbearer-bind-access-token-issuer"
      - "oauthbearer-bind-access-token-not-before"
      - "oauthbearer-bind-access-token-owner"
      - "oauthbearer-bind-access-token-scope"
      - "oauthbearer-bind-access-token-subject"
      - "oauthbearer-bind-access-token-type"
      - "oauthbearer-bind-access-token-username"
      - "oauthbearer-bind-access-token-validator"
      - "oauthbearer-bind-authorization-error-code"
      - "oauthbearer-bind-authorization-id"
      - "oauthbearer-bind-id-token-client-id"
      - "oauthbearer-bind-id-token-expiration-time"
      - "oauthbearer-bind-id-token-identifier"
      - "oauthbearer-bind-id-token-identity-mapper"
      - "oauthbearer-bind-id-token-is-active"
      - "oauthbearer-bind-id-token-issued-at"
      - "oauthbearer-bind-id-token-issuer"
      - "oauthbearer-bind-id-token-not-before"
      - "oauthbearer-bind-id-token-owner"
      - "oauthbearer-bind-id-token-subject"
      - "oauthbearer-bind-id-token-type"
      - "oauthbearer-bind-id-token-username"
      - "oauthbearer-bind-id-token-validator"
      - "operation-id"
      - "operation-oauth-scopes"
      - "operation-purpose"
      - "operation-purpose-application-name"
      - "operation-purpose-application-version"
      - "operation-purpose-code-location"
      - "operation-purpose-request-purpose"
      - "operation-type"
      - "origin"
      - "origin-details"
      - "origin-details-name"
      - "origin-details-value"
      - "pass-through-authentication-mapped-dn"
      - "pass-through-authentication-succeeded"
      - "pass-through-authentication-updated-local-password"
      - "password-modify-grace-login-used"
      - "password-modify-target-entry"
      - "password-modify-used-password-reset-token"
      - "password-policy-state-entry-dn"
      - "password-update-behavior-allow-pre-encoded-password"
      - "password-update-behavior-ignore-minimum-password-age"
      - "password-update-behavior-ignore-password-history"
      - "password-update-behavior-is-self-change"
      - "password-update-behavior-must-change-password"
      - "password-update-behavior-password-storage-scheme"
      - "password-update-behavior-skip-password-validation"
      - "peer-certificate-chain"
      - "peer-certificate-chain-certificate-bytes"
      - "peer-certificate-chain-certificate-string"
      - "peer-certificate-chain-certificate-type"
      - "peer-certificate-chain-issuer-subject-dn"
      - "peer-certificate-chain-not-after"
      - "peer-certificate-chain-not-before"
      - "peer-certificate-chain-serial-number"
      - "peer-certificate-chain-signature-algorithm"
      - "peer-certificate-chain-signature-bytes"
      - "peer-certificate-chain-subject-dn"
      - "ping-one-pass-through-authentication-auth-failure-reason"
      - "ping-one-pass-through-authentication-mapped-id"
      - "ping-one-pass-through-authentication-updated-local-user-password"
      - "pluggable-pass-through-authentication-failure-reason"
      - "pluggable-pass-through-authentication-mapped-user-identifier"
      - "pluggable-pass-through-authentication-result-code"
      - "pluggable-pass-through-authentication-updated-local-user-password"
      - "pre-authorization-used-privileges"
      - "processing-time-millis"
      - "product-name"
      - "protocol"
      - "referral-urls"
      - "remote-assurance-satisfied"
      - "replace-certificate-certificate-decode-error"
      - "replace-certificate-certificate-source"
      - "replace-certificate-key-store-error"
      - "replace-certificate-key-store-path"
      - "replace-certificate-private-key-decode-error"
      - "replace-certificate-request-decode-error"
      - "replace-certificate-tool-error"
      - "replication-change-id"
      - "request-control-oids"
      - "requester-dn"
      - "requester-ip-address"
      - "response-control-oids"
      - "result-code-name"
      - "result-code-value"
      - "search-base-dn"
      - "search-deref-policy"
      - "search-entries-returned"
      - "search-filter"
      - "search-indexed"
      - "search-requested-attributes"
      - "search-result-entry-dn"
      - "search-result-entry-attributes"
      - "search-scope-name"
      - "search-scope-value"
      - "search-size-limit"
      - "search-time-limit-seconds"
      - "search-types-only"
      - "security-negotiation-properties"
      - "security-negotiation-properties-name"
      - "security-negotiation-properties-value"
      - "server-assurance-results"
      - "server-assurance-results-replica-id"
      - "server-assurance-results-replication-server-id"
      - "server-assurance-results-result-code"
      - "servers-accessed"
      - "single-use-token-successful-delivery-mechanism"
      - "single-use-token-token-id"
      - "single-use-token-unsuccessful-delivery-mechanisms"
      - "single-use-token-user-dn"
      - "startup-id"
      - "target-host"
      - "target-port"
      - "target-protocol"
      - "thread-id"
      - "timestamp"
      - "totp-shared-secret-authentication-id"
      - "totp-shared-secret-static-password-provided"
      - "triggered-by-connection-id"
      - "triggered-by-operation-id"
      - "uncached-data-accessed"
      - "uniqueness-request-control"
      - "used-privileges"
      - "using-admin-session-worker-thread"
      - "work-queue-wait-time-millis"
      - "yubikey-otp-bind-authentication-id"
      - "yubikey-otp-bind-authorization-id"
      - "yubikey-otp-device-authentication-id"
      - "yubikey-otp-device-static-password-provided"
      - "yubikey-otp-device-yubikey-public-id"
      description: >-
          The log fields whose values should be completely redacted in log messages. The field name will be included, but with a fixed value that does not reflect the actual value for the field.
    proxy-server-instance-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumproxy-server-instanceSchemaUrn'
          id:
            description: Name of the Server Instance
            type: string
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
        required:
        - schemas
        - serverInstanceName
        - clusterName
        - serverVersion
        - id
    Enumproxy-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:proxy"
    metrics-engine-server-instance-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummetrics-engine-server-instanceSchemaUrn'
          id:
            description: Name of the Server Instance
            type: string
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
        required:
        - schemas
        - serverInstanceName
        - clusterName
        - serverVersion
        - id
    Enummetrics-engine-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine"
    authorize-server-instance-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumauthorize-server-instanceSchemaUrn'
          id:
            description: Name of the Server Instance
            type: string
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
        required:
        - schemas
        - serverInstanceName
        - clusterName
        - serverVersion
        - id
    Enumauthorize-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:authorize"
    directory-server-instance-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdirectory-server-instanceSchemaUrn'
          id:
            description: Name of the Server Instance
            type: string
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          replicationSetName:
            type: string
            description: >-
                The name of the replication set assigned to this Directory Server. Restricted domains are only replicated within instances using the same replication set name.
          loadBalancingAlgorithmName:
            type: array
            items:
              type: string
            description: >-
                The name of the configuration object for a load-balancing algorithm that should include this server.
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
        required:
        - schemas
        - serverInstanceName
        - clusterName
        - serverVersion
        - id
    Enumdirectory-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:directory"
    sync-server-instance-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsync-server-instanceSchemaUrn'
          id:
            description: Name of the Server Instance
            type: string
          serverInstanceType:
            $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
          serverInstanceName:
            type: string
            description: >-
                The name of this Server Instance. The instance name needs to be unique if this server will be part of a topology of servers that are connected to each other. Once set, it may not be changed.
          clusterName:
            type: string
            description: >-
                The name of the cluster to which this Server Instance belongs. Server instances within the same cluster will share the same cluster-wide configuration.
          serverInstanceLocation:
            type: string
            description: >-
                Specifies the location for the Server Instance.
          hostname:
            type: string
            description: >-
                The name of the host where this Server Instance is installed.
          serverRoot:
            type: string
            description: >-
                The file system path where this Server Instance is installed.
          serverVersion:
            type: string
            description: >-
                The version of the server.
          interServerCertificate:
            type: string
            description: >-
                The public component of the certificate used by this instance to protect inter-server communication and to perform server-specific encryption. This will generally be managed by the server and should only be altered by administrators under explicit direction from Ping Identity support personnel.
          ldapPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP connections.
          ldapsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for LDAP secure connections.
          httpPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTP connections.
          httpsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for HTTPS connections.
          replicationPort:
            type: integer
            description: >-
                The replication TCP port.
          replicationServerID:
            type: integer
            description: >-
                Specifies a unique identifier for the replication server on this server instance.
          replicationDomainServerID:
            type: array
            items:
              type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the replication domain.
          jmxPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX connections.
          jmxsPort:
            type: integer
            description: >-
                The TCP port on which this server is listening for JMX secure connections.
          preferredSecurity:
            $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
          startTLSEnabled:
            type: boolean
            description: >-
                Indicates whether StartTLS is enabled on this server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                The set of base DNs under the root DSE.
          memberOfServerGroup:
            type: array
            items:
              type: string
            description: >-
                The set of groups of which this server is a member.
        required:
        - schemas
        - serverInstanceName
        - clusterName
        - serverVersion
        - id
    Enumsync-server-instanceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance:sync"
    ldap-server-instance-listener-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-server-instance-listenerSchemaUrn'
          id:
            description: Name of the Server Instance Listener
            type: string
          serverLDAPPort:
            type: integer
            description: >-
                The TCP port number on which the LDAP server is listening.
          connectionSecurity:
            $ref: '#/components/schemas/Enumserver-instance-listener-ldap-connectionSecurityProp'
          listenerCertificate:
            type: string
            description: >-
                The public component of the certificate that the listener is expected to present to clients. When establishing a connection to this server, only the certificate(s) listed here will be trusted.
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enumserver-instance-listener-purposeProp'
        required:
        - schemas
        - id
    Enumldap-server-instance-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:ldap"
    http-server-instance-listener-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhttp-server-instance-listenerSchemaUrn'
          id:
            description: Name of the Server Instance Listener
            type: string
          listenAddress:
            type: string
            description: >-
                If the server is listening on a particular address different from the hostname, then this property may be used to specify the address on which to listen for connections from HTTP clients.
          serverHTTPPort:
            type: integer
            description: >-
                The TCP port number on which the HTTP server is listening.
          connectionSecurity:
            $ref: '#/components/schemas/Enumserver-instance-listener-http-connectionSecurityProp'
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enumserver-instance-listener-purposeProp'
        required:
        - schemas
        - id
    Enumhttp-server-instance-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-instance-listener:http"
    mac-secret-key-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummac-secret-keySchemaUrn'
          macAlgorithmName:
            type: string
            description: >-
                The algorithm name used to generate this MAC key, e.g. HmacMD5, HmacSHA1, HMacSHA256, etc.
          keyID:
            type: string
            description: >-
                The unique system-generated identifier for the Secret Key.
          isCompromised:
            type: boolean
            description: >-
                If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
          symmetricKey:
            type: array
            items:
              type: string
            description: >-
                The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.
          keyLengthBits:
            type: integer
            description: >-
                The length of the key in bits.
        required:
        - keyID
        - keyLengthBits
    Enummac-secret-keySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:mac-secret-key"
    cipher-secret-key-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcipher-secret-keySchemaUrn'
          cipherTransformationName:
            type: string
            description: >-
                The algorithm name used to produce this cipher, e.g. AES/CBC/PKCS5Padding.
          initializationVectorLengthBits:
            type: integer
            description: >-
                The initialization vector length of the cipher in bits.
          keyID:
            type: string
            description: >-
                The unique system-generated identifier for the Secret Key.
          isCompromised:
            type: boolean
            description: >-
                If the key is compromised, an administrator may set this flag to immediately trigger the creation of a new secret key. After the new key is generated, the value of this property will be reset to false.
          symmetricKey:
            type: array
            items:
              type: string
            description: >-
                The symmetric key that is used for both encryption of plain text and decryption of cipher text. This stores the secret key for each server instance encrypted with that server's inter-server certificate.
          keyLengthBits:
            type: integer
            description: >-
                The length of the key in bits.
        required:
        - keyID
        - keyLengthBits
    Enumcipher-secret-keySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-secret-key"
    password-inter-server-authentication-info-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumpassword-inter-server-authentication-infoSchemaUrn'
          id:
            description: Name of the Inter Server Authentication Info
            type: string
          authenticationType:
            $ref: '#/components/schemas/Enuminter-server-authentication-info-authenticationTypeProp'
          bindDN:
            type: string
            description: >-
                A DN of the username that should be used for the bind request.
          username:
            type: string
            description: >-
                The username that should be used for the bind request.
          password:
            type: string
            format: password
            description: >-
                The password for the username or bind-dn.
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enuminter-server-authentication-info-purposeProp'
        required:
        - schemas
        - password
        - id
    Enumpassword-inter-server-authentication-infoSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:password"
    certificate-inter-server-authentication-info-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcertificate-inter-server-authentication-infoSchemaUrn'
          id:
            description: Name of the Inter Server Authentication Info
            type: string
          purpose:
            type: array
            items:
              $ref: '#/components/schemas/Enuminter-server-authentication-info-purposeProp'
        required:
        - schemas
        - id
    Enumcertificate-inter-server-authentication-infoSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:inter-server-authentication-info:certificate"
    Enumserver-instance-preferredSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      - "starttls"
      description: >-
          Specifies the preferred mechanism to use for securing connections to the server.
    Enumserver-instance-listener-purposeProp:
      type: string
      enum:
      - "mirrored-config"
      description: >-
          Identifies the purpose of this Server Instance Listener.
    Enuminter-server-authentication-info-authenticationTypeProp:
      type: string
      enum:
      - "simple"
      - "sasl-plain"
      description: >-
          Identifies the type of password authentication that will be used.
    Enumserver-instance-listener-ldap-connectionSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      - "starttls"
      description: >-
          Specifies the mechanism to use for securing connections to the server.
    Enumserver-instance-listener-http-connectionSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      description: >-
          Specifies the mechanism to use for securing connections to the server.
    Enuminter-server-authentication-info-purposeProp:
      type: string
      enum:
      - "mirrored-config"
      description: >-
          Identifies the purpose of this Inter Server Authentication Info.
    Enumserver-instance-serverInstanceTypeProp:
      type: string
      enum:
      - "ds"
      - "proxy"
      - "authorize"
      - "metrics"
      - "sync"
      description: >-
          Specifies the type of server installation.
    add-summarize-log-file-rotation-listener-request:
      allOf:
      - type: object
        properties:
          listenerName:
            description: Name of the new Log File Rotation Listener
            type: string
        required:
        - listenerName
      - $ref: '#/components/schemas/summarize-log-file-rotation-listener-shared'
    summarize-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log File Rotation Listener
            type: string
        required:
        - id
      - $ref: '#/components/schemas/summarize-log-file-rotation-listener-shared'
    summarize-log-file-rotation-listener-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsummarize-log-file-rotation-listenerSchemaUrn'
        outputDirectory:
          type: string
          description: >-
              The path to the directory in which the summarize-access-log output should be written. If no value is provided, the output file will be written into the same directory as the rotated log file.
        description:
          type: string
          description: >-
              A description for this Log File Rotation Listener
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log File Rotation Listener is enabled for use.
      required:
      - schemas
      - enabled
    Enumsummarize-log-file-rotation-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:summarize"
    add-copy-log-file-rotation-listener-request:
      allOf:
      - type: object
        properties:
          listenerName:
            description: Name of the new Log File Rotation Listener
            type: string
        required:
        - listenerName
      - $ref: '#/components/schemas/copy-log-file-rotation-listener-shared'
    copy-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log File Rotation Listener
            type: string
        required:
        - id
      - $ref: '#/components/schemas/copy-log-file-rotation-listener-shared'
    copy-log-file-rotation-listener-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcopy-log-file-rotation-listenerSchemaUrn'
        copyToDirectory:
          type: string
          description: >-
              The path to the directory to which log files should be copied. It must be different from the directory to which the log file is originally written, and administrators should ensure that the filesystem has sufficient space to hold files as they are copied.
        compressOnCopy:
          type: boolean
          description: >-
              Indicates whether the file should be gzip-compressed as it is copied into the destination directory.
        description:
          type: string
          description: >-
              A description for this Log File Rotation Listener
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log File Rotation Listener is enabled for use.
      required:
      - schemas
      - copyToDirectory
      - enabled
    Enumcopy-log-file-rotation-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:copy"
    add-third-party-log-file-rotation-listener-request:
      allOf:
      - type: object
        properties:
          listenerName:
            description: Name of the new Log File Rotation Listener
            type: string
        required:
        - listenerName
      - $ref: '#/components/schemas/third-party-log-file-rotation-listener-shared'
    third-party-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log File Rotation Listener
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-log-file-rotation-listener-shared'
    third-party-log-file-rotation-listener-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-log-file-rotation-listenerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Log File Rotation Listener.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Log File Rotation Listener. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Log File Rotation Listener
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log File Rotation Listener is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-log-file-rotation-listenerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:third-party"
    add-password-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Password Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/password-policy-shared'
    password-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/password-policy-shared'
    password-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpassword-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Password Policy
        requireSecureAuthentication:
          type: boolean
          description: >-
              Indicates whether users with the associated password policy are required to authenticate in a secure manner.
        requireSecurePasswordChanges:
          type: boolean
          description: >-
              Indicates whether users with the associated password policy are required to change their password in a secure manner that does not expose the credentials.
        accountStatusNotificationHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the account status notification handlers that are used with the associated password storage scheme.
        stateUpdateFailurePolicy:
          $ref: '#/components/schemas/Enumpassword-policy-stateUpdateFailurePolicyProp'
        enableDebug:
          type: boolean
          description: >-
              Indicates whether to enable debugging for the password policy state.
        passwordAttribute:
          type: string
          description: >-
              Specifies the attribute type used to hold user passwords.
        defaultPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password storage schemes that are used to encode clear-text passwords for this password policy.
        deprecatedPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password storage schemes that are considered deprecated for this password policy.
        allowMultiplePasswordValues:
          type: boolean
          description: >-
              Indicates whether user entries can have multiple distinct values for the password attribute.
        allowPreEncodedPasswords:
          type: boolean
          description: >-
              Indicates whether users can change their passwords by providing a pre-encoded value.
        passwordValidator:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password validators that are used with the associated password storage scheme.
        bindPasswordValidator:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the password validators that should be invoked for bind operations.
        minimumBindPasswordValidationFrequency:
          type: string
          description: >-
              Indicates how frequently password validation should be performed during bind operations for each user to whom this password policy is assigned.
        bindPasswordValidationFailureAction:
          $ref: '#/components/schemas/Enumpassword-policy-bindPasswordValidationFailureActionProp'
        passwordGenerator:
          type: string
          description: >-
              Specifies the name of the password generator that is used with the associated password policy.
        passwordHistoryCount:
          type: integer
          description: >-
              Specifies the maximum number of former passwords to maintain in the password history.
        passwordHistoryDuration:
          type: string
          description: >-
              Specifies the maximum length of time that passwords remain in the password history.
        minPasswordAge:
          type: string
          description: >-
              Specifies the minimum length of time after a password change before the user is allowed to change the password again.
        maxPasswordAge:
          type: string
          description: >-
              Specifies the maximum length of time that a user can continue using the same password before it must be changed (that is, the password expiration interval).
        passwordExpirationWarningInterval:
          type: string
          description: >-
              Specifies the maximum length of time before a user's password actually expires that the server begins to include warning notifications in bind responses for that user.
        expirePasswordsWithoutWarning:
          type: boolean
          description: >-
              Indicates whether the Directory Server allows a user's password to expire even if that user has never seen an expiration warning notification.
        returnPasswordExpirationControls:
          $ref: '#/components/schemas/Enumpassword-policy-returnPasswordExpirationControlsProp'
        allowExpiredPasswordChanges:
          type: boolean
          description: >-
              Indicates whether a user whose password is expired is still allowed to change that password using the password modify extended operation.
        graceLoginCount:
          type: integer
          description: >-
              Specifies the number of grace logins that a user is allowed after the account has expired to allow that user to choose a new password.
        requireChangeByTime:
          type: string
          description: >-
              Specifies the time by which all users with the associated password policy must change their passwords.
        lockoutFailureCount:
          type: integer
          description: >-
              Specifies the maximum number of authentication failures that a user is allowed before the account is locked out.
        lockoutDuration:
          type: string
          description: >-
              Specifies the length of time that an account is locked after too many authentication failures.
        lockoutFailureExpirationInterval:
          type: string
          description: >-
              Specifies the length of time before an authentication failure is no longer counted against a user for the purposes of account lockout.
        ignoreDuplicatePasswordFailures:
          type: boolean
          description: >-
              Indicates whether to ignore subsequent authentication failures using the same password as an earlier failed authentication attempt (within the time frame defined by the lockout failure expiration interval). If this option is "true", then multiple failed attempts using the same password will be considered only a single failure. If this option is "false", then any failure will be tracked regardless of whether it used the same password as an earlier attempt.
        failureLockoutAction:
          type: string
          description: >-
              The action that the server should take for authentication attempts that target a user with more than the configured number of outstanding authentication failures.
        idleLockoutInterval:
          type: string
          description: >-
              Specifies the maximum length of time that an account may remain idle (that is, the associated user does not authenticate to the server) before that user is locked out.
        allowUserPasswordChanges:
          type: boolean
          description: >-
              Indicates whether users can change their own passwords.
        passwordChangeRequiresCurrentPassword:
          type: boolean
          description: >-
              Indicates whether user password changes must use the password modify extended operation and must include the user's current password before the change is allowed.
        passwordRetirementBehavior:
          type: array
          items:
            $ref: '#/components/schemas/Enumpassword-policy-passwordRetirementBehaviorProp'
        maxRetiredPasswordAge:
          type: string
          description: >-
              Specifies the maximum length of time that a retired password should be considered valid and may be used to authenticate to the server.
        allowedPasswordResetTokenUseCondition:
          type: array
          items:
            $ref: '#/components/schemas/Enumpassword-policy-allowedPasswordResetTokenUseConditionProp'
        forceChangeOnAdd:
          type: boolean
          description: >-
              Indicates whether users are forced to change their passwords upon first authenticating to the Directory Server after their account has been created.
        forceChangeOnReset:
          type: boolean
          description: >-
              Indicates whether users are forced to change their passwords if they are reset by an administrator. If a user's password is changed by any other user, that is considered an administrative password reset.
        maxPasswordResetAge:
          type: string
          description: >-
              Specifies the maximum length of time that users have to change passwords after they have been reset by an administrator before they become locked.
        skipValidationForAdministrators:
          type: boolean
          description: >-
              Indicates whether passwords set by administrators are allowed to bypass the password validation process that is required for user password changes.
        maximumRecentLoginHistorySuccessfulAuthenticationCount:
          type: integer
          description: >-
              The maximum number of successful authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistorySuccessfulAuthenticationDuration:
          type: string
          description: >-
              The maximum age of successful authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistoryFailedAuthenticationCount:
          type: integer
          description: >-
              The maximum number of failed authentication attempts to include in the recent login history for each account.
        maximumRecentLoginHistoryFailedAuthenticationDuration:
          type: string
          description: >-
              The maximum age of failed authentication attempts to include in the recent login history for each account.
        recentLoginHistorySimilarAttemptBehavior:
          $ref: '#/components/schemas/Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp'
        lastLoginIPAddressAttribute:
          type: string
          description: >-
              Specifies the name or OID of the attribute type that is used to hold the IP address of the client from which the user last authenticated.
        lastLoginTimeAttribute:
          type: string
          description: >-
              Specifies the name or OID of the attribute type that is used to hold the last login time for users with the associated password policy.
        lastLoginTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to generate the last login time value for users with the associated password policy. Last login time values will be written using the UTC (also known as GMT, or Greenwich Mean Time) time zone.
        previousLastLoginTimeFormat:
          type: array
          items:
            type: string
          description: >-
              Specifies the format string(s) that might have been used with the last login time at any point in the past for users associated with the password policy.
      required:
      - passwordAttribute
      - defaultPasswordStorageScheme
    Enumpassword-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-policy"
    Enumpassword-policy-passwordRetirementBehaviorProp:
      type: string
      enum:
      - "retire-on-self-change"
      - "retire-on-administrative-reset"
      - "retire-on-request-with-control"
      description: >-
          Specifies the conditions under which the server may retire a user's current password in the course of setting a new password for that user (whether via a modify operation or a password modify extended operation).
    Enumpassword-policy-allowedPasswordResetTokenUseConditionProp:
      type: string
      enum:
      - "account-usable"
      - "password-expired"
      - "account-locked-due-to-failures"
      - "account-locked-due-to-idle-time-limit"
      - "account-locked-due-to-admin-reset-timeout"
      - "account-locked-due-to-validation-failure"
      description: >-
          The set of conditions under which a user governed by this Password Policy will be permitted to generate a password reset token via the deliver password reset token extended operation, and to use that token in lieu of the current password via the password modify extended operation.
    Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp:
      type: string
      enum:
      - "collapse-similar-attempts-on-the-same-date"
      - "maintain-every-attempt"
      - "update-at-most-once-per-day"
      description: >-
          The behavior that the server will exhibit when multiple similar authentication attempts (with the same values for the successful, authentication-method, client-ip-address, and failure-reason fields) are processed for an account.
    Enumpassword-policy-returnPasswordExpirationControlsProp:
      type: string
      enum:
      - "unless-password-policy-control-is-used"
      - "always"
      - "never"
      description: >-
          Indicates whether the server should return the password expiring and password expired response controls (as described in draft-vchu-ldap-pwd-policy).
    Enumpassword-policy-stateUpdateFailurePolicyProp:
      type: string
      enum:
      - "ignore"
      - "reactive"
      - "proactive"
      description: >-
          Specifies how the server deals with the inability to update password policy state information during an authentication attempt.
    Enumpassword-policy-bindPasswordValidationFailureActionProp:
      type: string
      enum:
      - "reject-bind"
      - "force-password-change"
      - "generate-account-status-notification"
      description: >-
          Specifies the behavior that the server should exhibit if a bind password fails validation by one or more of the configured bind password validators.
    add-delegated-admin-rights-request:
      allOf:
      - type: object
        properties:
          rightsName:
            description: Name of the new Delegated Admin Rights
            type: string
        required:
        - rightsName
      - $ref: '#/components/schemas/delegated-admin-rights-shared'
    delegated-admin-rights-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Rights
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delegated-admin-rights-shared'
    delegated-admin-rights-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-rightsSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Rights
        enabled:
          type: boolean
          description: >-
              Indicates whether the Delegated Admin Rights is enabled.
        adminUserDN:
          type: string
          description: >-
              Specifies the DN of an administrative user who has authority to manage resources. Either admin-user-dn or admin-group-dn must be specified, but not both.
        adminGroupDN:
          type: string
          description: >-
              Specifies the DN of a group of administrative users who have authority to manage resources. Either admin-user-dn or admin-group-dn must be specified, but not both.
      required:
      - enabled
    Enumdelegated-admin-rightsSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-rights"
    add-delegated-admin-resource-rights-request:
      allOf:
      - type: object
        properties:
          restResourceType:
            description: Name of the new Delegated Admin Resource Rights
            type: string
        required:
        - restResourceType
      - $ref: '#/components/schemas/delegated-admin-resource-rights-shared'
    delegated-admin-resource-rights-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Resource Rights
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delegated-admin-resource-rights-shared'
    delegated-admin-resource-rights-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-resource-rightsSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Resource Rights
        enabled:
          type: boolean
          description: >-
              Indicates whether these Delegated Admin Resource Rights are enabled.
        restResourceType:
          type: string
          description: >-
              Specifies the resource type applicable to these Delegated Admin Resource Rights.
        adminPermission:
          type: array
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-resource-rights-adminPermissionProp'
        adminScope:
          $ref: '#/components/schemas/Enumdelegated-admin-resource-rights-adminScopeProp'
        resourceSubtree:
          type: array
          items:
            type: string
          description: >-
              Specifies subtrees within the search base whose entries can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-subtrees.
        resourcesInGroup:
          type: array
          items:
            type: string
          description: >-
              Specifies groups whose members can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-groups.
      required:
      - enabled
      - restResourceType
    Enumdelegated-admin-resource-rightsSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-resource-rights"
    Enumdelegated-admin-resource-rights-adminPermissionProp:
      type: string
      enum:
      - "create"
      - "read"
      - "reference"
      - "update"
      - "update-profile"
      - "reset-password"
      - "delete"
      - "manage-group-membership"
      - "download"
      - "upload"
      description: >-
          Specifies administrator(s) permissions.
    Enumdelegated-admin-resource-rights-adminScopeProp:
      type: string
      enum:
      - "resources-in-specific-groups"
      - "resources-in-specific-subtrees"
      - "all-resources-in-base"
      description: >-
          Specifies the scope of these Delegated Admin Resource Rights.
    add-default-uncached-attribute-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Attribute Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/default-uncached-attribute-criteria-shared'
    default-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Attribute Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/default-uncached-attribute-criteria-shared'
    default-uncached-attribute-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdefault-uncached-attribute-criteriaSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Uncached Attribute Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Attribute Criteria is enabled for use in the server.
      required:
      - schemas
      - enabled
    Enumdefault-uncached-attribute-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:default"
    add-groovy-scripted-uncached-attribute-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Attribute Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-shared'
    groovy-scripted-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Attribute Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-shared'
    groovy-scripted-uncached-attribute-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-uncached-attribute-criteriaSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Uncached Attribute Criteria.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Uncached Attribute Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Attribute Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Attribute Criteria is enabled for use in the server.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-uncached-attribute-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:groovy-scripted"
    add-simple-uncached-attribute-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Attribute Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-uncached-attribute-criteria-shared'
    simple-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Attribute Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-uncached-attribute-criteria-shared'
    simple-uncached-attribute-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-uncached-attribute-criteriaSchemaUrn'
        attributeType:
          type: array
          items:
            type: string
          description: >-
              Specifies the attribute types for attributes that may be written to the uncached-id2entry database.
        minValueCount:
          type: integer
          description: >-
              Specifies the minimum number of values that an attribute must have before it will be written into the uncached-id2entry database.
        minTotalValueSize:
          type: string
          description: >-
              Specifies the minimum total value size (i.e., the sum of the sizes of all values) that an attribute must have before it will be written into the uncached-id2entry database.
        description:
          type: string
          description: >-
              A description for this Uncached Attribute Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Attribute Criteria is enabled for use in the server.
      required:
      - schemas
      - attributeType
      - enabled
    Enumsimple-uncached-attribute-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:simple"
    add-third-party-uncached-attribute-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Attribute Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-shared'
    third-party-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Attribute Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-shared'
    third-party-uncached-attribute-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-uncached-attribute-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Uncached Attribute Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Uncached Attribute Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Attribute Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Attribute Criteria is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-uncached-attribute-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:third-party"
    add-result-code-map-request:
      allOf:
      - type: object
        properties:
          mapName:
            description: Name of the new Result Code Map
            type: string
        required:
        - mapName
      - $ref: '#/components/schemas/result-code-map-shared'
    result-code-map-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Result Code Map
            type: string
        required:
        - id
      - $ref: '#/components/schemas/result-code-map-shared'
    result-code-map-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumresult-code-mapSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Result Code Map
        bindAccountLockedResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a bind attempt fails because the user's account is locked as a result of too many failed authentication attempts.
        bindMissingUserResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a bind attempt fails because the target user entry does not exist in the server.
        bindMissingPasswordResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a password-based bind attempt fails because the target user entry does not have a password.
        serverErrorResultCode:
          type: integer
          description: >-
              Specifies the result code that should be returned if a generic error occurs within the server.
    Enumresult-code-mapSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-code-map"
    replication-synchronization-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumreplication-synchronization-providerSchemaUrn'
          id:
            description: Name of the Synchronization Provider
            type: string
          numUpdateReplayThreads:
            type: integer
            description: >-
                Specifies the number of update replay threads.
          description:
            type: string
            description: >-
                A description for this Synchronization Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Synchronization Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumreplication-synchronization-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication"
    custom-synchronization-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-synchronization-providerSchemaUrn'
          id:
            description: Name of the Synchronization Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Synchronization Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Synchronization Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumcustom-synchronization-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:synchronization-provider:custom"
    replication-domain-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumreplication-domainSchemaUrn'
          serverID:
            type: integer
            description: >-
                Specifies a unique identifier for the Directory Server within the Replication Domain.
          baseDN:
            type: string
            description: >-
                Specifies the base DN of the replicated data.
          windowSize:
            type: integer
            description: >-
                Specifies the maximum number of replication updates the Directory Server can have outstanding from the Replication Server.
          heartbeatInterval:
            type: string
            description: >-
                Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
          syncHistPurgeDelay:
            type: string
            description: >-
                The time in seconds after which historical information used in replication conflict resolution is purged. The information is removed from entries when they are modified after the purge delay has elapsed.
          restricted:
            type: boolean
            description: >-
                When set to true, changes are only replicated with server instances that belong to the same replication set.
          onReplayFailureWaitForDependentOpsTimeout:
            type: string
            description: >-
                Defines the maximum time to retry a failed operation. An operation will be retried only if it appears that the failure might be dependent on an earlier operation from a different server that hasn't replicated yet. The frequency of the retry is determined by the dependent-ops-replay-failure-wait-time property.
          dependentOpsReplayFailureWaitTime:
            type: string
            description: >-
                Defines how long to wait before retrying certain operations, specifically operations that might have failed because they depend on an operation from a different server that has not yet replicated to this instance.
        required:
        - serverID
        - baseDN
    Enumreplication-domainSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:replication-domain"
    add-simple-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Connection Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
    simple-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
    simple-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-connection-criteriaSchemaUrn'
        includedClientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection Criteria.
        excludedClientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple Connection Criteria.
        includedConnectionHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
        excludedConnectionHandler:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
        includedProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a communication protocol that should be used by clients included in this Simple Connection Criteria.
        excludedProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection Criteria.
        communicationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-communicationSecurityLevelProp'
        userAuthType:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-userAuthTypeProp'
        authenticationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-authenticationSecurityLevelProp'
        includedUserSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
        excludedUserSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
        includedUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        excludedUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        allIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        anyIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        notAllIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        noneIncludedUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
        allIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        anyIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        notAllIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        noneIncludedUserFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
        allIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-allIncludedUserPrivilegeProp'
        anyIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-anyIncludedUserPrivilegeProp'
        notAllIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-notAllIncludedUserPrivilegeProp'
        noneIncludedUserPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-noneIncludedUserPrivilegeProp'
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
    Enumsimple-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:simple"
    add-aggregate-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Connection Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
    aggregate-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
    aggregate-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-connection-criteriaSchemaUrn'
        allIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that must match the associated client connection in order to match the aggregate connection criteria. If one or more all-included connection criteria objects are provided, then a client connection must match all of them in order to match the aggregate connection criteria.
        anyIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that may match the associated client connection in order to match the aggregate connection criteria. If one or more any-included connection criteria objects are provided, then a client connection must match at least one of them in order to match the aggregate connection criteria.
        notAllIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that should not match the associated client connection in order to match the aggregate connection criteria. If one or more not-all-included connection criteria objects are provided, then a client connection must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate connection criteria.
        noneIncludedConnectionCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a connection criteria object that must not match the associated client connection in order to match the aggregate connection criteria. If one or more none-included connection criteria objects are provided, then a client connection must not match any of them in order to match the aggregate connection criteria.
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
    Enumaggregate-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:aggregate"
    add-third-party-connection-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Connection Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
    third-party-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
    third-party-connection-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-connection-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Connection Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Connection Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Connection Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-connection-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-criteria:third-party"
    Enumconnection-criteria-userAuthTypeProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "sasl"
      - "internal"
      description: >-
          Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
    Enumconnection-criteria-noneIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-authenticationSecurityLevelProp:
      type: string
      enum:
      - "any"
      - "secure-only"
      - "insecure-only"
      description: >-
          Indicates whether this Simple Connection Criteria should require or allow clients that authenticated using a secure manner. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-allIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have all of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-anyIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    Enumconnection-criteria-communicationSecurityLevelProp:
      type: string
      enum:
      - "any"
      - "secure-only"
      - "insecure-only"
      description: >-
          Indicates whether this Simple Connection Criteria should require or allow clients using a secure communication channel.
    Enumconnection-criteria-notAllIncludedUserPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
    root-dn-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumroot-dnSchemaUrn'
          defaultRootPrivilegeName:
            type: array
            items:
              $ref: '#/components/schemas/Enumroot-dn-defaultRootPrivilegeNameProp'
    Enumroot-dnSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:root-dn"
    add-root-dn-user-request:
      allOf:
      - type: object
        properties:
          userName:
            description: Name of the new Root DN User
            type: string
        required:
        - userName
      - $ref: '#/components/schemas/root-dn-user-shared'
    root-dn-user-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Root DN User
            type: string
        required:
        - id
      - $ref: '#/components/schemas/root-dn-user-shared'
      required:
      - inheritDefaultRootPrivileges
      - searchResultEntryLimit
      - timeLimitSeconds
      - lookThroughEntryLimit
      - idleTimeLimitSeconds
      - passwordPolicy
      - requireSecureAuthentication
      - requireSecureConnections
    root-dn-user-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumroot-dn-userSchemaUrn'
        alternateBindDN:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more alternate DNs that can be used to bind to the server as this User.
        description:
          type: string
          description: >-
              A description for this User.
        password:
          type: string
          format: password
          description: >-
              Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.
        firstName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's first name. This is stored in the givenName LDAP attribute.
        lastName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's last name. This is stored in the sn LDAP attribute.
        userID:
          type: string
          description: >-
              Specifies the user's user ID. This is stored in the uid LDAP attribute.
        emailAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's email address. This is stored in the mail LDAP attribute.
        workTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.
        homeTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.
        mobileTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.
        pagerTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.
        inheritDefaultRootPrivileges:
          type: boolean
          description: >-
              Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.
        privilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumroot-dn-user-privilegeProp'
        searchResultEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.
        timeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.
        lookThroughEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.
        idleTimeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.
        passwordPolicy:
          type: string
          description: >-
              Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.
        disabled:
          type: boolean
          description: >-
              Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.
        accountActivationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.
        accountExpirationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.
        requireSecureAuthentication:
          type: boolean
          description: >-
              Indicates whether this User must authenticate in a secure manner. When set to "true", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).
        requireSecureConnections:
          type: boolean
          description: >-
              Indicates whether this User must be required to communicate with the server over a secure connection. When set to "true", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).
        allowedAuthenticationType:
          type: array
          items:
            type: string
          description: >-
              Indicates that User should only be allowed to authenticate in certain ways. Allowed values include "simple" (to indicate that the user should be allowed to bind using simple authentication) or "sasl {mech}" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like "sasl PLAIN"). The list of available SASL mechanisms can be retrieved by running "dsconfig --advanced list-sasl-mechanism-handlers".
        allowedAuthenticationIPAddress:
          type: array
          items:
            type: string
          description: >-
              An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.
        preferredOTPDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.
        isProxyable:
          $ref: '#/components/schemas/Enumroot-dn-user-isProxyableProp'
        isProxyableByDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByGroup:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByURL:
          type: array
          items:
            type: string
          description: >-
              Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        mayProxyAsDN:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries with the specified DNs.
        mayProxyAsGroup:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.
        mayProxyAsURL:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.
    Enumroot-dn-userSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:root-dn-user"
    Enumroot-dn-user-isProxyableProp:
      type: string
      enum:
      - "allowed"
      - "prohibited"
      - "required"
      description: >-
          This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).
    Enumroot-dn-defaultRootPrivilegeNameProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the names of the privileges that root users will be granted by default.
    Enumroot-dn-user-privilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "-audit-data-security"
      - "bypass-acl"
      - "-bypass-acl"
      - "bypass-read-acl"
      - "-bypass-read-acl"
      - "modify-acl"
      - "-modify-acl"
      - "config-read"
      - "-config-read"
      - "config-write"
      - "-config-write"
      - "jmx-read"
      - "-jmx-read"
      - "jmx-write"
      - "-jmx-write"
      - "jmx-notify"
      - "-jmx-notify"
      - "ldif-import"
      - "-ldif-import"
      - "ldif-export"
      - "-ldif-export"
      - "backend-backup"
      - "-backend-backup"
      - "backend-restore"
      - "-backend-restore"
      - "server-shutdown"
      - "-server-shutdown"
      - "server-restart"
      - "-server-restart"
      - "proxied-auth"
      - "-proxied-auth"
      - "disconnect-client"
      - "-disconnect-client"
      - "password-reset"
      - "-password-reset"
      - "update-schema"
      - "-update-schema"
      - "privilege-change"
      - "-privilege-change"
      - "unindexed-search"
      - "-unindexed-search"
      - "unindexed-search-with-control"
      - "-unindexed-search-with-control"
      - "bypass-pw-policy"
      - "-bypass-pw-policy"
      - "lockdown-mode"
      - "-lockdown-mode"
      - "stream-values"
      - "-stream-values"
      - "third-party-task"
      - "-third-party-task"
      - "use-admin-session"
      - "-use-admin-session"
      - "soft-delete-read"
      - "-soft-delete-read"
      - "metrics-read"
      - "-metrics-read"
      - "remote-log-read"
      - "-remote-log-read"
      - "manage-topology"
      - "-manage-topology"
      - "permit-get-password-policy-state-issues"
      - "-permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "-permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "-permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "-permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "-permit-forwarding-client-connection-policy"
      - "exec-task"
      - "-exec-task"
      - "collect-support-data"
      - "-collect-support-data"
      - "file-servlet-access"
      - "-file-servlet-access"
      - "permit-replace-certificate-request"
      - "-permit-replace-certificate-request"
      description: >-
          Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
    add-blind-trust-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Trust Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/blind-trust-manager-provider-shared'
    blind-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Trust Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/blind-trust-manager-provider-shared'
    blind-trust-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumblind-trust-manager-providerSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicate whether the Trust Manager Provider is enabled for use.
        includeJVMDefaultIssuers:
          type: boolean
          description: >-
              Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.
      required:
      - schemas
      - enabled
    Enumblind-trust-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:blind"
    add-file-based-trust-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Trust Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/file-based-trust-manager-provider-shared'
    file-based-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Trust Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-trust-manager-provider-shared'
    file-based-trust-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-trust-manager-providerSchemaUrn'
        trustStoreFile:
          type: string
          description: >-
              Specifies the path to the file containing the trust information. It can be an absolute path or a path that is relative to the Directory Server instance root.
        trustStoreType:
          type: string
          description: >-
              Specifies the format for the data in the trust store file.
        trustStorePin:
          type: string
          format: password
          description: >-
              Specifies the clear-text PIN needed to access the File Based Trust Manager Provider.
        trustStorePinFile:
          type: string
          description: >-
              Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Trust Manager Provider.
        trustStorePinPassphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Trust Manager Provider.
        enabled:
          type: boolean
          description: >-
              Indicate whether the Trust Manager Provider is enabled for use.
        includeJVMDefaultIssuers:
          type: boolean
          description: >-
              Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.
      required:
      - schemas
      - trustStoreFile
      - enabled
    Enumfile-based-trust-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:file-based"
    add-jvm-default-trust-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Trust Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/jvm-default-trust-manager-provider-shared'
    jvm-default-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Trust Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jvm-default-trust-manager-provider-shared'
    jvm-default-trust-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjvm-default-trust-manager-providerSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicate whether the Trust Manager Provider is enabled for use.
      required:
      - schemas
      - enabled
    Enumjvm-default-trust-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:jvm-default"
    add-third-party-trust-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Trust Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-trust-manager-provider-shared'
    third-party-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Trust Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-trust-manager-provider-shared'
    third-party-trust-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-trust-manager-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Trust Manager Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Trust Manager Provider. Each configuration property should be given in the form 'name=value'.
        enabled:
          type: boolean
          description: >-
              Indicate whether the Trust Manager Provider is enabled for use.
        includeJVMDefaultIssuers:
          type: boolean
          description: >-
              Indicates whether certificates issued by an authority included in the JVM's set of default issuers should be automatically trusted, even if they would not otherwise be trusted by this provider.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-trust-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:third-party"
    add-key-pair-request:
      allOf:
      - type: object
        properties:
          pairName:
            description: Name of the new Key Pair
            type: string
        required:
        - pairName
      - $ref: '#/components/schemas/key-pair-shared'
    key-pair-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Key Pair
            type: string
        required:
        - id
      - $ref: '#/components/schemas/key-pair-shared'
      required:
      - keyAlgorithm
    key-pair-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumkey-pairSchemaUrn'
        keyAlgorithm:
          $ref: '#/components/schemas/Enumkey-pair-keyAlgorithmProp'
        selfSignedCertificateValidity:
          type: string
          description: >-
              The validity period for a self-signed certificate. If not specified, the self-signed certificate will be valid for approximately 20 years. This is not used when importing an existing key-pair. The system will not automatically rotate expired certificates. It is up to the administrator to do that when that happens.
        subjectDN:
          type: string
          description: >-
              The DN that should be used as the subject for the self-signed certificate and certificate signing request. This is not used when importing an existing key-pair.
        certificateChain:
          type: string
          description: >-
              The PEM-encoded X.509 certificate chain.
        privateKey:
          type: string
          format: password
          description: >-
              The base64-encoded private key that is encrypted using the preferred encryption settings definition.
    Enumkey-pairSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-pair"
    Enumkey-pair-keyAlgorithmProp:
      type: string
      enum:
      - "RSA_2048"
      - "RSA_3072"
      - "RSA_4096"
      - "EC_256"
      - "EC_384"
      - "EC_521"
      description: >-
          The algorithm name and the length in bits of the key, e.g. RSA_2048.
    add-root-dse-request-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Request Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/root-dse-request-criteria-shared'
    root-dse-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Request Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/root-dse-request-criteria-shared'
    root-dse-request-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumroot-dse-request-criteriaSchemaUrn'
        operationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-root-dse-operationTypeProp'
        description:
          type: string
          description: >-
              A description for this Request Criteria
      required:
      - schemas
    Enumroot-dse-request-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:request-criteria:root-dse"
    add-simple-request-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Request Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-request-criteria-shared'
    simple-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Request Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-request-criteria-shared'
    simple-request-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-request-criteriaSchemaUrn'
        operationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-simple-operationTypeProp'
        operationOrigin:
          type: array
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-operationOriginProp'
        connectionCriteria:
          type: string
          description: >-
              Specifies a connection criteria object that must match the associated client connection for operations included in this Simple Request Criteria.
        allIncludedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must contain all of those controls.
        anyIncludedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that may be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must contain at least one of those controls.
        notAllIncludedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that should not be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must not contain at least one of those controls (that is, the request may contain zero or more of those controls, but not all of them).
        noneIncludedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must not be present in the request from the client for operations included in this Simple Request Criteria. If any control OIDs are provided, then the request must not contain any of those controls.
        includedTargetEntryDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which targeted entries may exist for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations.
        excludedTargetEntryDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which targeted entries may not exist for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations.
        allIncludedTargetEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must match all of those filters.
        anyIncludedTargetEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that may match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must match at least one of those filters.
        notAllIncludedTargetEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that should not match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must not match at least one of those filters (that is, the request may match zero or more of those filters, but not of all of them).
        noneIncludedTargetEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must not match the target entry for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any filters are provided, then the target entry must not match any of those filters.
        allIncludedTargetEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the target entry must be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must be a member of all of those groups.
        anyIncludedTargetEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the target entry may be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must be a member of at least one of those groups.
        notAllIncludedTargetEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the target entry should not be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must not be a member of at least one of those groups (that is, the target entry may be a member of zero or more of those groups, but not all of them).
        noneIncludedTargetEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the target entry must not be a member for requests included in this Simple Request Criteria. This will only be taken into account for add, simple bind, compare, delete, modify, modify DN, and search operations. It will be ignored for abandon, SASL bind, extended, and unbind operations. If any group DNs are provided, then the target entry must not be a member of any of those groups.
        targetBindType:
          type: array
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-targetBindTypeProp'
        includedTargetSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism for bind requests included in this Simple Request Criteria. This will only be taken into account for SASL bind operations and will be ignored for other types of operations and for bind operations that do not use SASL authentication.
        excludedTargetSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a SASL mechanism for bind requests excluded from this Simple Request Criteria. This will only be taken into account for SASL bind operations and will be ignored for other types of operations and for bind operations that do not use SASL authentication.
        includedTargetAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the name or OID of an attribute type which must be targeted by requests included in this Simple Request Criteria. This will only be taken into account for add, compare, modify, modify DN, and search operations. It will be ignored for abandon, bind, delete, extended, and unbind operations.
        excludedTargetAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the name or OID of an attribute type which must not be targeted by requests included in this Simple Request Criteria. This will only be taken into account for add, compare, modify, modify DN, and search operations. It will be ignored for abandon, bind, delete, extended, and unbind operations.
        includedExtendedOperationOID:
          type: array
          items:
            type: string
          description: >-
              Specifies the request OID for extended requests included in this Simple Request Criteria. This will only be taken into account for extended requests and will be ignored for all other types of requests.
        excludedExtendedOperationOID:
          type: array
          items:
            type: string
          description: >-
              Specifies the request OID for extended requests excluded from this Simple Request Criteria. This will only be taken into account for extended requests and will be ignored for all other types of requests.
        includedSearchScope:
          type: array
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-includedSearchScopeProp'
        usingAdministrativeSessionWorkerThread:
          $ref: '#/components/schemas/Enumrequest-criteria-usingAdministrativeSessionWorkerThreadProp'
        includedApplicationName:
          type: array
          items:
            type: string
          description: >-
              Specifies an application name for requests included in this Simple Request Criteria.
        excludedApplicationName:
          type: array
          items:
            type: string
          description: >-
              Specifies an application name for requests excluded from this Simple Request Criteria.
        description:
          type: string
          description: >-
              A description for this Request Criteria
      required:
      - schemas
    Enumsimple-request-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:request-criteria:simple"
    add-aggregate-request-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Request Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/aggregate-request-criteria-shared'
    aggregate-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Request Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-request-criteria-shared'
    aggregate-request-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-request-criteriaSchemaUrn'
        allIncludedRequestCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a request criteria object that must match the associated operation request in order to match the aggregate request criteria. If one or more all-included request criteria objects are provided, then an operation request must match all of them in order to match the aggregate request criteria.
        anyIncludedRequestCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a request criteria object that may match the associated operation request in order to the this aggregate request criteria. If one or more any-included request criteria objects are provided, then an operation request must match at least one of them in order to match the aggregate request criteria.
        notAllIncludedRequestCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a request criteria object that should not match the associated operation request in order to match the aggregate request criteria. If one or more not-all-included request criteria objects are provided, then an operation request must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate request criteria.
        noneIncludedRequestCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a request criteria object that must not match the associated operation request in order to match the aggregate request criteria. If one or more none-included request criteria objects are provided, then an operation request must not match any of them in order to match the aggregate request criteria.
        description:
          type: string
          description: >-
              A description for this Request Criteria
      required:
      - schemas
    Enumaggregate-request-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:request-criteria:aggregate"
    add-third-party-request-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Request Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-request-criteria-shared'
    third-party-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Request Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-request-criteria-shared'
    third-party-request-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-request-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Request Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Request Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Request Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-request-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:request-criteria:third-party"
    Enumrequest-criteria-root-dse-operationTypeProp:
      type: string
      enum:
      - "compare"
      - "base-object-search"
      - "single-level-search"
      - "whole-subtree-search"
      - "subordinate-subtree-search"
      description: >-
          The types of operations that may be matched by this Root DSE Request Criteria.
    Enumrequest-criteria-usingAdministrativeSessionWorkerThreadProp:
      type: string
      enum:
      - "true"
      - "false"
      - "any"
      description: >-
          Indicates whether operations being processed using a dedicated administrative session worker thread should be included in this Simple Request Criteria.
    Enumrequest-criteria-simple-operationTypeProp:
      type: string
      enum:
      - "abandon"
      - "add"
      - "bind"
      - "compare"
      - "delete"
      - "extended"
      - "modify"
      - "modify-dn"
      - "search"
      - "unbind"
      description: >-
          Specifies the operation type(s) for operations that should be included in this Simple Request Criteria.
    Enumrequest-criteria-includedSearchScopeProp:
      type: string
      enum:
      - "base-object"
      - "single-level"
      - "whole-subtree"
      - "subordinate-subtree"
      description: >-
          Specifies the search scope values included in this Simple Request Criteria. This will only be taken into account for search requests and will be ignored for all other types of requests.
    Enumrequest-criteria-targetBindTypeProp:
      type: string
      enum:
      - "simple"
      - "sasl"
      description: >-
          Specifies the authentication type for bind requests included in this Simple Request Criteria. This will only be taken into account for bind operations and will be ignored for any other type of operation. If no values are provided, then the authentication type will not be considered when determining whether the request should be included in this Simple Request Criteria.
    Enumrequest-criteria-operationOriginProp:
      type: string
      enum:
      - "external-request"
      - "internal-operation"
      - "replicated-operation"
      description: >-
          Specifies the origin for operations to be included in this Simple Request Criteria. If no values are provided, then the operation origin will not be taken into consideration when determining whether an operation matches this Simple Request Criteria.
    add-time-limit-log-rotation-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/time-limit-log-rotation-policy-shared'
    time-limit-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/time-limit-log-rotation-policy-shared'
    time-limit-log-rotation-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtime-limit-log-rotation-policySchemaUrn'
        rotationInterval:
          type: string
          description: >-
              Specifies the time interval between rotations.
        description:
          type: string
          description: >-
              A description for this Log Rotation Policy
      required:
      - schemas
      - rotationInterval
    Enumtime-limit-log-rotation-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:time-limit"
    add-fixed-time-log-rotation-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/fixed-time-log-rotation-policy-shared'
    fixed-time-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/fixed-time-log-rotation-policy-shared'
    fixed-time-log-rotation-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfixed-time-log-rotation-policySchemaUrn'
        timeOfDay:
          type: array
          items:
            type: string
          description: >-
              Specifies the time of day at which log rotation should occur.
        description:
          type: string
          description: >-
              A description for this Log Rotation Policy
      required:
      - schemas
      - timeOfDay
    Enumfixed-time-log-rotation-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:fixed-time"
    add-never-rotate-log-rotation-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/never-rotate-log-rotation-policy-shared'
    never-rotate-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/never-rotate-log-rotation-policy-shared'
    never-rotate-log-rotation-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnever-rotate-log-rotation-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Log Rotation Policy
      required:
      - schemas
    Enumnever-rotate-log-rotation-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:never-rotate"
    add-size-limit-log-rotation-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Rotation Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/size-limit-log-rotation-policy-shared'
    size-limit-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Rotation Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/size-limit-log-rotation-policy-shared'
    size-limit-log-rotation-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsize-limit-log-rotation-policySchemaUrn'
        fileSizeLimit:
          type: string
          description: >-
              Specifies the maximum size that a log file can reach before it is rotated.
        description:
          type: string
          description: >-
              A description for this Log Rotation Policy
      required:
      - schemas
      - fileSizeLimit
    Enumsize-limit-log-rotation-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:size-limit"
    json-log-field-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumjson-log-field-syntaxSchemaUrn'
          id:
            description: Name of the Log Field Syntax
            type: string
          includedSensitiveField:
            type: array
            items:
              type: string
            description: >-
                The names of the JSON fields that will be considered sensitive.
          excludedSensitiveField:
            type: array
            items:
              type: string
            description: >-
                The names of the JSON fields that will not be considered sensitive.
          description:
            type: string
            description: >-
                A description for this Log Field Syntax
          defaultBehavior:
            $ref: '#/components/schemas/Enumlog-field-syntax-defaultBehaviorProp'
        required:
        - schemas
        - id
    Enumjson-log-field-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:json"
    attribute-based-log-field-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumattribute-based-log-field-syntaxSchemaUrn'
          id:
            description: Name of the Log Field Syntax
            type: string
          includedSensitiveAttribute:
            type: array
            items:
              type: string
            description: >-
                The set of attribute types that will be considered sensitive.
          excludedSensitiveAttribute:
            type: array
            items:
              type: string
            description: >-
                The set of attribute types that will not be considered sensitive.
          description:
            type: string
            description: >-
                A description for this Log Field Syntax
          defaultBehavior:
            $ref: '#/components/schemas/Enumlog-field-syntax-defaultBehaviorProp'
        required:
        - schemas
        - id
    Enumattribute-based-log-field-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:attribute-based"
    generic-log-field-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneric-log-field-syntaxSchemaUrn'
          id:
            description: Name of the Log Field Syntax
            type: string
          description:
            type: string
            description: >-
                A description for this Log Field Syntax
          defaultBehavior:
            $ref: '#/components/schemas/Enumlog-field-syntax-defaultBehaviorProp'
        required:
        - schemas
        - id
    Enumgeneric-log-field-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-field-syntax:generic"
    Enumlog-field-syntax-defaultBehaviorProp:
      type: string
      enum:
      - "preserve"
      - "omit"
      - "redact-entire-value"
      - "redact-value-components"
      - "tokenize-entire-value"
      - "tokenize-value-components"
      description: >-
          The default behavior that the server should exhibit when logging fields with this syntax. This may be overridden on a per-field basis.
    cancel-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcancel-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumcancel-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:cancel"
    add-validate-totp-password-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-shared'
    validate-totp-password-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-shared'
    validate-totp-password-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvalidate-totp-password-extended-operation-handlerSchemaUrn'
        sharedSecretAttributeType:
          type: string
          description: >-
              The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
        timeIntervalDuration:
          type: string
          description: >-
              The duration of the time interval used for TOTP processing.
        adjacentIntervalsToCheck:
          type: integer
          description: >-
              The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.
        preventTOTPReuse:
          type: boolean
          description: >-
              Indicates whether to prevent clients from re-using TOTP passwords.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - enabled
    Enumvalidate-totp-password-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:validate-totp-password"
    add-replace-certificate-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-shared'
    replace-certificate-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-shared'
    replace-certificate-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreplace-certificate-extended-operation-handlerSchemaUrn'
        allowRemotelyProvidedCertificates:
          type: boolean
          description: >-
              Indicates whether clients should be allowed to directly provide a new listener or inter-server certificate chain in the extended request.
        allowedOperation:
          type: array
          items:
            $ref: '#/components/schemas/Enumextended-operation-handler-allowedOperationProp'
        connectionCriteria:
          type: string
          description: >-
              A set of criteria that client connections must satisfy before they will be allowed to request the associated extended operations.
        requestCriteria:
          type: string
          description: >-
              A set of criteria that the extended requests must satisfy before they will be processed by the server.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - enabled
    Enumreplace-certificate-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:replace-certificate"
    get-connection-id-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumget-connection-id-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumget-connection-id-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-connection-id"
    multi-update-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummulti-update-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enummulti-update-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:multi-update"
    notification-subscription-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumnotification-subscription-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumnotification-subscription-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:notification-subscription"
    password-modify-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumpassword-modify-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that should be used in conjunction with the password modify extended operation.
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumpassword-modify-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-modify"
    custom-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumcustom-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:custom"
    add-collect-support-data-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-shared'
    collect-support-data-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-shared'
    collect-support-data-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcollect-support-data-extended-operation-handlerSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - enabled
    Enumcollect-support-data-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:collect-support-data"
    add-export-reversible-passwords-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-shared'
    export-reversible-passwords-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-shared'
    export-reversible-passwords-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexport-reversible-passwords-extended-operation-handlerSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - enabled
    Enumexport-reversible-passwords-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:export-reversible-passwords"
    batched-transactions-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbatched-transactions-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumbatched-transactions-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:batched-transactions"
    get-changelog-batch-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumget-changelog-batch-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumget-changelog-batch-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-changelog-batch"
    get-supported-otp-delivery-mechanisms-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumget-supported-otp-delivery-mechanisms-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumget-supported-otp-delivery-mechanisms-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-supported-otp-delivery-mechanisms"
    add-single-use-tokens-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-shared'
    single-use-tokens-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-shared'
    single-use-tokens-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsingle-use-tokens-extended-operation-handlerSchemaUrn'
        passwordGenerator:
          type: string
          description: >-
              The password generator that will be used to create the single-use token values to be delivered to the end user.
        defaultOTPDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              The set of delivery mechanisms that may be used to deliver single-use tokens to users in requests that do not specify one or more preferred delivery mechanisms.
        defaultSingleUseTokenValidityDuration:
          type: string
          description: >-
              The default length of time that a single-use token will be considered valid by the server if the client doesn't specify a duration in the deliver single-use token request.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - passwordGenerator
      - defaultOTPDeliveryMechanism
      - enabled
    Enumsingle-use-tokens-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:single-use-tokens"
    generate-password-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgenerate-password-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          defaultPasswordPolicy:
            type: string
            description: >-
                The default password policy that should be used when generating and validating passwords if the request does not specify an alternate policy. If this is not provided, then this Generate Password Extended Operation Handler will use the default password policy defined in the global configuration.
          defaultPasswordGenerator:
            type: string
            description: >-
                The default password generator that will be used if the selected password policy is not configured with a password generator.
          maximumPasswordsPerRequest:
            type: integer
            description: >-
                The maximum number of passwords that may be generated and returned to the client for a single request.
          maximumValidationAttemptsPerPassword:
            type: integer
            description: >-
                The maximum number of attempts that the server may use to generate a password that passes validation.
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - defaultPasswordGenerator
        - enabled
        - id
    Enumgenerate-password-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:generate-password"
    who-am-i-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumwho-am-i-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumwho-am-i-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:who-am-i"
    start-tls-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumstart-tls-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumstart-tls-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:start-tls"
    add-deliver-password-reset-token-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-shared'
    deliver-password-reset-token-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-shared'
      required:
      - passwordResetTokenValidityDuration
    deliver-password-reset-token-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdeliver-password-reset-token-extended-operation-handlerSchemaUrn'
        passwordGenerator:
          type: string
          description: >-
              The password generator that will be used to create the password reset token values to be delivered to the end user.
        defaultTokenDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              The set of delivery mechanisms that may be used to deliver password reset tokens to users for requests that do not specify one or more preferred delivery mechanisms.
        passwordResetTokenValidityDuration:
          type: string
          description: >-
              The maximum length of time that a password reset token should be considered valid.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - passwordGenerator
      - defaultTokenDeliveryMechanism
      - enabled
    Enumdeliver-password-reset-token-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-password-reset-token"
    password-policy-state-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumpassword-policy-state-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumpassword-policy-state-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-policy-state"
    get-password-quality-requirements-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumget-password-quality-requirements-extended-operation-handlerSchemaUrn'
          id:
            description: Name of the Extended Operation Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Extended Operation Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
        required:
        - schemas
        - enabled
        - id
    Enumget-password-quality-requirements-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-password-quality-requirements"
    add-deliver-otp-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-shared'
    deliver-otp-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-shared'
    deliver-otp-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdeliver-otp-extended-operation-handlerSchemaUrn'
        identityMapper:
          type: string
          description: >-
              The identity mapper that should be used to identify the user(s) targeted by the authentication identity contained in the extended request. This will only be used for "u:"-style authentication identities.
        passwordGenerator:
          type: string
          description: >-
              The password generator that will be used to create the one-time password values to be delivered to the end user.
        defaultOTPDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              The set of delivery mechanisms that may be used to deliver one-time passwords to users in requests that do not specify one or more preferred delivery mechanisms.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - identityMapper
      - passwordGenerator
      - defaultOTPDeliveryMechanism
      - enabled
    Enumdeliver-otp-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-otp"
    add-third-party-extended-operation-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Extended Operation Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-extended-operation-handler-shared'
    third-party-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Extended Operation Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-extended-operation-handler-shared'
    third-party-extended-operation-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-extended-operation-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Extended Operation Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Extended Operation Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Extended Operation Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-extended-operation-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:third-party"
    Enumextended-operation-handler-allowedOperationProp:
      type: string
      enum:
      - "replace-listener-certificate"
      - "replace-inter-server-certificate"
      - "purge-retired-listener-certificates"
      - "purge-retired-inter-server-certificates"
      description: >-
          The types of replace certificate operations that clients will be allowed to request.
    add-default-azure-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Azure Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/default-azure-authentication-method-shared'
    default-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Azure Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/default-azure-authentication-method-shared'
    default-azure-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdefault-azure-authentication-methodSchemaUrn'
        tenantID:
          type: string
          description: >-
              The tenant ID to use to authenticate. If this is not provided, then it will be obtained from the AZURE_TENANT_ID environment variable.
        clientID:
          type: string
          description: >-
              The client ID to use to authenticate. If this is not provided, then it will be obtained from the AZURE_CLIENT_ID
        description:
          type: string
          description: >-
              A description for this Azure Authentication Method
      required:
      - schemas
    Enumdefault-azure-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:default"
    add-client-secret-azure-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Azure Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/client-secret-azure-authentication-method-shared'
    client-secret-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Azure Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/client-secret-azure-authentication-method-shared'
    client-secret-azure-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumclient-secret-azure-authentication-methodSchemaUrn'
        tenantID:
          type: string
          description: >-
              The tenant ID to use to authenticate.
        clientID:
          type: string
          description: >-
              The client ID to use to authenticate.
        clientSecret:
          type: string
          format: password
          description: >-
              The client secret to use to authenticate.
        description:
          type: string
          description: >-
              A description for this Azure Authentication Method
      required:
      - schemas
      - tenantID
      - clientID
      - clientSecret
    Enumclient-secret-azure-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:client-secret"
    add-username-password-azure-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Azure Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/username-password-azure-authentication-method-shared'
    username-password-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Azure Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/username-password-azure-authentication-method-shared'
    username-password-azure-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumusername-password-azure-authentication-methodSchemaUrn'
        tenantID:
          type: string
          description: >-
              The tenant ID to use to authenticate.
        clientID:
          type: string
          description: >-
              The client ID to use to authenticate.
        username:
          type: string
          description: >-
              The username for the user to authenticate.
        password:
          type: string
          format: password
          description: >-
              The password for the user to authenticate.
        description:
          type: string
          description: >-
              A description for this Azure Authentication Method
      required:
      - schemas
      - tenantID
      - clientID
      - username
      - password
    Enumusername-password-azure-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:username-password"
    add-environment-variable-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
    environment-variable-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
    environment-variable-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumenvironment-variable-passphrase-providerSchemaUrn'
        environmentVariable:
          type: string
          description: >-
              The name of the environment variable that is expected to hold the passphrase.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - environmentVariable
      - enabled
    Enumenvironment-variable-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:environment-variable"
    add-amazon-secrets-manager-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
    amazon-secrets-manager-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
    amazon-secrets-manager-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-passphrase-providerSchemaUrn'
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the AWS Secrets Manager.
        secretID:
          type: string
          description: >-
              The Amazon Resource Name (ARN) or the user-friendly name of the secret to be retrieved.
        secretFieldName:
          type: string
          description: >-
              The name of the JSON field whose value is the passphrase that will be retrieved.
        secretVersionID:
          type: string
          description: >-
              The unique identifier for the version of the secret to be retrieved.
        secretVersionStage:
          type: string
          description: >-
              The staging label for the version of the secret to be retrieved.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - awsExternalServer
      - secretID
      - secretFieldName
      - enabled
    Enumamazon-secrets-manager-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:amazon-secrets-manager"
    add-obscured-value-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
    obscured-value-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
    obscured-value-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumobscured-value-passphrase-providerSchemaUrn'
        obscuredValue:
          type: string
          format: password
          description: >-
              The value to be stored in an obscured form.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - obscuredValue
      - enabled
    Enumobscured-value-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:obscured-value"
    add-azure-key-vault-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
    azure-key-vault-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
    azure-key-vault-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-passphrase-providerSchemaUrn'
        keyVaultURI:
          type: string
          description: >-
              The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Azure service.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
        secretName:
          type: string
          description: >-
              The name of the secret to retrieve.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Azure Key Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from the Azure service.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - secretName
      - enabled
    Enumazure-key-vault-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:azure-key-vault"
    add-file-based-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
    file-based-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
    file-based-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-passphrase-providerSchemaUrn'
        passwordFile:
          type: string
          description: >-
              The path to the file containing the passphrase.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from the target file. A value of zero seconds indicates that the provider should always attempt to read the passphrase from the file.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - passwordFile
      - enabled
    Enumfile-based-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:file-based"
    add-conjur-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
    conjur-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
    conjur-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-passphrase-providerSchemaUrn'
        conjurExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Conjur instance containing the passphrase.
        conjurSecretRelativePath:
          type: string
          description: >-
              The portion of the path that follows the account name in the URI needed to obtain the desired secret. Any special characters in the path must be URL-encoded.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Conjur. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Conjur.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - conjurExternalServer
      - conjurSecretRelativePath
      - enabled
    Enumconjur-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:conjur"
    add-vault-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
    vault-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
    vault-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-passphrase-providerSchemaUrn'
        vaultExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
        vaultSecretPath:
          type: string
          description: >-
              The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
        vaultSecretFieldName:
          type: string
          description: >-
              The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
        maxCacheDuration:
          type: string
          description: >-
              The maximum length of time that the passphrase provider may cache the passphrase that has been read from Vault. A value of zero seconds indicates that the provider should always attempt to read the passphrase from Vault.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - vaultExternalServer
      - vaultSecretPath
      - vaultSecretFieldName
      - enabled
    Enumvault-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:vault"
    add-third-party-passphrase-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Passphrase Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
    third-party-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Passphrase Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
    third-party-passphrase-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-passphrase-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Passphrase Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Passphrase Provider. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Passphrase Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Passphrase Provider is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-passphrase-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:passphrase-provider:third-party"
    add-soft-delete-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Soft Delete Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/soft-delete-policy-shared'
    soft-delete-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Soft Delete Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/soft-delete-policy-shared'
    soft-delete-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsoft-delete-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Soft Delete Policy
        autoSoftDeleteConnectionCriteria:
          type: string
          description: >-
              Connection criteria used to automatically identify a delete operation for processing as a soft delete request.
        autoSoftDeleteRequestCriteria:
          type: string
          description: >-
              Request criteria used to automatically identify a delete operation for processing as a soft delete request.
        softDeleteRetentionTime:
          type: string
          description: >-
              Specifies the maximum length of time that soft delete entries are retained before they are eligible to purged automatically.
        softDeleteRetainNumberOfEntries:
          type: integer
          description: >-
              Specifies the number of soft deleted entries to retain before the oldest entries are purged.
    Enumsoft-delete-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:soft-delete-policy"
    add-recurring-task-chain-request:
      allOf:
      - type: object
        properties:
          chainName:
            description: Name of the new Recurring Task Chain
            type: string
        required:
        - chainName
      - $ref: '#/components/schemas/recurring-task-chain-shared'
    recurring-task-chain-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task Chain
            type: string
        required:
        - id
      - $ref: '#/components/schemas/recurring-task-chain-shared'
      required:
      - enabled
      - scheduledMonth
    recurring-task-chain-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chainSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Recurring Task Chain
        enabled:
          type: boolean
          description: >-
              Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually canceled if desired.
        recurringTask:
          type: array
          items:
            type: string
          description: >-
              The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given, then the task instances will be invoked in the order in which they are listed.
        scheduledMonth:
          type: array
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledMonthProp'
        scheduledDateSelectionType:
          $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDateSelectionTypeProp'
        scheduledDayOfTheWeek:
          type: array
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDayOfTheWeekProp'
        scheduledDayOfTheMonth:
          type: array
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDayOfTheMonthProp'
        scheduledTimeOfDay:
          type: array
          items:
            type: string
          description: >-
              The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
        timeZone:
          type: string
          description: >-
              The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's default time zone will be used.
        interruptedByShutdownBehavior:
          $ref: '#/components/schemas/Enumrecurring-task-chain-interruptedByShutdownBehaviorProp'
        serverOfflineAtStartTimeBehavior:
          $ref: '#/components/schemas/Enumrecurring-task-chain-serverOfflineAtStartTimeBehaviorProp'
      required:
      - recurringTask
      - scheduledDateSelectionType
      - scheduledTimeOfDay
    Enumrecurring-task-chainSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task-chain"
    Enumrecurring-task-chain-scheduledDayOfTheMonthProp:
      type: string
      enum:
      - "day-01"
      - "day-02"
      - "day-03"
      - "day-04"
      - "day-05"
      - "day-06"
      - "day-07"
      - "day-08"
      - "day-09"
      - "day-10"
      - "day-11"
      - "day-12"
      - "day-13"
      - "day-14"
      - "day-15"
      - "day-16"
      - "day-17"
      - "day-18"
      - "day-19"
      - "day-20"
      - "day-21"
      - "day-22"
      - "day-23"
      - "day-24"
      - "day-25"
      - "day-26"
      - "day-27"
      - "day-28"
      - "day-29"
      - "day-30"
      - "day-31"
      - "next-to-last-day-of-the-month"
      - "last-day-of-the-month"
      description: >-
          The specific days of the month on which instances of this Recurring Task Chain may be scheduled to start. If the scheduled-day-selection-type property has a value of selected-days-of-the-month, then this property must have one or more values; otherwise, it must be left undefined.
    Enumrecurring-task-chain-scheduledDateSelectionTypeProp:
      type: string
      enum:
      - "every-day"
      - "selected-days-of-the-week"
      - "selected-days-of-the-month"
      description: >-
          The mechanism used to determine the dates on which instances of this Recurring Task Chain may be scheduled to start.
    Enumrecurring-task-chain-scheduledDayOfTheWeekProp:
      type: string
      enum:
      - "every-sunday"
      - "every-monday"
      - "every-tuesday"
      - "every-wednesday"
      - "every-thursday"
      - "every-friday"
      - "every-saturday"
      - "first-sunday-of-the-month"
      - "first-monday-of-the-month"
      - "first-tuesday-of-the-month"
      - "first-wednesday-of-the-month"
      - "first-thursday-of-the-month"
      - "first-friday-of-the-month"
      - "first-saturday-of-the-month"
      - "second-sunday-of-the-month"
      - "second-monday-of-the-month"
      - "second-tuesday-of-the-month"
      - "second-wednesday-of-the-month"
      - "second-thursday-of-the-month"
      - "second-friday-of-the-month"
      - "second-saturday-of-the-month"
      - "third-sunday-of-the-month"
      - "third-monday-of-the-month"
      - "third-tuesday-of-the-month"
      - "third-wednesday-of-the-month"
      - "third-thursday-of-the-month"
      - "third-friday-of-the-month"
      - "third-saturday-of-the-month"
      - "fourth-sunday-of-the-month"
      - "fourth-monday-of-the-month"
      - "fourth-tuesday-of-the-month"
      - "fourth-wednesday-of-the-month"
      - "fourth-thursday-of-the-month"
      - "fourth-friday-of-the-month"
      - "fourth-saturday-of-the-month"
      - "fifth-sunday-of-the-month"
      - "fifth-monday-of-the-month"
      - "fifth-tuesday-of-the-month"
      - "fifth-wednesday-of-the-month"
      - "fifth-thursday-of-the-month"
      - "fifth-friday-of-the-month"
      - "fifth-saturday-of-the-month"
      - "last-sunday-of-the-month"
      - "last-monday-of-the-month"
      - "last-tuesday-of-the-month"
      - "last-wednesday-of-the-month"
      - "last-thursday-of-the-month"
      - "last-friday-of-the-month"
      - "last-saturday-of-the-month"
      description: >-
          The specific days of the week on which instances of this Recurring Task Chain may be scheduled to start. If the scheduled-day-selection-type property has a value of selected-days-of-the-week, then this property must have one or more values; otherwise, it must be left undefined.
    Enumrecurring-task-chain-interruptedByShutdownBehaviorProp:
      type: string
      enum:
      - "cancel-interrupted-task-and-dependencies"
      - "cancel-only-interrupted-task-but-preserve-dependencies"
      description: >-
          Specifies the behavior that the server should exhibit if it is shut down or abnormally terminated while an instance of this Recurring Task Chain is running.
    Enumrecurring-task-chain-scheduledMonthProp:
      type: string
      enum:
      - "january"
      - "february"
      - "march"
      - "april"
      - "may"
      - "june"
      - "july"
      - "august"
      - "september"
      - "october"
      - "november"
      - "december"
      description: >-
          The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
    Enumrecurring-task-chain-serverOfflineAtStartTimeBehaviorProp:
      type: string
      enum:
      - "run-immediately-upon-server-startup"
      - "cancel-iteration-and-wait-for-next-scheduled-start-time"
      description: >-
          Specifies the behavior that the server should exhibit if it is offline when the start time arrives for the tasks in this Recurring Task Chain.
    add-indicator-gauge-request:
      allOf:
      - type: object
        properties:
          gaugeName:
            description: Name of the new Gauge
            type: string
        required:
        - gaugeName
      - $ref: '#/components/schemas/indicator-gauge-shared'
    indicator-gauge-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Gauge
            type: string
        required:
        - id
      - $ref: '#/components/schemas/indicator-gauge-shared'
      required:
      - enabled
    indicator-gauge-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumindicator-gaugeSchemaUrn'
        gaugeDataSource:
          type: string
          description: >-
              Specifies the source of data to use in determining this Indicator Gauge's severity and status.
        criticalValue:
          type: string
          description: >-
              A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity should be critical.
        majorValue:
          type: string
          description: >-
              A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'major'.
        minorValue:
          type: string
          description: >-
              A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'minor'.
        warningValue:
          type: string
          description: >-
              A regular expression pattern that is used to determine whether the current monitored value indicates this gauge's severity will be 'warning'.
        description:
          type: string
          description: >-
              A description for this Gauge
        enabled:
          type: boolean
          description: >-
              Indicates whether this Gauge is enabled.
        overrideSeverity:
          $ref: '#/components/schemas/Enumgauge-overrideSeverityProp'
        alertLevel:
          $ref: '#/components/schemas/Enumgauge-alertLevelProp'
        updateInterval:
          type: string
          description: >-
              The frequency with which this Gauge is updated.
        samplesPerUpdateInterval:
          type: integer
          description: >-
              Indicates the number of times the monitor data source value will be collected during the update interval.
        includeResource:
          type: array
          items:
            type: string
          description: >-
              Specifies set of resources to be monitored.
        excludeResource:
          type: array
          items:
            type: string
          description: >-
              Specifies resources to exclude from being monitored.
        serverUnavailableSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverUnavailableSeverityLevelProp'
        serverDegradedSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverDegradedSeverityLevelProp'
      required:
      - schemas
      - gaugeDataSource
    Enumindicator-gaugeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:gauge:indicator"
    add-numeric-gauge-request:
      allOf:
      - type: object
        properties:
          gaugeName:
            description: Name of the new Gauge
            type: string
        required:
        - gaugeName
      - $ref: '#/components/schemas/numeric-gauge-shared'
    numeric-gauge-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Gauge
            type: string
        required:
        - id
      - $ref: '#/components/schemas/numeric-gauge-shared'
      required:
      - enabled
    numeric-gauge-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnumeric-gaugeSchemaUrn'
        gaugeDataSource:
          type: string
          description: >-
              Specifies the source of data to use in determining this gauge's current severity.
        criticalValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should be 'critical'.
        criticalExitValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'critical'.
        majorValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should be 'major'.
        majorExitValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'major'.
        minorValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should be 'minor'.
        minorExitValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'minor'.
        warningValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should be 'warning'.
        warningExitValue:
          type: number
          description: >-
              A value that is used to determine whether the current monitored value indicates this gauge's severity should no longer be 'warning'.
        description:
          type: string
          description: >-
              A description for this Gauge
        enabled:
          type: boolean
          description: >-
              Indicates whether this Gauge is enabled.
        overrideSeverity:
          $ref: '#/components/schemas/Enumgauge-overrideSeverityProp'
        alertLevel:
          $ref: '#/components/schemas/Enumgauge-alertLevelProp'
        updateInterval:
          type: string
          description: >-
              The frequency with which this Gauge is updated.
        samplesPerUpdateInterval:
          type: integer
          description: >-
              Indicates the number of times the monitor data source value will be collected during the update interval.
        includeResource:
          type: array
          items:
            type: string
          description: >-
              Specifies set of resources to be monitored.
        excludeResource:
          type: array
          items:
            type: string
          description: >-
              Specifies resources to exclude from being monitored.
        serverUnavailableSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverUnavailableSeverityLevelProp'
        serverDegradedSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverDegradedSeverityLevelProp'
      required:
      - schemas
      - gaugeDataSource
    Enumnumeric-gaugeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:gauge:numeric"
    Enumgauge-overrideSeverityProp:
      type: string
      enum:
      - "normal"
      - "warning"
      - "minor"
      - "major"
      - "critical"
      description: >-
          When defined, causes this Gauge to assume the specified severity, overriding its computed severity. This is useful for testing alarms generated by Gauges as well as suppressing alarms for known conditions.
    Enumgauge-serverDegradedSeverityLevelProp:
      type: string
      enum:
      - "critical"
      - "major"
      - "minor"
      - "warning"
      - "none"
      description: >-
          Specifies the alarm severity level at or above which the server is considered degraded.
    Enumgauge-serverUnavailableSeverityLevelProp:
      type: string
      enum:
      - "critical"
      - "major"
      - "minor"
      - "warning"
      - "none"
      description: >-
          Specifies the alarm severity level at or above which the server is considered unavailable.
    Enumgauge-alertLevelProp:
      type: string
      enum:
      - "always"
      - "warning-and-above"
      - "minor-and-above"
      - "major-and-above"
      - "critical-only"
      - "never"
      description: >-
          Specifies the level at which alerts are sent for alarms raised by this Gauge.
    add-simple-search-reference-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Reference Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-search-reference-criteria-shared'
    simple-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Reference Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-search-reference-criteria-shared'
    simple-search-reference-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-search-reference-criteriaSchemaUrn'
        requestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that must match the associated request for references included in this Simple Search Reference Criteria.
        allIncludedReferenceControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must contain all of those controls.
        anyIncludedReferenceControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that may be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must contain at least one of those controls.
        notAllIncludedReferenceControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that should not be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must not contain at least one of those controls (that is, it may contain zero or more of those controls, but not all of them).
        noneIncludedReferenceControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must not be present in search result references included in this Simple Search Reference Criteria. If any control OIDs are provided, then the reference must not contain any of those controls.
        description:
          type: string
          description: >-
              A description for this Search Reference Criteria
      required:
      - schemas
    Enumsimple-search-reference-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:simple"
    add-aggregate-search-reference-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Reference Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/aggregate-search-reference-criteria-shared'
    aggregate-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Reference Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-search-reference-criteria-shared'
    aggregate-search-reference-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-search-reference-criteriaSchemaUrn'
        allIncludedSearchReferenceCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search reference criteria object that must match the associated search result reference in order to match the aggregate search reference criteria. If one or more all-included search reference criteria objects are provided, then a search result reference must match all of them in order to match the aggregate search reference criteria.
        anyIncludedSearchReferenceCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search reference criteria object that may match the associated search result reference in order to match the aggregate search reference criteria. If one or more any-included search reference criteria objects are provided, then a search result reference must match at least one of them in order to match the aggregate search reference criteria.
        notAllIncludedSearchReferenceCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search reference criteria object that should not match the associated search result reference in order to match the aggregate search reference criteria. If one or more not-all-included search reference criteria objects are provided, then a search result reference must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate search reference criteria.
        noneIncludedSearchReferenceCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search reference criteria object that must not match the associated search result reference in order to match the aggregate search reference criteria. If one or more none-included search reference criteria objects are provided, then a search result reference must not match any of them in order to match the aggregate search reference criteria.
        description:
          type: string
          description: >-
              A description for this Search Reference Criteria
      required:
      - schemas
    Enumaggregate-search-reference-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:aggregate"
    add-third-party-search-reference-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Reference Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-search-reference-criteria-shared'
    third-party-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Reference Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-search-reference-criteria-shared'
    third-party-search-reference-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-search-reference-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Search Reference Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Search Reference Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Search Reference Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-search-reference-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:third-party"
    add-fifo-entry-cache-request:
      allOf:
      - type: object
        properties:
          cacheName:
            description: Name of the new Entry Cache
            type: string
        required:
        - cacheName
      - $ref: '#/components/schemas/fifo-entry-cache-shared'
    fifo-entry-cache-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Entry Cache
            type: string
        required:
        - id
      - $ref: '#/components/schemas/fifo-entry-cache-shared'
    fifo-entry-cache-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfifo-entry-cacheSchemaUrn'
        maxMemoryPercent:
          type: integer
          description: >-
              Specifies the maximum amount of memory, as a percentage of the total maximum JVM heap size, that this cache should occupy when full. If the amount of memory the cache is using is greater than this amount, then an attempt to put a new entry in the cache will be ignored and will cause the oldest entry to be purged.
        maxEntries:
          type: integer
          description: >-
              Specifies the maximum number of entries that will be allowed in the cache. Once the cache reaches this size, then adding new entries will cause existing entries to be purged, starting with the oldest.
        onlyCacheFrequentlyAccessed:
          type: boolean
          description: >-
              Specifies that the cache should only store entries which are accessed much more frequently than the average entry. The cache will observe attempts to place entries in the cache and compare an entry's accesses to the average entry's.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of filters that define the entries that should be included in the cache.
        excludeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of filters that define the entries that should be excluded from the cache.
        minCacheEntryValueCount:
          type: integer
          description: >-
              Specifies the minimum number of attribute values (optionally across a specified subset of attributes as defined in the min-cache-entry-attributes property) for entries that should be held in the cache. Entries with fewer than this number of attribute values will be excluded from the cache.
        minCacheEntryAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the attribute types for which the min-cache-entry-value-count property should apply. If no attribute types are specified, then all user attributes will be examined.
        description:
          type: string
          description: >-
              A description for this Entry Cache
        enabled:
          type: boolean
          description: >-
              Indicates whether the Entry Cache is enabled.
        cacheLevel:
          type: integer
          description: >-
              Specifies the cache level in the cache order if more than one instance of the cache is configured.
        cacheUnindexedSearchResults:
          type: boolean
          description: >-
              Indicates whether the entry cache should be updated with entries that have been returned to the client during the course of processing an unindexed search.
      required:
      - enabled
      - cacheLevel
    Enumfifo-entry-cacheSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:entry-cache:fifo"
    dsee-compat-access-control-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdsee-compat-access-control-handlerSchemaUrn'
          globalACI:
            type: array
            items:
              type: string
            description: >-
                Defines global access control rules.
          allowedBindControl:
            type: array
            items:
              $ref: '#/components/schemas/Enumaccess-control-handler-allowedBindControlProp'
          allowedBindControlOID:
            type: array
            items:
              type: string
            description: >-
                Specifies the OIDs of any additional controls (not covered by the allowed-bind-control property) that should be permitted in bind requests.
          enabled:
            type: boolean
            description: >-
                Indicates whether this Access Control Handler is enabled. If set to FALSE, then no access control is enforced, and any client (including unauthenticated or anonymous clients) could be allowed to perform any operation if not subject to other restrictions, such as those enforced by the privilege subsystem.
        required:
        - enabled
    Enumdsee-compat-access-control-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:access-control-handler:dsee-compat"
    Enumaccess-control-handler-allowedBindControlProp:
      type: string
      enum:
      - "administrative-operation"
      - "authorization-identity"
      - "get-authorization-entry"
      - "get-backend-set-id"
      - "get-password-policy-state-issues"
      - "get-recent-login-history"
      - "get-server-id"
      - "get-user-resource-limits"
      - "intermediate-client"
      - "operation-purpose"
      - "password-policy"
      - "retain-identity"
      - "route-to-backend-set"
      - "route-to-server"
      - "suppress-operational-attribute-update"
      description: >-
          Specifies a set of controls that clients should be allowed to include in bind requests. As bind requests are evaluated as the unauthenticated user, any controls included in this set will be permitted for any bind attempt. If you wish to grant permission for any bind controls not listed here, then the allowed-bind-control-oid property may be used to accomplish that.
    output-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumoutput-alert-handlerSchemaUrn'
          id:
            description: Name of the Alert Handler
            type: string
          outputLocation:
            $ref: '#/components/schemas/Enumalert-handler-outputLocationProp'
          outputFormat:
            $ref: '#/components/schemas/Enumalert-handler-outputFormatProp'
          description:
            type: string
            description: >-
                A description for this Alert Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Alert Handler is enabled.
          asynchronous:
            type: boolean
            description: >-
                Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
          enabledAlertSeverity:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          enabledAlertType:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          disabledAlertType:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
        required:
        - schemas
        - enabled
        - id
    Enumoutput-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:output"
    add-smtp-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/smtp-alert-handler-shared'
    smtp-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/smtp-alert-handler-shared'
      required:
      - messageSubject
      - messageBody
    smtp-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsmtp-alert-handlerSchemaUrn'
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this SMTP Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        senderAddress:
          type: string
          description: >-
              Specifies the email address to use as the sender for messages generated by this alert handler.
        recipientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an email address to which the messages should be sent.
        messageSubject:
          type: string
          description: >-
              Specifies the subject that should be used for email messages generated by this alert handler.
        messageBody:
          type: string
          description: >-
              Specifies the body that should be used for email messages generated by this alert handler.
        includeMonitorDataFilter:
          type: string
          description: >-
              Include monitor entries that match this filter.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - senderAddress
      - recipientAddress
      - enabled
    Enumsmtp-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:smtp"
    add-jmx-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/jmx-alert-handler-shared'
    jmx-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jmx-alert-handler-shared'
    jmx-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjmx-alert-handlerSchemaUrn'
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this JMX Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - enabled
    Enumjmx-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:jmx"
    add-groovy-scripted-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-shared'
    groovy-scripted-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-shared'
    groovy-scripted-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-alert-handlerSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Alert Handler.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Alert Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:groovy-scripted"
    custom-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-alert-handlerSchemaUrn'
          id:
            description: Name of the Alert Handler
            type: string
          description:
            type: string
            description: >-
                A description for this Alert Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the Alert Handler is enabled.
          asynchronous:
            type: boolean
            description: >-
                Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
          enabledAlertSeverity:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          enabledAlertType:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          disabledAlertType:
            type: array
            items:
              $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
        required:
        - schemas
        - enabled
        - id
    Enumcustom-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:custom"
    add-snmp-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/snmp-alert-handler-shared'
    snmp-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/snmp-alert-handler-shared'
      required:
      - serverPort
      - communityName
    snmp-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsnmp-alert-handlerSchemaUrn'
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this SNMP Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        serverHostName:
          type: string
          description: >-
              Specifies the address of the SNMP agent to which traps will be sent.
        serverPort:
          type: integer
          description: >-
              Specifies the port number of the SNMP agent to which traps will be sent.
        communityName:
          type: string
          description: >-
              Specifies the name of the community to which the traps will be sent.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - serverHostName
      - enabled
    Enumsnmp-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp"
    add-twilio-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/twilio-alert-handler-shared'
    twilio-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/twilio-alert-handler-shared'
      required:
      - longMessageBehavior
    twilio-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtwilio-alert-handlerSchemaUrn'
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Twilio Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Twilio service.
        twilioAccountSID:
          type: string
          description: >-
              The unique identifier assigned to the Twilio account that will be used.
        twilioAuthToken:
          type: string
          format: password
          description: >-
              The auth token for the Twilio account that will be used.
        twilioAuthTokenPassphraseProvider:
          type: string
          description: >-
              The passphrase provider that may be used to obtain the auth token for the Twilio account that will be used.
        senderPhoneNumber:
          type: array
          items:
            type: string
          description: >-
              The outgoing phone number to use for the messages. Values must be phone numbers you have obtained for use with your Twilio account.
        recipientPhoneNumber:
          type: array
          items:
            type: string
          description: >-
              The phone number to which alert notifications should be delivered.
        longMessageBehavior:
          $ref: '#/components/schemas/Enumalert-handler-longMessageBehaviorProp'
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - twilioAccountSID
      - senderPhoneNumber
      - recipientPhoneNumber
      - enabled
    Enumtwilio-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:twilio"
    add-error-log-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/error-log-alert-handler-shared'
    error-log-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/error-log-alert-handler-shared'
    error-log-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumerror-log-alert-handlerSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - enabled
    Enumerror-log-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:error-log"
    add-snmp-sub-agent-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-shared'
    snmp-sub-agent-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-shared'
    snmp-sub-agent-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsnmp-sub-agent-alert-handlerSchemaUrn'
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this SNMP Sub Agent Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - enabled
    Enumsnmp-sub-agent-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp-sub-agent"
    add-exec-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/exec-alert-handler-shared'
    exec-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/exec-alert-handler-shared'
    exec-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexec-alert-handlerSchemaUrn'
        command:
          type: string
          description: >-
              Specifies the path of the command to execute, without any arguments. It must be an absolute path for reasons of security and reliability.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Exec Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - command
      - enabled
    Enumexec-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:exec"
    add-third-party-alert-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Alert Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-alert-handler-shared'
    third-party-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Alert Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-alert-handler-shared'
    third-party-alert-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-alert-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Alert Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Alert Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Alert Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Alert Handler is enabled.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Alert Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver the alert notification) will not delay whatever processing the server was performing when the alert was generated.
        enabledAlertSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
        enabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
        disabledAlertType:
          type: array
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-alert-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alert-handler:third-party"
    Enumalert-handler-outputFormatProp:
      type: string
      enum:
      - "legacy-text"
      - "single-line-json"
      - "multi-line-json"
      description: >-
          The format to use when writing the alert messages.
    Enumalert-handler-enabledAlertTypeProp:
      type: string
      enum:
      - "access-control-change"
      - "access-control-disabled"
      - "access-control-enabled"
      - "access-control-parse-failure"
      - "access-log-criteria-matched"
      - "alarm-cleared"
      - "alarm-critical"
      - "alarm-major"
      - "alarm-minor"
      - "alarm-warning"
      - "backend-disabled"
      - "backend-initialization-failed"
      - "backup-failed"
      - "cannot-acquire-shared-backend-lock"
      - "cannot-copy-schema-files"
      - "cannot-decode-entry"
      - "cannot-find-recurring-task"
      - "cannot-register-backend"
      - "cannot-release-shared-backend-lock"
      - "cannot-rename-current-task-file"
      - "cannot-rename-new-task-file"
      - "cannot-restore-backup"
      - "cannot-schedule-recurring-task-iteration"
      - "cannot-write-configuration"
      - "cannot-write-new-schema-files"
      - "cannot-write-server-state-file"
      - "cannot-write-task-backing-file"
      - "config-change"
      - "console-logger-without-no-detach"
      - "crypto-manager-error"
      - "continuous-garbage-collection-detected"
      - "deadlock-detected"
      - "debug-logging-enabled"
      - "delegated-admin-configuration-errors"
      - "duplicate-alerts-suppressed"
      - "duplicate-error-alerts-suppressed"
      - "duplicate-fatal-alerts-suppressed"
      - "duplicate-info-alerts-suppressed"
      - "duplicate-warning-alerts-suppressed"
      - "embedded-postgresql-unavailable"
      - "entering-lockdown-mode"
      - "entry-references-removed-attribute-type"
      - "exec-task-launching-command"
      - "exploded-index-background-delete-cleanup-failed"
      - "exploded-index-background-delete-failed"
      - "external-config-file-edit-handled"
      - "external-config-file-edit-lost"
      - "external-server-initialization-failed"
      - "failed-to-apply-mirrored-configuration"
      - "file-retention-task-delete-failure"
      - "force-gc-complete"
      - "force-gc-starting"
      - "global-index-insufficient-disk-space-error"
      - "global-index-persistence-error"
      - "global-index-read-error"
      - "global-referential-integrity-update-failure"
      - "globally-unique-attribute-conflict"
      - "health-check-available-to-degraded"
      - "health-check-available-to-unavailable"
      - "health-check-degraded-to-available"
      - "health-check-degraded-to-unavailable"
      - "health-check-unavailable-to-available"
      - "health-check-unavailable-to-degraded"
      - "http-connection-handler-duplicate-context-path"
      - "http-connection-handler-duplicate-servlet-extension"
      - "index-corrupt"
      - "index-degraded"
      - "index-rebuild-completed"
      - "index-rebuild-in-progress"
      - "insecure-access-token-validator-enabled"
      - "invalid-privilege"
      - "je-background-sync-failed"
      - "je-cleaner-disabled"
      - "je-daemon-thread-exception"
      - "je-environment-not-closed-cleanly"
      - "je-recovery-required"
      - "jvm-misconfiguration"
      - "large-attribute-update-failure"
      - "lba-no-available-servers"
      - "ldap-connection-handler-cannot-listen"
      - "ldap-connection-handler-consecutive-failures"
      - "ldap-connection-handler-uncaught-error"
      - "ldif-backend-cannot-write"
      - "ldif-connection-handler-parse-error"
      - "ldif-connection-handler-io-error"
      - "leaving-lockdown-mode"
      - "log-file-rotation-listener-invoke-error"
      - "log-file-rotation-listener-processing-takes-too-long"
      - "logging-error"
      - "low-disk-space-error"
      - "low-disk-space-warning"
      - "mirrored-subtree-manager-forced-as-master-error"
      - "mirrored-subtree-manager-forced-as-master-warning"
      - "mirrored-subtree-manager-no-master-found"
      - "mirrored-subtree-server-not-in-topology"
      - "mirrored-subtree-manager-operation-error"
      - "mirrored-subtree-manager-failed-outbound-connection"
      - "mirrored-subtree-manager-connection-asymmetry"
      - "missing-schema-elements-referenced-by-backend"
      - "monitoring-endpoint-unable-to-connect"
      - "no-enabled-alert-handlers"
      - "offline-config-change-detected"
      - "out-of-disk-space-error"
      - "pdp-unavailable"
      - "pdp-trust-framework-version-deprecated"
      - "proxy-entry-balancing-operation-failure"
      - "proxy-entry-balancing-error-multiple-operations-succeeded"
      - "proxy-entry-rebalancing-admin-action-required"
      - "replication-backlogged"
      - "replication-metadata-decode-failure"
      - "replication-missing-changes"
      - "replication-monitor-data-unavailable"
      - "replication-plugin-message-serialization-failure"
      - "replication-server-changelog-failure"
      - "replication-server-listen-failure"
      - "replication-unresolved-conflict"
      - "replication-unsent-changes"
      - "replication-replay-failed"
      - "restart-required"
      - "schema-checking-disabled"
      - "scim-lookthrough-limit-exceeded"
      - "restricted-subtree-accessibility"
      - "server-shutting-down"
      - "server-starting"
      - "server-started"
      - "subtree-delete-interrupted"
      - "sync-resource-connection-error"
      - "sync-resource-operation-error"
      - "sync-pipe-initialization-error"
      - "sync-pipe-backlog-above-threshold"
      - "sync-pipe-backlog-below-threshold"
      - "system-nanotime-stopped"
      - "system-current-time-shifted"
      - "task-started"
      - "task-completed"
      - "task-failed"
      - "third-party-extension-exception"
      - "thread-exit-holding-lock"
      - "threshold-warning-entry"
      - "threshold-warning-exit"
      - "threshold-critical-entry"
      - "threshold-critical-exit"
      - "topology-registry-secret-key-deleted"
      - "uncaught-exception"
      - "unindexed-internal-search"
      - "unique-attribute-sync-conflict"
      - "unique-attribute-sync-error"
      - "uniqueness-control-post-commit-conflict"
      - "unlicensed-product"
      - "unrecognized-alert-type"
      - "user-defined-error"
      - "user-defined-fatal"
      - "user-defined-info"
      - "user-defined-warning"
      - "worker-thread-caught-error"
      - "work-queue-backlogged"
      - "work-queue-full"
      - "work-queue-no-threads-remaining"
      - "server-jvm-paused"
      - "sensitive-trace-data-logged-warning"
      - "replication-generation-id-mismatch"
      - "account-temporarily-locked-account-status-notification"
      - "account-permanently-locked-account-status-notification"
      - "account-unlocked-account-status-notification"
      - "account-idle-locked-account-status-notification"
      - "account-reset-locked-account-status-notification"
      - "account-disabled-account-status-notification"
      - "account-enabled-account-status-notification"
      - "account-not-yet-active-account-status-notification"
      - "account-expired-account-status-notification"
      - "password-expired-account-status-notification"
      - "password-expiring-account-status-notification"
      - "password-reset-account-status-notification"
      - "password-changed-account-status-notification"
      - "account-created-account-status-notification"
      - "account-updated-account-status-notification"
      - "bind-password-failed-validation-account-status-notification"
      - "must-change-password-account-status-notification"
      - "privilege-assigned"
      - "insecure-request-rejected"
      - "incremental-backups-deprecated"
      - "replace-certificate-succeeded"
      - "replace-certificate-failed"
      description: >-
          Specifies the names of the alert types that are enabled for this alert handler.
    Enumalert-handler-enabledAlertSeverityProp:
      type: string
      enum:
      - "info"
      - "warning"
      - "error"
      - "fatal"
      description: >-
          Specifies the alert severities for which this alert handler should be used. If no values are provided, then this alert handler will be enabled for alerts with any severity.
    Enumalert-handler-disabledAlertTypeProp:
      type: string
      enum:
      - "access-control-change"
      - "access-control-disabled"
      - "access-control-enabled"
      - "access-control-parse-failure"
      - "access-log-criteria-matched"
      - "alarm-cleared"
      - "alarm-critical"
      - "alarm-major"
      - "alarm-minor"
      - "alarm-warning"
      - "backend-disabled"
      - "backend-initialization-failed"
      - "backup-failed"
      - "cannot-acquire-shared-backend-lock"
      - "cannot-copy-schema-files"
      - "cannot-decode-entry"
      - "cannot-find-recurring-task"
      - "cannot-register-backend"
      - "cannot-release-shared-backend-lock"
      - "cannot-rename-current-task-file"
      - "cannot-rename-new-task-file"
      - "cannot-restore-backup"
      - "cannot-schedule-recurring-task-iteration"
      - "cannot-write-configuration"
      - "cannot-write-new-schema-files"
      - "cannot-write-server-state-file"
      - "cannot-write-task-backing-file"
      - "config-change"
      - "console-logger-without-no-detach"
      - "crypto-manager-error"
      - "continuous-garbage-collection-detected"
      - "deadlock-detected"
      - "debug-logging-enabled"
      - "delegated-admin-configuration-errors"
      - "duplicate-alerts-suppressed"
      - "duplicate-error-alerts-suppressed"
      - "duplicate-fatal-alerts-suppressed"
      - "duplicate-info-alerts-suppressed"
      - "duplicate-warning-alerts-suppressed"
      - "embedded-postgresql-unavailable"
      - "entering-lockdown-mode"
      - "entry-references-removed-attribute-type"
      - "exec-task-launching-command"
      - "exploded-index-background-delete-cleanup-failed"
      - "exploded-index-background-delete-failed"
      - "external-config-file-edit-handled"
      - "external-config-file-edit-lost"
      - "external-server-initialization-failed"
      - "failed-to-apply-mirrored-configuration"
      - "file-retention-task-delete-failure"
      - "force-gc-complete"
      - "force-gc-starting"
      - "global-index-insufficient-disk-space-error"
      - "global-index-persistence-error"
      - "global-index-read-error"
      - "global-referential-integrity-update-failure"
      - "globally-unique-attribute-conflict"
      - "health-check-available-to-degraded"
      - "health-check-available-to-unavailable"
      - "health-check-degraded-to-available"
      - "health-check-degraded-to-unavailable"
      - "health-check-unavailable-to-available"
      - "health-check-unavailable-to-degraded"
      - "http-connection-handler-duplicate-context-path"
      - "http-connection-handler-duplicate-servlet-extension"
      - "index-corrupt"
      - "index-degraded"
      - "index-rebuild-completed"
      - "index-rebuild-in-progress"
      - "insecure-access-token-validator-enabled"
      - "invalid-privilege"
      - "je-background-sync-failed"
      - "je-cleaner-disabled"
      - "je-daemon-thread-exception"
      - "je-environment-not-closed-cleanly"
      - "je-recovery-required"
      - "jvm-misconfiguration"
      - "large-attribute-update-failure"
      - "lba-no-available-servers"
      - "ldap-connection-handler-cannot-listen"
      - "ldap-connection-handler-consecutive-failures"
      - "ldap-connection-handler-uncaught-error"
      - "ldif-backend-cannot-write"
      - "ldif-connection-handler-parse-error"
      - "ldif-connection-handler-io-error"
      - "leaving-lockdown-mode"
      - "log-file-rotation-listener-invoke-error"
      - "log-file-rotation-listener-processing-takes-too-long"
      - "logging-error"
      - "low-disk-space-error"
      - "low-disk-space-warning"
      - "mirrored-subtree-manager-forced-as-master-error"
      - "mirrored-subtree-manager-forced-as-master-warning"
      - "mirrored-subtree-manager-no-master-found"
      - "mirrored-subtree-server-not-in-topology"
      - "mirrored-subtree-manager-operation-error"
      - "mirrored-subtree-manager-failed-outbound-connection"
      - "mirrored-subtree-manager-connection-asymmetry"
      - "missing-schema-elements-referenced-by-backend"
      - "monitoring-endpoint-unable-to-connect"
      - "no-enabled-alert-handlers"
      - "offline-config-change-detected"
      - "out-of-disk-space-error"
      - "pdp-unavailable"
      - "pdp-trust-framework-version-deprecated"
      - "proxy-entry-balancing-operation-failure"
      - "proxy-entry-balancing-error-multiple-operations-succeeded"
      - "proxy-entry-rebalancing-admin-action-required"
      - "replication-backlogged"
      - "replication-metadata-decode-failure"
      - "replication-missing-changes"
      - "replication-monitor-data-unavailable"
      - "replication-plugin-message-serialization-failure"
      - "replication-server-changelog-failure"
      - "replication-server-listen-failure"
      - "replication-unresolved-conflict"
      - "replication-unsent-changes"
      - "replication-replay-failed"
      - "restart-required"
      - "schema-checking-disabled"
      - "scim-lookthrough-limit-exceeded"
      - "restricted-subtree-accessibility"
      - "server-shutting-down"
      - "server-starting"
      - "server-started"
      - "subtree-delete-interrupted"
      - "sync-resource-connection-error"
      - "sync-resource-operation-error"
      - "sync-pipe-initialization-error"
      - "sync-pipe-backlog-above-threshold"
      - "sync-pipe-backlog-below-threshold"
      - "system-nanotime-stopped"
      - "system-current-time-shifted"
      - "task-started"
      - "task-completed"
      - "task-failed"
      - "third-party-extension-exception"
      - "thread-exit-holding-lock"
      - "threshold-warning-entry"
      - "threshold-warning-exit"
      - "threshold-critical-entry"
      - "threshold-critical-exit"
      - "topology-registry-secret-key-deleted"
      - "uncaught-exception"
      - "unindexed-internal-search"
      - "unique-attribute-sync-conflict"
      - "unique-attribute-sync-error"
      - "uniqueness-control-post-commit-conflict"
      - "unlicensed-product"
      - "unrecognized-alert-type"
      - "user-defined-error"
      - "user-defined-fatal"
      - "user-defined-info"
      - "user-defined-warning"
      - "worker-thread-caught-error"
      - "work-queue-backlogged"
      - "work-queue-full"
      - "work-queue-no-threads-remaining"
      - "server-jvm-paused"
      - "sensitive-trace-data-logged-warning"
      - "replication-generation-id-mismatch"
      - "account-temporarily-locked-account-status-notification"
      - "account-permanently-locked-account-status-notification"
      - "account-unlocked-account-status-notification"
      - "account-idle-locked-account-status-notification"
      - "account-reset-locked-account-status-notification"
      - "account-disabled-account-status-notification"
      - "account-enabled-account-status-notification"
      - "account-not-yet-active-account-status-notification"
      - "account-expired-account-status-notification"
      - "password-expired-account-status-notification"
      - "password-expiring-account-status-notification"
      - "password-reset-account-status-notification"
      - "password-changed-account-status-notification"
      - "account-created-account-status-notification"
      - "account-updated-account-status-notification"
      - "bind-password-failed-validation-account-status-notification"
      - "must-change-password-account-status-notification"
      - "privilege-assigned"
      - "insecure-request-rejected"
      - "incremental-backups-deprecated"
      - "replace-certificate-succeeded"
      - "replace-certificate-failed"
      description: >-
          Specifies the names of the alert types that are disabled for this alert handler.
    Enumalert-handler-longMessageBehaviorProp:
      type: string
      enum:
      - "truncate"
      - "send-as-multiple-messages"
      description: >-
          The behavior to use for alert messages that are longer than the 160-character size limit for SMS messages.
    Enumalert-handler-outputLocationProp:
      type: string
      enum:
      - "server-out-file"
      - "standard-output"
      - "standard-error"
      description: >-
          The location to which alert messages will be written.
    license-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/EnumlicenseSchemaUrn'
          directoryPlatformLicenseKey:
            type: string
            description: >-
                License key enabling use of Directory Server, Directory Proxy Server, Data Sync Server, and Data Metrics Server products.
    EnumlicenseSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:license"
    add-amazon-key-management-service-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-shared'
    amazon-key-management-service-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-shared'
      required:
      - encryptedPassphraseFile
    amazon-key-management-service-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-key-management-service-cipher-stream-providerSchemaUrn'
        encryptedPassphraseFile:
          type: string
          description: >-
              The path to a file that will hold the encrypted passphrase used by this cipher stream provider.
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the Amazon Key Management Service.
        awsAccessKeyID:
          type: string
          description: >-
              The access key ID that will be used if this cipher stream provider will authenticate to the Amazon Key Management Service using an access key rather than an IAM role associated with an EC2 instance.
        awsSecretAccessKey:
          type: string
          format: password
          description: >-
              The secret access key that will be used if this cipher stream provider will authenticate to the Amazon Key Management Service using an access key rather than an IAM role associated with an EC2 instance.
        awsRegionName:
          type: string
          description: >-
              The name of the Amazon Web Services region that holds the encryption key. This is optional, and if it is not provided, then the server will attempt to determine the region from the key ARN.
        kmsEncryptionKeyArn:
          type: string
          description: >-
              The Amazon resource name (ARN) for the KMS key that will be used to encrypt the contents of the passphrase file. This key must exist, and the AWS client must have access to encrypt and decrypt data using this key.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - kmsEncryptionKeyArn
      - enabled
    Enumamazon-key-management-service-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-key-management-service"
    add-amazon-secrets-manager-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-shared'
    amazon-secrets-manager-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-shared'
      required:
      - encryptionMetadataFile
    amazon-secrets-manager-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-cipher-stream-providerSchemaUrn'
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the AWS Secrets Manager.
        secretID:
          type: string
          description: >-
              The Amazon Resource Name (ARN) or the user-friendly name of the secret to be retrieved.
        secretFieldName:
          type: string
          description: >-
              The name of the JSON field whose value is the passphrase that will be used to generate the encryption key for protecting the contents of the encryption settings database.
        secretVersionID:
          type: string
          description: >-
              The unique identifier for the version of the secret to be retrieved.
        secretVersionStage:
          type: string
          description: >-
              The staging label for the version of the secret to be retrieved.
        encryptionMetadataFile:
          type: string
          description: >-
              The path to a file that will hold metadata about the encryption performed by this Amazon Secrets Manager Cipher Stream Provider.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - awsExternalServer
      - secretID
      - secretFieldName
      - enabled
    Enumamazon-secrets-manager-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-secrets-manager"
    add-azure-key-vault-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-shared'
    azure-key-vault-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-shared'
      required:
      - encryptionMetadataFile
    azure-key-vault-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-cipher-stream-providerSchemaUrn'
        keyVaultURI:
          type: string
          description: >-
              The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Azure service.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
        secretName:
          type: string
          description: >-
              The name of the secret to retrieve.
        encryptionMetadataFile:
          type: string
          description: >-
              The path to a file that will hold metadata about the encryption performed by this Azure Key Vault Cipher Stream Provider.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - secretName
      - enabled
    Enumazure-key-vault-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:azure-key-vault"
    add-file-based-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/file-based-cipher-stream-provider-shared'
    file-based-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-cipher-stream-provider-shared'
    file-based-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-cipher-stream-providerSchemaUrn'
        passwordFile:
          type: string
          description: >-
              The path to the file containing the password to use when generating ciphers.
        waitForPasswordFile:
          type: boolean
          description: >-
              Indicates whether the server should wait for the password file to become available if it does not exist.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - passwordFile
      - enabled
    Enumfile-based-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:file-based"
    add-wait-for-passphrase-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-shared'
    wait-for-passphrase-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-shared'
    wait-for-passphrase-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumwait-for-passphrase-cipher-stream-providerSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - enabled
    Enumwait-for-passphrase-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:wait-for-passphrase"
    add-conjur-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/conjur-cipher-stream-provider-shared'
    conjur-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-cipher-stream-provider-shared'
      required:
      - encryptionMetadataFile
    conjur-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-cipher-stream-providerSchemaUrn'
        conjurExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Conjur server.
        conjurSecretRelativePath:
          type: string
          description: >-
              The portion of the path that follows the account name in the URI needed to obtain the secret passphrase to use to generate the encryption key. Any special characters in the path must be URL-encoded.
        encryptionMetadataFile:
          type: string
          description: >-
              The path to a file that will hold metadata about the encryption performed by this Conjur Cipher Stream Provider.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - conjurExternalServer
      - conjurSecretRelativePath
      - enabled
    Enumconjur-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:conjur"
    add-pkcs11-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-shared'
    pkcs11-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-shared'
      required:
      - encryptionMetadataFile
    pkcs11-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpkcs11-cipher-stream-providerSchemaUrn'
        pkcs11ProviderClass:
          type: string
          description: >-
              The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.
        pkcs11ProviderConfigurationFile:
          type: string
          description: >-
              The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.
        keyStorePin:
          type: string
          format: password
          description: >-
              The clear-text user PIN needed to interact with the PKCS #11 token.
        keyStorePinFile:
          type: string
          description: >-
              The path to a file containing the user PIN needed to interact with the PKCS #11 token. The file must exist and must contain exactly one line with a clear-text representation of the PIN.
        keyStorePinEnvironmentVariable:
          type: string
          description: >-
              The name of an environment variable whose value is the user PIN needed to interact with the PKCS #11 token. The environment variable must be defined and must contain a clear-text representation of the PIN.
        pkcs11KeyStoreType:
          type: string
          description: >-
              The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.
        sslCertNickname:
          type: string
          description: >-
              The alias for the certificate in the PKCS #11 token that will be used to wrap the encryption key. The target certificate must exist in the PKCS #11 token, and it must have an RSA key pair because the JVM does not currently provide adequate key wrapping support for elliptic curve key pairs.  If you have also configured the server to use a PKCS #11 token for accessing listener certificates, we strongly recommend that you use a different certificate to protect the contents of the encryption settings database than you use for negotiating TLS sessions with clients. It is imperative that the certificate used by this PKCS11 Cipher Stream Provider remain constant for the life of the provider because if the certificate were to be replaced, then the contents of the encryption settings database could become inaccessible. Unlike with listener certificates used for TLS negotiation that need to be replaced on a regular basis, this PKCS11 Cipher Stream Provider does not consider the validity period for the associated certificate, and it will continue to function even after the certificate has expired.  If you need to rotate the certificate used to protect the server's encryption settings database, you should first install the desired new certificate in the PKCS #11 token under a different alias. Then, you should create a new instance of this PKCS11 Cipher Stream Provider that is configured to use that certificate, and that also uses a different value for the encryption-metadata-file because the information in that file is tied to the certificate used to generate it. Finally, you will need to update the global configuration so that the encryption-settings-cipher-stream-provider property references the new cipher stream provider rather than this one. The update to the global configuration must be done with the server online so that it can properly re-encrypt the contents of the encryption settings database with the correct key tied to the new certificate.
        encryptionMetadataFile:
          type: string
          description: >-
              The path to a file that will hold metadata about the encryption performed by this PKCS11 Cipher Stream Provider.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - sslCertNickname
      - enabled
    Enumpkcs11-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:pkcs11"
    add-vault-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/vault-cipher-stream-provider-shared'
    vault-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-cipher-stream-provider-shared'
      required:
      - vaultEncryptionMetadataFile
    vault-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-cipher-stream-providerSchemaUrn'
        vaultExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Vault server.
        vaultServerBaseURI:
          type: array
          items:
            type: string
          description: >-
              The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".
        vaultAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Vault server.
        vaultSecretPath:
          type: string
          description: >-
              The path to the desired secret in the Vault service. This will be appended to the value of the base-url property for the associated Vault external server.
        vaultSecretFieldName:
          type: string
          description: >-
              The name of the field in the Vault secret record that contains the passphrase to use to generate the encryption key.
        vaultEncryptionMetadataFile:
          type: string
          description: >-
              The path to a file that will hold metadata about the encryption performed by this Vault Cipher Stream Provider.
        trustStoreFile:
          type: string
          description: >-
              The path to a file containing the information needed to trust the certificate presented by the Vault servers.
        trustStorePin:
          type: string
          format: password
          description: >-
              The passphrase needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
        trustStoreType:
          type: string
          description: >-
              The store type for the specified trust store file. The value should likely be one of "JKS" or "PKCS12".
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - vaultSecretPath
      - vaultSecretFieldName
      - enabled
    Enumvault-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:vault"
    add-third-party-cipher-stream-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Cipher Stream Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-cipher-stream-provider-shared'
    third-party-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Cipher Stream Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-cipher-stream-provider-shared'
    third-party-cipher-stream-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-cipher-stream-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Cipher Stream Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Cipher Stream Provider. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Cipher Stream Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-cipher-stream-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:third-party"
    add-static-token-vault-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Vault Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/static-token-vault-authentication-method-shared'
    static-token-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Vault Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/static-token-vault-authentication-method-shared'
    static-token-vault-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstatic-token-vault-authentication-methodSchemaUrn'
        vaultAccessToken:
          type: string
          format: password
          description: >-
              The static token used to authenticate to the Vault server.
        description:
          type: string
          description: >-
              A description for this Vault Authentication Method
      required:
      - schemas
      - vaultAccessToken
    Enumstatic-token-vault-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:static-token"
    add-app-role-vault-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Vault Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/app-role-vault-authentication-method-shared'
    app-role-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Vault Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/app-role-vault-authentication-method-shared'
    app-role-vault-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumapp-role-vault-authentication-methodSchemaUrn'
        vaultRoleID:
          type: string
          description: >-
              The role ID for the AppRole to authenticate.
        vaultSecretID:
          type: string
          format: password
          description: >-
              The secret ID for the AppRole to authenticate.
        loginMechanismName:
          type: string
          description: >-
              The name used when enabling the desired AppRole authentication mechanism in the Vault server.
        description:
          type: string
          description: >-
              A description for this Vault Authentication Method
      required:
      - schemas
      - vaultRoleID
      - vaultSecretID
    Enumapp-role-vault-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:app-role"
    add-user-pass-vault-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Vault Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/user-pass-vault-authentication-method-shared'
    user-pass-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Vault Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/user-pass-vault-authentication-method-shared'
    user-pass-vault-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumuser-pass-vault-authentication-methodSchemaUrn'
        username:
          type: string
          description: >-
              The username for the user to authenticate.
        password:
          type: string
          format: password
          description: >-
              The password for the user to authenticate.
        loginMechanismName:
          type: string
          description: >-
              The name used when enabling the desired UserPass authentication mechanism in the Vault server.
        description:
          type: string
          description: >-
              A description for this Vault Authentication Method
      required:
      - schemas
      - username
      - password
    Enumuser-pass-vault-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:user-pass"
    add-smtp-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
    smtp-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
      required:
      - sendMessageWithoutEndUserAddress
    smtp-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsmtp-account-status-notification-handlerSchemaUrn'
        emailAddressAttributeType:
          type: array
          items:
            type: string
          description: >-
              Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
        emailAddressJSONField:
          type: string
          description: >-
              The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
        emailAddressJSONObjectFilter:
          type: string
          description: >-
              A JSON object filter that may be used to identify which email address value to use when sending the message.
        recipientAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.
        sendMessageWithoutEndUserAddress:
          type: boolean
          description: >-
              Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).
        senderAddress:
          type: string
          description: >-
              Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.
        messageSubject:
          type: array
          items:
            type: string
          description: >-
              Specifies the subject that should be used for email messages generated by this account status notification handler.
        messageTemplateFile:
          type: array
          items:
            type: string
          description: >-
              Specifies the path to the file containing the message template to generate the email notification messages.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - senderAddress
      - messageSubject
      - messageTemplateFile
      - enabled
    Enumsmtp-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp"
    add-groovy-scripted-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
    groovy-scripted-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
    groovy-scripted-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-account-status-notification-handlerSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Account Status Notification Handler.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted"
    add-admin-alert-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
    admin-alert-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
    admin-alert-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumadmin-alert-account-status-notification-handlerSchemaUrn'
        accountStatusNotificationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - accountStatusNotificationType
      - enabled
    Enumadmin-alert-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert"
    add-error-log-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
    error-log-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
    error-log-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumerror-log-account-status-notification-handlerSchemaUrn'
        accountStatusNotificationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - accountStatusNotificationType
      - enabled
    Enumerror-log-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log"
    add-multi-part-email-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
    multi-part-email-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
    multi-part-email-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummulti-part-email-account-status-notification-handlerSchemaUrn'
        accountTemporarilyFailureLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
        accountPermanentlyFailureLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
        accountIdleLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
        accountResetLockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
        accountUnlockedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).
        accountDisabledMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.
        accountEnabledMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.
        accountNotYetActiveMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
        accountExpiredMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
        passwordExpiredMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
        passwordExpiringMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
        passwordResetMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.
        passwordChangedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
        accountCreatedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
        accountUpdatedMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.
        bindPasswordFailedValidationMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
        mustChangePasswordMessageTemplate:
          type: string
          description: >-
              The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - enabled
    Enummulti-part-email-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email"
    add-third-party-account-status-notification-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Account Status Notification Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
    third-party-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Account Status Notification Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
    third-party-account-status-notification-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-account-status-notification-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Account Status Notification Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Account Status Notification Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Account Status Notification Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
        accountCreationNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which add requests should result in account creation notifications for this handler.
        accountUpdateNotificationRequestCriteria:
          type: string
          description: >-
              A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-account-status-notification-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party"
    Enumaccount-status-notification-handler-accountStatusNotificationTypeProp:
      type: string
      enum:
      - "account-temporarily-locked"
      - "account-permanently-locked"
      - "account-unlocked"
      - "account-idle-locked"
      - "account-reset-locked"
      - "account-disabled"
      - "account-enabled"
      - "account-not-yet-active"
      - "account-expired"
      - "password-expired"
      - "password-expiring"
      - "password-reset"
      - "password-changed"
      - "account-created"
      - "account-updated"
      - "bind-password-failed-validation"
      - "must-change-password"
      description: >-
          The types of account status notifications that should result in administrative alerts.
    add-server-group-request:
      allOf:
      - type: object
        properties:
          groupName:
            description: Name of the new Server Group
            type: string
        required:
        - groupName
      - $ref: '#/components/schemas/server-group-shared'
    server-group-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Server Group
            type: string
        required:
        - id
      - $ref: '#/components/schemas/server-group-shared'
    server-group-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumserver-groupSchemaUrn'
        member:
          type: array
          items:
            type: string
          description: >-
              A server instance that is a member of this group.
    Enumserver-groupSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:server-group"
    add-ldap-pass-through-authentication-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Pass Through Authentication Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-shared'
    ldap-pass-through-authentication-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Pass Through Authentication Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-shared'
      required:
      - serverAccessMode
      - initialConnections
      - maxConnections
    ldap-pass-through-authentication-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldap-pass-through-authentication-handlerSchemaUrn'
        server:
          type: array
          items:
            type: string
          description: >-
              Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
        serverAccessMode:
          $ref: '#/components/schemas/Enumpass-through-authentication-handler-serverAccessModeProp'
        dnMap:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
        bindDNPattern:
          type: string
          description: >-
              A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value "cn={cn},ou=People,dc=example,dc=com" indicates that the remote bind DN should be constructed from the text "cn=" followed by the value of the local entry's cn attribute followed by the text "ou=People,dc=example,dc=com". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of "{seeAlso}" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
        searchBaseDN:
          type: string
          description: >-
              The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
        searchFilterPattern:
          type: string
          description: >-
              A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, "(mail={uid:ldapFilterEscape}@example.com)" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before "@example.com" in the mail attribute in the external server. Note that the "ldapFilterEscape" modifier should almost always be used with attributes specified in the pattern.
        initialConnections:
          type: integer
          description: >-
              Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
        maxConnections:
          type: integer
          description: >-
              Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.
        useLocation:
          type: boolean
          description: >-
              Indicates whether to take server locations into account when prioritizing the servers to use for pass-through authentication attempts.
        maximumAllowedLocalResponseTime:
          type: string
          description: >-
              The maximum length of time to wait for a response from an external server in the same location as this Directory Server before considering it unavailable.
        maximumAllowedNonlocalResponseTime:
          type: string
          description: >-
              The maximum length of time to wait for a response from an external server in a different location from this Directory Server before considering it unavailable.
        usePasswordPolicyControl:
          type: boolean
          description: >-
              Indicates whether to include the password policy request control (as defined in draft-behera-ldap-password-policy-10) in bind requests sent to the external server.
        description:
          type: string
          description: >-
              A description for this Pass Through Authentication Handler
      required:
      - schemas
      - server
    Enumldap-pass-through-authentication-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap"
    add-third-party-pass-through-authentication-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Pass Through Authentication Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-shared'
    third-party-pass-through-authentication-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Pass Through Authentication Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-shared'
    third-party-pass-through-authentication-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-pass-through-authentication-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Pass Through Authentication Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Pass Through Authentication Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Pass Through Authentication Handler
      required:
      - schemas
      - extensionClass
    Enumthird-party-pass-through-authentication-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party"
    Enumpass-through-authentication-handler-serverAccessModeProp:
      type: string
      enum:
      - "round-robin"
      - "failover-on-unavailable"
      - "failover-on-any-failure"
      description: >-
          Specifies the manner in which external servers should be used for pass-through authentication attempts if multiple servers are defined.
    add-consent-definition-request:
      allOf:
      - type: object
        properties:
          definitionName:
            description: Name of the new Consent Definition
            type: string
        required:
        - definitionName
      - $ref: '#/components/schemas/consent-definition-shared'
    consent-definition-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Consent Definition
            type: string
        required:
        - id
      - $ref: '#/components/schemas/consent-definition-shared'
    consent-definition-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconsent-definitionSchemaUrn'
        uniqueID:
          type: string
          description: >-
              A version-independent unique identifier for this Consent Definition.
        displayName:
          type: string
          description: >-
              A human-readable display name for this Consent Definition.
        parameter:
          type: array
          items:
            type: string
          description: >-
              Optional parameters for this Consent Definition.
        description:
          type: string
          description: >-
              A description for this Consent Definition
      required:
      - uniqueID
    Enumconsent-definitionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:consent-definition"
    add-consent-definition-localization-request:
      allOf:
      - type: object
        properties:
          localizationName:
            description: Name of the new Consent Definition Localization
            type: string
        required:
        - localizationName
      - $ref: '#/components/schemas/consent-definition-localization-shared'
    consent-definition-localization-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Consent Definition Localization
            type: string
        required:
        - id
      - $ref: '#/components/schemas/consent-definition-localization-shared'
    consent-definition-localization-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconsent-definition-localizationSchemaUrn'
        locale:
          type: string
          description: >-
              The locale of this Consent Definition Localization.
        version:
          type: string
          description: >-
              The version of this Consent Definition Localization, using the format MAJOR.MINOR.
        titleText:
          type: string
          description: >-
              Localized text that may be used to provide a title or summary for a consent request or a granted consent.
        dataText:
          type: string
          description: >-
              Localized text describing the data to be shared.
        purposeText:
          type: string
          description: >-
              Localized text describing how the data is to be used.
      required:
      - locale
      - version
      - dataText
      - purposeText
    Enumconsent-definition-localizationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:consent-definition-localization"
    consent-service-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsent-serviceSchemaUrn'
          enabled:
            type: boolean
            description: >-
                Indicates whether the Consent Service is enabled.
          baseDN:
            type: string
            description: >-
                The base DN under which consent records are stored.
          bindDN:
            type: string
            description: >-
                The DN of an internal service account used by the Consent Service to make internal LDAP requests.
          searchSizeLimit:
            type: integer
            description: >-
                The maximum number of consent resources that may be returned from a search request.
          consentRecordIdentityMapper:
            type: array
            items:
              type: string
            description: >-
                If specified, the Identity Mapper(s) that may be used to map consent record subject and actor values to DNs. This is typically only needed if privileged API clients will be used.
          serviceAccountDN:
            type: array
            items:
              type: string
            description: >-
                The set of account DNs that the Consent Service will consider to be privileged.
          unprivilegedConsentScope:
            type: string
            description: >-
                The name of a scope that must be present in an access token accepted by the Consent Service for unprivileged clients.
          privilegedConsentScope:
            type: string
            description: >-
                The name of a scope that must be present in an access token accepted by the Consent Service if the client is to be considered privileged.
          audience:
            type: string
            description: >-
                A string or URI that identifies the Consent Service in the context of OAuth2 authorization.
        required:
        - enabled
    Enumconsent-serviceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:consent-service"
    add-topology-admin-user-request:
      allOf:
      - type: object
        properties:
          userName:
            description: Name of the new Topology Admin User
            type: string
        required:
        - userName
      - $ref: '#/components/schemas/topology-admin-user-shared'
    topology-admin-user-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Topology Admin User
            type: string
        required:
        - id
      - $ref: '#/components/schemas/topology-admin-user-shared'
      required:
      - inheritDefaultRootPrivileges
      - searchResultEntryLimit
      - timeLimitSeconds
      - lookThroughEntryLimit
      - idleTimeLimitSeconds
      - passwordPolicy
      - requireSecureAuthentication
      - requireSecureConnections
    topology-admin-user-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtopology-admin-userSchemaUrn'
        alternateBindDN:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more alternate DNs that can be used to bind to the server as this User.
        description:
          type: string
          description: >-
              A description for this User.
        password:
          type: string
          format: password
          description: >-
              Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.
        firstName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's first name. This is stored in the givenName LDAP attribute.
        lastName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's last name. This is stored in the sn LDAP attribute.
        userID:
          type: string
          description: >-
              Specifies the user's user ID. This is stored in the uid LDAP attribute.
        emailAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's email address. This is stored in the mail LDAP attribute.
        workTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.
        homeTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.
        mobileTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.
        pagerTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.
        inheritDefaultRootPrivileges:
          type: boolean
          description: >-
              Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.
        privilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumtopology-admin-user-privilegeProp'
        searchResultEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.
        timeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.
        lookThroughEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.
        idleTimeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.
        passwordPolicy:
          type: string
          description: >-
              Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.
        disabled:
          type: boolean
          description: >-
              Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.
        accountActivationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.
        accountExpirationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.
        requireSecureAuthentication:
          type: boolean
          description: >-
              Indicates whether this User must authenticate in a secure manner. When set to "true", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).
        requireSecureConnections:
          type: boolean
          description: >-
              Indicates whether this User must be required to communicate with the server over a secure connection. When set to "true", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).
        allowedAuthenticationType:
          type: array
          items:
            type: string
          description: >-
              Indicates that User should only be allowed to authenticate in certain ways. Allowed values include "simple" (to indicate that the user should be allowed to bind using simple authentication) or "sasl {mech}" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like "sasl PLAIN"). The list of available SASL mechanisms can be retrieved by running "dsconfig --advanced list-sasl-mechanism-handlers".
        allowedAuthenticationIPAddress:
          type: array
          items:
            type: string
          description: >-
              An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.
        preferredOTPDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.
        isProxyable:
          $ref: '#/components/schemas/Enumtopology-admin-user-isProxyableProp'
        isProxyableByDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByGroup:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByURL:
          type: array
          items:
            type: string
          description: >-
              Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        mayProxyAsDN:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries with the specified DNs.
        mayProxyAsGroup:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.
        mayProxyAsURL:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.
    Enumtopology-admin-userSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
    Enumtopology-admin-user-isProxyableProp:
      type: string
      enum:
      - "allowed"
      - "prohibited"
      - "required"
      description: >-
          This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).
    Enumtopology-admin-user-privilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "-audit-data-security"
      - "bypass-acl"
      - "-bypass-acl"
      - "bypass-read-acl"
      - "-bypass-read-acl"
      - "modify-acl"
      - "-modify-acl"
      - "config-read"
      - "-config-read"
      - "config-write"
      - "-config-write"
      - "jmx-read"
      - "-jmx-read"
      - "jmx-write"
      - "-jmx-write"
      - "jmx-notify"
      - "-jmx-notify"
      - "ldif-import"
      - "-ldif-import"
      - "ldif-export"
      - "-ldif-export"
      - "backend-backup"
      - "-backend-backup"
      - "backend-restore"
      - "-backend-restore"
      - "server-shutdown"
      - "-server-shutdown"
      - "server-restart"
      - "-server-restart"
      - "proxied-auth"
      - "-proxied-auth"
      - "disconnect-client"
      - "-disconnect-client"
      - "password-reset"
      - "-password-reset"
      - "update-schema"
      - "-update-schema"
      - "privilege-change"
      - "-privilege-change"
      - "unindexed-search"
      - "-unindexed-search"
      - "unindexed-search-with-control"
      - "-unindexed-search-with-control"
      - "bypass-pw-policy"
      - "-bypass-pw-policy"
      - "lockdown-mode"
      - "-lockdown-mode"
      - "stream-values"
      - "-stream-values"
      - "third-party-task"
      - "-third-party-task"
      - "use-admin-session"
      - "-use-admin-session"
      - "soft-delete-read"
      - "-soft-delete-read"
      - "metrics-read"
      - "-metrics-read"
      - "remote-log-read"
      - "-remote-log-read"
      - "manage-topology"
      - "-manage-topology"
      - "permit-get-password-policy-state-issues"
      - "-permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "-permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "-permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "-permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "-permit-forwarding-client-connection-policy"
      - "exec-task"
      - "-exec-task"
      - "collect-support-data"
      - "-collect-support-data"
      - "file-servlet-access"
      - "-file-servlet-access"
      - "permit-replace-certificate-request"
      - "-permit-replace-certificate-request"
      description: >-
          Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
    add-change-subscription-request:
      allOf:
      - type: object
        properties:
          subscriptionName:
            description: Name of the new Change Subscription
            type: string
        required:
        - subscriptionName
      - $ref: '#/components/schemas/change-subscription-shared'
    change-subscription-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Change Subscription
            type: string
        required:
        - id
      - $ref: '#/components/schemas/change-subscription-shared'
    change-subscription-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumchange-subscriptionSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Change Subscription
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the client connection associated with an operation in order for that operation to be processed by a change subscription handler.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the request associated with an operation in order for that operation to be processed by a change subscription handler.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the result associated with an operation in order for that operation to be processed by a change subscription handler.
        expirationTime:
          type: string
          description: >-
              Specifies a timestamp that provides an expiration time for this change subscription. If an expiration time is provided, then the change subscription will not be active after that time has passed.
    Enumchange-subscriptionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:change-subscription"
    ldap-sdk-debug-logger-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-sdk-debug-loggerSchemaUrn'
          description:
            type: string
            description: >-
                A description for this LDAP SDK Debug Logger
          enabled:
            type: boolean
            description: >-
                Indicates whether this LDAP SDK Debug Logger is enabled.
          logFile:
            type: string
            description: >-
                The path and base name of the file to use for log files generated by this LDAP SDK Debug Logger. The path may be either absolute or relative to the server root.
          debugLevel:
            $ref: '#/components/schemas/Enumldap-sdk-debug-logger-debugLevelProp'
          debugType:
            type: array
            items:
              $ref: '#/components/schemas/Enumldap-sdk-debug-logger-debugTypeProp'
          includeStackTrace:
            type: boolean
            description: >-
                Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
          logFilePermissions:
            type: string
            description: >-
                The UNIX permissions of the log files created by this LDAP SDK Debug Logger.
          timeInterval:
            type: string
            description: >-
                Specifies the interval at which to check whether the log files need to be rotated.
          autoFlush:
            type: boolean
            description: >-
                Specifies whether to flush the writer after every log record.
          asynchronous:
            type: boolean
            description: >-
                Indicates whether the LDAP SDK Debug Logger will publish records asynchronously.
          queueSize:
            type: integer
            description: >-
                The maximum number of log records that can be stored in the asynchronous queue.
          bufferSize:
            type: string
            description: >-
                Specifies the log file buffer size.
          append:
            type: boolean
            description: >-
                Specifies whether to append to existing log files.
          rotationPolicy:
            type: array
            items:
              type: string
            description: >-
                The rotation policy to use for the LDAP SDK Debug Logger .
          rotationListener:
            type: array
            items:
              type: string
            description: >-
                A listener that should be notified whenever a log file is rotated out of service.
          retentionPolicy:
            type: array
            items:
              type: string
            description: >-
                The retention policy to use for the LDAP SDK Debug Logger .
          compressionMechanism:
            $ref: '#/components/schemas/Enumldap-sdk-debug-logger-compressionMechanismProp'
          signLog:
            type: boolean
            description: >-
                Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
          encryptLog:
            type: boolean
            description: >-
                Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
          encryptionSettingsDefinitionID:
            type: string
            description: >-
                Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
          timestampPrecision:
            $ref: '#/components/schemas/Enumldap-sdk-debug-logger-timestampPrecisionProp'
          loggingErrorBehavior:
            $ref: '#/components/schemas/Enumldap-sdk-debug-logger-loggingErrorBehaviorProp'
        required:
        - enabled
        - logFile
        - debugLevel
        - debugType
        - includeStackTrace
        - logFilePermissions
        - asynchronous
        - rotationPolicy
        - retentionPolicy
    Enumldap-sdk-debug-loggerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:ldap-sdk-debug-logger"
    Enumldap-sdk-debug-logger-compressionMechanismProp:
      type: string
      enum:
      - "none"
      - "gzip"
      description: >-
          Specifies the type of compression (if any) to use for log files that are written.
    Enumldap-sdk-debug-logger-timestampPrecisionProp:
      type: string
      enum:
      - "seconds"
      - "milliseconds"
      description: >-
          Specifies the smallest time unit to be included in timestamps.
    Enumldap-sdk-debug-logger-loggingErrorBehaviorProp:
      type: string
      enum:
      - "standard-error"
      - "lockdown-mode"
      description: >-
          Specifies the behavior that the server should exhibit if an error occurs during logging processing.
    Enumldap-sdk-debug-logger-debugLevelProp:
      type: string
      enum:
      - "severe"
      - "warning"
      - "info"
      - "config"
      - "fine"
      - "finer"
      - "finest"
      description: >-
          The minimum debug level that should be used for messages to be logged.
    Enumldap-sdk-debug-logger-debugTypeProp:
      type: string
      enum:
      - "asn1"
      - "coding-error"
      - "connect"
      - "exception"
      - "ldap"
      - "ldif"
      - "monitor"
      - "other"
      description: >-
          The types of debug messages that should be logged.
    add-api-key-conjur-authentication-method-request:
      allOf:
      - type: object
        properties:
          methodName:
            description: Name of the new Conjur Authentication Method
            type: string
        required:
        - methodName
      - $ref: '#/components/schemas/api-key-conjur-authentication-method-shared'
    api-key-conjur-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Conjur Authentication Method
            type: string
        required:
        - id
      - $ref: '#/components/schemas/api-key-conjur-authentication-method-shared'
    api-key-conjur-authentication-method-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumapi-key-conjur-authentication-methodSchemaUrn'
        username:
          type: string
          description: >-
              The username for the user to authenticate.
        password:
          type: string
          format: password
          description: >-
              The password for the user to authenticate. This will be used to obtain an API key for the target user.
        apiKey:
          type: string
          format: password
          description: >-
              The API key for the user to authenticate.
        description:
          type: string
          description: >-
              A description for this Conjur Authentication Method
      required:
      - username
    Enumapi-key-conjur-authentication-methodSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:conjur-authentication-method:api-key"
    add-constructed-attribute-request:
      allOf:
      - type: object
        properties:
          attributeName:
            description: Name of the new Constructed Attribute
            type: string
        required:
        - attributeName
      - $ref: '#/components/schemas/constructed-attribute-shared'
    constructed-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Constructed Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/constructed-attribute-shared'
    constructed-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconstructed-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Constructed Attribute
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be constructed.
        valuePattern:
          type: array
          items:
            type: string
          description: >-
              Specifies a pattern for constructing the attribute value using fixed text and attribute values from the entry.
      required:
      - attributeType
      - valuePattern
    Enumconstructed-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:constructed-attribute"
    add-character-set-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/character-set-password-validator-shared'
    character-set-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/character-set-password-validator-shared'
    character-set-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcharacter-set-password-validatorSchemaUrn'
        characterSet:
          type: array
          items:
            type: string
          description: >-
              Specifies a character set containing characters that a password may contain and a value indicating the minimum number of characters required from that set.
        allowUnclassifiedCharacters:
          type: boolean
          description: >-
              Indicates whether this password validator allows passwords to contain characters outside of any of the user-defined character sets.
        minimumRequiredCharacterSets:
          type: integer
          description: >-
              Specifies the minimum number of character sets that must be represented in a proposed password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - characterSet
      - allowUnclassifiedCharacters
      - enabled
    Enumcharacter-set-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:character-set"
    add-similarity-based-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
    similarity-based-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
    similarity-based-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimilarity-based-password-validatorSchemaUrn'
        minPasswordDifference:
          type: integer
          description: >-
              Specifies the minimum difference of new and old password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - minPasswordDifference
      - enabled
    Enumsimilarity-based-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:similarity-based"
    add-attribute-value-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
    attribute-value-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
    attribute-value-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumattribute-value-password-validatorSchemaUrn'
        matchAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the name(s) of the attribute(s) whose values should be checked to determine whether they match the provided password. If no values are provided, then the server checks if the proposed password matches the value of any user attribute in the target user's entry.
        testPasswordSubstringOfAttributeValue:
          type: boolean
          description: >-
              Indicates whether to reject any proposed password that is a substring of a value in one of the match attributes in the target user's entry.
        testAttributeValueSubstringOfPassword:
          type: boolean
          description: >-
              Indicates whether to reject any proposed password in which a value in one of the match attributes in the target user's entry is a substring of that password.
        minimumAttributeValueLengthForSubstringMatches:
          type: integer
          description: >-
              The minimum length that an attribute value must have for it to be considered when rejecting passwords that contain the value of another attribute as a substring.
        testReversedPassword:
          type: boolean
          description: >-
              Indicates whether to perform matching against the reversed value of the provided password in addition to the order in which it was given.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - testReversedPassword
      - enabled
    Enumattribute-value-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:attribute-value"
    custom-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-password-validatorSchemaUrn'
          id:
            description: Name of the Password Validator
            type: string
          description:
            type: string
            description: >-
                A description for this Password Validator
          enabled:
            type: boolean
            description: >-
                Indicates whether the password validator is enabled for use.
          validatorRequirementDescription:
            type: string
            description: >-
                Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
          validatorFailureMessage:
            type: string
            description: >-
                Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
        required:
        - schemas
        - enabled
        - id
    Enumcustom-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:custom"
    add-repeated-characters-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
    repeated-characters-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
    repeated-characters-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumrepeated-characters-password-validatorSchemaUrn'
        maxConsecutiveLength:
          type: integer
          description: >-
              Specifies the maximum number of times that any character can appear consecutively in a password value.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator should treat password characters in a case-sensitive manner.
        characterSet:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of characters that should be considered equivalent for the purpose of this password validator. This can be used, for example, to ensure that passwords contain no more than three consecutive digits.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - maxConsecutiveLength
      - caseSensitiveValidation
      - enabled
    Enumrepeated-characters-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:repeated-characters"
    add-dictionary-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
    dictionary-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
      required:
      - dictionaryFile
      - caseSensitiveValidation
      - testReversedPassword
    dictionary-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdictionary-password-validatorSchemaUrn'
        dictionaryFile:
          type: string
          description: >-
              Specifies the path to the file containing a list of words that cannot be used as passwords.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator is to treat password characters in a case-sensitive manner.
        testReversedPassword:
          type: boolean
          description: >-
              Indicates whether this password validator is to test the reversed value of the provided password as well as the order in which it was given.
        ignoreLeadingNonAlphabeticCharacters:
          type: boolean
          description: >-
              Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the beginning of a proposed password.
        ignoreTrailingNonAlphabeticCharacters:
          type: boolean
          description: >-
              Indicates whether to ignore any digits, symbols, or other non-alphabetic characters that may appear at the end of a proposed password.
        stripDiacriticalMarks:
          type: boolean
          description: >-
              Indicates whether to strip characters of any diacritical marks (like accents, cedillas, circumflexes, diaereses, tildes, and umlauts) they may contain. Any characters with a diacritical mark would be replaced with a base version
        alternativePasswordCharacterMapping:
          type: array
          items:
            type: string
          description: >-
              Provides a set of character substitutions that can be applied to the proposed password when checking to see if it is in the provided dictionary. Each mapping should consist of a single character followed by a colon and a list of the alternative characters that may be used in place of that character.
        maximumAllowedPercentOfPassword:
          type: integer
          description: >-
              The maximum allowed percent of a proposed password that any single dictionary word is allowed to comprise. A value of 100 indicates that a proposed password will only be rejected if the dictionary contains the entire proposed password (after any configured transformations have been applied).
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumdictionary-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:dictionary"
    add-haystack-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/haystack-password-validator-shared'
    haystack-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/haystack-password-validator-shared'
      required:
      - assumedPasswordGuessesPerSecond
      - minimumAcceptableTimeToExhaustSearchSpace
    haystack-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhaystack-password-validatorSchemaUrn'
        assumedPasswordGuessesPerSecond:
          type: string
          description: >-
              The number of password guesses per second that a potential attacker may be expected to make.
        minimumAcceptableTimeToExhaustSearchSpace:
          type: string
          description: >-
              The minimum length of time (using the configured number of password guesses per second) required to exhaust the entire search space for a proposed password in order for that password to be considered acceptable.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumhaystack-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:haystack"
    add-groovy-scripted-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
    groovy-scripted-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
    groovy-scripted-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-password-validatorSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Password Validator.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Password Validator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:groovy-scripted"
    add-pwned-passwords-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
    pwned-passwords-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
      required:
      - pwnedPasswordsBaseURL
      - invokeForAdd
      - invokeForSelfChange
      - invokeForAdminReset
      - acceptPasswordOnServiceError
    pwned-passwords-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpwned-passwords-password-validatorSchemaUrn'
        pwnedPasswordsBaseURL:
          type: string
          description: >-
              The base URL for requests used to interact with the Pwned Passwords service. The first five characters of the hexadecimal representation of the unsalted SHA-1 digest of a proposed password will be appended to this base URL to construct the HTTP GET request used to obtain information about potential matches.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Pwned Passwords service.
        invokeForAdd:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided in LDAP add requests.
        invokeForSelfChange:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided by an end user in the course of changing their own password.
        invokeForAdminReset:
          type: boolean
          description: >-
              Indicates whether this password validator should be used to validate clear-text passwords provided by administrators when changing the password for another user.
        acceptPasswordOnServiceError:
          type: boolean
          description: >-
              Indicates whether to accept the proposed password if an error occurs while attempting to interact with the Pwned Passwords service.
        keyManagerProvider:
          type: string
          description: >-
              Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
        trustManagerProvider:
          type: string
          description: >-
              Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the Pwned Password servers).
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumpwned-passwords-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:pwned-passwords"
    add-length-based-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/length-based-password-validator-shared'
    length-based-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/length-based-password-validator-shared'
    length-based-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlength-based-password-validatorSchemaUrn'
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that can be included in a proposed password.
        minPasswordLength:
          type: integer
          description: >-
              Specifies the minimum number of characters that must be included in a proposed password.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - enabled
    Enumlength-based-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:length-based"
    add-regular-expression-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
    regular-expression-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
    regular-expression-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumregular-expression-password-validatorSchemaUrn'
        matchPattern:
          type: string
          description: >-
              The regular expression to use for this password validator.
        matchBehavior:
          $ref: '#/components/schemas/Enumpassword-validator-matchBehaviorProp'
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - matchPattern
      - matchBehavior
      - enabled
    Enumregular-expression-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:regular-expression"
    add-unique-characters-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
    unique-characters-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
    unique-characters-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumunique-characters-password-validatorSchemaUrn'
        minUniqueCharacters:
          type: integer
          description: >-
              Specifies the minimum number of unique characters that a password will be allowed to contain.
        caseSensitiveValidation:
          type: boolean
          description: >-
              Indicates whether this password validator should treat password characters in a case-sensitive manner.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - minUniqueCharacters
      - caseSensitiveValidation
      - enabled
    Enumunique-characters-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:unique-characters"
    add-third-party-password-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            description: Name of the new Password Validator
            type: string
        required:
        - validatorName
      - $ref: '#/components/schemas/third-party-password-validator-shared'
    third-party-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Validator
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-password-validator-shared'
    third-party-password-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-password-validatorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Password Validator.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Password Validator. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether the password validator is enabled for use.
        validatorRequirementDescription:
          type: string
          description: >-
              Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
        validatorFailureMessage:
          type: string
          description: >-
              Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-password-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-validator:third-party"
    Enumpassword-validator-matchBehaviorProp:
      type: string
      enum:
      - "require-match"
      - "reject-match"
      description: >-
          The behavior to exhibit if a user's proposed password matches the regular expression defined in the match-pattern property.
    alarm-manager-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumalarm-managerSchemaUrn'
          defaultGaugeAlertLevel:
            $ref: '#/components/schemas/Enumalarm-manager-defaultGaugeAlertLevelProp'
          generatedAlertTypes:
            type: array
            items:
              $ref: '#/components/schemas/Enumalarm-manager-generatedAlertTypesProp'
          suppressedAlarm:
            type: array
            items:
              $ref: '#/components/schemas/Enumalarm-manager-suppressedAlarmProp'
        required:
        - defaultGaugeAlertLevel
        - generatedAlertTypes
    Enumalarm-managerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:alarm-manager"
    Enumalarm-manager-defaultGaugeAlertLevelProp:
      type: string
      enum:
      - "always"
      - "warning-and-above"
      - "minor-and-above"
      - "major-and-above"
      - "critical-only"
      - "never"
      description: >-
          Specifies the level at which alerts are sent for alarms raised by the Alarm Manager.
    Enumalarm-manager-suppressedAlarmProp:
      type: string
      enum:
      - "no-enabled-alert-handlers"
      - "pdp-unavailable"
      description: >-
          Specifies the names of the alarm alert types that should be suppressed. If the condition that triggers an alarm in this list occurs, then the alarm will not be raised and no alerts will be generated. Only a subset of alarms can be suppressed in this way. Alarms triggered by a gauge can be disabled by disabling the gauge.
    Enumalarm-manager-generatedAlertTypesProp:
      type: string
      enum:
      - "standard"
      - "alarm"
      description: >-
          Indicates what kind of alert types should be generated.
    add-jmx-connection-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Connection Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/jmx-connection-handler-shared'
    jmx-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jmx-connection-handler-shared'
    jmx-connection-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjmx-connection-handlerSchemaUrn'
        listenPort:
          type: integer
          description: >-
              Specifies the port number on which the JMX Connection Handler will listen for connections from clients.
        useSSL:
          type: boolean
          description: >-
              Indicates whether the JMX Connection Handler should use SSL.
        sslCertNickname:
          type: string
          description: >-
              Specifies the nickname (also called the alias) of the certificate that the JMX Connection Handler should use when performing SSL communication.
        keyManagerProvider:
          type: string
          description: >-
              Specifies the name of the key manager that should be used with this JMX Connection Handler .
        description:
          type: string
          description: >-
              A description for this Connection Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Connection Handler is enabled.
        allowedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.
        deniedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.
      required:
      - schemas
      - listenPort
      - enabled
    Enumjmx-connection-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx"
    add-ldap-connection-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Connection Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/ldap-connection-handler-shared'
    ldap-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldap-connection-handler-shared'
    ldap-connection-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldap-connection-handlerSchemaUrn'
        listenAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies the address or set of addresses on which this LDAP Connection Handler should listen for connections from LDAP clients.
        listenPort:
          type: integer
          description: >-
              Specifies the port number on which the LDAP Connection Handler will listen for connections from clients.
        useSSL:
          type: boolean
          description: >-
              Indicates whether the LDAP Connection Handler should use SSL.
        allowStartTLS:
          type: boolean
          description: >-
              Indicates whether clients are allowed to use StartTLS.
        sslCertNickname:
          type: string
          description: >-
              Specifies the nickname (also called the alias) of the certificate that the LDAP Connection Handler should use when performing SSL communication.
        keyManagerProvider:
          type: string
          description: >-
              Specifies the name of the key manager that should be used with this LDAP Connection Handler .
        trustManagerProvider:
          type: string
          description: >-
              Specifies the name of the trust manager that should be used with the LDAP Connection Handler .
        allowLDAPV2:
          type: boolean
          description: >-
              Indicates whether connections from LDAPv2 clients are allowed.
        useTCPKeepAlive:
          type: boolean
          description: >-
              Indicates whether the LDAP Connection Handler should use TCP keep-alive.
        sendRejectionNotice:
          type: boolean
          description: >-
              Indicates whether the LDAP Connection Handler should send a notice of disconnection extended response message to the client if a new connection is rejected for some reason.
        failedBindResponseDelay:
          type: string
          description: >-
              Specifies the length of time that the server should delay the response to non-successful bind operations. A value of zero milliseconds indicates that non-successful bind operations should not be delayed.
        maxRequestSize:
          type: string
          description: >-
              Specifies the size of the largest LDAP request message that will be allowed by this LDAP Connection handler.
        maxCancelHandlers:
          type: integer
          description: >-
              Specifies the maximum number of threads that are used to process cancel and abandon requests from clients.
        numAcceptHandlers:
          type: integer
          description: >-
              Specifies the number of threads that are used to accept new client connections, and to perform any initial preparation on those connections that may be needed before the connection can be used to read requests and send responses.
        numRequestHandlers:
          type: integer
          description: >-
              Specifies the number of request handlers that are used to read requests from clients.
        sslClientAuthPolicy:
          $ref: '#/components/schemas/Enumconnection-handler-sslClientAuthPolicyProp'
        acceptBacklog:
          type: integer
          description: >-
              Specifies the maximum number of pending connection attempts that are allowed to queue up in the accept backlog before the server starts rejecting new connection attempts.
        sslProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SSL protocols that are allowed for use in SSL or StartTLS communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.
        sslCipherSuite:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SSL cipher suites that are allowed for use in SSL or StartTLS communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.
        maxBlockedWriteTimeLimit:
          type: string
          description: >-
              Specifies the maximum length of time that attempts to write data to LDAP clients should be allowed to block.
        autoAuthenticateUsingClientCertificate:
          type: boolean
          description: >-
              Indicates whether to attempt to automatically authenticate a client connection that has established a secure communication channel (using either SSL or StartTLS) and presented its own client certificate. Generally, clients should use the SASL EXTERNAL mechanism to authenticate using a client certificate, but some clients may not support that capability and/or may expect automatic authentication.
        closeConnectionsWhenUnavailable:
          type: boolean
          description: >-
              Indicates whether all connections associated with this LDAP Connection Handler should be closed and no new connections accepted when the server has determined that it is "unavailable." This allows clients (or a network load balancer) to route requests to another server.
        closeConnectionsOnExplicitGC:
          type: boolean
          description: >-
              Indicates whether all connections associated with this LDAP Connection Handler should be closed before an explicit garbage collection is performed to allow clients to route requests to another server.
        description:
          type: string
          description: >-
              A description for this Connection Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Connection Handler is enabled.
        allowedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.
        deniedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.
      required:
      - schemas
      - listenPort
      - enabled
    Enumldap-connection-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap"
    add-ldif-connection-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Connection Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/ldif-connection-handler-shared'
    ldif-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldif-connection-handler-shared'
      required:
      - ldifDirectory
      - pollInterval
    ldif-connection-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldif-connection-handlerSchemaUrn'
        allowedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are allowed to establish connections to this connection handler.
        deniedClient:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of address masks that determines the addresses of the clients that are not allowed to establish connections to this connection handler.
        ldifDirectory:
          type: string
          description: >-
              Specifies the path to the directory in which the LDIF files should be placed.
        pollInterval:
          type: string
          description: >-
              Specifies how frequently the LDIF connection handler should check the LDIF directory to determine whether a new LDIF file has been added.
        description:
          type: string
          description: >-
              A description for this Connection Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Connection Handler is enabled.
      required:
      - schemas
      - enabled
    Enumldif-connection-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif"
    add-http-connection-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Connection Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/http-connection-handler-shared'
    http-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Connection Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/http-connection-handler-shared'
    http-connection-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhttp-connection-handlerSchemaUrn'
        listenAddress:
          type: string
          description: >-
              Specifies the address on which to listen for connections from HTTP clients. If no value is defined, the server will listen on all addresses on all interfaces.
        listenPort:
          type: integer
          description: >-
              Specifies the port number on which the HTTP Connection Handler will listen for connections from clients.
        useSSL:
          type: boolean
          description: >-
              Indicates whether the HTTP Connection Handler should use SSL.
        sslCertNickname:
          type: string
          description: >-
              Specifies the nickname (also called the alias) of the certificate that the HTTP Connection Handler should use when performing SSL communication.
        httpServletExtension:
          type: array
          items:
            type: string
          description: >-
              Specifies information about servlets that will be provided via this connection handler.
        webApplicationExtension:
          type: array
          items:
            type: string
          description: >-
              Specifies information about web applications that will be provided via this connection handler.
        httpOperationLogPublisher:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of HTTP operation loggers that should be used to log information about requests and responses for operations processed through this HTTP Connection Handler.
        sslProtocol:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SSL protocols that are allowed for use in SSL communication. The set of supported ssl protocols can be viewed via the ssl context monitor entry.
        sslCipherSuite:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SSL cipher suites that are allowed for use in SSL communication. The set of supported cipher suites can be viewed via the ssl context monitor entry.
        keyManagerProvider:
          type: string
          description: >-
              Specifies the key manager provider that will be used to obtain the certificate to present to HTTPS clients.
        trustManagerProvider:
          type: string
          description: >-
              Specifies the trust manager provider that will be used to validate any certificates presented by HTTPS clients.
        numRequestHandlers:
          type: integer
          description: >-
              Specifies the number of threads that will be used for accepting connections and reading requests from clients.
        keepStats:
          type: boolean
          description: >-
              Indicates whether to enable statistics collection for this connection handler.
        acceptBacklog:
          type: integer
          description: >-
              Specifies the number of concurrent outstanding connection attempts that the connection handler should allow. The default value should be acceptable in most cases, but it may need to be increased in environments that may attempt to establish large numbers of connections simultaneously.
        allowTCPReuseAddress:
          type: boolean
          description: >-
              Indicates whether the server should attempt to reuse socket descriptors. This may be useful in environments with a high rate of connection establishment and termination.
        idleTimeLimit:
          type: string
          description: >-
              Specifies the maximum idle time for a connection. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
        lowResourcesConnectionThreshold:
          type: integer
          description: >-
              Specifies the number of connections, which if exceeded, places this handler in a low resource state where a different idle time limit is applied on the connections.
        lowResourcesIdleTimeLimit:
          type: string
          description: >-
              Specifies the maximum idle time for a connection when this handler is in a low resource state as defined by low-resource-connections. The max idle time is applied when waiting for a new request to be received on a connection, when reading the headers and content of a request, or when writing the headers and content of a response.
        enableMultipartMIMEParameters:
          type: boolean
          description: >-
              Determines whether request form parameters submitted in multipart/ form-data (RFC 2388) format should be processed as request parameters.
        useForwardedHeaders:
          type: boolean
          description: >-
              Indicates whether to use "Forwarded" and "X-Forwarded-*" request headers to override corresponding HTTP request information available during request processing.
        httpRequestHeaderSize:
          type: integer
          description: >-
              Specifies the maximum buffer size of an http request including the request uri and all of the request headers.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        useCorrelationIDHeader:
          type: boolean
          description: >-
              If enabled, a correlation ID header will be added to outgoing HTTP responses.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        correlationIDRequestHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of HTTP request headers that may contain a value to be used as the correlation ID. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        sslClientAuthPolicy:
          $ref: '#/components/schemas/Enumconnection-handler-sslClientAuthPolicyProp'
        description:
          type: string
          description: >-
              A description for this Connection Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the Connection Handler is enabled.
      required:
      - schemas
      - listenPort
      - enabled
    Enumhttp-connection-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:connection-handler:http"
    Enumconnection-handler-sslClientAuthPolicyProp:
      type: string
      enum:
      - "disabled"
      - "optional"
      - "required"
      description: >-
          Specifies the policy that the LDAP Connection Handler should use regarding client SSL certificates.
    console-web-application-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsole-web-application-extensionSchemaUrn'
          id:
            description: Name of the Web Application Extension
            type: string
          ssoEnabled:
            type: boolean
            description: >-
                Indicates that SSO login into the Administrative Console is enabled.
          oidcClientID:
            type: string
            description: >-
                The client ID to use when authenticating to the OpenID Connect provider.
          oidcClientSecret:
            type: string
            format: password
            description: >-
                The client secret to use when authenticating to the OpenID Connect provider.
          oidcClientSecretPassphraseProvider:
            type: string
            description: >-
                A passphrase provider that may be used to obtain the client secret to use when authenticating to the OpenID Connect provider.
          oidcIssuerURL:
            type: string
            description: >-
                The issuer URL of the OpenID Connect provider.
          oidcTrustStoreFile:
            type: string
            description: >-
                Specifies the path to the truststore file used by this application to evaluate OIDC provider certificates. If this field is left blank, the default JVM trust store will be used.
          oidcTrustStoreType:
            type: string
            description: >-
                Specifies the format for the data in the OIDC trust store file.
          oidcTrustStorePinPassphraseProvider:
            type: string
            description: >-
                The passphrase provider that may be used to obtain the PIN for the trust store used with OIDC providers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
          oidcStrictHostnameVerification:
            type: boolean
            description: >-
                Controls whether or not hostname verification is performed, which checks if the hostname of the OIDC provider matches the name(s) stored inside the certificate it provides. This property should only be set to false for testing purposes.
          oidcTrustAll:
            type: boolean
            description: >-
                Controls whether or not this application will always trust any certificate that is presented to it, regardless of its contents. This property should only be set to true for testing purposes.
          ldapServer:
            type: string
            description: >-
                The LDAP URL used to connect to the managed server.
          trustStoreFile:
            type: string
            description: >-
                Specifies the path to the truststore file, which is used by this application to establish trust of managed servers.
          trustStoreType:
            type: string
            description: >-
                Specifies the format for the data in the trust store file.
          trustStorePinPassphraseProvider:
            type: string
            description: >-
                The passphrase provider that may be used to obtain the PIN for the trust store used with managed LDAP servers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
          logFile:
            type: string
            description: >-
                The path to the log file for the web application.
          complexity:
            $ref: '#/components/schemas/Enumweb-application-extension-complexityProp'
          description:
            type: string
            description: >-
                A description for this Web Application Extension
          baseContextPath:
            type: string
            description: >-
                Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
          warFile:
            type: string
            description: >-
                Specifies the path to a standard web application archive (WAR) file.
          documentRootDirectory:
            type: string
            description: >-
                Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
          deploymentDescriptorFile:
            type: string
            description: >-
                Specifies the path to the deployment descriptor file when used with document-root-directory.
          temporaryDirectory:
            type: string
            description: >-
                Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
          initParameter:
            type: array
            items:
              type: string
            description: >-
                Specifies an initialization parameter to pass into the web application during startup.
        required:
        - schemas
        - baseContextPath
        - id
    Enumconsole-web-application-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:console"
    add-generic-web-application-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new Web Application Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/generic-web-application-extension-shared'
    generic-web-application-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Web Application Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generic-web-application-extension-shared'
    generic-web-application-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-web-application-extensionSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Web Application Extension
        baseContextPath:
          type: string
          description: >-
              Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
        warFile:
          type: string
          description: >-
              Specifies the path to a standard web application archive (WAR) file.
        documentRootDirectory:
          type: string
          description: >-
              Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
        deploymentDescriptorFile:
          type: string
          description: >-
              Specifies the path to the deployment descriptor file when used with document-root-directory.
        temporaryDirectory:
          type: string
          description: >-
              Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
        initParameter:
          type: array
          items:
            type: string
          description: >-
              Specifies an initialization parameter to pass into the web application during startup.
      required:
      - schemas
      - baseContextPath
    Enumgeneric-web-application-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:generic"
    Enumweb-application-extension-complexityProp:
      type: string
      enum:
      - "basic"
      - "standard"
      - "advanced"
      - "expert"
      description: >-
          Specifies the maximum complexity level for managed configuration elements.
    add-trusted-certificate-request:
      allOf:
      - type: object
        properties:
          certificateName:
            description: Name of the new Trusted Certificate
            type: string
        required:
        - certificateName
      - $ref: '#/components/schemas/trusted-certificate-shared'
    trusted-certificate-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Trusted Certificate
            type: string
        required:
        - id
      - $ref: '#/components/schemas/trusted-certificate-shared'
    trusted-certificate-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtrusted-certificateSchemaUrn'
        certificate:
          type: string
          description: >-
              The PEM-encoded X.509v3 certificate.
      required:
      - certificate
    Enumtrusted-certificateSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:trusted-certificate"
    add-simple-search-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-search-entry-criteria-shared'
    simple-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-search-entry-criteria-shared'
    simple-search-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-search-entry-criteriaSchemaUrn'
        requestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that must match the associated request for entries included in this Simple Search Entry Criteria. of them.
        allIncludedEntryControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must contain all of those controls.
        anyIncludedEntryControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that may be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must contain at least one of those controls.
        notAllIncludedEntryControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that should not be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must not contain at least one of those controls (that is, it may contain zero or more of those controls, but not all of them).
        noneIncludedEntryControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must not be present in search result entries included in this Simple Search Entry Criteria. If any control OIDs are provided, then the entry must not contain any of those controls.
        includedEntryBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which entries included in this Simple Search Entry Criteria may exist.
        excludedEntryBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which entries included in this Simple Search Entry Criteria may not exist.
        allIncludedEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the returned entry must match all of those filters.
        anyIncludedEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that may match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must match at least one of those filters.
        notAllIncludedEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that should not match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must not match at least one of those filters (that is, the entry may match zero or more of those filters, but not of all of them).
        noneIncludedEntryFilter:
          type: array
          items:
            type: string
          description: >-
              Specifies a search filter that must not match search result entries included in this Simple Search Entry Criteria. Note that this matching will be performed against the entry that is actually returned to the client and may not reflect the complete entry stored in the server. If any filters are provided, then the entry must not match any of those filters.
        allIncludedEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the entry must be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must be a member of all of them.
        anyIncludedEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the entry may be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must be a member of at least one of them.
        notAllIncludedEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the entry should not be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must not be a member of at least one of them (that is, the entry may be a member of zero or more of the specified groups, but not of all of them).
        noneIncludedEntryGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which the user associated with the entry must not be a member to be included in this Simple Search Entry Criteria. If any group DNs are provided, then the entry must not be a member of any of them.
        description:
          type: string
          description: >-
              A description for this Search Entry Criteria
      required:
      - schemas
    Enumsimple-search-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:simple"
    add-aggregate-search-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/aggregate-search-entry-criteria-shared'
    aggregate-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-search-entry-criteria-shared'
    aggregate-search-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-search-entry-criteriaSchemaUrn'
        allIncludedSearchEntryCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search entry criteria object that must match the associated search result entry in order to match the aggregate search entry criteria. If one or more all-included search entry criteria objects are provided, then a search result entry must match all of them in order to match the aggregate search entry criteria.
        anyIncludedSearchEntryCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search entry criteria object that may match the associated search result entry in order to match the aggregate search entry criteria. If one or more any-included search entry criteria objects are provided, then a search result entry must match at least one of them in order to match the aggregate search entry criteria.
        notAllIncludedSearchEntryCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search entry criteria object that should not match the associated search result entry in order to match the aggregate search entry criteria. If one or more not-all-included search entry criteria objects are provided, then a search result entry must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate search entry criteria.
        noneIncludedSearchEntryCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a search entry criteria object that must not match the associated search result entry in order to match the aggregate search entry criteria. If one or more none-included search entry criteria objects are provided, then a search result entry must not match any of them in order to match the aggregate search entry criteria.
        description:
          type: string
          description: >-
              A description for this Search Entry Criteria
      required:
      - schemas
    Enumaggregate-search-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:aggregate"
    add-third-party-search-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Search Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-search-entry-criteria-shared'
    third-party-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Search Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-search-entry-criteria-shared'
    third-party-search-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-search-entry-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Search Entry Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Search Entry Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Search Entry Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-search-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:third-party"
    add-delay-bind-response-failure-lockout-action-request:
      allOf:
      - type: object
        properties:
          actionName:
            description: Name of the new Failure Lockout Action
            type: string
        required:
        - actionName
      - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-shared'
    delay-bind-response-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Failure Lockout Action
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-shared'
    delay-bind-response-failure-lockout-action-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelay-bind-response-failure-lockout-actionSchemaUrn'
        delay:
          type: string
          description: >-
              The length of time to delay the bind response for accounts with too many failed authentication attempts.
        allowBlockingDelay:
          type: boolean
          description: >-
              Indicates whether to delay the response for authentication attempts even if that delay may block the thread being used to process the attempt.
        generateAccountStatusNotification:
          type: boolean
          description: >-
              Indicates whether to generate an account status notification for cases in which a bind response is delayed because of failure lockout.
        description:
          type: string
          description: >-
              A description for this Failure Lockout Action
      required:
      - schemas
      - delay
    Enumdelay-bind-response-failure-lockout-actionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:delay-bind-response"
    add-no-operation-failure-lockout-action-request:
      allOf:
      - type: object
        properties:
          actionName:
            description: Name of the new Failure Lockout Action
            type: string
        required:
        - actionName
      - $ref: '#/components/schemas/no-operation-failure-lockout-action-shared'
    no-operation-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Failure Lockout Action
            type: string
        required:
        - id
      - $ref: '#/components/schemas/no-operation-failure-lockout-action-shared'
    no-operation-failure-lockout-action-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumno-operation-failure-lockout-actionSchemaUrn'
        generateAccountStatusNotification:
          type: boolean
          description: >-
              Indicates whether to generate an account status notification for cases in which this failure lockout action is invoked for a bind attempt with too many outstanding authentication failures.
        description:
          type: string
          description: >-
              A description for this Failure Lockout Action
      required:
      - schemas
    Enumno-operation-failure-lockout-actionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:no-operation"
    add-lock-account-failure-lockout-action-request:
      allOf:
      - type: object
        properties:
          actionName:
            description: Name of the new Failure Lockout Action
            type: string
        required:
        - actionName
      - $ref: '#/components/schemas/lock-account-failure-lockout-action-shared'
    lock-account-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Failure Lockout Action
            type: string
        required:
        - id
      - $ref: '#/components/schemas/lock-account-failure-lockout-action-shared'
    lock-account-failure-lockout-action-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlock-account-failure-lockout-actionSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Failure Lockout Action
      required:
      - schemas
    Enumlock-account-failure-lockout-actionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:lock-account"
    add-subject-equals-dn-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-shared'
    subject-equals-dn-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-shared'
    subject-equals-dn-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsubject-equals-dn-certificate-mapperSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - enabled
    Enumsubject-equals-dn-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn"
    add-subject-dn-to-user-attribute-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-shared'
    subject-dn-to-user-attribute-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-shared'
      required:
      - subjectAttribute
    subject-dn-to-user-attribute-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsubject-dn-to-user-attribute-certificate-mapperSchemaUrn'
        subjectAttribute:
          type: string
          description: >-
              Specifies the name or OID of the attribute whose value should exactly match the certificate subject DN.
        userBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - enabled
    Enumsubject-dn-to-user-attribute-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute"
    add-groovy-scripted-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-shared'
    groovy-scripted-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-shared'
    groovy-scripted-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-certificate-mapperSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted"
    add-subject-attribute-to-user-attribute-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-shared'
    subject-attribute-to-user-attribute-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-shared'
    subject-attribute-to-user-attribute-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsubject-attribute-to-user-attribute-certificate-mapperSchemaUrn'
        subjectAttributeMapping:
          type: array
          items:
            type: string
          description: >-
              Specifies a mapping between certificate attributes and user attributes.
        userBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs that should be used when performing searches to map the client certificate to a user entry.
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - subjectAttributeMapping
      - enabled
    Enumsubject-attribute-to-user-attribute-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute"
    add-fingerprint-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/fingerprint-certificate-mapper-shared'
    fingerprint-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/fingerprint-certificate-mapper-shared'
      required:
      - fingerprintAttribute
    fingerprint-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfingerprint-certificate-mapperSchemaUrn'
        fingerprintAttribute:
          type: string
          description: >-
              Specifies the attribute in which to look for the fingerprint.
        fingerprintAlgorithm:
          $ref: '#/components/schemas/Enumcertificate-mapper-fingerprintAlgorithmProp'
        userBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of base DNs below which to search for users.
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - fingerprintAlgorithm
      - enabled
    Enumfingerprint-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint"
    add-third-party-certificate-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Certificate Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/third-party-certificate-mapper-shared'
    third-party-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Certificate Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-certificate-mapper-shared'
    third-party-certificate-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-certificate-mapperSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Certificate Mapper.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Certificate Mapper. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Certificate Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Certificate Mapper is enabled.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-certificate-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party"
    Enumcertificate-mapper-fingerprintAlgorithmProp:
      type: string
      enum:
      - "md5"
      - "sha1"
      - "sha256"
      description: >-
          Specifies the name of the digest algorithm to compute the fingerprint of client certificates.
    add-syslog-json-audit-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-shared'
    syslog-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-shared'
      required:
      - syslogFacility
      - syslogSeverity
    syslog-json-audit-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-json-audit-log-publisherSchemaUrn'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog JSON Audit Log Publisher.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        useReversibleForm:
          type: boolean
          description: >-
              Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-syslog-json-audit-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any operation purpose request control that may have been included in the request.
        includeIntermediateClientRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any intermediate client request control that may have been included in the request.
        obscureAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
        excludeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should be excluded from the audit log.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-json-audit-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit"
    add-syslog-based-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-shared'
    syslog-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-shared'
      required:
      - serverHostName
      - serverPort
      - syslogFacility
      - asynchronous
    syslog-based-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-based-error-log-publisherSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Syslog Based Error Log Publisher is enabled for use.
        serverHostName:
          type: string
          description: >-
              Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
        serverPort:
          type: integer
          description: >-
              Specifies the port number of the syslogd host to log to.
        syslogFacility:
          type: integer
          description: >-
              Specifies the syslog facility to use for this Syslog Based Error Log Publisher
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Syslog Based Error Log Publisher will publish records asynchronously.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - enabled
    Enumsyslog-based-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error"
    add-third-party-file-based-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-shared'
    third-party-file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    third-party-file-based-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-file-based-access-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Third Party File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Third Party File Based Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Third Party File Based Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Third Party File Based Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party File Based Access Log Publisher.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Third Party File Based Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - extensionClass
      - enabled
    Enumthird-party-file-based-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access"
    add-operation-timing-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-shared'
    operation-timing-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    operation-timing-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumoperation-timing-access-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Operation Timing Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Operation Timing Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Operation Timing Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages should include the DN of the authenticated user for the client connection on which the operation was requested.
        minIncludedOperationProcessingTime:
          type: string
          description: >-
              The minimum processing time (i.e., "etime") for operations that should be logged by this Operation Timing Access Log Publisher
        minIncludedPhaseTimeNanos:
          type: integer
          description: >-
              The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Operation Timing Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumoperation-timing-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access"
    add-third-party-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-shared'
    third-party-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-shared'
    third-party-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-http-operation-log-publisherSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party HTTP Operation Log Publisher.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation"
    add-admin-alert-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-shared'
    admin-alert-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-shared'
      required:
      - asynchronous
    admin-alert-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumadmin-alert-access-log-publisherSchemaUrn'
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Admin Alert Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Admin Alert Access Log Publisher.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Admin Alert Access Log Publisher will publish records asynchronously.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - enabled
    Enumadmin-alert-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access"
    add-file-based-trace-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-trace-log-publisher-shared'
    file-based-trace-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-trace-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-trace-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-trace-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based Trace Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based Trace Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based Trace Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based Trace Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Writer Based Trace Log Publisher will publish records asynchronously.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        debugMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-debugMessageTypeProp'
        httpMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-httpMessageTypeProp'
        accessTokenValidatorMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-accessTokenValidatorMessageTypeProp'
        idTokenValidatorMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-idTokenValidatorMessageTypeProp'
        scimMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-scimMessageTypeProp'
        consentMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-consentMessageTypeProp'
        directoryRESTAPIMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-directoryRESTAPIMessageTypeProp'
        extensionMessageType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-extensionMessageTypeProp'
        includePathPattern:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of HTTP request URL paths to determine whether log messages are included for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).
        excludePathPattern:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of HTTP request URL paths to determine whether log messages are excluded for a HTTP request. Log messages are included for a HTTP request if the request path does not match any exclude-path-pattern, and the request path does match an include-path-pattern (or no include-path-pattern is specified).
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-trace-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace"
    add-jdbc-based-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-shared'
    jdbc-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-shared'
      required:
      - logTableName
    jdbc-based-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjdbc-based-error-log-publisherSchemaUrn'
        server:
          type: string
          description: >-
              The JDBC-based Database Server to use for a connection.
        logFieldMapping:
          type: string
          description: >-
              The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
        logTableName:
          type: string
          description: >-
              The table name to log entries to the database server.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - server
      - logFieldMapping
      - enabled
    Enumjdbc-based-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error"
    add-jdbc-based-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-shared'
    jdbc-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-shared'
      required:
      - logTableName
    jdbc-based-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjdbc-based-access-log-publisherSchemaUrn'
        server:
          type: string
          description: >-
              The JDBC-based Database Server to use for a connection.
        logFieldMapping:
          type: string
          description: >-
              The log field mapping associates loggable fields to database column names. The table name is not part of this mapping.
        logTableName:
          type: string
          description: >-
              The table name to log entries to the database server.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - server
      - logFieldMapping
      - enabled
    Enumjdbc-based-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access"
    add-common-log-file-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-shared'
    common-log-file-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    common-log-file-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcommon-log-file-http-operation-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Common Log File HTTP Operation Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Common Log File HTTP Operation Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Common Log File HTTP Operation Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Common Log File HTTP Operation Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Common Log File HTTP Operation Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumcommon-log-file-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation"
    console-json-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsole-json-error-log-publisherSchemaUrn'
          id:
            description: Name of the Log Publisher
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Console JSON Error Log Publisher is enabled for use.
          defaultSeverity:
            type: array
            items:
              $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          writeMultiLineMessages:
            type: boolean
            description: >-
                Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
          outputLocation:
            $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
          includeProductName:
            type: boolean
            description: >-
                Indicates whether log messages should include the product name for the Directory Server.
          includeInstanceName:
            type: boolean
            description: >-
                Indicates whether log messages should include the instance name for the Directory Server.
          includeStartupID:
            type: boolean
            description: >-
                Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
          includeThreadID:
            type: boolean
            description: >-
                Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
          generifyMessageStringsWhenPossible:
            type: boolean
            description: >-
                Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
          overrideSeverity:
            type: array
            items:
              type: string
            description: >-
                Specifies the override severity levels for the logger based on the category of the messages.
          description:
            type: string
            description: >-
                A description for this Log Publisher
          loggingErrorBehavior:
            $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
        required:
        - schemas
        - enabled
        - id
    Enumconsole-json-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error"
    add-syslog-text-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-shared'
    syslog-text-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-shared'
      required:
      - syslogFacility
    syslog-text-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-text-error-log-publisherSchemaUrn'
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog Text Error Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog Text Error Log Publisher.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-text-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error"
    add-syslog-based-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-shared'
    syslog-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-shared'
      required:
      - serverHostName
      - serverPort
      - syslogFacility
      - asynchronous
    syslog-based-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-based-access-log-publisherSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Syslog Based Access Log Publisher is enabled for use.
        serverHostName:
          type: string
          description: >-
              Specifies the hostname or IP address of the syslogd host to log to. It is highly recommend to use localhost.
        serverPort:
          type: integer
          description: >-
              Specifies the port number of the syslogd host to log to.
        syslogFacility:
          type: integer
          description: >-
              Specifies the syslog facility to use for this Syslog Based Access Log Publisher
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Writer Based Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - enabled
    Enumsyslog-based-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access"
    add-file-based-json-audit-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-shared'
    file-based-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-json-audit-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-json-audit-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based JSON Audit Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based JSON Audit Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based JSON Audit Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based JSON Audit Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the File Based JSON Audit Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        useReversibleForm:
          type: boolean
          description: >-
              Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-file-based-json-audit-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any operation purpose request control that may have been included in the request.
        includeIntermediateClientRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any intermediate client request control that may have been included in the request.
        obscureAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
        excludeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should be excluded from the audit log.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-json-audit-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit"
    add-file-based-debug-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-debug-log-publisher-shared'
    file-based-debug-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-debug-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
      - defaultDebugLevel
    file-based-debug-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-debug-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based Debug Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based Debug Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based Debug Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based Debug Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the File Based Debug Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        defaultDebugLevel:
          $ref: '#/components/schemas/Enumlog-publisher-defaultDebugLevelProp'
        defaultDebugCategory:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultDebugCategoryProp'
        defaultOmitMethodEntryArguments:
          type: boolean
          description: >-
              Indicates whether to include method arguments in debug messages logged by default.
        defaultOmitMethodReturnValue:
          type: boolean
          description: >-
              Indicates whether to include the return value in debug messages logged by default.
        defaultIncludeThrowableCause:
          type: boolean
          description: >-
              Indicates whether to include the cause of exceptions in exception thrown and caught messages logged by default.
        defaultThrowableStackFrames:
          type: integer
          description: >-
              Indicates the number of stack frames to include in the stack trace for method entry and exception thrown messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-debug-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug"
    add-file-based-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-error-log-publisher-shared'
    file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-error-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-error-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based Error Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based Error Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based Error Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the File Based Error Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error"
    add-third-party-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/third-party-error-log-publisher-shared'
    third-party-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-error-log-publisher-shared'
    third-party-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-error-log-publisherSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Error Log Publisher.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Error Log Publisher. Each configuration property should be given in the form 'name=value'.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error"
    add-syslog-text-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-shared'
    syslog-text-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-shared'
      required:
      - syslogFacility
      - syslogSeverity
      - asynchronous
    syslog-text-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-text-access-log-publisherSchemaUrn'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog Text Access Log Publisher.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Writer Based Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-text-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access"
    add-detailed-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-shared'
    detailed-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    detailed-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdetailed-http-operation-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Detailed HTTP Operation Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Detailed HTTP Operation Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Detailed HTTP Operation Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Detailed HTTP Operation Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about requests received from the client.
        logResults:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
        logRequestAuthorizationType:
          type: boolean
          description: >-
              Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization" header.
        logRequestCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logResponseCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        logRequestProtocol:
          type: boolean
          description: >-
              Indicates whether request log messages should include information about the HTTP version specified in the request.
        suppressedRequestParameterName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
        logRedirectURI:
          type: boolean
          description: >-
              Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in response log messages.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Detailed HTTP Operation Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum length of any individual string that should be logged. If a log message includes a string longer than this number of characters, it will be truncated. A value of zero indicates that no truncation will be used.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumdetailed-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
    add-json-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/json-access-log-publisher-shared'
    json-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/json-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    json-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjson-access-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the JSON Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this JSON Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the JSON Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the JSON Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the JSON Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumjson-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access"
    add-debug-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/debug-access-log-publisher-shared'
    debug-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/debug-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    debug-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdebug-access-log-publisherSchemaUrn'
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Debug Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Debug Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Debug Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Debug Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        obscureSensitiveContent:
          type: boolean
          description: >-
              Indicates whether the resulting log file should attempt to obscure content that may be considered sensitive. This primarily includes the credentials for bind requests, the values of password modify extended requests and responses, and the values of any attributes specified in the obscure-attribute property. Note that the use of this option does not guarantee no sensitive information will be exposed, so the log output should still be carefully guarded.
        obscureAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should have their values obscured if the obscure-sensitive-content property has a value of true.
        debugACIEnabled:
          type: boolean
          description: >-
              Indicates whether to include debugging information about ACIs being used by the operations being logged.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Debug Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumdebug-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access"
    add-syslog-json-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-shared'
    syslog-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-shared'
      required:
      - syslogFacility
      - syslogSeverity
    syslog-json-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-json-http-operation-log-publisherSchemaUrn'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog JSON HTTP Operation Log Publisher.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about requests received from the client.
        logResults:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
        logRequestAuthorizationType:
          type: boolean
          description: >-
              Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization" header.
        logRequestCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logResponseCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
        logRequestProtocol:
          type: boolean
          description: >-
              Indicates whether request log messages should include information about the HTTP version specified in the request.
        logRedirectURI:
          type: boolean
          description: >-
              Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in response log messages.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-json-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation"
    add-third-party-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/third-party-access-log-publisher-shared'
    third-party-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-access-log-publisher-shared'
    third-party-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-access-log-publisherSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Access Log Publisher.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Access Log Publisher. Each configuration property should be given in the form 'name=value'.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access"
    add-file-based-audit-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-audit-log-publisher-shared'
    file-based-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-audit-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-audit-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-audit-log-publisherSchemaUrn'
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based Audit Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based Audit Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based Audit Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based Audit Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        useReversibleForm:
          type: boolean
          description: >-
              Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-file-based-audit-softDeleteEntryAuditBehaviorProp'
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeOperationPurposeRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any operation purpose request control that may have been included in the request.
        includeIntermediateClientRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any intermediate client request control that may have been included in the request.
        obscureAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
        excludeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should be excluded from the audit log.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the File Based Audit Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-audit-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit"
    add-json-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/json-error-log-publisher-shared'
    json-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/json-error-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    json-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjson-error-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the JSON Error Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this JSON Error Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the JSON Error Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the JSON Error Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the JSON Error Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumjson-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error"
    add-groovy-scripted-file-based-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-shared'
    groovy-scripted-file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    groovy-scripted-file-based-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-file-based-access-log-publisherSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Access Log Publisher.
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Scripted File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Scripted File Based Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Scripted File Based Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Scripted File Based Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted File Based Access Log Publisher. Each configuration property should be given in the form 'name=value'.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Scripted File Based Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - scriptClass
      - logFile
      - enabled
    Enumgroovy-scripted-file-based-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access"
    add-groovy-scripted-file-based-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-shared'
    groovy-scripted-file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    groovy-scripted-file-based-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-file-based-error-log-publisherSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted File Based Error Log Publisher.
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Scripted File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Scripted File Based Error Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Scripted File Based Error Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Scripted File Based Error Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Scripted File Based Error Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - scriptClass
      - logFile
      - enabled
    Enumgroovy-scripted-file-based-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error"
    add-syslog-json-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-shared'
    syslog-json-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-shared'
      required:
      - syslogFacility
      - syslogSeverity
    syslog-json-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-json-access-log-publisherSchemaUrn'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog JSON Access Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog JSON Access Log Publisher.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-json-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access"
    add-groovy-scripted-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-shared'
    groovy-scripted-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-shared'
    groovy-scripted-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-access-log-publisherSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Access Log Publisher.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Access Log Publisher. Each configuration property should be given in the form 'name=value'.
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access"
    add-third-party-file-based-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-shared'
    third-party-file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    third-party-file-based-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-file-based-error-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the Third Party File Based Error Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this Third Party File Based Error Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the Third Party File Based Error Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the Third Party File Based Error Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party File Based Error Log Publisher.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party File Based Error Log Publisher. Each configuration property should be given in the form 'name=value'.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Third Party File Based Error Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - extensionClass
      - enabled
    Enumthird-party-file-based-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error"
    add-console-json-audit-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/console-json-audit-log-publisher-shared'
    console-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/console-json-audit-log-publisher-shared'
    console-json-audit-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconsole-json-audit-log-publisherSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Console JSON Audit Log Publisher is enabled for use.
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        useReversibleForm:
          type: boolean
          description: >-
              Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-console-json-audit-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any operation purpose request control that may have been included in the request.
        includeIntermediateClientRequestControl:
          type: boolean
          description: >-
              Indicates whether to include information about any intermediate client request control that may have been included in the request.
        obscureAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should have their values obscured in the audit log because they may be considered sensitive.
        excludeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of any attribute types that should be excluded from the audit log.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - enabled
    Enumconsole-json-audit-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit"
    add-console-json-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-shared'
    console-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-shared'
    console-json-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconsole-json-http-operation-log-publisherSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Console JSON HTTP Operation Log Publisher is enabled for use.
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        logRequests:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about requests received from the client.
        logResults:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
        logRequestAuthorizationType:
          type: boolean
          description: >-
              Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization" header.
        logRequestCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logResponseCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
        logRequestProtocol:
          type: boolean
          description: >-
              Indicates whether request log messages should include information about the HTTP version specified in the request.
        logRedirectURI:
          type: boolean
          description: >-
              Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in response log messages.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - enabled
    Enumconsole-json-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation"
    console-json-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsole-json-access-log-publisherSchemaUrn'
          id:
            description: Name of the Log Publisher
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Console JSON Access Log Publisher is enabled for use.
          writeMultiLineMessages:
            type: boolean
            description: >-
                Indicates whether the JSON objects should be formatted to span multiple lines with a single element on each line. The multi-line format is potentially more user friendly (if administrators may need to look at the log files), but each message will be larger because of the additional spaces and end-of-line markers.
          outputLocation:
            $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
          includeProductName:
            type: boolean
            description: >-
                Indicates whether log messages should include the product name for the Directory Server.
          includeInstanceName:
            type: boolean
            description: >-
                Indicates whether log messages should include the instance name for the Directory Server.
          includeStartupID:
            type: boolean
            description: >-
                Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
          includeThreadID:
            type: boolean
            description: >-
                Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
          includeRequesterDN:
            type: boolean
            description: >-
                Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
          includeRequesterIPAddress:
            type: boolean
            description: >-
                Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
          includeRequestDetailsInResultMessages:
            type: boolean
            description: >-
                Indicates whether log messages for operation results should include information about both the request and the result.
          includeRequestDetailsInSearchEntryMessages:
            type: boolean
            description: >-
                Indicates whether log messages for search result entries should include information about the associated search request.
          includeRequestDetailsInSearchReferenceMessages:
            type: boolean
            description: >-
                Indicates whether log messages for search result references should include information about the associated search request.
          includeRequestDetailsInIntermediateResponseMessages:
            type: boolean
            description: >-
                Indicates whether log messages for intermediate responses should include information about the associated operation request.
          includeResultCodeNames:
            type: boolean
            description: >-
                Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
          includeExtendedSearchRequestDetails:
            type: boolean
            description: >-
                Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
          includeAddAttributeNames:
            type: boolean
            description: >-
                Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
          includeModifyAttributeNames:
            type: boolean
            description: >-
                Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
          includeSearchEntryAttributeNames:
            type: boolean
            description: >-
                Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
          includeRequestControls:
            type: boolean
            description: >-
                Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
          includeResponseControls:
            type: boolean
            description: >-
                Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
          includeReplicationChangeID:
            type: boolean
            description: >-
                Indicates whether to log information about the replication change ID.
          generifyMessageStringsWhenPossible:
            type: boolean
            description: >-
                Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
          maxStringLength:
            type: integer
            description: >-
                Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
          logFieldBehavior:
            type: string
            description: >-
                The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
          logConnects:
            type: boolean
            description: >-
                Indicates whether to log information about connections established to the server.
          logDisconnects:
            type: boolean
            description: >-
                Indicates whether to log information about connections that have been closed by the client or terminated by the server.
          logSecurityNegotiation:
            type: boolean
            description: >-
                Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
          logClientCertificates:
            type: boolean
            description: >-
                Indicates whether to log information about any client certificates presented to the server.
          logRequests:
            type: boolean
            description: >-
                Indicates whether to log information about requests received from clients.
          logResults:
            type: boolean
            description: >-
                Indicates whether to log information about the results of client requests.
          logSearchEntries:
            type: boolean
            description: >-
                Indicates whether to log information about search result entries sent to the client.
          logSearchReferences:
            type: boolean
            description: >-
                Indicates whether to log information about search result references sent to the client.
          logIntermediateResponses:
            type: boolean
            description: >-
                Indicates whether to log information about intermediate responses sent to the client.
          suppressInternalOperations:
            type: boolean
            description: >-
                Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
          suppressReplicationOperations:
            type: boolean
            description: >-
                Indicates whether access messages that are generated by replication operations should be suppressed.
          correlateRequestsAndResults:
            type: boolean
            description: >-
                Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
          connectionCriteria:
            type: string
            description: >-
                Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
          requestCriteria:
            type: string
            description: >-
                Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
          resultCriteria:
            type: string
            description: >-
                Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
          searchEntryCriteria:
            type: string
            description: >-
                Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
          searchReferenceCriteria:
            type: string
            description: >-
                Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
          description:
            type: string
            description: >-
                A description for this Log Publisher
          loggingErrorBehavior:
            $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
        required:
        - schemas
        - enabled
        - id
    Enumconsole-json-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access"
    add-file-based-access-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-access-log-publisher-shared'
    file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-access-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-access-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-access-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based Access Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based Access Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based Access Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        logConnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections established to the server.
        logDisconnects:
          type: boolean
          description: >-
              Indicates whether to log information about connections that have been closed by the client or terminated by the server.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to log information about requests received from clients.
        logAssuranceCompleted:
          type: boolean
          description: >-
              Indicates whether to log information about the result of replication assurance processing.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequesterDN:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
        includeRequesterIPAddress:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include information about both the request and the result.
        includeRequestDetailsInSearchEntryMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include information about the associated search request.
        includeRequestDetailsInSearchReferenceMessages:
          type: boolean
          description: >-
              Indicates whether log messages for search result references should include information about the associated search request.
        includeRequestDetailsInIntermediateResponseMessages:
          type: boolean
          description: >-
              Indicates whether log messages for intermediate responses should include information about the associated operation request.
        includeResultCodeNames:
          type: boolean
          description: >-
              Indicates whether result log messages should include human-readable names for result codes in addition to their numeric values.
        includeExtendedSearchRequestDetails:
          type: boolean
          description: >-
              Indicates whether log messages for search requests should include extended information from the request, including the requested size limit, time limit, alias dereferencing behavior, and types only behavior.
        includeAddAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for add requests should include a list of the names of the attributes included in the entry to add.
        includeModifyAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for modify requests should include a list of the names of the attributes to be modified.
        includeSearchEntryAttributeNames:
          type: boolean
          description: >-
              Indicates whether log messages for search result entries should include a list of the names of the attributes included in the entry that was returned.
        includeRequestControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
        includeResponseControls:
          type: boolean
          description: >-
              Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
        includeReplicationChangeID:
          type: boolean
          description: >-
              Indicates whether to log information about the replication change ID.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use generified version of certain message strings, including diagnostic messages, additional information messages, authentication failure reasons, and disconnect messages. Generified versions of those strings may use placeholders (like %s for a string or %d for an integer) rather than the version of the string with those placeholders replaced with specific values.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the Writer Based Access Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        maxStringLength:
          type: integer
          description: >-
              Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        logFieldBehavior:
          type: string
          description: >-
              The behavior to use for determining which fields to log and whether to transform the values of those fields in any way.
        logSecurityNegotiation:
          type: boolean
          description: >-
              Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
        logClientCertificates:
          type: boolean
          description: >-
              Indicates whether to log information about any client certificates presented to the server.
        logResults:
          type: boolean
          description: >-
              Indicates whether to log information about the results of client requests.
        logSearchEntries:
          type: boolean
          description: >-
              Indicates whether to log information about search result entries sent to the client.
        logSearchReferences:
          type: boolean
          description: >-
              Indicates whether to log information about search result references sent to the client.
        logIntermediateResponses:
          type: boolean
          description: >-
              Indicates whether to log information about intermediate responses sent to the client.
        suppressInternalOperations:
          type: boolean
          description: >-
              Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
        suppressReplicationOperations:
          type: boolean
          description: >-
              Indicates whether access messages that are generated by replication operations should be suppressed.
        correlateRequestsAndResults:
          type: boolean
          description: >-
              Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
        requestCriteria:
          type: string
          description: >-
              Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
        resultCriteria:
          type: string
          description: >-
              Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
        searchEntryCriteria:
          type: string
          description: >-
              Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
        searchReferenceCriteria:
          type: string
          description: >-
              Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-access-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access"
    add-groovy-scripted-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-shared'
    groovy-scripted-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-shared'
    groovy-scripted-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-error-log-publisherSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Error Log Publisher.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Error Log Publisher. Each configuration property should be given in the form 'name=value'.
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error"
    add-file-based-json-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-shared'
    file-based-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-shared'
      required:
      - logFilePermissions
      - rotationPolicy
      - retentionPolicy
      - asynchronous
    file-based-json-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-json-http-operation-log-publisherSchemaUrn'
        logFile:
          type: string
          description: >-
              The file name to use for the log files generated by the File Based JSON HTTP Operation Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
        logFilePermissions:
          type: string
          description: >-
              The UNIX permissions of the log files created by this File Based JSON HTTP Operation Log Publisher.
        rotationPolicy:
          type: array
          items:
            type: string
          description: >-
              The rotation policy to use for the File Based JSON HTTP Operation Log Publisher .
        rotationListener:
          type: array
          items:
            type: string
          description: >-
              A listener that should be notified whenever a log file is rotated out of service.
        retentionPolicy:
          type: array
          items:
            type: string
          description: >-
              The retention policy to use for the File Based JSON HTTP Operation Log Publisher .
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          type: boolean
          description: >-
              Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
        encryptLog:
          type: boolean
          description: >-
              Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The "encryption-settings list" command can be used to obtain a list of the encryption settings definitions available in the server.
        append:
          type: boolean
          description: >-
              Specifies whether to append to existing log files.
        asynchronous:
          type: boolean
          description: >-
              Indicates whether the File Based JSON HTTP Operation Log Publisher will publish records asynchronously.
        autoFlush:
          type: boolean
          description: >-
              Specifies whether to flush the writer after every log record.
        bufferSize:
          type: string
          description: >-
              Specifies the log file buffer size.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        timeInterval:
          type: string
          description: >-
              Specifies the interval at which to check whether the log files need to be rotated.
        logRequests:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about requests received from the client.
        logResults:
          type: boolean
          description: >-
              Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        includeRequestDetailsInResultMessages:
          type: boolean
          description: >-
              Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
        logRequestAuthorizationType:
          type: boolean
          description: >-
              Indicates whether to log the type of credentials given if an "Authorization" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the "Authorization" header.
        logRequestCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logResponseCookieNames:
          type: boolean
          description: >-
              Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          type: array
          items:
            type: string
          description: >-
              Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
        logRequestProtocol:
          type: boolean
          description: >-
              Indicates whether request log messages should include information about the HTTP version specified in the request.
        logRedirectURI:
          type: boolean
          description: >-
              Indicates whether the redirect URI (i.e., the value of the "Location" header from responses) should be included in response log messages.
        writeMultiLineMessages:
          type: boolean
          description: >-
              Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - logFile
      - enabled
    Enumfile-based-json-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation"
    add-syslog-json-error-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-shared'
    syslog-json-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-shared'
      required:
      - syslogFacility
    syslog-json-error-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-json-error-log-publisherSchemaUrn'
        defaultSeverity:
          type: array
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
        syslogExternalServer:
          type: array
          items:
            type: string
          description: >-
              The syslog server to which messages should be sent.
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          type: string
          description: >-
              The local host name that will be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
        syslogMessageApplicationName:
          type: string
          description: >-
              The application name that will be included in syslog messages that are logged by this Syslog JSON Error Log Publisher.
        queueSize:
          type: integer
          description: >-
              The maximum number of log records that can be stored in the asynchronous queue.
        includeProductName:
          type: boolean
          description: >-
              Indicates whether log messages should include the product name for the Directory Server.
        includeInstanceName:
          type: boolean
          description: >-
              Indicates whether log messages should include the instance name for the Directory Server.
        includeStartupID:
          type: boolean
          description: >-
              Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
        includeThreadID:
          type: boolean
          description: >-
              Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
        generifyMessageStringsWhenPossible:
          type: boolean
          description: >-
              Indicates whether to use the generified version of the log message string (which may use placeholders like %s for a string or %d for an integer), rather than the version of the message with those placeholders replaced with specific values that would normally be written to the log.
        overrideSeverity:
          type: array
          items:
            type: string
          description: >-
              Specifies the override severity levels for the logger based on the category of the messages.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - syslogExternalServer
      - enabled
    Enumsyslog-json-error-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error"
    add-groovy-scripted-http-operation-log-publisher-request:
      allOf:
      - type: object
        properties:
          publisherName:
            description: Name of the new Log Publisher
            type: string
        required:
        - publisherName
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-shared'
    groovy-scripted-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Publisher
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-shared'
    groovy-scripted-http-operation-log-publisher-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-http-operation-log-publisherSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Operation Log Publisher.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted HTTP Operation Log Publisher. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Log Publisher
        enabled:
          type: boolean
          description: >-
              Indicates whether the Log Publisher is enabled for use.
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-http-operation-log-publisherSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation"
    add-debug-target-request:
      allOf:
      - type: object
        properties:
          targetName:
            description: Name of the new Debug Target
            type: string
        required:
        - targetName
      - $ref: '#/components/schemas/debug-target-shared'
    debug-target-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Debug Target
            type: string
        required:
        - id
      - $ref: '#/components/schemas/debug-target-shared'
    debug-target-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdebug-targetSchemaUrn'
        debugScope:
          type: string
          description: >-
              Specifies the fully-qualified Java package, class, or method affected by the settings in this target definition. Use the number character (#) to separate the class name and the method name (that is, com.unboundid.directory.server.core.DirectoryServer#startUp).
        debugLevel:
          $ref: '#/components/schemas/Enumdebug-target-debugLevelProp'
        debugCategory:
          type: array
          items:
            $ref: '#/components/schemas/Enumdebug-target-debugCategoryProp'
        omitMethodEntryArguments:
          type: boolean
          description: >-
              Specifies the property to indicate whether to include method arguments in debug messages.
        omitMethodReturnValue:
          type: boolean
          description: >-
              Specifies the property to indicate whether to include the return value in debug messages.
        includeThrowableCause:
          type: boolean
          description: >-
              Specifies the property to indicate whether to include the cause of exceptions in exception thrown and caught messages.
        throwableStackFrames:
          type: integer
          description: >-
              Specifies the property to indicate the number of stack frames to include in the stack trace for method entry and exception thrown messages.
        description:
          type: string
          description: >-
              A description for this Debug Target
      required:
      - debugScope
      - debugLevel
    Enumdebug-targetSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:debug-target"
    Enumlog-publisher-syslog-json-audit-softDeleteEntryAuditBehaviorProp:
      type: string
      enum:
      - "included"
      - "excluded"
      description: >-
          Specifies the audit behavior for delete and modify operations on soft-deleted entries.
    Enumlog-publisher-file-based-json-audit-softDeleteEntryAuditBehaviorProp:
      type: string
      enum:
      - "included"
      - "excluded"
      description: >-
          Specifies the audit behavior for delete and modify operations on soft-deleted entries.
    Enumlog-publisher-file-based-audit-softDeleteEntryAuditBehaviorProp:
      type: string
      enum:
      - "commented"
      - "uncommented"
      description: >-
          Specifies the audit behavior for delete and modify operations on soft-deleted entries.
    Enumlog-publisher-defaultDebugLevelProp:
      type: string
      enum:
      - "disabled"
      - "error"
      - "warning"
      - "info"
      - "verbose"
      - "all"
      description: >-
          The lowest severity level of debug messages to log when none of the defined targets match the message.
    Enumlog-publisher-syslogSeverityProp:
      type: string
      enum:
      - "emergency"
      - "alert"
      - "critical"
      - "error"
      - "warning"
      - "notice"
      - "informational"
      - "debug"
      description: >-
          The syslog severity to use for the messages that are logged by this Syslog JSON Audit Log Publisher.
    Enumlog-publisher-timestampPrecisionProp:
      type: string
      enum:
      - "seconds"
      - "milliseconds"
      description: >-
          Specifies the smallest time unit to be included in timestamps.
    Enumlog-publisher-scimMessageTypeProp:
      type: string
      enum:
      - "request"
      - "result"
      - "internal-request"
      - "internal-result"
      - "error"
      description: >-
          Specifies the SCIM message types which can be logged.
    Enumlog-publisher-logRequestHeadersProp:
      type: string
      enum:
      - "none"
      - "header-names"
      - "header-names-and-values"
      description: >-
          Indicates whether request log messages should include information about HTTP headers included in the request.
    Enumlog-publisher-idTokenValidatorMessageTypeProp:
      type: string
      enum:
      - "external-server-request"
      - "external-server-response"
      - "validation"
      - "warning"
      - "error"
      description: >-
          Specifies the ID token validator message types that can be logged.
    Enumlog-publisher-logResponseHeadersProp:
      type: string
      enum:
      - "none"
      - "header-names"
      - "header-names-and-values"
      description: >-
          Indicates whether response log messages should include information about HTTP headers included in the response.
    Enumlog-publisher-outputLocationProp:
      type: string
      enum:
      - "standard-output"
      - "standard-error"
      description: >-
          Specifies the output stream to which JSON-formatted error log messages should be written.
    Enumlog-publisher-compressionMechanismProp:
      type: string
      enum:
      - "none"
      - "gzip"
      description: >-
          Specifies the type of compression (if any) to use for log files that are written.
    Enumdebug-target-debugLevelProp:
      type: string
      enum:
      - "disabled"
      - "error"
      - "warning"
      - "info"
      - "verbose"
      - "all"
      description: >-
          Specifies the lowest severity level of debug messages to log.
    Enumlog-publisher-logRequestParametersProp:
      type: string
      enum:
      - "none"
      - "parameter-names"
      - "parameter-names-and-values"
      description: >-
          Indicates what (if any) information about request parameters should be included in request log messages. Note that this will only be used for requests with a method other than GET, since GET request parameters will be included in the request URL.
    Enumlog-publisher-accessTokenValidatorMessageTypeProp:
      type: string
      enum:
      - "subject-lookup"
      - "external-server-request"
      - "external-server-response"
      - "validation"
      - "error"
      description: >-
          Specifies the access token validator message types that can be logged.
    Enumlog-publisher-defaultSeverityProp:
      type: string
      enum:
      - "all"
      - "none"
      - "fatal-error"
      - "info"
      - "mild-error"
      - "mild-warning"
      - "notice"
      - "severe-error"
      - "severe-warning"
      - "debug"
      description: >-
          Specifies the default severity levels for the logger.
    Enumlog-publisher-defaultDebugCategoryProp:
      type: string
      enum:
      - "caught"
      - "constructor"
      - "data"
      - "database-access"
      - "enter"
      - "exit"
      - "message"
      - "protocol"
      - "thrown"
      description: >-
          The debug message categories to be logged when none of the defined targets match the message.
    Enumlog-publisher-httpMessageTypeProp:
      type: string
      enum:
      - "request"
      - "response"
      description: >-
          Specifies the HTTP message types which can be logged.
    Enumlog-publisher-debugMessageTypeProp:
      type: string
      enum:
      - "http-full-request-and-response"
      - "ldap-external-server-request"
      - "server-sdk-extension"
      - "store-adapter-mapping"
      - "store-adapter-processing"
      - "access-token-validator-request-and-response"
      - "access-token-validator-processing"
      - "id-token-validator-request-and-response"
      - "id-token-validator-processing"
      - "consent-service-request-and-response"
      - "gateway-request-and-response"
      - "policy-request-and-response"
      description: >-
          Specifies the debug message types which can be logged. Note that enabling these may result in sensitive information being logged.
    Enumlog-publisher-directoryRESTAPIMessageTypeProp:
      type: string
      enum:
      - "error"
      description: >-
          Specifies the Directory REST API message types which can be logged.
    Enumlog-publisher-extensionMessageTypeProp:
      type: string
      enum:
      - "error"
      - "warning"
      - "notice"
      - "info"
      description: >-
          Specifies the Server SDK extension message types that can be logged.
    Enumlog-publisher-syslogFacilityProp:
      type: string
      enum:
      - "user-level-messages"
      - "system-daemons"
      - "security-and-authorization"
      - "security-and-authorization-alternative"
      - "log-audit"
      - "log-alert"
      - "local-use-0"
      - "local-use-1"
      - "local-use-2"
      - "local-use-3"
      - "local-use-4"
      - "local-use-5"
      - "local-use-6"
      - "local-use-7"
      - "kernel-messages"
      - "mail-system"
      - "syslogd-internal-messages"
      - "line-printer"
      - "network-news"
      - "uucp"
      - "clock-daemon"
      - "ftp-daemon"
      - "ntp-daemon"
      - "clock-daemon-alternative"
      description: >-
          The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.
    Enumlog-publisher-loggingErrorBehaviorProp:
      type: string
      enum:
      - "standard-error"
      - "lockdown-mode"
      description: >-
          Specifies the behavior that the server should exhibit if an error occurs during logging processing.
    Enumdebug-target-debugCategoryProp:
      type: string
      enum:
      - "caught"
      - "constructor"
      - "data"
      - "database-access"
      - "enter"
      - "exit"
      - "message"
      - "protocol"
      - "thrown"
      description: >-
          Specifies the debug message categories to be logged.
    Enumlog-publisher-consentMessageTypeProp:
      type: string
      enum:
      - "consent-created"
      - "consent-updated"
      - "consent-deleted"
      - "consent-retrieved"
      - "consent-search"
      - "definition-created"
      - "definition-updated"
      - "definition-deleted"
      - "definition-retrieved"
      - "definition-search"
      - "localization-created"
      - "localization-updated"
      - "localization-deleted"
      - "localization-retrieved"
      - "localization-search"
      - "error"
      - "audit"
      description: >-
          Specifies the consent message types that can be logged.
    Enumlog-publisher-console-json-audit-softDeleteEntryAuditBehaviorProp:
      type: string
      enum:
      - "included"
      - "excluded"
      description: >-
          Specifies the audit behavior for delete and modify operations on soft-deleted entries.
    add-replication-assurance-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Replication Assurance Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/replication-assurance-policy-shared'
    replication-assurance-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Replication Assurance Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/replication-assurance-policy-shared'
      required:
      - enabled
      - localLevel
      - remoteLevel
    replication-assurance-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreplication-assurance-policySchemaUrn'
        description:
          type: string
          description: >-
              Description of the Replication Assurance Policy.
        enabled:
          type: boolean
          description: >-
              Indicates whether this Replication Assurance Policy is enabled for use in the server. If a Replication Assurance Policy is disabled, then no new operations will be associated with it.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple Replication Assurance Policies are defined, this property determines the evaluation order for finding a Replication Assurance Policy match against an operation. Policies are evaluated based on this index from least to greatest. Values of this property must be unique but not necessarily contiguous.
        localLevel:
          $ref: '#/components/schemas/Enumreplication-assurance-policy-localLevelProp'
        remoteLevel:
          $ref: '#/components/schemas/Enumreplication-assurance-policy-remoteLevelProp'
        timeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for the replication assurance requirements to be met before timing out and replying to the client.
        connectionCriteria:
          type: string
          description: >-
              Specifies a connection criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
        requestCriteria:
          type: string
          description: >-
              Specifies a request criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
      required:
      - evaluationOrderIndex
      - timeout
    Enumreplication-assurance-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:replication-assurance-policy"
    Enumreplication-assurance-policy-localLevelProp:
      type: string
      enum:
      - "none"
      - "received-any-server"
      - "processed-all-servers"
      description: >-
          Specifies the assurance level used to replicate to local servers. A local server is defined as one with the same value for the location setting in the global configuration.  The local-level must be set to an assurance level at least as strict as the remote-level. In other words, if remote-level is set to "received-any-remote-location" or "received-all-remote-locations", then local-level must be either "received-any-server" or "processed-all-servers". If remote-level is "processed-all-remote-servers", then local-level must be "processed-all-servers".
    Enumreplication-assurance-policy-remoteLevelProp:
      type: string
      enum:
      - "none"
      - "received-any-remote-location"
      - "received-all-remote-locations"
      - "processed-all-remote-servers"
      description: >-
          Specifies the assurance level used to replicate to remote servers. A remote server is defined as one with a different value for the location setting in the global configuration.
    add-file-based-key-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Key Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/file-based-key-manager-provider-shared'
    file-based-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Key Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-based-key-manager-provider-shared'
    file-based-key-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-based-key-manager-providerSchemaUrn'
        keyStoreFile:
          type: string
          description: >-
              Specifies the path to the file that contains the private key information. This may be an absolute path, or a path that is relative to the Directory Server instance root.
        keyStoreType:
          type: string
          description: >-
              Specifies the format for the data in the key store file.
        keyStorePin:
          type: string
          format: password
          description: >-
              Specifies the PIN needed to access the File Based Key Manager Provider.
        keyStorePinFile:
          type: string
          description: >-
              Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider.
        keyStorePinPassphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider.
        privateKeyPin:
          type: string
          format: password
          description: >-
              Specifies the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
        privateKeyPinFile:
          type: string
          description: >-
              Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
        privateKeyPinPassphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the clear-text PIN needed to access the File Based Key Manager Provider private key. If no private key PIN is specified the PIN defaults to the key store PIN.
        description:
          type: string
          description: >-
              A description for this Key Manager Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether the Key Manager Provider is enabled for use.
      required:
      - schemas
      - keyStoreFile
      - enabled
    Enumfile-based-key-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based"
    custom-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-key-manager-providerSchemaUrn'
          id:
            description: Name of the Key Manager Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Key Manager Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Key Manager Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumcustom-key-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:custom"
    add-pkcs11-key-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Key Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/pkcs11-key-manager-provider-shared'
    pkcs11-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Key Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pkcs11-key-manager-provider-shared'
    pkcs11-key-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpkcs11-key-manager-providerSchemaUrn'
        pkcs11ProviderClass:
          type: string
          description: >-
              The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.
        pkcs11ProviderConfigurationFile:
          type: string
          description: >-
              The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.
        pkcs11KeyStoreType:
          type: string
          description: >-
              The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.
        keyStorePin:
          type: string
          format: password
          description: >-
              Specifies the PIN needed to access the PKCS11 Key Manager Provider.
        keyStorePinFile:
          type: string
          description: >-
              Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the PKCS11 Key Manager Provider.
        keyStorePinPassphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the clear-text PIN needed to access the PKCS11 Key Manager Provider.
        description:
          type: string
          description: >-
              A description for this Key Manager Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether the Key Manager Provider is enabled for use.
      required:
      - schemas
      - enabled
    Enumpkcs11-key-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11"
    add-third-party-key-manager-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Key Manager Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-key-manager-provider-shared'
    third-party-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Key Manager Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-key-manager-provider-shared'
    third-party-key-manager-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-key-manager-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Key Manager Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Key Manager Provider. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Key Manager Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether the Key Manager Provider is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-key-manager-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party"
    add-smtp-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/smtp-external-server-shared'
    smtp-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/smtp-external-server-shared'
    smtp-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsmtp-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The host name of the smtp server.
        serverPort:
          type: integer
          description: >-
              The port number where the smtp server listens for requests.
        smtpSecurity:
          $ref: '#/components/schemas/Enumexternal-server-smtpSecurityProp'
        userName:
          type: string
          description: >-
              The name of the login account to use when connecting to the smtp server. Both username and password must be supplied if this attribute is set.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user name. Both username and password must be supplied if this attribute is set.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        smtpTimeout:
          type: string
          description: >-
              Specifies the maximum length of time that a connection or attempted connection to a SMTP server may take.
        smtpConnectionProperties:
          type: array
          items:
            type: string
          description: >-
              Specifies the connection properties for the smtp server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumsmtp-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:smtp"
    add-nokia-ds-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/nokia-ds-external-server-shared'
    nokia-ds-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/nokia-ds-external-server-shared'
      required:
      - verifyCredentialsMethod
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    nokia-ds-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnokia-ds-external-serverSchemaUrn'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          type: boolean
          description: >-
              Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-nokia-ds-authenticationMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumnokia-ds-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds"
    add-ping-identity-ds-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/ping-identity-ds-external-server-shared'
    ping-identity-ds-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-identity-ds-external-server-shared'
      required:
      - verifyCredentialsMethod
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    ping-identity-ds-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-identity-ds-external-serverSchemaUrn'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          type: boolean
          description: >-
              Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-ping-identity-ds-authenticationMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumping-identity-ds-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-ds"
    add-active-directory-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/active-directory-external-server-shared'
    active-directory-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/active-directory-external-server-shared'
      required:
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - verifyCredentialsMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    active-directory-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumactive-directory-external-serverSchemaUrn'
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required. The authentication identity can also be specified in User-Principal-Name (UPN) format.
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-active-directory-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumactive-directory-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:active-directory"
    add-jdbc-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/jdbc-external-server-shared'
    jdbc-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/jdbc-external-server-shared'
    jdbc-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjdbc-external-serverSchemaUrn'
        jdbcDriverType:
          $ref: '#/components/schemas/Enumexternal-server-jdbcDriverTypeProp'
        jdbcDriverURL:
          type: string
          description: >-
              Specify the complete JDBC URL which will be used instead of the automatic URL format. You must select type 'other' for the jdbc-driver-type.
        databaseName:
          type: string
          description: >-
              Specifies which database to connect to. This is ignored if jdbc-driver-url is specified.
        serverHostName:
          type: string
          description: >-
              The host name of the database server. This is ignored if jdbc-driver-url is specified.
        serverPort:
          type: integer
          description: >-
              The port number where the database server listens for requests. This is ignored if jdbc-driver-url is specified
        userName:
          type: string
          description: >-
              The name of the login account to use when connecting to the database server.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user name.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        validationQuery:
          type: string
          description: >-
              The SQL query that will be used to validate connections to the database before making them available to the Directory Server.
        validationQueryTimeout:
          type: string
          description: >-
              Specifies the amount of time to wait for a response from the database when executing the validation query, if one is set. If the timeout is exceeded, the Directory Server will drop the connection and obtain a new one. A value of zero indicates no timeout.
        jdbcConnectionProperties:
          type: array
          items:
            type: string
          description: >-
              Specifies the connection properties for the JDBC datasource.
        transactionIsolationLevel:
          $ref: '#/components/schemas/Enumexternal-server-transactionIsolationLevelProp'
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - jdbcDriverType
    Enumjdbc-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:jdbc"
    add-syslog-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/syslog-external-server-shared'
    syslog-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/syslog-external-server-shared'
      required:
      - connectTimeout
      - maxConnectionAge
      - trustManagerProvider
    syslog-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsyslog-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The address of the syslog server.
        serverPort:
          type: integer
          description: >-
              The port on which the syslog server accepts connections.
        transportMechanism:
          $ref: '#/components/schemas/Enumexternal-server-transportMechanismProp'
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable. This will only be used when communicating with the syslog server over TCP (with or without TLS encryption).
        maxConnectionAge:
          type: string
          description: >-
              The maximum length of time that TCP connections should remain established. This will be ignored for UDP-based connections. A zero duration indicates that no maximum age will be imposed.
        trustManagerProvider:
          type: string
          description: >-
              A trust manager provider that will be used to determine whether to trust the certificate chain presented by the syslog server when communication is encrypted with TLS. This property will be ignored when not using TLS encryption.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
      - transportMechanism
    Enumsyslog-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:syslog"
    add-ping-identity-proxy-server-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/ping-identity-proxy-server-external-server-shared'
    ping-identity-proxy-server-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-identity-proxy-server-external-server-shared'
      required:
      - verifyCredentialsMethod
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    ping-identity-proxy-server-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-identity-proxy-server-external-serverSchemaUrn'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          type: boolean
          description: >-
              Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-ping-identity-proxy-server-authenticationMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumping-identity-proxy-server-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-identity-proxy-server"
    add-http-proxy-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/http-proxy-external-server-shared'
    http-proxy-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/http-proxy-external-server-shared'
    http-proxy-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhttp-proxy-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the HTTP Proxy External Server.
        serverPort:
          type: integer
          description: >-
              The port on which the HTTP Proxy External Server is listening for connections.
        basicAuthenticationUsername:
          type: string
          description: >-
              The username to use to authenticate to the HTTP Proxy External Server.
        basicAuthenticationPassphraseProvider:
          type: string
          description: >-
              A passphrase provider that provides access to the password to use to authenticate to the HTTP Proxy External Server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
      - serverPort
    Enumhttp-proxy-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:http-proxy"
    add-nokia-proxy-server-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/nokia-proxy-server-external-server-shared'
    nokia-proxy-server-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/nokia-proxy-server-external-server-shared'
      required:
      - verifyCredentialsMethod
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    nokia-proxy-server-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnokia-proxy-server-external-serverSchemaUrn'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          type: boolean
          description: >-
              Indicates whether to include the administrative operation request control in requests sent to this server which are intended for administrative operations (e.g., health checking) rather than requests directly from clients.
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-nokia-proxy-server-authenticationMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumnokia-proxy-server-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server"
    add-opendj-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/opendj-external-server-shared'
    opendj-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/opendj-external-server-shared'
      required:
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - verifyCredentialsMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    opendj-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumopendj-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-opendj-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumopendj-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:opendj"
    add-ldap-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/ldap-external-server-shared'
    ldap-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldap-external-server-shared'
      required:
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - verifyCredentialsMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    ldap-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldap-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-ldap-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumldap-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:ldap"
    add-ping-one-http-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/ping-one-http-external-server-shared'
    ping-one-http-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ping-one-http-external-server-shared'
    ping-one-http-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-one-http-external-serverSchemaUrn'
        hostnameVerificationMethod:
          $ref: '#/components/schemas/Enumexternal-server-hostnameVerificationMethodProp'
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use for HTTPS connection-level security.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before aborting a request to PingOne.
        responseTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to PingOne.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
    Enumping-one-http-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http"
    add-http-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/http-external-server-shared'
    http-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/http-external-server-shared'
    http-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhttp-external-serverSchemaUrn'
        baseURL:
          type: string
          description: >-
              The base URL of the external server, optionally including port number, for example "https://externalService:9031".
        hostnameVerificationMethod:
          $ref: '#/components/schemas/Enumexternal-server-hostnameVerificationMethodProp'
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL (HTTPS) is to be used for connection-level security.
        sslCertNickname:
          type: string
          description: >-
              The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before aborting a request to the server.
        responseTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to the server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - baseURL
    Enumhttp-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:http"
    add-oracle-unified-directory-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/oracle-unified-directory-external-server-shared'
    oracle-unified-directory-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/oracle-unified-directory-external-server-shared'
      required:
      - serverPort
      - connectionSecurity
      - authenticationMethod
      - verifyCredentialsMethod
      - maxConnectionAge
      - connectTimeout
      - maxResponseSize
    oracle-unified-directory-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumoracle-unified-directory-external-serverSchemaUrn'
        serverHostName:
          type: string
          description: >-
              The host name or IP address of the target LDAP server.
        serverPort:
          type: integer
          description: >-
              The port number on which the server listens for requests.
        location:
          type: string
          description: >-
              Specifies the location for the LDAP External Server.
        bindDN:
          type: string
          description: >-
              The DN to use to bind to the target LDAP server if simple authentication is required.
        password:
          type: string
          format: password
          description: >-
              The login password for the specified user.
        passphraseProvider:
          type: string
          description: >-
              The passphrase provider to use to obtain the login password for the specified user.
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-oracle-unified-directory-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established for the purpose of performing a health check. If the connection cannot be established within this length of time, the server will be classified as unavailable.
        maxConnectionAge:
          type: string
          description: >-
              Specifies the maximum length of time that connections to this server should be allowed to remain established before being closed and replaced with newly-established connections.
        minExpiredConnectionDisconnectInterval:
          type: string
          description: >-
              Specifies the minimum length of time that should pass between connection closures as a result of the connections being established for longer than the maximum connection age. This may help avoid cases in which a large number of connections are closed and re-established in a short period of time because of the maximum connection age.
        connectTimeout:
          type: string
          description: >-
              Specifies the maximum length of time to wait for a connection to be established before giving up and considering the server unavailable.
        maxResponseSize:
          type: string
          description: >-
              Specifies the maximum response size that should be supported for messages received from the LDAP external server.
        keyManagerProvider:
          type: string
          description: >-
              The key manager provider to use if SSL or StartTLS is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL or StartTLS is to be used for connection-level security.
        initialConnections:
          type: integer
          description: >-
              The number of connections to initially establish to the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        maxConnections:
          type: integer
          description: >-
              The maximum number of concurrent connections to maintain for the LDAP external server. A value of zero indicates that the number of connections should be dynamically based on the number of available worker threads. This will be ignored when using a thread-local connection pool.
        defunctConnectionResultCode:
          type: array
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
        abandonOnTimeout:
          type: boolean
          description: >-
              Indicates whether to send an abandon request for an operation for which a response timeout is encountered. A request which has timed out on one server may be retried on another server regardless of whether an abandon request is sent, but if the initial attempt is not abandoned then a long-running operation may unnecessarily continue to consume processing resources on the initial server.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - serverHostName
    Enumoracle-unified-directory-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory"
    add-conjur-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/conjur-external-server-shared'
    conjur-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-external-server-shared'
    conjur-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-external-serverSchemaUrn'
        conjurServerBaseURI:
          type: array
          items:
            type: string
          description: >-
              The base URL needed to access the CyberArk Conjur server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://conjur.example.com:8443/".
        conjurAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Conjur server.
        conjurAccountName:
          type: string
          description: >-
              The name of the account with which the desired secrets are associated.
        trustStoreFile:
          type: string
          description: >-
              The path to a file containing the information needed to trust the certificate presented by the Conjur servers.
        trustStorePin:
          type: string
          format: password
          description: >-
              The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
        trustStoreType:
          type: string
          description: >-
              The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - conjurServerBaseURI
      - conjurAuthenticationMethod
      - conjurAccountName
    Enumconjur-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:conjur"
    add-amazon-aws-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/amazon-aws-external-server-shared'
    amazon-aws-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-aws-external-server-shared'
    amazon-aws-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-aws-external-serverSchemaUrn'
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the AWS service.
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-amazon-aws-authenticationMethodProp'
        awsAccessKeyID:
          type: string
          description: >-
              The access key ID that will be used if authentication should use an access key. If this is provided, then an aws-secret-access-key must also be provided.
        awsSecretAccessKey:
          type: string
          format: password
          description: >-
              The secret access key that will be used if authentication should use an access key. If this is provided, then an aws-access-key-id must also be provided.
        awsRegionName:
          type: string
          description: >-
              The name of the AWS region containing the resources that will be accessed.
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - awsRegionName
    Enumamazon-aws-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws"
    add-vault-external-server-request:
      allOf:
      - type: object
        properties:
          serverName:
            description: Name of the new External Server
            type: string
        required:
        - serverName
      - $ref: '#/components/schemas/vault-external-server-shared'
    vault-external-server-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the External Server
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-external-server-shared'
    vault-external-server-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-external-serverSchemaUrn'
        vaultServerBaseURI:
          type: array
          items:
            type: string
          description: >-
              The base URL needed to access the Vault server. The base URL should consist of the protocol ("http" or "https"), the server address (resolvable name or IP address), and the port number. For example, "https://vault.example.com:8200/".
        vaultAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Vault server.
        trustStoreFile:
          type: string
          description: >-
              The path to a file containing the information needed to trust the certificate presented by the Vault servers.
        trustStorePin:
          type: string
          format: password
          description: >-
              The passphrase needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
        trustStoreType:
          type: string
          description: >-
              The store type for the specified trust store file. The value should likely be one of "JKS", "PKCS12", or "BCFKS".
        description:
          type: string
          description: >-
              A description for this External Server
      required:
      - schemas
      - vaultServerBaseURI
      - vaultAuthenticationMethod
    Enumvault-external-serverSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:external-server:vault"
    Enumexternal-server-opendj-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-nokia-proxy-server-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-ldap-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-connectionSecurityProp:
      type: string
      enum:
      - "none"
      - "ssl"
      - "starttls"
      description: >-
          The mechanism to use to secure communication with the directory server.
    Enumexternal-server-defunctConnectionResultCodeProp:
      type: string
      enum:
      - "success"
      - "operations-error"
      - "protocol-error"
      - "time-limit-exceeded"
      - "size-limit-exceeded"
      - "compare-false"
      - "compare-true"
      - "auth-method-not-supported"
      - "strong-auth-required"
      - "referral"
      - "admin-limit-exceeded"
      - "unavailable-critical-extension"
      - "confidentiality-required"
      - "sasl-bind-in-progress"
      - "no-such-attribute"
      - "undefined-attribute-type"
      - "inappropriate-matching"
      - "constraint-violation"
      - "attribute-or-value-exists"
      - "invalid-attribute-syntax"
      - "no-such-object"
      - "alias-problem"
      - "invalid-dn-syntax"
      - "alias-dereferencing-problem"
      - "inappropriate-authentication"
      - "invalid-credentials"
      - "insufficient-access-rights"
      - "busy"
      - "unavailable"
      - "unwilling-to-perform"
      - "loop-detect"
      - "sort-control-missing"
      - "offset-range-error"
      - "naming-violation"
      - "object-class-violation"
      - "not-allowed-on-nonleaf"
      - "not-allowed-on-rdn"
      - "entry-already-exists"
      - "object-class-mods-prohibited"
      - "affects-multiple-dsas"
      - "virtual-list-view-error"
      - "other"
      - "server-down"
      - "local-error"
      - "encoding-error"
      - "decoding-error"
      - "timeout"
      - "auth-unknown"
      - "filter-error"
      - "user-canceled"
      - "param-error"
      - "no-memory"
      - "connect-error"
      - "not-supported"
      - "control-not-found"
      - "no-results-returned"
      - "more-results-to-return"
      - "client-loop"
      - "referral-limit-exceeded"
      - "canceled"
      - "no-such-operation"
      - "too-late"
      - "cannot-cancel"
      - "assertion-failed"
      - "authorization-denied"
      - "no-operation"
      - "interactive-transaction-aborted"
      description: >-
          Specifies the operation result code values that should cause the associated connection should be considered defunct. If an operation fails with one of these result codes, then it will be terminated and an attempt will be made to establish a new connection in its place.
    Enumexternal-server-jdbcDriverTypeProp:
      type: string
      enum:
      - "oraclethin"
      - "oracleoci"
      - "mysql"
      - "db2"
      - "sqlserver"
      - "postgres"
      - "other"
      description: >-
          Specifies a supported database driver type. The driver class will be automatically selected based on this selection. We highly recommend using a JDBC 4 driver that is suitable for the current Java platform.
    Enumexternal-server-verifyCredentialsMethodProp:
      type: string
      enum:
      - "separate-connections"
      - "retain-identity-control"
      - "bind-on-existing-connections"
      description: >-
          The mechanism to use to verify user credentials while ensuring that the ability to process other operations is not impacted by an alternate authorization identity.
    Enumexternal-server-ping-identity-ds-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-ping-identity-proxy-server-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-active-directory-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-transactionIsolationLevelProp:
      type: string
      enum:
      - "read-committed"
      - "read-uncommitted"
      - "repeatable-read"
      - "serializable"
      description: >-
          This property specifies the default transaction isolation level for connections to this JDBC External Server.
    Enumexternal-server-transportMechanismProp:
      type: string
      enum:
      - "unencrypted-udp"
      - "unencrypted-tcp"
      - "tls-encrypted-tcp"
      description: >-
          The transport mechanism that should be used when communicating with the syslog server.
    Enumexternal-server-hostnameVerificationMethodProp:
      type: string
      enum:
      - "allow-all"
      - "strict"
      description: >-
          The mechanism for checking if the hostname in the PingOne ID Token Validator's base-url value matches the name(s) stored inside the X.509 certificate presented by PingOne.
    Enumexternal-server-smtpSecurityProp:
      type: string
      enum:
      - "none"
      - "starttls"
      - "ssl"
      description: >-
          This property specifies type of connection security to use when connecting to the outgoing mail server.
    Enumexternal-server-oracle-unified-directory-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    Enumexternal-server-amazon-aws-authenticationMethodProp:
      type: string
      enum:
      - "default-provider-chain"
      - "access-key"
      - "iam-role"
      - "irsa-role"
      description: >-
          The mechanism to use to authenticate to AWS.
    Enumexternal-server-nokia-ds-authenticationMethodProp:
      type: string
      enum:
      - "none"
      - "simple"
      - "external"
      - "inter-server"
      description: >-
          The mechanism to use to authenticate to the target server.
    add-dn-map-request:
      allOf:
      - type: object
        properties:
          mapName:
            description: Name of the new DN Map
            type: string
        required:
        - mapName
      - $ref: '#/components/schemas/dn-map-shared'
    dn-map-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the DN Map
            type: string
        required:
        - id
      - $ref: '#/components/schemas/dn-map-shared'
    dn-map-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdn-mapSchemaUrn'
        description:
          type: string
          description: >-
              A description for this DN Map
        fromDNPattern:
          type: string
          description: >-
              Specifies the DN pattern to match when determining whether this map applies to a specific source DN. If the provided bind DN matches this pattern, then the to-dn-pattern will be used to perform the mapping. If the provided bind DN does not match this pattern, then no mapping will be performed.
        toDNPattern:
          type: string
          description: >-
              Specifies a pattern for constructing the DN value using fixed text, DN components matching wild-card values in from-dn-pattern, and attribute values from the source entry.
      required:
      - fromDNPattern
      - toDNPattern
    Enumdn-mapSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:dn-map"
    add-groovy-scripted-change-subscription-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Change Subscription Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-shared'
    groovy-scripted-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Change Subscription Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-shared'
    groovy-scripted-change-subscription-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-change-subscription-handlerSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Change Subscription Handler.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Change Subscription Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Change Subscription Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether this change subscription handler is enabled within the server.
        changeSubscription:
          type: array
          items:
            type: string
          description: >-
              The set of change subscriptions for which this change subscription handler should be notified. If no values are provided then it will be notified for all change subscriptions defined in the server.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-change-subscription-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:groovy-scripted"
    add-logging-change-subscription-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Change Subscription Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/logging-change-subscription-handler-shared'
    logging-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Change Subscription Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/logging-change-subscription-handler-shared'
      required:
      - logFile
    logging-change-subscription-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlogging-change-subscription-handlerSchemaUrn'
        logFile:
          type: string
          description: >-
              Specifies the log file in which the change notification messages will be written.
        description:
          type: string
          description: >-
              A description for this Change Subscription Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether this change subscription handler is enabled within the server.
        changeSubscription:
          type: array
          items:
            type: string
          description: >-
              The set of change subscriptions for which this change subscription handler should be notified. If no values are provided then it will be notified for all change subscriptions defined in the server.
      required:
      - schemas
      - enabled
    Enumlogging-change-subscription-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:logging"
    add-third-party-change-subscription-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new Change Subscription Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-change-subscription-handler-shared'
    third-party-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Change Subscription Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-change-subscription-handler-shared'
    third-party-change-subscription-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-change-subscription-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Change Subscription Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Change Subscription Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Change Subscription Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether this change subscription handler is enabled within the server.
        changeSubscription:
          type: array
          items:
            type: string
          description: >-
              The set of change subscriptions for which this change subscription handler should be notified. If no values are provided then it will be notified for all change subscriptions defined in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-change-subscription-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:third-party"
    add-obscured-value-request:
      allOf:
      - type: object
        properties:
          valueName:
            description: Name of the new Obscured Value
            type: string
        required:
        - valueName
      - $ref: '#/components/schemas/obscured-value-shared'
    obscured-value-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Obscured Value
            type: string
        required:
        - id
      - $ref: '#/components/schemas/obscured-value-shared'
    obscured-value-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumobscured-valueSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Obscured Value
        obscuredValue:
          type: string
          format: password
          description: >-
              The value to be stored in an obscured form.
      required:
      - obscuredValue
    Enumobscured-valueSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:obscured-value"
    crypto-manager-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcrypto-managerSchemaUrn'
          digestAlgorithm:
            type: string
            description: >-
                Specifies the preferred message digest algorithm for the Directory Server.
          macAlgorithm:
            type: string
            description: >-
                Specifies the preferred MAC algorithm for the Directory Server.
          macKeyLength:
            type: integer
            description: >-
                Specifies the key length in bits for the preferred MAC algorithm.
          signingEncryptionSettingsID:
            type: string
            description: >-
                The ID of the encryption settings definition to use for generating digital signatures. If this is not specified, then the server's preferred encryption settings definition will be used.
          cipherTransformation:
            type: string
            description: >-
                Specifies the cipher for the Directory Server using the syntax algorithm/mode/padding.
          cipherKeyLength:
            type: integer
            description: >-
                Specifies the key length in bits for the preferred cipher.
          keyWrappingTransformation:
            type: string
            description: >-
                The preferred key wrapping transformation for the Directory Server. This value must be the same for all server instances in a replication topology.
          sslProtocol:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of TLS protocols that are allowed for use in secure communication.
          sslCipherSuite:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of the TLS cipher suites that are allowed for use in secure communication.
          outboundSSLProtocol:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of the TLS protocols that will be enabled for outbound connections initiated by the Directory Server.
          outboundSSLCipherSuite:
            type: array
            items:
              type: string
            description: >-
                Specifies the names of the TLS cipher suites that will be enabled for outbound connections initiated by the Directory Server.
          enableSha1CipherSuites:
            type: boolean
            description: >-
                Indicates whether to enable support for TLS cipher suites that use the SHA-1 digest algorithm. The SHA-1 digest algorithm is no longer considered secure and is not recommended for use.
          enableRsaKeyExchangeCipherSuites:
            type: boolean
            description: >-
                Indicates whether to enable support for TLS cipher suites that use the RSA key exchange algorithm. Cipher suites that rely on RSA key exchange are not recommended because they do not support forward secrecy, which means that if the private key is compromised, then any communication negotiated using that private key should also be considered compromised.
          sslCertNickname:
            type: string
            description: >-
                Specifies the nickname (also called the alias) of the certificate that the Crypto Manager should use when performing SSL communication.
    Enumcrypto-managerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:crypto-manager"
    general-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneral-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumgeneral-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:general"
    memory-usage-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummemory-usage-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enummemory-usage-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:memory-usage"
    stack-trace-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumstack-trace-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumstack-trace-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:stack-trace"
    disk-space-usage-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdisk-space-usage-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          lowSpaceWarningSizeThreshold:
            type: string
            description: >-
                Specifies the low space warning threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
          lowSpaceWarningPercentThreshold:
            type: integer
            description: >-
                Specifies the low space warning threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will begin generating warning alert notifications.
          lowSpaceErrorSizeThreshold:
            type: string
            description: >-
                Specifies the low space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.
          lowSpaceErrorPercentThreshold:
            type: integer
            description: >-
                Specifies the low space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will start rejecting operations requested by non-root users.
          outOfSpaceErrorSizeThreshold:
            type: string
            description: >-
                Specifies the out of space error threshold value as an absolute amount of space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
          outOfSpaceErrorPercentThreshold:
            type: integer
            description: >-
                Specifies the out of space error threshold value as a percentage of total space. If the amount of usable disk space drops below this amount, then the Directory Server will shut itself down to avoid problems that may occur from complete exhaustion of usable space.
          alertFrequency:
            type: string
            description: >-
                Specifies the length of time between administrative alerts generated in response to lack of usable disk space. Administrative alerts will be generated whenever the amount of usable space drops below any threshold, and they will also be generated at regular intervals as long as the amount of usable space remains below the threshold value. A value of zero indicates that alerts should only be generated when the amount of usable space drops below a configured threshold.
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - alertFrequency
        - enabled
        - id
    Enumdisk-space-usage-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:disk-space-usage"
    system-info-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsystem-info-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumsystem-info-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:system-info"
    custom-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumcustom-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:custom"
    active-operations-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumactive-operations-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumactive-operations-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:active-operations"
    ssl-context-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumssl-context-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumssl-context-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:ssl-context"
    client-connection-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumclient-connection-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumclient-connection-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:client-connection"
    version-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumversion-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          description:
            type: string
            description: >-
                A description for this Monitor Provider
          enabled:
            type: boolean
            description: >-
                Indicates whether the Monitor Provider is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumversion-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:version"
    host-system-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhost-system-monitor-providerSchemaUrn'
          id:
            description: Name of the Monitor Provider
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Host System Monitor Provider is enabled for use.
          diskDevices:
            type: array
            items:
              type: string
            description: >-
                Specifies which disk devices to monitor for I/O activity. Should be the device name as displayed by iostat -d.
          networkDevices:
            type: array
            items:
              type: string
            description: >-
                Specifies which network interfaces to monitor for I/O activity. Should be the device name as displayed by netstat -i.
          systemUtilizationMonitorLogDirectory:
            type: string
            description: >-
                Specifies a relative or absolute path to the directory on the local filesystem containing the log files used by the system utilization monitor. The path must exist, and it must be a writable directory by the server process.
          description:
            type: string
            description: >-
                A description for this Monitor Provider
        required:
        - schemas
        - enabled
        - systemUtilizationMonitorLogDirectory
        - id
    Enumhost-system-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:host-system"
    add-third-party-monitor-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Monitor Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-monitor-provider-shared'
    third-party-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Monitor Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-monitor-provider-shared'
    third-party-monitor-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-monitor-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Monitor Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Monitor Provider. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Monitor Provider
        enabled:
          type: boolean
          description: >-
              Indicates whether the Monitor Provider is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-monitor-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitor-provider:third-party"
    static-group-implementation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumstatic-group-implementationSchemaUrn'
          id:
            description: Name of the Group Implementation
            type: string
          description:
            type: string
            description: >-
                A description for this Group Implementation
          enabled:
            type: boolean
            description: >-
                Indicates whether the Group Implementation is enabled.
        required:
        - schemas
        - enabled
        - id
    Enumstatic-group-implementationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:group-implementation:static"
    virtual-static-group-implementation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumvirtual-static-group-implementationSchemaUrn'
          id:
            description: Name of the Group Implementation
            type: string
          description:
            type: string
            description: >-
                A description for this Group Implementation
          enabled:
            type: boolean
            description: >-
                Indicates whether the Group Implementation is enabled.
        required:
        - schemas
        - enabled
        - id
    Enumvirtual-static-group-implementationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:group-implementation:virtual-static"
    dynamic-group-implementation-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdynamic-group-implementationSchemaUrn'
          id:
            description: Name of the Group Implementation
            type: string
          description:
            type: string
            description: >-
                A description for this Group Implementation
          enabled:
            type: boolean
            description: >-
                Indicates whether the Group Implementation is enabled.
        required:
        - schemas
        - enabled
        - id
    Enumdynamic-group-implementationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:group-implementation:dynamic"
    add-indicator-gauge-data-source-request:
      allOf:
      - type: object
        properties:
          sourceName:
            description: Name of the new Gauge Data Source
            type: string
        required:
        - sourceName
      - $ref: '#/components/schemas/indicator-gauge-data-source-shared'
    indicator-gauge-data-source-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Gauge Data Source
            type: string
        required:
        - id
      - $ref: '#/components/schemas/indicator-gauge-data-source-shared'
    indicator-gauge-data-source-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumindicator-gauge-data-sourceSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Gauge Data Source
        additionalText:
          type: string
          description: >-
              Additional information about the source of this data that is added to alerts sent as a result of gauges that use this Gauge Data Source.
        monitorObjectclass:
          type: string
          description: >-
              The object class name of the monitor entries to examine for generating gauge data.
        monitorAttribute:
          type: string
          description: >-
              Specifies the attribute on the monitor entries from which to derive the current gauge value.
        includeFilter:
          type: string
          description: >-
              An optional LDAP filter that can be used restrict which monitor entries are used to compute output.
        resourceAttribute:
          type: string
          description: >-
              Specifies the attribute whose value is used to identify the specific resource being monitored (e.g. device name).
        resourceType:
          type: string
          description: >-
              A string indicating the type of resource being monitored.
        minimumUpdateInterval:
          type: string
          description: >-
              The minimum frequency with which gauges using this Gauge Data Source can be configured for update. In order to prevent undesirable side effects, some Gauge Data Sources may use this property to impose a higher bound on the update frequency of gauges.
      required:
      - schemas
      - monitorObjectclass
      - monitorAttribute
    Enumindicator-gauge-data-sourceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:gauge-data-source:indicator"
    add-numeric-gauge-data-source-request:
      allOf:
      - type: object
        properties:
          sourceName:
            description: Name of the new Gauge Data Source
            type: string
        required:
        - sourceName
      - $ref: '#/components/schemas/numeric-gauge-data-source-shared'
    numeric-gauge-data-source-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Gauge Data Source
            type: string
        required:
        - id
      - $ref: '#/components/schemas/numeric-gauge-data-source-shared'
      required:
      - statisticType
    numeric-gauge-data-source-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnumeric-gauge-data-sourceSchemaUrn'
        dataOrientation:
          $ref: '#/components/schemas/Enumgauge-data-source-dataOrientationProp'
        statisticType:
          $ref: '#/components/schemas/Enumgauge-data-source-statisticTypeProp'
        divideValueBy:
          type: number
          description: >-
              An optional floating point value that can be used to scale the resulting value.
        divideValueByAttribute:
          type: string
          description: >-
              An optional property that can scale the resulting value by another attribute in the monitored entry.
        divideValueByCounterAttribute:
          type: string
          description: >-
              An optional property that can scale the resulting value by another attribute whose value represents a counter in the monitored entry.
        description:
          type: string
          description: >-
              A description for this Gauge Data Source
        additionalText:
          type: string
          description: >-
              Additional information about the source of this data that is added to alerts sent as a result of gauges that use this Gauge Data Source.
        monitorObjectclass:
          type: string
          description: >-
              The object class name of the monitor entries to examine for generating gauge data.
        monitorAttribute:
          type: string
          description: >-
              Specifies the attribute on the monitor entries from which to derive the current gauge value.
        includeFilter:
          type: string
          description: >-
              An optional LDAP filter that can be used restrict which monitor entries are used to compute output.
        resourceAttribute:
          type: string
          description: >-
              Specifies the attribute whose value is used to identify the specific resource being monitored (e.g. device name).
        resourceType:
          type: string
          description: >-
              A string indicating the type of resource being monitored.
        minimumUpdateInterval:
          type: string
          description: >-
              The minimum frequency with which gauges using this Gauge Data Source can be configured for update. In order to prevent undesirable side effects, some Gauge Data Sources may use this property to impose a higher bound on the update frequency of gauges.
      required:
      - schemas
      - monitorObjectclass
      - monitorAttribute
    Enumnumeric-gauge-data-sourceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:gauge-data-source:numeric"
    Enumgauge-data-source-dataOrientationProp:
      type: string
      enum:
      - "lower-is-better"
      - "higher-is-better"
      description: >-
          Indicates whether a higher or lower value is a more severe condition.
    Enumgauge-data-source-statisticTypeProp:
      type: string
      enum:
      - "count-per-second"
      - "average"
      - "minimum"
      - "maximum"
      description: >-
          Specifies the type of statistic to include in the output for the monitored attribute.
    schema-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumschema-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          schemaEntryDN:
            type: array
            items:
              type: string
            description: >-
                Defines the base DNs of the subtrees in which the schema information is published in addition to the value included in the base-dn property.
          showAllAttributes:
            type: boolean
            description: >-
                Indicates whether to treat all attributes in the schema entry as if they were user attributes regardless of their configuration.
          readOnlySchemaFile:
            type: array
            items:
              type: string
            description: >-
                Specifies the name of a file (which must exist in the config/schema directory) containing schema elements that should be considered read-only. Any schema definitions contained in read-only files cannot be altered by external clients.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - writabilityMode
        - showAllAttributes
        - enabled
        - id
    Enumschema-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:schema"
    backup-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbackup-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          backupDirectory:
            type: array
            items:
              type: string
            description: >-
                Specifies the path to a backup directory containing one or more backups for a particular backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - writabilityMode
        - backupDirectory
        - enabled
        - id
    Enumbackup-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:backup"
    encryption-settings-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumencryption-settings-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - baseDN
        - backendID
        - enabled
        - id
    Enumencryption-settings-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:encryption-settings"
    ldif-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldif-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          isPrivateBackend:
            type: boolean
            description: >-
                Indicates whether the backend should be considered a private backend, which indicates that it is used for storing operational data rather than user-defined information.
          ldifFile:
            type: string
            description: >-
                Specifies the path to the LDIF file containing the data for this backend.
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - writabilityMode
        - ldifFile
        - backendID
        - enabled
        - baseDN
        - id
    Enumldif-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:ldif"
    trust-store-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtrust-store-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          trustStoreFile:
            type: string
            description: >-
                Specifies the path to the file that stores the trust information.
          trustStoreType:
            type: string
            description: >-
                Specifies the format for the data in the key store file.
          trustStorePin:
            type: string
            format: password
            description: >-
                Specifies the clear-text PIN needed to access the Trust Store Backend.
          trustStorePinFile:
            type: string
            description: >-
                Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the Trust Store Backend.
          trustStorePinPassphraseProvider:
            type: string
            description: >-
                The passphrase provider to use to obtain the clear-text PIN needed to access the Trust Store Backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - writabilityMode
        - trustStoreFile
        - enabled
        - id
    Enumtrust-store-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:trust-store"
    custom-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - enabled
        - baseDN
        - writabilityMode
        - id
    Enumcustom-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:custom"
    changelog-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumchangelog-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          dbDirectory:
            type: string
            description: >-
                Specifies the path to the filesystem directory that is used to hold the Berkeley DB Java Edition database files containing the data for this backend. The files for this backend are stored in a sub-directory named after the backend-id.
          dbDirectoryPermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to the directory containing the backend database files and to directories and files created during backup of the backend.
          dbCachePercent:
            type: integer
            description: >-
                Specifies the percentage of JVM memory to allocate to the changelog database cache.
          jeProperty:
            type: array
            items:
              type: string
            description: >-
                Specifies the database and environment properties for the Berkeley DB Java Edition database for this changelog backend.
          changelogWriteBatchSize:
            type: integer
            description: >-
                Specifies the number of changelog entries written in a single database transaction.
          changelogPurgeBatchSize:
            type: integer
            description: >-
                Specifies the number of changelog entries purged in a single database transaction.
          changelogWriteQueueCapacity:
            type: integer
            description: >-
                Specifies the capacity of the changelog write queue in number of changes.
          indexIncludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies which attribute types are to be specifically included in the set of attribute indexes maintained on the changelog. If this property does not have any values then no attribute types are indexed.
          indexExcludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies which attribute types are to be specifically excluded from the set of attribute indexes maintained on the changelog. This property is useful when the index-include-attribute property contains one of the special values "*" and "+".
          changelogMaximumAge:
            type: string
            description: >-
                Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
          targetDatabaseSize:
            type: string
            description: >-
                The changelog database is allowed to grow up to this size on disk even if changes are older than the configured changelog-maximum-age.
          changelogEntryIncludeBaseDN:
            type: array
            items:
              type: string
            description: >-
                The base DNs for branches in the data for which to record changes in the changelog.
          changelogEntryExcludeBaseDN:
            type: array
            items:
              type: string
            description: >-
                The base DNs for branches in the data for which no changelog records should be generated.
          changelogEntryIncludeFilter:
            type: array
            items:
              type: string
            description: >-
                A filter that indicates which changelog entries should actually be stored in the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
          changelogEntryExcludeFilter:
            type: array
            items:
              type: string
            description: >-
                A filter that indicates which changelog entries should be excluded from the changelog. Note that this filter is evaluated against the changelog entry itself and not against the entry that was the target of the change referenced by the changelog entry. This filter may target any attributes that appear in changelog entries with the exception of the changeNumber and entry-size-bytes attributes, since they will not be known at the time of the filter evaluation.
          changelogIncludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies which attribute types will be included in a changelog entry for ADD and MODIFY operations.
          changelogExcludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of attribute types that should be excluded in a changelog entry for ADD and MODIFY operations.
          changelogDeletedEntryIncludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of attribute types that should be included in a changelog entry for DELETE operations.
          changelogDeletedEntryExcludeAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of attribute types that should be excluded from a changelog entry for DELETE operations.
          changelogIncludeKeyAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies which attribute types will be included in a changelog entry on every change.
          changelogMaxBeforeAfterValues:
            type: integer
            description: >-
                This controls whether all attribute values for a modified attribute (even those values that have not changed) will be included in the changelog entry. If the number of attribute values does not exceed this limit, then all values for the modified attribute will be included in the changelog entry.
          writeLastmodAttributes:
            type: boolean
            description: >-
                Specifies whether values of creatorsName, createTimestamp, modifiersName and modifyTimestamp attributes will be written to changelog entries.
          useReversibleForm:
            type: boolean
            description: >-
                Specifies whether the changelog should provide enough information to be able to revert the changes if desired.
          includeVirtualAttributes:
            type: array
            items:
              $ref: '#/components/schemas/Enumbackend-includeVirtualAttributesProp'
          applyAccessControlsToChangelogEntryContents:
            type: boolean
            description: >-
                Indicates whether the contents of changelog entries should be subject to access control and sensitive attribute evaluation such that the contents of attributes like changes, deletedEntryAttrs, ds-changelog-entry-key-attr-values, ds-changelog-before-values, and ds-changelog-after-values may be altered based on attributes the user can see in the target entry.
          reportExcludedChangelogAttributes:
            $ref: '#/components/schemas/Enumbackend-reportExcludedChangelogAttributesProp'
          softDeleteEntryIncludedOperation:
            type: array
            items:
              $ref: '#/components/schemas/Enumbackend-softDeleteEntryIncludedOperationProp'
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - baseDN
        - changelogMaximumAge
        - backendID
        - enabled
        - id
    Enumchangelog-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:changelog"
    monitor-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummonitor-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - enabled
        - id
    Enummonitor-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:monitor"
    add-local-db-backend-request:
      allOf:
      - type: object
        properties:
          backendName:
            description: Name of the new Backend
            type: string
        required:
        - backendName
      - $ref: '#/components/schemas/local-db-backend-shared'
    local-db-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Backend
            type: string
        required:
        - id
      - $ref: '#/components/schemas/local-db-backend-shared'
      required:
      - writabilityMode
      - dbDirectory
      - importTempDirectory
    local-db-backend-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocal-db-backendSchemaUrn'
        uncachedId2entryCacheMode:
          $ref: '#/components/schemas/Enumbackend-uncachedId2entryCacheModeProp'
        uncachedAttributeCriteria:
          type: string
          description: >-
              The criteria that will be used to identify attributes that should be written into the uncached-id2entry database rather than the id2entry database. This will only be used for entries in which the associated uncached-entry-criteria does not indicate that the entire entry should be uncached.
        uncachedEntryCriteria:
          type: string
          description: >-
              The criteria that will be used to identify entries that should be written into the uncached-id2entry database rather than the id2entry database.
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertForUntrustedIndex:
          type: boolean
          description: >-
              Determines whether the Directory Server enters a DEGRADED state when this Local DB Backend has an index whose contents cannot be trusted.
        returnUnavailableForUntrustedIndex:
          type: boolean
          description: >-
              Determines whether the Directory Server returns UNAVAILABLE for any LDAP search operation in this Local DB Backend that would use an index whose contents cannot be trusted.
        processFiltersWithUndefinedAttributeTypes:
          type: boolean
          description: >-
              Determines whether the Directory Server should continue filter processing for LDAP search operations in this Local DB Backend that includes a search filter with an attribute that is not defined in the schema. This will only apply if check-schema is enabled in the global configuration.
        isPrivateBackend:
          type: boolean
          description: >-
              Indicates whether this backend should be considered a private backend in the server. Private backends are meant for storing server-internal information and should not be used for user or application data.
        dbDirectory:
          type: string
          description: >-
              Specifies the path to the filesystem directory that is used to hold the Berkeley DB Java Edition database files containing the data for this backend. The files for this backend are stored in a sub-directory named after the backend-id.
        dbDirectoryPermissions:
          type: string
          description: >-
              Specifies the permissions that should be applied to the directory containing the backend database files and to directories and files created during backup or LDIF export of the backend.
        compactCommonParentDN:
          type: array
          items:
            type: string
          description: >-
              Provides a DN of an entry that may be the parent for a large number of entries in the backend. This may be used to help increase the space efficiency when encoding entries for storage.
        compressEntries:
          type: boolean
          description: >-
              Indicates whether the backend should attempt to compress entries before storing them in the database.
        hashEntries:
          type: boolean
          description: >-
              Indicates whether to calculate and store a message digest of the entry contents along with the entry data, in order to provide a means of verifying the integrity of the entry data.
        dbNumCleanerThreads:
          type: integer
          description: >-
              Specifies the number of threads that the backend should maintain to keep the database log files at or near the desired utilization. A value of zero indicates that the number of cleaner threads should be automatically configured based on the number of available CPUs.
        dbCleanerMinUtilization:
          type: integer
          description: >-
              Specifies the minimum percentage of "live" data that the database cleaner attempts to keep in database log files.
        dbEvictorCriticalPercentage:
          type: integer
          description: >-
              Specifies the percentage over the configured maximum that the database cache is allowed to grow. It is recommended to set this value slightly above zero when the database is too large to fully cache in memory. In this case, a dedicated background evictor thread is used to perform evictions once the cache fills up reducing the possibility that server threads are blocked.
        dbCheckpointerWakeupInterval:
          type: string
          description: >-
              Specifies the maximum length of time that should pass between checkpoints.
        dbBackgroundSyncInterval:
          type: string
          description: >-
              Specifies the interval to use when performing background synchronous writes in the database environment in order to smooth overall write performance and increase data durability. A value of "0 s" will disable background synchronous writes.
        dbUseThreadLocalHandles:
          type: boolean
          description: >-
              Indicates whether to use thread-local database handles to reduce contention in the backend.
        dbLogFileMax:
          type: string
          description: >-
              Specifies the maximum size for a database log file.
        dbLoggingLevel:
          type: string
          description: >-
              Specifies the log level that should be used by the database when it is writing information into the je.info file.
        jeProperty:
          type: array
          items:
            type: string
          description: >-
              Specifies the database and environment properties for the Berkeley DB Java Edition database serving the data for this backend.
        dbCachePercent:
          type: integer
          description: >-
              Specifies the percentage of JVM memory to allocate to the database cache.
        defaultCacheMode:
          $ref: '#/components/schemas/Enumbackend-defaultCacheModeProp'
        id2entryCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2entryCacheModeProp'
        dn2idCacheMode:
          $ref: '#/components/schemas/Enumbackend-dn2idCacheModeProp'
        id2childrenCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2childrenCacheModeProp'
        id2subtreeCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2subtreeCacheModeProp'
        dn2uriCacheMode:
          $ref: '#/components/schemas/Enumbackend-dn2uriCacheModeProp'
        primeMethod:
          type: array
          items:
            $ref: '#/components/schemas/Enumbackend-primeMethodProp'
        primeThreadCount:
          type: integer
          description: >-
              Specifies the number of threads to use when priming. At present, this applies only to the preload and cursor-across-indexes prime methods.
        primeTimeLimit:
          type: string
          description: >-
              Specifies the maximum length of time that the backend prime should be allowed to run. A duration of zero seconds indicates that there should not be a time limit.
        primeAllIndexes:
          type: boolean
          description: >-
              Indicates whether to prime all indexes associated with this backend, or to only prime the specified set of indexes (as configured with the system-index-to-prime property for the system indexes, and the prime-index property in the attribute index definition for attribute indexes).
        systemIndexToPrime:
          type: array
          items:
            $ref: '#/components/schemas/Enumbackend-systemIndexToPrimeProp'
        systemIndexToPrimeInternalNodesOnly:
          type: array
          items:
            $ref: '#/components/schemas/Enumbackend-systemIndexToPrimeInternalNodesOnlyProp'
        backgroundPrime:
          type: boolean
          description: >-
              Indicates whether to attempt to perform the prime using a background thread if possible. If background priming is enabled, then the Directory Server may be allowed to accept client connections and process requests while the prime is in progress.
        indexEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
        compositeIndexEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that are allowed to match a given composite index key before that particular composite index key is no longer maintained.
        id2childrenIndexEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entry IDs to maintain for each entry in the id2children system index (which keeps track of the immediate children for an entry, to assist in otherwise unindexed searches with a single-level scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
        id2subtreeIndexEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entry IDs to maintain for each entry in the id2subtree system index (which keeps track of all descendants below an entry, to assist in otherwise unindexed searches with a whole-subtree or subordinate subtree scope). A value of 0 means there is no limit, however this could have a big impact on database size on disk and on server performance.
        importTempDirectory:
          type: string
          description: >-
              Specifies the location of the directory that is used to hold temporary information during the index post-processing phase of an LDIF import.
        importThreadCount:
          type: integer
          description: >-
              Specifies the number of threads to use for concurrent processing during an LDIF import.
        exportThreadCount:
          type: integer
          description: >-
              Specifies the number of threads to use for concurrently retrieving and encoding entries during an LDIF export.
        dbImportCachePercent:
          type: integer
          description: >-
              The percentage of JVM memory to allocate to the database cache during import operations.
        dbTxnWriteNoSync:
          type: boolean
          description: >-
              Indicates whether the database should synchronously flush data as it is written to disk.
        deadlockRetryLimit:
          type: integer
          description: >-
              Specifies the number of times that the server should retry an attempted operation in the backend if a deadlock results from two concurrent requests that interfere with each other in a conflicting manner.
        externalTxnDefaultBackendLockBehavior:
          $ref: '#/components/schemas/Enumbackend-externalTxnDefaultBackendLockBehaviorProp'
        singleWriterLockBehavior:
          $ref: '#/components/schemas/Enumbackend-singleWriterLockBehaviorProp'
        subtreeDeleteSizeLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that may be deleted from the backend when using the subtree delete control.
        numRecentChanges:
          type: integer
          description: >-
              Specifies the number of recent LDAP entry changes per replica for which the backend keeps a record to allow replication to recover in the event that the server is abruptly terminated. Increasing this value can lead to an increased peak server modification rate as well as increased replication throughput.
        offlineProcessDatabaseOpenTimeout:
          type: string
          description: >-
              Specifies a timeout duration which will be used for opening the database environment by an offline process, such as export-ldif.
        backendID:
          type: string
          description: >-
              Specifies a name to identify the associated backend.
        description:
          type: string
          description: >-
              A description for this Backend
        enabled:
          type: boolean
          description: >-
              Indicates whether the backend is enabled in the server.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DN(s) for the data that the backend handles.
        setDegradedAlertWhenDisabled:
          type: boolean
          description: >-
              Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
        returnUnavailableWhenDisabled:
          type: boolean
          description: >-
              Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
        notificationManager:
          type: string
          description: >-
              Specifies a notification manager for changes resulting from operations processed through this Backend
      required:
      - schemas
      - backendID
      - enabled
      - baseDN
    Enumlocal-db-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:local-db"
    config-file-handler-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconfig-file-handler-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          insignificantConfigArchiveAttribute:
            type: array
            items:
              type: string
            description: >-
                The name or OID of an attribute type that is considered insignificant for the purpose of maintaining the configuration archive.
          mirroredSubtreePeerPollingInterval:
            type: string
            description: >-
                Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait before polling the peer servers in the topology to determine if there are any changes in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
          mirroredSubtreeEntryUpdateTimeout:
            type: string
            description: >-
                Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for an update operation (add, delete, modify and modify-dn) on an entry to be applied on all servers in the topology. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data.
          mirroredSubtreeSearchTimeout:
            type: string
            description: >-
                Tells the server component that is responsible for mirroring configuration data across a topology of servers the maximum amount of time to wait for a search operation to complete. Mirrored data includes meta-data about the servers in the topology as well as cluster-wide configuration data. Search requests that take longer than this timeout will be canceled and considered failures.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - writabilityMode
        - enabled
        - id
    Enumconfig-file-handler-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:config-file-handler"
    task-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtask-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          taskBackingFile:
            type: string
            description: >-
                Specifies the path to the backing file for storing information about the tasks configured in the server.
          maximumInitialTaskLogMessagesToRetain:
            type: integer
            description: >-
                The maximum number of log messages to retain in each task entry from the beginning of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
          maximumFinalTaskLogMessagesToRetain:
            type: integer
            description: >-
                The maximum number of log messages to retain in each task entry from the end of the processing for that task. If too many messages are logged during task processing, then retaining only a limited number of messages from the beginning and/or end of task processing can reduce the amount of memory that the server consumes by caching information about currently-active and recently-completed tasks.
          taskRetentionTime:
            type: string
            description: >-
                Specifies the length of time that task entries should be retained after processing on the associated task has been completed.
          notificationSenderAddress:
            type: string
            description: >-
                Specifies the email address to use as the sender address (that is, the "From:" address) for notification mail messages generated when a task completes execution.
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - writabilityMode
        - taskBackingFile
        - enabled
        - id
    Enumtask-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:task"
    alert-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumalert-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          ldifFile:
            type: string
            description: >-
                Specifies the path to the LDIF file that serves as the backing file for this backend.
          alertRetentionTime:
            type: string
            description: >-
                Specifies the maximum length of time that information about generated alerts should be maintained before they will be purged.
          maxAlerts:
            type: integer
            description: >-
                Specifies the maximum number of alerts that should be retained. If more alerts than this configured maximum are generated within the alert retention time, then the oldest alerts will be purged to achieve this maximum.
          disabledAlertType:
            type: array
            items:
              $ref: '#/components/schemas/Enumbackend-disabledAlertTypeProp'
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - ldifFile
        - alertRetentionTime
        - writabilityMode
        - enabled
        - id
    Enumalert-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:alert"
    alarm-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumalarm-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DN(s) for the data that the backend handles.
          ldifFile:
            type: string
            description: >-
                Specifies the path to the LDIF file that serves as the backing file for this backend.
          alarmRetentionTime:
            type: string
            description: >-
                Specifies the maximum length of time that information about raised alarms should be maintained before they will be purged.
          maxAlarms:
            type: integer
            description: >-
                Specifies the maximum number of alarms that should be retained. If more alarms than this configured maximum are generated within the alarm retention time, then the oldest alarms will be purged to achieve this maximum. Only alarms at normal severity will be purged.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          setDegradedAlertWhenDisabled:
            type: boolean
            description: >-
                Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          backupFilePermissions:
            type: string
            description: >-
                Specifies the permissions that should be applied to files and directories created by a backup of the backend.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - baseDN
        - ldifFile
        - alarmRetentionTime
        - writabilityMode
        - enabled
        - id
    Enumalarm-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:alarm"
    metrics-backend-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummetrics-backendSchemaUrn'
          id:
            description: Name of the Backend
            type: string
          backendID:
            type: string
            description: >-
                Specifies a name to identify the associated backend.
          storageDir:
            type: string
            description: >-
                Specifies the path to the directory that will be used to store queued samples.
          metricsDir:
            type: string
            description: >-
                Specifies the path to the directory that contains metric definitions.
          sampleFlushInterval:
            type: string
            description: >-
                Period when samples are flushed to disk.
          retentionPolicy:
            type: array
            items:
              type: string
            description: >-
                The retention policy to use for the Metrics Backend .
          description:
            type: string
            description: >-
                A description for this Backend
          enabled:
            type: boolean
            description: >-
                Indicates whether the backend is enabled in the server.
          writabilityMode:
            $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
          returnUnavailableWhenDisabled:
            type: boolean
            description: >-
                Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
          notificationManager:
            type: string
            description: >-
                Specifies a notification manager for changes resulting from operations processed through this Backend
        required:
        - schemas
        - backendID
        - storageDir
        - metricsDir
        - retentionPolicy
        - enabled
        - writabilityMode
        - id
    Enummetrics-backendSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:backend:metrics"
    add-local-db-composite-index-request:
      allOf:
      - type: object
        properties:
          indexName:
            description: Name of the new Local DB Composite Index
            type: string
        required:
        - indexName
      - $ref: '#/components/schemas/local-db-composite-index-shared'
    local-db-composite-index-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Local DB Composite Index
            type: string
        required:
        - id
      - $ref: '#/components/schemas/local-db-composite-index-shared'
    local-db-composite-index-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocal-db-composite-indexSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Local DB Composite Index
        indexFilterPattern:
          type: string
          description: >-
              A filter pattern that identifies which entries to include in the index.
        indexBaseDNPattern:
          type: string
          description: >-
              An optional base DN pattern that identifies portions of the DIT in which entries to index may exist.
        indexEntryLimit:
          type: integer
          description: >-
              The maximum number of entries that any single index key will be allowed to match before the server stops maintaining the ID set for that index key.
        primeIndex:
          type: boolean
          description: >-
              Indicates whether the server should load the contents of this index into memory when the backend is being opened.
        primeInternalNodesOnly:
          type: boolean
          description: >-
              Indicates whether to only prime the internal nodes of the index database, rather than priming both internal and leaf nodes.
        cacheMode:
          $ref: '#/components/schemas/Enumlocal-db-composite-index-cacheModeProp'
      required:
      - indexFilterPattern
    Enumlocal-db-composite-indexSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:local-db-composite-index"
    add-local-db-vlv-index-request:
      allOf:
      - type: object
        properties:
          indexName:
            description: Name of the new Local DB VLV Index
            type: string
        required:
        - indexName
      - $ref: '#/components/schemas/local-db-vlv-index-shared'
    local-db-vlv-index-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Local DB VLV Index
            type: string
        required:
        - id
      - $ref: '#/components/schemas/local-db-vlv-index-shared'
    local-db-vlv-index-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocal-db-vlv-indexSchemaUrn'
        baseDN:
          type: string
          description: >-
              Specifies the base DN used in the search query that is being indexed.
        scope:
          $ref: '#/components/schemas/Enumlocal-db-vlv-index-scopeProp'
        filter:
          type: string
          description: >-
              Specifies the LDAP filter used in the query that is being indexed.
        sortOrder:
          type: string
          description: >-
              Specifies the names of the attributes that are used to sort the entries for the query being indexed.
        name:
          type: string
          description: >-
              Specifies a unique name for this VLV index.
        maxBlockSize:
          type: integer
          description: >-
              Specifies the number of entry IDs to store in a single sorted set before it must be split.
        cacheMode:
          $ref: '#/components/schemas/Enumlocal-db-vlv-index-cacheModeProp'
      required:
      - baseDN
      - scope
      - filter
      - sortOrder
      - name
    Enumlocal-db-vlv-indexSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:local-db-vlv-index"
    add-local-db-index-request:
      allOf:
      - type: object
        properties:
          indexName:
            description: Name of the new Local DB Index
            type: string
        required:
        - indexName
      - $ref: '#/components/schemas/local-db-index-shared'
    local-db-index-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Local DB Index
            type: string
        required:
        - id
      - $ref: '#/components/schemas/local-db-index-shared'
    local-db-index-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocal-db-indexSchemaUrn'
        attribute:
          type: string
          description: >-
              Specifies the name of the attribute for which the index is to be maintained.
        indexEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained.
        substringIndexEntryLimit:
          type: integer
          description: >-
              Specifies, for substring indexes, the maximum number of entries that are allowed to match a given index key before that particular index key is no longer maintained. Setting a large limit can dramatically increase the database size on disk and have a big impact on server performance if the indexed attribute is modified frequently. When a very large limit is required, creating a dedicated composite index with an index-filter-pattern of (attr=*?*) will give the best balance between search and update performance.
        maintainMatchCountForKeysExceedingEntryLimit:
          type: boolean
          description: >-
              Indicates whether to continue to maintain a count of the number of matching entries for an index key even after that count exceeds the index entry limit.
        indexType:
          type: array
          items:
            $ref: '#/components/schemas/Enumlocal-db-index-indexTypeProp'
        substringLength:
          type: integer
          description: >-
              The length of substrings in a substring index.
        primeIndex:
          type: boolean
          description: >-
              If this option is enabled and this index's backend is configured to prime indexes, then this index will be loaded at startup.
        primeInternalNodesOnly:
          type: boolean
          description: >-
              If this option is enabled and this index's backend is configured to prime indexes using the preload method, then only the internal database nodes (i.e., the database keys but not values) should be primed when the backend is initialized.
        equalityIndexFilter:
          type: array
          items:
            type: string
          description: >-
              A search filter that may be used in conjunction with an equality component for the associated attribute type. If an equality index filter is defined, then an additional equality index will be maintained for the associated attribute, but only for entries which match the provided filter. Further, the index will be used only for searches containing an equality component with the associated attribute type ANDed with this filter.
        maintainEqualityIndexWithoutFilter:
          type: boolean
          description: >-
              Indicates whether to maintain a separate equality index for the associated attribute without any filter, in addition to maintaining an index for each equality index filter that is defined. If this is false, then the attribute will not be indexed for equality by itself but only in conjunction with the defined equality index filters.
        cacheMode:
          $ref: '#/components/schemas/Enumlocal-db-index-cacheModeProp'
      required:
      - attribute
      - indexType
    Enumlocal-db-indexSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:local-db-index"
    Enumbackend-dn2idCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the dn2id database, which provides a mapping between normalized entry DNs and the corresponding entry IDs.
    Enumbackend-includeVirtualAttributesProp:
      type: string
      enum:
      - "add-attributes"
      - "deleted-entry-attributes"
      - "before-and-after-values"
      - "key-attribute-values"
      description: >-
          Specifies the changelog entry elements (if any) in which virtual attributes should be included.
    Enumbackend-dn2uriCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the dn2uri database, which provides a mapping between a normalized entry DN and a set of referral URLs contained in the associated smart referral entry.
    Enumbackend-primeMethodProp:
      type: string
      enum:
      - "none"
      - "preload"
      - "preload-internal-nodes-only"
      - "cursor-across-indexes"
      - "prime-to-filesystem-cache"
      - "prime-to-filesystem-cache-non-sequential"
      description: >-
          Specifies the method that should be used to prime caches with data for this backend.
    Enumbackend-singleWriterLockBehaviorProp:
      type: string
      enum:
      - "never-acquire"
      - "acquire-on-retry"
      - "always-acquire"
      description: >-
          Specifies the condition under which to acquire a single-writer lock to ensure that the associated operation will be the only write in progress at the time the lock is held. The single-writer lock can help avoid problems that result from database lock conflicts that arise between two write operations being processed at the same time in the same backend. This will not have any effect on the read operations processed while the write is in progress.
    Enumlocal-db-index-indexTypeProp:
      type: string
      enum:
      - "equality"
      - "ordering"
      - "presence"
      - "substring"
      - "approximate"
      description: >-
          Specifies the type(s) of indexing that should be performed for the associated attribute.
    Enumbackend-reportExcludedChangelogAttributesProp:
      type: string
      enum:
      - "none"
      - "attribute-counts"
      - "attribute-names"
      description: >-
          Indicates whether changelog entries that have been altered by applying access controls should include additional information about any attributes that may have been removed.
    Enumbackend-id2subtreeCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the id2subtree database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its children to any depth. This index may be used when performing searches with a whole-subtree or subordinate-subtree scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
    Enumlocal-db-vlv-index-cacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the database for this index.
    Enumbackend-softDeleteEntryIncludedOperationProp:
      type: string
      enum:
      - "modify"
      - "delete"
      description: >-
          Specifies which operations performed on soft-deleted entries will appear in the changelog.
    Enumlocal-db-vlv-index-scopeProp:
      type: string
      enum:
      - "base-object"
      - "single-level"
      - "whole-subtree"
      - "subordinate-subtree"
      description: >-
          Specifies the LDAP scope of the query that is being indexed.
    Enumbackend-uncachedId2entryCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the uncached-id2entry database, which provides a way to store complete or partial encoded entries with a different (and presumably less memory-intensive) cache mode than records written to id2entry.
    Enumbackend-writabilityModeProp:
      type: string
      enum:
      - "enabled"
      - "disabled"
      - "internal-only"
      description: >-
          Specifies the behavior that the backend should use when processing write operations.
    Enumbackend-disabledAlertTypeProp:
      type: string
      enum:
      - "access-control-change"
      - "access-control-disabled"
      - "access-control-enabled"
      - "access-control-parse-failure"
      - "access-log-criteria-matched"
      - "alarm-cleared"
      - "alarm-critical"
      - "alarm-major"
      - "alarm-minor"
      - "alarm-warning"
      - "backend-disabled"
      - "backend-initialization-failed"
      - "backup-failed"
      - "cannot-acquire-shared-backend-lock"
      - "cannot-copy-schema-files"
      - "cannot-decode-entry"
      - "cannot-find-recurring-task"
      - "cannot-register-backend"
      - "cannot-release-shared-backend-lock"
      - "cannot-rename-current-task-file"
      - "cannot-rename-new-task-file"
      - "cannot-restore-backup"
      - "cannot-schedule-recurring-task-iteration"
      - "cannot-write-configuration"
      - "cannot-write-new-schema-files"
      - "cannot-write-server-state-file"
      - "cannot-write-task-backing-file"
      - "config-change"
      - "console-logger-without-no-detach"
      - "crypto-manager-error"
      - "continuous-garbage-collection-detected"
      - "deadlock-detected"
      - "debug-logging-enabled"
      - "delegated-admin-configuration-errors"
      - "duplicate-alerts-suppressed"
      - "duplicate-error-alerts-suppressed"
      - "duplicate-fatal-alerts-suppressed"
      - "duplicate-info-alerts-suppressed"
      - "duplicate-warning-alerts-suppressed"
      - "embedded-postgresql-unavailable"
      - "entering-lockdown-mode"
      - "entry-references-removed-attribute-type"
      - "exec-task-launching-command"
      - "exploded-index-background-delete-cleanup-failed"
      - "exploded-index-background-delete-failed"
      - "external-config-file-edit-handled"
      - "external-config-file-edit-lost"
      - "external-server-initialization-failed"
      - "failed-to-apply-mirrored-configuration"
      - "file-retention-task-delete-failure"
      - "force-gc-complete"
      - "force-gc-starting"
      - "global-index-insufficient-disk-space-error"
      - "global-index-persistence-error"
      - "global-index-read-error"
      - "global-referential-integrity-update-failure"
      - "globally-unique-attribute-conflict"
      - "health-check-available-to-degraded"
      - "health-check-available-to-unavailable"
      - "health-check-degraded-to-available"
      - "health-check-degraded-to-unavailable"
      - "health-check-unavailable-to-available"
      - "health-check-unavailable-to-degraded"
      - "http-connection-handler-duplicate-context-path"
      - "http-connection-handler-duplicate-servlet-extension"
      - "index-corrupt"
      - "index-degraded"
      - "index-rebuild-completed"
      - "index-rebuild-in-progress"
      - "insecure-access-token-validator-enabled"
      - "invalid-privilege"
      - "je-background-sync-failed"
      - "je-cleaner-disabled"
      - "je-daemon-thread-exception"
      - "je-environment-not-closed-cleanly"
      - "je-recovery-required"
      - "jvm-misconfiguration"
      - "large-attribute-update-failure"
      - "lba-no-available-servers"
      - "ldap-connection-handler-cannot-listen"
      - "ldap-connection-handler-consecutive-failures"
      - "ldap-connection-handler-uncaught-error"
      - "ldif-backend-cannot-write"
      - "ldif-connection-handler-parse-error"
      - "ldif-connection-handler-io-error"
      - "leaving-lockdown-mode"
      - "log-file-rotation-listener-invoke-error"
      - "log-file-rotation-listener-processing-takes-too-long"
      - "logging-error"
      - "low-disk-space-error"
      - "low-disk-space-warning"
      - "mirrored-subtree-manager-forced-as-master-error"
      - "mirrored-subtree-manager-forced-as-master-warning"
      - "mirrored-subtree-manager-no-master-found"
      - "mirrored-subtree-server-not-in-topology"
      - "mirrored-subtree-manager-operation-error"
      - "mirrored-subtree-manager-failed-outbound-connection"
      - "mirrored-subtree-manager-connection-asymmetry"
      - "missing-schema-elements-referenced-by-backend"
      - "monitoring-endpoint-unable-to-connect"
      - "no-enabled-alert-handlers"
      - "offline-config-change-detected"
      - "out-of-disk-space-error"
      - "pdp-unavailable"
      - "pdp-trust-framework-version-deprecated"
      - "proxy-entry-balancing-operation-failure"
      - "proxy-entry-balancing-error-multiple-operations-succeeded"
      - "proxy-entry-rebalancing-admin-action-required"
      - "replication-backlogged"
      - "replication-metadata-decode-failure"
      - "replication-missing-changes"
      - "replication-monitor-data-unavailable"
      - "replication-plugin-message-serialization-failure"
      - "replication-server-changelog-failure"
      - "replication-server-listen-failure"
      - "replication-unresolved-conflict"
      - "replication-unsent-changes"
      - "replication-replay-failed"
      - "restart-required"
      - "schema-checking-disabled"
      - "scim-lookthrough-limit-exceeded"
      - "restricted-subtree-accessibility"
      - "server-shutting-down"
      - "server-starting"
      - "server-started"
      - "subtree-delete-interrupted"
      - "sync-resource-connection-error"
      - "sync-resource-operation-error"
      - "sync-pipe-initialization-error"
      - "sync-pipe-backlog-above-threshold"
      - "sync-pipe-backlog-below-threshold"
      - "system-nanotime-stopped"
      - "system-current-time-shifted"
      - "task-started"
      - "task-completed"
      - "task-failed"
      - "third-party-extension-exception"
      - "thread-exit-holding-lock"
      - "threshold-warning-entry"
      - "threshold-warning-exit"
      - "threshold-critical-entry"
      - "threshold-critical-exit"
      - "topology-registry-secret-key-deleted"
      - "uncaught-exception"
      - "unindexed-internal-search"
      - "unique-attribute-sync-conflict"
      - "unique-attribute-sync-error"
      - "uniqueness-control-post-commit-conflict"
      - "unlicensed-product"
      - "unrecognized-alert-type"
      - "user-defined-error"
      - "user-defined-fatal"
      - "user-defined-info"
      - "user-defined-warning"
      - "worker-thread-caught-error"
      - "work-queue-backlogged"
      - "work-queue-full"
      - "work-queue-no-threads-remaining"
      - "server-jvm-paused"
      - "sensitive-trace-data-logged-warning"
      - "replication-generation-id-mismatch"
      - "account-temporarily-locked-account-status-notification"
      - "account-permanently-locked-account-status-notification"
      - "account-unlocked-account-status-notification"
      - "account-idle-locked-account-status-notification"
      - "account-reset-locked-account-status-notification"
      - "account-disabled-account-status-notification"
      - "account-enabled-account-status-notification"
      - "account-not-yet-active-account-status-notification"
      - "account-expired-account-status-notification"
      - "password-expired-account-status-notification"
      - "password-expiring-account-status-notification"
      - "password-reset-account-status-notification"
      - "password-changed-account-status-notification"
      - "account-created-account-status-notification"
      - "account-updated-account-status-notification"
      - "bind-password-failed-validation-account-status-notification"
      - "must-change-password-account-status-notification"
      - "privilege-assigned"
      - "insecure-request-rejected"
      - "incremental-backups-deprecated"
      - "replace-certificate-succeeded"
      - "replace-certificate-failed"
      description: >-
          Specifies the names of the alert types that should not be added to the backend. This can be used to suppress high volume alerts that might trigger hitting the max-alerts limit sooner than desired. Disabled alert types will not be sent out over persistent searches on this backend.
    Enumlocal-db-composite-index-cacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      description: >-
          The behavior that the server should exhibit when storing information from this index in the database cache.
    Enumbackend-systemIndexToPrimeInternalNodesOnlyProp:
      type: string
      enum:
      - "dn2id"
      - "id2entry"
      - "uncached-id2entry"
      - "id2children"
      - "id2subtree"
      - "dn2uri"
      description: >-
          Specifies the system index(es) for which internal database nodes only (i.e., the database keys but not values) should be primed when the backend is initialized.
    Enumbackend-id2entryCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the id2entry database, which provides a mapping between entry IDs and entry contents. Consider configuring uncached entries or uncached attributes in lieu of changing from the "cache-keys-and-values" default value.
    Enumbackend-externalTxnDefaultBackendLockBehaviorProp:
      type: string
      enum:
      - "do-not-acquire"
      - "acquire-after-retries"
      - "acquire-before-retries"
      - "acquire-before-initial-attempt"
      description: >-
          Specifies the default behavior that should be exhibited by external transactions (e.g., an LDAP transaction or an atomic multi-update operation) with regard to acquiring an exclusive lock in this backend.
    Enumbackend-defaultCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used for any database for which the cache mode is not explicitly specified. This includes the id2entry database, which stores encoded entries, and all attribute indexes.
    Enumlocal-db-index-cacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the database for this index. This controls how much database cache memory can be consumed by this index.
    Enumbackend-systemIndexToPrimeProp:
      type: string
      enum:
      - "dn2id"
      - "id2entry"
      - "id2children"
      - "id2subtree"
      - "dn2uri"
      description: >-
          Specifies which system index(es) should be primed when the backend is initialized.
    Enumbackend-id2childrenCacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      - "keep-hot"
      - "default"
      - "make-cold"
      - "evict-leaf-immediately"
      - "evict-bin-immediately"
      description: >-
          Specifies the cache mode that should be used when accessing the records in the id2children database, which provides a mapping between the entry ID of a particular entry and the entry IDs of all of its immediate children. This index may be used when performing searches with a single-level scope if the search filter cannot be resolved to a small enough candidate list. The size of this database directly depends on the number of entries that have children.
    attribute-type-description-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumattribute-type-description-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          stripSyntaxMinUpperBound:
            type: boolean
            description: >-
                Indicates whether the suggested minimum upper bound appended to an attribute's syntax OID in its schema definition Attribute Type Description should be stripped.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumattribute-type-description-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:attribute-type-description"
    directory-string-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdirectory-string-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          allowZeroLengthValues:
            type: boolean
            description: >-
                Indicates whether zero-length (that is, an empty string) values are allowed.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumdirectory-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:directory-string"
    telephone-number-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtelephone-number-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          strictFormat:
            type: boolean
            description: >-
                Indicates whether to require telephone number values to strictly comply with the standard definition for this syntax.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumtelephone-number-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:telephone-number"
    distinguished-name-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdistinguished-name-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumdistinguished-name-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:distinguished-name"
    generalized-time-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneralized-time-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumgeneralized-time-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generalized-time"
    integer-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enuminteger-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enuminteger-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:integer"
    uuid-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumuuid-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumuuid-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:uuid"
    generic-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneric-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumgeneric-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generic"
    json-object-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumjson-object-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumjson-object-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:json-object"
    user-password-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumuser-password-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumuser-password-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:user-password"
    boolean-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumboolean-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumboolean-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:boolean"
    hex-string-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhex-string-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumhex-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:hex-string"
    bit-string-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbit-string-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumbit-string-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:bit-string"
    ldap-url-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumldap-url-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          strictFormat:
            type: boolean
            description: >-
                Indicates whether values for attributes with this syntax will be required to be in the valid LDAP URL format. If this is set to false, then arbitrary strings will be allowed.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumldap-url-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:ldap-url"
    name-and-optional-uid-attribute-syntax-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumname-and-optional-uid-attribute-syntaxSchemaUrn'
          id:
            description: Name of the Attribute Syntax
            type: string
          enableCompaction:
            type: boolean
            description: >-
                Indicates whether values of attributes with this syntax should be compacted when stored in a local DB database.
          includeAttributeInCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should be compacted. If one or more include attributes are specified, then only those attributes will have their values compacted. If not set then all attributes will have their values compacted. The exclude-attribute-from-compaction property takes precedence over this property.
          excludeAttributeFromCompaction:
            type: array
            items:
              type: string
            description: >-
                Specifies the specific attributes (which should be associated with this syntax) whose values should not be compacted. If one or more exclude attributes are specified, then values of those attributes will not have their values compacted. This property takes precedence over the include-attribute-in-compaction property.
          enabled:
            type: boolean
            description: >-
                Indicates whether the Attribute Syntax is enabled.
          requireBinaryTransfer:
            type: boolean
            description: >-
                Indicates whether values of this attribute are required to have a "binary" transfer option as described in RFC 4522. Attributes with this syntax will generally be referenced with names including ";binary" (e.g., "userCertificate;binary").
        required:
        - schemas
        - enabled
        - id
    Enumname-and-optional-uid-attribute-syntaxSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:attribute-syntax:name-and-optional-uid"
    high-throughput-work-queue-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhigh-throughput-work-queueSchemaUrn'
          numWorkerThreads:
            type: integer
            description: >-
                Specifies the total number of worker threads that should be used within the server in order to process requested operations. The worker threads will be split evenly across all of the configured queues.
          numWriteWorkerThreads:
            type: integer
            description: >-
                Specifies the number of worker threads that should be used within the server to process write (add, delete, modify, and modify DN) operations. If this is specified, then separate sets of worker threads will be used for processing read and write operations, and the value of the num-worker-threads property will reflect the number of threads to use to process read operations.
          numAdministrativeSessionWorkerThreads:
            type: integer
            description: >-
                Specifies the number of worker threads that should be used to process operations as part of an administrative session. These threads may be reserved only for special use by management applications like dsconfig, the administration console, and other administrative tools, so that these applications may be used to diagnose problems and take any necessary corrective action even if all "normal" worker threads are busy processing other requests.
          numQueues:
            type: integer
            description: >-
                Specifies the number of blocking queues that should be maintained. A value of zero indicates that the server should attempt to automatically select an optimal value (one queue for every two worker threads).
          numWriteQueues:
            type: integer
            description: >-
                Specifies the number of blocking queues that should be maintained for write operations. This will only be used if a value is specified for the num-write-worker-threads property, in which case the num-queues property will specify the number of queues for read operations. Otherwise, all operations will be processed by a common set of worker threads and the value of the num-queues property will specify the number of queues for all types of operations.
          maxWorkQueueCapacity:
            type: integer
            description: >-
                Specifies the maximum number of pending operations that may be held in any of the queues at any given time. The total number of pending requests may be as large as this value times the total number of queues.
          maxOfferTime:
            type: string
            description: >-
                Specifies the maximum length of time that the connection handler should be allowed to wait to enqueue a request if the work queue is full. If the attempt to enqueue an operation does not succeed within this period of time, then the operation will be rejected and an error response will be returned to the client. A value of zero indicates that operations should be rejected immediately if the work queue is already at its maximum capacity.
          monitorQueueTime:
            type: boolean
            description: >-
                Indicates whether the work queue should monitor the length of time that operations are held in the queue. When enabled the queue time will be included with access log messages as "qtime" in milliseconds.
          maxQueueTime:
            type: string
            description: >-
                Specifies the maximum length of time that an operation should be allowed to wait on the work queue. If an operation has been waiting on the queue longer than this period of time, then it will receive an immediate failure result rather than being processed once it has been handed off to a worker thread. A value of zero seconds indicates that there should not be any maximum queue time imposed. This setting will only be used if the monitor-queue-time property has a value of true.
          expensiveOperationCheckInterval:
            type: string
            description: >-
                The interval that the work queue should use when checking for potentially expensive operations. If at least expensive-operation-minimum-concurrent-count worker threads are found to be processing the same operation on two consecutive polls separated by this time interval (i.e., the worker thread has been processing that operation for at least this length of time, and potentially up to twice this length of time), then a stack trace of all running threads will be written to a file for analysis to provide potentially useful information that may help better understand the reason it is taking so long. It may be that the operation is simply an expensive one to process, but there may be other external factors (e.g., a database checkpoint, a log rotation, lock contention, etc.) that could be to blame. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
          expensiveOperationMinimumConcurrentCount:
            type: integer
            description: >-
                The minimum number of concurrent expensive operations that should be detected to trigger dumping stack traces for all threads. If at least this number of worker threads are seen processing the same operations in two consecutive intervals, then the server will dump a stack trace of all threads to a file. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
          expensiveOperationMinimumDumpInterval:
            type: string
            description: >-
                The minimum length of time that should be required to pass after dumping stack trace information for all threads before the server should be allowed to create a second dump. This will help prevent the server from dumping stack traces too frequently and eventually consuming all available disk space with stack trace log output. This option is primarily intended for debugging purposes and should generally be used under the direction of Ping Identity support.
    Enumhigh-throughput-work-queueSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:work-queue:high-throughput"
    add-default-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdefault-uncached-entry-criteriaSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - enabled
    Enumdefault-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:default"
    add-last-access-time-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlast-access-time-uncached-entry-criteriaSchemaUrn'
        accessTimeThreshold:
          type: string
          description: >-
              Specifies the maximum length of time that has passed since an entry was last accessed that it should still be included in the id2entry database. Entries that have not been accessed in more than this length of time may be written into the uncached-id2entry database.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - accessTimeThreshold
      - enabled
    Enumlast-access-time-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:last-access-time"
    add-filter-based-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
    filter-based-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
      required:
      - filterIdentifiesUncachedEntries
    filter-based-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfilter-based-uncached-entry-criteriaSchemaUrn'
        filter:
          type: string
          description: >-
              Specifies the search filter that should be used to differentiate entries into cached and uncached sets.
        filterIdentifiesUncachedEntries:
          type: boolean
          description: >-
              Indicates whether the associated filter identifies those entries which should be stored in the uncached-id2entry database (if true) or entries which should be stored in the id2entry database (if false).
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - filter
      - enabled
    Enumfilter-based-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:filter-based"
    add-groovy-scripted-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Uncached Entry Criteria.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:groovy-scripted"
    add-third-party-uncached-entry-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Uncached Entry Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Uncached Entry Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-uncached-entry-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Uncached Entry Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Uncached Entry Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Uncached Entry Criteria
        enabled:
          type: boolean
          description: >-
              Indicates whether this Uncached Entry Criteria is enabled for use in the server.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-uncached-entry-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:third-party"
    delegated-admin-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdelegated-admin-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          basicAuthEnabled:
            type: boolean
            description: >-
                Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.
          identityMapper:
            type: string
            description: >-
                Specifies the Identity Mapper that is to be used for associating user entries with basic authentication user names.
          accessTokenValidator:
            type: array
            items:
              type: string
            description: >-
                If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Delegated Admin HTTP Servlet Extension.
          accessTokenScope:
            type: string
            description: >-
                The name of a scope that must be present in an access token accepted by the Delegated Admin HTTP Servlet Extension.
          audience:
            type: string
            description: >-
                A string or URI that identifies the Delegated Admin HTTP Servlet Extension in the context of OAuth2 authorization.
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all requests.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - id
    Enumdelegated-admin-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin"
    add-quickstart-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-shared'
    quickstart-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-shared'
    quickstart-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumquickstart-http-servlet-extensionSchemaUrn'
        server:
          type: string
          description: >-
              Specifies the PingFederate server to be configured.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
    Enumquickstart-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart"
    add-availability-state-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-shared'
    availability-state-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-shared'
    availability-state-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumavailability-state-http-servlet-extensionSchemaUrn'
        baseContextPath:
          type: string
          description: >-
              Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.
        availableStatusCode:
          type: integer
          description: >-
              Specifies the HTTP status code that the servlet should return if the server considers itself to be available.
        degradedStatusCode:
          type: integer
          description: >-
              Specifies the HTTP status code that the servlet should return if the server considers itself to be degraded.
        unavailableStatusCode:
          type: integer
          description: >-
              Specifies the HTTP status code that the servlet should return if the server considers itself to be unavailable.
        overrideStatusCode:
          type: integer
          description: >-
              Specifies a HTTP status code that the servlet should always return, regardless of the server's availability. If this value is defined, it will override the availability-based return codes.
        includeResponseBody:
          type: boolean
          description: >-
              Indicates whether the response should include a body that is a JSON object.
        additionalResponseContents:
          type: string
          description: >-
              A JSON-formatted string containing additional fields to be returned in the response body. For example, an additional-response-contents value of '{ "key": "value" }' would add the key and value to the root of the JSON response body.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
      - baseContextPath
      - availableStatusCode
      - degradedStatusCode
      - unavailableStatusCode
    Enumavailability-state-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state"
    add-prometheus-monitoring-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/prometheus-monitoring-http-servlet-extension-shared'
    prometheus-monitoring-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/prometheus-monitoring-http-servlet-extension-shared'
      required:
      - baseContextPath
    prometheus-monitoring-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumprometheus-monitoring-http-servlet-extensionSchemaUrn'
        baseContextPath:
          type: string
          description: >-
              Specifies the base context path that HTTP clients should use to access this servlet. The value must start with a forward slash and must represent a valid HTTP context path.
        includeInstanceNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should include an "instance" label whose value is the instance name for this Directory Server instance.
        includeProductNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should include a "product" label whose value is the product name for this Directory Server instance.
        includeLocationNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should include a "location" label whose value is the location name for this Directory Server instance.
        alwaysIncludeMonitorEntryNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should always include a "monitor_entry" label whose value is the name of the monitor entry from which the metric was obtained.
        includeMonitorObjectClassNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should include a "monitor_object_class" label whose value is the name of the object class for the monitor entry from which the metric was obtained.
        includeMonitorAttributeNameLabel:
          type: boolean
          description: >-
              Indicates whether generated metrics should include a "monitor_attribute" label whose value is the name of the monitor attribute from which the metric was obtained.
        labelNameValuePair:
          type: array
          items:
            type: string
          description: >-
              A set of name-value pairs for labels that should be included in all metrics exposed by this Directory Server instance.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
    Enumprometheus-monitoring-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:prometheus-monitoring"
    velocity-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumvelocity-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          baseContextPath:
            type: string
            description: >-
                The context path to use to access all template-based and static content. The value must start with a forward slash and must represent a valid HTTP context path.
          staticContextPath:
            type: string
            description: >-
                The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.
          staticContentDirectory:
            type: string
            description: >-
                Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.
          staticCustomDirectory:
            type: string
            description: >-
                Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.
          templateDirectory:
            type: array
            items:
              type: string
            description: >-
                Specifies an ordered list of directories in which to search for the template files.
          exposeRequestAttributes:
            type: boolean
            description: >-
                Specifies whether the HTTP request will be exposed to templates.
          exposeSessionAttributes:
            type: boolean
            description: >-
                Specifies whether the HTTP session will be exposed to templates.
          exposeServerContext:
            type: boolean
            description: >-
                Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.
          allowContextOverride:
            type: boolean
            description: >-
                Indicates whether context providers may override existing context objects with new values.
          mimeTypesFile:
            type: string
            description: >-
                Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.
          defaultMIMEType:
            type: string
            description: >-
                Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.
          characterEncoding:
            type: string
            description: >-
                Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all template page requests.
          staticResponseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.
          requireAuthentication:
            type: boolean
            description: >-
                Require authentication when accessing Velocity templates.
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used for associating basic authentication credentials with user entries.
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - baseContextPath
        - templateDirectory
        - id
    Enumvelocity-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity"
    consent-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsent-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          bearerTokenAuthEnabled:
            type: boolean
            description: >-
                Enables HTTP bearer token authentication.
          basicAuthEnabled:
            type: boolean
            description: >-
                Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.
          identityMapper:
            type: string
            description: >-
                Specifies the Identity Mapper that is to be used for associating basic authentication usernames with DNs.
          accessTokenValidator:
            type: array
            items:
              type: string
            description: >-
                If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Consent HTTP Servlet Extension.
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all requests.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - id
    Enumconsent-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent"
    add-ldap-mapped-scim-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-shared'
    ldap-mapped-scim-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-shared'
      required:
      - baseContextPath
      - temporaryDirectory
      - temporaryDirectoryPermissions
      - debugLevel
      - debugType
      - includeStackTrace
    ldap-mapped-scim-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldap-mapped-scim-http-servlet-extensionSchemaUrn'
        OAuthTokenHandler:
          type: string
          description: >-
              Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.
        basicAuthEnabled:
          type: boolean
          description: >-
              Enables HTTP Basic authentication, using a username and password.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the identity mapper that is to be used to match the username included in the HTTP Basic authentication header to the corresponding user in the directory.
        resourceMappingFile:
          type: string
          description: >-
              The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.
        includeLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies the LDAP object classes that should be exposed directly as SCIM resources.
        excludeLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies the LDAP object classes that should be not be exposed directly as SCIM resources.
        includeLDAPBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches of the DIT that should be exposed via the Identity Access API.
        excludeLDAPBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches of the DIT that should not be exposed via the Identity Access API.
        entityTagLDAPAttribute:
          type: string
          description: >-
              Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.
        baseContextPath:
          type: string
          description: >-
              The context path to use to access the SCIM interface. The value must start with a forward slash and must represent a valid HTTP context path.
        temporaryDirectory:
          type: string
          description: >-
              Specifies the location of the directory that is used to create temporary files containing SCIM request data.
        temporaryDirectoryPermissions:
          type: string
          description: >-
              Specifies the permissions that should be applied to the directory that is used to create temporary files.
        maxResults:
          type: integer
          description: >-
              The maximum number of resources that are returned in a response.
        bulkMaxOperations:
          type: integer
          description: >-
              The maximum number of operations that are permitted in a bulk request.
        bulkMaxPayloadSize:
          type: string
          description: >-
              The maximum payload size in bytes of a bulk request.
        bulkMaxConcurrentRequests:
          type: integer
          description: >-
              The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.
        debugEnabled:
          type: boolean
          description: >-
              Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.
        debugLevel:
          $ref: '#/components/schemas/Enumhttp-servlet-extension-debugLevelProp'
        debugType:
          type: array
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-debugTypeProp'
        includeStackTrace:
          type: boolean
          description: >-
              Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
    Enumldap-mapped-scim-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim"
    add-groovy-scripted-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-shared'
    groovy-scripted-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-shared'
    groovy-scripted-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-http-servlet-extensionSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted HTTP Servlet Extension.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
      - scriptClass
    Enumgroovy-scripted-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted"
    add-file-server-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/file-server-http-servlet-extension-shared'
    file-server-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-server-http-servlet-extension-shared'
    file-server-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-server-http-servlet-extensionSchemaUrn'
        baseContextPath:
          type: string
          description: >-
              Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and must represent a valid HTTP context path.
        documentRootDirectory:
          type: string
          description: >-
              Specifies the path to the directory on the local filesystem containing the files to be served by this File Server HTTP Servlet Extension. The path must exist, and it must be a directory.
        enableDirectoryIndexing:
          type: boolean
          description: >-
              Indicates whether to generate a default HTML page with a listing of available files if the requested path refers to a directory rather than a file, and that directory does not contain an index file.
        indexFile:
          type: array
          items:
            type: string
          description: >-
              Specifies the name of a file whose contents may be returned to the client if the requested path refers to a directory rather than a file.
        mimeTypesFile:
          type: string
          description: >-
              Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested file.
        defaultMIMEType:
          type: string
          description: >-
              Specifies the default MIME type to use for the Content-Type header when a mapping cannot be found.
        requireAuthentication:
          type: boolean
          description: >-
              Indicates whether the servlet extension should only accept requests from authenticated clients.
        allowedAuthenticationType:
          type: array
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-allowedAuthenticationTypeProp'
        accessTokenValidator:
          type: array
          items:
            type: string
          description: >-
              The access token validators that may be used to verify the authenticity of an OAuth 2.0 bearer token.
        idTokenValidator:
          type: array
          items:
            type: string
          description: >-
              The ID token validators that may be used to verify the authenticity of an of an OpenID Connect ID token.
        requireFileServletAccessPrivilege:
          type: boolean
          description: >-
              Indicates whether the servlet extension should only accept requests from authenticated clients that have the file-servlet-access privilege.
        requireGroup:
          type: array
          items:
            type: string
          description: >-
              The DN of a group whose members will be permitted to access to the associated files. If multiple group DNs are configured, then anyone who is a member of at least one of those groups will be granted access.
        identityMapper:
          type: string
          description: >-
              The identity mapper that will be used to identify the entry with which a username is associated.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
      - baseContextPath
      - documentRootDirectory
    Enumfile-server-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server"
    config-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconfig-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used for associating user entries with basic authentication user names.
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all requests.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - id
    Enumconfig-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config"
    scim2-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumscim2-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          baseContextPath:
            type: string
            description: >-
                The context path to use to access the SCIM 2.0 interface. The value must start with a forward slash and must represent a valid HTTP context path.
          accessTokenValidator:
            type: array
            items:
              type: string
            description: >-
                If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this SCIM2 HTTP Servlet Extension.
          mapAccessTokensToLocalUsers:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-mapAccessTokensToLocalUsersProp'
          debugEnabled:
            type: boolean
            description: >-
                Enables debug logging of the SCIM 2.0 SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.broker.http.scim2.extension.SCIM2HTTPServletExtension.
          debugLevel:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-debugLevelProp'
          debugType:
            type: array
            items:
              $ref: '#/components/schemas/Enumhttp-servlet-extension-debugTypeProp'
          includeStackTrace:
            type: boolean
            description: >-
                Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
          swaggerEnabled:
            type: boolean
            description: >-
                Indicates whether the SCIM2 HTTP Servlet Extension will generate a Swagger specification document.
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all requests.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - baseContextPath
        - debugLevel
        - debugType
        - includeStackTrace
        - id
    Enumscim2-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2"
    directory-rest-api-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdirectory-rest-api-http-servlet-extensionSchemaUrn'
          id:
            description: Name of the HTTP Servlet Extension
            type: string
          basicAuthEnabled:
            type: boolean
            description: >-
                Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.
          identityMapper:
            type: string
            description: >-
                Specifies the Identity Mapper that is to be used for associating user entries with basic authentication usernames.
          accessTokenValidator:
            type: array
            items:
              type: string
            description: >-
                If specified, the Access Token Validator(s) that may be used to validate access tokens for requests submitted to this Directory REST API HTTP Servlet Extension.
          accessTokenScope:
            type: string
            description: >-
                The name of a scope that must be present in an access token accepted by the Directory REST API HTTP Servlet Extension.
          audience:
            type: string
            description: >-
                A string or URI that identifies the Directory REST API HTTP Servlet Extension in the context of OAuth2 authorization.
          maxPageSize:
            type: integer
            description: >-
                The maximum number of entries to be returned in one page of search results.
          schemasEndpointObjectclass:
            type: array
            items:
              type: string
            description: >-
                The list of object classes which will be returned by the schemas endpoint.
          defaultOperationalAttribute:
            type: array
            items:
              type: string
            description: >-
                A set of operational attributes that will be returned with entries by default.
          rejectExpansionAttribute:
            type: array
            items:
              type: string
            description: >-
                A set of attributes which the client is not allowed to provide for the expand query parameters. This should be used for attributes that could either have a large number of values or that reference entries that are very large like groups.
          allowedControl:
            type: array
            items:
              $ref: '#/components/schemas/Enumhttp-servlet-extension-allowedControlProp'
          description:
            type: string
            description: >-
                A description for this HTTP Servlet Extension
          crossOriginPolicy:
            type: string
            description: >-
                The cross-origin request policy to use for the HTTP Servlet Extension.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for all requests.
          correlationIDResponseHeader:
            type: string
            description: >-
                Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
        required:
        - schemas
        - id
    Enumdirectory-rest-api-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api"
    add-third-party-http-servlet-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            description: Name of the new HTTP Servlet Extension
            type: string
        required:
        - extensionName
      - $ref: '#/components/schemas/third-party-http-servlet-extension-shared'
    third-party-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Extension
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-http-servlet-extension-shared'
    third-party-http-servlet-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-http-servlet-extensionSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party HTTP Servlet Extension.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party HTTP Servlet Extension. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Extension
        crossOriginPolicy:
          type: string
          description: >-
              The cross-origin request policy to use for the HTTP Servlet Extension.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for all requests.
        correlationIDResponseHeader:
          type: string
          description: >-
              Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are "Correlation-Id", "X-Amzn-Trace-Id", and "X-Request-Id".
      required:
      - schemas
      - extensionClass
    Enumthird-party-http-servlet-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party"
    add-prometheus-monitor-attribute-metric-request:
      allOf:
      - type: object
        properties:
          metricName:
            description: Name of the new Prometheus Monitor Attribute Metric
            type: string
        required:
        - metricName
      - $ref: '#/components/schemas/prometheus-monitor-attribute-metric-shared'
    prometheus-monitor-attribute-metric-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Prometheus Monitor Attribute Metric
            type: string
        required:
        - id
      - $ref: '#/components/schemas/prometheus-monitor-attribute-metric-shared'
    prometheus-monitor-attribute-metric-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumprometheus-monitor-attribute-metricSchemaUrn'
        metricName:
          type: string
          description: >-
              The name that will be used in the metric to be consumed by Prometheus.
        monitorAttributeName:
          type: string
          description: >-
              The name of the monitor attribute that contains the numeric value to be published.
        monitorObjectClassName:
          type: string
          description: >-
              The name of the object class for monitor entries that contain the monitor attribute.
        metricType:
          $ref: '#/components/schemas/Enumprometheus-monitor-attribute-metric-metricTypeProp'
        filter:
          type: string
          description: >-
              A filter that may be used to restrict the set of monitor entries for which the metric should be generated.
        metricDescription:
          type: string
          description: >-
              A human-readable description that should be published as part of the metric definition.
        labelNameValuePair:
          type: array
          items:
            type: string
          description: >-
              A set of name-value pairs for labels that should be included in the published metric for the target attribute.
      required:
      - metricName
      - monitorAttributeName
      - monitorObjectClassName
      - metricType
    Enumprometheus-monitor-attribute-metricSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:prometheus-monitor-attribute-metric"
    add-velocity-tools-velocity-context-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Velocity Context Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/velocity-tools-velocity-context-provider-shared'
    velocity-tools-velocity-context-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Velocity Context Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/velocity-tools-velocity-context-provider-shared'
    velocity-tools-velocity-context-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvelocity-tools-velocity-context-providerSchemaUrn'
        requestTool:
          type: array
          items:
            type: string
          description: >-
              The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
        sessionTool:
          type: array
          items:
            type: string
          description: >-
              The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
        applicationTool:
          type: array
          items:
            type: string
          description: >-
              The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
        enabled:
          type: boolean
          description: >-
              Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.
        objectScope:
          $ref: '#/components/schemas/Enumvelocity-context-provider-objectScopeProp'
        includedView:
          type: array
          items:
            type: string
          description: >-
              The name of a view for which this Velocity Context Provider will contribute content.
        excludedView:
          type: array
          items:
            type: string
          description: >-
              The name of a view for which this Velocity Context Provider will not contribute content.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.
      required:
      - schemas
    Enumvelocity-tools-velocity-context-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:velocity-tools"
    custom-velocity-context-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-velocity-context-providerSchemaUrn'
          id:
            description: Name of the Velocity Context Provider
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.
          objectScope:
            $ref: '#/components/schemas/Enumvelocity-context-provider-objectScopeProp'
          includedView:
            type: array
            items:
              type: string
            description: >-
                The name of a view for which this Velocity Context Provider will contribute content.
          excludedView:
            type: array
            items:
              type: string
            description: >-
                The name of a view for which this Velocity Context Provider will not contribute content.
          httpMethod:
            type: array
            items:
              type: string
            description: >-
                Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
          responseHeader:
            type: array
            items:
              type: string
            description: >-
                Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.
        required:
        - schemas
        - id
    Enumcustom-velocity-context-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:custom"
    add-third-party-velocity-context-provider-request:
      allOf:
      - type: object
        properties:
          providerName:
            description: Name of the new Velocity Context Provider
            type: string
        required:
        - providerName
      - $ref: '#/components/schemas/third-party-velocity-context-provider-shared'
    third-party-velocity-context-provider-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Velocity Context Provider
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-velocity-context-provider-shared'
    third-party-velocity-context-provider-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-velocity-context-providerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Velocity Context Provider.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Velocity Context Provider. Each configuration property should be given in the form 'name=value'.
        enabled:
          type: boolean
          description: >-
              Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.
        objectScope:
          $ref: '#/components/schemas/Enumvelocity-context-provider-objectScopeProp'
        includedView:
          type: array
          items:
            type: string
          description: >-
              The name of a view for which this Velocity Context Provider will contribute content.
        excludedView:
          type: array
          items:
            type: string
          description: >-
              The name of a view for which this Velocity Context Provider will not contribute content.
        httpMethod:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of HTTP methods handled by this Velocity Context Provider, which will perform actions necessary to fulfill the request before updating the context for the response. The values of this property are not case-sensitive.
        responseHeader:
          type: array
          items:
            type: string
          description: >-
              Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.
      required:
      - schemas
      - extensionClass
    Enumthird-party-velocity-context-providerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:velocity-context-provider:third-party"
    add-velocity-template-loader-request:
      allOf:
      - type: object
        properties:
          loaderName:
            description: Name of the new Velocity Template Loader
            type: string
        required:
        - loaderName
      - $ref: '#/components/schemas/velocity-template-loader-shared'
    velocity-template-loader-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Velocity Template Loader
            type: string
        required:
        - id
      - $ref: '#/components/schemas/velocity-template-loader-shared'
      required:
      - evaluationOrderIndex
    velocity-template-loader-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvelocity-template-loaderSchemaUrn'
        enabled:
          type: boolean
          description: >-
              Indicates whether this Velocity Template Loader is enabled.
        evaluationOrderIndex:
          type: integer
          description: >-
              This property determines the evaluation order for determining the correct Velocity Template Loader to load a template for generating content for a particular request.
        mimeTypeMatcher:
          type: string
          description: >-
              Specifies a media type for matching Accept request-header values.
        mimeType:
          type: string
          description: >-
              Specifies a the value that will be used in the response's Content-Type header that indicates the type of content to return.
        templateSuffix:
          type: string
          description: >-
              Specifies the suffix to append to the requested resource name when searching for the template file with which to form a response.
        templateDirectory:
          type: string
          description: >-
              Specifies the directory in which to search for the template files.
      required:
      - mimeTypeMatcher
    Enumvelocity-template-loaderSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:velocity-template-loader"
    Enumhttp-servlet-extension-debugTypeProp:
      type: string
      enum:
      - "coding-error"
      - "exception"
      - "other"
      description: >-
          The types of debug messages that should be logged.
    Enumhttp-servlet-extension-allowedAuthenticationTypeProp:
      type: string
      enum:
      - "basic"
      - "access-token"
      - "id-token"
      description: >-
          The types of authentication that may be used to authenticate to the file servlet.
    Enumprometheus-monitor-attribute-metric-metricTypeProp:
      type: string
      enum:
      - "counter"
      - "gauge"
      description: >-
          The metric type that should be used for the value of the specified monitor attribute.
    Enumhttp-servlet-extension-mapAccessTokensToLocalUsersProp:
      type: string
      enum:
      - "disabled"
      - "optional"
      - "required"
      description: >-
          Indicates whether the SCIM2 servlet should attempt to map the presented access token to a local user.
    Enumvelocity-context-provider-objectScopeProp:
      type: string
      enum:
      - "application"
      - "session"
      - "request"
      description: >-
          Scope for context objects contributed by this Velocity Context Provider. Must be either 'request' or 'session' or 'application'.
    Enumhttp-servlet-extension-debugLevelProp:
      type: string
      enum:
      - "severe"
      - "warning"
      - "info"
      - "config"
      - "fine"
      - "finer"
      - "finest"
      description: >-
          The minimum debug level that should be used for messages to be logged.
    Enumhttp-servlet-extension-allowedControlProp:
      type: string
      enum:
      - "assertion"
      - "assured-replication"
      - "exclude-branch"
      - "generate-password"
      - "get-effective-rights"
      - "ignore-no-user-modification"
      - "intermediate-client"
      - "join"
      - "manage-dsa-it"
      - "matched-values"
      - "matching-entry-count"
      - "name-with-entryuuid"
      - "no-op"
      - "operation-purpose"
      - "password-update-behavior"
      - "password-validation-details"
      - "permissive-modify"
      - "permit-unindexed-search"
      - "post-read"
      - "pre-read"
      - "proxied-authorization-v1"
      - "proxied-authorization-v2"
      - "purge-password"
      - "real-attributes-only"
      - "reject-unindexed-search"
      - "retire-password"
      - "suppress-referential-integrity"
      - "uniqueness"
      - "virtual-attributes-only"
      description: >-
          Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.
    add-client-connection-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Client Connection Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/client-connection-policy-shared'
    client-connection-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Client Connection Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/client-connection-policy-shared'
      required:
      - allowedOperation
      - allowedAuthType
    client-connection-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumclient-connection-policySchemaUrn'
        policyID:
          type: string
          description: >-
              Specifies a name which uniquely identifies this Client Connection Policy in the server.
        description:
          type: string
          description: >-
              A description for this Client Connection Policy
        enabled:
          type: boolean
          description: >-
              Indicates whether this Client Connection Policy is enabled for use in the server. If a Client Connection Policy is disabled, then no new client connections will be associated with it.
        evaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which Client Connection Policy definitions will be evaluated. A Client Connection Policy with a lower index will be evaluated before one with a higher index, and the first Client Connection Policy evaluated which may apply to a client connection will be used for that connection. Each Client Connection Policy must be assigned a unique evaluation order index value.
        connectionCriteria:
          type: string
          description: >-
              Specifies a set of connection criteria that must match the associated client connection for it to be associated with this Client Connection Policy.
        terminateConnection:
          type: boolean
          description: >-
              Indicates whether any client connection for which this Client Connection Policy is selected should be terminated. This makes it possible to define fine-grained criteria for clients that should not be allowed to connect to this Directory Server.
        sensitiveAttribute:
          type: array
          items:
            type: string
          description: >-
              Provides the ability to indicate that some attributes should be considered sensitive and additional protection should be in place when interacting with those attributes.
        excludeGlobalSensitiveAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of global sensitive attribute definitions that should not apply to this client connection policy.
        resultCodeMap:
          type: string
          description: >-
              Specifies the result code map that should be used for clients associated with this Client Connection Policy. If a value is defined for this property, then it will override any result code map referenced in the global configuration.
        includedBackendBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of backend base DNs for which subtree views should be included in this Client Connection Policy.
        excludedBackendBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of backend base DNs for which subtree views should be excluded from this Client Connection Policy.
        allowedOperation:
          type: array
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedOperationProp'
        requiredOperationRequestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that will be required to match all requests submitted by clients associated with this Client Connection Policy. If a client submits a request that does not satisfy this request criteria object, then that request will be rejected.
        prohibitedOperationRequestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that must not match any requests submitted by clients associated with this Client Connection Policy. If a client submits a request that satisfies this request criteria object, then that request will be rejected.
        allowedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OIDs of the controls that clients associated with this Client Connection Policy will be allowed to include in requests.
        deniedRequestControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OIDs of the controls that clients associated with this Client Connection Policy will not be allowed to include in requests.
        allowedExtendedOperation:
          type: array
          items:
            type: string
          description: >-
              Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will be allowed to request.
        deniedExtendedOperation:
          type: array
          items:
            type: string
          description: >-
              Specifies the OIDs of the extended operations that clients associated with this Client Connection Policy will not be allowed to request.
        allowedAuthType:
          type: array
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedAuthTypeProp'
        allowedSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will be allowed to request.
        deniedSASLMechanism:
          type: array
          items:
            type: string
          description: >-
              Specifies the names of the SASL mechanisms that clients associated with this Client Connection Policy will not be allowed to request.
        allowedFilterType:
          type: array
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedFilterTypeProp'
        allowUnindexedSearches:
          type: boolean
          description: >-
              Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend. Note that even if this is false, some clients may be able to request unindexed searches if the allow-unindexed-searches-with-control property has a value of true and the necessary conditions are satisfied.
        allowUnindexedSearchesWithControl:
          type: boolean
          description: >-
              Indicates whether clients will be allowed to request search operations that cannot be efficiently processed using the set of indexes defined in the corresponding backend, as long as the search request also includes the permit unindexed search request control and the requester has the unindexed-search-with-control privilege (or that privilege is disabled in the global configuration).
        minimumSubstringLength:
          type: integer
          description: >-
              Specifies the minimum number of consecutive bytes that must be present in any subInitial, subAny, or subFinal element of a substring filter component (i.e., the minimum number of consecutive bytes between wildcard characters in a substring filter). Any attempt to use a substring search with an element containing fewer than this number of bytes will be rejected.
        maximumConcurrentConnections:
          type: integer
          description: >-
              Specifies the maximum number of client connections which may be associated with this Client Connection Policy at any given time.
        maximumConnectionDuration:
          type: string
          description: >-
              Specifies the maximum length of time that a connection associated with this Client Connection Policy may be established. Any connection which is associated with this Client Connection Policy and has been established for longer than this period of time may be terminated.
        maximumIdleConnectionDuration:
          type: string
          description: >-
              Specifies the maximum length of time that a connection associated with this Client Connection Policy may remain established after the completion of the last operation processed on that connection. Any new operation requested on the connection will reset this timer. Any connection associated with this Client Connection Policy which has been idle for longer than this length of time may be terminated.
        maximumOperationCountPerConnection:
          type: integer
          description: >-
              Specifies the maximum number of operations that may be requested by any client connection associated with this Client Connection Policy. If an attempt is made to process more than this number of operations on a client connection, then that connection will be terminated.
        maximumConcurrentOperationsPerConnection:
          type: integer
          description: >-
              Specifies the maximum number of concurrent operations that can be in progress for any connection. This can help prevent a single client connection from monopolizing server processing resources by sending a large number of concurrent asynchronous requests. A value of zero indicates that no limit will be placed on the number of concurrent requests for a single client.
        maximumConcurrentOperationWaitTimeBeforeRejecting:
          type: string
          description: >-
              Specifies the maximum length of time that the server should wait for an outstanding operation to complete before rejecting a new request received when the maximum number of outstanding operations are already in progress on that connection. If an existing outstanding operation on the connection completes before this time, then the operation will be processed. Otherwise, the operation will be rejected with a "busy" result.
        maximumConcurrentOperationsPerConnectionExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-maximumConcurrentOperationsPerConnectionExceededBehaviorProp'
        maximumConnectionOperationRate:
          type: array
          items:
            type: string
          description: >-
              Specifies the maximum rate at which a client associated with this Client Connection Policy may issue requests to the Directory Server. If any client attempts to request operations at a rate higher than this limit, then the server will exhibit the behavior described in the connection-operation-rate-exceeded-behavior property.
        connectionOperationRateExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-connectionOperationRateExceededBehaviorProp'
        maximumPolicyOperationRate:
          type: array
          items:
            type: string
          description: >-
              Specifies the maximum rate at which all clients associated with this Client Connection Policy, as a collective set, may issue requests to the Directory Server. If this limit is exceeded, then the server will exhibit the behavior described in the policy-operation-rate-exceeded-behavior property.
        policyOperationRateExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-policyOperationRateExceededBehaviorProp'
        maximumSearchSizeLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that may be returned for a search performed by a client associated with this Client Connection Policy.
        maximumSearchTimeLimit:
          type: string
          description: >-
              Specifies the maximum length of time that the server should spend processing search operations requested by clients associated with this Client Connection Policy.
        maximumSearchLookthroughLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that may be examined by a backend in the course of processing a search requested by clients associated with this Client Connection Policy.
        maximumLDAPJoinSizeLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that may be joined with any single search result entry for a search request performed by a client associated with this Client Connection Policy.
        maximumSortSizeLimitWithoutVLVIndex:
          type: integer
          description: >-
              Specifies the maximum number of entries that the server will attempt to sort without the benefit of a VLV index. A value of zero indicates that no limit should be enforced.
      required:
      - policyID
      - enabled
      - evaluationOrderIndex
    Enumclient-connection-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:client-connection-policy"
    Enumclient-connection-policy-allowedOperationProp:
      type: string
      enum:
      - "abandon"
      - "add"
      - "bind"
      - "compare"
      - "delete"
      - "extended"
      - "modify"
      - "modify-dn"
      - "search"
      description: >-
          Specifies the types of operations that clients associated with this Client Connection Policy will be allowed to request.
    Enumclient-connection-policy-allowedAuthTypeProp:
      type: string
      enum:
      - "simple"
      - "sasl"
      description: >-
          Specifies the types of authentication that clients associated with this Client Connection Policy will be allowed to request.
    Enumclient-connection-policy-maximumConcurrentOperationsPerConnectionExceededBehaviorProp:
      type: string
      enum:
      - "disconnect"
      - "reject-admin-limit-exceeded"
      - "reject-constraint-violation"
      - "reject-busy"
      - "reject-unavailable"
      - "reject-unwilling-to-perform"
      - "reject-other"
      description: >-
          Specifies the behavior that the Directory Server should exhibit if a client attempts to invoke more concurrent operations on a single connection than allowed by the maximum-concurrent-operations-per-connection property.
    Enumclient-connection-policy-policyOperationRateExceededBehaviorProp:
      type: string
      enum:
      - "disconnect"
      - "reject-admin-limit-exceeded"
      - "reject-constraint-violation"
      - "reject-busy"
      - "reject-unavailable"
      - "reject-unwilling-to-perform"
      - "reject-other"
      description: >-
          Specifies the behavior that the Directory Server should exhibit if a client connection attempts to exceed a rate defined in the maximum-policy-operation-rate property. If the configured behavior is one that will reject requested operations, then that behavior will persist until the end of the corresponding interval. The server will resume allowing clients associated with this Client Connection Policy to perform operations when that interval expires, as long as no other operation rate limits have been exceeded.
    Enumclient-connection-policy-connectionOperationRateExceededBehaviorProp:
      type: string
      enum:
      - "disconnect"
      - "reject-admin-limit-exceeded"
      - "reject-constraint-violation"
      - "reject-busy"
      - "reject-unavailable"
      - "reject-unwilling-to-perform"
      - "reject-other"
      description: >-
          Specifies the behavior that the Directory Server should exhibit if a client connection attempts to exceed a rate defined in the maximum-connection-operation-rate property. If the configured behavior is one that will reject requested operations, then that behavior will persist until the end of the corresponding interval. The server will resume allowing that client to perform operations when that interval expires, as long as no other operation rate limits have been exceeded.
    Enumclient-connection-policy-allowedFilterTypeProp:
      type: string
      enum:
      - "and"
      - "or"
      - "not"
      - "equality"
      - "sub-initial"
      - "sub-any"
      - "sub-final"
      - "greater-or-equal"
      - "less-or-equal"
      - "present"
      - "approximate-match"
      - "extensible-match"
      description: >-
          Specifies the types of filter components that may be included in search requests from clients associated with this Client Connection Policy which have a non-baseObject scope.
    ordering-matching-rule-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumordering-matching-ruleSchemaUrn'
          id:
            description: Name of the Matching Rule
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Matching Rule is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumordering-matching-ruleSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:matching-rule:ordering"
    approximate-matching-rule-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumapproximate-matching-ruleSchemaUrn'
          id:
            description: Name of the Matching Rule
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Matching Rule is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumapproximate-matching-ruleSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:matching-rule:approximate"
    equality-matching-rule-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumequality-matching-ruleSchemaUrn'
          id:
            description: Name of the Matching Rule
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Matching Rule is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumequality-matching-ruleSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:matching-rule:equality"
    substring-matching-rule-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsubstring-matching-ruleSchemaUrn'
          id:
            description: Name of the Matching Rule
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Matching Rule is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumsubstring-matching-ruleSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:matching-rule:substring"
    generic-matching-rule-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgeneric-matching-ruleSchemaUrn'
          id:
            description: Name of the Matching Rule
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Matching Rule is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumgeneric-matching-ruleSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:matching-rule:generic"
    add-mirror-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/mirror-virtual-attribute-shared'
    mirror-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/mirror-virtual-attribute-shared'
    mirror-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummirror-virtual-attributeSchemaUrn'
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        sourceAttribute:
          type: string
          description: >-
              Specifies the source attribute containing the values to use for this virtual attribute.
        sourceEntryDNAttribute:
          type: string
          description: >-
              Specifies the attribute containing the DN of another entry from which to obtain the source attribute providing the values for this virtual attribute.
        sourceEntryDNMap:
          type: string
          description: >-
              Specifies a DN map that will be used to identify the entry from which to obtain the source attribute providing the values for this virtual attribute.
        bypassAccessControlForSearches:
          type: boolean
          description: >-
              Indicates whether searches performed by this virtual attribute provider should be exempted from access control restrictions.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - sourceAttribute
      - enabled
      - attributeType
    Enummirror-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:mirror"
    entry-checksum-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumentry-checksum-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          excludeOperationalAttributes:
            type: boolean
            description: >-
                Indicates whether all operational attributes should be excluded from the generated checksum.
          excludedAttribute:
            type: array
            items:
              type: string
            description: >-
                Specifies the attributes that should be excluded from the checksum calculation.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enumentry-checksum-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-checksum"
    member-of-server-group-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummember-of-server-group-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enummember-of-server-group-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member-of-server-group"
    add-constructed-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/constructed-virtual-attribute-shared'
    constructed-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/constructed-virtual-attribute-shared'
    constructed-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconstructed-virtual-attributeSchemaUrn'
        valuePattern:
          type: array
          items:
            type: string
          description: >-
              Specifies a pattern for constructing the virtual attribute value using fixed text and attribute values from the entry.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - valuePattern
      - enabled
      - attributeType
    Enumconstructed-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:constructed"
    add-is-member-of-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-shared'
    is-member-of-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-shared'
      required:
      - attributeType
    is-member-of-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumis-member-of-virtual-attributeSchemaUrn'
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        directMembershipsOnly:
          type: boolean
          description: >-
              Specifies whether to only include groups in which the user is directly associated with and the membership maybe modified via the group entry. Groups in which the user's membership is derived dynamically or through nested groups will not be included.
        includedGroupFilter:
          type: string
          description: >-
              A search filter that will be used to identify which groups should be included in the values of the virtual attribute. With no value defined (which is the default behavior), all groups that contain the target user will be included.
        rewriteSearchFilters:
          $ref: '#/components/schemas/Enumvirtual-attribute-rewriteSearchFiltersProp'
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - enabled
    Enumis-member-of-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:is-member-of"
    custom-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcustom-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - enabled
        - attributeType
        - id
    Enumcustom-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:custom"
    num-subordinates-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumnum-subordinates-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enumnum-subordinates-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:num-subordinates"
    add-reverse-dn-join-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-shared'
    reverse-dn-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-shared'
    reverse-dn-join-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreverse-dn-join-virtual-attributeSchemaUrn'
        joinDNAttribute:
          type: string
          description: >-
              The attribute in related entries whose set of values must contain the DN of the search result entry to be joined with that entry.
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          type: string
          description: >-
              The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          type: integer
          description: >-
              The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
        joinFilter:
          type: string
          description: >-
              An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
        joinAttribute:
          type: array
          items:
            type: string
          description: >-
              An optional set of the names of the attributes to include with joined entries.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - joinDNAttribute
      - joinBaseDNType
      - enabled
      - attributeType
    Enumreverse-dn-join-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:reverse-dn-join"
    add-identify-references-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/identify-references-virtual-attribute-shared'
    identify-references-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/identify-references-virtual-attribute-shared'
    identify-references-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumidentify-references-virtual-attributeSchemaUrn'
        referencedByAttribute:
          type: array
          items:
            type: string
          description: >-
              The name or OID of an attribute type whose values will be searched for references to the target entry. The attribute type must be defined in the server schema, must have a syntax of either "distinguished name" or "name and optional UID", and must be indexed for equality.
        referenceSearchBaseDN:
          type: array
          items:
            type: string
          description: >-
              The base DN that will be used when searching for references to the target entry. If no reference search base DN is specified, the default behavior will be to search below all public naming contexts configured in the server.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - referencedByAttribute
      - enabled
      - attributeType
    Enumidentify-references-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:identify-references"
    add-user-defined-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/user-defined-virtual-attribute-shared'
    user-defined-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/user-defined-virtual-attribute-shared'
    user-defined-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumuser-defined-virtual-attributeSchemaUrn'
        value:
          type: array
          items:
            type: string
          description: >-
              Specifies the values to be included in the virtual attribute.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - value
      - enabled
      - attributeType
    Enumuser-defined-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:user-defined"
    current-time-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcurrent-time-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          returnUtcTime:
            type: boolean
            description: >-
                Indicates whether to return current time in UTC.
          includeMilliseconds:
            type: boolean
            description: >-
                Indicates whether the current time includes millisecond precision.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enumcurrent-time-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:current-time"
    short-unique-id-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumshort-unique-id-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          sequenceNumberAttribute:
            type: string
            description: >-
                Specifies the name or OID of the attribute which contains the sequence number from which unique identifiers are generated. The attribute should have Integer syntax or a String syntax permitting integer values. If this property is modified then the filter property should be updated accordingly so that only entries containing the sequence number attribute are eligible to have a value generated for this virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - sequenceNumberAttribute
        - enabled
        - attributeType
        - id
    Enumshort-unique-id-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:short-unique-id"
    add-entry-dn-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-shared'
    entry-dn-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-shared'
      required:
      - attributeType
    entry-dn-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumentry-dn-virtual-attributeSchemaUrn'
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - enabled
    Enumentry-dn-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-dn"
    has-subordinates-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhas-subordinates-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enumhas-subordinates-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:has-subordinates"
    add-equality-join-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/equality-join-virtual-attribute-shared'
    equality-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/equality-join-virtual-attribute-shared'
    equality-join-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumequality-join-virtual-attributeSchemaUrn'
        joinSourceAttribute:
          type: string
          description: >-
              The attribute containing the value(s) in the source entry to use to identify related entries.
        joinTargetAttribute:
          type: string
          description: >-
              The attribute in target entries whose value(s) match values of the source attribute in the source entry.
        joinMatchAll:
          type: boolean
          description: >-
              Indicates whether joined entries will be required to have all values for the source attribute, or only at least one of its values.
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          type: string
          description: >-
              The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          type: integer
          description: >-
              The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
        joinFilter:
          type: string
          description: >-
              An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
        joinAttribute:
          type: array
          items:
            type: string
          description: >-
              An optional set of the names of the attributes to include with joined entries.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - joinSourceAttribute
      - joinTargetAttribute
      - joinBaseDNType
      - enabled
      - attributeType
    Enumequality-join-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:equality-join"
    add-groovy-scripted-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-shared'
    groovy-scripted-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-shared'
    groovy-scripted-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-virtual-attributeSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Virtual Attribute.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Virtual Attribute. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - scriptClass
      - enabled
      - attributeType
    Enumgroovy-scripted-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:groovy-scripted"
    instance-name-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enuminstance-name-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enuminstance-name-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:instance-name"
    replication-state-detail-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumreplication-state-detail-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        required:
        - schemas
        - enabled
        - id
    Enumreplication-state-detail-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:replication-state-detail"
    add-member-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/member-virtual-attribute-shared'
    member-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/member-virtual-attribute-shared'
      required:
      - allowRetrievingMembership
    member-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummember-virtual-attributeSchemaUrn'
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        allowRetrievingMembership:
          type: boolean
          description: >-
              Indicates whether to handle requests that request all values for the virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
      required:
      - schemas
      - enabled
      - attributeType
    Enummember-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member"
    add-password-policy-state-json-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-shared'
    password-policy-state-json-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-shared'
    password-policy-state-json-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpassword-policy-state-json-virtual-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
      required:
      - schemas
      - enabled
    Enumpassword-policy-state-json-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:password-policy-state-json"
    subschema-subentry-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsubschema-subentry-virtual-attributeSchemaUrn'
          id:
            description: Name of the Virtual Attribute
            type: string
          conflictBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
          attributeType:
            type: string
            description: >-
                Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
          description:
            type: string
            description: >-
                A description for this Virtual Attribute
          enabled:
            type: boolean
            description: >-
                Indicates whether the Virtual Attribute is enabled for use.
          baseDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
          groupDN:
            type: array
            items:
              type: string
            description: >-
                Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
          filter:
            type: array
            items:
              type: string
            description: >-
                Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
          clientConnectionPolicy:
            type: array
            items:
              type: string
            description: >-
                Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
          requireExplicitRequestByName:
            type: boolean
            description: >-
                Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
          multipleVirtualAttributeEvaluationOrderIndex:
            type: integer
            description: >-
                Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
          multipleVirtualAttributeMergeBehavior:
            $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
          allowIndexConflicts:
            type: boolean
            description: >-
                Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
        required:
        - schemas
        - attributeType
        - enabled
        - id
    Enumsubschema-subentry-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:subschema-subentry"
    add-dn-join-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/dn-join-virtual-attribute-shared'
    dn-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/dn-join-virtual-attribute-shared'
    dn-join-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdn-join-virtual-attributeSchemaUrn'
        joinDNAttribute:
          type: string
          description: >-
              The attribute whose values are the DNs of the entries to be joined with the search result entry.
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          type: string
          description: >-
              The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          type: integer
          description: >-
              The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
        joinFilter:
          type: string
          description: >-
              An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
        joinAttribute:
          type: array
          items:
            type: string
          description: >-
              An optional set of the names of the attributes to include with joined entries.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - joinDNAttribute
      - joinBaseDNType
      - enabled
      - attributeType
    Enumdn-join-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:dn-join"
    add-third-party-virtual-attribute-request:
      allOf:
      - type: object
        properties:
          name:
            description: Name of the new Virtual Attribute
            type: string
        required:
        - name
      - $ref: '#/components/schemas/third-party-virtual-attribute-shared'
    third-party-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Virtual Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-virtual-attribute-shared'
    third-party-virtual-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-virtual-attributeSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Virtual Attribute.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Virtual Attribute. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Virtual Attribute
        enabled:
          type: boolean
          description: >-
              Indicates whether the Virtual Attribute is enabled for use.
        attributeType:
          type: string
          description: >-
              Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
        baseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
        groupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
        filter:
          type: array
          items:
            type: string
          description: >-
              Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
        clientConnectionPolicy:
          type: array
          items:
            type: string
          description: >-
              Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          type: boolean
          description: >-
              Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
        multipleVirtualAttributeEvaluationOrderIndex:
          type: integer
          description: >-
              Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          type: boolean
          description: >-
              Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
      required:
      - schemas
      - extensionClass
      - enabled
      - attributeType
    Enumthird-party-virtual-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:virtual-attribute:third-party"
    Enumvirtual-attribute-joinScopeProp:
      type: string
      enum:
      - "base-object"
      - "single-level"
      - "whole-subtree"
      - "subordinate-subtree"
      description: >-
          The scope for searches used to identify joined entries.
    Enumvirtual-attribute-rewriteSearchFiltersProp:
      type: string
      enum:
      - "always"
      - "within-group-scope"
      - "never"
      description: >-
          Search filters that include Is Member Of Virtual Attribute searches on dynamic groups can be updated to include the dynamic group filter in the search filter itself. This can allow the backend to more efficiently process the search filter by using attribute indexes sooner in the search processing.
    Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp:
      type: string
      enum:
      - "use-first-definition"
      - "use-only-definitions-with-the-lowest-evaluation-order-index"
      - "use-all-definitions"
      description: >-
          Specifies the behavior that will be exhibited for cases in which multiple virtual attribute definitions apply to the same multivalued attribute type. This will be ignored for single-valued attribute types.
    Enumvirtual-attribute-conflictBehaviorProp:
      type: string
      enum:
      - "real-overrides-virtual"
      - "virtual-overrides-real"
      - "merge-real-and-virtual"
      description: >-
          Specifies the behavior that the server is to exhibit for entries that already contain one or more real values for the associated attribute.
    Enumvirtual-attribute-joinBaseDNTypeProp:
      type: string
      enum:
      - "use-search-base-dn"
      - "use-source-entry-dn"
      - "use-custom-base-dn"
      description: >-
          Specifies how server should determine the base DN for the internal searches used to identify joined entries.
    add-third-party-notification-manager-request:
      allOf:
      - type: object
        properties:
          managerName:
            description: Name of the new Notification Manager
            type: string
        required:
        - managerName
      - $ref: '#/components/schemas/third-party-notification-manager-shared'
    third-party-notification-manager-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Notification Manager
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-notification-manager-shared'
      required:
      - transactionNotification
    third-party-notification-manager-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-notification-managerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Notification Manager.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Notification Manager. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Notification Manager
        enabled:
          type: boolean
          description: >-
              Indicates whether this Notification Manager is enabled within the server.
        subscriptionBaseDN:
          type: string
          description: >-
              Specifies the DN of the entry below which subscription data is stored for this Notification Manager. This needs to be in the backend that has the data to be notified on, and must not be the same entry as the backend base DN. The subscription base DN entry does not need to exist as it will be created by the server.
        transactionNotification:
          $ref: '#/components/schemas/Enumnotification-manager-transactionNotificationProp'
        monitorEntriesEnabled:
          type: boolean
          description: >-
              Enables monitor entries for this Notification Manager.
      required:
      - extensionClass
      - enabled
      - subscriptionBaseDN
    Enumthird-party-notification-managerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:notification-manager:third-party"
    Enumnotification-manager-transactionNotificationProp:
      type: string
      enum:
      - "individual"
      - "matched-operations"
      - "all-operations"
      description: >-
          Specifies how the operations in an external transaction (e.g. a multi-update extended operation or an LDAP transaction) are notified for this Notification Manager.
    add-simple-result-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Result Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/simple-result-criteria-shared'
    simple-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Result Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/simple-result-criteria-shared'
    simple-result-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsimple-result-criteriaSchemaUrn'
        requestCriteria:
          type: string
          description: >-
              Specifies a request criteria object that must match the associated request for operations included in this Simple Result Criteria.
        resultCodeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-resultCodeCriteriaProp'
        resultCodeValue:
          type: array
          items:
            $ref: '#/components/schemas/Enumresult-criteria-resultCodeValueProp'
        processingTimeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-processingTimeCriteriaProp'
        processingTimeValue:
          type: string
          description: >-
              Specifies the boundary value to use for the operation processing time when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the "processing-time-criteria" property has a value of "any".
        queueTimeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-queueTimeCriteriaProp'
        queueTimeValue:
          type: string
          description: >-
              Specifies the boundary value to use for the time an operation spent on the work queue when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the "queue-time-criteria" property has a value of "any".
        referralReturned:
          $ref: '#/components/schemas/Enumresult-criteria-referralReturnedProp'
        allIncludedResponseControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain all of those controls.
        anyIncludedResponseControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that may be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain at least one of those controls.
        notAllIncludedResponseControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that should not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain at least one of those controls (that is, the response may contain zero or more of those controls, but not all of them).
        noneIncludedResponseControl:
          type: array
          items:
            type: string
          description: >-
              Specifies the OID of a control that must not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain any of those controls.
        usedAlternateAuthzid:
          $ref: '#/components/schemas/Enumresult-criteria-usedAlternateAuthzidProp'
        usedAnyPrivilege:
          $ref: '#/components/schemas/Enumresult-criteria-usedAnyPrivilegeProp'
        usedPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumresult-criteria-usedPrivilegeProp'
        missingAnyPrivilege:
          $ref: '#/components/schemas/Enumresult-criteria-missingAnyPrivilegeProp'
        missingPrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumresult-criteria-missingPrivilegeProp'
        retiredPasswordUsedForBind:
          $ref: '#/components/schemas/Enumresult-criteria-retiredPasswordUsedForBindProp'
        searchEntryReturnedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchEntryReturnedCriteriaProp'
        searchEntryReturnedCount:
          type: integer
          description: >-
              Specifies the target number of entries returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the "search-entry-criteria" property has a value of "any".
        searchReferenceReturnedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchReferenceReturnedCriteriaProp'
        searchReferenceReturnedCount:
          type: integer
          description: >-
              Specifies the target number of references returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the "search-reference-criteria" property has a value of "any".
        searchIndexedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchIndexedCriteriaProp'
        includedAuthzUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authorization user entries may exist for operations included in this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        excludedAuthzUserBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies a base DN below which authorization user entries may exist for operations excluded from this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        allIncludedAuthzUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authorization users must exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of all of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        anyIncludedAuthzUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authorization users may exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of at least one of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        notAllIncludedAuthzUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authorization users should not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        noneIncludedAuthzUserGroupDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DN of a group in which authorization users must not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member any of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
        description:
          type: string
          description: >-
              A description for this Result Criteria
      required:
      - schemas
    Enumsimple-result-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-criteria:simple"
    add-aggregate-result-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Result Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/aggregate-result-criteria-shared'
    aggregate-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Result Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-result-criteria-shared'
    aggregate-result-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-result-criteriaSchemaUrn'
        allIncludedResultCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a result criteria object that must match the associated operation result in order to match the aggregate result criteria. If one or more all-included result criteria objects are provided, then an operation result must match all of them in order to match the aggregate result criteria.
        anyIncludedResultCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a result criteria object that may match the associated operation result in order to match the aggregate result criteria. If one or more any-included result criteria objects are provided, then an operation result must match at least one of them in order to match the aggregate result criteria.
        notAllIncludedResultCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a result criteria object that should not match the associated operation result in order to match the aggregate result criteria. If one or more not-all-included result criteria objects are provided, then an operation result must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate result criteria.
        noneIncludedResultCriteria:
          type: array
          items:
            type: string
          description: >-
              Specifies a result criteria object that must not match the associated operation result in order to match the aggregate result criteria. If one or more none-included result criteria objects are provided, then an operation result must not match any of them in order to match the aggregate result criteria.
        description:
          type: string
          description: >-
              A description for this Result Criteria
      required:
      - schemas
    Enumaggregate-result-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-criteria:aggregate"
    add-replication-assurance-result-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Result Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/replication-assurance-result-criteria-shared'
    replication-assurance-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Result Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/replication-assurance-result-criteria-shared'
      required:
      - localAssuranceLevel
      - remoteAssuranceLevel
    replication-assurance-result-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumreplication-assurance-result-criteriaSchemaUrn'
        localAssuranceLevel:
          type: array
          items:
            $ref: '#/components/schemas/Enumresult-criteria-localAssuranceLevelProp'
        remoteAssuranceLevel:
          type: array
          items:
            $ref: '#/components/schemas/Enumresult-criteria-remoteAssuranceLevelProp'
        assuranceTimeoutCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceTimeoutCriteriaProp'
        assuranceTimeoutValue:
          type: string
          description: >-
              The value to use for performing matching based on the assurance timeout. This will be ignored if the assurance-timeout-criteria is "any".
        responseDelayedByAssurance:
          $ref: '#/components/schemas/Enumresult-criteria-responseDelayedByAssuranceProp'
        assuranceBehaviorAlteredByControl:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceBehaviorAlteredByControlProp'
        assuranceSatisfied:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceSatisfiedProp'
        description:
          type: string
          description: >-
              A description for this Result Criteria
      required:
      - schemas
    Enumreplication-assurance-result-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-criteria:replication-assurance"
    add-third-party-result-criteria-request:
      allOf:
      - type: object
        properties:
          criteriaName:
            description: Name of the new Result Criteria
            type: string
        required:
        - criteriaName
      - $ref: '#/components/schemas/third-party-result-criteria-shared'
    third-party-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Result Criteria
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-result-criteria-shared'
    third-party-result-criteria-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-result-criteriaSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Result Criteria.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Result Criteria. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Result Criteria
      required:
      - schemas
      - extensionClass
    Enumthird-party-result-criteriaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:result-criteria:third-party"
    Enumresult-criteria-resultCodeValueProp:
      type: string
      enum:
      - "success"
      - "operations-error"
      - "protocol-error"
      - "time-limit-exceeded"
      - "size-limit-exceeded"
      - "compare-false"
      - "compare-true"
      - "auth-method-not-supported"
      - "strong-auth-required"
      - "referral"
      - "admin-limit-exceeded"
      - "unavailable-critical-extension"
      - "confidentiality-required"
      - "sasl-bind-in-progress"
      - "no-such-attribute"
      - "undefined-attribute-type"
      - "inappropriate-matching"
      - "constraint-violation"
      - "attribute-or-value-exists"
      - "invalid-attribute-syntax"
      - "no-such-object"
      - "alias-problem"
      - "invalid-dn-syntax"
      - "alias-dereferencing-problem"
      - "inappropriate-authentication"
      - "invalid-credentials"
      - "insufficient-access-rights"
      - "busy"
      - "unavailable"
      - "unwilling-to-perform"
      - "loop-detect"
      - "sort-control-missing"
      - "offset-range-error"
      - "naming-violation"
      - "objectclass-violation"
      - "not-allowed-on-nonleaf"
      - "not-allowed-on-rdn"
      - "entry-already-exists"
      - "objectclass-mods-prohibited"
      - "affects-multiple-dsas"
      - "virtual-list-view-error"
      - "other"
      - "canceled"
      - "no-such-operation"
      - "too-late"
      - "cannot-cancel"
      - "assertion-failed"
      - "authorization-denied"
      - "no-operation"
      - "interactive-transaction-aborted"
      - "database-lock-conflict"
      - "mirrored-subtree-digest-mismatch"
      - "token-delivery-mechanism-unavailable"
      - "token-delivery-attempt-failed"
      - "token-delivery-invalid-recipient-id"
      - "token-delivery-invalid-account-state"
      description: >-
          Specifies the operation result code values for results included in this Simple Result Criteria. This will only be taken into account if the "result-code-criteria" property has a value of "selected-result-codes".
    Enumresult-criteria-referralReturnedProp:
      type: string
      enum:
      - "required"
      - "prohibited"
      - "optional"
      description: >-
          Indicates whether operation results which include one or more referral URLs should be included in this Simple Result Criteria. If no value is provided, then whether an operation includes any referral URLs will not be considered when determining whether it matches this Simple Result Criteria.
    Enumresult-criteria-missingAnyPrivilegeProp:
      type: string
      enum:
      - "required"
      - "prohibited"
      - "optional"
      description: >-
          Indicates whether operations in which one or more privileges were missing should be included in this Simple Result Criteria. If no value is provided, then whether there were any missing privileges will not be considered when determining whether an operation matches this Simple Result Criteria.
    Enumresult-criteria-searchReferenceReturnedCriteriaProp:
      type: string
      enum:
      - "any"
      - "equal-to"
      - "not-equal-to"
      - "less-than-or-equal-to"
      - "greater-than-or-equal-to"
      description: >-
          Indicates whether the number of references returned should be considered when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search.
    Enumresult-criteria-queueTimeCriteriaProp:
      type: string
      enum:
      - "any"
      - "less-than-or-equal-to"
      - "greater-than-or-equal-to"
      description: >-
          Indicates whether the time the operation was required to wait on the work queue should be taken into consideration when determining whether to include the operation in this Simple Result Criteria. If the queue time should be taken into account, then the "queue-time-value" property should contain the boundary value. This property should only be given a value other than "any" if the work queue has been configured to monitor the time operations have spent on the work queue.
    Enumresult-criteria-usedAlternateAuthzidProp:
      type: string
      enum:
      - "required"
      - "prohibited"
      - "optional"
      description: >-
          Indicates whether operation results in which the associated operation used an authorization identity that is different from the authentication identity (e.g., as the result of using a proxied authorization control) should be included in this Simple Result Criteria. If no value is provided, then whether an operation used an alternate authorization identity will not be considered when determining whether it matches this Simple Result Criteria.
    Enumresult-criteria-searchIndexedCriteriaProp:
      type: string
      enum:
      - "any"
      - "indexed"
      - "unindexed"
      description: >-
          Indicates whether a search operation should be matched by this Simple Result Criteria based on whether it is considered indexed by the server. This will be ignored for all operations other than search.
    Enumresult-criteria-assuranceTimeoutCriteriaProp:
      type: string
      enum:
      - "any"
      - "less-than-or-equal-to"
      - "greater-than-or-equal-to"
      description: >-
          The criteria to use when performing matching based on the assurance timeout.
    Enumresult-criteria-resultCodeCriteriaProp:
      type: string
      enum:
      - "all-result-codes"
      - "non-failure-result-codes"
      - "failure-result-codes"
      - "selected-result-codes"
      description: >-
          Specifies which operation result codes are allowed for operations included in this Simple Result Criteria.
    Enumresult-criteria-missingPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must have been missing during the processing for operations included in this Simple Result Criteria. If any privilege names are provided, then the associated operation must have been missing at least one of those privileges. If no privilege names were provided, then the set of privileges missing will not be considered when determining whether an operation should be included in this Simple Result Criteria.
    Enumresult-criteria-responseDelayedByAssuranceProp:
      type: string
      enum:
      - "any"
      - "true"
      - "false"
      description: >-
          Indicates whether this Replication Assurance Result Criteria should match operations based on whether the response to the client was delayed by assurance processing.
    Enumresult-criteria-usedAnyPrivilegeProp:
      type: string
      enum:
      - "required"
      - "prohibited"
      - "optional"
      description: >-
          Indicates whether operations in which one or more privileges were used should be included in this Simple Result Criteria. If no value is provided, then whether an operation used any privileges will not be considered when determining whether it matches this Simple Result Criteria.
    Enumresult-criteria-remoteAssuranceLevelProp:
      type: string
      enum:
      - "none"
      - "received-any-remote-location"
      - "received-all-remote-locations"
      - "processed-all-remote-servers"
      description: >-
          The local assurance level values that will be allowed to match this Replication Assurance Result Criteria.
    Enumresult-criteria-retiredPasswordUsedForBindProp:
      type: string
      enum:
      - "any"
      - "retired-password-used"
      - "retired-password-not-used"
      description: >-
          Indicates whether the use of a retired password for authentication should be considered when determining whether a bind operation should be included in this Simple Result Criteria. This will be ignored for all operations other than bind.
    Enumresult-criteria-searchEntryReturnedCriteriaProp:
      type: string
      enum:
      - "any"
      - "equal-to"
      - "not-equal-to"
      - "less-than-or-equal-to"
      - "greater-than-or-equal-to"
      description: >-
          Indicates whether the number of entries returned should be considered when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search.
    Enumresult-criteria-assuranceSatisfiedProp:
      type: string
      enum:
      - "any"
      - "both-satisfied"
      - "either-satisfied"
      - "at-least-local-satisfied"
      - "at-least-remote-satisfied"
      - "only-local-satisfied"
      - "only-remote-satisfied"
      - "either-not-satisfied"
      - "at-least-local-not-satisfied"
      - "at-least-remote-not-satisfied"
      - "neither-satisfied"
      description: >-
          Indicates whether this Replication Assurance Result Criteria should match operations based on whether the assurance requirements have been satisfied.
    Enumresult-criteria-assuranceBehaviorAlteredByControlProp:
      type: string
      enum:
      - "any"
      - "true"
      - "false"
      description: >-
          Indicates whether this Replication Assurance Result Criteria should match operations based on whether the assurance requirements were altered by a control included in the request from the client.
    Enumresult-criteria-processingTimeCriteriaProp:
      type: string
      enum:
      - "any"
      - "less-than-or-equal-to"
      - "greater-than-or-equal-to"
      description: >-
          Indicates whether the time required to process the operation should be taken into consideration when determining whether to include the operation in this Simple Result Criteria. If the processing time should be taken into account, then the "processing-time-value" property should contain the boundary value.
    Enumresult-criteria-usedPrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "use-admin-session"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          Specifies the name of a privilege that must have been used during the processing for operations included in this Simple Result Criteria. If any privilege names are provided, then the associated operation must have used at least one of those privileges. If no privilege names were provided, then the set of privileges used will not be considered when determining whether an operation should be included in this Simple Result Criteria.
    Enumresult-criteria-localAssuranceLevelProp:
      type: string
      enum:
      - "none"
      - "received-any-server"
      - "processed-all-servers"
      description: >-
          The local assurance level values that will be allowed to match this Replication Assurance Result Criteria.
    add-exact-match-identity-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Identity Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/exact-match-identity-mapper-shared'
    exact-match-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Identity Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/exact-match-identity-mapper-shared'
      required:
      - matchAttribute
    exact-match-identity-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexact-match-identity-mapperSchemaUrn'
        matchAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attribute whose value should exactly match the ID string provided to this identity mapper.
        matchBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the set of base DNs below which to search for users.
        matchFilter:
          type: string
          description: >-
              An optional filter that mapped users must match.
        description:
          type: string
          description: >-
              A description for this Identity Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Identity Mapper is enabled for use.
      required:
      - schemas
      - enabled
    Enumexact-match-identity-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:exact-match"
    add-groovy-scripted-identity-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Identity Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/groovy-scripted-identity-mapper-shared'
    groovy-scripted-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Identity Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-identity-mapper-shared'
    groovy-scripted-identity-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-identity-mapperSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Identity Mapper.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted Identity Mapper. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Identity Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Identity Mapper is enabled for use.
      required:
      - schemas
      - scriptClass
      - enabled
    Enumgroovy-scripted-identity-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:groovy-scripted"
    add-regular-expression-identity-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Identity Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/regular-expression-identity-mapper-shared'
    regular-expression-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Identity Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/regular-expression-identity-mapper-shared'
      required:
      - matchAttribute
    regular-expression-identity-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumregular-expression-identity-mapperSchemaUrn'
        matchAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the name or OID of the attribute whose value should match the provided identifier string after it has been processed by the associated regular expression.
        matchBaseDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the base DN(s) that should be used when performing searches to map the provided ID string to a user entry. If multiple values are given, searches are performed below all the specified base DNs.
        matchFilter:
          type: string
          description: >-
              An optional filter that mapped users must match.
        matchPattern:
          type: string
          description: >-
              Specifies the regular expression pattern that is used to identify portions of the ID string that will be replaced.
        replacePattern:
          type: string
          description: >-
              Specifies the replacement pattern that should be used for substrings in the ID string that match the provided regular expression pattern.
        description:
          type: string
          description: >-
              A description for this Identity Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Identity Mapper is enabled for use.
      required:
      - schemas
      - matchPattern
      - enabled
    Enumregular-expression-identity-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:regular-expression"
    add-aggregate-identity-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Identity Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/aggregate-identity-mapper-shared'
    aggregate-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Identity Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aggregate-identity-mapper-shared'
    aggregate-identity-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaggregate-identity-mapperSchemaUrn'
        allIncludedIdentityMapper:
          type: array
          items:
            type: string
          description: >-
              The set of identity mappers that must all match the target entry. Each identity mapper must uniquely match the same target entry. If any of the identity mappers match multiple entries, if any of them match zero entries, or if any of them match different entries, then the mapping will fail.
        anyIncludedIdentityMapper:
          type: array
          items:
            type: string
          description: >-
              The set of identity mappers that will be used to identify the target entry. At least one identity mapper must uniquely match an entry. If multiple identity mappers match entries, then they must all uniquely match the same entry. If none of the identity mappers match any entries, if any of them match multiple entries, or if any of them match different entries, then the mapping will fail.
        description:
          type: string
          description: >-
              A description for this Identity Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Identity Mapper is enabled for use.
      required:
      - schemas
      - enabled
    Enumaggregate-identity-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:aggregate"
    add-third-party-identity-mapper-request:
      allOf:
      - type: object
        properties:
          mapperName:
            description: Name of the new Identity Mapper
            type: string
        required:
        - mapperName
      - $ref: '#/components/schemas/third-party-identity-mapper-shared'
    third-party-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Identity Mapper
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-identity-mapper-shared'
    third-party-identity-mapper-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-identity-mapperSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Identity Mapper.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Identity Mapper. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Identity Mapper
        enabled:
          type: boolean
          description: >-
              Indicates whether the Identity Mapper is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-identity-mapperSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:identity-mapper:third-party"
    add-generate-server-profile-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/generate-server-profile-recurring-task-shared'
    generate-server-profile-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generate-server-profile-recurring-task-shared'
    generate-server-profile-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgenerate-server-profile-recurring-taskSchemaUrn'
        profileDirectory:
          type: string
          description: >-
              The directory in which the generated server profiles will be placed. The files will be named with the pattern "server-profile-{timestamp}.zip", where "{timestamp}" represents the time that the profile was generated.
        includePath:
          type: array
          items:
            type: string
          description: >-
              An optional set of additional paths to files within the instance root that should be included in the generated server profile. All paths must be within the instance root, and relative paths will be relative to the instance root.
        retainPreviousProfileCount:
          type: integer
          description: >-
              The minimum number of previous server profile zip files that should be preserved after a new profile is generated.
        retainPreviousProfileAge:
          type: string
          description: >-
              The minimum age of previous server profile zip files that should be preserved after a new profile is generated.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - profileDirectory
    Enumgenerate-server-profile-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:generate-server-profile"
    add-leave-lockdown-mode-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-shared'
    leave-lockdown-mode-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-shared'
    leave-lockdown-mode-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumleave-lockdown-mode-recurring-taskSchemaUrn'
        reason:
          type: string
          description: >-
              The reason that the server is being taken out of in lockdown mode.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumleave-lockdown-mode-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:leave-lockdown-mode"
    add-backup-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/backup-recurring-task-shared'
    backup-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/backup-recurring-task-shared'
      required:
      - backupDirectory
    backup-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumbackup-recurring-taskSchemaUrn'
        backupDirectory:
          type: string
          description: >-
              The directory in which backup files will be placed. When backing up a single backend, the backup files will be placed directly in this directory. When backing up multiple backends, the backup files for each backend will be placed in a subdirectory whose name is the corresponding backend ID.
        includedBackendID:
          type: array
          items:
            type: string
          description: >-
              The backend IDs of any backends that should be included in the backup.
        excludedBackendID:
          type: array
          items:
            type: string
          description: >-
              The backend IDs of any backends that should be excluded from the backup. All backends that support backups and are not listed will be included.
        compress:
          type: boolean
          description: >-
              Indicates whether to compress the data as it is written into the backup.
        encrypt:
          type: boolean
          description: >-
              Indicates whether to encrypt the data as it is written into the backup.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              The ID of an encryption settings definition to use to obtain the backup encryption key.
        sign:
          type: boolean
          description: >-
              Indicates whether to cryptographically sign backups, which will make it possible to detect whether the backup has been altered since it was created.
        retainPreviousFullBackupCount:
          type: integer
          description: >-
              The minimum number of previous full backups that should be preserved after a new backup completes successfully.
        retainPreviousFullBackupAge:
          type: string
          description: >-
              The minimum age of previous full backups that should be preserved after a new backup completes successfully.
        maxMegabytesPerSecond:
          type: integer
          description: >-
              The maximum rate, in megabytes per second, at which backups should be written.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumbackup-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:backup"
    add-delay-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/delay-recurring-task-shared'
    delay-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delay-recurring-task-shared'
    delay-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelay-recurring-taskSchemaUrn'
        sleepDuration:
          type: string
          description: >-
              The length of time to sleep before the task completes.
        durationToWaitForWorkQueueIdle:
          type: string
          description: >-
              Indicates that task should wait for up to the specified length of time for the work queue to report that all worker threads are idle and there are no pending operations. Note that this primarily monitors operations that use worker threads, which does not include internal operations (for example, those invoked by extensions), and may not include requests from non-LDAP clients (for example, HTTP-based clients).
        ldapURLForSearchExpectedToReturnEntries:
          type: array
          items:
            type: string
          description: >-
              An LDAP URL that provides the criteria for a search request that is expected to return at least one entry. The search will be performed internally, and only the base DN, scope, and filter from the URL will be used; any host, port, or requested attributes included in the URL will be ignored.
        searchInterval:
          type: string
          description: >-
              The length of time the server should sleep between searches performed using the criteria from the ldap-url-for-search-expected-to-return-entries property.
        searchTimeLimit:
          type: string
          description: >-
              The length of time that the server will wait for a response to each internal search performed using the criteria from the ldap-url-for-search-expected-to-return-entries property.
        durationToWaitForSearchToReturnEntries:
          type: string
          description: >-
              The maximum length of time that the server will continue to perform internal searches using the criteria from the ldap-url-for-search-expected-to-return-entries property.
        taskReturnStateIfTimeoutIsEncountered:
          $ref: '#/components/schemas/Enumrecurring-task-taskReturnStateIfTimeoutIsEncounteredProp'
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumdelay-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:delay"
    add-statically-defined-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/statically-defined-recurring-task-shared'
    statically-defined-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/statically-defined-recurring-task-shared'
    statically-defined-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstatically-defined-recurring-taskSchemaUrn'
        taskJavaClass:
          type: string
          description: >-
              The fully-qualified name of the Java class that provides the logic for the task to be invoked.
        taskObjectClass:
          type: array
          items:
            type: string
          description: >-
              The names or OIDs of the object classes to include in the tasks that are scheduled from this Statically Defined Recurring Task. All object classes must be defined in the server schema, and the combination of object classes must be valid for a task entry.
        taskAttributeValue:
          type: array
          items:
            type: string
          description: >-
              The set of attribute values that should be included in the tasks that are scheduled from this Statically Defined Recurring Task. Each value must be in the form {attribute-type}={value}, where {attribute-type} is the name or OID of an attribute type that is defined in the schema and permitted with the configured set of object classes, and {value} is a value to assign to an attribute with that type. A multivalued attribute can be created by providing multiple name-value pairs with the same name and different values.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - taskJavaClass
      - taskObjectClass
    Enumstatically-defined-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:statically-defined"
    add-collect-support-data-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/collect-support-data-recurring-task-shared'
    collect-support-data-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/collect-support-data-recurring-task-shared'
    collect-support-data-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcollect-support-data-recurring-taskSchemaUrn'
        outputDirectory:
          type: string
          description: >-
              The directory in which the support data archive files will be placed. The path must be a directory, and that directory must already exist. Relative paths will be interpreted as relative to the server root.
        encryptionPassphraseFile:
          type: string
          description: >-
              The path to a file that contains the passphrase to encrypt the contents of the support data archive.
        includeExpensiveData:
          type: boolean
          description: >-
              Indicates whether the support data archive should include information that may be expensive to obtain, and that may temporarily affect the server's performance or responsiveness.
        includeReplicationStateDump:
          type: boolean
          description: >-
              Indicates whether the support data archive should include a replication state dump, which may be several megabytes in size.
        includeBinaryFiles:
          type: boolean
          description: >-
              Indicates whether the support data archive should include binary files that may not have otherwise been included. Note that it may not be possible to obscure or redact sensitive information in binary files.
        includeExtensionSource:
          type: boolean
          description: >-
              Indicates whether the support data archive should include the source code (if available) for any third-party extensions that may be installed in the server.
        useSequentialMode:
          type: boolean
          description: >-
              Indicates whether to capture support data information sequentially rather than in parallel. Capturing data in sequential mode may reduce the amount of memory that the tool requires to operate, at the cost of taking longer to run.
        securityLevel:
          $ref: '#/components/schemas/Enumrecurring-task-securityLevelProp'
        jstackCount:
          type: integer
          description: >-
              The number of times to invoke the jstack utility to obtain a stack trace of all threads running in the JVM. A value of zero indicates that the jstack utility should not be invoked.
        reportCount:
          type: integer
          description: >-
              The number of intervals of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat. A value of zero indicates that these kinds of tools should not be used to collect any information.
        reportIntervalSeconds:
          type: integer
          description: >-
              The duration (in seconds) between each interval of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat.
        logDuration:
          type: string
          description: >-
              The maximum age (leading up to the time the collect-support-data tool was invoked) for log content to include in the support data archive.
        logFileHeadCollectionSize:
          type: string
          description: >-
              The amount of data to collect from the beginning of each log file included in the support data archive.
        logFileTailCollectionSize:
          type: string
          description: >-
              The amount of data to collect from the end of each log file included in the support data archive.
        comment:
          type: string
          description: >-
              An optional comment to include in a README file within the support data archive.
        retainPreviousSupportDataArchiveCount:
          type: integer
          description: >-
              The minimum number of previous support data archives that should be preserved after a new archive is generated.
        retainPreviousSupportDataArchiveAge:
          type: string
          description: >-
              The minimum age of previous support data archives that should be preserved after a new archive is generated.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - outputDirectory
    Enumcollect-support-data-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:collect-support-data"
    add-ldif-export-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/ldif-export-recurring-task-shared'
    ldif-export-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/ldif-export-recurring-task-shared'
      required:
      - ldifDirectory
    ldif-export-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumldif-export-recurring-taskSchemaUrn'
        ldifDirectory:
          type: string
          description: >-
              The directory in which LDIF export files will be placed. The directory must already exist.
        backendID:
          type: array
          items:
            type: string
          description: >-
              The backend ID for a backend to be exported.
        excludeBackendID:
          type: array
          items:
            type: string
          description: >-
              The backend ID for a backend to be excluded from the export.
        compress:
          type: boolean
          description: >-
              Indicates whether to compress the LDIF data as it is exported.
        encrypt:
          type: boolean
          description: >-
              Indicates whether to encrypt the LDIF data as it exported.
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              The ID of an encryption settings definition to use to obtain the LDIF export encryption key.
        sign:
          type: boolean
          description: >-
              Indicates whether to cryptographically sign the exported data, which will make it possible to detect whether the LDIF data has been altered since it was exported.
        retainPreviousLDIFExportCount:
          type: integer
          description: >-
              The minimum number of previous LDIF exports that should be preserved after a new export completes successfully.
        retainPreviousLDIFExportAge:
          type: string
          description: >-
              The minimum age of previous LDIF exports that should be preserved after a new export completes successfully.
        maxMegabytesPerSecond:
          type: integer
          description: >-
              The maximum rate, in megabytes per second, at which LDIF exports should be written.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumldif-export-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:ldif-export"
    add-enter-lockdown-mode-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-shared'
    enter-lockdown-mode-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-shared'
    enter-lockdown-mode-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumenter-lockdown-mode-recurring-taskSchemaUrn'
        reason:
          type: string
          description: >-
              The reason that the server is being placed in lockdown mode.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumenter-lockdown-mode-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:enter-lockdown-mode"
    add-audit-data-security-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/audit-data-security-recurring-task-shared'
    audit-data-security-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/audit-data-security-recurring-task-shared'
      required:
      - baseOutputDirectory
    audit-data-security-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaudit-data-security-recurring-taskSchemaUrn'
        baseOutputDirectory:
          type: string
          description: >-
              The base directory below which generated reports will be written. Each invocation of the audit-data-security task will create a new subdirectory below this base directory whose name is a timestamp indicating when the report was generated.
        dataSecurityAuditor:
          type: array
          items:
            type: string
          description: >-
              The set of data security auditors that should be invoked. If no auditors are specified, then all auditors defined in the configuration will be used.
        backend:
          type: array
          items:
            type: string
          description: >-
              The set of backends that should be examined. If no backends are specified, then all backends that support this functionality will be included.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              A filter that will be used to identify entries that may be included in the generated report. If multiple filters are specified, then any entry that matches at least one of the filters will be included. If no filters are specified, then all entries will be included.
        retainPreviousReportCount:
          type: integer
          description: >-
              The minimum number of previous reports that should be preserved after a new report is generated.
        retainPreviousReportAge:
          type: string
          description: >-
              The minimum age of previous reports that should be preserved after a new report completes successfully.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
    Enumaudit-data-security-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:audit-data-security"
    add-exec-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/exec-recurring-task-shared'
    exec-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/exec-recurring-task-shared'
    exec-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexec-recurring-taskSchemaUrn'
        commandPath:
          type: string
          description: >-
              The absolute path to the command to execute. It must be an absolute path, the corresponding file must exist, and it must be listed in the config/exec-command-whitelist.txt file.
        commandArguments:
          type: string
          description: >-
              A string containing the arguments to provide to the command. If the command should be run without arguments, this property should be left undefined. If there should be multiple arguments, then they should be separated with spaces.
        commandOutputFileBaseName:
          type: string
          description: >-
              The path and base name for a file to which the command output (both standard output and standard error) should be written. This may be left undefined if the command output should not be recorded into a file.
        retainPreviousOutputFileCount:
          type: integer
          description: >-
              The minimum number of previous command output files that should be preserved after a new instance of the command is invoked.
        retainPreviousOutputFileAge:
          type: string
          description: >-
              The minimum age of previous command output files that should be preserved after a new instance of the command is invoked.
        logCommandOutput:
          type: boolean
          description: >-
              Indicates whether the command's output (both standard output and standard error) should be recorded in the server's error log.
        taskCompletionStateForNonzeroExitCode:
          $ref: '#/components/schemas/Enumrecurring-task-taskCompletionStateForNonzeroExitCodeProp'
        workingDirectory:
          type: string
          description: >-
              The absolute path to a working directory where the command should be executed. It must be an absolute path and the corresponding directory must exist.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - commandPath
    Enumexec-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:exec"
    add-file-retention-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/file-retention-recurring-task-shared'
    file-retention-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-retention-recurring-task-shared'
    file-retention-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-retention-recurring-taskSchemaUrn'
        targetDirectory:
          type: string
          description: >-
              The path to the directory containing the files to examine. The directory must exist.
        filenamePattern:
          type: string
          description: >-
              A pattern that specifies the names of the files to examine. The pattern may contain zero or more asterisks as wildcards, where each wildcard matches zero or more characters. It may also contain at most one occurrence of the special string "${timestamp}", which will match a timestamp with the format specified using the timestamp-format property. All other characters in the pattern will be treated literally.
        timestampFormat:
          $ref: '#/components/schemas/Enumrecurring-task-timestampFormatProp'
        retainFileCount:
          type: integer
          description: >-
              The minimum number of files matching the pattern that will be retained.
        retainFileAge:
          type: string
          description: >-
              The minimum age of files matching the pattern that will be retained.
        retainAggregateFileSize:
          type: string
          description: >-
              The minimum aggregate size of files that will be retained. The size should be specified as an integer followed by a unit that is one of "b" or "bytes", "kb" or "kilobytes", "mb" or "megabytes", "gb" or "gigabytes", or "tb" or "terabytes". For example, a value of "1 gb" indicates that at least one gigabyte of files should be retained.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - targetDirectory
      - filenamePattern
      - timestampFormat
    Enumfile-retention-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:file-retention"
    add-third-party-recurring-task-request:
      allOf:
      - type: object
        properties:
          taskName:
            description: Name of the new Recurring Task
            type: string
        required:
        - taskName
      - $ref: '#/components/schemas/third-party-recurring-task-shared'
    third-party-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Recurring Task
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-recurring-task-shared'
    third-party-recurring-task-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-recurring-taskSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Recurring Task.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Recurring Task. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Recurring Task
        cancelOnTaskDependencyFailure:
          type: boolean
          description: >-
              Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
        emailOnStart:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnSuccess:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        emailOnFailure:
          type: array
          items:
            type: string
          description: >-
              The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
        alertOnStart:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
        alertOnSuccess:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
        alertOnFailure:
          type: boolean
          description: >-
              Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
      required:
      - schemas
      - extensionClass
    Enumthird-party-recurring-taskSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:recurring-task:third-party"
    Enumrecurring-task-securityLevelProp:
      type: string
      enum:
      - "none"
      - "obscure-secrets"
      - "maximum"
      description: >-
          The security level to use when deciding which information to include in or exclude from the support data archive, and which included data should be obscured or redacted.
    Enumrecurring-task-taskCompletionStateForNonzeroExitCodeProp:
      type: string
      enum:
      - "stopped-by-error"
      - "completed-with-errors"
      - "completed-successfully"
      description: >-
          The final task state that a task instance should have if the task executes the specified command and that command completes with a nonzero exit code, which generally means that the command did not complete successfully.
    Enumrecurring-task-timestampFormatProp:
      type: string
      enum:
      - "generalized-time-utc-with-milliseconds"
      - "generalized-time-utc-with-seconds"
      - "generalized-time-utc-with-minutes"
      - "local-time-with-milliseconds"
      - "local-time-with-seconds"
      - "local-time-with-minutes"
      - "local-date"
      description: >-
          The format to use for the timestamp represented by the "${timestamp}" token in the filename pattern.
    Enumrecurring-task-taskReturnStateIfTimeoutIsEncounteredProp:
      type: string
      enum:
      - "stopped-by-error"
      - "completed-with-errors"
      - "completed-successfully"
      description: >-
          The return state to use if a timeout is encountered while waiting for the server work queue to become idle (if the duration-to-wait-for-work-queue-idle property has a value), or if the time specified by the duration-to-wait-for-search-to-return-entries elapses without the associated search returning any entries.
    add-user-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumuser-rest-resource-typeSchemaUrn'
        passwordAttributeCategory:
          type: string
          description: >-
              Specifies which attribute category the password belongs to.
        passwordDisplayOrderIndex:
          type: integer
          description: >-
              This property determines the display order for the password within its attribute category. Attributes are ordered within their category based on this index from least to greatest.
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumuser-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user"
    add-generic-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/generic-rest-resource-type-shared'
    generic-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generic-rest-resource-type-shared'
    generic-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-rest-resource-typeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumgeneric-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:generic"
    add-group-rest-resource-type-request:
      allOf:
      - type: object
        properties:
          typeName:
            description: Name of the new REST Resource Type
            type: string
        required:
        - typeName
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the REST Resource Type
            type: string
        required:
        - id
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroup-rest-resource-typeSchemaUrn'
        membersColumnName:
          type: string
          description: >-
              Specifies the name of the group member column that will be displayed in the Delegated Admin UI
        nonmembersColumnName:
          type: string
          description: >-
              Specifies the name of the group nonmember column that will be displayed in the Delegated Admin UI
        description:
          type: string
          description: >-
              A description for this REST Resource Type
        enabled:
          type: boolean
          description: >-
              Indicates whether the REST Resource Type is enabled.
        resourceEndpoint:
          type: string
          description: >-
              The HTTP addressable endpoint of this REST Resource Type relative to a REST API base URL. Do not include a leading '/'.
        structuralLDAPObjectclass:
          type: string
          description: >-
              Specifies the LDAP structural object class that should be exposed by this REST Resource Type.
        auxiliaryLDAPObjectclass:
          type: array
          items:
            type: string
          description: >-
              Specifies an auxiliary LDAP object class that should be exposed by this REST Resource Type.
        searchBaseDN:
          type: string
          description: >-
              Specifies the base DN of the branch of the LDAP directory where resources of this type are located.
        includeFilter:
          type: array
          items:
            type: string
          description: >-
              The set of LDAP filters that define the LDAP entries that should be included in this REST Resource Type.
        parentDN:
          type: string
          description: >-
              Specifies the DN of the parent entry for new resources of this type, when a parent resource is not provided by the app. The parent DN must be at or below the search base of this resource type.
        parentResourceType:
          type: string
          description: >-
              Specifies the name of another resource type which may be a parent of new resources of this type. The search base DN of the parent resource type must be at or above the search base DN of this resource type.
        relativeDNFromParentResource:
          type: string
          description: >-
              Specifies a template for a relative DN from the parent resource which identifies the parent entry for a new resource of this type. If this property is not specified then new resources are created immediately below the parent resource or parent DN.
        createRDNAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type to be used as the RDN of new resources.
        postCreateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a new resource is created. The values are only set at creation time. Subsequent modifications to attributes in the constructed attribute value-pattern are not propagated here.
        updateConstructedAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies an attribute whose values are to be constructed when a resource is updated. The constructed values replace any existing values of the attribute.
        displayName:
          type: string
          description: >-
              A human readable display name for this REST Resource Type.
        searchFilterPattern:
          type: string
          description: >-
              Specifies the LDAP filter that should be used when searching for resources matching provided search text. All attribute types in the filter pattern referencing the search text must have a Delegated Admin Attribute definition.
        primaryDisplayAttributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type which is the primary display attribute. This attribute type must be in the search filter pattern and must have a Delegated Admin Attribute definition.
        delegatedAdminSearchSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be returned from a search request.
        delegatedAdminReportSizeLimit:
          type: integer
          description: >-
              The maximum number of resources that may be included in a report.
      required:
      - schemas
      - enabled
      - resourceEndpoint
      - structuralLDAPObjectclass
      - searchBaseDN
    Enumgroup-rest-resource-typeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group"
    add-certificate-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/certificate-delegated-admin-attribute-shared'
    certificate-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/certificate-delegated-admin-attribute-shared'
      required:
      - mutability
      - multiValued
      - displayOrderIndex
    certificate-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcertificate-delegated-admin-attributeSchemaUrn'
        allowedMIMEType:
          type: array
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-certificate-allowedMIMETypeProp'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
    Enumcertificate-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:certificate"
    add-photo-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/photo-delegated-admin-attribute-shared'
    photo-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/photo-delegated-admin-attribute-shared'
      required:
      - mutability
      - multiValued
      - displayOrderIndex
    photo-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumphoto-delegated-admin-attributeSchemaUrn'
        allowedMIMEType:
          type: array
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-photo-allowedMIMETypeProp'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
    Enumphoto-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:photo"
    add-generic-delegated-admin-attribute-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new Delegated Admin Attribute
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/generic-delegated-admin-attribute-shared'
    generic-delegated-admin-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/generic-delegated-admin-attribute-shared'
      required:
      - mutability
      - multiValued
      - includeInSummary
      - displayOrderIndex
    generic-delegated-admin-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-delegated-admin-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute
        attributeType:
          type: string
          description: >-
              Specifies the name or OID of the LDAP attribute type.
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute.
        mutability:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-mutabilityProp'
        multiValued:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute may have multiple values.
        includeInSummary:
          type: boolean
          description: >-
              Indicates whether this Delegated Admin Attribute is to be included in the summary display for a resource.
        attributeCategory:
          type: string
          description: >-
              Specifies which attribute category this attribute belongs to.
        displayOrderIndex:
          type: integer
          description: >-
              This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
        referenceResourceType:
          type: string
          description: >-
              For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
        attributePresentation:
          $ref: '#/components/schemas/Enumdelegated-admin-attribute-attributePresentationProp'
        dateTimeFormat:
          type: string
          description: >-
              Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
      required:
      - schemas
      - attributeType
      - displayName
    Enumgeneric-delegated-admin-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
    add-delegated-admin-correlated-rest-resource-request:
      allOf:
      - type: object
        properties:
          resourceName:
            description: Name of the new Delegated Admin Correlated REST Resource
            type: string
        required:
        - resourceName
      - $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-shared'
    delegated-admin-correlated-rest-resource-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Correlated REST Resource
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delegated-admin-correlated-rest-resource-shared'
    delegated-admin-correlated-rest-resource-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-correlated-rest-resourceSchemaUrn'
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Correlated REST Resource.
        correlatedRESTResource:
          type: string
          description: >-
              The REST Resource Type that will be linked to this REST Resource Type.
        primaryRESTResourceCorrelationAttribute:
          type: string
          description: >-
              The LDAP attribute from the parent REST Resource Type whose value will be used to match objects in the Delegated Admin Correlated REST Resource. This attribute must be writeable when use-secondary-value-for-linking is enabled.
        secondaryRESTResourceCorrelationAttribute:
          type: string
          description: >-
              The LDAP attribute from the Delegated Admin Correlated REST Resource whose value will be matched with the primary-rest-resource-correlation-attribute. This attribute must be writeable when use-secondary-value-for-linking is disabled.
        useSecondaryValueForLinking:
          type: boolean
          description: >-
              Indicates whether links should be created using the secondary correlation attribute value.
      required:
      - displayName
      - correlatedRESTResource
      - primaryRESTResourceCorrelationAttribute
      - secondaryRESTResourceCorrelationAttribute
    Enumdelegated-admin-correlated-rest-resourceSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-correlated-rest-resource"
    Enumdelegated-admin-attribute-certificate-allowedMIMETypeProp:
      type: string
      enum:
      - "cer"
      - "crt"
      - "der"
      - "key"
      - "p7b"
      - "p7c"
      - "p8"
      - "p10"
      - "p12"
      - "pem"
      - "pfx"
      - "spc"
      description: >-
          The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
    Enumdelegated-admin-attribute-mutabilityProp:
      type: string
      enum:
      - "read-only"
      - "read-write"
      description: >-
          Specifies the circumstances under which the values of the attribute can be written.
    Enumdelegated-admin-attribute-photo-allowedMIMETypeProp:
      type: string
      enum:
      - "gif"
      - "jpeg"
      - "jpg"
      - "png"
      description: >-
          The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
    Enumdelegated-admin-attribute-attributePresentationProp:
      type: string
      enum:
      - "default"
      - "custom"
      description: >-
          Indicates how the attribute is presented to the user of the app.
    add-unboundid-ms-chap-v2-sasl-mechanism-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new SASL Mechanism Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-shared'
    unboundid-ms-chap-v2-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SASL Mechanism Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-shared'
    unboundid-ms-chap-v2-sasl-mechanism-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumunboundid-ms-chap-v2-sasl-mechanism-handlerSchemaUrn'
        identityMapper:
          type: string
          description: >-
              The identity mapper that should be used to identify the entry associated with the username provided in the bind request.
        description:
          type: string
          description: >-
              A description for this SASL Mechanism Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the SASL mechanism handler is enabled for use.
      required:
      - schemas
      - identityMapper
      - enabled
    Enumunboundid-ms-chap-v2-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2"
    unboundid-totp-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          identityMapper:
            type: string
            description: >-
                The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization identities contained in the bind request. This will only be used for "u:"-style identities.
          sharedSecretAttributeType:
            type: string
            description: >-
                The name or OID of the attribute that will be used to hold the shared secret key used during TOTP processing.
          timeIntervalDuration:
            type: string
            description: >-
                The duration of the time interval used for TOTP processing.
          adjacentIntervalsToCheck:
            type: integer
            description: >-
                The number of adjacent time intervals (both before and after the current time) that should be checked when performing authentication.
          requireStaticPassword:
            type: boolean
            description: >-
                Indicates whether to require a static password (as might be held in the userPassword attribute, or whatever password attribute is defined in the password policy governing the user) in addition to the one-time password.
          preventTOTPReuse:
            type: boolean
            description: >-
                Indicates whether to prevent clients from re-using TOTP passwords.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
    unboundid-yubikey-otp-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumunboundid-yubikey-otp-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          yubikeyClientID:
            type: string
            description: >-
                The client ID to include in requests to the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
          yubikeyAPIKey:
            type: string
            format: password
            description: >-
                The API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
          yubikeyAPIKeyPassphraseProvider:
            type: string
            description: >-
                The passphrase provider to use to obtain the API key needed to verify signatures generated by the YubiKey validation server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
          yubikeyValidationServerBaseURL:
            type: array
            items:
              type: string
            description: >-
                The base URL of the validation server to use to verify one-time passwords. You should only need to change the value if you wish to use your own validation server instead of using one of the Yubico servers. The server must use the YubiKey Validation Protocol version 2.0.
          httpProxyExternalServer:
            type: string
            description: >-
                A reference to an HTTP proxy server that should be used for requests sent to the YubiKey validation service.
          identityMapper:
            type: string
            description: >-
                The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization identities contained in the bind request. This will only be used for "u:"-style identities.
          requireStaticPassword:
            type: boolean
            description: >-
                Indicates whether a user will be required to provide a static password when authenticating via the UNBOUNDID-YUBIKEY-OTP SASL mechanism.
          keyManagerProvider:
            type: string
            description: >-
                Specifies which key manager provider should be used to obtain a client certificate to present to the validation server when performing HTTPS communication. This may be left undefined if communication will not be secured with HTTPS, or if there is no need to present a client certificate to the validation service.
          trustManagerProvider:
            type: string
            description: >-
                Specifies which trust manager provider should be used to determine whether to trust the certificate presented by the server when performing HTTPS communication. This may be left undefined if HTTPS communication is not needed, or if the validation service presents a certificate that is trusted by the default JVM configuration (which should be the case for the validation servers that Yubico provides, but may not be the case if an alternate validation server is configured).
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - yubikeyValidationServerBaseURL
        - identityMapper
        - enabled
        - id
    Enumunboundid-yubikey-otp-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp"
    external-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumexternal-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          certificateValidationPolicy:
            $ref: '#/components/schemas/Enumsasl-mechanism-handler-certificateValidationPolicyProp'
          certificateAttribute:
            type: string
            description: >-
                Specifies the name of the attribute to hold user certificates.
          certificateMapper:
            type: string
            description: >-
                Specifies the name of the certificate mapper that should be used to match client certificates to user entries.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - certificateValidationPolicy
        - certificateMapper
        - enabled
        - id
    Enumexternal-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external"
    digest-md5-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumdigest-md5-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          realm:
            type: string
            description: >-
                Specifies the realm that is to be used by the server for DIGEST-MD5 authentication.
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the authentication or authorization ID included in the SASL bind request to the corresponding user in the directory.
          serverFqdn:
            type: string
            description: >-
                Specifies the DNS-resolvable fully-qualified domain name for the server that is used when validating the digest-uri parameter during the authentication process.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumdigest-md5-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
    plain-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumplain-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the authentication or authorization ID included in the SASL bind request to the corresponding user in the directory.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumplain-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain"
    add-unboundid-delivered-otp-sasl-mechanism-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new SASL Mechanism Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-shared'
    unboundid-delivered-otp-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SASL Mechanism Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-shared'
      required:
      - otpValidityDuration
    unboundid-delivered-otp-sasl-mechanism-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumunboundid-delivered-otp-sasl-mechanism-handlerSchemaUrn'
        identityMapper:
          type: string
          description: >-
              The identity mapper that should be used to identify the user(s) targeted in the authentication and/or authorization identities contained in the bind request. This will only be used for "u:"-style identities.
        otpValidityDuration:
          type: string
          description: >-
              The maximum length of time that a one-time password value should be considered valid.
        description:
          type: string
          description: >-
              A description for this SASL Mechanism Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the SASL mechanism handler is enabled for use.
      required:
      - schemas
      - identityMapper
      - enabled
    Enumunboundid-delivered-otp-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp"
    unboundid-external-auth-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          identityMapper:
            type: string
            description: >-
                The identity mapper that should be used to identify the user targeted by the authentication ID contained in the bind request. This will only be used for "u:"-style authentication ID values.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
    anonymous-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumanonymous-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumanonymous-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous"
    cram-md5-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumcram-md5-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper used with this SASL mechanism handler to match the authentication ID included in the SASL bind request to the corresponding user in the directory.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumcram-md5-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
    add-oauth-bearer-sasl-mechanism-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new SASL Mechanism Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-shared'
    oauth-bearer-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SASL Mechanism Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-shared'
    oauth-bearer-sasl-mechanism-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumoauth-bearer-sasl-mechanism-handlerSchemaUrn'
        accessTokenValidator:
          type: array
          items:
            type: string
          description: >-
              An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.
        idTokenValidator:
          type: array
          items:
            type: string
          description: >-
              An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.
        requireBothAccessTokenAndIDToken:
          type: boolean
          description: >-
              Indicates whether bind requests will be required to have both an OAuth access token (in the "auth" element of the bind request) and an OpenID Connect ID token (in the "pingidentityidtoken" element of the bind request).
        validateAccessTokenWhenIDTokenIsAlsoProvided:
          $ref: '#/components/schemas/Enumsasl-mechanism-handler-validateAccessTokenWhenIDTokenIsAlsoProvidedProp'
        alternateAuthorizationIdentityMapper:
          type: string
          description: >-
              The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.
        allRequiredScope:
          type: array
          items:
            type: string
          description: >-
              The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
        anyRequiredScope:
          type: array
          items:
            type: string
          description: >-
              The set of OAuth scopes that a token may have to be allowed for authentication.
        serverFqdn:
          type: string
          description: >-
              The fully-qualified name that clients are expected to use when communicating with the server.
        description:
          type: string
          description: >-
              A description for this SASL Mechanism Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the SASL mechanism handler is enabled for use.
      required:
      - schemas
      - enabled
    Enumoauth-bearer-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer"
    unboundid-certificate-plus-password-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumunboundid-certificate-plus-password-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          certificateMapper:
            type: string
            description: >-
                The certificate mapper that will be used to identify the target user based on the certificate that was presented to the server.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - certificateMapper
        - enabled
        - id
    Enumunboundid-certificate-plus-password-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password"
    gssapi-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumgssapi-sasl-mechanism-handlerSchemaUrn'
          id:
            description: Name of the SASL Mechanism Handler
            type: string
          realm:
            type: string
            description: >-
                Specifies the realm to be used for GSSAPI authentication.
          kdcAddress:
            type: string
            description: >-
                Specifies the address of the KDC that is to be used for Kerberos processing.
          keytab:
            type: string
            description: >-
                Specifies the keytab file that should be used for Kerberos processing.
          allowNullServerFqdn:
            type: boolean
            description: >-
                Specifies whether or not to allow a null value for the server-fqdn.
          serverFqdn:
            type: string
            description: >-
                Specifies the DNS-resolvable fully-qualified domain name for the system.
          allowedQualityOfProtection:
            type: array
            items:
              $ref: '#/components/schemas/Enumsasl-mechanism-handler-allowedQualityOfProtectionProp'
          identityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to match the Kerberos principal included in the SASL bind request to the corresponding user in the directory.
          alternateAuthorizationIdentityMapper:
            type: string
            description: >-
                Specifies the name of the identity mapper that is to be used with this SASL mechanism handler to map the alternate authorization identity (if provided, and if different from the Kerberos principal used as the authentication identity) to the corresponding user in the directory. If no value is specified, then the mapper specified in the identity-mapper configuration property will be used.
          kerberosServicePrincipal:
            type: string
            description: >-
                Specifies the Kerberos service principal that the Directory Server will use to identify itself to the KDC.
          gssapiRole:
            $ref: '#/components/schemas/Enumsasl-mechanism-handler-gssapiRoleProp'
          jaasConfigFile:
            type: string
            description: >-
                Specifies the path to a JAAS (Java Authentication and Authorization Service) configuration file that provides the information that the JVM should use for Kerberos processing.
          enableDebug:
            type: boolean
            description: >-
                Indicates whether to enable debugging for the Java GSSAPI provider. Debug information will be written to standard output, which should be captured in the server.out log file.
          description:
            type: string
            description: >-
                A description for this SASL Mechanism Handler
          enabled:
            type: boolean
            description: >-
                Indicates whether the SASL mechanism handler is enabled for use.
        required:
        - schemas
        - identityMapper
        - enabled
        - id
    Enumgssapi-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi"
    add-third-party-sasl-mechanism-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new SASL Mechanism Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-shared'
    third-party-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SASL Mechanism Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-shared'
    third-party-sasl-mechanism-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-sasl-mechanism-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party SASL Mechanism Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party SASL Mechanism Handler. Each configuration property should be given in the form 'name=value'.
        identityMapper:
          type: string
          description: >-
              The identity mapper that may be used to map usernames to user entries. If the custom SASL mechanism involves a username or some other form of authentication and/or authorization identity, then this may be used to map that ID to an entry for that user.
        description:
          type: string
          description: >-
              A description for this SASL Mechanism Handler
        enabled:
          type: boolean
          description: >-
              Indicates whether the SASL mechanism handler is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-sasl-mechanism-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
    Enumsasl-mechanism-handler-certificateValidationPolicyProp:
      type: string
      enum:
      - "always"
      - "ifpresent"
      - "never"
      description: >-
          Indicates whether to attempt to validate the peer certificate against a certificate held in the user's entry.
    Enumsasl-mechanism-handler-allowedQualityOfProtectionProp:
      type: string
      enum:
      - "auth"
      - "auth-int"
      - "auth-conf"
      description: >-
          Specifies the supported quality of protection (QoP) levels that clients will be permitted to request when performing GSSAPI authentication.
    Enumsasl-mechanism-handler-gssapiRoleProp:
      type: string
      enum:
      - "acceptor"
      - "initiator"
      description: >-
          Specifies the role that should be declared for the server in the generated JAAS configuration file.
    Enumsasl-mechanism-handler-validateAccessTokenWhenIDTokenIsAlsoProvidedProp:
      type: string
      enum:
      - "validate-only-the-id-token"
      - "validate-both-tokens-but-only-map-the-id-token"
      - "validate-and-map-both-tokens"
      description: >-
          Indicates whether to validate the OAuth access token in addition to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both types of tokens.
    add-expired-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
    expired-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    expired-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumexpired-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        passwordEvaluationAge:
          type: string
          description: >-
              If set, the auditor will report all users with passwords older than the specified value even if password expiration is not enabled.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumexpired-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:expired-password"
    add-idle-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/idle-account-data-security-auditor-shared'
    idle-account-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/idle-account-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    idle-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumidle-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        idleAccountWarningInterval:
          type: string
          description: >-
              The length of time to use as the warning interval for idle accounts. If the length of time since a user last authenticated is greater than the warning interval but less than the error interval (or if it is greater than the warning interval and no error interval is defined), then a warning will be generated for that account.
        idleAccountErrorInterval:
          type: string
          description: >-
              The length of time to use as the error interval for idle accounts. If the length of time since a user last authenticated is greater than the error interval, then an error will be generated for that account. If no error interval is defined, then only the warning interval will be used.
        neverLoggedInAccountWarningInterval:
          type: string
          description: >-
              The length of time to use as the warning interval for accounts that do not appear to have authenticated. If this is not specified, then the idle account warning interval will be used.
        neverLoggedInAccountErrorInterval:
          type: string
          description: >-
              The length of time to use as the error interval for accounts that do not appear to have authenticated. If this is not specified, then the never-logged-in warning interval will be used. The idle account warning and error intervals will be used if no never-logged-in interval is configured.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - idleAccountWarningInterval
    Enumidle-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:idle-account"
    add-disabled-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
    disabled-account-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    disabled-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdisabled-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumdisabled-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:disabled-account"
    add-weakly-encoded-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
    weakly-encoded-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
      required:
      - reportFile
      - weakPasswordStorageScheme
      - enabled
    weakly-encoded-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumweakly-encoded-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        weakPasswordStorageScheme:
          type: array
          items:
            type: string
          description: >-
              The password storage schemes that are considered weak. Users with any of the specified password storage schemes will be included in the report.
        weakCryptEncoding:
          type: array
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-weakCryptEncodingProp'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumweakly-encoded-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:weakly-encoded-password"
    add-privilege-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
    privilege-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    privilege-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumprivilege-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includePrivilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-includePrivilegeProp'
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumprivilege-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:privilege"
    add-account-usability-issues-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-shared'
    account-usability-issues-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/account-usability-issues-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    account-usability-issues-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccount-usability-issues-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccount-usability-issues-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-usability-issues"
    add-locked-account-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
    locked-account-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    locked-account-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumlocked-account-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        maximumIdleTime:
          type: string
          description: >-
              If set, users that have not authenticated for more than the specified time will be reported even if idle account lockout is not configured. Note that users may only be reported if the last login time tracking is enabled.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumlocked-account-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:locked-account"
    add-filter-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/filter-data-security-auditor-shared'
    filter-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/filter-data-security-auditor-shared'
      required:
      - enabled
    filter-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfilter-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        filter:
          type: array
          items:
            type: string
          description: >-
              The filter to use to identify entries that should be reported. Multiple filters may be configured, and each reported entry will indicate which of these filter(s) matched that entry.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - reportFile
      - filter
    Enumfilter-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:filter"
    add-account-validity-window-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/account-validity-window-data-security-auditor-shared'
    account-validity-window-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/account-validity-window-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    account-validity-window-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccount-validity-window-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        accountExpirationWarningInterval:
          type: string
          description: >-
              If set, the auditor will report all users with account expiration times are in the future, but are within the specified length of time away from the current time.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccount-validity-window-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:account-validity-window"
    add-multiple-password-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
    multiple-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    multiple-password-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummultiple-password-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enummultiple-password-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:multiple-password"
    add-deprecated-password-storage-scheme-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-shared'
    deprecated-password-storage-scheme-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/deprecated-password-storage-scheme-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    deprecated-password-storage-scheme-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdeprecated-password-storage-scheme-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumdeprecated-password-storage-scheme-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:deprecated-password-storage-scheme"
    add-nonexistent-password-policy-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-shared'
    nonexistent-password-policy-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/nonexistent-password-policy-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    nonexistent-password-policy-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnonexistent-password-policy-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumnonexistent-password-policy-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:nonexistent-password-policy"
    add-access-control-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
    access-control-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
      required:
      - reportFile
      - enabled
    access-control-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaccess-control-data-security-auditorSchemaUrn'
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
    Enumaccess-control-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:access-control"
    add-third-party-data-security-auditor-request:
      allOf:
      - type: object
        properties:
          auditorName:
            description: Name of the new Data Security Auditor
            type: string
        required:
        - auditorName
      - $ref: '#/components/schemas/third-party-data-security-auditor-shared'
    third-party-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Data Security Auditor
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-data-security-auditor-shared'
      required:
      - enabled
    third-party-data-security-auditor-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-data-security-auditorSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Data Security Auditor.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Data Security Auditor. Each configuration property should be given in the form 'name=value'.
        enabled:
          type: boolean
          description: >-
              Indicates whether the Data Security Auditor is enabled for use.
        reportFile:
          type: string
          description: >-
              Specifies the name of the detailed report file.
        includeAttribute:
          type: array
          items:
            type: string
          description: >-
              Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
        auditBackend:
          type: array
          items:
            type: string
          description: >-
              Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - schemas
      - extensionClass
      - reportFile
    Enumthird-party-data-security-auditorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:third-party"
    Enumdata-security-auditor-auditSeverityProp:
      type: string
      enum:
      - "error"
      - "warning"
      - "notice"
      - "verbose"
      description: >-
          Specifies the severity of events to include in the report.
    Enumdata-security-auditor-includePrivilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "bypass-acl"
      - "bypass-read-acl"
      - "modify-acl"
      - "config-read"
      - "config-write"
      - "jmx-read"
      - "jmx-write"
      - "jmx-notify"
      - "ldif-import"
      - "ldif-export"
      - "backend-backup"
      - "backend-restore"
      - "server-shutdown"
      - "server-restart"
      - "proxied-auth"
      - "disconnect-client"
      - "password-reset"
      - "update-schema"
      - "privilege-change"
      - "unindexed-search"
      - "unindexed-search-with-control"
      - "bypass-pw-policy"
      - "lockdown-mode"
      - "stream-values"
      - "third-party-task"
      - "soft-delete-read"
      - "metrics-read"
      - "remote-log-read"
      - "manage-topology"
      - "permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "permit-forwarding-client-connection-policy"
      - "exec-task"
      - "collect-support-data"
      - "file-servlet-access"
      - "permit-replace-certificate-request"
      description: >-
          If defined, only entries with the specified privileges will be reported. By default, entries with any privilege assigned will be reported.
    Enumdata-security-auditor-weakCryptEncodingProp:
      type: string
      enum:
      - "crypt"
      - "md5"
      - "sha-2-256"
      - "sha-2-512"
      description: >-
          Reporting on users with passwords encoded using the Crypt Password Storage scheme may be further limited by selecting one or more encoding mechanisms that are considered weak.
    add-statsd-monitoring-endpoint-request:
      allOf:
      - type: object
        properties:
          endpointName:
            description: Name of the new Monitoring Endpoint
            type: string
        required:
        - endpointName
      - $ref: '#/components/schemas/statsd-monitoring-endpoint-shared'
    statsd-monitoring-endpoint-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Monitoring Endpoint
            type: string
        required:
        - id
      - $ref: '#/components/schemas/statsd-monitoring-endpoint-shared'
      required:
      - serverPort
      - connectionType
    statsd-monitoring-endpoint-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstatsd-monitoring-endpointSchemaUrn'
        hostname:
          type: string
          description: >-
              The name of the host where this StatsD Monitoring Endpoint should send metric data.
        serverPort:
          type: integer
          description: >-
              Specifies the port number of the endpoint where metric data should be sent.
        connectionType:
          $ref: '#/components/schemas/Enummonitoring-endpoint-connectionTypeProp'
        trustManagerProvider:
          type: string
          description: >-
              The trust manager provider to use if SSL over TCP is to be used for connection-level security.
        additionalTags:
          type: array
          items:
            type: string
          description: >-
              Specifies any optional additional tags to include in StatsD messages. Any additional tags will be appended to the end of each StatsD message, separated by commas. Tags should be written in a [key]:[value] format ("host:server1", for example).
        enabled:
          type: boolean
          description: >-
              Indicates whether this Monitoring Endpoint is enabled for use in the Directory Server.
      required:
      - hostname
      - enabled
    Enumstatsd-monitoring-endpointSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:monitoring-endpoint:statsd"
    Enummonitoring-endpoint-connectionTypeProp:
      type: string
      enum:
      - "unencrypted-udp"
      - "unencrypted-tcp"
      - "ssl-over-tcp"
      description: >-
          Specifies the protocol and security that this StatsD Monitoring Endpoint should use to connect to the configured endpoint.
    salted-sha256-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha256-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumsalted-sha256-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
    add-argon2d-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/argon2d-password-storage-scheme-shared'
    argon2d-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/argon2d-password-storage-scheme-shared'
    argon2d-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2d-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2d-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
    add-crypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
    crypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
    crypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcrypt-password-storage-schemeSchemaUrn'
        passwordEncodingMechanism:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-passwordEncodingMechanismProp'
        numDigestRounds:
          type: integer
          description: >-
              Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumcrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
    add-argon2i-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/argon2i-password-storage-scheme-shared'
    argon2i-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/argon2i-password-storage-scheme-shared'
    argon2i-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2i-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2i-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
    base64-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbase64-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Base64 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumbase64-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
    salted-md5-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-md5-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Salted MD5 Password Storage Scheme is enabled for use.
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumsalted-md5-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
    aes-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumaes-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumaes-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
    add-argon2id-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/argon2id-password-storage-scheme-shared'
    argon2id-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/argon2id-password-storage-scheme-shared'
    argon2id-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2id-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2id-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
    add-vault-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
    vault-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
    vault-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-password-storage-schemeSchemaUrn'
        vaultExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
        defaultField:
          type: string
          description: >-
              The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - vaultExternalServer
      - enabled
    Enumvault-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
    add-third-party-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
    third-party-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
    third-party-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-password-storage-schemeSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
    add-argon2-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
    argon2-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
    argon2-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
    add-third-party-enhanced-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
    third-party-enhanced-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
    third-party-enhanced-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-enhanced-password-storage-schemeSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Enhanced Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Enhanced Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-enhanced-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
    add-pbkdf2-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
    pbkdf2-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
      required:
      - iterationCount
      - saltLengthBytes
      - derivedKeyLengthBytes
    pbkdf2-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpbkdf2-password-storage-schemeSchemaUrn'
        digestAlgorithm:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-digestAlgorithmProp'
        iterationCount:
          type: integer
          description: >-
              Specifies the number of iterations to use when encoding passwords. The value must be greater than or equal to 1000.
        saltLengthBytes:
          type: integer
          description: >-
              Specifies the number of bytes to use for the generated salt. The value must be greater than or equal to 8.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              Specifies the number of bytes to use for the derived key. The value must be greater than or equal to 8.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumpbkdf2-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
    rc4-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumrc4-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the RC4 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumrc4-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
    salted-sha384-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha384-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumsalted-sha384-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
    triple-des-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtriple-des-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Triple DES Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumtriple-des-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
    clear-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumclear-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Clear Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumclear-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
    add-aes-256-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
    aes-256-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
    aes-256-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaes-256-password-storage-schemeSchemaUrn'
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumaes-256-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
    add-bcrypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
    bcrypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
    bcrypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumbcrypt-password-storage-schemeSchemaUrn'
        bcryptCostFactor:
          type: integer
          description: >-
              Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumbcrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
    blowfish-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumblowfish-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumblowfish-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
    sha1-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsha1-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the SHA1 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumsha1-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
    add-amazon-secrets-manager-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
    amazon-secrets-manager-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
    amazon-secrets-manager-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-password-storage-schemeSchemaUrn'
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the AWS Secrets Manager service.
        defaultField:
          type: string
          description: >-
              The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - awsExternalServer
      - enabled
    Enumamazon-secrets-manager-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
    add-azure-key-vault-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
    azure-key-vault-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
    azure-key-vault-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-password-storage-schemeSchemaUrn'
        keyVaultURI:
          type: string
          description: >-
              The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Azure service.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - enabled
    Enumazure-key-vault-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
    add-conjur-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
    conjur-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
    conjur-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-password-storage-schemeSchemaUrn'
        conjurExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - conjurExternalServer
      - enabled
    Enumconjur-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
    salted-sha1-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha1-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the Salted SHA1 Password Storage Scheme is enabled for use.
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enumsalted-sha1-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
    salted-sha512-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha512-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
        required:
        - schemas
        - enabled
        - id
    Enumsalted-sha512-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
    add-scrypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
    scrypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
    scrypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumscrypt-password-storage-schemeSchemaUrn'
        scryptCpuMemoryCostFactorExponent:
          type: integer
          description: >-
              Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.
        scryptBlockSize:
          type: integer
          description: >-
              Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).
        scryptParallelizationParameter:
          type: integer
          description: >-
              Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumscrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
    md5-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummd5-password-storage-schemeSchemaUrn'
          id:
            description: Name of the Password Storage Scheme
            type: string
          enabled:
            type: boolean
            description: >-
                Indicates whether the MD5 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
        required:
        - schemas
        - enabled
        - id
    Enummd5-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
    Enumpassword-storage-scheme-digestAlgorithmProp:
      type: string
      enum:
      - "sha-1"
      - "sha-256"
      - "sha-384"
      - "sha-512"
      description: >-
          Specifies the digest algorithm that will be used when encoding passwords.
    Enumpassword-storage-scheme-passwordEncodingMechanismProp:
      type: string
      enum:
      - "crypt"
      - "md5"
      - "sha-2-256"
      - "sha-2-512"
      description: >-
          Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.
    http-configuration-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumhttp-configurationSchemaUrn'
          includeStackTracesInErrorPages:
            type: boolean
            description: >-
                Indicates whether exceptions thrown by servlet or web application extensions will be included in the resulting error page response. Stack traces can be helpful in diagnosing application errors, but in production they may reveal information that might be useful to a malicious attacker.
    Enumhttp-configurationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-configuration"
    add-json-attribute-constraints-request:
      allOf:
      - type: object
        properties:
          attributeType:
            description: Name of the new JSON Attribute Constraints
            type: string
        required:
        - attributeType
      - $ref: '#/components/schemas/json-attribute-constraints-shared'
    json-attribute-constraints-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the JSON Attribute Constraints
            type: string
        required:
        - id
      - $ref: '#/components/schemas/json-attribute-constraints-shared'
    json-attribute-constraints-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjson-attribute-constraintsSchemaUrn'
        description:
          type: string
          description: >-
              A description for this JSON Attribute Constraints
        enabled:
          type: boolean
          description: >-
              Indicates whether this JSON Attribute Constraints is enabled.
        attributeType:
          type: string
          description: >-
              The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a "JSON object" syntax.
        allowUnnamedFields:
          type: boolean
          description: >-
              Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.
      required:
      - attributeType
    Enumjson-attribute-constraintsSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints"
    add-json-field-constraints-request:
      allOf:
      - type: object
        properties:
          jsonField:
            description: Name of the new JSON Field Constraints
            type: string
        required:
        - jsonField
      - $ref: '#/components/schemas/json-field-constraints-shared'
    json-field-constraints-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the JSON Field Constraints
            type: string
        required:
        - id
      - $ref: '#/components/schemas/json-field-constraints-shared'
    json-field-constraints-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumjson-field-constraintsSchemaUrn'
        description:
          type: string
          description: >-
              A description for this JSON Field Constraints
        jsonField:
          type: string
          description: >-
              The full name of the JSON field to which these constraints apply.
        valueType:
          $ref: '#/components/schemas/Enumjson-field-constraints-valueTypeProp'
        isRequired:
          type: boolean
          description: >-
              Indicates whether the target field must be present in JSON objects stored as values of the associated attribute type.
        isArray:
          $ref: '#/components/schemas/Enumjson-field-constraints-isArrayProp'
        allowNullValue:
          type: boolean
          description: >-
              Indicates whether the target field may have a value that is the JSON null value as an alternative to a value (or array of values) of the specified value-type.
        allowEmptyObject:
          type: boolean
          description: >-
              Indicates whether the target field may have a value that is an empty JSON object (i.e., a JSON object with zero fields). This may only be set to true if value-type property is set to object.
        indexValues:
          type: boolean
          description: >-
              Indicates whether backends that support JSON indexing should maintain an index for values of the target field.
        indexEntryLimit:
          type: integer
          description: >-
              The maximum number of entries that may contain a particular value for the target field before the server will stop maintaining the index for that value.
        primeIndex:
          type: boolean
          description: >-
              Indicates whether backends that support database priming should load the contents of the associated JSON index into memory whenever the backend is opened.
        cacheMode:
          $ref: '#/components/schemas/Enumjson-field-constraints-cacheModeProp'
        tokenizeValues:
          type: boolean
          description: >-
              Indicates whether the backend should attempt to assign a compact token for each distinct value for the target field in an attempt to reduce the encoded size of the field in JSON objects. These tokens would be assigned prior to using any from the token set used for automatic compaction of some JSON string values.
        allowedValue:
          type: array
          items:
            type: string
          description: >-
              Specifies an explicit set of string values that will be the only values permitted for the target field. If a set of allowed values is defined, then the server will reject any attempt to store a JSON object with a value for the target field that is not included in that set.
        allowedValueRegularExpression:
          type: array
          items:
            type: string
          description: >-
              Specifies an explicit set of regular expressions that may be used to restrict the set of values that may be used for the target field. If a set of allowed value regular expressions is defined, then the server will reject any attempt to store a JSON object with a value for the target field that does not match at least one of those regular expressions.
        minimumNumericValue:
          type: string
          description: >-
              Specifies the smallest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is less than that minimum numeric value.
        maximumNumericValue:
          type: string
          description: >-
              Specifies the largest numeric value that may be used as the value for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is greater than that maximum numeric value.
        minimumValueLength:
          type: integer
          description: >-
              Specifies the smallest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is shorter than that minimum value length.
        maximumValueLength:
          type: integer
          description: >-
              Specifies the largest number of characters that may be present in string values of the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is longer than that maximum value length.
        minimumValueCount:
          type: integer
          description: >-
              Specifies the smallest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with fewer than this number of elements.
        maximumValueCount:
          type: integer
          description: >-
              Specifies the largest number of elements that may be present in an array of values for the target field. If configured, then the server will reject any attempt to store a JSON object with a value for the target field that is an array with more than this number of elements.
      required:
      - jsonField
      - valueType
    Enumjson-field-constraintsSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:json-field-constraints"
    Enumjson-field-constraints-valueTypeProp:
      type: string
      enum:
      - "any"
      - "boolean"
      - "integer"
      - "null"
      - "number"
      - "object"
      - "string"
      description: >-
          The data type that will be required for values of the target field.
    Enumjson-field-constraints-cacheModeProp:
      type: string
      enum:
      - "cache-keys-and-values"
      - "cache-keys-only"
      - "no-caching"
      description: >-
          Specifies the behavior that the server should exhibit when caching data for the associated JSON index. This can be useful in environments in which the system does not have enough memory to fully cache the entire data set, as it makes it possible to prioritize which data is the most important to keep in memory.
    Enumjson-field-constraints-isArrayProp:
      type: string
      enum:
      - "required"
      - "optional"
      - "prohibited"
      description: >-
          Indicates whether the value of the target field may be an array of values rather than a single value. If this property is set to "required" or "optional", then the constraints defined for this field will be applied to each element of the array.
    add-http-servlet-cross-origin-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new HTTP Servlet Cross Origin Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/http-servlet-cross-origin-policy-shared'
    http-servlet-cross-origin-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the HTTP Servlet Cross Origin Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/http-servlet-cross-origin-policy-shared'
    http-servlet-cross-origin-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-cross-origin-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this HTTP Servlet Cross Origin Policy
        corsAllowedMethods:
          type: array
          items:
            type: string
          description: >-
              A list of HTTP methods allowed for cross-origin access to resources. i.e. one or more of GET, POST, PUT, DELETE, etc.
        corsAllowedOrigins:
          type: array
          items:
            type: string
          description: >-
              A list of origins that are allowed to execute cross-origin requests.
        corsExposedHeaders:
          type: array
          items:
            type: string
          description: >-
              A list of HTTP headers other than the simple response headers that browsers are allowed to access.
        corsAllowedHeaders:
          type: array
          items:
            type: string
          description: >-
              A list of HTTP headers that are supported by the resource and can be specified in a cross-origin request.
        corsPreflightMaxAge:
          type: string
          description: >-
              The maximum amount of time that a preflight request can be cached by a client.
        corsAllowCredentials:
          type: boolean
          description: >-
              Indicates whether the servlet extension allows CORS requests with username/password credentials.
    Enumhttp-servlet-cross-origin-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:http-servlet-cross-origin-policy"
    add-delegated-admin-attribute-category-request:
      allOf:
      - type: object
        properties:
          displayName:
            description: Name of the new Delegated Admin Attribute Category
            type: string
        required:
        - displayName
      - $ref: '#/components/schemas/delegated-admin-attribute-category-shared'
    delegated-admin-attribute-category-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Delegated Admin Attribute Category
            type: string
        required:
        - id
      - $ref: '#/components/schemas/delegated-admin-attribute-category-shared'
    delegated-admin-attribute-category-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-categorySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Delegated Admin Attribute Category
        displayName:
          type: string
          description: >-
              A human readable display name for this Delegated Admin Attribute Category.
        displayOrderIndex:
          type: integer
          description: >-
              Delegated Admin Attribute Categories are ordered for display based on this index from least to greatest.
      required:
      - displayName
      - displayOrderIndex
    Enumdelegated-admin-attribute-categorySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute-category"
    add-scim-schema-request:
      allOf:
      - type: object
        properties:
          schemaName:
            description: Name of the new SCIM Schema
            type: string
        required:
        - schemaName
      - $ref: '#/components/schemas/scim-schema-shared'
    scim-schema-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SCIM Schema
            type: string
        required:
        - id
      - $ref: '#/components/schemas/scim-schema-shared'
    scim-schema-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumscim-schemaSchemaUrn'
        description:
          type: string
          description: >-
              A description for this SCIM Schema
        schemaURN:
          type: string
          description: >-
              The URN which identifies this SCIM Schema.
        displayName:
          type: string
          description: >-
              The human readable name for this SCIM Schema.
      required:
      - schemaURN
    Enumscim-schemaSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:scim-schema"
    add-scim-attribute-request:
      allOf:
      - type: object
        properties:
          attributeName:
            description: Name of the new SCIM Attribute
            type: string
        required:
        - attributeName
      - $ref: '#/components/schemas/scim-attribute-shared'
    scim-attribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SCIM Attribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/scim-attribute-shared'
      required:
      - type
      - required
      - caseExact
      - multiValued
      - mutability
      - returned
    scim-attribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumscim-attributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this SCIM Attribute
        name:
          type: string
          description: >-
              The name of the attribute.
        type:
          $ref: '#/components/schemas/Enumscim-attribute-typeProp'
        required:
          type: boolean
          description: >-
              Specifies whether this attribute is required.
        caseExact:
          type: boolean
          description: >-
              Specifies whether the attribute values are case sensitive.
        multiValued:
          type: boolean
          description: >-
              Specifies whether this attribute may have multiple values.
        canonicalValue:
          type: array
          items:
            type: string
          description: >-
              Specifies the suggested canonical type values for the attribute.
        mutability:
          $ref: '#/components/schemas/Enumscim-attribute-mutabilityProp'
        returned:
          $ref: '#/components/schemas/Enumscim-attribute-returnedProp'
        referenceType:
          type: array
          items:
            type: string
          description: >-
              Specifies the SCIM resource types that may be referenced. This property is only applicable for attributes that are of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service endpoint or an identifier (such as a schema urn).
      required:
      - name
    Enumscim-attributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:scim-attribute"
    add-scim-subattribute-request:
      allOf:
      - type: object
        properties:
          subattributeName:
            description: Name of the new SCIM Subattribute
            type: string
        required:
        - subattributeName
      - $ref: '#/components/schemas/scim-subattribute-shared'
    scim-subattribute-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the SCIM Subattribute
            type: string
        required:
        - id
      - $ref: '#/components/schemas/scim-subattribute-shared'
      required:
      - type
      - required
      - caseExact
      - multiValued
      - mutability
      - returned
    scim-subattribute-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumscim-subattributeSchemaUrn'
        description:
          type: string
          description: >-
              A description for this SCIM Subattribute
        type:
          $ref: '#/components/schemas/Enumscim-subattribute-typeProp'
        required:
          type: boolean
          description: >-
              Specifies whether this sub-attribute is required.
        caseExact:
          type: boolean
          description: >-
              Specifies whether the sub-attribute values are case sensitive.
        multiValued:
          type: boolean
          description: >-
              Specifies whether this attribute may have multiple values.
        canonicalValue:
          type: array
          items:
            type: string
          description: >-
              Specifies the suggested canonical type values for the sub-attribute.
        mutability:
          $ref: '#/components/schemas/Enumscim-subattribute-mutabilityProp'
        returned:
          $ref: '#/components/schemas/Enumscim-subattribute-returnedProp'
        referenceType:
          type: array
          items:
            type: string
          description: >-
              Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service endpoint or an identifier (such as a schema urn).
    Enumscim-subattributeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:scim-subattribute"
    Enumscim-attribute-typeProp:
      type: string
      enum:
      - "string"
      - "boolean"
      - "datetime"
      - "decimal"
      - "integer"
      - "binary"
      - "reference"
      - "complex"
      description: >-
          Specifies the data type for this attribute.
    Enumscim-attribute-returnedProp:
      type: string
      enum:
      - "by-default"
      - "upon-request"
      - "always"
      - "never"
      description: >-
          Specifies the circumstances under which the values of the attribute are returned in response to a request.
    Enumscim-attribute-mutabilityProp:
      type: string
      enum:
      - "read-only"
      - "read-write"
      - "immutable"
      - "write-only"
      description: >-
          Specifies the circumstances under which the values of the attribute can be written.
    Enumscim-subattribute-mutabilityProp:
      type: string
      enum:
      - "read-only"
      - "read-write"
      - "immutable"
      - "write-only"
      description: >-
          Specifies the circumstances under which the values of the sub-attribute can be written.
    Enumscim-subattribute-typeProp:
      type: string
      enum:
      - "string"
      - "boolean"
      - "datetime"
      - "decimal"
      - "integer"
      - "binary"
      - "reference"
      description: >-
          Specifies the data type for this sub-attribute.
    Enumscim-subattribute-returnedProp:
      type: string
      enum:
      - "by-default"
      - "upon-request"
      - "always"
      - "never"
      description: >-
          Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
    add-location-request:
      allOf:
      - type: object
        properties:
          locationName:
            description: Name of the new Location
            type: string
        required:
        - locationName
      - $ref: '#/components/schemas/location-shared'
    location-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Location
            type: string
        required:
        - id
      - $ref: '#/components/schemas/location-shared'
    location-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumlocationSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Location
    EnumlocationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:location"
    add-time-limit-log-retention-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Retention Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/time-limit-log-retention-policy-shared'
    time-limit-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Retention Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/time-limit-log-retention-policy-shared'
    time-limit-log-retention-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtime-limit-log-retention-policySchemaUrn'
        retainDuration:
          type: string
          description: >-
              Specifies the desired minimum length of time that each log file should be retained.
        description:
          type: string
          description: >-
              A description for this Log Retention Policy
      required:
      - schemas
      - retainDuration
    Enumtime-limit-log-retention-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:time-limit"
    add-never-delete-log-retention-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Retention Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/never-delete-log-retention-policy-shared'
    never-delete-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Retention Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/never-delete-log-retention-policy-shared'
    never-delete-log-retention-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumnever-delete-log-retention-policySchemaUrn'
        description:
          type: string
          description: >-
              A description for this Log Retention Policy
      required:
      - schemas
    Enumnever-delete-log-retention-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:never-delete"
    add-file-count-log-retention-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Retention Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/file-count-log-retention-policy-shared'
    file-count-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Retention Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/file-count-log-retention-policy-shared'
    file-count-log-retention-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfile-count-log-retention-policySchemaUrn'
        numberOfFiles:
          type: integer
          description: >-
              Specifies the number of archived log files to retain before the oldest ones are cleaned.
        description:
          type: string
          description: >-
              A description for this Log Retention Policy
      required:
      - schemas
      - numberOfFiles
    Enumfile-count-log-retention-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:file-count"
    add-free-disk-space-log-retention-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Retention Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/free-disk-space-log-retention-policy-shared'
    free-disk-space-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Retention Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/free-disk-space-log-retention-policy-shared'
    free-disk-space-log-retention-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumfree-disk-space-log-retention-policySchemaUrn'
        freeDiskSpace:
          type: string
          description: >-
              Specifies the minimum amount of free disk space that should be available on the file system on which the archived log files are stored.
        description:
          type: string
          description: >-
              A description for this Log Retention Policy
      required:
      - schemas
      - freeDiskSpace
    Enumfree-disk-space-log-retention-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:free-disk-space"
    add-size-limit-log-retention-policy-request:
      allOf:
      - type: object
        properties:
          policyName:
            description: Name of the new Log Retention Policy
            type: string
        required:
        - policyName
      - $ref: '#/components/schemas/size-limit-log-retention-policy-shared'
    size-limit-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Log Retention Policy
            type: string
        required:
        - id
      - $ref: '#/components/schemas/size-limit-log-retention-policy-shared'
    size-limit-log-retention-policy-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsize-limit-log-retention-policySchemaUrn'
        diskSpaceUsed:
          type: string
          description: >-
              Specifies the maximum total disk space used by the log files.
        description:
          type: string
          description: >-
              A description for this Log Retention Policy
      required:
      - schemas
      - diskSpaceUsed
    Enumsize-limit-log-retention-policySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:log-retention-policy:size-limit"
    add-groovy-scripted-oauth-token-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new OAuth Token Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-shared'
    groovy-scripted-oauth-token-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the OAuth Token Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-shared'
    groovy-scripted-oauth-token-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-oauth-token-handlerSchemaUrn'
        scriptClass:
          type: string
          description: >-
              The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted OAuth Token Handler.
        scriptArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Scripted OAuth Token Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this OAuth Token Handler
      required:
      - schemas
      - scriptClass
    Enumgroovy-scripted-oauth-token-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:groovy-scripted"
    add-third-party-oauth-token-handler-request:
      allOf:
      - type: object
        properties:
          handlerName:
            description: Name of the new OAuth Token Handler
            type: string
        required:
        - handlerName
      - $ref: '#/components/schemas/third-party-oauth-token-handler-shared'
    third-party-oauth-token-handler-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the OAuth Token Handler
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-oauth-token-handler-shared'
    third-party-oauth-token-handler-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-oauth-token-handlerSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party OAuth Token Handler.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party OAuth Token Handler. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this OAuth Token Handler
      required:
      - schemas
      - extensionClass
    Enumthird-party-oauth-token-handlerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:third-party"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
