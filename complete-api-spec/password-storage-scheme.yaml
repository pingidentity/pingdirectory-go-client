openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Password Storage Scheme config object
  title: PingData Password Storage Scheme Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access password-storage-schemes
  name: password-storage-scheme
paths:
  /password-storage-schemes:
    post:
      summary: Add a new Password Storage Scheme to the config
      operationId: add-password-storage-scheme
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-crypt-request'
              - $ref: '#/components/schemas/add-vault-request'
              - $ref: '#/components/schemas/add-third-party-request'
              - $ref: '#/components/schemas/add-argon2-request'
              - $ref: '#/components/schemas/add-third-party-enhanced-request'
              - $ref: '#/components/schemas/add-pbkdf2-request'
              - $ref: '#/components/schemas/add-aes-256-request'
              - $ref: '#/components/schemas/add-bcrypt-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-request'
              - $ref: '#/components/schemas/add-azure-key-vault-request'
              - $ref: '#/components/schemas/add-conjur-request'
              - $ref: '#/components/schemas/add-scrypt-request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/crypt-response'
                - $ref: '#/components/schemas/vault-response'
                - $ref: '#/components/schemas/third-party-response'
                - $ref: '#/components/schemas/argon2-response'
                - $ref: '#/components/schemas/third-party-enhanced-response'
                - $ref: '#/components/schemas/pbkdf2-response'
                - $ref: '#/components/schemas/aes-256-response'
                - $ref: '#/components/schemas/bcrypt-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-response'
                - $ref: '#/components/schemas/azure-key-vault-response'
                - $ref: '#/components/schemas/conjur-response'
                - $ref: '#/components/schemas/scrypt-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Storage Scheme already exists
      security:
      - basicAuth: []
      tags:
      - location
  /password-storage-schemes/{password-storage-scheme-name}:
    delete:
      summary: Delete a Password Storage Scheme
      operationId: delete-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be deleted
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
        "409":
          description: The Password Storage Scheme cannot be deleted
      security:
      - basicAuth: []
      tags:
      - location
    get:
      summary: Returns a single Password Storage Scheme
      operationId: get-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be read
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-response'
                - $ref: '#/components/schemas/crypt-response'
                - $ref: '#/components/schemas/base64-response'
                - $ref: '#/components/schemas/salted-md5-response'
                - $ref: '#/components/schemas/aes-response'
                - $ref: '#/components/schemas/vault-response'
                - $ref: '#/components/schemas/third-party-response'
                - $ref: '#/components/schemas/argon2-response'
                - $ref: '#/components/schemas/third-party-enhanced-response'
                - $ref: '#/components/schemas/pbkdf2-response'
                - $ref: '#/components/schemas/rc4-response'
                - $ref: '#/components/schemas/salted-sha384-response'
                - $ref: '#/components/schemas/triple-des-response'
                - $ref: '#/components/schemas/clear-response'
                - $ref: '#/components/schemas/aes-256-response'
                - $ref: '#/components/schemas/bcrypt-response'
                - $ref: '#/components/schemas/blowfish-response'
                - $ref: '#/components/schemas/sha1-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-response'
                - $ref: '#/components/schemas/azure-key-vault-response'
                - $ref: '#/components/schemas/conjur-response'
                - $ref: '#/components/schemas/salted-sha1-response'
                - $ref: '#/components/schemas/salted-sha512-response'
                - $ref: '#/components/schemas/scrypt-response'
                - $ref: '#/components/schemas/md5-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - location
    patch:
      summary: Update an existing Password Storage Scheme by name
      operationId: update-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be updated
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-password-storage-scheme-request'
        description: Update an existing Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-response'
                - $ref: '#/components/schemas/crypt-response'
                - $ref: '#/components/schemas/base64-response'
                - $ref: '#/components/schemas/salted-md5-response'
                - $ref: '#/components/schemas/aes-response'
                - $ref: '#/components/schemas/vault-response'
                - $ref: '#/components/schemas/third-party-response'
                - $ref: '#/components/schemas/argon2-response'
                - $ref: '#/components/schemas/third-party-enhanced-response'
                - $ref: '#/components/schemas/pbkdf2-response'
                - $ref: '#/components/schemas/rc4-response'
                - $ref: '#/components/schemas/salted-sha384-response'
                - $ref: '#/components/schemas/triple-des-response'
                - $ref: '#/components/schemas/clear-response'
                - $ref: '#/components/schemas/aes-256-response'
                - $ref: '#/components/schemas/bcrypt-response'
                - $ref: '#/components/schemas/blowfish-response'
                - $ref: '#/components/schemas/sha1-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-response'
                - $ref: '#/components/schemas/azure-key-vault-response'
                - $ref: '#/components/schemas/conjur-response'
                - $ref: '#/components/schemas/salted-sha1-response'
                - $ref: '#/components/schemas/salted-sha512-response'
                - $ref: '#/components/schemas/scrypt-response'
                - $ref: '#/components/schemas/md5-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - location
components:
  schemas:
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    salted-sha256-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsalted-sha256SchemaUrn'
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumsalted-sha256SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
    add-crypt-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/crypt-shared'
    crypt-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/crypt-shared'
    crypt-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumcryptSchemaUrn'
        passwordEncodingMechanism:
          $ref: '#/components/schemas/EnumpasswordEncodingMechanismProp'
        numDigestRounds:
          type: integer
          description: Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.
        maxPasswordLength:
          type: integer
          description: Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    EnumcryptSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
    base64-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumbase64SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the Base64 Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumbase64SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
    salted-md5-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsalted-md5SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the Salted MD5 Password Storage Scheme is enabled for use.
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumsalted-md5SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
    aes-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumaesSchemaUrn'
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    EnumaesSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
    add-vault-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/vault-shared'
    vault-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/vault-shared'
    vault-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumvaultSchemaUrn'
        vaultExternalServer:
          type: string
          description: An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
        defaultField:
          type: string
          description: The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - vaultExternalServer
      - enabled
    EnumvaultSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
    add-third-party-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/third-party-shared'
    third-party-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-shared'
    third-party-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-partySchemaUrn'
        extensionClass:
          type: string
          description: The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-partySchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
    add-argon2-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/argon2-shared'
    argon2-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/argon2-shared'
    argon2-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2SchemaUrn'
        iterationCount:
          type: integer
          description: The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
    add-third-party-enhanced-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/third-party-enhanced-shared'
    third-party-enhanced-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/third-party-enhanced-shared'
    third-party-enhanced-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-enhancedSchemaUrn'
        extensionClass:
          type: string
          description: The fully-qualified name of the Java class providing the logic for the Third Party Enhanced Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
            description: The set of arguments used to customize the behavior for the Third Party Enhanced Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-enhancedSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
    add-pbkdf2-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/pbkdf2-shared'
    pbkdf2-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/pbkdf2-shared'
    pbkdf2-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpbkdf2SchemaUrn'
        digestAlgorithm:
          $ref: '#/components/schemas/EnumdigestAlgorithmProp'
        iterationCount:
          type: integer
          description: Specifies the number of iterations to use when encoding passwords. The value must be greater than or equal to 1000.
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt. The value must be greater than or equal to 8.
        derivedKeyLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the derived key. The value must be greater than or equal to 8.
        maxPasswordLength:
          type: integer
          description: Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumpbkdf2SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
    rc4-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumrc4SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the RC4 Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumrc4SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
    salted-sha384-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsalted-sha384SchemaUrn'
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumsalted-sha384SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
    triple-des-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtriple-desSchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the Triple DES Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumtriple-desSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
    clear-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumclearSchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the Clear Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    EnumclearSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
    add-aes-256-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/aes-256-shared'
    aes-256-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/aes-256-shared'
    aes-256-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaes-256SchemaUrn'
        encryptionSettingsDefinitionID:
          type: string
          description: The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumaes-256SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
    add-bcrypt-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/bcrypt-shared'
    bcrypt-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/bcrypt-shared'
    bcrypt-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumbcryptSchemaUrn'
        bcryptCostFactor:
          type: integer
          description: Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    EnumbcryptSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
    blowfish-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumblowfishSchemaUrn'
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    EnumblowfishSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
    sha1-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsha1SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the SHA1 Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumsha1SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
    add-amazon-secrets-manager-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/amazon-secrets-manager-shared'
    amazon-secrets-manager-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/amazon-secrets-manager-shared'
    amazon-secrets-manager-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-managerSchemaUrn'
        awsExternalServer:
          type: string
          description: The external server with information to use when interacting with the AWS Secrets Manager service.
        defaultField:
          type: string
          description: The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - awsExternalServer
      - enabled
    Enumamazon-secrets-managerSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
    add-azure-key-vault-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/azure-key-vault-shared'
    azure-key-vault-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/azure-key-vault-shared'
    azure-key-vault-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vaultSchemaUrn'
        keyVaultURI:
          type: string
          description: The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: The mechanism used to authenticate to the Azure service.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - enabled
    Enumazure-key-vaultSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
    add-conjur-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/conjur-shared'
    conjur-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/conjur-shared'
    conjur-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumconjurSchemaUrn'
        conjurExternalServer:
          type: string
          description: An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - conjurExternalServer
      - enabled
    EnumconjurSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
    salted-sha1-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsalted-sha1SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the Salted SHA1 Password Storage Scheme is enabled for use.
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enumsalted-sha1SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
    salted-sha512-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumsalted-sha512SchemaUrn'
        saltLengthBytes:
          type: integer
          description: Specifies the number of bytes to use for the generated salt.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumsalted-sha512SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
    add-scrypt-request:
      allOf:
      - type: object
        properties:
          schemeName:
            description: Name of the new Password Storage Scheme
            type: string
        required:
        - schemeName
      - $ref: '#/components/schemas/scrypt-shared'
    scrypt-response:
      allOf:
      - type: object
        properties:
          id:
            description: Name of the Password Storage Scheme
            type: string
        required:
        - id
      - $ref: '#/components/schemas/scrypt-shared'
    scrypt-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/EnumscryptSchemaUrn'
        scryptCpuMemoryCostFactorExponent:
          type: integer
          description: Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.
        scryptBlockSize:
          type: integer
          description: Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).
        scryptParallelizationParameter:
          type: integer
          description: Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.
        maxPasswordLength:
          type: integer
          description: Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    EnumscryptSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
    md5-response:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enummd5SchemaUrn'
        enabled:
          type: boolean
          description: Indicates whether the MD5 Password Storage Scheme is enabled for use.
        description:
          type: string
          description: A description for this Password Storage Scheme
      required:
      - schemas
      - enabled
    Enummd5SchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
    update-password-storage-scheme-request:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    EnumpasswordEncodingMechanismProp:
      type: string
      enum:
      - "crypt"
      - "md5"
      - "sha-2-256"
      - "sha-2-512"
      description: Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.
    EnumdigestAlgorithmProp:
      type: string
      enum:
      - "sha-1"
      - "sha-256"
      - "sha-384"
      - "sha-512"
      description: Specifies the digest algorithm that will be used when encoding passwords.
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
