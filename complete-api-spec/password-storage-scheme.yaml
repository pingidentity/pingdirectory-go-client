openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Password Storage Scheme config object
  title: PingData Password Storage Scheme Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-93/pd_ds_use_config_api
tags:
- description: Access password-storage-schemes
  name: password-storage-scheme
paths:
  /password-storage-schemes:
    get:
      summary: Returns a list of all Password Storage Scheme objects
      operationId: list-password-storage-schemes
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-storage-schemeListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
    post:
      summary: Add a new Password Storage Scheme to the config
      operationId: add-password-storage-scheme
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-argon2d-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-crypt-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2i-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2id-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-vault-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-third-party-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-argon2-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-third-party-enhanced-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-pbkdf2-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-aes-256-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-bcrypt-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-amazon-secrets-manager-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-azure-key-vault-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-conjur-password-storage-scheme-request'
              - $ref: '#/components/schemas/add-scrypt-password-storage-scheme-request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Storage Scheme already exists
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
  /password-storage-schemes/{password-storage-scheme-name}:
    delete:
      summary: Delete a Password Storage Scheme
      operationId: delete-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
        "409":
          description: The Password Storage Scheme cannot be deleted
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
    get:
      summary: Returns a single Password Storage Scheme
      operationId: get-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/base64-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
                - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
                - $ref: '#/components/schemas/clear-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
                - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/md5-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
    patch:
      summary: Update an existing Password Storage Scheme by name
      operationId: update-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Storage Scheme
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
                - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
                - $ref: '#/components/schemas/base64-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
                - $ref: '#/components/schemas/vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
                - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
                - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
                - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
                - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
                - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
                - $ref: '#/components/schemas/clear-password-storage-scheme-response'
                - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
                - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
                - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
                - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
                - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
                - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
                - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
                - $ref: '#/components/schemas/md5-password-storage-scheme-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      tags:
      - password-storage-scheme
components:
  schemas:
    salted-sha256-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha256-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsalted-sha256-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256"
    add-argon2d-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/argon2d-password-storage-scheme-shared'
      required:
      - schemeName
    argon2d-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/argon2d-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    argon2d-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2d-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2d-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2d"
    Enumpassword-storage-scheme-passwordEncodingMechanismProp:
      type: string
      enum:
      - "crypt"
      - "md5"
      - "sha-2-256"
      - "sha-2-512"
      description: >-
          Specifies the mechanism that should be used to encode clear-text passwords for use with this scheme.
    add-crypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
      required:
      - schemeName
    crypt-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    crypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumcrypt-password-storage-schemeSchemaUrn'
        passwordEncodingMechanism:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-passwordEncodingMechanismProp'
        numDigestRounds:
          type: integer
          description: >-
              Specifies the number of digest rounds to use for the SHA-2 encodings. This will not be used for the legacy or MD5-based encodings.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumcrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt"
    add-argon2i-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/argon2i-password-storage-scheme-shared'
      required:
      - schemeName
    argon2i-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/argon2i-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    argon2i-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2i-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2i-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2i"
    base64-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumbase64-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Base64 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumbase64-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64"
    salted-md5-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-md5-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Salted MD5 Password Storage Scheme is enabled for use.
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsalted-md5-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5"
    aes-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumaes-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumaes-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes"
    add-argon2id-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/argon2id-password-storage-scheme-shared'
      required:
      - schemeName
    argon2id-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/argon2id-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    argon2id-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2id-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2id-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2id"
    add-vault-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
      required:
      - schemeName
    vault-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    vault-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumvault-password-storage-schemeSchemaUrn'
        vaultExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Vault instance containing the passphrase.
        defaultField:
          type: string
          description: >-
              The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - vaultExternalServer
      - enabled
    Enumvault-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault"
    add-third-party-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
      required:
      - schemeName
    third-party-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    third-party-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-password-storage-schemeSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party"
    add-argon2-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
      required:
      - schemeName
    argon2-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    argon2-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumargon2-password-storage-schemeSchemaUrn'
        iterationCount:
          type: integer
          description: >-
              The number of rounds of cryptographic processing required in the course of encoding each password.
        parallelismFactor:
          type: integer
          description: >-
              The number of concurrent threads that will be used in the course of encoding each password.
        memoryUsageKb:
          type: integer
          description: >-
              The number of kilobytes of memory that must be used in the course of encoding each password.
        saltLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the generated salt.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              The number of bytes to use for the derived key. The value must be greater than or equal to 8 and less than or equal to 512.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - iterationCount
      - parallelismFactor
      - memoryUsageKb
      - saltLengthBytes
      - derivedKeyLengthBytes
      - enabled
    Enumargon2-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2"
    add-third-party-enhanced-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
      required:
      - schemeName
    third-party-enhanced-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    third-party-enhanced-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumthird-party-enhanced-password-storage-schemeSchemaUrn'
        extensionClass:
          type: string
          description: >-
              The fully-qualified name of the Java class providing the logic for the Third Party Enhanced Password Storage Scheme.
        extensionArgument:
          type: array
          items:
            type: string
          description: >-
              The set of arguments used to customize the behavior for the Third Party Enhanced Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - extensionClass
      - enabled
    Enumthird-party-enhanced-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced"
    Enumpassword-storage-scheme-digestAlgorithmProp:
      type: string
      enum:
      - "sha-1"
      - "sha-256"
      - "sha-384"
      - "sha-512"
      description: >-
          Specifies the digest algorithm that will be used when encoding passwords.
    add-pbkdf2-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
      required:
      - schemeName
    pbkdf2-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - iterationCount
      - saltLengthBytes
      - derivedKeyLengthBytes
    pbkdf2-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumpbkdf2-password-storage-schemeSchemaUrn'
        digestAlgorithm:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-digestAlgorithmProp'
        iterationCount:
          type: integer
          description: >-
              Specifies the number of iterations to use when encoding passwords. The value must be greater than or equal to 1000.
        saltLengthBytes:
          type: integer
          description: >-
              Specifies the number of bytes to use for the generated salt. The value must be greater than or equal to 8.
        derivedKeyLengthBytes:
          type: integer
          description: >-
              Specifies the number of bytes to use for the derived key. The value must be greater than or equal to 8.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumpbkdf2-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2"
    rc4-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumrc4-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the RC4 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumrc4-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4"
    salted-sha384-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha384-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsalted-sha384-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384"
    triple-des-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumtriple-des-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Triple DES Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumtriple-des-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des"
    clear-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumclear-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Clear Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumclear-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear"
    add-aes-256-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
      required:
      - schemeName
    aes-256-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    aes-256-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumaes-256-password-storage-schemeSchemaUrn'
        encryptionSettingsDefinitionID:
          type: string
          description: >-
              The identifier for the encryption settings definition that should be used to derive the encryption key to use when encrypting new passwords. If this is not provided, the server's preferred encryption settings definition will be used.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumaes-256-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256"
    add-bcrypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
      required:
      - schemeName
    bcrypt-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    bcrypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumbcrypt-password-storage-schemeSchemaUrn'
        bcryptCostFactor:
          type: integer
          description: >-
              Specifies the cost factor to use when encoding passwords with Bcrypt. A higher cost factor requires more processing to generate a password, which makes attacks against the password more expensive.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumbcrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt"
    blowfish-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumblowfish-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumblowfish-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish"
    sha1-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsha1-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the SHA1 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsha1-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1"
    add-amazon-secrets-manager-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
      required:
      - schemeName
    amazon-secrets-manager-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    amazon-secrets-manager-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-password-storage-schemeSchemaUrn'
        awsExternalServer:
          type: string
          description: >-
              The external server with information to use when interacting with the AWS Secrets Manager service.
        defaultField:
          type: string
          description: >-
              The default name of the field in JSON objects contained in the AWS Secrets Manager service that contains the password for the target user.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - awsExternalServer
      - enabled
    Enumamazon-secrets-manager-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager"
    add-azure-key-vault-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
      required:
      - schemeName
    azure-key-vault-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    azure-key-vault-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-password-storage-schemeSchemaUrn'
        keyVaultURI:
          type: string
          description: >-
              The URI that identifies the Azure Key Vault from which the secret is to be retrieved.
        azureAuthenticationMethod:
          type: string
          description: >-
              The mechanism used to authenticate to the Azure service.
        httpProxyExternalServer:
          type: string
          description: >-
              A reference to an HTTP proxy server that should be used for requests sent to the Azure service.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - keyVaultURI
      - azureAuthenticationMethod
      - enabled
    Enumazure-key-vault-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault"
    add-conjur-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
      required:
      - schemeName
    conjur-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    conjur-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumconjur-password-storage-schemeSchemaUrn'
        conjurExternalServer:
          type: string
          description: >-
              An external server definition with information needed to connect and authenticate to the Conjur instance containing user passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - conjurExternalServer
      - enabled
    Enumconjur-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur"
    salted-sha1-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha1-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Salted SHA1 Password Storage Scheme is enabled for use.
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsalted-sha1-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1"
    salted-sha512-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumsalted-sha512-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          saltLengthBytes:
            type: integer
            description: >-
                Specifies the number of bytes to use for the generated salt.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the Password Storage Scheme is enabled for use.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enumsalted-sha512-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512"
    add-scrypt-password-storage-scheme-request:
      allOf:
      - type: object
        properties:
          schemeName:
            type: string
            description: >-
                Name of the new Password Storage Scheme
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
      required:
      - schemeName
    scrypt-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    scrypt-password-storage-scheme-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumscrypt-password-storage-schemeSchemaUrn'
        scryptCpuMemoryCostFactorExponent:
          type: integer
          description: >-
              Specifies the exponent that should be used for the CPU/memory cost factor. The cost factor must be a power of two, so the value of this property represents the power to which two is raised. The CPU/memory cost factor specifies the number of iterations required for encoding the password, and also affects the amount of memory required during processing. A higher cost factor requires more processing and more memory to generate a password, which makes attacks against the password more expensive.
        scryptBlockSize:
          type: integer
          description: >-
              Specifies the block size for the digest that will be used in the course of encoding passwords. Increasing the block size while keeping the CPU/memory cost factor constant will increase the amount of memory required to encode a password, but it also increases the ratio of sequential memory access to random memory access (and sequential memory access is generally faster than random memory access).
        scryptParallelizationParameter:
          type: integer
          description: >-
              Specifies the number of times that scrypt has to perform the entire encoding process to produce the final result.
        maxPasswordLength:
          type: integer
          description: >-
              Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
        description:
          type: string
          description: >-
              A description for this Password Storage Scheme
        enabled:
          type: boolean
          description: >-
              Indicates whether the Password Storage Scheme is enabled for use.
      required:
      - schemas
      - enabled
    Enumscrypt-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt"
    md5-password-storage-scheme-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enummd5-password-storage-schemeSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Password Storage Scheme
          enabled:
            type: boolean
            description: >-
                Indicates whether the MD5 Password Storage Scheme is enabled for use.
          description:
            type: string
            description: >-
                A description for this Password Storage Scheme
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - enabled
    Enummd5-password-storage-schemeSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5"
    password-storage-schemeListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
            - $ref: '#/components/schemas/argon2d-password-storage-scheme-response'
            - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
            - $ref: '#/components/schemas/argon2i-password-storage-scheme-response'
            - $ref: '#/components/schemas/base64-password-storage-scheme-response'
            - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
            - $ref: '#/components/schemas/aes-password-storage-scheme-response'
            - $ref: '#/components/schemas/argon2id-password-storage-scheme-response'
            - $ref: '#/components/schemas/vault-password-storage-scheme-response'
            - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
            - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
            - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
            - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
            - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
            - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
            - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
            - $ref: '#/components/schemas/clear-password-storage-scheme-response'
            - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
            - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
            - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
            - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
            - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
            - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
            - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
            - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
            - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
            - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
            - $ref: '#/components/schemas/md5-password-storage-scheme-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
