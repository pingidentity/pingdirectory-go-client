openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Topology Admin User config object
  title: PingData Topology Admin User Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
tags:
- description: Access topology-admin-users
  name: topology-admin-user
paths:
  /topology-admin-users:
    post:
      summary: Add a new Topology Admin User to the config
      operationId: add-topology-admin-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-topology-admin-user-request'
        description: Create a new Topology Admin User in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Topology Admin User already exists
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
  /topology-admin-users/{topology-admin-user-name}:
    delete:
      summary: Delete a Topology Admin User
      operationId: delete-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
        "409":
          description: The Topology Admin User cannot be deleted
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
    get:
      summary: Returns a single Topology Admin User
      operationId: get-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
    patch:
      summary: Update an existing Topology Admin User by name
      operationId: update-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Topology Admin User
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      tags:
      - topology-admin-user
components:
  schemas:
    add-topology-admin-user-request:
      allOf:
      - type: object
        properties:
          userName:
            description: Name of the new Topology Admin User
            type: string
        required:
        - userName
      - $ref: '#/components/schemas/topology-admin-user-shared'
    topology-admin-user-response:
      allOf:
      - $ref: '#/components/schemas/meta'
      - type: object
        properties:
          id:
            description: Name of the Topology Admin User
            type: string
        required:
        - id
      - $ref: '#/components/schemas/topology-admin-user-shared'
    topology-admin-user-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumtopology-admin-userSchemaUrn'
        alternateBindDN:
          type: array
          items:
            type: string
          description: >-
              Specifies one or more alternate DNs that can be used to bind to the server as this User.
        description:
          type: string
          description: >-
              A description for this User.
        password:
          type: string
          format: password
          description: >-
              Specifies the user's password. This is stored in the userPassword LDAP attribute. To set a pre-hashed value, the account making the change must have the bypass-pw-policy privilege.
        firstName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's first name. This is stored in the givenName LDAP attribute.
        lastName:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's last name. This is stored in the sn LDAP attribute.
        userID:
          type: string
          description: >-
              Specifies the user's user ID. This is stored in the uid LDAP attribute.
        emailAddress:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's email address. This is stored in the mail LDAP attribute.
        workTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's work telephone number. This is stored in the telephoneNumber LDAP attribute.
        homeTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's home telephone number. This is stored in the homePhone LDAP attribute.
        mobileTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's mobile telephone number. This is stored in the mobile LDAP attribute.
        pagerTelephoneNumber:
          type: array
          items:
            type: string
          description: >-
              Specifies the user's pager telephone number. This is stored in the pager LDAP attribute.
        inheritDefaultRootPrivileges:
          type: boolean
          description: >-
              Indicates whether this User should be automatically granted the set of privileges defined in the default-root-privilege-name property of the Root DN configuration object.
        privilege:
          type: array
          items:
            $ref: '#/components/schemas/Enumtopology-admin-user-privilegeProp'
        searchResultEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of entries that the server may return to the user in response to any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-size-limit LDAP attribute.
        timeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that the server may spend processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-time-limit LDAP attribute.
        lookThroughEntryLimit:
          type: integer
          description: >-
              Specifies the maximum number of candidate entries that the server may examine in the course of processing any single search request. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-lookthrough-limit LDAP attribute.
        idleTimeLimitSeconds:
          type: integer
          description: >-
              Specifies the maximum length of time (in seconds) that a connection authenticated as this user may remain established without issuing any requests. A value of 0 indicates no limit should be enforced. This is stored in the ds-rlim-idle-time-limit LDAP attribute.
        passwordPolicy:
          type: string
          description: >-
              Specifies the password policy for the user. This is stored in the ds-pwp-password-policy-dn LDAP attribute.
        disabled:
          type: boolean
          description: >-
              Specifies whether the root user account should be disabled. A disabled account is not permitted to authenticate, nor can it be used as an authorization identity. This is stored in the ds-pwp-account-disabled LDAP attribute.
        accountActivationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20160101070000Z'), that the root user account should become active. If an activation time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, until the activation time has arrived. This is stored in the ds-pwp-account-activation-time LDAP attribute.
        accountExpirationTime:
          type: string
          description: >-
              Specifies the time, in generalized time format (e.g., '20240101070000Z'), that the root user account should expire. If an expiration time is specified, the user will not be permitted to authenticate, nor can the account be used as an authorization identity, after this time has passed. This is stored in the ds-pwp-account-expiration-time LDAP attribute.
        requireSecureAuthentication:
          type: boolean
          description: >-
              Indicates whether this User must authenticate in a secure manner. When set to "true", the User will only be allowed to authenticate over a secure connection or using a mechanism that does not expose user credentials (e.g., the CRAM-MD5, DIGEST-MD5, and GSSAPI SASL mechanisms).
        requireSecureConnections:
          type: boolean
          description: >-
              Indicates whether this User must be required to communicate with the server over a secure connection. When set to "true", the User will only be allowed to communicate with the server over a secure connection (i.e., using TLS or the StartTLS extended operation).
        allowedAuthenticationType:
          type: array
          items:
            type: string
          description: >-
              Indicates that User should only be allowed to authenticate in certain ways. Allowed values include "simple" (to indicate that the user should be allowed to bind using simple authentication) or "sasl {mech}" (to indicate that the user should be allowed to bind using the specified SASL mechanism, like "sasl PLAIN"). The list of available SASL mechanisms can be retrieved by running "dsconfig --advanced list-sasl-mechanism-handlers".
        allowedAuthenticationIPAddress:
          type: array
          items:
            type: string
          description: >-
              An IPv4 or IPv6 address mask that controls the set of IP addresses from which this User can authenticate to the server. For instance a value of 127.0.0.1 (or ::1 in IPv6) would restricted access only to localhost connections, whereas 10.6.1.* would restrict access to servers on the 10.6.1.* subnet.
        preferredOTPDeliveryMechanism:
          type: array
          items:
            type: string
          description: >-
              Overrides the default settings for the mechanisms (e.g., email or SMS) that are used to deliver one time passwords to Users.
        isProxyable:
          $ref: '#/components/schemas/Enumtopology-admin-user-isProxyableProp'
        isProxyableByDN:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByGroup:
          type: array
          items:
            type: string
          description: >-
              Specifies the DNs of groups whose members can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        isProxyableByURL:
          type: array
          items:
            type: string
          description: >-
              Specifies LDAP URLs of accounts that can proxy as this User using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity. This property is only applicable if is-proxyable is set to "allowed" or "required".
        mayProxyAsDN:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries with the specified DNs.
        mayProxyAsGroup:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are in the group with the specified DN.
        mayProxyAsURL:
          type: array
          items:
            type: string
          description: >-
              This restricts the set of accounts that this User can proxy as to entries that are matched by the specified LDAP URL.
      required:
      - inheritDefaultRootPrivileges
      - searchResultEntryLimit
      - timeLimitSeconds
      - lookThroughEntryLimit
      - idleTimeLimitSeconds
      - passwordPolicy
      - requireSecureAuthentication
      - requireSecureConnections
    Enumtopology-admin-userSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:topology-admin-user"
    Enumtopology-admin-user-isProxyableProp:
      type: string
      enum:
      - "allowed"
      - "prohibited"
      - "required"
      description: >-
          This can be used to indicate whether the User can be used as an alternate authorization identity (using the proxied authorization v1 or v2 control, the intermediate client control, or a SASL mechanism that allows specifying an alternate authorization identity).
    Enumtopology-admin-user-privilegeProp:
      type: string
      enum:
      - "audit-data-security"
      - "-audit-data-security"
      - "bypass-acl"
      - "-bypass-acl"
      - "bypass-read-acl"
      - "-bypass-read-acl"
      - "modify-acl"
      - "-modify-acl"
      - "config-read"
      - "-config-read"
      - "config-write"
      - "-config-write"
      - "jmx-read"
      - "-jmx-read"
      - "jmx-write"
      - "-jmx-write"
      - "jmx-notify"
      - "-jmx-notify"
      - "ldif-import"
      - "-ldif-import"
      - "ldif-export"
      - "-ldif-export"
      - "backend-backup"
      - "-backend-backup"
      - "backend-restore"
      - "-backend-restore"
      - "server-shutdown"
      - "-server-shutdown"
      - "server-restart"
      - "-server-restart"
      - "proxied-auth"
      - "-proxied-auth"
      - "disconnect-client"
      - "-disconnect-client"
      - "password-reset"
      - "-password-reset"
      - "update-schema"
      - "-update-schema"
      - "privilege-change"
      - "-privilege-change"
      - "unindexed-search"
      - "-unindexed-search"
      - "unindexed-search-with-control"
      - "-unindexed-search-with-control"
      - "bypass-pw-policy"
      - "-bypass-pw-policy"
      - "lockdown-mode"
      - "-lockdown-mode"
      - "stream-values"
      - "-stream-values"
      - "third-party-task"
      - "-third-party-task"
      - "use-admin-session"
      - "-use-admin-session"
      - "soft-delete-read"
      - "-soft-delete-read"
      - "metrics-read"
      - "-metrics-read"
      - "remote-log-read"
      - "-remote-log-read"
      - "manage-topology"
      - "-manage-topology"
      - "permit-get-password-policy-state-issues"
      - "-permit-get-password-policy-state-issues"
      - "permit-proxied-mschapv2-details"
      - "-permit-proxied-mschapv2-details"
      - "permit-externally-processed-authentication"
      - "-permit-externally-processed-authentication"
      - "permit-export-reversible-passwords"
      - "-permit-export-reversible-passwords"
      - "permit-forwarding-client-connection-policy"
      - "-permit-forwarding-client-connection-policy"
      - "exec-task"
      - "-exec-task"
      - "collect-support-data"
      - "-collect-support-data"
      - "file-servlet-access"
      - "-file-servlet-access"
      - "permit-replace-certificate-request"
      - "-permit-replace-certificate-request"
      description: >-
          Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
