openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the ID Token Validator config object
  title: PingData ID Token Validator Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-100/pd_ds_use_config_api
tags:
- description: Access id-token-validators
  name: id-token-validator
paths:
  /id-token-validators:
    get:
      summary: Returns a list of all ID Token Validator objects
      operationId: list-id-token-validators
      parameters:
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/id-token-validatorListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - id-token-validator
    post:
      summary: Add a new ID Token Validator to the config
      operationId: add-id-token-validator
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-ping-one-id-token-validator-request'
              - $ref: '#/components/schemas/add-openid-connect-id-token-validator-request'
        description: Create a new ID Token Validator in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The ID Token Validator already exists
      security:
      - basicAuth: []
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}:
    delete:
      summary: Delete a ID Token Validator
      operationId: delete-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
        "409":
          description: The ID Token Validator cannot be deleted
      security:
      - basicAuth: []
      tags:
      - id-token-validator
    get:
      summary: Returns a single ID Token Validator
      operationId: get-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - id-token-validator
    patch:
      summary: Update an existing ID Token Validator by name
      operationId: update-id-token-validator
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing ID Token Validator
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/ping-one-id-token-validator-response'
                - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}/token-claim-validations:
    get:
      summary: Returns a list of all Token Claim Validation objects
      operationId: list-token-claim-validations
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      - in: query
        name: filter
        schema:
          type: string
        required: false
        description: SCIM filter
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/token-claim-validationListResponse'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
    post:
      summary: Add a new Token Claim Validation to the config
      operationId: add-token-claim-validation
      parameters:
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
              - $ref: '#/components/schemas/add-string-array-token-claim-validation-request'
              - $ref: '#/components/schemas/add-boolean-token-claim-validation-request'
              - $ref: '#/components/schemas/add-string-token-claim-validation-request'
        description: Create a new Token Claim Validation in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Token Claim Validation already exists
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
  /id-token-validators/{id-token-validator-name}/token-claim-validations/{token-claim-validation-name}:
    delete:
      summary: Delete a Token Claim Validation
      operationId: delete-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Token Claim Validation does not exist
        "409":
          description: The Token Claim Validation cannot be deleted
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
    get:
      summary: Returns a single Token Claim Validation
      operationId: get-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Token Claim Validation does not exist
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
    patch:
      summary: Update an existing Token Claim Validation by name
      operationId: update-token-claim-validation
      parameters:
      - description: Name of the Token Claim Validation
        explode: false
        in: path
        name: token-claim-validation-name
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the ID Token Validator
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Token Claim Validation
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/string-array-token-claim-validation-response'
                - $ref: '#/components/schemas/boolean-token-claim-validation-response'
                - $ref: '#/components/schemas/string-token-claim-validation-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Token Claim Validation does not exist
      security:
      - basicAuth: []
      tags:
      - token-claim-validation
components:
  schemas:
    Enumid-token-validator-allowedSigningAlgorithmProp:
      type: string
      enum:
      - "RS256"
      - "RS384"
      - "RS512"
      - "ES256"
      - "ES384"
      - "ES512"
      description: >-
          Specifies an allow list of JWT signing algorithms that will be accepted by the OpenID Connect ID Token Validator.
    add-openid-connect-id-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new ID Token Validator
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
      required:
      - validatorName
    openid-connect-id-token-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the ID Token Validator
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    openid-connect-id-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumopenid-connect-id-token-validatorSchemaUrn'
        allowedSigningAlgorithm:
          type: array
          items:
            $ref: '#/components/schemas/Enumid-token-validator-allowedSigningAlgorithmProp'
        signingCertificate:
          type: array
          items:
            type: string
          description: >-
              Specifies the locally stored certificates that may be used to validate the signature of an incoming ID token. This property may be specified if a JWKS endpoint should not be used to retrieve public signing keys.
        OpenIDConnectProvider:
          type: string
          description: >-
              Specifies the OpenID Connect provider that issues ID tokens handled by this OpenID Connect ID Token Validator. This property is used in conjunction with the jwks-endpoint-path property.
        jwksEndpointPath:
          type: string
          description: >-
              The relative path to the JWKS endpoint from which to retrieve one or more public signing keys that may be used to validate the signature of an incoming ID token. This path is relative to the base_url property defined for the validator's OpenID Connect provider. If jwks-endpoint-path is specified, the OpenID Connect ID Token Validator will not consult locally stored certificates for validating token signatures.
        description:
          type: string
          description: >-
              A description for this ID Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this ID Token Validator is enabled for use in the Directory Server.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject; i.e., the authenticated user.
        issuerURL:
          type: string
          description: >-
              Specifies the OpenID Connect provider's issuer URL.
        clockSkewGracePeriod:
          type: string
          description: >-
              Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.
        jwksCacheDuration:
          type: string
          description: >-
              How often the ID Token Validator should refresh its cache of JWKS token signing keys.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      required:
      - schemas
      - allowedSigningAlgorithm
      - enabled
      - identityMapper
      - issuerURL
      - evaluationOrderIndex
    Enumopenid-connect-id-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect"
    add-ping-one-id-token-validator-request:
      allOf:
      - type: object
        properties:
          validatorName:
            type: string
            description: >-
                Name of the new ID Token Validator
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
      required:
      - validatorName
    ping-one-id-token-validator-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the ID Token Validator
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - OpenIDConnectProvider
    ping-one-id-token-validator-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumping-one-id-token-validatorSchemaUrn'
        issuerURL:
          type: string
          description: >-
              Specifies a PingOne base issuer URL.
        OpenIDConnectProvider:
          type: string
          description: >-
              Specifies HTTPS connection settings for the PingOne OpenID Connect provider.
        OpenIDConnectMetadataCacheDuration:
          type: string
          description: >-
              How often the PingOne ID Token Validator should refresh its stored cache of OpenID Connect-related metadata.
        description:
          type: string
          description: >-
              A description for this ID Token Validator
        enabled:
          type: boolean
          description: >-
              Indicates whether this ID Token Validator is enabled for use in the Directory Server.
        identityMapper:
          type: string
          description: >-
              Specifies the name of the Identity Mapper that should be used to correlate an ID token subject value to a user entry. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
        subjectClaimName:
          type: string
          description: >-
              The name of the token claim that contains the subject; i.e., the authenticated user.
        clockSkewGracePeriod:
          type: string
          description: >-
              Specifies the amount of clock skew that is tolerated by the ID Token Validator when evaluating whether a token is within its valid time interval. The duration specified by this parameter will be subtracted from the token's not-before (nbf) time and added to the token's expiration (exp) time, if present, to allow for any time difference between the local server's clock and the token issuer's clock.
        jwksCacheDuration:
          type: string
          description: >-
              How often the ID Token Validator should refresh its cache of JWKS token signing keys.
        evaluationOrderIndex:
          type: integer
          description: >-
              When multiple ID Token Validators are defined for a single Directory Server, this property determines the order in which the ID Token Validators are consulted. Values of this property must be unique among all ID Token Validators defined within Directory Server but not necessarily contiguous. ID Token Validators with lower values will be evaluated first to determine if they are able to validate the ID token.
      required:
      - schemas
      - issuerURL
      - enabled
      - identityMapper
      - evaluationOrderIndex
    Enumping-one-id-token-validatorSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one"
    add-string-array-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            type: string
            description: >-
                Name of the new Token Claim Validation
      - $ref: '#/components/schemas/string-array-token-claim-validation-shared'
      required:
      - validationName
    string-array-token-claim-validation-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Token Claim Validation
      - $ref: '#/components/schemas/string-array-token-claim-validation-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    string-array-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstring-array-token-claim-validationSchemaUrn'
        allRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of all values that the claim must have to be considered valid.
        anyRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of values that the claim may have to be considered valid.
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - claimName
    Enumstring-array-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string-array"
    Enumtoken-claim-validation-requiredValueProp:
      type: string
      enum:
      - "true"
      - "false"
      description: >-
          Specifies the boolean claim's required value.
    add-boolean-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            type: string
            description: >-
                Name of the new Token Claim Validation
      - $ref: '#/components/schemas/boolean-token-claim-validation-shared'
      required:
      - validationName
    boolean-token-claim-validation-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Token Claim Validation
      - $ref: '#/components/schemas/boolean-token-claim-validation-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    boolean-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumboolean-token-claim-validationSchemaUrn'
        requiredValue:
          $ref: '#/components/schemas/Enumtoken-claim-validation-requiredValueProp'
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - requiredValue
      - claimName
    Enumboolean-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:boolean"
    add-string-token-claim-validation-request:
      allOf:
      - type: object
        properties:
          validationName:
            type: string
            description: >-
                Name of the new Token Claim Validation
      - $ref: '#/components/schemas/string-token-claim-validation-shared'
      required:
      - validationName
    string-token-claim-validation-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Token Claim Validation
      - $ref: '#/components/schemas/string-token-claim-validation-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    string-token-claim-validation-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumstring-token-claim-validationSchemaUrn'
        anyRequiredValue:
          type: array
          items:
            type: string
          description: >-
              The set of values that the claim may have to be considered valid.
        description:
          type: string
          description: >-
              A description for this Token Claim Validation
        claimName:
          type: string
          description: >-
              The name of the claim to be validated.
      required:
      - schemas
      - anyRequiredValue
      - claimName
    Enumstring-token-claim-validationSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:token-claim-validation:string"
    id-token-validatorListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
            - $ref: '#/components/schemas/ping-one-id-token-validator-response'
    token-claim-validationListResponse:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            type: string
        totalResults:
          type: number
        Resources:
          type: array
          items:
            oneOf:
            - $ref: '#/components/schemas/string-array-token-claim-validation-response'
            - $ref: '#/components/schemas/boolean-token-claim-validation-response'
            - $ref: '#/components/schemas/string-token-claim-validation-response'
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
