openapi: 3.0.3
info:
  description: This is the PingData Configuration API for the Web Application Extension config object
  title: PingData Web Application Extension Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/r/en-us/pingdirectory-91/pd_ds_use_config_api
tags:
- description: Access web-application-extensions
  name: web-application-extension
paths:
  /web-application-extensions:
    post:
      summary: Add a new Web Application Extension to the config
      operationId: add-web-application-extension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-generic-web-application-extension-request'
        description: Create a new Web Application Extension in the config
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Web Application Extension already exists
      security:
      - basicAuth: []
      tags:
      - web-application-extension
  /web-application-extensions/{web-application-extension-name}:
    delete:
      summary: Delete a Web Application Extension
      operationId: delete-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Web Application Extension does not exist
        "409":
          description: The Web Application Extension cannot be deleted
      security:
      - basicAuth: []
      tags:
      - web-application-extension
    get:
      summary: Returns a single Web Application Extension
      operationId: get-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/console-web-application-extension-response'
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      tags:
      - web-application-extension
    patch:
      summary: Update an existing Web Application Extension by name
      operationId: update-web-application-extension
      parameters:
      - description: Name of the Web Application Extension
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Web Application Extension
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/console-web-application-extension-response'
                - $ref: '#/components/schemas/generic-web-application-extension-response'
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      tags:
      - web-application-extension
components:
  schemas:
    Enumweb-application-extension-complexityProp:
      type: string
      enum:
      - "basic"
      - "standard"
      - "advanced"
      - "expert"
      description: >-
          Specifies the maximum complexity level for managed configuration elements.
    console-web-application-extension-response:
      allOf:
      - type: object
        properties:
          schemas:
            type: array
            minItems: 1
            maxItems: 1
            items:
              $ref: '#/components/schemas/Enumconsole-web-application-extensionSchemaUrn'
          id:
            type: string
            description: >-
                Name of the Web Application Extension
          ssoEnabled:
            type: boolean
            description: >-
                Indicates that SSO login into the Administrative Console is enabled.
          oidcClientID:
            type: string
            description: >-
                The client ID to use when authenticating to the OpenID Connect provider.
          oidcClientSecret:
            type: string
            format: password
            description: >-
                The client secret to use when authenticating to the OpenID Connect provider.
          oidcClientSecretPassphraseProvider:
            type: string
            description: >-
                A passphrase provider that may be used to obtain the client secret to use when authenticating to the OpenID Connect provider.
          oidcIssuerURL:
            type: string
            description: >-
                The issuer URL of the OpenID Connect provider.
          oidcTrustStoreFile:
            type: string
            description: >-
                Specifies the path to the truststore file used by this application to evaluate OIDC provider certificates. If this field is left blank, the default JVM trust store will be used.
          oidcTrustStoreType:
            type: string
            description: >-
                Specifies the format for the data in the OIDC trust store file.
          oidcTrustStorePinPassphraseProvider:
            type: string
            description: >-
                The passphrase provider that may be used to obtain the PIN for the trust store used with OIDC providers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
          oidcStrictHostnameVerification:
            type: boolean
            description: >-
                Controls whether or not hostname verification is performed, which checks if the hostname of the OIDC provider matches the name(s) stored inside the certificate it provides. This property should only be set to false for testing purposes.
          oidcTrustAll:
            type: boolean
            description: >-
                Controls whether or not this application will always trust any certificate that is presented to it, regardless of its contents. This property should only be set to true for testing purposes.
          ldapServer:
            type: string
            description: >-
                The LDAP URL used to connect to the managed server.
          trustStoreFile:
            type: string
            description: >-
                Specifies the path to the truststore file, which is used by this application to establish trust of managed servers.
          trustStoreType:
            type: string
            description: >-
                Specifies the format for the data in the trust store file.
          trustStorePinPassphraseProvider:
            type: string
            description: >-
                The passphrase provider that may be used to obtain the PIN for the trust store used with managed LDAP servers. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
          logFile:
            type: string
            description: >-
                The path to the log file for the web application.
          complexity:
            $ref: '#/components/schemas/Enumweb-application-extension-complexityProp'
          description:
            type: string
            description: >-
                A description for this Web Application Extension
          baseContextPath:
            type: string
            description: >-
                Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
          warFile:
            type: string
            description: >-
                Specifies the path to a standard web application archive (WAR) file.
          documentRootDirectory:
            type: string
            description: >-
                Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
          deploymentDescriptorFile:
            type: string
            description: >-
                Specifies the path to the deployment descriptor file when used with document-root-directory.
          temporaryDirectory:
            type: string
            description: >-
                Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
          initParameter:
            type: array
            items:
              type: string
            description: >-
                Specifies an initialization parameter to pass into the web application during startup.
      - $ref: '#/components/schemas/meta'
      required:
      - id
      - schemas
      - baseContextPath
    Enumconsole-web-application-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:console"
    add-generic-web-application-extension-request:
      allOf:
      - type: object
        properties:
          extensionName:
            type: string
            description: >-
                Name of the new Web Application Extension
      - $ref: '#/components/schemas/generic-web-application-extension-shared'
      required:
      - extensionName
    generic-web-application-extension-response:
      allOf:
      - type: object
        properties:
          id:
            type: string
            description: >-
                Name of the Web Application Extension
      - $ref: '#/components/schemas/generic-web-application-extension-shared'
      - $ref: '#/components/schemas/meta'
      required:
      - id
    generic-web-application-extension-shared:
      type: object
      properties:
        schemas:
          type: array
          minItems: 1
          maxItems: 1
          items:
            $ref: '#/components/schemas/Enumgeneric-web-application-extensionSchemaUrn'
        description:
          type: string
          description: >-
              A description for this Web Application Extension
        baseContextPath:
          type: string
          description: >-
              Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
        warFile:
          type: string
          description: >-
              Specifies the path to a standard web application archive (WAR) file.
        documentRootDirectory:
          type: string
          description: >-
              Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
        deploymentDescriptorFile:
          type: string
          description: >-
              Specifies the path to the deployment descriptor file when used with document-root-directory.
        temporaryDirectory:
          type: string
          description: >-
              Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
        initParameter:
          type: array
          items:
            type: string
          description: >-
              Specifies an initialization parameter to pass into the web application during startup.
      required:
      - schemas
      - baseContextPath
    Enumgeneric-web-application-extensionSchemaUrn:
      type: string
      enum:
      - "urn:pingidentity:schemas:configuration:2.0:web-application-extension:generic"
    updateRequest:
      type: object
      properties:
        operations:
          type: array
          items:
            $ref: '#/components/schemas/Operation'
      required:
      - operations
    Operation:
      type: object
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
    EnumOperation:
      type: string
      enum:
      - "add"
      - "remove"
      - "replace"
    meta:
      type: object
      properties:
        meta:
          type: object
          properties:
            resourceType:
              type: string
            location:
              type: string
        "urn:pingidentity:schemas:configuration:messages:2.0":
          type: object
          properties:
            notifications:
              type: array
              items:
                type: string
            requiredActions:
              type: array
              items:
                type: object
                properties:
                  property:
                    type: string
                  type:
                    type: string
                  synopsis:
                    type: string
                required:
                - type
                - synopsis
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
