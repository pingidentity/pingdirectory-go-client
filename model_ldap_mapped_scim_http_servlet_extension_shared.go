/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// LdapMappedScimHttpServletExtensionShared struct for LdapMappedScimHttpServletExtensionShared
type LdapMappedScimHttpServletExtensionShared struct {
	Schemas []EnumldapMappedScimHttpServletExtensionSchemaUrn `json:"schemas"`
	// Specifies the OAuth Token Handler implementation that should be used to validate OAuth 2.0 bearer tokens when they are included in a SCIM request.
	OAuthTokenHandler *string `json:"OAuthTokenHandler,omitempty"`
	// Enables HTTP Basic authentication, using a username and password.
	BasicAuthEnabled *bool `json:"basicAuthEnabled,omitempty"`
	// Specifies the name of the identity mapper that is to be used to match the username included in the HTTP Basic authentication header to the corresponding user in the directory.
	IdentityMapper *string `json:"identityMapper,omitempty"`
	// The path to an XML file defining the resources supported by the SCIM interface and the SCIM-to-LDAP attribute mappings to use.
	ResourceMappingFile *string `json:"resourceMappingFile,omitempty"`
	IncludeLDAPObjectclass []string `json:"includeLDAPObjectclass,omitempty"`
	ExcludeLDAPObjectclass []string `json:"excludeLDAPObjectclass,omitempty"`
	IncludeLDAPBaseDN []string `json:"includeLDAPBaseDN,omitempty"`
	ExcludeLDAPBaseDN []string `json:"excludeLDAPBaseDN,omitempty"`
	// Specifies the LDAP attribute whose value should be used as the entity tag value to enable SCIM resource versioning support.
	EntityTagLDAPAttribute *string `json:"entityTagLDAPAttribute,omitempty"`
	// The context path to use to access the SCIM interface. The value must start with a forward slash and must represent a valid HTTP context path.
	BaseContextPath string `json:"baseContextPath"`
	// Specifies the location of the directory that is used to create temporary files containing SCIM request data.
	TemporaryDirectory string `json:"temporaryDirectory"`
	// Specifies the permissions that should be applied to the directory that is used to create temporary files.
	TemporaryDirectoryPermissions string `json:"temporaryDirectoryPermissions"`
	// The maximum number of resources that are returned in a response.
	MaxResults *int32 `json:"maxResults,omitempty"`
	// The maximum number of operations that are permitted in a bulk request.
	BulkMaxOperations *int32 `json:"bulkMaxOperations,omitempty"`
	// The maximum payload size in bytes of a bulk request.
	BulkMaxPayloadSize *string `json:"bulkMaxPayloadSize,omitempty"`
	// The maximum number of bulk requests that may be processed concurrently by the server. Any bulk request that would cause this limit to be exceeded is rejected with HTTP status code 503.
	BulkMaxConcurrentRequests *int32 `json:"bulkMaxConcurrentRequests,omitempty"`
	// Enables debug logging of the SCIM SDK. Debug messages will be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.
	DebugEnabled *bool `json:"debugEnabled,omitempty"`
	DebugLevel EnumhttpServletExtensionDebugLevelProp `json:"debugLevel"`
	DebugType []EnumhttpServletExtensionDebugTypeProp `json:"debugType"`
	// Indicates whether a stack trace of the thread which called the debug method should be included in debug log messages.
	IncludeStackTrace bool `json:"includeStackTrace"`
	// A description for this HTTP Servlet Extension
	Description *string `json:"description,omitempty"`
	// The cross-origin request policy to use for the HTTP Servlet Extension.
	CrossOriginPolicy *string `json:"crossOriginPolicy,omitempty"`
	ResponseHeader []string `json:"responseHeader,omitempty"`
	// Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\", and \"X-Request-Id\".
	CorrelationIDResponseHeader *string `json:"correlationIDResponseHeader,omitempty"`
}

// NewLdapMappedScimHttpServletExtensionShared instantiates a new LdapMappedScimHttpServletExtensionShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLdapMappedScimHttpServletExtensionShared(schemas []EnumldapMappedScimHttpServletExtensionSchemaUrn, baseContextPath string, temporaryDirectory string, temporaryDirectoryPermissions string, debugLevel EnumhttpServletExtensionDebugLevelProp, debugType []EnumhttpServletExtensionDebugTypeProp, includeStackTrace bool) *LdapMappedScimHttpServletExtensionShared {
	this := LdapMappedScimHttpServletExtensionShared{}
	this.Schemas = schemas
	this.BaseContextPath = baseContextPath
	this.TemporaryDirectory = temporaryDirectory
	this.TemporaryDirectoryPermissions = temporaryDirectoryPermissions
	this.DebugLevel = debugLevel
	this.DebugType = debugType
	this.IncludeStackTrace = includeStackTrace
	return &this
}

// NewLdapMappedScimHttpServletExtensionSharedWithDefaults instantiates a new LdapMappedScimHttpServletExtensionShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLdapMappedScimHttpServletExtensionSharedWithDefaults() *LdapMappedScimHttpServletExtensionShared {
	this := LdapMappedScimHttpServletExtensionShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *LdapMappedScimHttpServletExtensionShared) GetSchemas() []EnumldapMappedScimHttpServletExtensionSchemaUrn {
	if o == nil {
		var ret []EnumldapMappedScimHttpServletExtensionSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetSchemasOk() ([]EnumldapMappedScimHttpServletExtensionSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetSchemas(v []EnumldapMappedScimHttpServletExtensionSchemaUrn) {
	o.Schemas = v
}

// GetOAuthTokenHandler returns the OAuthTokenHandler field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetOAuthTokenHandler() string {
	if o == nil || isNil(o.OAuthTokenHandler) {
		var ret string
		return ret
	}
	return *o.OAuthTokenHandler
}

// GetOAuthTokenHandlerOk returns a tuple with the OAuthTokenHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetOAuthTokenHandlerOk() (*string, bool) {
	if o == nil || isNil(o.OAuthTokenHandler) {
    return nil, false
	}
	return o.OAuthTokenHandler, true
}

// HasOAuthTokenHandler returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasOAuthTokenHandler() bool {
	if o != nil && !isNil(o.OAuthTokenHandler) {
		return true
	}

	return false
}

// SetOAuthTokenHandler gets a reference to the given string and assigns it to the OAuthTokenHandler field.
func (o *LdapMappedScimHttpServletExtensionShared) SetOAuthTokenHandler(v string) {
	o.OAuthTokenHandler = &v
}

// GetBasicAuthEnabled returns the BasicAuthEnabled field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetBasicAuthEnabled() bool {
	if o == nil || isNil(o.BasicAuthEnabled) {
		var ret bool
		return ret
	}
	return *o.BasicAuthEnabled
}

// GetBasicAuthEnabledOk returns a tuple with the BasicAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetBasicAuthEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.BasicAuthEnabled) {
    return nil, false
	}
	return o.BasicAuthEnabled, true
}

// HasBasicAuthEnabled returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasBasicAuthEnabled() bool {
	if o != nil && !isNil(o.BasicAuthEnabled) {
		return true
	}

	return false
}

// SetBasicAuthEnabled gets a reference to the given bool and assigns it to the BasicAuthEnabled field.
func (o *LdapMappedScimHttpServletExtensionShared) SetBasicAuthEnabled(v bool) {
	o.BasicAuthEnabled = &v
}

// GetIdentityMapper returns the IdentityMapper field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetIdentityMapper() string {
	if o == nil || isNil(o.IdentityMapper) {
		var ret string
		return ret
	}
	return *o.IdentityMapper
}

// GetIdentityMapperOk returns a tuple with the IdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetIdentityMapperOk() (*string, bool) {
	if o == nil || isNil(o.IdentityMapper) {
    return nil, false
	}
	return o.IdentityMapper, true
}

// HasIdentityMapper returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasIdentityMapper() bool {
	if o != nil && !isNil(o.IdentityMapper) {
		return true
	}

	return false
}

// SetIdentityMapper gets a reference to the given string and assigns it to the IdentityMapper field.
func (o *LdapMappedScimHttpServletExtensionShared) SetIdentityMapper(v string) {
	o.IdentityMapper = &v
}

// GetResourceMappingFile returns the ResourceMappingFile field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetResourceMappingFile() string {
	if o == nil || isNil(o.ResourceMappingFile) {
		var ret string
		return ret
	}
	return *o.ResourceMappingFile
}

// GetResourceMappingFileOk returns a tuple with the ResourceMappingFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetResourceMappingFileOk() (*string, bool) {
	if o == nil || isNil(o.ResourceMappingFile) {
    return nil, false
	}
	return o.ResourceMappingFile, true
}

// HasResourceMappingFile returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasResourceMappingFile() bool {
	if o != nil && !isNil(o.ResourceMappingFile) {
		return true
	}

	return false
}

// SetResourceMappingFile gets a reference to the given string and assigns it to the ResourceMappingFile field.
func (o *LdapMappedScimHttpServletExtensionShared) SetResourceMappingFile(v string) {
	o.ResourceMappingFile = &v
}

// GetIncludeLDAPObjectclass returns the IncludeLDAPObjectclass field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeLDAPObjectclass() []string {
	if o == nil || isNil(o.IncludeLDAPObjectclass) {
		var ret []string
		return ret
	}
	return o.IncludeLDAPObjectclass
}

// GetIncludeLDAPObjectclassOk returns a tuple with the IncludeLDAPObjectclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeLDAPObjectclassOk() ([]string, bool) {
	if o == nil || isNil(o.IncludeLDAPObjectclass) {
    return nil, false
	}
	return o.IncludeLDAPObjectclass, true
}

// HasIncludeLDAPObjectclass returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasIncludeLDAPObjectclass() bool {
	if o != nil && !isNil(o.IncludeLDAPObjectclass) {
		return true
	}

	return false
}

// SetIncludeLDAPObjectclass gets a reference to the given []string and assigns it to the IncludeLDAPObjectclass field.
func (o *LdapMappedScimHttpServletExtensionShared) SetIncludeLDAPObjectclass(v []string) {
	o.IncludeLDAPObjectclass = v
}

// GetExcludeLDAPObjectclass returns the ExcludeLDAPObjectclass field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetExcludeLDAPObjectclass() []string {
	if o == nil || isNil(o.ExcludeLDAPObjectclass) {
		var ret []string
		return ret
	}
	return o.ExcludeLDAPObjectclass
}

// GetExcludeLDAPObjectclassOk returns a tuple with the ExcludeLDAPObjectclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetExcludeLDAPObjectclassOk() ([]string, bool) {
	if o == nil || isNil(o.ExcludeLDAPObjectclass) {
    return nil, false
	}
	return o.ExcludeLDAPObjectclass, true
}

// HasExcludeLDAPObjectclass returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasExcludeLDAPObjectclass() bool {
	if o != nil && !isNil(o.ExcludeLDAPObjectclass) {
		return true
	}

	return false
}

// SetExcludeLDAPObjectclass gets a reference to the given []string and assigns it to the ExcludeLDAPObjectclass field.
func (o *LdapMappedScimHttpServletExtensionShared) SetExcludeLDAPObjectclass(v []string) {
	o.ExcludeLDAPObjectclass = v
}

// GetIncludeLDAPBaseDN returns the IncludeLDAPBaseDN field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeLDAPBaseDN() []string {
	if o == nil || isNil(o.IncludeLDAPBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludeLDAPBaseDN
}

// GetIncludeLDAPBaseDNOk returns a tuple with the IncludeLDAPBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeLDAPBaseDNOk() ([]string, bool) {
	if o == nil || isNil(o.IncludeLDAPBaseDN) {
    return nil, false
	}
	return o.IncludeLDAPBaseDN, true
}

// HasIncludeLDAPBaseDN returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasIncludeLDAPBaseDN() bool {
	if o != nil && !isNil(o.IncludeLDAPBaseDN) {
		return true
	}

	return false
}

// SetIncludeLDAPBaseDN gets a reference to the given []string and assigns it to the IncludeLDAPBaseDN field.
func (o *LdapMappedScimHttpServletExtensionShared) SetIncludeLDAPBaseDN(v []string) {
	o.IncludeLDAPBaseDN = v
}

// GetExcludeLDAPBaseDN returns the ExcludeLDAPBaseDN field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetExcludeLDAPBaseDN() []string {
	if o == nil || isNil(o.ExcludeLDAPBaseDN) {
		var ret []string
		return ret
	}
	return o.ExcludeLDAPBaseDN
}

// GetExcludeLDAPBaseDNOk returns a tuple with the ExcludeLDAPBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetExcludeLDAPBaseDNOk() ([]string, bool) {
	if o == nil || isNil(o.ExcludeLDAPBaseDN) {
    return nil, false
	}
	return o.ExcludeLDAPBaseDN, true
}

// HasExcludeLDAPBaseDN returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasExcludeLDAPBaseDN() bool {
	if o != nil && !isNil(o.ExcludeLDAPBaseDN) {
		return true
	}

	return false
}

// SetExcludeLDAPBaseDN gets a reference to the given []string and assigns it to the ExcludeLDAPBaseDN field.
func (o *LdapMappedScimHttpServletExtensionShared) SetExcludeLDAPBaseDN(v []string) {
	o.ExcludeLDAPBaseDN = v
}

// GetEntityTagLDAPAttribute returns the EntityTagLDAPAttribute field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetEntityTagLDAPAttribute() string {
	if o == nil || isNil(o.EntityTagLDAPAttribute) {
		var ret string
		return ret
	}
	return *o.EntityTagLDAPAttribute
}

// GetEntityTagLDAPAttributeOk returns a tuple with the EntityTagLDAPAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetEntityTagLDAPAttributeOk() (*string, bool) {
	if o == nil || isNil(o.EntityTagLDAPAttribute) {
    return nil, false
	}
	return o.EntityTagLDAPAttribute, true
}

// HasEntityTagLDAPAttribute returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasEntityTagLDAPAttribute() bool {
	if o != nil && !isNil(o.EntityTagLDAPAttribute) {
		return true
	}

	return false
}

// SetEntityTagLDAPAttribute gets a reference to the given string and assigns it to the EntityTagLDAPAttribute field.
func (o *LdapMappedScimHttpServletExtensionShared) SetEntityTagLDAPAttribute(v string) {
	o.EntityTagLDAPAttribute = &v
}

// GetBaseContextPath returns the BaseContextPath field value
func (o *LdapMappedScimHttpServletExtensionShared) GetBaseContextPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseContextPath
}

// GetBaseContextPathOk returns a tuple with the BaseContextPath field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetBaseContextPathOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.BaseContextPath, true
}

// SetBaseContextPath sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetBaseContextPath(v string) {
	o.BaseContextPath = v
}

// GetTemporaryDirectory returns the TemporaryDirectory field value
func (o *LdapMappedScimHttpServletExtensionShared) GetTemporaryDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemporaryDirectory
}

// GetTemporaryDirectoryOk returns a tuple with the TemporaryDirectory field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetTemporaryDirectoryOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TemporaryDirectory, true
}

// SetTemporaryDirectory sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetTemporaryDirectory(v string) {
	o.TemporaryDirectory = v
}

// GetTemporaryDirectoryPermissions returns the TemporaryDirectoryPermissions field value
func (o *LdapMappedScimHttpServletExtensionShared) GetTemporaryDirectoryPermissions() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TemporaryDirectoryPermissions
}

// GetTemporaryDirectoryPermissionsOk returns a tuple with the TemporaryDirectoryPermissions field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetTemporaryDirectoryPermissionsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TemporaryDirectoryPermissions, true
}

// SetTemporaryDirectoryPermissions sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetTemporaryDirectoryPermissions(v string) {
	o.TemporaryDirectoryPermissions = v
}

// GetMaxResults returns the MaxResults field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetMaxResults() int32 {
	if o == nil || isNil(o.MaxResults) {
		var ret int32
		return ret
	}
	return *o.MaxResults
}

// GetMaxResultsOk returns a tuple with the MaxResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetMaxResultsOk() (*int32, bool) {
	if o == nil || isNil(o.MaxResults) {
    return nil, false
	}
	return o.MaxResults, true
}

// HasMaxResults returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasMaxResults() bool {
	if o != nil && !isNil(o.MaxResults) {
		return true
	}

	return false
}

// SetMaxResults gets a reference to the given int32 and assigns it to the MaxResults field.
func (o *LdapMappedScimHttpServletExtensionShared) SetMaxResults(v int32) {
	o.MaxResults = &v
}

// GetBulkMaxOperations returns the BulkMaxOperations field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxOperations() int32 {
	if o == nil || isNil(o.BulkMaxOperations) {
		var ret int32
		return ret
	}
	return *o.BulkMaxOperations
}

// GetBulkMaxOperationsOk returns a tuple with the BulkMaxOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxOperationsOk() (*int32, bool) {
	if o == nil || isNil(o.BulkMaxOperations) {
    return nil, false
	}
	return o.BulkMaxOperations, true
}

// HasBulkMaxOperations returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasBulkMaxOperations() bool {
	if o != nil && !isNil(o.BulkMaxOperations) {
		return true
	}

	return false
}

// SetBulkMaxOperations gets a reference to the given int32 and assigns it to the BulkMaxOperations field.
func (o *LdapMappedScimHttpServletExtensionShared) SetBulkMaxOperations(v int32) {
	o.BulkMaxOperations = &v
}

// GetBulkMaxPayloadSize returns the BulkMaxPayloadSize field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxPayloadSize() string {
	if o == nil || isNil(o.BulkMaxPayloadSize) {
		var ret string
		return ret
	}
	return *o.BulkMaxPayloadSize
}

// GetBulkMaxPayloadSizeOk returns a tuple with the BulkMaxPayloadSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxPayloadSizeOk() (*string, bool) {
	if o == nil || isNil(o.BulkMaxPayloadSize) {
    return nil, false
	}
	return o.BulkMaxPayloadSize, true
}

// HasBulkMaxPayloadSize returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasBulkMaxPayloadSize() bool {
	if o != nil && !isNil(o.BulkMaxPayloadSize) {
		return true
	}

	return false
}

// SetBulkMaxPayloadSize gets a reference to the given string and assigns it to the BulkMaxPayloadSize field.
func (o *LdapMappedScimHttpServletExtensionShared) SetBulkMaxPayloadSize(v string) {
	o.BulkMaxPayloadSize = &v
}

// GetBulkMaxConcurrentRequests returns the BulkMaxConcurrentRequests field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxConcurrentRequests() int32 {
	if o == nil || isNil(o.BulkMaxConcurrentRequests) {
		var ret int32
		return ret
	}
	return *o.BulkMaxConcurrentRequests
}

// GetBulkMaxConcurrentRequestsOk returns a tuple with the BulkMaxConcurrentRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetBulkMaxConcurrentRequestsOk() (*int32, bool) {
	if o == nil || isNil(o.BulkMaxConcurrentRequests) {
    return nil, false
	}
	return o.BulkMaxConcurrentRequests, true
}

// HasBulkMaxConcurrentRequests returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasBulkMaxConcurrentRequests() bool {
	if o != nil && !isNil(o.BulkMaxConcurrentRequests) {
		return true
	}

	return false
}

// SetBulkMaxConcurrentRequests gets a reference to the given int32 and assigns it to the BulkMaxConcurrentRequests field.
func (o *LdapMappedScimHttpServletExtensionShared) SetBulkMaxConcurrentRequests(v int32) {
	o.BulkMaxConcurrentRequests = &v
}

// GetDebugEnabled returns the DebugEnabled field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugEnabled() bool {
	if o == nil || isNil(o.DebugEnabled) {
		var ret bool
		return ret
	}
	return *o.DebugEnabled
}

// GetDebugEnabledOk returns a tuple with the DebugEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.DebugEnabled) {
    return nil, false
	}
	return o.DebugEnabled, true
}

// HasDebugEnabled returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasDebugEnabled() bool {
	if o != nil && !isNil(o.DebugEnabled) {
		return true
	}

	return false
}

// SetDebugEnabled gets a reference to the given bool and assigns it to the DebugEnabled field.
func (o *LdapMappedScimHttpServletExtensionShared) SetDebugEnabled(v bool) {
	o.DebugEnabled = &v
}

// GetDebugLevel returns the DebugLevel field value
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugLevel() EnumhttpServletExtensionDebugLevelProp {
	if o == nil {
		var ret EnumhttpServletExtensionDebugLevelProp
		return ret
	}

	return o.DebugLevel
}

// GetDebugLevelOk returns a tuple with the DebugLevel field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugLevelOk() (*EnumhttpServletExtensionDebugLevelProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.DebugLevel, true
}

// SetDebugLevel sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetDebugLevel(v EnumhttpServletExtensionDebugLevelProp) {
	o.DebugLevel = v
}

// GetDebugType returns the DebugType field value
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugType() []EnumhttpServletExtensionDebugTypeProp {
	if o == nil {
		var ret []EnumhttpServletExtensionDebugTypeProp
		return ret
	}

	return o.DebugType
}

// GetDebugTypeOk returns a tuple with the DebugType field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetDebugTypeOk() ([]EnumhttpServletExtensionDebugTypeProp, bool) {
	if o == nil {
    return nil, false
	}
	return o.DebugType, true
}

// SetDebugType sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetDebugType(v []EnumhttpServletExtensionDebugTypeProp) {
	o.DebugType = v
}

// GetIncludeStackTrace returns the IncludeStackTrace field value
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeStackTrace() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IncludeStackTrace
}

// GetIncludeStackTraceOk returns a tuple with the IncludeStackTrace field value
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetIncludeStackTraceOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.IncludeStackTrace, true
}

// SetIncludeStackTrace sets field value
func (o *LdapMappedScimHttpServletExtensionShared) SetIncludeStackTrace(v bool) {
	o.IncludeStackTrace = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *LdapMappedScimHttpServletExtensionShared) SetDescription(v string) {
	o.Description = &v
}

// GetCrossOriginPolicy returns the CrossOriginPolicy field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetCrossOriginPolicy() string {
	if o == nil || isNil(o.CrossOriginPolicy) {
		var ret string
		return ret
	}
	return *o.CrossOriginPolicy
}

// GetCrossOriginPolicyOk returns a tuple with the CrossOriginPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetCrossOriginPolicyOk() (*string, bool) {
	if o == nil || isNil(o.CrossOriginPolicy) {
    return nil, false
	}
	return o.CrossOriginPolicy, true
}

// HasCrossOriginPolicy returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasCrossOriginPolicy() bool {
	if o != nil && !isNil(o.CrossOriginPolicy) {
		return true
	}

	return false
}

// SetCrossOriginPolicy gets a reference to the given string and assigns it to the CrossOriginPolicy field.
func (o *LdapMappedScimHttpServletExtensionShared) SetCrossOriginPolicy(v string) {
	o.CrossOriginPolicy = &v
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetResponseHeader() []string {
	if o == nil || isNil(o.ResponseHeader) {
		var ret []string
		return ret
	}
	return o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetResponseHeaderOk() ([]string, bool) {
	if o == nil || isNil(o.ResponseHeader) {
    return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasResponseHeader() bool {
	if o != nil && !isNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given []string and assigns it to the ResponseHeader field.
func (o *LdapMappedScimHttpServletExtensionShared) SetResponseHeader(v []string) {
	o.ResponseHeader = v
}

// GetCorrelationIDResponseHeader returns the CorrelationIDResponseHeader field value if set, zero value otherwise.
func (o *LdapMappedScimHttpServletExtensionShared) GetCorrelationIDResponseHeader() string {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
		var ret string
		return ret
	}
	return *o.CorrelationIDResponseHeader
}

// GetCorrelationIDResponseHeaderOk returns a tuple with the CorrelationIDResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LdapMappedScimHttpServletExtensionShared) GetCorrelationIDResponseHeaderOk() (*string, bool) {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
    return nil, false
	}
	return o.CorrelationIDResponseHeader, true
}

// HasCorrelationIDResponseHeader returns a boolean if a field has been set.
func (o *LdapMappedScimHttpServletExtensionShared) HasCorrelationIDResponseHeader() bool {
	if o != nil && !isNil(o.CorrelationIDResponseHeader) {
		return true
	}

	return false
}

// SetCorrelationIDResponseHeader gets a reference to the given string and assigns it to the CorrelationIDResponseHeader field.
func (o *LdapMappedScimHttpServletExtensionShared) SetCorrelationIDResponseHeader(v string) {
	o.CorrelationIDResponseHeader = &v
}

func (o LdapMappedScimHttpServletExtensionShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.OAuthTokenHandler) {
		toSerialize["OAuthTokenHandler"] = o.OAuthTokenHandler
	}
	if !isNil(o.BasicAuthEnabled) {
		toSerialize["basicAuthEnabled"] = o.BasicAuthEnabled
	}
	if !isNil(o.IdentityMapper) {
		toSerialize["identityMapper"] = o.IdentityMapper
	}
	if !isNil(o.ResourceMappingFile) {
		toSerialize["resourceMappingFile"] = o.ResourceMappingFile
	}
	if !isNil(o.IncludeLDAPObjectclass) {
		toSerialize["includeLDAPObjectclass"] = o.IncludeLDAPObjectclass
	}
	if !isNil(o.ExcludeLDAPObjectclass) {
		toSerialize["excludeLDAPObjectclass"] = o.ExcludeLDAPObjectclass
	}
	if !isNil(o.IncludeLDAPBaseDN) {
		toSerialize["includeLDAPBaseDN"] = o.IncludeLDAPBaseDN
	}
	if !isNil(o.ExcludeLDAPBaseDN) {
		toSerialize["excludeLDAPBaseDN"] = o.ExcludeLDAPBaseDN
	}
	if !isNil(o.EntityTagLDAPAttribute) {
		toSerialize["entityTagLDAPAttribute"] = o.EntityTagLDAPAttribute
	}
	if true {
		toSerialize["baseContextPath"] = o.BaseContextPath
	}
	if true {
		toSerialize["temporaryDirectory"] = o.TemporaryDirectory
	}
	if true {
		toSerialize["temporaryDirectoryPermissions"] = o.TemporaryDirectoryPermissions
	}
	if !isNil(o.MaxResults) {
		toSerialize["maxResults"] = o.MaxResults
	}
	if !isNil(o.BulkMaxOperations) {
		toSerialize["bulkMaxOperations"] = o.BulkMaxOperations
	}
	if !isNil(o.BulkMaxPayloadSize) {
		toSerialize["bulkMaxPayloadSize"] = o.BulkMaxPayloadSize
	}
	if !isNil(o.BulkMaxConcurrentRequests) {
		toSerialize["bulkMaxConcurrentRequests"] = o.BulkMaxConcurrentRequests
	}
	if !isNil(o.DebugEnabled) {
		toSerialize["debugEnabled"] = o.DebugEnabled
	}
	if true {
		toSerialize["debugLevel"] = o.DebugLevel
	}
	if true {
		toSerialize["debugType"] = o.DebugType
	}
	if true {
		toSerialize["includeStackTrace"] = o.IncludeStackTrace
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CrossOriginPolicy) {
		toSerialize["crossOriginPolicy"] = o.CrossOriginPolicy
	}
	if !isNil(o.ResponseHeader) {
		toSerialize["responseHeader"] = o.ResponseHeader
	}
	if !isNil(o.CorrelationIDResponseHeader) {
		toSerialize["correlationIDResponseHeader"] = o.CorrelationIDResponseHeader
	}
	return json.Marshal(toSerialize)
}

type NullableLdapMappedScimHttpServletExtensionShared struct {
	value *LdapMappedScimHttpServletExtensionShared
	isSet bool
}

func (v NullableLdapMappedScimHttpServletExtensionShared) Get() *LdapMappedScimHttpServletExtensionShared {
	return v.value
}

func (v *NullableLdapMappedScimHttpServletExtensionShared) Set(val *LdapMappedScimHttpServletExtensionShared) {
	v.value = val
	v.isSet = true
}

func (v NullableLdapMappedScimHttpServletExtensionShared) IsSet() bool {
	return v.isSet
}

func (v *NullableLdapMappedScimHttpServletExtensionShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLdapMappedScimHttpServletExtensionShared(val *LdapMappedScimHttpServletExtensionShared) *NullableLdapMappedScimHttpServletExtensionShared {
	return &NullableLdapMappedScimHttpServletExtensionShared{value: val, isSet: true}
}

func (v NullableLdapMappedScimHttpServletExtensionShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLdapMappedScimHttpServletExtensionShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


