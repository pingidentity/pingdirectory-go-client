/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumrootDnDefaultRootPrivilegeNameProp Specifies the names of the privileges that root users will be granted by default.
type EnumrootDnDefaultRootPrivilegeNameProp string

// List of Enumroot-dn-defaultRootPrivilegeNameProp
const (
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_AUDIT_DATA_SECURITY                        EnumrootDnDefaultRootPrivilegeNameProp = "audit-data-security"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_BYPASS_ACL                                 EnumrootDnDefaultRootPrivilegeNameProp = "bypass-acl"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_BYPASS_READ_ACL                            EnumrootDnDefaultRootPrivilegeNameProp = "bypass-read-acl"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_MODIFY_ACL                                 EnumrootDnDefaultRootPrivilegeNameProp = "modify-acl"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_CONFIG_READ                                EnumrootDnDefaultRootPrivilegeNameProp = "config-read"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_CONFIG_WRITE                               EnumrootDnDefaultRootPrivilegeNameProp = "config-write"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_JMX_READ                                   EnumrootDnDefaultRootPrivilegeNameProp = "jmx-read"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_JMX_WRITE                                  EnumrootDnDefaultRootPrivilegeNameProp = "jmx-write"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_JMX_NOTIFY                                 EnumrootDnDefaultRootPrivilegeNameProp = "jmx-notify"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_LDIF_IMPORT                                EnumrootDnDefaultRootPrivilegeNameProp = "ldif-import"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_LDIF_EXPORT                                EnumrootDnDefaultRootPrivilegeNameProp = "ldif-export"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_BACKEND_BACKUP                             EnumrootDnDefaultRootPrivilegeNameProp = "backend-backup"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_BACKEND_RESTORE                            EnumrootDnDefaultRootPrivilegeNameProp = "backend-restore"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_SERVER_SHUTDOWN                            EnumrootDnDefaultRootPrivilegeNameProp = "server-shutdown"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_SERVER_RESTART                             EnumrootDnDefaultRootPrivilegeNameProp = "server-restart"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PROXIED_AUTH                               EnumrootDnDefaultRootPrivilegeNameProp = "proxied-auth"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_DISCONNECT_CLIENT                          EnumrootDnDefaultRootPrivilegeNameProp = "disconnect-client"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PASSWORD_RESET                             EnumrootDnDefaultRootPrivilegeNameProp = "password-reset"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_UPDATE_SCHEMA                              EnumrootDnDefaultRootPrivilegeNameProp = "update-schema"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PRIVILEGE_CHANGE                           EnumrootDnDefaultRootPrivilegeNameProp = "privilege-change"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_UNINDEXED_SEARCH                           EnumrootDnDefaultRootPrivilegeNameProp = "unindexed-search"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_UNINDEXED_SEARCH_WITH_CONTROL              EnumrootDnDefaultRootPrivilegeNameProp = "unindexed-search-with-control"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_BYPASS_PW_POLICY                           EnumrootDnDefaultRootPrivilegeNameProp = "bypass-pw-policy"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_LOCKDOWN_MODE                              EnumrootDnDefaultRootPrivilegeNameProp = "lockdown-mode"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_STREAM_VALUES                              EnumrootDnDefaultRootPrivilegeNameProp = "stream-values"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_THIRD_PARTY_TASK                           EnumrootDnDefaultRootPrivilegeNameProp = "third-party-task"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_USE_ADMIN_SESSION                          EnumrootDnDefaultRootPrivilegeNameProp = "use-admin-session"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_SOFT_DELETE_READ                           EnumrootDnDefaultRootPrivilegeNameProp = "soft-delete-read"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_METRICS_READ                               EnumrootDnDefaultRootPrivilegeNameProp = "metrics-read"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_REMOTE_LOG_READ                            EnumrootDnDefaultRootPrivilegeNameProp = "remote-log-read"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_MANAGE_TOPOLOGY                            EnumrootDnDefaultRootPrivilegeNameProp = "manage-topology"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES    EnumrootDnDefaultRootPrivilegeNameProp = "permit-get-password-policy-state-issues"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS            EnumrootDnDefaultRootPrivilegeNameProp = "permit-proxied-mschapv2-details"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumrootDnDefaultRootPrivilegeNameProp = "permit-externally-processed-authentication"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS         EnumrootDnDefaultRootPrivilegeNameProp = "permit-export-reversible-passwords"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumrootDnDefaultRootPrivilegeNameProp = "permit-forwarding-client-connection-policy"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_EXEC_TASK                                  EnumrootDnDefaultRootPrivilegeNameProp = "exec-task"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_COLLECT_SUPPORT_DATA                       EnumrootDnDefaultRootPrivilegeNameProp = "collect-support-data"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_FILE_SERVLET_ACCESS                        EnumrootDnDefaultRootPrivilegeNameProp = "file-servlet-access"
	ENUMROOTDNDEFAULTROOTPRIVILEGENAMEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST         EnumrootDnDefaultRootPrivilegeNameProp = "permit-replace-certificate-request"
)

// All allowed values of EnumrootDnDefaultRootPrivilegeNameProp enum
var AllowedEnumrootDnDefaultRootPrivilegeNamePropEnumValues = []EnumrootDnDefaultRootPrivilegeNameProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumrootDnDefaultRootPrivilegeNameProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumrootDnDefaultRootPrivilegeNameProp(value)
	for _, existing := range AllowedEnumrootDnDefaultRootPrivilegeNamePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumrootDnDefaultRootPrivilegeNameProp", value)
}

// NewEnumrootDnDefaultRootPrivilegeNamePropFromValue returns a pointer to a valid EnumrootDnDefaultRootPrivilegeNameProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumrootDnDefaultRootPrivilegeNamePropFromValue(v string) (*EnumrootDnDefaultRootPrivilegeNameProp, error) {
	ev := EnumrootDnDefaultRootPrivilegeNameProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumrootDnDefaultRootPrivilegeNameProp: valid values are %v", v, AllowedEnumrootDnDefaultRootPrivilegeNamePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumrootDnDefaultRootPrivilegeNameProp) IsValid() bool {
	for _, existing := range AllowedEnumrootDnDefaultRootPrivilegeNamePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumroot-dn-defaultRootPrivilegeNameProp value
func (v EnumrootDnDefaultRootPrivilegeNameProp) Ptr() *EnumrootDnDefaultRootPrivilegeNameProp {
	return &v
}

type NullableEnumrootDnDefaultRootPrivilegeNameProp struct {
	value *EnumrootDnDefaultRootPrivilegeNameProp
	isSet bool
}

func (v NullableEnumrootDnDefaultRootPrivilegeNameProp) Get() *EnumrootDnDefaultRootPrivilegeNameProp {
	return v.value
}

func (v *NullableEnumrootDnDefaultRootPrivilegeNameProp) Set(val *EnumrootDnDefaultRootPrivilegeNameProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumrootDnDefaultRootPrivilegeNameProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumrootDnDefaultRootPrivilegeNameProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumrootDnDefaultRootPrivilegeNameProp(val *EnumrootDnDefaultRootPrivilegeNameProp) *NullableEnumrootDnDefaultRootPrivilegeNameProp {
	return &NullableEnumrootDnDefaultRootPrivilegeNameProp{value: val, isSet: true}
}

func (v NullableEnumrootDnDefaultRootPrivilegeNameProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumrootDnDefaultRootPrivilegeNameProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
