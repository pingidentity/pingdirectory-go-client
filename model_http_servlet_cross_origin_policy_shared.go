/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// HttpServletCrossOriginPolicyShared struct for HttpServletCrossOriginPolicyShared
type HttpServletCrossOriginPolicyShared struct {
	Schemas []EnumhttpServletCrossOriginPolicySchemaUrn `json:"schemas,omitempty"`
	// A description for this HTTP Servlet Cross Origin Policy
	Description *string `json:"description,omitempty"`
	CorsAllowedMethods []string `json:"corsAllowedMethods,omitempty"`
	CorsAllowedOrigins []string `json:"corsAllowedOrigins,omitempty"`
	CorsExposedHeaders []string `json:"corsExposedHeaders,omitempty"`
	CorsAllowedHeaders []string `json:"corsAllowedHeaders,omitempty"`
	// The maximum amount of time that a preflight request can be cached by a client.
	CorsPreflightMaxAge *string `json:"corsPreflightMaxAge,omitempty"`
	// Indicates whether the servlet extension allows CORS requests with username/password credentials.
	CorsAllowCredentials *bool `json:"corsAllowCredentials,omitempty"`
}

// NewHttpServletCrossOriginPolicyShared instantiates a new HttpServletCrossOriginPolicyShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpServletCrossOriginPolicyShared() *HttpServletCrossOriginPolicyShared {
	this := HttpServletCrossOriginPolicyShared{}
	return &this
}

// NewHttpServletCrossOriginPolicySharedWithDefaults instantiates a new HttpServletCrossOriginPolicyShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpServletCrossOriginPolicySharedWithDefaults() *HttpServletCrossOriginPolicyShared {
	this := HttpServletCrossOriginPolicyShared{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetSchemas() []EnumhttpServletCrossOriginPolicySchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumhttpServletCrossOriginPolicySchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetSchemasOk() ([]EnumhttpServletCrossOriginPolicySchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumhttpServletCrossOriginPolicySchemaUrn and assigns it to the Schemas field.
func (o *HttpServletCrossOriginPolicyShared) SetSchemas(v []EnumhttpServletCrossOriginPolicySchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *HttpServletCrossOriginPolicyShared) SetDescription(v string) {
	o.Description = &v
}

// GetCorsAllowedMethods returns the CorsAllowedMethods field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedMethods() []string {
	if o == nil || isNil(o.CorsAllowedMethods) {
		var ret []string
		return ret
	}
	return o.CorsAllowedMethods
}

// GetCorsAllowedMethodsOk returns a tuple with the CorsAllowedMethods field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedMethodsOk() ([]string, bool) {
	if o == nil || isNil(o.CorsAllowedMethods) {
    return nil, false
	}
	return o.CorsAllowedMethods, true
}

// HasCorsAllowedMethods returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsAllowedMethods() bool {
	if o != nil && !isNil(o.CorsAllowedMethods) {
		return true
	}

	return false
}

// SetCorsAllowedMethods gets a reference to the given []string and assigns it to the CorsAllowedMethods field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsAllowedMethods(v []string) {
	o.CorsAllowedMethods = v
}

// GetCorsAllowedOrigins returns the CorsAllowedOrigins field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedOrigins() []string {
	if o == nil || isNil(o.CorsAllowedOrigins) {
		var ret []string
		return ret
	}
	return o.CorsAllowedOrigins
}

// GetCorsAllowedOriginsOk returns a tuple with the CorsAllowedOrigins field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedOriginsOk() ([]string, bool) {
	if o == nil || isNil(o.CorsAllowedOrigins) {
    return nil, false
	}
	return o.CorsAllowedOrigins, true
}

// HasCorsAllowedOrigins returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsAllowedOrigins() bool {
	if o != nil && !isNil(o.CorsAllowedOrigins) {
		return true
	}

	return false
}

// SetCorsAllowedOrigins gets a reference to the given []string and assigns it to the CorsAllowedOrigins field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsAllowedOrigins(v []string) {
	o.CorsAllowedOrigins = v
}

// GetCorsExposedHeaders returns the CorsExposedHeaders field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsExposedHeaders() []string {
	if o == nil || isNil(o.CorsExposedHeaders) {
		var ret []string
		return ret
	}
	return o.CorsExposedHeaders
}

// GetCorsExposedHeadersOk returns a tuple with the CorsExposedHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsExposedHeadersOk() ([]string, bool) {
	if o == nil || isNil(o.CorsExposedHeaders) {
    return nil, false
	}
	return o.CorsExposedHeaders, true
}

// HasCorsExposedHeaders returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsExposedHeaders() bool {
	if o != nil && !isNil(o.CorsExposedHeaders) {
		return true
	}

	return false
}

// SetCorsExposedHeaders gets a reference to the given []string and assigns it to the CorsExposedHeaders field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsExposedHeaders(v []string) {
	o.CorsExposedHeaders = v
}

// GetCorsAllowedHeaders returns the CorsAllowedHeaders field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedHeaders() []string {
	if o == nil || isNil(o.CorsAllowedHeaders) {
		var ret []string
		return ret
	}
	return o.CorsAllowedHeaders
}

// GetCorsAllowedHeadersOk returns a tuple with the CorsAllowedHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowedHeadersOk() ([]string, bool) {
	if o == nil || isNil(o.CorsAllowedHeaders) {
    return nil, false
	}
	return o.CorsAllowedHeaders, true
}

// HasCorsAllowedHeaders returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsAllowedHeaders() bool {
	if o != nil && !isNil(o.CorsAllowedHeaders) {
		return true
	}

	return false
}

// SetCorsAllowedHeaders gets a reference to the given []string and assigns it to the CorsAllowedHeaders field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsAllowedHeaders(v []string) {
	o.CorsAllowedHeaders = v
}

// GetCorsPreflightMaxAge returns the CorsPreflightMaxAge field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsPreflightMaxAge() string {
	if o == nil || isNil(o.CorsPreflightMaxAge) {
		var ret string
		return ret
	}
	return *o.CorsPreflightMaxAge
}

// GetCorsPreflightMaxAgeOk returns a tuple with the CorsPreflightMaxAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsPreflightMaxAgeOk() (*string, bool) {
	if o == nil || isNil(o.CorsPreflightMaxAge) {
    return nil, false
	}
	return o.CorsPreflightMaxAge, true
}

// HasCorsPreflightMaxAge returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsPreflightMaxAge() bool {
	if o != nil && !isNil(o.CorsPreflightMaxAge) {
		return true
	}

	return false
}

// SetCorsPreflightMaxAge gets a reference to the given string and assigns it to the CorsPreflightMaxAge field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsPreflightMaxAge(v string) {
	o.CorsPreflightMaxAge = &v
}

// GetCorsAllowCredentials returns the CorsAllowCredentials field value if set, zero value otherwise.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowCredentials() bool {
	if o == nil || isNil(o.CorsAllowCredentials) {
		var ret bool
		return ret
	}
	return *o.CorsAllowCredentials
}

// GetCorsAllowCredentialsOk returns a tuple with the CorsAllowCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpServletCrossOriginPolicyShared) GetCorsAllowCredentialsOk() (*bool, bool) {
	if o == nil || isNil(o.CorsAllowCredentials) {
    return nil, false
	}
	return o.CorsAllowCredentials, true
}

// HasCorsAllowCredentials returns a boolean if a field has been set.
func (o *HttpServletCrossOriginPolicyShared) HasCorsAllowCredentials() bool {
	if o != nil && !isNil(o.CorsAllowCredentials) {
		return true
	}

	return false
}

// SetCorsAllowCredentials gets a reference to the given bool and assigns it to the CorsAllowCredentials field.
func (o *HttpServletCrossOriginPolicyShared) SetCorsAllowCredentials(v bool) {
	o.CorsAllowCredentials = &v
}

func (o HttpServletCrossOriginPolicyShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CorsAllowedMethods) {
		toSerialize["corsAllowedMethods"] = o.CorsAllowedMethods
	}
	if !isNil(o.CorsAllowedOrigins) {
		toSerialize["corsAllowedOrigins"] = o.CorsAllowedOrigins
	}
	if !isNil(o.CorsExposedHeaders) {
		toSerialize["corsExposedHeaders"] = o.CorsExposedHeaders
	}
	if !isNil(o.CorsAllowedHeaders) {
		toSerialize["corsAllowedHeaders"] = o.CorsAllowedHeaders
	}
	if !isNil(o.CorsPreflightMaxAge) {
		toSerialize["corsPreflightMaxAge"] = o.CorsPreflightMaxAge
	}
	if !isNil(o.CorsAllowCredentials) {
		toSerialize["corsAllowCredentials"] = o.CorsAllowCredentials
	}
	return json.Marshal(toSerialize)
}

type NullableHttpServletCrossOriginPolicyShared struct {
	value *HttpServletCrossOriginPolicyShared
	isSet bool
}

func (v NullableHttpServletCrossOriginPolicyShared) Get() *HttpServletCrossOriginPolicyShared {
	return v.value
}

func (v *NullableHttpServletCrossOriginPolicyShared) Set(val *HttpServletCrossOriginPolicyShared) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpServletCrossOriginPolicyShared) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpServletCrossOriginPolicyShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpServletCrossOriginPolicyShared(val *HttpServletCrossOriginPolicyShared) *NullableHttpServletCrossOriginPolicyShared {
	return &NullableHttpServletCrossOriginPolicyShared{value: val, isSet: true}
}

func (v NullableHttpServletCrossOriginPolicyShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpServletCrossOriginPolicyShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


