/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumlogPublisherSoftDeleteEntryAuditBehaviorProp Specifies the audit behavior for delete and modify operations on soft-deleted entries.
type EnumlogPublisherSoftDeleteEntryAuditBehaviorProp string

// List of Enumlog-publisher-softDeleteEntryAuditBehaviorProp
const (
	ENUMLOGPUBLISHERSOFTDELETEENTRYAUDITBEHAVIORPROP_INCLUDED EnumlogPublisherSoftDeleteEntryAuditBehaviorProp = "included"
	ENUMLOGPUBLISHERSOFTDELETEENTRYAUDITBEHAVIORPROP_EXCLUDED EnumlogPublisherSoftDeleteEntryAuditBehaviorProp = "excluded"
)

// All allowed values of EnumlogPublisherSoftDeleteEntryAuditBehaviorProp enum
var AllowedEnumlogPublisherSoftDeleteEntryAuditBehaviorPropEnumValues = []EnumlogPublisherSoftDeleteEntryAuditBehaviorProp{
	"included",
	"excluded",
}

func (v *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumlogPublisherSoftDeleteEntryAuditBehaviorProp(value)
	for _, existing := range AllowedEnumlogPublisherSoftDeleteEntryAuditBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumlogPublisherSoftDeleteEntryAuditBehaviorProp", value)
}

// NewEnumlogPublisherSoftDeleteEntryAuditBehaviorPropFromValue returns a pointer to a valid EnumlogPublisherSoftDeleteEntryAuditBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumlogPublisherSoftDeleteEntryAuditBehaviorPropFromValue(v string) (*EnumlogPublisherSoftDeleteEntryAuditBehaviorProp, error) {
	ev := EnumlogPublisherSoftDeleteEntryAuditBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumlogPublisherSoftDeleteEntryAuditBehaviorProp: valid values are %v", v, AllowedEnumlogPublisherSoftDeleteEntryAuditBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumlogPublisherSoftDeleteEntryAuditBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumlog-publisher-softDeleteEntryAuditBehaviorProp value
func (v EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) Ptr() *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp {
	return &v
}

type NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp struct {
	value *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp
	isSet bool
}

func (v NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) Get() *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp {
	return v.value
}

func (v *NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) Set(val *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp(val *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) *NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp {
	return &NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumlogPublisherSoftDeleteEntryAuditBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

