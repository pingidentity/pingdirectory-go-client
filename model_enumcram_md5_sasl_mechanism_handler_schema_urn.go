/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumcramMd5SaslMechanismHandlerSchemaUrn the model 'EnumcramMd5SaslMechanismHandlerSchemaUrn'
type EnumcramMd5SaslMechanismHandlerSchemaUrn string

// List of Enumcram-md5-sasl-mechanism-handlerSchemaUrn
const (
	URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERCRAM_MD5 EnumcramMd5SaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5"
)

// All allowed values of EnumcramMd5SaslMechanismHandlerSchemaUrn enum
var AllowedEnumcramMd5SaslMechanismHandlerSchemaUrnEnumValues = []EnumcramMd5SaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5",
}

func (v *EnumcramMd5SaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumcramMd5SaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumcramMd5SaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumcramMd5SaslMechanismHandlerSchemaUrn", value)
}

// NewEnumcramMd5SaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumcramMd5SaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumcramMd5SaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumcramMd5SaslMechanismHandlerSchemaUrn, error) {
	ev := EnumcramMd5SaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumcramMd5SaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumcramMd5SaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumcramMd5SaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumcramMd5SaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumcram-md5-sasl-mechanism-handlerSchemaUrn value
func (v EnumcramMd5SaslMechanismHandlerSchemaUrn) Ptr() *EnumcramMd5SaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumcramMd5SaslMechanismHandlerSchemaUrn struct {
	value *EnumcramMd5SaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) Get() *EnumcramMd5SaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) Set(val *EnumcramMd5SaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumcramMd5SaslMechanismHandlerSchemaUrn(val *EnumcramMd5SaslMechanismHandlerSchemaUrn) *NullableEnumcramMd5SaslMechanismHandlerSchemaUrn {
	return &NullableEnumcramMd5SaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumcramMd5SaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

