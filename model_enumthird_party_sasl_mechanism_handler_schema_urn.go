/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumthirdPartySaslMechanismHandlerSchemaUrn the model 'EnumthirdPartySaslMechanismHandlerSchemaUrn'
type EnumthirdPartySaslMechanismHandlerSchemaUrn string

// List of Enumthird-party-sasl-mechanism-handlerSchemaUrn
const (
	URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERTHIRD_PARTY EnumthirdPartySaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party"
)

// All allowed values of EnumthirdPartySaslMechanismHandlerSchemaUrn enum
var AllowedEnumthirdPartySaslMechanismHandlerSchemaUrnEnumValues = []EnumthirdPartySaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party",
}

func (v *EnumthirdPartySaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumthirdPartySaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumthirdPartySaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumthirdPartySaslMechanismHandlerSchemaUrn", value)
}

// NewEnumthirdPartySaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumthirdPartySaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumthirdPartySaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumthirdPartySaslMechanismHandlerSchemaUrn, error) {
	ev := EnumthirdPartySaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumthirdPartySaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumthirdPartySaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumthirdPartySaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumthirdPartySaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumthird-party-sasl-mechanism-handlerSchemaUrn value
func (v EnumthirdPartySaslMechanismHandlerSchemaUrn) Ptr() *EnumthirdPartySaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumthirdPartySaslMechanismHandlerSchemaUrn struct {
	value *EnumthirdPartySaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) Get() *EnumthirdPartySaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) Set(val *EnumthirdPartySaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumthirdPartySaslMechanismHandlerSchemaUrn(val *EnumthirdPartySaslMechanismHandlerSchemaUrn) *NullableEnumthirdPartySaslMechanismHandlerSchemaUrn {
	return &NullableEnumthirdPartySaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumthirdPartySaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

