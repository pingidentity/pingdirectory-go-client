/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// RecurringTaskChainResponse struct for RecurringTaskChainResponse
type RecurringTaskChainResponse struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Recurring Task Chain
	Id string `json:"id"`
	Schemas []EnumrecurringTaskChainSchemaUrn `json:"schemas,omitempty"`
	// A description for this Recurring Task Chain
	Description *string `json:"description,omitempty"`
	// Indicates whether this Recurring Task Chain is enabled for use. Recurring Task Chains that are disabled will not have any new instances scheduled, but instances that are already scheduled will be preserved. Those instances may be manually canceled if desired.
	Enabled bool `json:"enabled"`
	// The set of recurring tasks that make up this chain. At least one value must be provided. If multiple values are given, then the task instances will be invoked in the order in which they are listed.
	RecurringTask []string `json:"recurringTask"`
	ScheduledMonth []EnumrecurringTaskChainScheduledMonthProp `json:"scheduledMonth"`
	ScheduledDateSelectionType EnumrecurringTaskChainScheduledDateSelectionTypeProp `json:"scheduledDateSelectionType"`
	ScheduledDayOfTheWeek []EnumrecurringTaskChainScheduledDayOfTheWeekProp `json:"scheduledDayOfTheWeek,omitempty"`
	ScheduledDayOfTheMonth []EnumrecurringTaskChainScheduledDayOfTheMonthProp `json:"scheduledDayOfTheMonth,omitempty"`
	// The time of day at which instances of the Recurring Task Chain should be eligible to start running. Values should be in the format HH:MM (where HH is a two-digit representation of the hour of the day, between 00 and 23, inclusive), and MM is a two-digit representation of the minute of the hour (between 00 and 59, inclusive). Alternately, the value can be in the form *:MM, which indicates that the task should be eligible to start at the specified minute of every hour. At least one value must be provided, but multiple values may be given to indicate multiple start times within the same day.
	ScheduledTimeOfDay []string `json:"scheduledTimeOfDay"`
	// The time zone that will be used to interpret the scheduled-time-of-day values. If no value is provided, then the JVM's default time zone will be used.
	TimeZone *string `json:"timeZone,omitempty"`
	InterruptedByShutdownBehavior *EnumrecurringTaskChainInterruptedByShutdownBehaviorProp `json:"interruptedByShutdownBehavior,omitempty"`
	ServerOfflineAtStartTimeBehavior *EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp `json:"serverOfflineAtStartTimeBehavior,omitempty"`
}

// NewRecurringTaskChainResponse instantiates a new RecurringTaskChainResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRecurringTaskChainResponse(id string, enabled bool, recurringTask []string, scheduledMonth []EnumrecurringTaskChainScheduledMonthProp, scheduledDateSelectionType EnumrecurringTaskChainScheduledDateSelectionTypeProp, scheduledTimeOfDay []string) *RecurringTaskChainResponse {
	this := RecurringTaskChainResponse{}
	this.Id = id
	this.Enabled = enabled
	this.RecurringTask = recurringTask
	this.ScheduledMonth = scheduledMonth
	this.ScheduledDateSelectionType = scheduledDateSelectionType
	this.ScheduledTimeOfDay = scheduledTimeOfDay
	return &this
}

// NewRecurringTaskChainResponseWithDefaults instantiates a new RecurringTaskChainResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRecurringTaskChainResponseWithDefaults() *RecurringTaskChainResponse {
	this := RecurringTaskChainResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *RecurringTaskChainResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
    return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *RecurringTaskChainResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *RecurringTaskChainResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RecurringTaskChainResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetSchemas() []EnumrecurringTaskChainSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumrecurringTaskChainSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetSchemasOk() ([]EnumrecurringTaskChainSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumrecurringTaskChainSchemaUrn and assigns it to the Schemas field.
func (o *RecurringTaskChainResponse) SetSchemas(v []EnumrecurringTaskChainSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RecurringTaskChainResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *RecurringTaskChainResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RecurringTaskChainResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetRecurringTask returns the RecurringTask field value
func (o *RecurringTaskChainResponse) GetRecurringTask() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RecurringTask
}

// GetRecurringTaskOk returns a tuple with the RecurringTask field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetRecurringTaskOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RecurringTask, true
}

// SetRecurringTask sets field value
func (o *RecurringTaskChainResponse) SetRecurringTask(v []string) {
	o.RecurringTask = v
}

// GetScheduledMonth returns the ScheduledMonth field value
func (o *RecurringTaskChainResponse) GetScheduledMonth() []EnumrecurringTaskChainScheduledMonthProp {
	if o == nil {
		var ret []EnumrecurringTaskChainScheduledMonthProp
		return ret
	}

	return o.ScheduledMonth
}

// GetScheduledMonthOk returns a tuple with the ScheduledMonth field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetScheduledMonthOk() ([]EnumrecurringTaskChainScheduledMonthProp, bool) {
	if o == nil {
    return nil, false
	}
	return o.ScheduledMonth, true
}

// SetScheduledMonth sets field value
func (o *RecurringTaskChainResponse) SetScheduledMonth(v []EnumrecurringTaskChainScheduledMonthProp) {
	o.ScheduledMonth = v
}

// GetScheduledDateSelectionType returns the ScheduledDateSelectionType field value
func (o *RecurringTaskChainResponse) GetScheduledDateSelectionType() EnumrecurringTaskChainScheduledDateSelectionTypeProp {
	if o == nil {
		var ret EnumrecurringTaskChainScheduledDateSelectionTypeProp
		return ret
	}

	return o.ScheduledDateSelectionType
}

// GetScheduledDateSelectionTypeOk returns a tuple with the ScheduledDateSelectionType field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetScheduledDateSelectionTypeOk() (*EnumrecurringTaskChainScheduledDateSelectionTypeProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ScheduledDateSelectionType, true
}

// SetScheduledDateSelectionType sets field value
func (o *RecurringTaskChainResponse) SetScheduledDateSelectionType(v EnumrecurringTaskChainScheduledDateSelectionTypeProp) {
	o.ScheduledDateSelectionType = v
}

// GetScheduledDayOfTheWeek returns the ScheduledDayOfTheWeek field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetScheduledDayOfTheWeek() []EnumrecurringTaskChainScheduledDayOfTheWeekProp {
	if o == nil || isNil(o.ScheduledDayOfTheWeek) {
		var ret []EnumrecurringTaskChainScheduledDayOfTheWeekProp
		return ret
	}
	return o.ScheduledDayOfTheWeek
}

// GetScheduledDayOfTheWeekOk returns a tuple with the ScheduledDayOfTheWeek field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetScheduledDayOfTheWeekOk() ([]EnumrecurringTaskChainScheduledDayOfTheWeekProp, bool) {
	if o == nil || isNil(o.ScheduledDayOfTheWeek) {
    return nil, false
	}
	return o.ScheduledDayOfTheWeek, true
}

// HasScheduledDayOfTheWeek returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasScheduledDayOfTheWeek() bool {
	if o != nil && !isNil(o.ScheduledDayOfTheWeek) {
		return true
	}

	return false
}

// SetScheduledDayOfTheWeek gets a reference to the given []EnumrecurringTaskChainScheduledDayOfTheWeekProp and assigns it to the ScheduledDayOfTheWeek field.
func (o *RecurringTaskChainResponse) SetScheduledDayOfTheWeek(v []EnumrecurringTaskChainScheduledDayOfTheWeekProp) {
	o.ScheduledDayOfTheWeek = v
}

// GetScheduledDayOfTheMonth returns the ScheduledDayOfTheMonth field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetScheduledDayOfTheMonth() []EnumrecurringTaskChainScheduledDayOfTheMonthProp {
	if o == nil || isNil(o.ScheduledDayOfTheMonth) {
		var ret []EnumrecurringTaskChainScheduledDayOfTheMonthProp
		return ret
	}
	return o.ScheduledDayOfTheMonth
}

// GetScheduledDayOfTheMonthOk returns a tuple with the ScheduledDayOfTheMonth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetScheduledDayOfTheMonthOk() ([]EnumrecurringTaskChainScheduledDayOfTheMonthProp, bool) {
	if o == nil || isNil(o.ScheduledDayOfTheMonth) {
    return nil, false
	}
	return o.ScheduledDayOfTheMonth, true
}

// HasScheduledDayOfTheMonth returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasScheduledDayOfTheMonth() bool {
	if o != nil && !isNil(o.ScheduledDayOfTheMonth) {
		return true
	}

	return false
}

// SetScheduledDayOfTheMonth gets a reference to the given []EnumrecurringTaskChainScheduledDayOfTheMonthProp and assigns it to the ScheduledDayOfTheMonth field.
func (o *RecurringTaskChainResponse) SetScheduledDayOfTheMonth(v []EnumrecurringTaskChainScheduledDayOfTheMonthProp) {
	o.ScheduledDayOfTheMonth = v
}

// GetScheduledTimeOfDay returns the ScheduledTimeOfDay field value
func (o *RecurringTaskChainResponse) GetScheduledTimeOfDay() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ScheduledTimeOfDay
}

// GetScheduledTimeOfDayOk returns a tuple with the ScheduledTimeOfDay field value
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetScheduledTimeOfDayOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ScheduledTimeOfDay, true
}

// SetScheduledTimeOfDay sets field value
func (o *RecurringTaskChainResponse) SetScheduledTimeOfDay(v []string) {
	o.ScheduledTimeOfDay = v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetTimeZone() string {
	if o == nil || isNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetTimeZoneOk() (*string, bool) {
	if o == nil || isNil(o.TimeZone) {
    return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasTimeZone() bool {
	if o != nil && !isNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *RecurringTaskChainResponse) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetInterruptedByShutdownBehavior returns the InterruptedByShutdownBehavior field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetInterruptedByShutdownBehavior() EnumrecurringTaskChainInterruptedByShutdownBehaviorProp {
	if o == nil || isNil(o.InterruptedByShutdownBehavior) {
		var ret EnumrecurringTaskChainInterruptedByShutdownBehaviorProp
		return ret
	}
	return *o.InterruptedByShutdownBehavior
}

// GetInterruptedByShutdownBehaviorOk returns a tuple with the InterruptedByShutdownBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetInterruptedByShutdownBehaviorOk() (*EnumrecurringTaskChainInterruptedByShutdownBehaviorProp, bool) {
	if o == nil || isNil(o.InterruptedByShutdownBehavior) {
    return nil, false
	}
	return o.InterruptedByShutdownBehavior, true
}

// HasInterruptedByShutdownBehavior returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasInterruptedByShutdownBehavior() bool {
	if o != nil && !isNil(o.InterruptedByShutdownBehavior) {
		return true
	}

	return false
}

// SetInterruptedByShutdownBehavior gets a reference to the given EnumrecurringTaskChainInterruptedByShutdownBehaviorProp and assigns it to the InterruptedByShutdownBehavior field.
func (o *RecurringTaskChainResponse) SetInterruptedByShutdownBehavior(v EnumrecurringTaskChainInterruptedByShutdownBehaviorProp) {
	o.InterruptedByShutdownBehavior = &v
}

// GetServerOfflineAtStartTimeBehavior returns the ServerOfflineAtStartTimeBehavior field value if set, zero value otherwise.
func (o *RecurringTaskChainResponse) GetServerOfflineAtStartTimeBehavior() EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp {
	if o == nil || isNil(o.ServerOfflineAtStartTimeBehavior) {
		var ret EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp
		return ret
	}
	return *o.ServerOfflineAtStartTimeBehavior
}

// GetServerOfflineAtStartTimeBehaviorOk returns a tuple with the ServerOfflineAtStartTimeBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RecurringTaskChainResponse) GetServerOfflineAtStartTimeBehaviorOk() (*EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp, bool) {
	if o == nil || isNil(o.ServerOfflineAtStartTimeBehavior) {
    return nil, false
	}
	return o.ServerOfflineAtStartTimeBehavior, true
}

// HasServerOfflineAtStartTimeBehavior returns a boolean if a field has been set.
func (o *RecurringTaskChainResponse) HasServerOfflineAtStartTimeBehavior() bool {
	if o != nil && !isNil(o.ServerOfflineAtStartTimeBehavior) {
		return true
	}

	return false
}

// SetServerOfflineAtStartTimeBehavior gets a reference to the given EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp and assigns it to the ServerOfflineAtStartTimeBehavior field.
func (o *RecurringTaskChainResponse) SetServerOfflineAtStartTimeBehavior(v EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp) {
	o.ServerOfflineAtStartTimeBehavior = &v
}

func (o RecurringTaskChainResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["recurringTask"] = o.RecurringTask
	}
	if true {
		toSerialize["scheduledMonth"] = o.ScheduledMonth
	}
	if true {
		toSerialize["scheduledDateSelectionType"] = o.ScheduledDateSelectionType
	}
	if !isNil(o.ScheduledDayOfTheWeek) {
		toSerialize["scheduledDayOfTheWeek"] = o.ScheduledDayOfTheWeek
	}
	if !isNil(o.ScheduledDayOfTheMonth) {
		toSerialize["scheduledDayOfTheMonth"] = o.ScheduledDayOfTheMonth
	}
	if true {
		toSerialize["scheduledTimeOfDay"] = o.ScheduledTimeOfDay
	}
	if !isNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !isNil(o.InterruptedByShutdownBehavior) {
		toSerialize["interruptedByShutdownBehavior"] = o.InterruptedByShutdownBehavior
	}
	if !isNil(o.ServerOfflineAtStartTimeBehavior) {
		toSerialize["serverOfflineAtStartTimeBehavior"] = o.ServerOfflineAtStartTimeBehavior
	}
	return json.Marshal(toSerialize)
}

type NullableRecurringTaskChainResponse struct {
	value *RecurringTaskChainResponse
	isSet bool
}

func (v NullableRecurringTaskChainResponse) Get() *RecurringTaskChainResponse {
	return v.value
}

func (v *NullableRecurringTaskChainResponse) Set(val *RecurringTaskChainResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRecurringTaskChainResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRecurringTaskChainResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRecurringTaskChainResponse(val *RecurringTaskChainResponse) *NullableRecurringTaskChainResponse {
	return &NullableRecurringTaskChainResponse{value: val, isSet: true}
}

func (v NullableRecurringTaskChainResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRecurringTaskChainResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


