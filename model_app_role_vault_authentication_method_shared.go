/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AppRoleVaultAuthenticationMethodShared struct for AppRoleVaultAuthenticationMethodShared
type AppRoleVaultAuthenticationMethodShared struct {
	Schemas []EnumappRoleVaultAuthenticationMethodSchemaUrn `json:"schemas"`
	// The role ID for the AppRole to authenticate.
	VaultRoleID string `json:"vaultRoleID"`
	// The secret ID for the AppRole to authenticate.
	VaultSecretID string `json:"vaultSecretID"`
	// The name used when enabling the desired AppRole authentication mechanism in the Vault server.
	LoginMechanismName *string `json:"loginMechanismName,omitempty"`
	// A description for this Vault Authentication Method
	Description *string `json:"description,omitempty"`
}

// NewAppRoleVaultAuthenticationMethodShared instantiates a new AppRoleVaultAuthenticationMethodShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppRoleVaultAuthenticationMethodShared(schemas []EnumappRoleVaultAuthenticationMethodSchemaUrn, vaultRoleID string, vaultSecretID string) *AppRoleVaultAuthenticationMethodShared {
	this := AppRoleVaultAuthenticationMethodShared{}
	this.Schemas = schemas
	this.VaultRoleID = vaultRoleID
	this.VaultSecretID = vaultSecretID
	return &this
}

// NewAppRoleVaultAuthenticationMethodSharedWithDefaults instantiates a new AppRoleVaultAuthenticationMethodShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppRoleVaultAuthenticationMethodSharedWithDefaults() *AppRoleVaultAuthenticationMethodShared {
	this := AppRoleVaultAuthenticationMethodShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AppRoleVaultAuthenticationMethodShared) GetSchemas() []EnumappRoleVaultAuthenticationMethodSchemaUrn {
	if o == nil {
		var ret []EnumappRoleVaultAuthenticationMethodSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AppRoleVaultAuthenticationMethodShared) GetSchemasOk() ([]EnumappRoleVaultAuthenticationMethodSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AppRoleVaultAuthenticationMethodShared) SetSchemas(v []EnumappRoleVaultAuthenticationMethodSchemaUrn) {
	o.Schemas = v
}

// GetVaultRoleID returns the VaultRoleID field value
func (o *AppRoleVaultAuthenticationMethodShared) GetVaultRoleID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultRoleID
}

// GetVaultRoleIDOk returns a tuple with the VaultRoleID field value
// and a boolean to check if the value has been set.
func (o *AppRoleVaultAuthenticationMethodShared) GetVaultRoleIDOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VaultRoleID, true
}

// SetVaultRoleID sets field value
func (o *AppRoleVaultAuthenticationMethodShared) SetVaultRoleID(v string) {
	o.VaultRoleID = v
}

// GetVaultSecretID returns the VaultSecretID field value
func (o *AppRoleVaultAuthenticationMethodShared) GetVaultSecretID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultSecretID
}

// GetVaultSecretIDOk returns a tuple with the VaultSecretID field value
// and a boolean to check if the value has been set.
func (o *AppRoleVaultAuthenticationMethodShared) GetVaultSecretIDOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VaultSecretID, true
}

// SetVaultSecretID sets field value
func (o *AppRoleVaultAuthenticationMethodShared) SetVaultSecretID(v string) {
	o.VaultSecretID = v
}

// GetLoginMechanismName returns the LoginMechanismName field value if set, zero value otherwise.
func (o *AppRoleVaultAuthenticationMethodShared) GetLoginMechanismName() string {
	if o == nil || isNil(o.LoginMechanismName) {
		var ret string
		return ret
	}
	return *o.LoginMechanismName
}

// GetLoginMechanismNameOk returns a tuple with the LoginMechanismName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRoleVaultAuthenticationMethodShared) GetLoginMechanismNameOk() (*string, bool) {
	if o == nil || isNil(o.LoginMechanismName) {
    return nil, false
	}
	return o.LoginMechanismName, true
}

// HasLoginMechanismName returns a boolean if a field has been set.
func (o *AppRoleVaultAuthenticationMethodShared) HasLoginMechanismName() bool {
	if o != nil && !isNil(o.LoginMechanismName) {
		return true
	}

	return false
}

// SetLoginMechanismName gets a reference to the given string and assigns it to the LoginMechanismName field.
func (o *AppRoleVaultAuthenticationMethodShared) SetLoginMechanismName(v string) {
	o.LoginMechanismName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AppRoleVaultAuthenticationMethodShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppRoleVaultAuthenticationMethodShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AppRoleVaultAuthenticationMethodShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AppRoleVaultAuthenticationMethodShared) SetDescription(v string) {
	o.Description = &v
}

func (o AppRoleVaultAuthenticationMethodShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["vaultRoleID"] = o.VaultRoleID
	}
	if true {
		toSerialize["vaultSecretID"] = o.VaultSecretID
	}
	if !isNil(o.LoginMechanismName) {
		toSerialize["loginMechanismName"] = o.LoginMechanismName
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableAppRoleVaultAuthenticationMethodShared struct {
	value *AppRoleVaultAuthenticationMethodShared
	isSet bool
}

func (v NullableAppRoleVaultAuthenticationMethodShared) Get() *AppRoleVaultAuthenticationMethodShared {
	return v.value
}

func (v *NullableAppRoleVaultAuthenticationMethodShared) Set(val *AppRoleVaultAuthenticationMethodShared) {
	v.value = val
	v.isSet = true
}

func (v NullableAppRoleVaultAuthenticationMethodShared) IsSet() bool {
	return v.isSet
}

func (v *NullableAppRoleVaultAuthenticationMethodShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppRoleVaultAuthenticationMethodShared(val *AppRoleVaultAuthenticationMethodShared) *NullableAppRoleVaultAuthenticationMethodShared {
	return &NullableAppRoleVaultAuthenticationMethodShared{value: val, isSet: true}
}

func (v NullableAppRoleVaultAuthenticationMethodShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppRoleVaultAuthenticationMethodShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


