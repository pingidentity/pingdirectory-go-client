/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddTopologyAdminUserRequest struct for AddTopologyAdminUserRequest
type AddTopologyAdminUserRequest struct {
	// Name of the new Topology Admin User
	UserName string `json:"userName"`
	Schemas []EnumtopologyAdminUserSchemaUrn `json:"schemas,omitempty"`
}

// NewAddTopologyAdminUserRequest instantiates a new AddTopologyAdminUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTopologyAdminUserRequest(userName string) *AddTopologyAdminUserRequest {
	this := AddTopologyAdminUserRequest{}
	this.UserName = userName
	return &this
}

// NewAddTopologyAdminUserRequestWithDefaults instantiates a new AddTopologyAdminUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTopologyAdminUserRequestWithDefaults() *AddTopologyAdminUserRequest {
	this := AddTopologyAdminUserRequest{}
	return &this
}

// GetUserName returns the UserName field value
func (o *AddTopologyAdminUserRequest) GetUserName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserName
}

// GetUserNameOk returns a tuple with the UserName field value
// and a boolean to check if the value has been set.
func (o *AddTopologyAdminUserRequest) GetUserNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.UserName, true
}

// SetUserName sets field value
func (o *AddTopologyAdminUserRequest) SetUserName(v string) {
	o.UserName = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddTopologyAdminUserRequest) GetSchemas() []EnumtopologyAdminUserSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumtopologyAdminUserSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTopologyAdminUserRequest) GetSchemasOk() ([]EnumtopologyAdminUserSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddTopologyAdminUserRequest) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumtopologyAdminUserSchemaUrn and assigns it to the Schemas field.
func (o *AddTopologyAdminUserRequest) SetSchemas(v []EnumtopologyAdminUserSchemaUrn) {
	o.Schemas = v
}

func (o AddTopologyAdminUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["userName"] = o.UserName
	}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	return json.Marshal(toSerialize)
}

type NullableAddTopologyAdminUserRequest struct {
	value *AddTopologyAdminUserRequest
	isSet bool
}

func (v NullableAddTopologyAdminUserRequest) Get() *AddTopologyAdminUserRequest {
	return v.value
}

func (v *NullableAddTopologyAdminUserRequest) Set(val *AddTopologyAdminUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTopologyAdminUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTopologyAdminUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTopologyAdminUserRequest(val *AddTopologyAdminUserRequest) *NullableAddTopologyAdminUserRequest {
	return &NullableAddTopologyAdminUserRequest{value: val, isSet: true}
}

func (v NullableAddTopologyAdminUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTopologyAdminUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


