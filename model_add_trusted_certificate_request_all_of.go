/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddTrustedCertificateRequestAllOf struct for AddTrustedCertificateRequestAllOf
type AddTrustedCertificateRequestAllOf struct {
	// Name of the new Trusted Certificate
	CertificateName string `json:"certificateName"`
}

// NewAddTrustedCertificateRequestAllOf instantiates a new AddTrustedCertificateRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTrustedCertificateRequestAllOf(certificateName string) *AddTrustedCertificateRequestAllOf {
	this := AddTrustedCertificateRequestAllOf{}
	this.CertificateName = certificateName
	return &this
}

// NewAddTrustedCertificateRequestAllOfWithDefaults instantiates a new AddTrustedCertificateRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTrustedCertificateRequestAllOfWithDefaults() *AddTrustedCertificateRequestAllOf {
	this := AddTrustedCertificateRequestAllOf{}
	return &this
}

// GetCertificateName returns the CertificateName field value
func (o *AddTrustedCertificateRequestAllOf) GetCertificateName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CertificateName
}

// GetCertificateNameOk returns a tuple with the CertificateName field value
// and a boolean to check if the value has been set.
func (o *AddTrustedCertificateRequestAllOf) GetCertificateNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.CertificateName, true
}

// SetCertificateName sets field value
func (o *AddTrustedCertificateRequestAllOf) SetCertificateName(v string) {
	o.CertificateName = v
}

func (o AddTrustedCertificateRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificateName"] = o.CertificateName
	}
	return json.Marshal(toSerialize)
}

type NullableAddTrustedCertificateRequestAllOf struct {
	value *AddTrustedCertificateRequestAllOf
	isSet bool
}

func (v NullableAddTrustedCertificateRequestAllOf) Get() *AddTrustedCertificateRequestAllOf {
	return v.value
}

func (v *NullableAddTrustedCertificateRequestAllOf) Set(val *AddTrustedCertificateRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTrustedCertificateRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTrustedCertificateRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTrustedCertificateRequestAllOf(val *AddTrustedCertificateRequestAllOf) *NullableAddTrustedCertificateRequestAllOf {
	return &NullableAddTrustedCertificateRequestAllOf{value: val, isSet: true}
}

func (v NullableAddTrustedCertificateRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTrustedCertificateRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


