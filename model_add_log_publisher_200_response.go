/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddLogPublisher200Response - struct for AddLogPublisher200Response
type AddLogPublisher200Response struct {
	AdminAlertAccessLogPublisherResponse *AdminAlertAccessLogPublisherResponse
	CommonLogFileHttpOperationLogPublisherResponse *CommonLogFileHttpOperationLogPublisherResponse
	ConsoleJsonAuditLogPublisherResponse *ConsoleJsonAuditLogPublisherResponse
	ConsoleJsonHttpOperationLogPublisherResponse *ConsoleJsonHttpOperationLogPublisherResponse
	DebugAccessLogPublisherResponse *DebugAccessLogPublisherResponse
	DetailedHttpOperationLogPublisherResponse *DetailedHttpOperationLogPublisherResponse
	FileBasedAccessLogPublisherResponse *FileBasedAccessLogPublisherResponse
	FileBasedAuditLogPublisherResponse *FileBasedAuditLogPublisherResponse
	FileBasedDebugLogPublisherResponse *FileBasedDebugLogPublisherResponse
	FileBasedErrorLogPublisherResponse *FileBasedErrorLogPublisherResponse
	FileBasedJsonAuditLogPublisherResponse *FileBasedJsonAuditLogPublisherResponse
	FileBasedJsonHttpOperationLogPublisherResponse *FileBasedJsonHttpOperationLogPublisherResponse
	FileBasedTraceLogPublisherResponse *FileBasedTraceLogPublisherResponse
	GroovyScriptedAccessLogPublisherResponse *GroovyScriptedAccessLogPublisherResponse
	GroovyScriptedErrorLogPublisherResponse *GroovyScriptedErrorLogPublisherResponse
	GroovyScriptedFileBasedAccessLogPublisherResponse *GroovyScriptedFileBasedAccessLogPublisherResponse
	GroovyScriptedFileBasedErrorLogPublisherResponse *GroovyScriptedFileBasedErrorLogPublisherResponse
	GroovyScriptedHttpOperationLogPublisherResponse *GroovyScriptedHttpOperationLogPublisherResponse
	JdbcBasedAccessLogPublisherResponse *JdbcBasedAccessLogPublisherResponse
	JdbcBasedErrorLogPublisherResponse *JdbcBasedErrorLogPublisherResponse
	JsonAccessLogPublisherResponse *JsonAccessLogPublisherResponse
	JsonErrorLogPublisherResponse *JsonErrorLogPublisherResponse
	OperationTimingAccessLogPublisherResponse *OperationTimingAccessLogPublisherResponse
	SyslogBasedAccessLogPublisherResponse *SyslogBasedAccessLogPublisherResponse
	SyslogBasedErrorLogPublisherResponse *SyslogBasedErrorLogPublisherResponse
	SyslogJsonAccessLogPublisherResponse *SyslogJsonAccessLogPublisherResponse
	SyslogJsonAuditLogPublisherResponse *SyslogJsonAuditLogPublisherResponse
	SyslogJsonErrorLogPublisherResponse *SyslogJsonErrorLogPublisherResponse
	SyslogJsonHttpOperationLogPublisherResponse *SyslogJsonHttpOperationLogPublisherResponse
	SyslogTextAccessLogPublisherResponse *SyslogTextAccessLogPublisherResponse
	SyslogTextErrorLogPublisherResponse *SyslogTextErrorLogPublisherResponse
	ThirdPartyAccessLogPublisherResponse *ThirdPartyAccessLogPublisherResponse
	ThirdPartyErrorLogPublisherResponse *ThirdPartyErrorLogPublisherResponse
	ThirdPartyFileBasedAccessLogPublisherResponse *ThirdPartyFileBasedAccessLogPublisherResponse
	ThirdPartyFileBasedErrorLogPublisherResponse *ThirdPartyFileBasedErrorLogPublisherResponse
	ThirdPartyHttpOperationLogPublisherResponse *ThirdPartyHttpOperationLogPublisherResponse
}

// AdminAlertAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns AdminAlertAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func AdminAlertAccessLogPublisherResponseAsAddLogPublisher200Response(v *AdminAlertAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		AdminAlertAccessLogPublisherResponse: v,
	}
}

// CommonLogFileHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns CommonLogFileHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func CommonLogFileHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *CommonLogFileHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		CommonLogFileHttpOperationLogPublisherResponse: v,
	}
}

// ConsoleJsonAuditLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ConsoleJsonAuditLogPublisherResponse wrapped in AddLogPublisher200Response
func ConsoleJsonAuditLogPublisherResponseAsAddLogPublisher200Response(v *ConsoleJsonAuditLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ConsoleJsonAuditLogPublisherResponse: v,
	}
}

// ConsoleJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ConsoleJsonHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func ConsoleJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *ConsoleJsonHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ConsoleJsonHttpOperationLogPublisherResponse: v,
	}
}

// DebugAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns DebugAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func DebugAccessLogPublisherResponseAsAddLogPublisher200Response(v *DebugAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		DebugAccessLogPublisherResponse: v,
	}
}

// DetailedHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns DetailedHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func DetailedHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *DetailedHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		DetailedHttpOperationLogPublisherResponse: v,
	}
}

// FileBasedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedAccessLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedAccessLogPublisherResponse: v,
	}
}

// FileBasedAuditLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedAuditLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedAuditLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedAuditLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedAuditLogPublisherResponse: v,
	}
}

// FileBasedDebugLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedDebugLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedDebugLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedDebugLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedDebugLogPublisherResponse: v,
	}
}

// FileBasedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedErrorLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedErrorLogPublisherResponse: v,
	}
}

// FileBasedJsonAuditLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedJsonAuditLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedJsonAuditLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedJsonAuditLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedJsonAuditLogPublisherResponse: v,
	}
}

// FileBasedJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedJsonHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedJsonHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedJsonHttpOperationLogPublisherResponse: v,
	}
}

// FileBasedTraceLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns FileBasedTraceLogPublisherResponse wrapped in AddLogPublisher200Response
func FileBasedTraceLogPublisherResponseAsAddLogPublisher200Response(v *FileBasedTraceLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		FileBasedTraceLogPublisherResponse: v,
	}
}

// GroovyScriptedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns GroovyScriptedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func GroovyScriptedAccessLogPublisherResponseAsAddLogPublisher200Response(v *GroovyScriptedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		GroovyScriptedAccessLogPublisherResponse: v,
	}
}

// GroovyScriptedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns GroovyScriptedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func GroovyScriptedErrorLogPublisherResponseAsAddLogPublisher200Response(v *GroovyScriptedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		GroovyScriptedErrorLogPublisherResponse: v,
	}
}

// GroovyScriptedFileBasedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns GroovyScriptedFileBasedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func GroovyScriptedFileBasedAccessLogPublisherResponseAsAddLogPublisher200Response(v *GroovyScriptedFileBasedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		GroovyScriptedFileBasedAccessLogPublisherResponse: v,
	}
}

// GroovyScriptedFileBasedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns GroovyScriptedFileBasedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func GroovyScriptedFileBasedErrorLogPublisherResponseAsAddLogPublisher200Response(v *GroovyScriptedFileBasedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		GroovyScriptedFileBasedErrorLogPublisherResponse: v,
	}
}

// GroovyScriptedHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns GroovyScriptedHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func GroovyScriptedHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *GroovyScriptedHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		GroovyScriptedHttpOperationLogPublisherResponse: v,
	}
}

// JdbcBasedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns JdbcBasedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func JdbcBasedAccessLogPublisherResponseAsAddLogPublisher200Response(v *JdbcBasedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		JdbcBasedAccessLogPublisherResponse: v,
	}
}

// JdbcBasedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns JdbcBasedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func JdbcBasedErrorLogPublisherResponseAsAddLogPublisher200Response(v *JdbcBasedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		JdbcBasedErrorLogPublisherResponse: v,
	}
}

// JsonAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns JsonAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func JsonAccessLogPublisherResponseAsAddLogPublisher200Response(v *JsonAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		JsonAccessLogPublisherResponse: v,
	}
}

// JsonErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns JsonErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func JsonErrorLogPublisherResponseAsAddLogPublisher200Response(v *JsonErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		JsonErrorLogPublisherResponse: v,
	}
}

// OperationTimingAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns OperationTimingAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func OperationTimingAccessLogPublisherResponseAsAddLogPublisher200Response(v *OperationTimingAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		OperationTimingAccessLogPublisherResponse: v,
	}
}

// SyslogBasedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogBasedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogBasedAccessLogPublisherResponseAsAddLogPublisher200Response(v *SyslogBasedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogBasedAccessLogPublisherResponse: v,
	}
}

// SyslogBasedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogBasedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogBasedErrorLogPublisherResponseAsAddLogPublisher200Response(v *SyslogBasedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogBasedErrorLogPublisherResponse: v,
	}
}

// SyslogJsonAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogJsonAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogJsonAccessLogPublisherResponseAsAddLogPublisher200Response(v *SyslogJsonAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogJsonAccessLogPublisherResponse: v,
	}
}

// SyslogJsonAuditLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogJsonAuditLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogJsonAuditLogPublisherResponseAsAddLogPublisher200Response(v *SyslogJsonAuditLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogJsonAuditLogPublisherResponse: v,
	}
}

// SyslogJsonErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogJsonErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogJsonErrorLogPublisherResponseAsAddLogPublisher200Response(v *SyslogJsonErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogJsonErrorLogPublisherResponse: v,
	}
}

// SyslogJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogJsonHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogJsonHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *SyslogJsonHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogJsonHttpOperationLogPublisherResponse: v,
	}
}

// SyslogTextAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogTextAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogTextAccessLogPublisherResponseAsAddLogPublisher200Response(v *SyslogTextAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogTextAccessLogPublisherResponse: v,
	}
}

// SyslogTextErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns SyslogTextErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func SyslogTextErrorLogPublisherResponseAsAddLogPublisher200Response(v *SyslogTextErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		SyslogTextErrorLogPublisherResponse: v,
	}
}

// ThirdPartyAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ThirdPartyAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func ThirdPartyAccessLogPublisherResponseAsAddLogPublisher200Response(v *ThirdPartyAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ThirdPartyAccessLogPublisherResponse: v,
	}
}

// ThirdPartyErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ThirdPartyErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func ThirdPartyErrorLogPublisherResponseAsAddLogPublisher200Response(v *ThirdPartyErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ThirdPartyErrorLogPublisherResponse: v,
	}
}

// ThirdPartyFileBasedAccessLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ThirdPartyFileBasedAccessLogPublisherResponse wrapped in AddLogPublisher200Response
func ThirdPartyFileBasedAccessLogPublisherResponseAsAddLogPublisher200Response(v *ThirdPartyFileBasedAccessLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ThirdPartyFileBasedAccessLogPublisherResponse: v,
	}
}

// ThirdPartyFileBasedErrorLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ThirdPartyFileBasedErrorLogPublisherResponse wrapped in AddLogPublisher200Response
func ThirdPartyFileBasedErrorLogPublisherResponseAsAddLogPublisher200Response(v *ThirdPartyFileBasedErrorLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ThirdPartyFileBasedErrorLogPublisherResponse: v,
	}
}

// ThirdPartyHttpOperationLogPublisherResponseAsAddLogPublisher200Response is a convenience function that returns ThirdPartyHttpOperationLogPublisherResponse wrapped in AddLogPublisher200Response
func ThirdPartyHttpOperationLogPublisherResponseAsAddLogPublisher200Response(v *ThirdPartyHttpOperationLogPublisherResponse) AddLogPublisher200Response {
	return AddLogPublisher200Response{
		ThirdPartyHttpOperationLogPublisherResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddLogPublisher200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AdminAlertAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.AdminAlertAccessLogPublisherResponse)
	if err == nil {
		jsonAdminAlertAccessLogPublisherResponse, _ := json.Marshal(dst.AdminAlertAccessLogPublisherResponse)
		if string(jsonAdminAlertAccessLogPublisherResponse) == "{}" { // empty struct
			dst.AdminAlertAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.AdminAlertAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into CommonLogFileHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.CommonLogFileHttpOperationLogPublisherResponse)
	if err == nil {
		jsonCommonLogFileHttpOperationLogPublisherResponse, _ := json.Marshal(dst.CommonLogFileHttpOperationLogPublisherResponse)
		if string(jsonCommonLogFileHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.CommonLogFileHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.CommonLogFileHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into ConsoleJsonAuditLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ConsoleJsonAuditLogPublisherResponse)
	if err == nil {
		jsonConsoleJsonAuditLogPublisherResponse, _ := json.Marshal(dst.ConsoleJsonAuditLogPublisherResponse)
		if string(jsonConsoleJsonAuditLogPublisherResponse) == "{}" { // empty struct
			dst.ConsoleJsonAuditLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ConsoleJsonAuditLogPublisherResponse = nil
	}

	// try to unmarshal data into ConsoleJsonHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ConsoleJsonHttpOperationLogPublisherResponse)
	if err == nil {
		jsonConsoleJsonHttpOperationLogPublisherResponse, _ := json.Marshal(dst.ConsoleJsonHttpOperationLogPublisherResponse)
		if string(jsonConsoleJsonHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.ConsoleJsonHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ConsoleJsonHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into DebugAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.DebugAccessLogPublisherResponse)
	if err == nil {
		jsonDebugAccessLogPublisherResponse, _ := json.Marshal(dst.DebugAccessLogPublisherResponse)
		if string(jsonDebugAccessLogPublisherResponse) == "{}" { // empty struct
			dst.DebugAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.DebugAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into DetailedHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.DetailedHttpOperationLogPublisherResponse)
	if err == nil {
		jsonDetailedHttpOperationLogPublisherResponse, _ := json.Marshal(dst.DetailedHttpOperationLogPublisherResponse)
		if string(jsonDetailedHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.DetailedHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.DetailedHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedAccessLogPublisherResponse)
	if err == nil {
		jsonFileBasedAccessLogPublisherResponse, _ := json.Marshal(dst.FileBasedAccessLogPublisherResponse)
		if string(jsonFileBasedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedAuditLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedAuditLogPublisherResponse)
	if err == nil {
		jsonFileBasedAuditLogPublisherResponse, _ := json.Marshal(dst.FileBasedAuditLogPublisherResponse)
		if string(jsonFileBasedAuditLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedAuditLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedAuditLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedDebugLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedDebugLogPublisherResponse)
	if err == nil {
		jsonFileBasedDebugLogPublisherResponse, _ := json.Marshal(dst.FileBasedDebugLogPublisherResponse)
		if string(jsonFileBasedDebugLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedDebugLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedDebugLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedErrorLogPublisherResponse)
	if err == nil {
		jsonFileBasedErrorLogPublisherResponse, _ := json.Marshal(dst.FileBasedErrorLogPublisherResponse)
		if string(jsonFileBasedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedJsonAuditLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedJsonAuditLogPublisherResponse)
	if err == nil {
		jsonFileBasedJsonAuditLogPublisherResponse, _ := json.Marshal(dst.FileBasedJsonAuditLogPublisherResponse)
		if string(jsonFileBasedJsonAuditLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedJsonAuditLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedJsonAuditLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedJsonHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedJsonHttpOperationLogPublisherResponse)
	if err == nil {
		jsonFileBasedJsonHttpOperationLogPublisherResponse, _ := json.Marshal(dst.FileBasedJsonHttpOperationLogPublisherResponse)
		if string(jsonFileBasedJsonHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedJsonHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedJsonHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into FileBasedTraceLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedTraceLogPublisherResponse)
	if err == nil {
		jsonFileBasedTraceLogPublisherResponse, _ := json.Marshal(dst.FileBasedTraceLogPublisherResponse)
		if string(jsonFileBasedTraceLogPublisherResponse) == "{}" { // empty struct
			dst.FileBasedTraceLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedTraceLogPublisherResponse = nil
	}

	// try to unmarshal data into GroovyScriptedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedAccessLogPublisherResponse)
	if err == nil {
		jsonGroovyScriptedAccessLogPublisherResponse, _ := json.Marshal(dst.GroovyScriptedAccessLogPublisherResponse)
		if string(jsonGroovyScriptedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.GroovyScriptedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into GroovyScriptedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedErrorLogPublisherResponse)
	if err == nil {
		jsonGroovyScriptedErrorLogPublisherResponse, _ := json.Marshal(dst.GroovyScriptedErrorLogPublisherResponse)
		if string(jsonGroovyScriptedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.GroovyScriptedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into GroovyScriptedFileBasedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedFileBasedAccessLogPublisherResponse)
	if err == nil {
		jsonGroovyScriptedFileBasedAccessLogPublisherResponse, _ := json.Marshal(dst.GroovyScriptedFileBasedAccessLogPublisherResponse)
		if string(jsonGroovyScriptedFileBasedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.GroovyScriptedFileBasedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedFileBasedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into GroovyScriptedFileBasedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedFileBasedErrorLogPublisherResponse)
	if err == nil {
		jsonGroovyScriptedFileBasedErrorLogPublisherResponse, _ := json.Marshal(dst.GroovyScriptedFileBasedErrorLogPublisherResponse)
		if string(jsonGroovyScriptedFileBasedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.GroovyScriptedFileBasedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedFileBasedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into GroovyScriptedHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedHttpOperationLogPublisherResponse)
	if err == nil {
		jsonGroovyScriptedHttpOperationLogPublisherResponse, _ := json.Marshal(dst.GroovyScriptedHttpOperationLogPublisherResponse)
		if string(jsonGroovyScriptedHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.GroovyScriptedHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into JdbcBasedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.JdbcBasedAccessLogPublisherResponse)
	if err == nil {
		jsonJdbcBasedAccessLogPublisherResponse, _ := json.Marshal(dst.JdbcBasedAccessLogPublisherResponse)
		if string(jsonJdbcBasedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.JdbcBasedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.JdbcBasedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into JdbcBasedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.JdbcBasedErrorLogPublisherResponse)
	if err == nil {
		jsonJdbcBasedErrorLogPublisherResponse, _ := json.Marshal(dst.JdbcBasedErrorLogPublisherResponse)
		if string(jsonJdbcBasedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.JdbcBasedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.JdbcBasedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into JsonAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.JsonAccessLogPublisherResponse)
	if err == nil {
		jsonJsonAccessLogPublisherResponse, _ := json.Marshal(dst.JsonAccessLogPublisherResponse)
		if string(jsonJsonAccessLogPublisherResponse) == "{}" { // empty struct
			dst.JsonAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.JsonAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into JsonErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.JsonErrorLogPublisherResponse)
	if err == nil {
		jsonJsonErrorLogPublisherResponse, _ := json.Marshal(dst.JsonErrorLogPublisherResponse)
		if string(jsonJsonErrorLogPublisherResponse) == "{}" { // empty struct
			dst.JsonErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.JsonErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into OperationTimingAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.OperationTimingAccessLogPublisherResponse)
	if err == nil {
		jsonOperationTimingAccessLogPublisherResponse, _ := json.Marshal(dst.OperationTimingAccessLogPublisherResponse)
		if string(jsonOperationTimingAccessLogPublisherResponse) == "{}" { // empty struct
			dst.OperationTimingAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.OperationTimingAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogBasedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogBasedAccessLogPublisherResponse)
	if err == nil {
		jsonSyslogBasedAccessLogPublisherResponse, _ := json.Marshal(dst.SyslogBasedAccessLogPublisherResponse)
		if string(jsonSyslogBasedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogBasedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogBasedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogBasedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogBasedErrorLogPublisherResponse)
	if err == nil {
		jsonSyslogBasedErrorLogPublisherResponse, _ := json.Marshal(dst.SyslogBasedErrorLogPublisherResponse)
		if string(jsonSyslogBasedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogBasedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogBasedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogJsonAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogJsonAccessLogPublisherResponse)
	if err == nil {
		jsonSyslogJsonAccessLogPublisherResponse, _ := json.Marshal(dst.SyslogJsonAccessLogPublisherResponse)
		if string(jsonSyslogJsonAccessLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogJsonAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogJsonAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogJsonAuditLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogJsonAuditLogPublisherResponse)
	if err == nil {
		jsonSyslogJsonAuditLogPublisherResponse, _ := json.Marshal(dst.SyslogJsonAuditLogPublisherResponse)
		if string(jsonSyslogJsonAuditLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogJsonAuditLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogJsonAuditLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogJsonErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogJsonErrorLogPublisherResponse)
	if err == nil {
		jsonSyslogJsonErrorLogPublisherResponse, _ := json.Marshal(dst.SyslogJsonErrorLogPublisherResponse)
		if string(jsonSyslogJsonErrorLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogJsonErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogJsonErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogJsonHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogJsonHttpOperationLogPublisherResponse)
	if err == nil {
		jsonSyslogJsonHttpOperationLogPublisherResponse, _ := json.Marshal(dst.SyslogJsonHttpOperationLogPublisherResponse)
		if string(jsonSyslogJsonHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogJsonHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogJsonHttpOperationLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogTextAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogTextAccessLogPublisherResponse)
	if err == nil {
		jsonSyslogTextAccessLogPublisherResponse, _ := json.Marshal(dst.SyslogTextAccessLogPublisherResponse)
		if string(jsonSyslogTextAccessLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogTextAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogTextAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into SyslogTextErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.SyslogTextErrorLogPublisherResponse)
	if err == nil {
		jsonSyslogTextErrorLogPublisherResponse, _ := json.Marshal(dst.SyslogTextErrorLogPublisherResponse)
		if string(jsonSyslogTextErrorLogPublisherResponse) == "{}" { // empty struct
			dst.SyslogTextErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.SyslogTextErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into ThirdPartyAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyAccessLogPublisherResponse)
	if err == nil {
		jsonThirdPartyAccessLogPublisherResponse, _ := json.Marshal(dst.ThirdPartyAccessLogPublisherResponse)
		if string(jsonThirdPartyAccessLogPublisherResponse) == "{}" { // empty struct
			dst.ThirdPartyAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into ThirdPartyErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyErrorLogPublisherResponse)
	if err == nil {
		jsonThirdPartyErrorLogPublisherResponse, _ := json.Marshal(dst.ThirdPartyErrorLogPublisherResponse)
		if string(jsonThirdPartyErrorLogPublisherResponse) == "{}" { // empty struct
			dst.ThirdPartyErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into ThirdPartyFileBasedAccessLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyFileBasedAccessLogPublisherResponse)
	if err == nil {
		jsonThirdPartyFileBasedAccessLogPublisherResponse, _ := json.Marshal(dst.ThirdPartyFileBasedAccessLogPublisherResponse)
		if string(jsonThirdPartyFileBasedAccessLogPublisherResponse) == "{}" { // empty struct
			dst.ThirdPartyFileBasedAccessLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyFileBasedAccessLogPublisherResponse = nil
	}

	// try to unmarshal data into ThirdPartyFileBasedErrorLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyFileBasedErrorLogPublisherResponse)
	if err == nil {
		jsonThirdPartyFileBasedErrorLogPublisherResponse, _ := json.Marshal(dst.ThirdPartyFileBasedErrorLogPublisherResponse)
		if string(jsonThirdPartyFileBasedErrorLogPublisherResponse) == "{}" { // empty struct
			dst.ThirdPartyFileBasedErrorLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyFileBasedErrorLogPublisherResponse = nil
	}

	// try to unmarshal data into ThirdPartyHttpOperationLogPublisherResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyHttpOperationLogPublisherResponse)
	if err == nil {
		jsonThirdPartyHttpOperationLogPublisherResponse, _ := json.Marshal(dst.ThirdPartyHttpOperationLogPublisherResponse)
		if string(jsonThirdPartyHttpOperationLogPublisherResponse) == "{}" { // empty struct
			dst.ThirdPartyHttpOperationLogPublisherResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyHttpOperationLogPublisherResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AdminAlertAccessLogPublisherResponse = nil
		dst.CommonLogFileHttpOperationLogPublisherResponse = nil
		dst.ConsoleJsonAuditLogPublisherResponse = nil
		dst.ConsoleJsonHttpOperationLogPublisherResponse = nil
		dst.DebugAccessLogPublisherResponse = nil
		dst.DetailedHttpOperationLogPublisherResponse = nil
		dst.FileBasedAccessLogPublisherResponse = nil
		dst.FileBasedAuditLogPublisherResponse = nil
		dst.FileBasedDebugLogPublisherResponse = nil
		dst.FileBasedErrorLogPublisherResponse = nil
		dst.FileBasedJsonAuditLogPublisherResponse = nil
		dst.FileBasedJsonHttpOperationLogPublisherResponse = nil
		dst.FileBasedTraceLogPublisherResponse = nil
		dst.GroovyScriptedAccessLogPublisherResponse = nil
		dst.GroovyScriptedErrorLogPublisherResponse = nil
		dst.GroovyScriptedFileBasedAccessLogPublisherResponse = nil
		dst.GroovyScriptedFileBasedErrorLogPublisherResponse = nil
		dst.GroovyScriptedHttpOperationLogPublisherResponse = nil
		dst.JdbcBasedAccessLogPublisherResponse = nil
		dst.JdbcBasedErrorLogPublisherResponse = nil
		dst.JsonAccessLogPublisherResponse = nil
		dst.JsonErrorLogPublisherResponse = nil
		dst.OperationTimingAccessLogPublisherResponse = nil
		dst.SyslogBasedAccessLogPublisherResponse = nil
		dst.SyslogBasedErrorLogPublisherResponse = nil
		dst.SyslogJsonAccessLogPublisherResponse = nil
		dst.SyslogJsonAuditLogPublisherResponse = nil
		dst.SyslogJsonErrorLogPublisherResponse = nil
		dst.SyslogJsonHttpOperationLogPublisherResponse = nil
		dst.SyslogTextAccessLogPublisherResponse = nil
		dst.SyslogTextErrorLogPublisherResponse = nil
		dst.ThirdPartyAccessLogPublisherResponse = nil
		dst.ThirdPartyErrorLogPublisherResponse = nil
		dst.ThirdPartyFileBasedAccessLogPublisherResponse = nil
		dst.ThirdPartyFileBasedErrorLogPublisherResponse = nil
		dst.ThirdPartyHttpOperationLogPublisherResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddLogPublisher200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddLogPublisher200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddLogPublisher200Response) MarshalJSON() ([]byte, error) {
	if src.AdminAlertAccessLogPublisherResponse != nil {
		return json.Marshal(&src.AdminAlertAccessLogPublisherResponse)
	}

	if src.CommonLogFileHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.CommonLogFileHttpOperationLogPublisherResponse)
	}

	if src.ConsoleJsonAuditLogPublisherResponse != nil {
		return json.Marshal(&src.ConsoleJsonAuditLogPublisherResponse)
	}

	if src.ConsoleJsonHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.ConsoleJsonHttpOperationLogPublisherResponse)
	}

	if src.DebugAccessLogPublisherResponse != nil {
		return json.Marshal(&src.DebugAccessLogPublisherResponse)
	}

	if src.DetailedHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.DetailedHttpOperationLogPublisherResponse)
	}

	if src.FileBasedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedAccessLogPublisherResponse)
	}

	if src.FileBasedAuditLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedAuditLogPublisherResponse)
	}

	if src.FileBasedDebugLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedDebugLogPublisherResponse)
	}

	if src.FileBasedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedErrorLogPublisherResponse)
	}

	if src.FileBasedJsonAuditLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedJsonAuditLogPublisherResponse)
	}

	if src.FileBasedJsonHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedJsonHttpOperationLogPublisherResponse)
	}

	if src.FileBasedTraceLogPublisherResponse != nil {
		return json.Marshal(&src.FileBasedTraceLogPublisherResponse)
	}

	if src.GroovyScriptedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.GroovyScriptedAccessLogPublisherResponse)
	}

	if src.GroovyScriptedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.GroovyScriptedErrorLogPublisherResponse)
	}

	if src.GroovyScriptedFileBasedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.GroovyScriptedFileBasedAccessLogPublisherResponse)
	}

	if src.GroovyScriptedFileBasedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.GroovyScriptedFileBasedErrorLogPublisherResponse)
	}

	if src.GroovyScriptedHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.GroovyScriptedHttpOperationLogPublisherResponse)
	}

	if src.JdbcBasedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.JdbcBasedAccessLogPublisherResponse)
	}

	if src.JdbcBasedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.JdbcBasedErrorLogPublisherResponse)
	}

	if src.JsonAccessLogPublisherResponse != nil {
		return json.Marshal(&src.JsonAccessLogPublisherResponse)
	}

	if src.JsonErrorLogPublisherResponse != nil {
		return json.Marshal(&src.JsonErrorLogPublisherResponse)
	}

	if src.OperationTimingAccessLogPublisherResponse != nil {
		return json.Marshal(&src.OperationTimingAccessLogPublisherResponse)
	}

	if src.SyslogBasedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogBasedAccessLogPublisherResponse)
	}

	if src.SyslogBasedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogBasedErrorLogPublisherResponse)
	}

	if src.SyslogJsonAccessLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogJsonAccessLogPublisherResponse)
	}

	if src.SyslogJsonAuditLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogJsonAuditLogPublisherResponse)
	}

	if src.SyslogJsonErrorLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogJsonErrorLogPublisherResponse)
	}

	if src.SyslogJsonHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogJsonHttpOperationLogPublisherResponse)
	}

	if src.SyslogTextAccessLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogTextAccessLogPublisherResponse)
	}

	if src.SyslogTextErrorLogPublisherResponse != nil {
		return json.Marshal(&src.SyslogTextErrorLogPublisherResponse)
	}

	if src.ThirdPartyAccessLogPublisherResponse != nil {
		return json.Marshal(&src.ThirdPartyAccessLogPublisherResponse)
	}

	if src.ThirdPartyErrorLogPublisherResponse != nil {
		return json.Marshal(&src.ThirdPartyErrorLogPublisherResponse)
	}

	if src.ThirdPartyFileBasedAccessLogPublisherResponse != nil {
		return json.Marshal(&src.ThirdPartyFileBasedAccessLogPublisherResponse)
	}

	if src.ThirdPartyFileBasedErrorLogPublisherResponse != nil {
		return json.Marshal(&src.ThirdPartyFileBasedErrorLogPublisherResponse)
	}

	if src.ThirdPartyHttpOperationLogPublisherResponse != nil {
		return json.Marshal(&src.ThirdPartyHttpOperationLogPublisherResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddLogPublisher200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AdminAlertAccessLogPublisherResponse != nil {
		return obj.AdminAlertAccessLogPublisherResponse
	}

	if obj.CommonLogFileHttpOperationLogPublisherResponse != nil {
		return obj.CommonLogFileHttpOperationLogPublisherResponse
	}

	if obj.ConsoleJsonAuditLogPublisherResponse != nil {
		return obj.ConsoleJsonAuditLogPublisherResponse
	}

	if obj.ConsoleJsonHttpOperationLogPublisherResponse != nil {
		return obj.ConsoleJsonHttpOperationLogPublisherResponse
	}

	if obj.DebugAccessLogPublisherResponse != nil {
		return obj.DebugAccessLogPublisherResponse
	}

	if obj.DetailedHttpOperationLogPublisherResponse != nil {
		return obj.DetailedHttpOperationLogPublisherResponse
	}

	if obj.FileBasedAccessLogPublisherResponse != nil {
		return obj.FileBasedAccessLogPublisherResponse
	}

	if obj.FileBasedAuditLogPublisherResponse != nil {
		return obj.FileBasedAuditLogPublisherResponse
	}

	if obj.FileBasedDebugLogPublisherResponse != nil {
		return obj.FileBasedDebugLogPublisherResponse
	}

	if obj.FileBasedErrorLogPublisherResponse != nil {
		return obj.FileBasedErrorLogPublisherResponse
	}

	if obj.FileBasedJsonAuditLogPublisherResponse != nil {
		return obj.FileBasedJsonAuditLogPublisherResponse
	}

	if obj.FileBasedJsonHttpOperationLogPublisherResponse != nil {
		return obj.FileBasedJsonHttpOperationLogPublisherResponse
	}

	if obj.FileBasedTraceLogPublisherResponse != nil {
		return obj.FileBasedTraceLogPublisherResponse
	}

	if obj.GroovyScriptedAccessLogPublisherResponse != nil {
		return obj.GroovyScriptedAccessLogPublisherResponse
	}

	if obj.GroovyScriptedErrorLogPublisherResponse != nil {
		return obj.GroovyScriptedErrorLogPublisherResponse
	}

	if obj.GroovyScriptedFileBasedAccessLogPublisherResponse != nil {
		return obj.GroovyScriptedFileBasedAccessLogPublisherResponse
	}

	if obj.GroovyScriptedFileBasedErrorLogPublisherResponse != nil {
		return obj.GroovyScriptedFileBasedErrorLogPublisherResponse
	}

	if obj.GroovyScriptedHttpOperationLogPublisherResponse != nil {
		return obj.GroovyScriptedHttpOperationLogPublisherResponse
	}

	if obj.JdbcBasedAccessLogPublisherResponse != nil {
		return obj.JdbcBasedAccessLogPublisherResponse
	}

	if obj.JdbcBasedErrorLogPublisherResponse != nil {
		return obj.JdbcBasedErrorLogPublisherResponse
	}

	if obj.JsonAccessLogPublisherResponse != nil {
		return obj.JsonAccessLogPublisherResponse
	}

	if obj.JsonErrorLogPublisherResponse != nil {
		return obj.JsonErrorLogPublisherResponse
	}

	if obj.OperationTimingAccessLogPublisherResponse != nil {
		return obj.OperationTimingAccessLogPublisherResponse
	}

	if obj.SyslogBasedAccessLogPublisherResponse != nil {
		return obj.SyslogBasedAccessLogPublisherResponse
	}

	if obj.SyslogBasedErrorLogPublisherResponse != nil {
		return obj.SyslogBasedErrorLogPublisherResponse
	}

	if obj.SyslogJsonAccessLogPublisherResponse != nil {
		return obj.SyslogJsonAccessLogPublisherResponse
	}

	if obj.SyslogJsonAuditLogPublisherResponse != nil {
		return obj.SyslogJsonAuditLogPublisherResponse
	}

	if obj.SyslogJsonErrorLogPublisherResponse != nil {
		return obj.SyslogJsonErrorLogPublisherResponse
	}

	if obj.SyslogJsonHttpOperationLogPublisherResponse != nil {
		return obj.SyslogJsonHttpOperationLogPublisherResponse
	}

	if obj.SyslogTextAccessLogPublisherResponse != nil {
		return obj.SyslogTextAccessLogPublisherResponse
	}

	if obj.SyslogTextErrorLogPublisherResponse != nil {
		return obj.SyslogTextErrorLogPublisherResponse
	}

	if obj.ThirdPartyAccessLogPublisherResponse != nil {
		return obj.ThirdPartyAccessLogPublisherResponse
	}

	if obj.ThirdPartyErrorLogPublisherResponse != nil {
		return obj.ThirdPartyErrorLogPublisherResponse
	}

	if obj.ThirdPartyFileBasedAccessLogPublisherResponse != nil {
		return obj.ThirdPartyFileBasedAccessLogPublisherResponse
	}

	if obj.ThirdPartyFileBasedErrorLogPublisherResponse != nil {
		return obj.ThirdPartyFileBasedErrorLogPublisherResponse
	}

	if obj.ThirdPartyHttpOperationLogPublisherResponse != nil {
		return obj.ThirdPartyHttpOperationLogPublisherResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddLogPublisher200Response struct {
	value *AddLogPublisher200Response
	isSet bool
}

func (v NullableAddLogPublisher200Response) Get() *AddLogPublisher200Response {
	return v.value
}

func (v *NullableAddLogPublisher200Response) Set(val *AddLogPublisher200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLogPublisher200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLogPublisher200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLogPublisher200Response(val *AddLogPublisher200Response) *NullableAddLogPublisher200Response {
	return &NullableAddLogPublisher200Response{value: val, isSet: true}
}

func (v NullableAddLogPublisher200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLogPublisher200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


