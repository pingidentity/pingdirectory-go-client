/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddOpendjExternalServerRequestAllOf struct for AddOpendjExternalServerRequestAllOf
type AddOpendjExternalServerRequestAllOf struct {
	// Name of the new External Server
	ServerName string `json:"serverName"`
}

// NewAddOpendjExternalServerRequestAllOf instantiates a new AddOpendjExternalServerRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddOpendjExternalServerRequestAllOf(serverName string) *AddOpendjExternalServerRequestAllOf {
	this := AddOpendjExternalServerRequestAllOf{}
	this.ServerName = serverName
	return &this
}

// NewAddOpendjExternalServerRequestAllOfWithDefaults instantiates a new AddOpendjExternalServerRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddOpendjExternalServerRequestAllOfWithDefaults() *AddOpendjExternalServerRequestAllOf {
	this := AddOpendjExternalServerRequestAllOf{}
	return &this
}

// GetServerName returns the ServerName field value
func (o *AddOpendjExternalServerRequestAllOf) GetServerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value
// and a boolean to check if the value has been set.
func (o *AddOpendjExternalServerRequestAllOf) GetServerNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerName, true
}

// SetServerName sets field value
func (o *AddOpendjExternalServerRequestAllOf) SetServerName(v string) {
	o.ServerName = v
}

func (o AddOpendjExternalServerRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["serverName"] = o.ServerName
	}
	return json.Marshal(toSerialize)
}

type NullableAddOpendjExternalServerRequestAllOf struct {
	value *AddOpendjExternalServerRequestAllOf
	isSet bool
}

func (v NullableAddOpendjExternalServerRequestAllOf) Get() *AddOpendjExternalServerRequestAllOf {
	return v.value
}

func (v *NullableAddOpendjExternalServerRequestAllOf) Set(val *AddOpendjExternalServerRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddOpendjExternalServerRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddOpendjExternalServerRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddOpendjExternalServerRequestAllOf(val *AddOpendjExternalServerRequestAllOf) *NullableAddOpendjExternalServerRequestAllOf {
	return &NullableAddOpendjExternalServerRequestAllOf{value: val, isSet: true}
}

func (v NullableAddOpendjExternalServerRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddOpendjExternalServerRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


