/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MultiPartEmailAccountStatusNotificationHandlerShared struct for MultiPartEmailAccountStatusNotificationHandlerShared
type MultiPartEmailAccountStatusNotificationHandlerShared struct {
	Schemas []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn `json:"schemas"`
	// The path to a file containing the template to use to generate the email message to send in the event that an account becomes temporarily locked as a result of too many authentication failures.
	AccountTemporarilyFailureLockedMessageTemplate *string `json:"accountTemporarilyFailureLockedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an account becomes permanently locked as a result of too many authentication failures.
	AccountPermanentlyFailureLockedMessageTemplate *string `json:"accountPermanentlyFailureLockedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because it has been too long since the user last successfully authenticated.
	AccountIdleLockedMessageTemplate *string `json:"accountIdleLockedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that authentication attempt fails because the user failed to choose a new password in a timely manner after an administrative reset.
	AccountResetLockedMessageTemplate *string `json:"accountResetLockedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user's account has been unlocked (e.g., by an administrative password reset).
	AccountUnlockedMessageTemplate *string `json:"accountUnlockedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user's account is disabled by an administrator.
	AccountDisabledMessageTemplate *string `json:"accountDisabledMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user's account is enabled by an administrator.
	AccountEnabledMessageTemplate *string `json:"accountEnabledMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an activation time that is in the future.
	AccountNotYetActiveMessageTemplate *string `json:"accountNotYetActiveMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expiration time that is in the past.
	AccountExpiredMessageTemplate *string `json:"accountExpiredMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt fails because the account has an expired password.
	PasswordExpiredMessageTemplate *string `json:"passwordExpiredMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an authentication attempt succeeds, but the user's password is about to expire. This notification will only be generated the first time the user authenticates within the window of time that the server should warn about an upcoming password expiration.
	PasswordExpiringMessageTemplate *string `json:"passwordExpiringMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user's password has been reset by an administrator.
	PasswordResetMessageTemplate *string `json:"passwordResetMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user changes their own password.
	PasswordChangedMessageTemplate *string `json:"passwordChangedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a new account is created in an add request that matches the criteria provided in the account-creation-notification-request-criteria property.
	AccountCreatedMessageTemplate *string `json:"accountCreatedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that an existing account is updated with a modify or modify DN operation that matches the criteria provided in the account-update-notification-request-criteria property.
	AccountUpdatedMessageTemplate *string `json:"accountUpdatedMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user authenticated with a password that failed to satisfy the criteria for one or more of the configured password validators.
	BindPasswordFailedValidationMessageTemplate *string `json:"bindPasswordFailedValidationMessageTemplate,omitempty"`
	// The path to a file containing the template to use to generate the email message to send in the event that a user successfully authenticates to the server but will be required to choose a new password before they will be allowed to perform any other operations.
	MustChangePasswordMessageTemplate *string `json:"mustChangePasswordMessageTemplate,omitempty"`
	// A description for this Account Status Notification Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
	Enabled bool `json:"enabled"`
	// Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
	Asynchronous *bool `json:"asynchronous,omitempty"`
	// A request criteria object that identifies which add requests should result in account creation notifications for this handler.
	AccountCreationNotificationRequestCriteria *string `json:"accountCreationNotificationRequestCriteria,omitempty"`
	// A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
	AccountUpdateNotificationRequestCriteria *string `json:"accountUpdateNotificationRequestCriteria,omitempty"`
}

// NewMultiPartEmailAccountStatusNotificationHandlerShared instantiates a new MultiPartEmailAccountStatusNotificationHandlerShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiPartEmailAccountStatusNotificationHandlerShared(schemas []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn, enabled bool) *MultiPartEmailAccountStatusNotificationHandlerShared {
	this := MultiPartEmailAccountStatusNotificationHandlerShared{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewMultiPartEmailAccountStatusNotificationHandlerSharedWithDefaults instantiates a new MultiPartEmailAccountStatusNotificationHandlerShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiPartEmailAccountStatusNotificationHandlerSharedWithDefaults() *MultiPartEmailAccountStatusNotificationHandlerShared {
	this := MultiPartEmailAccountStatusNotificationHandlerShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetSchemas() []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn {
	if o == nil {
		var ret []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetSchemasOk() ([]EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetSchemas(v []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetAccountTemporarilyFailureLockedMessageTemplate returns the AccountTemporarilyFailureLockedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountTemporarilyFailureLockedMessageTemplate() string {
	if o == nil || isNil(o.AccountTemporarilyFailureLockedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountTemporarilyFailureLockedMessageTemplate
}

// GetAccountTemporarilyFailureLockedMessageTemplateOk returns a tuple with the AccountTemporarilyFailureLockedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountTemporarilyFailureLockedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountTemporarilyFailureLockedMessageTemplate) {
    return nil, false
	}
	return o.AccountTemporarilyFailureLockedMessageTemplate, true
}

// HasAccountTemporarilyFailureLockedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountTemporarilyFailureLockedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountTemporarilyFailureLockedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountTemporarilyFailureLockedMessageTemplate gets a reference to the given string and assigns it to the AccountTemporarilyFailureLockedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountTemporarilyFailureLockedMessageTemplate(v string) {
	o.AccountTemporarilyFailureLockedMessageTemplate = &v
}

// GetAccountPermanentlyFailureLockedMessageTemplate returns the AccountPermanentlyFailureLockedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountPermanentlyFailureLockedMessageTemplate() string {
	if o == nil || isNil(o.AccountPermanentlyFailureLockedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountPermanentlyFailureLockedMessageTemplate
}

// GetAccountPermanentlyFailureLockedMessageTemplateOk returns a tuple with the AccountPermanentlyFailureLockedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountPermanentlyFailureLockedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountPermanentlyFailureLockedMessageTemplate) {
    return nil, false
	}
	return o.AccountPermanentlyFailureLockedMessageTemplate, true
}

// HasAccountPermanentlyFailureLockedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountPermanentlyFailureLockedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountPermanentlyFailureLockedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountPermanentlyFailureLockedMessageTemplate gets a reference to the given string and assigns it to the AccountPermanentlyFailureLockedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountPermanentlyFailureLockedMessageTemplate(v string) {
	o.AccountPermanentlyFailureLockedMessageTemplate = &v
}

// GetAccountIdleLockedMessageTemplate returns the AccountIdleLockedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountIdleLockedMessageTemplate() string {
	if o == nil || isNil(o.AccountIdleLockedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountIdleLockedMessageTemplate
}

// GetAccountIdleLockedMessageTemplateOk returns a tuple with the AccountIdleLockedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountIdleLockedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountIdleLockedMessageTemplate) {
    return nil, false
	}
	return o.AccountIdleLockedMessageTemplate, true
}

// HasAccountIdleLockedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountIdleLockedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountIdleLockedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountIdleLockedMessageTemplate gets a reference to the given string and assigns it to the AccountIdleLockedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountIdleLockedMessageTemplate(v string) {
	o.AccountIdleLockedMessageTemplate = &v
}

// GetAccountResetLockedMessageTemplate returns the AccountResetLockedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountResetLockedMessageTemplate() string {
	if o == nil || isNil(o.AccountResetLockedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountResetLockedMessageTemplate
}

// GetAccountResetLockedMessageTemplateOk returns a tuple with the AccountResetLockedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountResetLockedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountResetLockedMessageTemplate) {
    return nil, false
	}
	return o.AccountResetLockedMessageTemplate, true
}

// HasAccountResetLockedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountResetLockedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountResetLockedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountResetLockedMessageTemplate gets a reference to the given string and assigns it to the AccountResetLockedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountResetLockedMessageTemplate(v string) {
	o.AccountResetLockedMessageTemplate = &v
}

// GetAccountUnlockedMessageTemplate returns the AccountUnlockedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUnlockedMessageTemplate() string {
	if o == nil || isNil(o.AccountUnlockedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountUnlockedMessageTemplate
}

// GetAccountUnlockedMessageTemplateOk returns a tuple with the AccountUnlockedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUnlockedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountUnlockedMessageTemplate) {
    return nil, false
	}
	return o.AccountUnlockedMessageTemplate, true
}

// HasAccountUnlockedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountUnlockedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountUnlockedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountUnlockedMessageTemplate gets a reference to the given string and assigns it to the AccountUnlockedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountUnlockedMessageTemplate(v string) {
	o.AccountUnlockedMessageTemplate = &v
}

// GetAccountDisabledMessageTemplate returns the AccountDisabledMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountDisabledMessageTemplate() string {
	if o == nil || isNil(o.AccountDisabledMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountDisabledMessageTemplate
}

// GetAccountDisabledMessageTemplateOk returns a tuple with the AccountDisabledMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountDisabledMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountDisabledMessageTemplate) {
    return nil, false
	}
	return o.AccountDisabledMessageTemplate, true
}

// HasAccountDisabledMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountDisabledMessageTemplate() bool {
	if o != nil && !isNil(o.AccountDisabledMessageTemplate) {
		return true
	}

	return false
}

// SetAccountDisabledMessageTemplate gets a reference to the given string and assigns it to the AccountDisabledMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountDisabledMessageTemplate(v string) {
	o.AccountDisabledMessageTemplate = &v
}

// GetAccountEnabledMessageTemplate returns the AccountEnabledMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountEnabledMessageTemplate() string {
	if o == nil || isNil(o.AccountEnabledMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountEnabledMessageTemplate
}

// GetAccountEnabledMessageTemplateOk returns a tuple with the AccountEnabledMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountEnabledMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountEnabledMessageTemplate) {
    return nil, false
	}
	return o.AccountEnabledMessageTemplate, true
}

// HasAccountEnabledMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountEnabledMessageTemplate() bool {
	if o != nil && !isNil(o.AccountEnabledMessageTemplate) {
		return true
	}

	return false
}

// SetAccountEnabledMessageTemplate gets a reference to the given string and assigns it to the AccountEnabledMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountEnabledMessageTemplate(v string) {
	o.AccountEnabledMessageTemplate = &v
}

// GetAccountNotYetActiveMessageTemplate returns the AccountNotYetActiveMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountNotYetActiveMessageTemplate() string {
	if o == nil || isNil(o.AccountNotYetActiveMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountNotYetActiveMessageTemplate
}

// GetAccountNotYetActiveMessageTemplateOk returns a tuple with the AccountNotYetActiveMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountNotYetActiveMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountNotYetActiveMessageTemplate) {
    return nil, false
	}
	return o.AccountNotYetActiveMessageTemplate, true
}

// HasAccountNotYetActiveMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountNotYetActiveMessageTemplate() bool {
	if o != nil && !isNil(o.AccountNotYetActiveMessageTemplate) {
		return true
	}

	return false
}

// SetAccountNotYetActiveMessageTemplate gets a reference to the given string and assigns it to the AccountNotYetActiveMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountNotYetActiveMessageTemplate(v string) {
	o.AccountNotYetActiveMessageTemplate = &v
}

// GetAccountExpiredMessageTemplate returns the AccountExpiredMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountExpiredMessageTemplate() string {
	if o == nil || isNil(o.AccountExpiredMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountExpiredMessageTemplate
}

// GetAccountExpiredMessageTemplateOk returns a tuple with the AccountExpiredMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountExpiredMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountExpiredMessageTemplate) {
    return nil, false
	}
	return o.AccountExpiredMessageTemplate, true
}

// HasAccountExpiredMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountExpiredMessageTemplate() bool {
	if o != nil && !isNil(o.AccountExpiredMessageTemplate) {
		return true
	}

	return false
}

// SetAccountExpiredMessageTemplate gets a reference to the given string and assigns it to the AccountExpiredMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountExpiredMessageTemplate(v string) {
	o.AccountExpiredMessageTemplate = &v
}

// GetPasswordExpiredMessageTemplate returns the PasswordExpiredMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordExpiredMessageTemplate() string {
	if o == nil || isNil(o.PasswordExpiredMessageTemplate) {
		var ret string
		return ret
	}
	return *o.PasswordExpiredMessageTemplate
}

// GetPasswordExpiredMessageTemplateOk returns a tuple with the PasswordExpiredMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordExpiredMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordExpiredMessageTemplate) {
    return nil, false
	}
	return o.PasswordExpiredMessageTemplate, true
}

// HasPasswordExpiredMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasPasswordExpiredMessageTemplate() bool {
	if o != nil && !isNil(o.PasswordExpiredMessageTemplate) {
		return true
	}

	return false
}

// SetPasswordExpiredMessageTemplate gets a reference to the given string and assigns it to the PasswordExpiredMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetPasswordExpiredMessageTemplate(v string) {
	o.PasswordExpiredMessageTemplate = &v
}

// GetPasswordExpiringMessageTemplate returns the PasswordExpiringMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordExpiringMessageTemplate() string {
	if o == nil || isNil(o.PasswordExpiringMessageTemplate) {
		var ret string
		return ret
	}
	return *o.PasswordExpiringMessageTemplate
}

// GetPasswordExpiringMessageTemplateOk returns a tuple with the PasswordExpiringMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordExpiringMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordExpiringMessageTemplate) {
    return nil, false
	}
	return o.PasswordExpiringMessageTemplate, true
}

// HasPasswordExpiringMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasPasswordExpiringMessageTemplate() bool {
	if o != nil && !isNil(o.PasswordExpiringMessageTemplate) {
		return true
	}

	return false
}

// SetPasswordExpiringMessageTemplate gets a reference to the given string and assigns it to the PasswordExpiringMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetPasswordExpiringMessageTemplate(v string) {
	o.PasswordExpiringMessageTemplate = &v
}

// GetPasswordResetMessageTemplate returns the PasswordResetMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordResetMessageTemplate() string {
	if o == nil || isNil(o.PasswordResetMessageTemplate) {
		var ret string
		return ret
	}
	return *o.PasswordResetMessageTemplate
}

// GetPasswordResetMessageTemplateOk returns a tuple with the PasswordResetMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordResetMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordResetMessageTemplate) {
    return nil, false
	}
	return o.PasswordResetMessageTemplate, true
}

// HasPasswordResetMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasPasswordResetMessageTemplate() bool {
	if o != nil && !isNil(o.PasswordResetMessageTemplate) {
		return true
	}

	return false
}

// SetPasswordResetMessageTemplate gets a reference to the given string and assigns it to the PasswordResetMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetPasswordResetMessageTemplate(v string) {
	o.PasswordResetMessageTemplate = &v
}

// GetPasswordChangedMessageTemplate returns the PasswordChangedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordChangedMessageTemplate() string {
	if o == nil || isNil(o.PasswordChangedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.PasswordChangedMessageTemplate
}

// GetPasswordChangedMessageTemplateOk returns a tuple with the PasswordChangedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetPasswordChangedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.PasswordChangedMessageTemplate) {
    return nil, false
	}
	return o.PasswordChangedMessageTemplate, true
}

// HasPasswordChangedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasPasswordChangedMessageTemplate() bool {
	if o != nil && !isNil(o.PasswordChangedMessageTemplate) {
		return true
	}

	return false
}

// SetPasswordChangedMessageTemplate gets a reference to the given string and assigns it to the PasswordChangedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetPasswordChangedMessageTemplate(v string) {
	o.PasswordChangedMessageTemplate = &v
}

// GetAccountCreatedMessageTemplate returns the AccountCreatedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountCreatedMessageTemplate() string {
	if o == nil || isNil(o.AccountCreatedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountCreatedMessageTemplate
}

// GetAccountCreatedMessageTemplateOk returns a tuple with the AccountCreatedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountCreatedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountCreatedMessageTemplate) {
    return nil, false
	}
	return o.AccountCreatedMessageTemplate, true
}

// HasAccountCreatedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountCreatedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountCreatedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountCreatedMessageTemplate gets a reference to the given string and assigns it to the AccountCreatedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountCreatedMessageTemplate(v string) {
	o.AccountCreatedMessageTemplate = &v
}

// GetAccountUpdatedMessageTemplate returns the AccountUpdatedMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUpdatedMessageTemplate() string {
	if o == nil || isNil(o.AccountUpdatedMessageTemplate) {
		var ret string
		return ret
	}
	return *o.AccountUpdatedMessageTemplate
}

// GetAccountUpdatedMessageTemplateOk returns a tuple with the AccountUpdatedMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUpdatedMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.AccountUpdatedMessageTemplate) {
    return nil, false
	}
	return o.AccountUpdatedMessageTemplate, true
}

// HasAccountUpdatedMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountUpdatedMessageTemplate() bool {
	if o != nil && !isNil(o.AccountUpdatedMessageTemplate) {
		return true
	}

	return false
}

// SetAccountUpdatedMessageTemplate gets a reference to the given string and assigns it to the AccountUpdatedMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountUpdatedMessageTemplate(v string) {
	o.AccountUpdatedMessageTemplate = &v
}

// GetBindPasswordFailedValidationMessageTemplate returns the BindPasswordFailedValidationMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetBindPasswordFailedValidationMessageTemplate() string {
	if o == nil || isNil(o.BindPasswordFailedValidationMessageTemplate) {
		var ret string
		return ret
	}
	return *o.BindPasswordFailedValidationMessageTemplate
}

// GetBindPasswordFailedValidationMessageTemplateOk returns a tuple with the BindPasswordFailedValidationMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetBindPasswordFailedValidationMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.BindPasswordFailedValidationMessageTemplate) {
    return nil, false
	}
	return o.BindPasswordFailedValidationMessageTemplate, true
}

// HasBindPasswordFailedValidationMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasBindPasswordFailedValidationMessageTemplate() bool {
	if o != nil && !isNil(o.BindPasswordFailedValidationMessageTemplate) {
		return true
	}

	return false
}

// SetBindPasswordFailedValidationMessageTemplate gets a reference to the given string and assigns it to the BindPasswordFailedValidationMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetBindPasswordFailedValidationMessageTemplate(v string) {
	o.BindPasswordFailedValidationMessageTemplate = &v
}

// GetMustChangePasswordMessageTemplate returns the MustChangePasswordMessageTemplate field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetMustChangePasswordMessageTemplate() string {
	if o == nil || isNil(o.MustChangePasswordMessageTemplate) {
		var ret string
		return ret
	}
	return *o.MustChangePasswordMessageTemplate
}

// GetMustChangePasswordMessageTemplateOk returns a tuple with the MustChangePasswordMessageTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetMustChangePasswordMessageTemplateOk() (*string, bool) {
	if o == nil || isNil(o.MustChangePasswordMessageTemplate) {
    return nil, false
	}
	return o.MustChangePasswordMessageTemplate, true
}

// HasMustChangePasswordMessageTemplate returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasMustChangePasswordMessageTemplate() bool {
	if o != nil && !isNil(o.MustChangePasswordMessageTemplate) {
		return true
	}

	return false
}

// SetMustChangePasswordMessageTemplate gets a reference to the given string and assigns it to the MustChangePasswordMessageTemplate field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetMustChangePasswordMessageTemplate(v string) {
	o.MustChangePasswordMessageTemplate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAsynchronous returns the Asynchronous field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAsynchronous() bool {
	if o == nil || isNil(o.Asynchronous) {
		var ret bool
		return ret
	}
	return *o.Asynchronous
}

// GetAsynchronousOk returns a tuple with the Asynchronous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAsynchronousOk() (*bool, bool) {
	if o == nil || isNil(o.Asynchronous) {
    return nil, false
	}
	return o.Asynchronous, true
}

// HasAsynchronous returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAsynchronous() bool {
	if o != nil && !isNil(o.Asynchronous) {
		return true
	}

	return false
}

// SetAsynchronous gets a reference to the given bool and assigns it to the Asynchronous field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAsynchronous(v bool) {
	o.Asynchronous = &v
}

// GetAccountCreationNotificationRequestCriteria returns the AccountCreationNotificationRequestCriteria field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountCreationNotificationRequestCriteria() string {
	if o == nil || isNil(o.AccountCreationNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountCreationNotificationRequestCriteria
}

// GetAccountCreationNotificationRequestCriteriaOk returns a tuple with the AccountCreationNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountCreationNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.AccountCreationNotificationRequestCriteria) {
    return nil, false
	}
	return o.AccountCreationNotificationRequestCriteria, true
}

// HasAccountCreationNotificationRequestCriteria returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountCreationNotificationRequestCriteria() bool {
	if o != nil && !isNil(o.AccountCreationNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountCreationNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountCreationNotificationRequestCriteria field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountCreationNotificationRequestCriteria(v string) {
	o.AccountCreationNotificationRequestCriteria = &v
}

// GetAccountUpdateNotificationRequestCriteria returns the AccountUpdateNotificationRequestCriteria field value if set, zero value otherwise.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUpdateNotificationRequestCriteria() string {
	if o == nil || isNil(o.AccountUpdateNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountUpdateNotificationRequestCriteria
}

// GetAccountUpdateNotificationRequestCriteriaOk returns a tuple with the AccountUpdateNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) GetAccountUpdateNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.AccountUpdateNotificationRequestCriteria) {
    return nil, false
	}
	return o.AccountUpdateNotificationRequestCriteria, true
}

// HasAccountUpdateNotificationRequestCriteria returns a boolean if a field has been set.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) HasAccountUpdateNotificationRequestCriteria() bool {
	if o != nil && !isNil(o.AccountUpdateNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountUpdateNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountUpdateNotificationRequestCriteria field.
func (o *MultiPartEmailAccountStatusNotificationHandlerShared) SetAccountUpdateNotificationRequestCriteria(v string) {
	o.AccountUpdateNotificationRequestCriteria = &v
}

func (o MultiPartEmailAccountStatusNotificationHandlerShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.AccountTemporarilyFailureLockedMessageTemplate) {
		toSerialize["accountTemporarilyFailureLockedMessageTemplate"] = o.AccountTemporarilyFailureLockedMessageTemplate
	}
	if !isNil(o.AccountPermanentlyFailureLockedMessageTemplate) {
		toSerialize["accountPermanentlyFailureLockedMessageTemplate"] = o.AccountPermanentlyFailureLockedMessageTemplate
	}
	if !isNil(o.AccountIdleLockedMessageTemplate) {
		toSerialize["accountIdleLockedMessageTemplate"] = o.AccountIdleLockedMessageTemplate
	}
	if !isNil(o.AccountResetLockedMessageTemplate) {
		toSerialize["accountResetLockedMessageTemplate"] = o.AccountResetLockedMessageTemplate
	}
	if !isNil(o.AccountUnlockedMessageTemplate) {
		toSerialize["accountUnlockedMessageTemplate"] = o.AccountUnlockedMessageTemplate
	}
	if !isNil(o.AccountDisabledMessageTemplate) {
		toSerialize["accountDisabledMessageTemplate"] = o.AccountDisabledMessageTemplate
	}
	if !isNil(o.AccountEnabledMessageTemplate) {
		toSerialize["accountEnabledMessageTemplate"] = o.AccountEnabledMessageTemplate
	}
	if !isNil(o.AccountNotYetActiveMessageTemplate) {
		toSerialize["accountNotYetActiveMessageTemplate"] = o.AccountNotYetActiveMessageTemplate
	}
	if !isNil(o.AccountExpiredMessageTemplate) {
		toSerialize["accountExpiredMessageTemplate"] = o.AccountExpiredMessageTemplate
	}
	if !isNil(o.PasswordExpiredMessageTemplate) {
		toSerialize["passwordExpiredMessageTemplate"] = o.PasswordExpiredMessageTemplate
	}
	if !isNil(o.PasswordExpiringMessageTemplate) {
		toSerialize["passwordExpiringMessageTemplate"] = o.PasswordExpiringMessageTemplate
	}
	if !isNil(o.PasswordResetMessageTemplate) {
		toSerialize["passwordResetMessageTemplate"] = o.PasswordResetMessageTemplate
	}
	if !isNil(o.PasswordChangedMessageTemplate) {
		toSerialize["passwordChangedMessageTemplate"] = o.PasswordChangedMessageTemplate
	}
	if !isNil(o.AccountCreatedMessageTemplate) {
		toSerialize["accountCreatedMessageTemplate"] = o.AccountCreatedMessageTemplate
	}
	if !isNil(o.AccountUpdatedMessageTemplate) {
		toSerialize["accountUpdatedMessageTemplate"] = o.AccountUpdatedMessageTemplate
	}
	if !isNil(o.BindPasswordFailedValidationMessageTemplate) {
		toSerialize["bindPasswordFailedValidationMessageTemplate"] = o.BindPasswordFailedValidationMessageTemplate
	}
	if !isNil(o.MustChangePasswordMessageTemplate) {
		toSerialize["mustChangePasswordMessageTemplate"] = o.MustChangePasswordMessageTemplate
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Asynchronous) {
		toSerialize["asynchronous"] = o.Asynchronous
	}
	if !isNil(o.AccountCreationNotificationRequestCriteria) {
		toSerialize["accountCreationNotificationRequestCriteria"] = o.AccountCreationNotificationRequestCriteria
	}
	if !isNil(o.AccountUpdateNotificationRequestCriteria) {
		toSerialize["accountUpdateNotificationRequestCriteria"] = o.AccountUpdateNotificationRequestCriteria
	}
	return json.Marshal(toSerialize)
}

type NullableMultiPartEmailAccountStatusNotificationHandlerShared struct {
	value *MultiPartEmailAccountStatusNotificationHandlerShared
	isSet bool
}

func (v NullableMultiPartEmailAccountStatusNotificationHandlerShared) Get() *MultiPartEmailAccountStatusNotificationHandlerShared {
	return v.value
}

func (v *NullableMultiPartEmailAccountStatusNotificationHandlerShared) Set(val *MultiPartEmailAccountStatusNotificationHandlerShared) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiPartEmailAccountStatusNotificationHandlerShared) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiPartEmailAccountStatusNotificationHandlerShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiPartEmailAccountStatusNotificationHandlerShared(val *MultiPartEmailAccountStatusNotificationHandlerShared) *NullableMultiPartEmailAccountStatusNotificationHandlerShared {
	return &NullableMultiPartEmailAccountStatusNotificationHandlerShared{value: val, isSet: true}
}

func (v NullableMultiPartEmailAccountStatusNotificationHandlerShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiPartEmailAccountStatusNotificationHandlerShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


