/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddHttpServletExtensionRequest - struct for AddHttpServletExtensionRequest
type AddHttpServletExtensionRequest struct {
	AddAvailabilityStateHttpServletExtensionRequest *AddAvailabilityStateHttpServletExtensionRequest
	AddFileServerHttpServletExtensionRequest        *AddFileServerHttpServletExtensionRequest
	AddGroovyScriptedHttpServletExtensionRequest    *AddGroovyScriptedHttpServletExtensionRequest
	AddLdapMappedScimHttpServletExtensionRequest    *AddLdapMappedScimHttpServletExtensionRequest
	AddQuickstartHttpServletExtensionRequest        *AddQuickstartHttpServletExtensionRequest
	AddThirdPartyHttpServletExtensionRequest        *AddThirdPartyHttpServletExtensionRequest
}

// AddAvailabilityStateHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddAvailabilityStateHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddAvailabilityStateHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddAvailabilityStateHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddAvailabilityStateHttpServletExtensionRequest: v,
	}
}

// AddFileServerHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddFileServerHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddFileServerHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddFileServerHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddFileServerHttpServletExtensionRequest: v,
	}
}

// AddGroovyScriptedHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddGroovyScriptedHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddGroovyScriptedHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddGroovyScriptedHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddGroovyScriptedHttpServletExtensionRequest: v,
	}
}

// AddLdapMappedScimHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddLdapMappedScimHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddLdapMappedScimHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddLdapMappedScimHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddLdapMappedScimHttpServletExtensionRequest: v,
	}
}

// AddQuickstartHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddQuickstartHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddQuickstartHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddQuickstartHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddQuickstartHttpServletExtensionRequest: v,
	}
}

// AddThirdPartyHttpServletExtensionRequestAsAddHttpServletExtensionRequest is a convenience function that returns AddThirdPartyHttpServletExtensionRequest wrapped in AddHttpServletExtensionRequest
func AddThirdPartyHttpServletExtensionRequestAsAddHttpServletExtensionRequest(v *AddThirdPartyHttpServletExtensionRequest) AddHttpServletExtensionRequest {
	return AddHttpServletExtensionRequest{
		AddThirdPartyHttpServletExtensionRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddHttpServletExtensionRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddAvailabilityStateHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddAvailabilityStateHttpServletExtensionRequest)
	if err == nil {
		jsonAddAvailabilityStateHttpServletExtensionRequest, _ := json.Marshal(dst.AddAvailabilityStateHttpServletExtensionRequest)
		if string(jsonAddAvailabilityStateHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddAvailabilityStateHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddAvailabilityStateHttpServletExtensionRequest = nil
	}

	// try to unmarshal data into AddFileServerHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddFileServerHttpServletExtensionRequest)
	if err == nil {
		jsonAddFileServerHttpServletExtensionRequest, _ := json.Marshal(dst.AddFileServerHttpServletExtensionRequest)
		if string(jsonAddFileServerHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddFileServerHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddFileServerHttpServletExtensionRequest = nil
	}

	// try to unmarshal data into AddGroovyScriptedHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddGroovyScriptedHttpServletExtensionRequest)
	if err == nil {
		jsonAddGroovyScriptedHttpServletExtensionRequest, _ := json.Marshal(dst.AddGroovyScriptedHttpServletExtensionRequest)
		if string(jsonAddGroovyScriptedHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddGroovyScriptedHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGroovyScriptedHttpServletExtensionRequest = nil
	}

	// try to unmarshal data into AddLdapMappedScimHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddLdapMappedScimHttpServletExtensionRequest)
	if err == nil {
		jsonAddLdapMappedScimHttpServletExtensionRequest, _ := json.Marshal(dst.AddLdapMappedScimHttpServletExtensionRequest)
		if string(jsonAddLdapMappedScimHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddLdapMappedScimHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddLdapMappedScimHttpServletExtensionRequest = nil
	}

	// try to unmarshal data into AddQuickstartHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddQuickstartHttpServletExtensionRequest)
	if err == nil {
		jsonAddQuickstartHttpServletExtensionRequest, _ := json.Marshal(dst.AddQuickstartHttpServletExtensionRequest)
		if string(jsonAddQuickstartHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddQuickstartHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddQuickstartHttpServletExtensionRequest = nil
	}

	// try to unmarshal data into AddThirdPartyHttpServletExtensionRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyHttpServletExtensionRequest)
	if err == nil {
		jsonAddThirdPartyHttpServletExtensionRequest, _ := json.Marshal(dst.AddThirdPartyHttpServletExtensionRequest)
		if string(jsonAddThirdPartyHttpServletExtensionRequest) == "{}" { // empty struct
			dst.AddThirdPartyHttpServletExtensionRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyHttpServletExtensionRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddAvailabilityStateHttpServletExtensionRequest = nil
		dst.AddFileServerHttpServletExtensionRequest = nil
		dst.AddGroovyScriptedHttpServletExtensionRequest = nil
		dst.AddLdapMappedScimHttpServletExtensionRequest = nil
		dst.AddQuickstartHttpServletExtensionRequest = nil
		dst.AddThirdPartyHttpServletExtensionRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddHttpServletExtensionRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddHttpServletExtensionRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddHttpServletExtensionRequest) MarshalJSON() ([]byte, error) {
	if src.AddAvailabilityStateHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddAvailabilityStateHttpServletExtensionRequest)
	}

	if src.AddFileServerHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddFileServerHttpServletExtensionRequest)
	}

	if src.AddGroovyScriptedHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddGroovyScriptedHttpServletExtensionRequest)
	}

	if src.AddLdapMappedScimHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddLdapMappedScimHttpServletExtensionRequest)
	}

	if src.AddQuickstartHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddQuickstartHttpServletExtensionRequest)
	}

	if src.AddThirdPartyHttpServletExtensionRequest != nil {
		return json.Marshal(&src.AddThirdPartyHttpServletExtensionRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddHttpServletExtensionRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddAvailabilityStateHttpServletExtensionRequest != nil {
		return obj.AddAvailabilityStateHttpServletExtensionRequest
	}

	if obj.AddFileServerHttpServletExtensionRequest != nil {
		return obj.AddFileServerHttpServletExtensionRequest
	}

	if obj.AddGroovyScriptedHttpServletExtensionRequest != nil {
		return obj.AddGroovyScriptedHttpServletExtensionRequest
	}

	if obj.AddLdapMappedScimHttpServletExtensionRequest != nil {
		return obj.AddLdapMappedScimHttpServletExtensionRequest
	}

	if obj.AddQuickstartHttpServletExtensionRequest != nil {
		return obj.AddQuickstartHttpServletExtensionRequest
	}

	if obj.AddThirdPartyHttpServletExtensionRequest != nil {
		return obj.AddThirdPartyHttpServletExtensionRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddHttpServletExtensionRequest struct {
	value *AddHttpServletExtensionRequest
	isSet bool
}

func (v NullableAddHttpServletExtensionRequest) Get() *AddHttpServletExtensionRequest {
	return v.value
}

func (v *NullableAddHttpServletExtensionRequest) Set(val *AddHttpServletExtensionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddHttpServletExtensionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddHttpServletExtensionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddHttpServletExtensionRequest(val *AddHttpServletExtensionRequest) *NullableAddHttpServletExtensionRequest {
	return &NullableAddHttpServletExtensionRequest{value: val, isSet: true}
}

func (v NullableAddHttpServletExtensionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddHttpServletExtensionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
