/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumdetailedHttpOperationLogPublisherSchemaUrn the model 'EnumdetailedHttpOperationLogPublisherSchemaUrn'
type EnumdetailedHttpOperationLogPublisherSchemaUrn string

// List of Enumdetailed-http-operation-log-publisherSchemaUrn
const (
	ENUMDETAILEDHTTPOPERATIONLOGPUBLISHERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0LOG_PUBLISHERDETAILED_HTTP_OPERATION EnumdetailedHttpOperationLogPublisherSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation"
)

// All allowed values of EnumdetailedHttpOperationLogPublisherSchemaUrn enum
var AllowedEnumdetailedHttpOperationLogPublisherSchemaUrnEnumValues = []EnumdetailedHttpOperationLogPublisherSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation",
}

func (v *EnumdetailedHttpOperationLogPublisherSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumdetailedHttpOperationLogPublisherSchemaUrn(value)
	for _, existing := range AllowedEnumdetailedHttpOperationLogPublisherSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumdetailedHttpOperationLogPublisherSchemaUrn", value)
}

// NewEnumdetailedHttpOperationLogPublisherSchemaUrnFromValue returns a pointer to a valid EnumdetailedHttpOperationLogPublisherSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumdetailedHttpOperationLogPublisherSchemaUrnFromValue(v string) (*EnumdetailedHttpOperationLogPublisherSchemaUrn, error) {
	ev := EnumdetailedHttpOperationLogPublisherSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumdetailedHttpOperationLogPublisherSchemaUrn: valid values are %v", v, AllowedEnumdetailedHttpOperationLogPublisherSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumdetailedHttpOperationLogPublisherSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumdetailedHttpOperationLogPublisherSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumdetailed-http-operation-log-publisherSchemaUrn value
func (v EnumdetailedHttpOperationLogPublisherSchemaUrn) Ptr() *EnumdetailedHttpOperationLogPublisherSchemaUrn {
	return &v
}

type NullableEnumdetailedHttpOperationLogPublisherSchemaUrn struct {
	value *EnumdetailedHttpOperationLogPublisherSchemaUrn
	isSet bool
}

func (v NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) Get() *EnumdetailedHttpOperationLogPublisherSchemaUrn {
	return v.value
}

func (v *NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) Set(val *EnumdetailedHttpOperationLogPublisherSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumdetailedHttpOperationLogPublisherSchemaUrn(val *EnumdetailedHttpOperationLogPublisherSchemaUrn) *NullableEnumdetailedHttpOperationLogPublisherSchemaUrn {
	return &NullableEnumdetailedHttpOperationLogPublisherSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumdetailedHttpOperationLogPublisherSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

