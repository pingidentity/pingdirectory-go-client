/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddConnectionCriteria200Response - struct for AddConnectionCriteria200Response
type AddConnectionCriteria200Response struct {
	AggregateConnectionCriteriaResponse *AggregateConnectionCriteriaResponse
	SimpleConnectionCriteriaResponse *SimpleConnectionCriteriaResponse
	ThirdPartyConnectionCriteriaResponse *ThirdPartyConnectionCriteriaResponse
}

// AggregateConnectionCriteriaResponseAsAddConnectionCriteria200Response is a convenience function that returns AggregateConnectionCriteriaResponse wrapped in AddConnectionCriteria200Response
func AggregateConnectionCriteriaResponseAsAddConnectionCriteria200Response(v *AggregateConnectionCriteriaResponse) AddConnectionCriteria200Response {
	return AddConnectionCriteria200Response{
		AggregateConnectionCriteriaResponse: v,
	}
}

// SimpleConnectionCriteriaResponseAsAddConnectionCriteria200Response is a convenience function that returns SimpleConnectionCriteriaResponse wrapped in AddConnectionCriteria200Response
func SimpleConnectionCriteriaResponseAsAddConnectionCriteria200Response(v *SimpleConnectionCriteriaResponse) AddConnectionCriteria200Response {
	return AddConnectionCriteria200Response{
		SimpleConnectionCriteriaResponse: v,
	}
}

// ThirdPartyConnectionCriteriaResponseAsAddConnectionCriteria200Response is a convenience function that returns ThirdPartyConnectionCriteriaResponse wrapped in AddConnectionCriteria200Response
func ThirdPartyConnectionCriteriaResponseAsAddConnectionCriteria200Response(v *ThirdPartyConnectionCriteriaResponse) AddConnectionCriteria200Response {
	return AddConnectionCriteria200Response{
		ThirdPartyConnectionCriteriaResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddConnectionCriteria200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AggregateConnectionCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.AggregateConnectionCriteriaResponse)
	if err == nil {
		jsonAggregateConnectionCriteriaResponse, _ := json.Marshal(dst.AggregateConnectionCriteriaResponse)
		if string(jsonAggregateConnectionCriteriaResponse) == "{}" { // empty struct
			dst.AggregateConnectionCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.AggregateConnectionCriteriaResponse = nil
	}

	// try to unmarshal data into SimpleConnectionCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.SimpleConnectionCriteriaResponse)
	if err == nil {
		jsonSimpleConnectionCriteriaResponse, _ := json.Marshal(dst.SimpleConnectionCriteriaResponse)
		if string(jsonSimpleConnectionCriteriaResponse) == "{}" { // empty struct
			dst.SimpleConnectionCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.SimpleConnectionCriteriaResponse = nil
	}

	// try to unmarshal data into ThirdPartyConnectionCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyConnectionCriteriaResponse)
	if err == nil {
		jsonThirdPartyConnectionCriteriaResponse, _ := json.Marshal(dst.ThirdPartyConnectionCriteriaResponse)
		if string(jsonThirdPartyConnectionCriteriaResponse) == "{}" { // empty struct
			dst.ThirdPartyConnectionCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyConnectionCriteriaResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AggregateConnectionCriteriaResponse = nil
		dst.SimpleConnectionCriteriaResponse = nil
		dst.ThirdPartyConnectionCriteriaResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddConnectionCriteria200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddConnectionCriteria200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddConnectionCriteria200Response) MarshalJSON() ([]byte, error) {
	if src.AggregateConnectionCriteriaResponse != nil {
		return json.Marshal(&src.AggregateConnectionCriteriaResponse)
	}

	if src.SimpleConnectionCriteriaResponse != nil {
		return json.Marshal(&src.SimpleConnectionCriteriaResponse)
	}

	if src.ThirdPartyConnectionCriteriaResponse != nil {
		return json.Marshal(&src.ThirdPartyConnectionCriteriaResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddConnectionCriteria200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AggregateConnectionCriteriaResponse != nil {
		return obj.AggregateConnectionCriteriaResponse
	}

	if obj.SimpleConnectionCriteriaResponse != nil {
		return obj.SimpleConnectionCriteriaResponse
	}

	if obj.ThirdPartyConnectionCriteriaResponse != nil {
		return obj.ThirdPartyConnectionCriteriaResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddConnectionCriteria200Response struct {
	value *AddConnectionCriteria200Response
	isSet bool
}

func (v NullableAddConnectionCriteria200Response) Get() *AddConnectionCriteria200Response {
	return v.value
}

func (v *NullableAddConnectionCriteria200Response) Set(val *AddConnectionCriteria200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddConnectionCriteria200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddConnectionCriteria200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddConnectionCriteria200Response(val *AddConnectionCriteria200Response) *NullableAddConnectionCriteria200Response {
	return &NullableAddConnectionCriteria200Response{value: val, isSet: true}
}

func (v NullableAddConnectionCriteria200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddConnectionCriteria200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


