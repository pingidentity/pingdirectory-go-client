/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddAlertHandlerRequest - struct for AddAlertHandlerRequest
type AddAlertHandlerRequest struct {
	AddErrorLogAlertHandlerRequest       *AddErrorLogAlertHandlerRequest
	AddExecAlertHandlerRequest           *AddExecAlertHandlerRequest
	AddGroovyScriptedAlertHandlerRequest *AddGroovyScriptedAlertHandlerRequest
	AddJmxAlertHandlerRequest            *AddJmxAlertHandlerRequest
	AddSmtpAlertHandlerRequest           *AddSmtpAlertHandlerRequest
	AddSnmpAlertHandlerRequest           *AddSnmpAlertHandlerRequest
	AddSnmpSubAgentAlertHandlerRequest   *AddSnmpSubAgentAlertHandlerRequest
	AddThirdPartyAlertHandlerRequest     *AddThirdPartyAlertHandlerRequest
	AddTwilioAlertHandlerRequest         *AddTwilioAlertHandlerRequest
}

// AddErrorLogAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddErrorLogAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddErrorLogAlertHandlerRequestAsAddAlertHandlerRequest(v *AddErrorLogAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddErrorLogAlertHandlerRequest: v,
	}
}

// AddExecAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddExecAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddExecAlertHandlerRequestAsAddAlertHandlerRequest(v *AddExecAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddExecAlertHandlerRequest: v,
	}
}

// AddGroovyScriptedAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddGroovyScriptedAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddGroovyScriptedAlertHandlerRequestAsAddAlertHandlerRequest(v *AddGroovyScriptedAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddGroovyScriptedAlertHandlerRequest: v,
	}
}

// AddJmxAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddJmxAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddJmxAlertHandlerRequestAsAddAlertHandlerRequest(v *AddJmxAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddJmxAlertHandlerRequest: v,
	}
}

// AddSmtpAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddSmtpAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddSmtpAlertHandlerRequestAsAddAlertHandlerRequest(v *AddSmtpAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddSmtpAlertHandlerRequest: v,
	}
}

// AddSnmpAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddSnmpAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddSnmpAlertHandlerRequestAsAddAlertHandlerRequest(v *AddSnmpAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddSnmpAlertHandlerRequest: v,
	}
}

// AddSnmpSubAgentAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddSnmpSubAgentAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddSnmpSubAgentAlertHandlerRequestAsAddAlertHandlerRequest(v *AddSnmpSubAgentAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddSnmpSubAgentAlertHandlerRequest: v,
	}
}

// AddThirdPartyAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddThirdPartyAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddThirdPartyAlertHandlerRequestAsAddAlertHandlerRequest(v *AddThirdPartyAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddThirdPartyAlertHandlerRequest: v,
	}
}

// AddTwilioAlertHandlerRequestAsAddAlertHandlerRequest is a convenience function that returns AddTwilioAlertHandlerRequest wrapped in AddAlertHandlerRequest
func AddTwilioAlertHandlerRequestAsAddAlertHandlerRequest(v *AddTwilioAlertHandlerRequest) AddAlertHandlerRequest {
	return AddAlertHandlerRequest{
		AddTwilioAlertHandlerRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddAlertHandlerRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddErrorLogAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddErrorLogAlertHandlerRequest)
	if err == nil {
		jsonAddErrorLogAlertHandlerRequest, _ := json.Marshal(dst.AddErrorLogAlertHandlerRequest)
		if string(jsonAddErrorLogAlertHandlerRequest) == "{}" { // empty struct
			dst.AddErrorLogAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddErrorLogAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddExecAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddExecAlertHandlerRequest)
	if err == nil {
		jsonAddExecAlertHandlerRequest, _ := json.Marshal(dst.AddExecAlertHandlerRequest)
		if string(jsonAddExecAlertHandlerRequest) == "{}" { // empty struct
			dst.AddExecAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddExecAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddGroovyScriptedAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddGroovyScriptedAlertHandlerRequest)
	if err == nil {
		jsonAddGroovyScriptedAlertHandlerRequest, _ := json.Marshal(dst.AddGroovyScriptedAlertHandlerRequest)
		if string(jsonAddGroovyScriptedAlertHandlerRequest) == "{}" { // empty struct
			dst.AddGroovyScriptedAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGroovyScriptedAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddJmxAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddJmxAlertHandlerRequest)
	if err == nil {
		jsonAddJmxAlertHandlerRequest, _ := json.Marshal(dst.AddJmxAlertHandlerRequest)
		if string(jsonAddJmxAlertHandlerRequest) == "{}" { // empty struct
			dst.AddJmxAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddJmxAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddSmtpAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSmtpAlertHandlerRequest)
	if err == nil {
		jsonAddSmtpAlertHandlerRequest, _ := json.Marshal(dst.AddSmtpAlertHandlerRequest)
		if string(jsonAddSmtpAlertHandlerRequest) == "{}" { // empty struct
			dst.AddSmtpAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSmtpAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddSnmpAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSnmpAlertHandlerRequest)
	if err == nil {
		jsonAddSnmpAlertHandlerRequest, _ := json.Marshal(dst.AddSnmpAlertHandlerRequest)
		if string(jsonAddSnmpAlertHandlerRequest) == "{}" { // empty struct
			dst.AddSnmpAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSnmpAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddSnmpSubAgentAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSnmpSubAgentAlertHandlerRequest)
	if err == nil {
		jsonAddSnmpSubAgentAlertHandlerRequest, _ := json.Marshal(dst.AddSnmpSubAgentAlertHandlerRequest)
		if string(jsonAddSnmpSubAgentAlertHandlerRequest) == "{}" { // empty struct
			dst.AddSnmpSubAgentAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSnmpSubAgentAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddThirdPartyAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyAlertHandlerRequest)
	if err == nil {
		jsonAddThirdPartyAlertHandlerRequest, _ := json.Marshal(dst.AddThirdPartyAlertHandlerRequest)
		if string(jsonAddThirdPartyAlertHandlerRequest) == "{}" { // empty struct
			dst.AddThirdPartyAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyAlertHandlerRequest = nil
	}

	// try to unmarshal data into AddTwilioAlertHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddTwilioAlertHandlerRequest)
	if err == nil {
		jsonAddTwilioAlertHandlerRequest, _ := json.Marshal(dst.AddTwilioAlertHandlerRequest)
		if string(jsonAddTwilioAlertHandlerRequest) == "{}" { // empty struct
			dst.AddTwilioAlertHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddTwilioAlertHandlerRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddErrorLogAlertHandlerRequest = nil
		dst.AddExecAlertHandlerRequest = nil
		dst.AddGroovyScriptedAlertHandlerRequest = nil
		dst.AddJmxAlertHandlerRequest = nil
		dst.AddSmtpAlertHandlerRequest = nil
		dst.AddSnmpAlertHandlerRequest = nil
		dst.AddSnmpSubAgentAlertHandlerRequest = nil
		dst.AddThirdPartyAlertHandlerRequest = nil
		dst.AddTwilioAlertHandlerRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddAlertHandlerRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddAlertHandlerRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddAlertHandlerRequest) MarshalJSON() ([]byte, error) {
	if src.AddErrorLogAlertHandlerRequest != nil {
		return json.Marshal(&src.AddErrorLogAlertHandlerRequest)
	}

	if src.AddExecAlertHandlerRequest != nil {
		return json.Marshal(&src.AddExecAlertHandlerRequest)
	}

	if src.AddGroovyScriptedAlertHandlerRequest != nil {
		return json.Marshal(&src.AddGroovyScriptedAlertHandlerRequest)
	}

	if src.AddJmxAlertHandlerRequest != nil {
		return json.Marshal(&src.AddJmxAlertHandlerRequest)
	}

	if src.AddSmtpAlertHandlerRequest != nil {
		return json.Marshal(&src.AddSmtpAlertHandlerRequest)
	}

	if src.AddSnmpAlertHandlerRequest != nil {
		return json.Marshal(&src.AddSnmpAlertHandlerRequest)
	}

	if src.AddSnmpSubAgentAlertHandlerRequest != nil {
		return json.Marshal(&src.AddSnmpSubAgentAlertHandlerRequest)
	}

	if src.AddThirdPartyAlertHandlerRequest != nil {
		return json.Marshal(&src.AddThirdPartyAlertHandlerRequest)
	}

	if src.AddTwilioAlertHandlerRequest != nil {
		return json.Marshal(&src.AddTwilioAlertHandlerRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddAlertHandlerRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddErrorLogAlertHandlerRequest != nil {
		return obj.AddErrorLogAlertHandlerRequest
	}

	if obj.AddExecAlertHandlerRequest != nil {
		return obj.AddExecAlertHandlerRequest
	}

	if obj.AddGroovyScriptedAlertHandlerRequest != nil {
		return obj.AddGroovyScriptedAlertHandlerRequest
	}

	if obj.AddJmxAlertHandlerRequest != nil {
		return obj.AddJmxAlertHandlerRequest
	}

	if obj.AddSmtpAlertHandlerRequest != nil {
		return obj.AddSmtpAlertHandlerRequest
	}

	if obj.AddSnmpAlertHandlerRequest != nil {
		return obj.AddSnmpAlertHandlerRequest
	}

	if obj.AddSnmpSubAgentAlertHandlerRequest != nil {
		return obj.AddSnmpSubAgentAlertHandlerRequest
	}

	if obj.AddThirdPartyAlertHandlerRequest != nil {
		return obj.AddThirdPartyAlertHandlerRequest
	}

	if obj.AddTwilioAlertHandlerRequest != nil {
		return obj.AddTwilioAlertHandlerRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddAlertHandlerRequest struct {
	value *AddAlertHandlerRequest
	isSet bool
}

func (v NullableAddAlertHandlerRequest) Get() *AddAlertHandlerRequest {
	return v.value
}

func (v *NullableAddAlertHandlerRequest) Set(val *AddAlertHandlerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAlertHandlerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAlertHandlerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAlertHandlerRequest(val *AddAlertHandlerRequest) *NullableAddAlertHandlerRequest {
	return &NullableAddAlertHandlerRequest{value: val, isSet: true}
}

func (v NullableAddAlertHandlerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAlertHandlerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
