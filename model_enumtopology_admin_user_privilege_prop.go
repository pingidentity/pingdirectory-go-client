/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumtopologyAdminUserPrivilegeProp Privileges that are either explicitly granted or revoked from the root user. Privileges can be revoked by including a minus sign (-) before the privilege name. This is stored in the ds-privilege-name LDAP attribute.
type EnumtopologyAdminUserPrivilegeProp string

// List of Enumtopology-admin-user-privilegeProp
const (
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_AUDIT_DATA_SECURITY                        EnumtopologyAdminUserPrivilegeProp = "audit-data-security"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_AUDIT_DATA_SECURITY                        EnumtopologyAdminUserPrivilegeProp = "-audit-data-security"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_ACL                                 EnumtopologyAdminUserPrivilegeProp = "bypass-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_ACL                                 EnumtopologyAdminUserPrivilegeProp = "-bypass-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_READ_ACL                            EnumtopologyAdminUserPrivilegeProp = "bypass-read-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_READ_ACL                            EnumtopologyAdminUserPrivilegeProp = "-bypass-read-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_MODIFY_ACL                                 EnumtopologyAdminUserPrivilegeProp = "modify-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_MODIFY_ACL                                 EnumtopologyAdminUserPrivilegeProp = "-modify-acl"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_CONFIG_READ                                EnumtopologyAdminUserPrivilegeProp = "config-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_CONFIG_READ                                EnumtopologyAdminUserPrivilegeProp = "-config-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_CONFIG_WRITE                               EnumtopologyAdminUserPrivilegeProp = "config-write"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_CONFIG_WRITE                               EnumtopologyAdminUserPrivilegeProp = "-config-write"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_READ                                   EnumtopologyAdminUserPrivilegeProp = "jmx-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_READ                                   EnumtopologyAdminUserPrivilegeProp = "-jmx-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_WRITE                                  EnumtopologyAdminUserPrivilegeProp = "jmx-write"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_WRITE                                  EnumtopologyAdminUserPrivilegeProp = "-jmx-write"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_NOTIFY                                 EnumtopologyAdminUserPrivilegeProp = "jmx-notify"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_JMX_NOTIFY                                 EnumtopologyAdminUserPrivilegeProp = "-jmx-notify"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LDIF_IMPORT                                EnumtopologyAdminUserPrivilegeProp = "ldif-import"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LDIF_IMPORT                                EnumtopologyAdminUserPrivilegeProp = "-ldif-import"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LDIF_EXPORT                                EnumtopologyAdminUserPrivilegeProp = "ldif-export"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LDIF_EXPORT                                EnumtopologyAdminUserPrivilegeProp = "-ldif-export"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BACKEND_BACKUP                             EnumtopologyAdminUserPrivilegeProp = "backend-backup"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BACKEND_BACKUP                             EnumtopologyAdminUserPrivilegeProp = "-backend-backup"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BACKEND_RESTORE                            EnumtopologyAdminUserPrivilegeProp = "backend-restore"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BACKEND_RESTORE                            EnumtopologyAdminUserPrivilegeProp = "-backend-restore"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SERVER_SHUTDOWN                            EnumtopologyAdminUserPrivilegeProp = "server-shutdown"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SERVER_SHUTDOWN                            EnumtopologyAdminUserPrivilegeProp = "-server-shutdown"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SERVER_RESTART                             EnumtopologyAdminUserPrivilegeProp = "server-restart"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SERVER_RESTART                             EnumtopologyAdminUserPrivilegeProp = "-server-restart"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PROXIED_AUTH                               EnumtopologyAdminUserPrivilegeProp = "proxied-auth"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PROXIED_AUTH                               EnumtopologyAdminUserPrivilegeProp = "-proxied-auth"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_DISCONNECT_CLIENT                          EnumtopologyAdminUserPrivilegeProp = "disconnect-client"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_DISCONNECT_CLIENT                          EnumtopologyAdminUserPrivilegeProp = "-disconnect-client"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PASSWORD_RESET                             EnumtopologyAdminUserPrivilegeProp = "password-reset"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PASSWORD_RESET                             EnumtopologyAdminUserPrivilegeProp = "-password-reset"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UPDATE_SCHEMA                              EnumtopologyAdminUserPrivilegeProp = "update-schema"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UPDATE_SCHEMA                              EnumtopologyAdminUserPrivilegeProp = "-update-schema"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PRIVILEGE_CHANGE                           EnumtopologyAdminUserPrivilegeProp = "privilege-change"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PRIVILEGE_CHANGE                           EnumtopologyAdminUserPrivilegeProp = "-privilege-change"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UNINDEXED_SEARCH                           EnumtopologyAdminUserPrivilegeProp = "unindexed-search"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UNINDEXED_SEARCH                           EnumtopologyAdminUserPrivilegeProp = "-unindexed-search"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL              EnumtopologyAdminUserPrivilegeProp = "unindexed-search-with-control"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL              EnumtopologyAdminUserPrivilegeProp = "-unindexed-search-with-control"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_PW_POLICY                           EnumtopologyAdminUserPrivilegeProp = "bypass-pw-policy"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_BYPASS_PW_POLICY                           EnumtopologyAdminUserPrivilegeProp = "-bypass-pw-policy"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LOCKDOWN_MODE                              EnumtopologyAdminUserPrivilegeProp = "lockdown-mode"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_LOCKDOWN_MODE                              EnumtopologyAdminUserPrivilegeProp = "-lockdown-mode"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_STREAM_VALUES                              EnumtopologyAdminUserPrivilegeProp = "stream-values"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_STREAM_VALUES                              EnumtopologyAdminUserPrivilegeProp = "-stream-values"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_THIRD_PARTY_TASK                           EnumtopologyAdminUserPrivilegeProp = "third-party-task"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_THIRD_PARTY_TASK                           EnumtopologyAdminUserPrivilegeProp = "-third-party-task"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_USE_ADMIN_SESSION                          EnumtopologyAdminUserPrivilegeProp = "use-admin-session"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_USE_ADMIN_SESSION                          EnumtopologyAdminUserPrivilegeProp = "-use-admin-session"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SOFT_DELETE_READ                           EnumtopologyAdminUserPrivilegeProp = "soft-delete-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_SOFT_DELETE_READ                           EnumtopologyAdminUserPrivilegeProp = "-soft-delete-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_METRICS_READ                               EnumtopologyAdminUserPrivilegeProp = "metrics-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_METRICS_READ                               EnumtopologyAdminUserPrivilegeProp = "-metrics-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_REMOTE_LOG_READ                            EnumtopologyAdminUserPrivilegeProp = "remote-log-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_REMOTE_LOG_READ                            EnumtopologyAdminUserPrivilegeProp = "-remote-log-read"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_MANAGE_TOPOLOGY                            EnumtopologyAdminUserPrivilegeProp = "manage-topology"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_MANAGE_TOPOLOGY                            EnumtopologyAdminUserPrivilegeProp = "-manage-topology"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES    EnumtopologyAdminUserPrivilegeProp = "permit-get-password-policy-state-issues"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES    EnumtopologyAdminUserPrivilegeProp = "-permit-get-password-policy-state-issues"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS            EnumtopologyAdminUserPrivilegeProp = "permit-proxied-mschapv2-details"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS            EnumtopologyAdminUserPrivilegeProp = "-permit-proxied-mschapv2-details"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumtopologyAdminUserPrivilegeProp = "permit-externally-processed-authentication"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumtopologyAdminUserPrivilegeProp = "-permit-externally-processed-authentication"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS         EnumtopologyAdminUserPrivilegeProp = "permit-export-reversible-passwords"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS         EnumtopologyAdminUserPrivilegeProp = "-permit-export-reversible-passwords"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumtopologyAdminUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumtopologyAdminUserPrivilegeProp = "-permit-forwarding-client-connection-policy"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_EXEC_TASK                                  EnumtopologyAdminUserPrivilegeProp = "exec-task"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_EXEC_TASK                                  EnumtopologyAdminUserPrivilegeProp = "-exec-task"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_COLLECT_SUPPORT_DATA                       EnumtopologyAdminUserPrivilegeProp = "collect-support-data"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_COLLECT_SUPPORT_DATA                       EnumtopologyAdminUserPrivilegeProp = "-collect-support-data"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_FILE_SERVLET_ACCESS                        EnumtopologyAdminUserPrivilegeProp = "file-servlet-access"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_FILE_SERVLET_ACCESS                        EnumtopologyAdminUserPrivilegeProp = "-file-servlet-access"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST         EnumtopologyAdminUserPrivilegeProp = "permit-replace-certificate-request"
	ENUMTOPOLOGYADMINUSERPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST         EnumtopologyAdminUserPrivilegeProp = "-permit-replace-certificate-request"
)

// All allowed values of EnumtopologyAdminUserPrivilegeProp enum
var AllowedEnumtopologyAdminUserPrivilegePropEnumValues = []EnumtopologyAdminUserPrivilegeProp{
	"audit-data-security",
	"-audit-data-security",
	"bypass-acl",
	"-bypass-acl",
	"bypass-read-acl",
	"-bypass-read-acl",
	"modify-acl",
	"-modify-acl",
	"config-read",
	"-config-read",
	"config-write",
	"-config-write",
	"jmx-read",
	"-jmx-read",
	"jmx-write",
	"-jmx-write",
	"jmx-notify",
	"-jmx-notify",
	"ldif-import",
	"-ldif-import",
	"ldif-export",
	"-ldif-export",
	"backend-backup",
	"-backend-backup",
	"backend-restore",
	"-backend-restore",
	"server-shutdown",
	"-server-shutdown",
	"server-restart",
	"-server-restart",
	"proxied-auth",
	"-proxied-auth",
	"disconnect-client",
	"-disconnect-client",
	"password-reset",
	"-password-reset",
	"update-schema",
	"-update-schema",
	"privilege-change",
	"-privilege-change",
	"unindexed-search",
	"-unindexed-search",
	"unindexed-search-with-control",
	"-unindexed-search-with-control",
	"bypass-pw-policy",
	"-bypass-pw-policy",
	"lockdown-mode",
	"-lockdown-mode",
	"stream-values",
	"-stream-values",
	"third-party-task",
	"-third-party-task",
	"use-admin-session",
	"-use-admin-session",
	"soft-delete-read",
	"-soft-delete-read",
	"metrics-read",
	"-metrics-read",
	"remote-log-read",
	"-remote-log-read",
	"manage-topology",
	"-manage-topology",
	"permit-get-password-policy-state-issues",
	"-permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"-permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"-permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"-permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"-permit-forwarding-client-connection-policy",
	"exec-task",
	"-exec-task",
	"collect-support-data",
	"-collect-support-data",
	"file-servlet-access",
	"-file-servlet-access",
	"permit-replace-certificate-request",
	"-permit-replace-certificate-request",
}

func (v *EnumtopologyAdminUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumtopologyAdminUserPrivilegeProp(value)
	for _, existing := range AllowedEnumtopologyAdminUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumtopologyAdminUserPrivilegeProp", value)
}

// NewEnumtopologyAdminUserPrivilegePropFromValue returns a pointer to a valid EnumtopologyAdminUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumtopologyAdminUserPrivilegePropFromValue(v string) (*EnumtopologyAdminUserPrivilegeProp, error) {
	ev := EnumtopologyAdminUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumtopologyAdminUserPrivilegeProp: valid values are %v", v, AllowedEnumtopologyAdminUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumtopologyAdminUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumtopologyAdminUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumtopology-admin-user-privilegeProp value
func (v EnumtopologyAdminUserPrivilegeProp) Ptr() *EnumtopologyAdminUserPrivilegeProp {
	return &v
}

type NullableEnumtopologyAdminUserPrivilegeProp struct {
	value *EnumtopologyAdminUserPrivilegeProp
	isSet bool
}

func (v NullableEnumtopologyAdminUserPrivilegeProp) Get() *EnumtopologyAdminUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumtopologyAdminUserPrivilegeProp) Set(val *EnumtopologyAdminUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumtopologyAdminUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumtopologyAdminUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumtopologyAdminUserPrivilegeProp(val *EnumtopologyAdminUserPrivilegeProp) *NullableEnumtopologyAdminUserPrivilegeProp {
	return &NullableEnumtopologyAdminUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumtopologyAdminUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumtopologyAdminUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
