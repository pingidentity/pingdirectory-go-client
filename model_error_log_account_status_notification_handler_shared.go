/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ErrorLogAccountStatusNotificationHandlerShared struct for ErrorLogAccountStatusNotificationHandlerShared
type ErrorLogAccountStatusNotificationHandlerShared struct {
	Schemas []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn `json:"schemas"`
	AccountStatusNotificationType []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp `json:"accountStatusNotificationType"`
	// A description for this Account Status Notification Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
	Enabled bool `json:"enabled"`
	// Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
	Asynchronous *bool `json:"asynchronous,omitempty"`
	// A request criteria object that identifies which add requests should result in account creation notifications for this handler.
	AccountCreationNotificationRequestCriteria *string `json:"accountCreationNotificationRequestCriteria,omitempty"`
	// A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
	AccountUpdateNotificationRequestCriteria *string `json:"accountUpdateNotificationRequestCriteria,omitempty"`
}

// NewErrorLogAccountStatusNotificationHandlerShared instantiates a new ErrorLogAccountStatusNotificationHandlerShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorLogAccountStatusNotificationHandlerShared(schemas []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn, accountStatusNotificationType []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp, enabled bool) *ErrorLogAccountStatusNotificationHandlerShared {
	this := ErrorLogAccountStatusNotificationHandlerShared{}
	this.Schemas = schemas
	this.AccountStatusNotificationType = accountStatusNotificationType
	this.Enabled = enabled
	return &this
}

// NewErrorLogAccountStatusNotificationHandlerSharedWithDefaults instantiates a new ErrorLogAccountStatusNotificationHandlerShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorLogAccountStatusNotificationHandlerSharedWithDefaults() *ErrorLogAccountStatusNotificationHandlerShared {
	this := ErrorLogAccountStatusNotificationHandlerShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetSchemas() []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn {
	if o == nil {
		var ret []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetSchemasOk() ([]EnumerrorLogAccountStatusNotificationHandlerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetSchemas(v []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetAccountStatusNotificationType returns the AccountStatusNotificationType field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountStatusNotificationType() []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp {
	if o == nil {
		var ret []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp
		return ret
	}

	return o.AccountStatusNotificationType
}

// GetAccountStatusNotificationTypeOk returns a tuple with the AccountStatusNotificationType field value
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountStatusNotificationTypeOk() ([]EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp, bool) {
	if o == nil {
    return nil, false
	}
	return o.AccountStatusNotificationType, true
}

// SetAccountStatusNotificationType sets field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetAccountStatusNotificationType(v []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp) {
	o.AccountStatusNotificationType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAsynchronous returns the Asynchronous field value if set, zero value otherwise.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAsynchronous() bool {
	if o == nil || isNil(o.Asynchronous) {
		var ret bool
		return ret
	}
	return *o.Asynchronous
}

// GetAsynchronousOk returns a tuple with the Asynchronous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAsynchronousOk() (*bool, bool) {
	if o == nil || isNil(o.Asynchronous) {
    return nil, false
	}
	return o.Asynchronous, true
}

// HasAsynchronous returns a boolean if a field has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) HasAsynchronous() bool {
	if o != nil && !isNil(o.Asynchronous) {
		return true
	}

	return false
}

// SetAsynchronous gets a reference to the given bool and assigns it to the Asynchronous field.
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetAsynchronous(v bool) {
	o.Asynchronous = &v
}

// GetAccountCreationNotificationRequestCriteria returns the AccountCreationNotificationRequestCriteria field value if set, zero value otherwise.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountCreationNotificationRequestCriteria() string {
	if o == nil || isNil(o.AccountCreationNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountCreationNotificationRequestCriteria
}

// GetAccountCreationNotificationRequestCriteriaOk returns a tuple with the AccountCreationNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountCreationNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.AccountCreationNotificationRequestCriteria) {
    return nil, false
	}
	return o.AccountCreationNotificationRequestCriteria, true
}

// HasAccountCreationNotificationRequestCriteria returns a boolean if a field has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) HasAccountCreationNotificationRequestCriteria() bool {
	if o != nil && !isNil(o.AccountCreationNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountCreationNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountCreationNotificationRequestCriteria field.
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetAccountCreationNotificationRequestCriteria(v string) {
	o.AccountCreationNotificationRequestCriteria = &v
}

// GetAccountUpdateNotificationRequestCriteria returns the AccountUpdateNotificationRequestCriteria field value if set, zero value otherwise.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountUpdateNotificationRequestCriteria() string {
	if o == nil || isNil(o.AccountUpdateNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountUpdateNotificationRequestCriteria
}

// GetAccountUpdateNotificationRequestCriteriaOk returns a tuple with the AccountUpdateNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) GetAccountUpdateNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.AccountUpdateNotificationRequestCriteria) {
    return nil, false
	}
	return o.AccountUpdateNotificationRequestCriteria, true
}

// HasAccountUpdateNotificationRequestCriteria returns a boolean if a field has been set.
func (o *ErrorLogAccountStatusNotificationHandlerShared) HasAccountUpdateNotificationRequestCriteria() bool {
	if o != nil && !isNil(o.AccountUpdateNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountUpdateNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountUpdateNotificationRequestCriteria field.
func (o *ErrorLogAccountStatusNotificationHandlerShared) SetAccountUpdateNotificationRequestCriteria(v string) {
	o.AccountUpdateNotificationRequestCriteria = &v
}

func (o ErrorLogAccountStatusNotificationHandlerShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["accountStatusNotificationType"] = o.AccountStatusNotificationType
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.Asynchronous) {
		toSerialize["asynchronous"] = o.Asynchronous
	}
	if !isNil(o.AccountCreationNotificationRequestCriteria) {
		toSerialize["accountCreationNotificationRequestCriteria"] = o.AccountCreationNotificationRequestCriteria
	}
	if !isNil(o.AccountUpdateNotificationRequestCriteria) {
		toSerialize["accountUpdateNotificationRequestCriteria"] = o.AccountUpdateNotificationRequestCriteria
	}
	return json.Marshal(toSerialize)
}

type NullableErrorLogAccountStatusNotificationHandlerShared struct {
	value *ErrorLogAccountStatusNotificationHandlerShared
	isSet bool
}

func (v NullableErrorLogAccountStatusNotificationHandlerShared) Get() *ErrorLogAccountStatusNotificationHandlerShared {
	return v.value
}

func (v *NullableErrorLogAccountStatusNotificationHandlerShared) Set(val *ErrorLogAccountStatusNotificationHandlerShared) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorLogAccountStatusNotificationHandlerShared) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorLogAccountStatusNotificationHandlerShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorLogAccountStatusNotificationHandlerShared(val *ErrorLogAccountStatusNotificationHandlerShared) *NullableErrorLogAccountStatusNotificationHandlerShared {
	return &NullableErrorLogAccountStatusNotificationHandlerShared{value: val, isSet: true}
}

func (v NullableErrorLogAccountStatusNotificationHandlerShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorLogAccountStatusNotificationHandlerShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


