/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumresultCriteriaMissingPrivilegeProp Specifies the name of a privilege that must have been missing during the processing for operations included in this Simple Result Criteria. If any privilege names are provided, then the associated operation must have been missing at least one of those privileges. If no privilege names were provided, then the set of privileges missing will not be considered when determining whether an operation should be included in this Simple Result Criteria.
type EnumresultCriteriaMissingPrivilegeProp string

// List of Enumresult-criteria-missingPrivilegeProp
const (
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_AUDIT_DATA_SECURITY EnumresultCriteriaMissingPrivilegeProp = "audit-data-security"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_BYPASS_ACL EnumresultCriteriaMissingPrivilegeProp = "bypass-acl"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_BYPASS_READ_ACL EnumresultCriteriaMissingPrivilegeProp = "bypass-read-acl"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_MODIFY_ACL EnumresultCriteriaMissingPrivilegeProp = "modify-acl"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_CONFIG_READ EnumresultCriteriaMissingPrivilegeProp = "config-read"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_CONFIG_WRITE EnumresultCriteriaMissingPrivilegeProp = "config-write"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_JMX_READ EnumresultCriteriaMissingPrivilegeProp = "jmx-read"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_JMX_WRITE EnumresultCriteriaMissingPrivilegeProp = "jmx-write"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_JMX_NOTIFY EnumresultCriteriaMissingPrivilegeProp = "jmx-notify"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_LDIF_IMPORT EnumresultCriteriaMissingPrivilegeProp = "ldif-import"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_LDIF_EXPORT EnumresultCriteriaMissingPrivilegeProp = "ldif-export"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_BACKEND_BACKUP EnumresultCriteriaMissingPrivilegeProp = "backend-backup"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_BACKEND_RESTORE EnumresultCriteriaMissingPrivilegeProp = "backend-restore"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_SERVER_SHUTDOWN EnumresultCriteriaMissingPrivilegeProp = "server-shutdown"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_SERVER_RESTART EnumresultCriteriaMissingPrivilegeProp = "server-restart"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PROXIED_AUTH EnumresultCriteriaMissingPrivilegeProp = "proxied-auth"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_DISCONNECT_CLIENT EnumresultCriteriaMissingPrivilegeProp = "disconnect-client"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PASSWORD_RESET EnumresultCriteriaMissingPrivilegeProp = "password-reset"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_UPDATE_SCHEMA EnumresultCriteriaMissingPrivilegeProp = "update-schema"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PRIVILEGE_CHANGE EnumresultCriteriaMissingPrivilegeProp = "privilege-change"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_UNINDEXED_SEARCH EnumresultCriteriaMissingPrivilegeProp = "unindexed-search"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL EnumresultCriteriaMissingPrivilegeProp = "unindexed-search-with-control"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_BYPASS_PW_POLICY EnumresultCriteriaMissingPrivilegeProp = "bypass-pw-policy"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_LOCKDOWN_MODE EnumresultCriteriaMissingPrivilegeProp = "lockdown-mode"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_STREAM_VALUES EnumresultCriteriaMissingPrivilegeProp = "stream-values"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_THIRD_PARTY_TASK EnumresultCriteriaMissingPrivilegeProp = "third-party-task"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_USE_ADMIN_SESSION EnumresultCriteriaMissingPrivilegeProp = "use-admin-session"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_SOFT_DELETE_READ EnumresultCriteriaMissingPrivilegeProp = "soft-delete-read"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_METRICS_READ EnumresultCriteriaMissingPrivilegeProp = "metrics-read"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_REMOTE_LOG_READ EnumresultCriteriaMissingPrivilegeProp = "remote-log-read"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_MANAGE_TOPOLOGY EnumresultCriteriaMissingPrivilegeProp = "manage-topology"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES EnumresultCriteriaMissingPrivilegeProp = "permit-get-password-policy-state-issues"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS EnumresultCriteriaMissingPrivilegeProp = "permit-proxied-mschapv2-details"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumresultCriteriaMissingPrivilegeProp = "permit-externally-processed-authentication"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS EnumresultCriteriaMissingPrivilegeProp = "permit-export-reversible-passwords"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumresultCriteriaMissingPrivilegeProp = "permit-forwarding-client-connection-policy"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_EXEC_TASK EnumresultCriteriaMissingPrivilegeProp = "exec-task"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_COLLECT_SUPPORT_DATA EnumresultCriteriaMissingPrivilegeProp = "collect-support-data"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_FILE_SERVLET_ACCESS EnumresultCriteriaMissingPrivilegeProp = "file-servlet-access"
	ENUMRESULTCRITERIAMISSINGPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST EnumresultCriteriaMissingPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumresultCriteriaMissingPrivilegeProp enum
var AllowedEnumresultCriteriaMissingPrivilegePropEnumValues = []EnumresultCriteriaMissingPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumresultCriteriaMissingPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumresultCriteriaMissingPrivilegeProp(value)
	for _, existing := range AllowedEnumresultCriteriaMissingPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumresultCriteriaMissingPrivilegeProp", value)
}

// NewEnumresultCriteriaMissingPrivilegePropFromValue returns a pointer to a valid EnumresultCriteriaMissingPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumresultCriteriaMissingPrivilegePropFromValue(v string) (*EnumresultCriteriaMissingPrivilegeProp, error) {
	ev := EnumresultCriteriaMissingPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumresultCriteriaMissingPrivilegeProp: valid values are %v", v, AllowedEnumresultCriteriaMissingPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumresultCriteriaMissingPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumresultCriteriaMissingPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumresult-criteria-missingPrivilegeProp value
func (v EnumresultCriteriaMissingPrivilegeProp) Ptr() *EnumresultCriteriaMissingPrivilegeProp {
	return &v
}

type NullableEnumresultCriteriaMissingPrivilegeProp struct {
	value *EnumresultCriteriaMissingPrivilegeProp
	isSet bool
}

func (v NullableEnumresultCriteriaMissingPrivilegeProp) Get() *EnumresultCriteriaMissingPrivilegeProp {
	return v.value
}

func (v *NullableEnumresultCriteriaMissingPrivilegeProp) Set(val *EnumresultCriteriaMissingPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumresultCriteriaMissingPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumresultCriteriaMissingPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumresultCriteriaMissingPrivilegeProp(val *EnumresultCriteriaMissingPrivilegeProp) *NullableEnumresultCriteriaMissingPrivilegeProp {
	return &NullableEnumresultCriteriaMissingPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumresultCriteriaMissingPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumresultCriteriaMissingPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

