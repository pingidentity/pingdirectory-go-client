/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DirectoryRestApiHttpServletExtensionResponse struct for DirectoryRestApiHttpServletExtensionResponse
type DirectoryRestApiHttpServletExtensionResponse struct {
	Schemas []EnumdirectoryRestApiHttpServletExtensionSchemaUrn `json:"schemas"`
	// Enables HTTP Basic authentication, using a username and password. The Identity Mapper specified by the identity-mapper property will be used to map the username to a DN.
	BasicAuthEnabled *bool `json:"basicAuthEnabled,omitempty"`
	// Specifies the Identity Mapper that is to be used for associating user entries with basic authentication usernames.
	IdentityMapper *string `json:"identityMapper,omitempty"`
	AccessTokenValidator []string `json:"accessTokenValidator,omitempty"`
	// The name of a scope that must be present in an access token accepted by the Directory REST API HTTP Servlet Extension.
	AccessTokenScope *string `json:"accessTokenScope,omitempty"`
	// A string or URI that identifies the Directory REST API HTTP Servlet Extension in the context of OAuth2 authorization.
	Audience *string `json:"audience,omitempty"`
	// The maximum number of entries to be returned in one page of search results.
	MaxPageSize *int32 `json:"maxPageSize,omitempty"`
	SchemasEndpointObjectclass []string `json:"schemasEndpointObjectclass,omitempty"`
	DefaultOperationalAttribute []string `json:"defaultOperationalAttribute,omitempty"`
	RejectExpansionAttribute []string `json:"rejectExpansionAttribute,omitempty"`
	AllowedControl []EnumhttpServletExtensionAllowedControlProp `json:"allowedControl,omitempty"`
	// A description for this HTTP Servlet Extension
	Description *string `json:"description,omitempty"`
	// The cross-origin request policy to use for the HTTP Servlet Extension.
	CrossOriginPolicy *string `json:"crossOriginPolicy,omitempty"`
	ResponseHeader []string `json:"responseHeader,omitempty"`
	// Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\", and \"X-Request-Id\".
	CorrelationIDResponseHeader *string `json:"correlationIDResponseHeader,omitempty"`
}

// NewDirectoryRestApiHttpServletExtensionResponse instantiates a new DirectoryRestApiHttpServletExtensionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDirectoryRestApiHttpServletExtensionResponse(schemas []EnumdirectoryRestApiHttpServletExtensionSchemaUrn) *DirectoryRestApiHttpServletExtensionResponse {
	this := DirectoryRestApiHttpServletExtensionResponse{}
	this.Schemas = schemas
	return &this
}

// NewDirectoryRestApiHttpServletExtensionResponseWithDefaults instantiates a new DirectoryRestApiHttpServletExtensionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDirectoryRestApiHttpServletExtensionResponseWithDefaults() *DirectoryRestApiHttpServletExtensionResponse {
	this := DirectoryRestApiHttpServletExtensionResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *DirectoryRestApiHttpServletExtensionResponse) GetSchemas() []EnumdirectoryRestApiHttpServletExtensionSchemaUrn {
	if o == nil {
		var ret []EnumdirectoryRestApiHttpServletExtensionSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetSchemasOk() ([]EnumdirectoryRestApiHttpServletExtensionSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *DirectoryRestApiHttpServletExtensionResponse) SetSchemas(v []EnumdirectoryRestApiHttpServletExtensionSchemaUrn) {
	o.Schemas = v
}

// GetBasicAuthEnabled returns the BasicAuthEnabled field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetBasicAuthEnabled() bool {
	if o == nil || isNil(o.BasicAuthEnabled) {
		var ret bool
		return ret
	}
	return *o.BasicAuthEnabled
}

// GetBasicAuthEnabledOk returns a tuple with the BasicAuthEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetBasicAuthEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.BasicAuthEnabled) {
    return nil, false
	}
	return o.BasicAuthEnabled, true
}

// HasBasicAuthEnabled returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasBasicAuthEnabled() bool {
	if o != nil && !isNil(o.BasicAuthEnabled) {
		return true
	}

	return false
}

// SetBasicAuthEnabled gets a reference to the given bool and assigns it to the BasicAuthEnabled field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetBasicAuthEnabled(v bool) {
	o.BasicAuthEnabled = &v
}

// GetIdentityMapper returns the IdentityMapper field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetIdentityMapper() string {
	if o == nil || isNil(o.IdentityMapper) {
		var ret string
		return ret
	}
	return *o.IdentityMapper
}

// GetIdentityMapperOk returns a tuple with the IdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetIdentityMapperOk() (*string, bool) {
	if o == nil || isNil(o.IdentityMapper) {
    return nil, false
	}
	return o.IdentityMapper, true
}

// HasIdentityMapper returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasIdentityMapper() bool {
	if o != nil && !isNil(o.IdentityMapper) {
		return true
	}

	return false
}

// SetIdentityMapper gets a reference to the given string and assigns it to the IdentityMapper field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetIdentityMapper(v string) {
	o.IdentityMapper = &v
}

// GetAccessTokenValidator returns the AccessTokenValidator field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAccessTokenValidator() []string {
	if o == nil || isNil(o.AccessTokenValidator) {
		var ret []string
		return ret
	}
	return o.AccessTokenValidator
}

// GetAccessTokenValidatorOk returns a tuple with the AccessTokenValidator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAccessTokenValidatorOk() ([]string, bool) {
	if o == nil || isNil(o.AccessTokenValidator) {
    return nil, false
	}
	return o.AccessTokenValidator, true
}

// HasAccessTokenValidator returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasAccessTokenValidator() bool {
	if o != nil && !isNil(o.AccessTokenValidator) {
		return true
	}

	return false
}

// SetAccessTokenValidator gets a reference to the given []string and assigns it to the AccessTokenValidator field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetAccessTokenValidator(v []string) {
	o.AccessTokenValidator = v
}

// GetAccessTokenScope returns the AccessTokenScope field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAccessTokenScope() string {
	if o == nil || isNil(o.AccessTokenScope) {
		var ret string
		return ret
	}
	return *o.AccessTokenScope
}

// GetAccessTokenScopeOk returns a tuple with the AccessTokenScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAccessTokenScopeOk() (*string, bool) {
	if o == nil || isNil(o.AccessTokenScope) {
    return nil, false
	}
	return o.AccessTokenScope, true
}

// HasAccessTokenScope returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasAccessTokenScope() bool {
	if o != nil && !isNil(o.AccessTokenScope) {
		return true
	}

	return false
}

// SetAccessTokenScope gets a reference to the given string and assigns it to the AccessTokenScope field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetAccessTokenScope(v string) {
	o.AccessTokenScope = &v
}

// GetAudience returns the Audience field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAudience() string {
	if o == nil || isNil(o.Audience) {
		var ret string
		return ret
	}
	return *o.Audience
}

// GetAudienceOk returns a tuple with the Audience field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAudienceOk() (*string, bool) {
	if o == nil || isNil(o.Audience) {
    return nil, false
	}
	return o.Audience, true
}

// HasAudience returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasAudience() bool {
	if o != nil && !isNil(o.Audience) {
		return true
	}

	return false
}

// SetAudience gets a reference to the given string and assigns it to the Audience field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetAudience(v string) {
	o.Audience = &v
}

// GetMaxPageSize returns the MaxPageSize field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetMaxPageSize() int32 {
	if o == nil || isNil(o.MaxPageSize) {
		var ret int32
		return ret
	}
	return *o.MaxPageSize
}

// GetMaxPageSizeOk returns a tuple with the MaxPageSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetMaxPageSizeOk() (*int32, bool) {
	if o == nil || isNil(o.MaxPageSize) {
    return nil, false
	}
	return o.MaxPageSize, true
}

// HasMaxPageSize returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasMaxPageSize() bool {
	if o != nil && !isNil(o.MaxPageSize) {
		return true
	}

	return false
}

// SetMaxPageSize gets a reference to the given int32 and assigns it to the MaxPageSize field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetMaxPageSize(v int32) {
	o.MaxPageSize = &v
}

// GetSchemasEndpointObjectclass returns the SchemasEndpointObjectclass field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetSchemasEndpointObjectclass() []string {
	if o == nil || isNil(o.SchemasEndpointObjectclass) {
		var ret []string
		return ret
	}
	return o.SchemasEndpointObjectclass
}

// GetSchemasEndpointObjectclassOk returns a tuple with the SchemasEndpointObjectclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetSchemasEndpointObjectclassOk() ([]string, bool) {
	if o == nil || isNil(o.SchemasEndpointObjectclass) {
    return nil, false
	}
	return o.SchemasEndpointObjectclass, true
}

// HasSchemasEndpointObjectclass returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasSchemasEndpointObjectclass() bool {
	if o != nil && !isNil(o.SchemasEndpointObjectclass) {
		return true
	}

	return false
}

// SetSchemasEndpointObjectclass gets a reference to the given []string and assigns it to the SchemasEndpointObjectclass field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetSchemasEndpointObjectclass(v []string) {
	o.SchemasEndpointObjectclass = v
}

// GetDefaultOperationalAttribute returns the DefaultOperationalAttribute field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetDefaultOperationalAttribute() []string {
	if o == nil || isNil(o.DefaultOperationalAttribute) {
		var ret []string
		return ret
	}
	return o.DefaultOperationalAttribute
}

// GetDefaultOperationalAttributeOk returns a tuple with the DefaultOperationalAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetDefaultOperationalAttributeOk() ([]string, bool) {
	if o == nil || isNil(o.DefaultOperationalAttribute) {
    return nil, false
	}
	return o.DefaultOperationalAttribute, true
}

// HasDefaultOperationalAttribute returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasDefaultOperationalAttribute() bool {
	if o != nil && !isNil(o.DefaultOperationalAttribute) {
		return true
	}

	return false
}

// SetDefaultOperationalAttribute gets a reference to the given []string and assigns it to the DefaultOperationalAttribute field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetDefaultOperationalAttribute(v []string) {
	o.DefaultOperationalAttribute = v
}

// GetRejectExpansionAttribute returns the RejectExpansionAttribute field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetRejectExpansionAttribute() []string {
	if o == nil || isNil(o.RejectExpansionAttribute) {
		var ret []string
		return ret
	}
	return o.RejectExpansionAttribute
}

// GetRejectExpansionAttributeOk returns a tuple with the RejectExpansionAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetRejectExpansionAttributeOk() ([]string, bool) {
	if o == nil || isNil(o.RejectExpansionAttribute) {
    return nil, false
	}
	return o.RejectExpansionAttribute, true
}

// HasRejectExpansionAttribute returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasRejectExpansionAttribute() bool {
	if o != nil && !isNil(o.RejectExpansionAttribute) {
		return true
	}

	return false
}

// SetRejectExpansionAttribute gets a reference to the given []string and assigns it to the RejectExpansionAttribute field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetRejectExpansionAttribute(v []string) {
	o.RejectExpansionAttribute = v
}

// GetAllowedControl returns the AllowedControl field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAllowedControl() []EnumhttpServletExtensionAllowedControlProp {
	if o == nil || isNil(o.AllowedControl) {
		var ret []EnumhttpServletExtensionAllowedControlProp
		return ret
	}
	return o.AllowedControl
}

// GetAllowedControlOk returns a tuple with the AllowedControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetAllowedControlOk() ([]EnumhttpServletExtensionAllowedControlProp, bool) {
	if o == nil || isNil(o.AllowedControl) {
    return nil, false
	}
	return o.AllowedControl, true
}

// HasAllowedControl returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasAllowedControl() bool {
	if o != nil && !isNil(o.AllowedControl) {
		return true
	}

	return false
}

// SetAllowedControl gets a reference to the given []EnumhttpServletExtensionAllowedControlProp and assigns it to the AllowedControl field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetAllowedControl(v []EnumhttpServletExtensionAllowedControlProp) {
	o.AllowedControl = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetDescription(v string) {
	o.Description = &v
}

// GetCrossOriginPolicy returns the CrossOriginPolicy field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetCrossOriginPolicy() string {
	if o == nil || isNil(o.CrossOriginPolicy) {
		var ret string
		return ret
	}
	return *o.CrossOriginPolicy
}

// GetCrossOriginPolicyOk returns a tuple with the CrossOriginPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetCrossOriginPolicyOk() (*string, bool) {
	if o == nil || isNil(o.CrossOriginPolicy) {
    return nil, false
	}
	return o.CrossOriginPolicy, true
}

// HasCrossOriginPolicy returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasCrossOriginPolicy() bool {
	if o != nil && !isNil(o.CrossOriginPolicy) {
		return true
	}

	return false
}

// SetCrossOriginPolicy gets a reference to the given string and assigns it to the CrossOriginPolicy field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetCrossOriginPolicy(v string) {
	o.CrossOriginPolicy = &v
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetResponseHeader() []string {
	if o == nil || isNil(o.ResponseHeader) {
		var ret []string
		return ret
	}
	return o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetResponseHeaderOk() ([]string, bool) {
	if o == nil || isNil(o.ResponseHeader) {
    return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasResponseHeader() bool {
	if o != nil && !isNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given []string and assigns it to the ResponseHeader field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetResponseHeader(v []string) {
	o.ResponseHeader = v
}

// GetCorrelationIDResponseHeader returns the CorrelationIDResponseHeader field value if set, zero value otherwise.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetCorrelationIDResponseHeader() string {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
		var ret string
		return ret
	}
	return *o.CorrelationIDResponseHeader
}

// GetCorrelationIDResponseHeaderOk returns a tuple with the CorrelationIDResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) GetCorrelationIDResponseHeaderOk() (*string, bool) {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
    return nil, false
	}
	return o.CorrelationIDResponseHeader, true
}

// HasCorrelationIDResponseHeader returns a boolean if a field has been set.
func (o *DirectoryRestApiHttpServletExtensionResponse) HasCorrelationIDResponseHeader() bool {
	if o != nil && !isNil(o.CorrelationIDResponseHeader) {
		return true
	}

	return false
}

// SetCorrelationIDResponseHeader gets a reference to the given string and assigns it to the CorrelationIDResponseHeader field.
func (o *DirectoryRestApiHttpServletExtensionResponse) SetCorrelationIDResponseHeader(v string) {
	o.CorrelationIDResponseHeader = &v
}

func (o DirectoryRestApiHttpServletExtensionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.BasicAuthEnabled) {
		toSerialize["basicAuthEnabled"] = o.BasicAuthEnabled
	}
	if !isNil(o.IdentityMapper) {
		toSerialize["identityMapper"] = o.IdentityMapper
	}
	if !isNil(o.AccessTokenValidator) {
		toSerialize["accessTokenValidator"] = o.AccessTokenValidator
	}
	if !isNil(o.AccessTokenScope) {
		toSerialize["accessTokenScope"] = o.AccessTokenScope
	}
	if !isNil(o.Audience) {
		toSerialize["audience"] = o.Audience
	}
	if !isNil(o.MaxPageSize) {
		toSerialize["maxPageSize"] = o.MaxPageSize
	}
	if !isNil(o.SchemasEndpointObjectclass) {
		toSerialize["schemasEndpointObjectclass"] = o.SchemasEndpointObjectclass
	}
	if !isNil(o.DefaultOperationalAttribute) {
		toSerialize["defaultOperationalAttribute"] = o.DefaultOperationalAttribute
	}
	if !isNil(o.RejectExpansionAttribute) {
		toSerialize["rejectExpansionAttribute"] = o.RejectExpansionAttribute
	}
	if !isNil(o.AllowedControl) {
		toSerialize["allowedControl"] = o.AllowedControl
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CrossOriginPolicy) {
		toSerialize["crossOriginPolicy"] = o.CrossOriginPolicy
	}
	if !isNil(o.ResponseHeader) {
		toSerialize["responseHeader"] = o.ResponseHeader
	}
	if !isNil(o.CorrelationIDResponseHeader) {
		toSerialize["correlationIDResponseHeader"] = o.CorrelationIDResponseHeader
	}
	return json.Marshal(toSerialize)
}

type NullableDirectoryRestApiHttpServletExtensionResponse struct {
	value *DirectoryRestApiHttpServletExtensionResponse
	isSet bool
}

func (v NullableDirectoryRestApiHttpServletExtensionResponse) Get() *DirectoryRestApiHttpServletExtensionResponse {
	return v.value
}

func (v *NullableDirectoryRestApiHttpServletExtensionResponse) Set(val *DirectoryRestApiHttpServletExtensionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDirectoryRestApiHttpServletExtensionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDirectoryRestApiHttpServletExtensionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDirectoryRestApiHttpServletExtensionResponse(val *DirectoryRestApiHttpServletExtensionResponse) *NullableDirectoryRestApiHttpServletExtensionResponse {
	return &NullableDirectoryRestApiHttpServletExtensionResponse{value: val, isSet: true}
}

func (v NullableDirectoryRestApiHttpServletExtensionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDirectoryRestApiHttpServletExtensionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


