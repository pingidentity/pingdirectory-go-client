/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// StatsdMonitoringEndpointShared struct for StatsdMonitoringEndpointShared
type StatsdMonitoringEndpointShared struct {
	Schemas []EnumstatsdMonitoringEndpointSchemaUrn `json:"schemas,omitempty"`
	// The name of the host where this StatsD Monitoring Endpoint should send metric data.
	Hostname string `json:"hostname"`
	// Specifies the port number of the endpoint where metric data should be sent.
	ServerPort int32 `json:"serverPort"`
	ConnectionType EnummonitoringEndpointConnectionTypeProp `json:"connectionType"`
	// The trust manager provider to use if SSL over TCP is to be used for connection-level security.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	AdditionalTags []string `json:"additionalTags,omitempty"`
	// Indicates whether this Monitoring Endpoint is enabled for use in the Directory Server.
	Enabled bool `json:"enabled"`
}

// NewStatsdMonitoringEndpointShared instantiates a new StatsdMonitoringEndpointShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsdMonitoringEndpointShared(hostname string, serverPort int32, connectionType EnummonitoringEndpointConnectionTypeProp, enabled bool) *StatsdMonitoringEndpointShared {
	this := StatsdMonitoringEndpointShared{}
	this.Hostname = hostname
	this.ServerPort = serverPort
	this.ConnectionType = connectionType
	this.Enabled = enabled
	return &this
}

// NewStatsdMonitoringEndpointSharedWithDefaults instantiates a new StatsdMonitoringEndpointShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsdMonitoringEndpointSharedWithDefaults() *StatsdMonitoringEndpointShared {
	this := StatsdMonitoringEndpointShared{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointShared) GetSchemas() []EnumstatsdMonitoringEndpointSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumstatsdMonitoringEndpointSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetSchemasOk() ([]EnumstatsdMonitoringEndpointSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointShared) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumstatsdMonitoringEndpointSchemaUrn and assigns it to the Schemas field.
func (o *StatsdMonitoringEndpointShared) SetSchemas(v []EnumstatsdMonitoringEndpointSchemaUrn) {
	o.Schemas = v
}

// GetHostname returns the Hostname field value
func (o *StatsdMonitoringEndpointShared) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetHostnameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *StatsdMonitoringEndpointShared) SetHostname(v string) {
	o.Hostname = v
}

// GetServerPort returns the ServerPort field value
func (o *StatsdMonitoringEndpointShared) GetServerPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetServerPortOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ServerPort, true
}

// SetServerPort sets field value
func (o *StatsdMonitoringEndpointShared) SetServerPort(v int32) {
	o.ServerPort = v
}

// GetConnectionType returns the ConnectionType field value
func (o *StatsdMonitoringEndpointShared) GetConnectionType() EnummonitoringEndpointConnectionTypeProp {
	if o == nil {
		var ret EnummonitoringEndpointConnectionTypeProp
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetConnectionTypeOk() (*EnummonitoringEndpointConnectionTypeProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *StatsdMonitoringEndpointShared) SetConnectionType(v EnummonitoringEndpointConnectionTypeProp) {
	o.ConnectionType = v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointShared) GetTrustManagerProvider() string {
	if o == nil || isNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || isNil(o.TrustManagerProvider) {
    return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointShared) HasTrustManagerProvider() bool {
	if o != nil && !isNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *StatsdMonitoringEndpointShared) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointShared) GetAdditionalTags() []string {
	if o == nil || isNil(o.AdditionalTags) {
		var ret []string
		return ret
	}
	return o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetAdditionalTagsOk() ([]string, bool) {
	if o == nil || isNil(o.AdditionalTags) {
    return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointShared) HasAdditionalTags() bool {
	if o != nil && !isNil(o.AdditionalTags) {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []string and assigns it to the AdditionalTags field.
func (o *StatsdMonitoringEndpointShared) SetAdditionalTags(v []string) {
	o.AdditionalTags = v
}

// GetEnabled returns the Enabled field value
func (o *StatsdMonitoringEndpointShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *StatsdMonitoringEndpointShared) SetEnabled(v bool) {
	o.Enabled = v
}

func (o StatsdMonitoringEndpointShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["hostname"] = o.Hostname
	}
	if true {
		toSerialize["serverPort"] = o.ServerPort
	}
	if true {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !isNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	if !isNil(o.AdditionalTags) {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableStatsdMonitoringEndpointShared struct {
	value *StatsdMonitoringEndpointShared
	isSet bool
}

func (v NullableStatsdMonitoringEndpointShared) Get() *StatsdMonitoringEndpointShared {
	return v.value
}

func (v *NullableStatsdMonitoringEndpointShared) Set(val *StatsdMonitoringEndpointShared) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsdMonitoringEndpointShared) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsdMonitoringEndpointShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsdMonitoringEndpointShared(val *StatsdMonitoringEndpointShared) *NullableStatsdMonitoringEndpointShared {
	return &NullableStatsdMonitoringEndpointShared{value: val, isSet: true}
}

func (v NullableStatsdMonitoringEndpointShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsdMonitoringEndpointShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


