/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddResultCodeMapRequestAllOf struct for AddResultCodeMapRequestAllOf
type AddResultCodeMapRequestAllOf struct {
	// Name of the new Result Code Map
	MapName string `json:"mapName"`
}

// NewAddResultCodeMapRequestAllOf instantiates a new AddResultCodeMapRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddResultCodeMapRequestAllOf(mapName string) *AddResultCodeMapRequestAllOf {
	this := AddResultCodeMapRequestAllOf{}
	this.MapName = mapName
	return &this
}

// NewAddResultCodeMapRequestAllOfWithDefaults instantiates a new AddResultCodeMapRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddResultCodeMapRequestAllOfWithDefaults() *AddResultCodeMapRequestAllOf {
	this := AddResultCodeMapRequestAllOf{}
	return &this
}

// GetMapName returns the MapName field value
func (o *AddResultCodeMapRequestAllOf) GetMapName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapName
}

// GetMapNameOk returns a tuple with the MapName field value
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequestAllOf) GetMapNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MapName, true
}

// SetMapName sets field value
func (o *AddResultCodeMapRequestAllOf) SetMapName(v string) {
	o.MapName = v
}

func (o AddResultCodeMapRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mapName"] = o.MapName
	}
	return json.Marshal(toSerialize)
}

type NullableAddResultCodeMapRequestAllOf struct {
	value *AddResultCodeMapRequestAllOf
	isSet bool
}

func (v NullableAddResultCodeMapRequestAllOf) Get() *AddResultCodeMapRequestAllOf {
	return v.value
}

func (v *NullableAddResultCodeMapRequestAllOf) Set(val *AddResultCodeMapRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddResultCodeMapRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddResultCodeMapRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddResultCodeMapRequestAllOf(val *AddResultCodeMapRequestAllOf) *NullableAddResultCodeMapRequestAllOf {
	return &NullableAddResultCodeMapRequestAllOf{value: val, isSet: true}
}

func (v NullableAddResultCodeMapRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddResultCodeMapRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


