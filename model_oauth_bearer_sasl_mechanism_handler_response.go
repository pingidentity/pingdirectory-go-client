/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OauthBearerSaslMechanismHandlerResponse struct for OauthBearerSaslMechanismHandlerResponse
type OauthBearerSaslMechanismHandlerResponse struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the SASL Mechanism Handler
	Id string `json:"id"`
	Schemas []EnumoauthBearerSaslMechanismHandlerSchemaUrn `json:"schemas"`
	// An access token validator that will ensure that each presented OAuth access token is authentic and trustworthy. It must be configured with an identity mapper that will be used to map the access token to a local entry.
	AccessTokenValidator []string `json:"accessTokenValidator,omitempty"`
	// An ID token validator that will ensure that each presented OpenID Connect ID token is authentic and trustworthy, and that will map the token to a local entry.
	IdTokenValidator []string `json:"idTokenValidator,omitempty"`
	// Indicates whether bind requests will be required to have both an OAuth access token (in the \"auth\" element of the bind request) and an OpenID Connect ID token (in the \"pingidentityidtoken\" element of the bind request).
	RequireBothAccessTokenAndIDToken *bool `json:"requireBothAccessTokenAndIDToken,omitempty"`
	ValidateAccessTokenWhenIDTokenIsAlsoProvided *EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp `json:"validateAccessTokenWhenIDTokenIsAlsoProvided,omitempty"`
	// The identity mapper that will be used to map an alternate authorization identity (provided in the GS2 header of the encoded OAUTHBEARER bind request credentials) to the corresponding local entry.
	AlternateAuthorizationIdentityMapper *string `json:"alternateAuthorizationIdentityMapper,omitempty"`
	// The set of OAuth scopes that will all be required for any access tokens that will be allowed for authentication.
	AllRequiredScope []string `json:"allRequiredScope,omitempty"`
	// The set of OAuth scopes that a token may have to be allowed for authentication.
	AnyRequiredScope []string `json:"anyRequiredScope,omitempty"`
	// The fully-qualified name that clients are expected to use when communicating with the server.
	ServerFqdn *string `json:"serverFqdn,omitempty"`
	// A description for this SASL Mechanism Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the SASL mechanism handler is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewOauthBearerSaslMechanismHandlerResponse instantiates a new OauthBearerSaslMechanismHandlerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOauthBearerSaslMechanismHandlerResponse(id string, schemas []EnumoauthBearerSaslMechanismHandlerSchemaUrn, enabled bool) *OauthBearerSaslMechanismHandlerResponse {
	this := OauthBearerSaslMechanismHandlerResponse{}
	this.Id = id
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewOauthBearerSaslMechanismHandlerResponseWithDefaults instantiates a new OauthBearerSaslMechanismHandlerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOauthBearerSaslMechanismHandlerResponseWithDefaults() *OauthBearerSaslMechanismHandlerResponse {
	this := OauthBearerSaslMechanismHandlerResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
    return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *OauthBearerSaslMechanismHandlerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OauthBearerSaslMechanismHandlerResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *OauthBearerSaslMechanismHandlerResponse) GetSchemas() []EnumoauthBearerSaslMechanismHandlerSchemaUrn {
	if o == nil {
		var ret []EnumoauthBearerSaslMechanismHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetSchemasOk() ([]EnumoauthBearerSaslMechanismHandlerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *OauthBearerSaslMechanismHandlerResponse) SetSchemas(v []EnumoauthBearerSaslMechanismHandlerSchemaUrn) {
	o.Schemas = v
}

// GetAccessTokenValidator returns the AccessTokenValidator field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAccessTokenValidator() []string {
	if o == nil || isNil(o.AccessTokenValidator) {
		var ret []string
		return ret
	}
	return o.AccessTokenValidator
}

// GetAccessTokenValidatorOk returns a tuple with the AccessTokenValidator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAccessTokenValidatorOk() ([]string, bool) {
	if o == nil || isNil(o.AccessTokenValidator) {
    return nil, false
	}
	return o.AccessTokenValidator, true
}

// HasAccessTokenValidator returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasAccessTokenValidator() bool {
	if o != nil && !isNil(o.AccessTokenValidator) {
		return true
	}

	return false
}

// SetAccessTokenValidator gets a reference to the given []string and assigns it to the AccessTokenValidator field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetAccessTokenValidator(v []string) {
	o.AccessTokenValidator = v
}

// GetIdTokenValidator returns the IdTokenValidator field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetIdTokenValidator() []string {
	if o == nil || isNil(o.IdTokenValidator) {
		var ret []string
		return ret
	}
	return o.IdTokenValidator
}

// GetIdTokenValidatorOk returns a tuple with the IdTokenValidator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetIdTokenValidatorOk() ([]string, bool) {
	if o == nil || isNil(o.IdTokenValidator) {
    return nil, false
	}
	return o.IdTokenValidator, true
}

// HasIdTokenValidator returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasIdTokenValidator() bool {
	if o != nil && !isNil(o.IdTokenValidator) {
		return true
	}

	return false
}

// SetIdTokenValidator gets a reference to the given []string and assigns it to the IdTokenValidator field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetIdTokenValidator(v []string) {
	o.IdTokenValidator = v
}

// GetRequireBothAccessTokenAndIDToken returns the RequireBothAccessTokenAndIDToken field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetRequireBothAccessTokenAndIDToken() bool {
	if o == nil || isNil(o.RequireBothAccessTokenAndIDToken) {
		var ret bool
		return ret
	}
	return *o.RequireBothAccessTokenAndIDToken
}

// GetRequireBothAccessTokenAndIDTokenOk returns a tuple with the RequireBothAccessTokenAndIDToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetRequireBothAccessTokenAndIDTokenOk() (*bool, bool) {
	if o == nil || isNil(o.RequireBothAccessTokenAndIDToken) {
    return nil, false
	}
	return o.RequireBothAccessTokenAndIDToken, true
}

// HasRequireBothAccessTokenAndIDToken returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasRequireBothAccessTokenAndIDToken() bool {
	if o != nil && !isNil(o.RequireBothAccessTokenAndIDToken) {
		return true
	}

	return false
}

// SetRequireBothAccessTokenAndIDToken gets a reference to the given bool and assigns it to the RequireBothAccessTokenAndIDToken field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetRequireBothAccessTokenAndIDToken(v bool) {
	o.RequireBothAccessTokenAndIDToken = &v
}

// GetValidateAccessTokenWhenIDTokenIsAlsoProvided returns the ValidateAccessTokenWhenIDTokenIsAlsoProvided field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetValidateAccessTokenWhenIDTokenIsAlsoProvided() EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp {
	if o == nil || isNil(o.ValidateAccessTokenWhenIDTokenIsAlsoProvided) {
		var ret EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp
		return ret
	}
	return *o.ValidateAccessTokenWhenIDTokenIsAlsoProvided
}

// GetValidateAccessTokenWhenIDTokenIsAlsoProvidedOk returns a tuple with the ValidateAccessTokenWhenIDTokenIsAlsoProvided field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetValidateAccessTokenWhenIDTokenIsAlsoProvidedOk() (*EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp, bool) {
	if o == nil || isNil(o.ValidateAccessTokenWhenIDTokenIsAlsoProvided) {
    return nil, false
	}
	return o.ValidateAccessTokenWhenIDTokenIsAlsoProvided, true
}

// HasValidateAccessTokenWhenIDTokenIsAlsoProvided returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasValidateAccessTokenWhenIDTokenIsAlsoProvided() bool {
	if o != nil && !isNil(o.ValidateAccessTokenWhenIDTokenIsAlsoProvided) {
		return true
	}

	return false
}

// SetValidateAccessTokenWhenIDTokenIsAlsoProvided gets a reference to the given EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp and assigns it to the ValidateAccessTokenWhenIDTokenIsAlsoProvided field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetValidateAccessTokenWhenIDTokenIsAlsoProvided(v EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp) {
	o.ValidateAccessTokenWhenIDTokenIsAlsoProvided = &v
}

// GetAlternateAuthorizationIdentityMapper returns the AlternateAuthorizationIdentityMapper field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAlternateAuthorizationIdentityMapper() string {
	if o == nil || isNil(o.AlternateAuthorizationIdentityMapper) {
		var ret string
		return ret
	}
	return *o.AlternateAuthorizationIdentityMapper
}

// GetAlternateAuthorizationIdentityMapperOk returns a tuple with the AlternateAuthorizationIdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAlternateAuthorizationIdentityMapperOk() (*string, bool) {
	if o == nil || isNil(o.AlternateAuthorizationIdentityMapper) {
    return nil, false
	}
	return o.AlternateAuthorizationIdentityMapper, true
}

// HasAlternateAuthorizationIdentityMapper returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasAlternateAuthorizationIdentityMapper() bool {
	if o != nil && !isNil(o.AlternateAuthorizationIdentityMapper) {
		return true
	}

	return false
}

// SetAlternateAuthorizationIdentityMapper gets a reference to the given string and assigns it to the AlternateAuthorizationIdentityMapper field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetAlternateAuthorizationIdentityMapper(v string) {
	o.AlternateAuthorizationIdentityMapper = &v
}

// GetAllRequiredScope returns the AllRequiredScope field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAllRequiredScope() []string {
	if o == nil || isNil(o.AllRequiredScope) {
		var ret []string
		return ret
	}
	return o.AllRequiredScope
}

// GetAllRequiredScopeOk returns a tuple with the AllRequiredScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAllRequiredScopeOk() ([]string, bool) {
	if o == nil || isNil(o.AllRequiredScope) {
    return nil, false
	}
	return o.AllRequiredScope, true
}

// HasAllRequiredScope returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasAllRequiredScope() bool {
	if o != nil && !isNil(o.AllRequiredScope) {
		return true
	}

	return false
}

// SetAllRequiredScope gets a reference to the given []string and assigns it to the AllRequiredScope field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetAllRequiredScope(v []string) {
	o.AllRequiredScope = v
}

// GetAnyRequiredScope returns the AnyRequiredScope field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAnyRequiredScope() []string {
	if o == nil || isNil(o.AnyRequiredScope) {
		var ret []string
		return ret
	}
	return o.AnyRequiredScope
}

// GetAnyRequiredScopeOk returns a tuple with the AnyRequiredScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetAnyRequiredScopeOk() ([]string, bool) {
	if o == nil || isNil(o.AnyRequiredScope) {
    return nil, false
	}
	return o.AnyRequiredScope, true
}

// HasAnyRequiredScope returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasAnyRequiredScope() bool {
	if o != nil && !isNil(o.AnyRequiredScope) {
		return true
	}

	return false
}

// SetAnyRequiredScope gets a reference to the given []string and assigns it to the AnyRequiredScope field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetAnyRequiredScope(v []string) {
	o.AnyRequiredScope = v
}

// GetServerFqdn returns the ServerFqdn field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetServerFqdn() string {
	if o == nil || isNil(o.ServerFqdn) {
		var ret string
		return ret
	}
	return *o.ServerFqdn
}

// GetServerFqdnOk returns a tuple with the ServerFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetServerFqdnOk() (*string, bool) {
	if o == nil || isNil(o.ServerFqdn) {
    return nil, false
	}
	return o.ServerFqdn, true
}

// HasServerFqdn returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasServerFqdn() bool {
	if o != nil && !isNil(o.ServerFqdn) {
		return true
	}

	return false
}

// SetServerFqdn gets a reference to the given string and assigns it to the ServerFqdn field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetServerFqdn(v string) {
	o.ServerFqdn = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OauthBearerSaslMechanismHandlerResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OauthBearerSaslMechanismHandlerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *OauthBearerSaslMechanismHandlerResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *OauthBearerSaslMechanismHandlerResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *OauthBearerSaslMechanismHandlerResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o OauthBearerSaslMechanismHandlerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.AccessTokenValidator) {
		toSerialize["accessTokenValidator"] = o.AccessTokenValidator
	}
	if !isNil(o.IdTokenValidator) {
		toSerialize["idTokenValidator"] = o.IdTokenValidator
	}
	if !isNil(o.RequireBothAccessTokenAndIDToken) {
		toSerialize["requireBothAccessTokenAndIDToken"] = o.RequireBothAccessTokenAndIDToken
	}
	if !isNil(o.ValidateAccessTokenWhenIDTokenIsAlsoProvided) {
		toSerialize["validateAccessTokenWhenIDTokenIsAlsoProvided"] = o.ValidateAccessTokenWhenIDTokenIsAlsoProvided
	}
	if !isNil(o.AlternateAuthorizationIdentityMapper) {
		toSerialize["alternateAuthorizationIdentityMapper"] = o.AlternateAuthorizationIdentityMapper
	}
	if !isNil(o.AllRequiredScope) {
		toSerialize["allRequiredScope"] = o.AllRequiredScope
	}
	if !isNil(o.AnyRequiredScope) {
		toSerialize["anyRequiredScope"] = o.AnyRequiredScope
	}
	if !isNil(o.ServerFqdn) {
		toSerialize["serverFqdn"] = o.ServerFqdn
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableOauthBearerSaslMechanismHandlerResponse struct {
	value *OauthBearerSaslMechanismHandlerResponse
	isSet bool
}

func (v NullableOauthBearerSaslMechanismHandlerResponse) Get() *OauthBearerSaslMechanismHandlerResponse {
	return v.value
}

func (v *NullableOauthBearerSaslMechanismHandlerResponse) Set(val *OauthBearerSaslMechanismHandlerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOauthBearerSaslMechanismHandlerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOauthBearerSaslMechanismHandlerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOauthBearerSaslMechanismHandlerResponse(val *OauthBearerSaslMechanismHandlerResponse) *NullableOauthBearerSaslMechanismHandlerResponse {
	return &NullableOauthBearerSaslMechanismHandlerResponse{value: val, isSet: true}
}

func (v NullableOauthBearerSaslMechanismHandlerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOauthBearerSaslMechanismHandlerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


