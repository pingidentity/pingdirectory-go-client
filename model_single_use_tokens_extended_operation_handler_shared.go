/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SingleUseTokensExtendedOperationHandlerShared struct for SingleUseTokensExtendedOperationHandlerShared
type SingleUseTokensExtendedOperationHandlerShared struct {
	Schemas []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn `json:"schemas"`
	// The password generator that will be used to create the single-use token values to be delivered to the end user.
	PasswordGenerator string `json:"passwordGenerator"`
	DefaultOTPDeliveryMechanism []string `json:"defaultOTPDeliveryMechanism"`
	// The default length of time that a single-use token will be considered valid by the server if the client doesn't specify a duration in the deliver single-use token request.
	DefaultSingleUseTokenValidityDuration *string `json:"defaultSingleUseTokenValidityDuration,omitempty"`
	// A description for this Extended Operation Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
	Enabled bool `json:"enabled"`
}

// NewSingleUseTokensExtendedOperationHandlerShared instantiates a new SingleUseTokensExtendedOperationHandlerShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSingleUseTokensExtendedOperationHandlerShared(schemas []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn, passwordGenerator string, defaultOTPDeliveryMechanism []string, enabled bool) *SingleUseTokensExtendedOperationHandlerShared {
	this := SingleUseTokensExtendedOperationHandlerShared{}
	this.Schemas = schemas
	this.PasswordGenerator = passwordGenerator
	this.DefaultOTPDeliveryMechanism = defaultOTPDeliveryMechanism
	this.Enabled = enabled
	return &this
}

// NewSingleUseTokensExtendedOperationHandlerSharedWithDefaults instantiates a new SingleUseTokensExtendedOperationHandlerShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSingleUseTokensExtendedOperationHandlerSharedWithDefaults() *SingleUseTokensExtendedOperationHandlerShared {
	this := SingleUseTokensExtendedOperationHandlerShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *SingleUseTokensExtendedOperationHandlerShared) GetSchemas() []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn {
	if o == nil {
		var ret []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetSchemasOk() ([]EnumsingleUseTokensExtendedOperationHandlerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SingleUseTokensExtendedOperationHandlerShared) SetSchemas(v []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetPasswordGenerator returns the PasswordGenerator field value
func (o *SingleUseTokensExtendedOperationHandlerShared) GetPasswordGenerator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PasswordGenerator
}

// GetPasswordGeneratorOk returns a tuple with the PasswordGenerator field value
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetPasswordGeneratorOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PasswordGenerator, true
}

// SetPasswordGenerator sets field value
func (o *SingleUseTokensExtendedOperationHandlerShared) SetPasswordGenerator(v string) {
	o.PasswordGenerator = v
}

// GetDefaultOTPDeliveryMechanism returns the DefaultOTPDeliveryMechanism field value
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDefaultOTPDeliveryMechanism() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DefaultOTPDeliveryMechanism
}

// GetDefaultOTPDeliveryMechanismOk returns a tuple with the DefaultOTPDeliveryMechanism field value
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDefaultOTPDeliveryMechanismOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.DefaultOTPDeliveryMechanism, true
}

// SetDefaultOTPDeliveryMechanism sets field value
func (o *SingleUseTokensExtendedOperationHandlerShared) SetDefaultOTPDeliveryMechanism(v []string) {
	o.DefaultOTPDeliveryMechanism = v
}

// GetDefaultSingleUseTokenValidityDuration returns the DefaultSingleUseTokenValidityDuration field value if set, zero value otherwise.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDefaultSingleUseTokenValidityDuration() string {
	if o == nil || isNil(o.DefaultSingleUseTokenValidityDuration) {
		var ret string
		return ret
	}
	return *o.DefaultSingleUseTokenValidityDuration
}

// GetDefaultSingleUseTokenValidityDurationOk returns a tuple with the DefaultSingleUseTokenValidityDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDefaultSingleUseTokenValidityDurationOk() (*string, bool) {
	if o == nil || isNil(o.DefaultSingleUseTokenValidityDuration) {
    return nil, false
	}
	return o.DefaultSingleUseTokenValidityDuration, true
}

// HasDefaultSingleUseTokenValidityDuration returns a boolean if a field has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) HasDefaultSingleUseTokenValidityDuration() bool {
	if o != nil && !isNil(o.DefaultSingleUseTokenValidityDuration) {
		return true
	}

	return false
}

// SetDefaultSingleUseTokenValidityDuration gets a reference to the given string and assigns it to the DefaultSingleUseTokenValidityDuration field.
func (o *SingleUseTokensExtendedOperationHandlerShared) SetDefaultSingleUseTokenValidityDuration(v string) {
	o.DefaultSingleUseTokenValidityDuration = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SingleUseTokensExtendedOperationHandlerShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *SingleUseTokensExtendedOperationHandlerShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SingleUseTokensExtendedOperationHandlerShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SingleUseTokensExtendedOperationHandlerShared) SetEnabled(v bool) {
	o.Enabled = v
}

func (o SingleUseTokensExtendedOperationHandlerShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["passwordGenerator"] = o.PasswordGenerator
	}
	if true {
		toSerialize["defaultOTPDeliveryMechanism"] = o.DefaultOTPDeliveryMechanism
	}
	if !isNil(o.DefaultSingleUseTokenValidityDuration) {
		toSerialize["defaultSingleUseTokenValidityDuration"] = o.DefaultSingleUseTokenValidityDuration
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableSingleUseTokensExtendedOperationHandlerShared struct {
	value *SingleUseTokensExtendedOperationHandlerShared
	isSet bool
}

func (v NullableSingleUseTokensExtendedOperationHandlerShared) Get() *SingleUseTokensExtendedOperationHandlerShared {
	return v.value
}

func (v *NullableSingleUseTokensExtendedOperationHandlerShared) Set(val *SingleUseTokensExtendedOperationHandlerShared) {
	v.value = val
	v.isSet = true
}

func (v NullableSingleUseTokensExtendedOperationHandlerShared) IsSet() bool {
	return v.isSet
}

func (v *NullableSingleUseTokensExtendedOperationHandlerShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSingleUseTokensExtendedOperationHandlerShared(val *SingleUseTokensExtendedOperationHandlerShared) *NullableSingleUseTokensExtendedOperationHandlerShared {
	return &NullableSingleUseTokensExtendedOperationHandlerShared{value: val, isSet: true}
}

func (v NullableSingleUseTokensExtendedOperationHandlerShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSingleUseTokensExtendedOperationHandlerShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


