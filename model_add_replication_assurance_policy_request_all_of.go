/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddReplicationAssurancePolicyRequestAllOf struct for AddReplicationAssurancePolicyRequestAllOf
type AddReplicationAssurancePolicyRequestAllOf struct {
	// Name of the new Replication Assurance Policy
	PolicyName string `json:"policyName"`
}

// NewAddReplicationAssurancePolicyRequestAllOf instantiates a new AddReplicationAssurancePolicyRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddReplicationAssurancePolicyRequestAllOf(policyName string) *AddReplicationAssurancePolicyRequestAllOf {
	this := AddReplicationAssurancePolicyRequestAllOf{}
	this.PolicyName = policyName
	return &this
}

// NewAddReplicationAssurancePolicyRequestAllOfWithDefaults instantiates a new AddReplicationAssurancePolicyRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddReplicationAssurancePolicyRequestAllOfWithDefaults() *AddReplicationAssurancePolicyRequestAllOf {
	this := AddReplicationAssurancePolicyRequestAllOf{}
	return &this
}

// GetPolicyName returns the PolicyName field value
func (o *AddReplicationAssurancePolicyRequestAllOf) GetPolicyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *AddReplicationAssurancePolicyRequestAllOf) GetPolicyNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *AddReplicationAssurancePolicyRequestAllOf) SetPolicyName(v string) {
	o.PolicyName = v
}

func (o AddReplicationAssurancePolicyRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policyName"] = o.PolicyName
	}
	return json.Marshal(toSerialize)
}

type NullableAddReplicationAssurancePolicyRequestAllOf struct {
	value *AddReplicationAssurancePolicyRequestAllOf
	isSet bool
}

func (v NullableAddReplicationAssurancePolicyRequestAllOf) Get() *AddReplicationAssurancePolicyRequestAllOf {
	return v.value
}

func (v *NullableAddReplicationAssurancePolicyRequestAllOf) Set(val *AddReplicationAssurancePolicyRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddReplicationAssurancePolicyRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddReplicationAssurancePolicyRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddReplicationAssurancePolicyRequestAllOf(val *AddReplicationAssurancePolicyRequestAllOf) *NullableAddReplicationAssurancePolicyRequestAllOf {
	return &NullableAddReplicationAssurancePolicyRequestAllOf{value: val, isSet: true}
}

func (v NullableAddReplicationAssurancePolicyRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddReplicationAssurancePolicyRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


