/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumunboundidTotpSaslMechanismHandlerSchemaUrn the model 'EnumunboundidTotpSaslMechanismHandlerSchemaUrn'
type EnumunboundidTotpSaslMechanismHandlerSchemaUrn string

// List of Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn
const (
	ENUMUNBOUNDIDTOTPSASLMECHANISMHANDLERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERUNBOUNDID_TOTP EnumunboundidTotpSaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp"
)

// All allowed values of EnumunboundidTotpSaslMechanismHandlerSchemaUrn enum
var AllowedEnumunboundidTotpSaslMechanismHandlerSchemaUrnEnumValues = []EnumunboundidTotpSaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp",
}

func (v *EnumunboundidTotpSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumunboundidTotpSaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumunboundidTotpSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumunboundidTotpSaslMechanismHandlerSchemaUrn", value)
}

// NewEnumunboundidTotpSaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumunboundidTotpSaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumunboundidTotpSaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumunboundidTotpSaslMechanismHandlerSchemaUrn, error) {
	ev := EnumunboundidTotpSaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumunboundidTotpSaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumunboundidTotpSaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumunboundidTotpSaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumunboundidTotpSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn value
func (v EnumunboundidTotpSaslMechanismHandlerSchemaUrn) Ptr() *EnumunboundidTotpSaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn struct {
	value *EnumunboundidTotpSaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) Get() *EnumunboundidTotpSaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) Set(val *EnumunboundidTotpSaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn(val *EnumunboundidTotpSaslMechanismHandlerSchemaUrn) *NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn {
	return &NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumunboundidTotpSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
