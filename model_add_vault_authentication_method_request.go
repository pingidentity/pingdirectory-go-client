/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddVaultAuthenticationMethodRequest - struct for AddVaultAuthenticationMethodRequest
type AddVaultAuthenticationMethodRequest struct {
	AddAppRoleVaultAuthenticationMethodRequest *AddAppRoleVaultAuthenticationMethodRequest
	AddStaticTokenVaultAuthenticationMethodRequest *AddStaticTokenVaultAuthenticationMethodRequest
	AddUserPassVaultAuthenticationMethodRequest *AddUserPassVaultAuthenticationMethodRequest
}

// AddAppRoleVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest is a convenience function that returns AddAppRoleVaultAuthenticationMethodRequest wrapped in AddVaultAuthenticationMethodRequest
func AddAppRoleVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest(v *AddAppRoleVaultAuthenticationMethodRequest) AddVaultAuthenticationMethodRequest {
	return AddVaultAuthenticationMethodRequest{
		AddAppRoleVaultAuthenticationMethodRequest: v,
	}
}

// AddStaticTokenVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest is a convenience function that returns AddStaticTokenVaultAuthenticationMethodRequest wrapped in AddVaultAuthenticationMethodRequest
func AddStaticTokenVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest(v *AddStaticTokenVaultAuthenticationMethodRequest) AddVaultAuthenticationMethodRequest {
	return AddVaultAuthenticationMethodRequest{
		AddStaticTokenVaultAuthenticationMethodRequest: v,
	}
}

// AddUserPassVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest is a convenience function that returns AddUserPassVaultAuthenticationMethodRequest wrapped in AddVaultAuthenticationMethodRequest
func AddUserPassVaultAuthenticationMethodRequestAsAddVaultAuthenticationMethodRequest(v *AddUserPassVaultAuthenticationMethodRequest) AddVaultAuthenticationMethodRequest {
	return AddVaultAuthenticationMethodRequest{
		AddUserPassVaultAuthenticationMethodRequest: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddVaultAuthenticationMethodRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddAppRoleVaultAuthenticationMethodRequest
	err = newStrictDecoder(data).Decode(&dst.AddAppRoleVaultAuthenticationMethodRequest)
	if err == nil {
		jsonAddAppRoleVaultAuthenticationMethodRequest, _ := json.Marshal(dst.AddAppRoleVaultAuthenticationMethodRequest)
		if string(jsonAddAppRoleVaultAuthenticationMethodRequest) == "{}" { // empty struct
			dst.AddAppRoleVaultAuthenticationMethodRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddAppRoleVaultAuthenticationMethodRequest = nil
	}

	// try to unmarshal data into AddStaticTokenVaultAuthenticationMethodRequest
	err = newStrictDecoder(data).Decode(&dst.AddStaticTokenVaultAuthenticationMethodRequest)
	if err == nil {
		jsonAddStaticTokenVaultAuthenticationMethodRequest, _ := json.Marshal(dst.AddStaticTokenVaultAuthenticationMethodRequest)
		if string(jsonAddStaticTokenVaultAuthenticationMethodRequest) == "{}" { // empty struct
			dst.AddStaticTokenVaultAuthenticationMethodRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddStaticTokenVaultAuthenticationMethodRequest = nil
	}

	// try to unmarshal data into AddUserPassVaultAuthenticationMethodRequest
	err = newStrictDecoder(data).Decode(&dst.AddUserPassVaultAuthenticationMethodRequest)
	if err == nil {
		jsonAddUserPassVaultAuthenticationMethodRequest, _ := json.Marshal(dst.AddUserPassVaultAuthenticationMethodRequest)
		if string(jsonAddUserPassVaultAuthenticationMethodRequest) == "{}" { // empty struct
			dst.AddUserPassVaultAuthenticationMethodRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddUserPassVaultAuthenticationMethodRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddAppRoleVaultAuthenticationMethodRequest = nil
		dst.AddStaticTokenVaultAuthenticationMethodRequest = nil
		dst.AddUserPassVaultAuthenticationMethodRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddVaultAuthenticationMethodRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddVaultAuthenticationMethodRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddVaultAuthenticationMethodRequest) MarshalJSON() ([]byte, error) {
	if src.AddAppRoleVaultAuthenticationMethodRequest != nil {
		return json.Marshal(&src.AddAppRoleVaultAuthenticationMethodRequest)
	}

	if src.AddStaticTokenVaultAuthenticationMethodRequest != nil {
		return json.Marshal(&src.AddStaticTokenVaultAuthenticationMethodRequest)
	}

	if src.AddUserPassVaultAuthenticationMethodRequest != nil {
		return json.Marshal(&src.AddUserPassVaultAuthenticationMethodRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddVaultAuthenticationMethodRequest) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AddAppRoleVaultAuthenticationMethodRequest != nil {
		return obj.AddAppRoleVaultAuthenticationMethodRequest
	}

	if obj.AddStaticTokenVaultAuthenticationMethodRequest != nil {
		return obj.AddStaticTokenVaultAuthenticationMethodRequest
	}

	if obj.AddUserPassVaultAuthenticationMethodRequest != nil {
		return obj.AddUserPassVaultAuthenticationMethodRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddVaultAuthenticationMethodRequest struct {
	value *AddVaultAuthenticationMethodRequest
	isSet bool
}

func (v NullableAddVaultAuthenticationMethodRequest) Get() *AddVaultAuthenticationMethodRequest {
	return v.value
}

func (v *NullableAddVaultAuthenticationMethodRequest) Set(val *AddVaultAuthenticationMethodRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVaultAuthenticationMethodRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVaultAuthenticationMethodRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVaultAuthenticationMethodRequest(val *AddVaultAuthenticationMethodRequest) *NullableAddVaultAuthenticationMethodRequest {
	return &NullableAddVaultAuthenticationMethodRequest{value: val, isSet: true}
}

func (v NullableAddVaultAuthenticationMethodRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVaultAuthenticationMethodRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


