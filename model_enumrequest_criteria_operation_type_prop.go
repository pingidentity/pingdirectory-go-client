/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumrequestCriteriaOperationTypeProp The types of operations that may be matched by this Root DSE Request Criteria.
type EnumrequestCriteriaOperationTypeProp string

// List of Enumrequest-criteria-operationTypeProp
const (
	ENUMREQUESTCRITERIAOPERATIONTYPEPROP_COMPARE EnumrequestCriteriaOperationTypeProp = "compare"
	ENUMREQUESTCRITERIAOPERATIONTYPEPROP_BASE_OBJECT_SEARCH EnumrequestCriteriaOperationTypeProp = "base-object-search"
	ENUMREQUESTCRITERIAOPERATIONTYPEPROP_SINGLE_LEVEL_SEARCH EnumrequestCriteriaOperationTypeProp = "single-level-search"
	ENUMREQUESTCRITERIAOPERATIONTYPEPROP_WHOLE_SUBTREE_SEARCH EnumrequestCriteriaOperationTypeProp = "whole-subtree-search"
	ENUMREQUESTCRITERIAOPERATIONTYPEPROP_SUBORDINATE_SUBTREE_SEARCH EnumrequestCriteriaOperationTypeProp = "subordinate-subtree-search"
)

// All allowed values of EnumrequestCriteriaOperationTypeProp enum
var AllowedEnumrequestCriteriaOperationTypePropEnumValues = []EnumrequestCriteriaOperationTypeProp{
	"compare",
	"base-object-search",
	"single-level-search",
	"whole-subtree-search",
	"subordinate-subtree-search",
}

func (v *EnumrequestCriteriaOperationTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumrequestCriteriaOperationTypeProp(value)
	for _, existing := range AllowedEnumrequestCriteriaOperationTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumrequestCriteriaOperationTypeProp", value)
}

// NewEnumrequestCriteriaOperationTypePropFromValue returns a pointer to a valid EnumrequestCriteriaOperationTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumrequestCriteriaOperationTypePropFromValue(v string) (*EnumrequestCriteriaOperationTypeProp, error) {
	ev := EnumrequestCriteriaOperationTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumrequestCriteriaOperationTypeProp: valid values are %v", v, AllowedEnumrequestCriteriaOperationTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumrequestCriteriaOperationTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumrequestCriteriaOperationTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumrequest-criteria-operationTypeProp value
func (v EnumrequestCriteriaOperationTypeProp) Ptr() *EnumrequestCriteriaOperationTypeProp {
	return &v
}

type NullableEnumrequestCriteriaOperationTypeProp struct {
	value *EnumrequestCriteriaOperationTypeProp
	isSet bool
}

func (v NullableEnumrequestCriteriaOperationTypeProp) Get() *EnumrequestCriteriaOperationTypeProp {
	return v.value
}

func (v *NullableEnumrequestCriteriaOperationTypeProp) Set(val *EnumrequestCriteriaOperationTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumrequestCriteriaOperationTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumrequestCriteriaOperationTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumrequestCriteriaOperationTypeProp(val *EnumrequestCriteriaOperationTypeProp) *NullableEnumrequestCriteriaOperationTypeProp {
	return &NullableEnumrequestCriteriaOperationTypeProp{value: val, isSet: true}
}

func (v NullableEnumrequestCriteriaOperationTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumrequestCriteriaOperationTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

