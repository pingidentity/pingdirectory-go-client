/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddSmtpAlertHandlerRequestAllOf struct for AddSmtpAlertHandlerRequestAllOf
type AddSmtpAlertHandlerRequestAllOf struct {
	// Name of the new Alert Handler
	HandlerName string `json:"handlerName"`
}

// NewAddSmtpAlertHandlerRequestAllOf instantiates a new AddSmtpAlertHandlerRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSmtpAlertHandlerRequestAllOf(handlerName string) *AddSmtpAlertHandlerRequestAllOf {
	this := AddSmtpAlertHandlerRequestAllOf{}
	this.HandlerName = handlerName
	return &this
}

// NewAddSmtpAlertHandlerRequestAllOfWithDefaults instantiates a new AddSmtpAlertHandlerRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSmtpAlertHandlerRequestAllOfWithDefaults() *AddSmtpAlertHandlerRequestAllOf {
	this := AddSmtpAlertHandlerRequestAllOf{}
	return &this
}

// GetHandlerName returns the HandlerName field value
func (o *AddSmtpAlertHandlerRequestAllOf) GetHandlerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HandlerName
}

// GetHandlerNameOk returns a tuple with the HandlerName field value
// and a boolean to check if the value has been set.
func (o *AddSmtpAlertHandlerRequestAllOf) GetHandlerNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.HandlerName, true
}

// SetHandlerName sets field value
func (o *AddSmtpAlertHandlerRequestAllOf) SetHandlerName(v string) {
	o.HandlerName = v
}

func (o AddSmtpAlertHandlerRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["handlerName"] = o.HandlerName
	}
	return json.Marshal(toSerialize)
}

type NullableAddSmtpAlertHandlerRequestAllOf struct {
	value *AddSmtpAlertHandlerRequestAllOf
	isSet bool
}

func (v NullableAddSmtpAlertHandlerRequestAllOf) Get() *AddSmtpAlertHandlerRequestAllOf {
	return v.value
}

func (v *NullableAddSmtpAlertHandlerRequestAllOf) Set(val *AddSmtpAlertHandlerRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSmtpAlertHandlerRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSmtpAlertHandlerRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSmtpAlertHandlerRequestAllOf(val *AddSmtpAlertHandlerRequestAllOf) *NullableAddSmtpAlertHandlerRequestAllOf {
	return &NullableAddSmtpAlertHandlerRequestAllOf{value: val, isSet: true}
}

func (v NullableAddSmtpAlertHandlerRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSmtpAlertHandlerRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


