/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ReplicationAssurancePolicyShared struct for ReplicationAssurancePolicyShared
type ReplicationAssurancePolicyShared struct {
	Schemas []EnumreplicationAssurancePolicySchemaUrn `json:"schemas,omitempty"`
	// Description of the Replication Assurance Policy.
	Description *string `json:"description,omitempty"`
	// Indicates whether this Replication Assurance Policy is enabled for use in the server. If a Replication Assurance Policy is disabled, then no new operations will be associated with it.
	Enabled bool `json:"enabled"`
	// When multiple Replication Assurance Policies are defined, this property determines the evaluation order for finding a Replication Assurance Policy match against an operation. Policies are evaluated based on this index from least to greatest. Values of this property must be unique but not necessarily contiguous.
	EvaluationOrderIndex int32 `json:"evaluationOrderIndex"`
	LocalLevel EnumreplicationAssurancePolicyLocalLevelProp `json:"localLevel"`
	RemoteLevel EnumreplicationAssurancePolicyRemoteLevelProp `json:"remoteLevel"`
	// Specifies the maximum length of time to wait for the replication assurance requirements to be met before timing out and replying to the client.
	Timeout string `json:"timeout"`
	// Specifies a connection criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
	ConnectionCriteria *string `json:"connectionCriteria,omitempty"`
	// Specifies a request criteria used to indicate which operations from clients matching this criteria use this policy. If both a connection criteria and a request criteria are specified for a policy, then both must match an operation for the policy to be assigned.
	RequestCriteria *string `json:"requestCriteria,omitempty"`
}

// NewReplicationAssurancePolicyShared instantiates a new ReplicationAssurancePolicyShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationAssurancePolicyShared(enabled bool, evaluationOrderIndex int32, localLevel EnumreplicationAssurancePolicyLocalLevelProp, remoteLevel EnumreplicationAssurancePolicyRemoteLevelProp, timeout string) *ReplicationAssurancePolicyShared {
	this := ReplicationAssurancePolicyShared{}
	this.Enabled = enabled
	this.EvaluationOrderIndex = evaluationOrderIndex
	this.LocalLevel = localLevel
	this.RemoteLevel = remoteLevel
	this.Timeout = timeout
	return &this
}

// NewReplicationAssurancePolicySharedWithDefaults instantiates a new ReplicationAssurancePolicyShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationAssurancePolicySharedWithDefaults() *ReplicationAssurancePolicyShared {
	this := ReplicationAssurancePolicyShared{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ReplicationAssurancePolicyShared) GetSchemas() []EnumreplicationAssurancePolicySchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumreplicationAssurancePolicySchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetSchemasOk() ([]EnumreplicationAssurancePolicySchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ReplicationAssurancePolicyShared) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumreplicationAssurancePolicySchemaUrn and assigns it to the Schemas field.
func (o *ReplicationAssurancePolicyShared) SetSchemas(v []EnumreplicationAssurancePolicySchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ReplicationAssurancePolicyShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ReplicationAssurancePolicyShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ReplicationAssurancePolicyShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ReplicationAssurancePolicyShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ReplicationAssurancePolicyShared) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEvaluationOrderIndex returns the EvaluationOrderIndex field value
func (o *ReplicationAssurancePolicyShared) GetEvaluationOrderIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EvaluationOrderIndex
}

// GetEvaluationOrderIndexOk returns a tuple with the EvaluationOrderIndex field value
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetEvaluationOrderIndexOk() (*int32, bool) {
	if o == nil {
    return nil, false
	}
	return &o.EvaluationOrderIndex, true
}

// SetEvaluationOrderIndex sets field value
func (o *ReplicationAssurancePolicyShared) SetEvaluationOrderIndex(v int32) {
	o.EvaluationOrderIndex = v
}

// GetLocalLevel returns the LocalLevel field value
func (o *ReplicationAssurancePolicyShared) GetLocalLevel() EnumreplicationAssurancePolicyLocalLevelProp {
	if o == nil {
		var ret EnumreplicationAssurancePolicyLocalLevelProp
		return ret
	}

	return o.LocalLevel
}

// GetLocalLevelOk returns a tuple with the LocalLevel field value
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetLocalLevelOk() (*EnumreplicationAssurancePolicyLocalLevelProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LocalLevel, true
}

// SetLocalLevel sets field value
func (o *ReplicationAssurancePolicyShared) SetLocalLevel(v EnumreplicationAssurancePolicyLocalLevelProp) {
	o.LocalLevel = v
}

// GetRemoteLevel returns the RemoteLevel field value
func (o *ReplicationAssurancePolicyShared) GetRemoteLevel() EnumreplicationAssurancePolicyRemoteLevelProp {
	if o == nil {
		var ret EnumreplicationAssurancePolicyRemoteLevelProp
		return ret
	}

	return o.RemoteLevel
}

// GetRemoteLevelOk returns a tuple with the RemoteLevel field value
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetRemoteLevelOk() (*EnumreplicationAssurancePolicyRemoteLevelProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RemoteLevel, true
}

// SetRemoteLevel sets field value
func (o *ReplicationAssurancePolicyShared) SetRemoteLevel(v EnumreplicationAssurancePolicyRemoteLevelProp) {
	o.RemoteLevel = v
}

// GetTimeout returns the Timeout field value
func (o *ReplicationAssurancePolicyShared) GetTimeout() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetTimeoutOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Timeout, true
}

// SetTimeout sets field value
func (o *ReplicationAssurancePolicyShared) SetTimeout(v string) {
	o.Timeout = v
}

// GetConnectionCriteria returns the ConnectionCriteria field value if set, zero value otherwise.
func (o *ReplicationAssurancePolicyShared) GetConnectionCriteria() string {
	if o == nil || isNil(o.ConnectionCriteria) {
		var ret string
		return ret
	}
	return *o.ConnectionCriteria
}

// GetConnectionCriteriaOk returns a tuple with the ConnectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetConnectionCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.ConnectionCriteria) {
    return nil, false
	}
	return o.ConnectionCriteria, true
}

// HasConnectionCriteria returns a boolean if a field has been set.
func (o *ReplicationAssurancePolicyShared) HasConnectionCriteria() bool {
	if o != nil && !isNil(o.ConnectionCriteria) {
		return true
	}

	return false
}

// SetConnectionCriteria gets a reference to the given string and assigns it to the ConnectionCriteria field.
func (o *ReplicationAssurancePolicyShared) SetConnectionCriteria(v string) {
	o.ConnectionCriteria = &v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *ReplicationAssurancePolicyShared) GetRequestCriteria() string {
	if o == nil || isNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationAssurancePolicyShared) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.RequestCriteria) {
    return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *ReplicationAssurancePolicyShared) HasRequestCriteria() bool {
	if o != nil && !isNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *ReplicationAssurancePolicyShared) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

func (o ReplicationAssurancePolicyShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["evaluationOrderIndex"] = o.EvaluationOrderIndex
	}
	if true {
		toSerialize["localLevel"] = o.LocalLevel
	}
	if true {
		toSerialize["remoteLevel"] = o.RemoteLevel
	}
	if true {
		toSerialize["timeout"] = o.Timeout
	}
	if !isNil(o.ConnectionCriteria) {
		toSerialize["connectionCriteria"] = o.ConnectionCriteria
	}
	if !isNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	return json.Marshal(toSerialize)
}

type NullableReplicationAssurancePolicyShared struct {
	value *ReplicationAssurancePolicyShared
	isSet bool
}

func (v NullableReplicationAssurancePolicyShared) Get() *ReplicationAssurancePolicyShared {
	return v.value
}

func (v *NullableReplicationAssurancePolicyShared) Set(val *ReplicationAssurancePolicyShared) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationAssurancePolicyShared) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationAssurancePolicyShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationAssurancePolicyShared(val *ReplicationAssurancePolicyShared) *NullableReplicationAssurancePolicyShared {
	return &NullableReplicationAssurancePolicyShared{value: val, isSet: true}
}

func (v NullableReplicationAssurancePolicyShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationAssurancePolicyShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


