/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp Specifies an allow list of JWT content encryption algorithms that will be accepted by the JWT Access Token Validator.
type EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp string

// List of Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp
const (
	ENUMACCESSTOKENVALIDATORALLOWEDCONTENTENCRYPTIONALGORITHMPROP_A128_CBC_HS256 EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp = "A128CBC_HS256"
	ENUMACCESSTOKENVALIDATORALLOWEDCONTENTENCRYPTIONALGORITHMPROP_A192_CBC_HS384 EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp = "A192CBC_HS384"
	ENUMACCESSTOKENVALIDATORALLOWEDCONTENTENCRYPTIONALGORITHMPROP_A256_CBC_HS512 EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp = "A256CBC_HS512"
)

// All allowed values of EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp enum
var AllowedEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropEnumValues = []EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp{
	"A128CBC_HS256",
	"A192CBC_HS384",
	"A256CBC_HS512",
}

func (v *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp(value)
	for _, existing := range AllowedEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp", value)
}

// NewEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropFromValue returns a pointer to a valid EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropFromValue(v string) (*EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp, error) {
	ev := EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp: valid values are %v", v, AllowedEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) IsValid() bool {
	for _, existing := range AllowedEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp value
func (v EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) Ptr() *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp {
	return &v
}

type NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp struct {
	value *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp
	isSet bool
}

func (v NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) Get() *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp {
	return v.value
}

func (v *NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) Set(val *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp(val *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) *NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp {
	return &NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp{value: val, isSet: true}
}

func (v NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
