/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ThirdPartyNotificationManagerShared struct for ThirdPartyNotificationManagerShared
type ThirdPartyNotificationManagerShared struct {
	Schemas []EnumthirdPartyNotificationManagerSchemaUrn `json:"schemas,omitempty"`
	// The fully-qualified name of the Java class providing the logic for the Third Party Notification Manager.
	ExtensionClass string `json:"extensionClass"`
	ExtensionArgument []string `json:"extensionArgument,omitempty"`
	// A description for this Notification Manager
	Description *string `json:"description,omitempty"`
	// Indicates whether this Notification Manager is enabled within the server.
	Enabled bool `json:"enabled"`
	// Specifies the DN of the entry below which subscription data is stored for this Notification Manager. This needs to be in the backend that has the data to be notified on, and must not be the same entry as the backend base DN. The subscription base DN entry does not need to exist as it will be created by the server.
	SubscriptionBaseDN string `json:"subscriptionBaseDN"`
	TransactionNotification EnumnotificationManagerTransactionNotificationProp `json:"transactionNotification"`
	// Enables monitor entries for this Notification Manager.
	MonitorEntriesEnabled *bool `json:"monitorEntriesEnabled,omitempty"`
}

// NewThirdPartyNotificationManagerShared instantiates a new ThirdPartyNotificationManagerShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewThirdPartyNotificationManagerShared(extensionClass string, enabled bool, subscriptionBaseDN string, transactionNotification EnumnotificationManagerTransactionNotificationProp) *ThirdPartyNotificationManagerShared {
	this := ThirdPartyNotificationManagerShared{}
	this.ExtensionClass = extensionClass
	this.Enabled = enabled
	this.SubscriptionBaseDN = subscriptionBaseDN
	this.TransactionNotification = transactionNotification
	return &this
}

// NewThirdPartyNotificationManagerSharedWithDefaults instantiates a new ThirdPartyNotificationManagerShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewThirdPartyNotificationManagerSharedWithDefaults() *ThirdPartyNotificationManagerShared {
	this := ThirdPartyNotificationManagerShared{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ThirdPartyNotificationManagerShared) GetSchemas() []EnumthirdPartyNotificationManagerSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumthirdPartyNotificationManagerSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetSchemasOk() ([]EnumthirdPartyNotificationManagerSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ThirdPartyNotificationManagerShared) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumthirdPartyNotificationManagerSchemaUrn and assigns it to the Schemas field.
func (o *ThirdPartyNotificationManagerShared) SetSchemas(v []EnumthirdPartyNotificationManagerSchemaUrn) {
	o.Schemas = v
}

// GetExtensionClass returns the ExtensionClass field value
func (o *ThirdPartyNotificationManagerShared) GetExtensionClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtensionClass
}

// GetExtensionClassOk returns a tuple with the ExtensionClass field value
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetExtensionClassOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ExtensionClass, true
}

// SetExtensionClass sets field value
func (o *ThirdPartyNotificationManagerShared) SetExtensionClass(v string) {
	o.ExtensionClass = v
}

// GetExtensionArgument returns the ExtensionArgument field value if set, zero value otherwise.
func (o *ThirdPartyNotificationManagerShared) GetExtensionArgument() []string {
	if o == nil || isNil(o.ExtensionArgument) {
		var ret []string
		return ret
	}
	return o.ExtensionArgument
}

// GetExtensionArgumentOk returns a tuple with the ExtensionArgument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetExtensionArgumentOk() ([]string, bool) {
	if o == nil || isNil(o.ExtensionArgument) {
    return nil, false
	}
	return o.ExtensionArgument, true
}

// HasExtensionArgument returns a boolean if a field has been set.
func (o *ThirdPartyNotificationManagerShared) HasExtensionArgument() bool {
	if o != nil && !isNil(o.ExtensionArgument) {
		return true
	}

	return false
}

// SetExtensionArgument gets a reference to the given []string and assigns it to the ExtensionArgument field.
func (o *ThirdPartyNotificationManagerShared) SetExtensionArgument(v []string) {
	o.ExtensionArgument = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ThirdPartyNotificationManagerShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ThirdPartyNotificationManagerShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ThirdPartyNotificationManagerShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ThirdPartyNotificationManagerShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ThirdPartyNotificationManagerShared) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSubscriptionBaseDN returns the SubscriptionBaseDN field value
func (o *ThirdPartyNotificationManagerShared) GetSubscriptionBaseDN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionBaseDN
}

// GetSubscriptionBaseDNOk returns a tuple with the SubscriptionBaseDN field value
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetSubscriptionBaseDNOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.SubscriptionBaseDN, true
}

// SetSubscriptionBaseDN sets field value
func (o *ThirdPartyNotificationManagerShared) SetSubscriptionBaseDN(v string) {
	o.SubscriptionBaseDN = v
}

// GetTransactionNotification returns the TransactionNotification field value
func (o *ThirdPartyNotificationManagerShared) GetTransactionNotification() EnumnotificationManagerTransactionNotificationProp {
	if o == nil {
		var ret EnumnotificationManagerTransactionNotificationProp
		return ret
	}

	return o.TransactionNotification
}

// GetTransactionNotificationOk returns a tuple with the TransactionNotification field value
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetTransactionNotificationOk() (*EnumnotificationManagerTransactionNotificationProp, bool) {
	if o == nil {
    return nil, false
	}
	return &o.TransactionNotification, true
}

// SetTransactionNotification sets field value
func (o *ThirdPartyNotificationManagerShared) SetTransactionNotification(v EnumnotificationManagerTransactionNotificationProp) {
	o.TransactionNotification = v
}

// GetMonitorEntriesEnabled returns the MonitorEntriesEnabled field value if set, zero value otherwise.
func (o *ThirdPartyNotificationManagerShared) GetMonitorEntriesEnabled() bool {
	if o == nil || isNil(o.MonitorEntriesEnabled) {
		var ret bool
		return ret
	}
	return *o.MonitorEntriesEnabled
}

// GetMonitorEntriesEnabledOk returns a tuple with the MonitorEntriesEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ThirdPartyNotificationManagerShared) GetMonitorEntriesEnabledOk() (*bool, bool) {
	if o == nil || isNil(o.MonitorEntriesEnabled) {
    return nil, false
	}
	return o.MonitorEntriesEnabled, true
}

// HasMonitorEntriesEnabled returns a boolean if a field has been set.
func (o *ThirdPartyNotificationManagerShared) HasMonitorEntriesEnabled() bool {
	if o != nil && !isNil(o.MonitorEntriesEnabled) {
		return true
	}

	return false
}

// SetMonitorEntriesEnabled gets a reference to the given bool and assigns it to the MonitorEntriesEnabled field.
func (o *ThirdPartyNotificationManagerShared) SetMonitorEntriesEnabled(v bool) {
	o.MonitorEntriesEnabled = &v
}

func (o ThirdPartyNotificationManagerShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["extensionClass"] = o.ExtensionClass
	}
	if !isNil(o.ExtensionArgument) {
		toSerialize["extensionArgument"] = o.ExtensionArgument
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if true {
		toSerialize["subscriptionBaseDN"] = o.SubscriptionBaseDN
	}
	if true {
		toSerialize["transactionNotification"] = o.TransactionNotification
	}
	if !isNil(o.MonitorEntriesEnabled) {
		toSerialize["monitorEntriesEnabled"] = o.MonitorEntriesEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableThirdPartyNotificationManagerShared struct {
	value *ThirdPartyNotificationManagerShared
	isSet bool
}

func (v NullableThirdPartyNotificationManagerShared) Get() *ThirdPartyNotificationManagerShared {
	return v.value
}

func (v *NullableThirdPartyNotificationManagerShared) Set(val *ThirdPartyNotificationManagerShared) {
	v.value = val
	v.isSet = true
}

func (v NullableThirdPartyNotificationManagerShared) IsSet() bool {
	return v.isSet
}

func (v *NullableThirdPartyNotificationManagerShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableThirdPartyNotificationManagerShared(val *ThirdPartyNotificationManagerShared) *NullableThirdPartyNotificationManagerShared {
	return &NullableThirdPartyNotificationManagerShared{value: val, isSet: true}
}

func (v NullableThirdPartyNotificationManagerShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableThirdPartyNotificationManagerShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


