/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// PasswordInterServerAuthenticationInfoResponse struct for PasswordInterServerAuthenticationInfoResponse
type PasswordInterServerAuthenticationInfoResponse struct {
	Meta                                          *MetaMeta                                            `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20   `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumpasswordInterServerAuthenticationInfoSchemaUrn `json:"schemas"`
	// Name of the Inter Server Authentication Info
	Id                 string                                                   `json:"id"`
	AuthenticationType *EnuminterServerAuthenticationInfoAuthenticationTypeProp `json:"authenticationType,omitempty"`
	// A DN of the username that should be used for the bind request.
	BindDN *string `json:"bindDN,omitempty"`
	// The username that should be used for the bind request.
	Username *string `json:"username,omitempty"`
	// The password for the username or bind-dn.
	Password string                                         `json:"password"`
	Purpose  []EnuminterServerAuthenticationInfoPurposeProp `json:"purpose,omitempty"`
}

// NewPasswordInterServerAuthenticationInfoResponse instantiates a new PasswordInterServerAuthenticationInfoResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPasswordInterServerAuthenticationInfoResponse(schemas []EnumpasswordInterServerAuthenticationInfoSchemaUrn, id string, password string) *PasswordInterServerAuthenticationInfoResponse {
	this := PasswordInterServerAuthenticationInfoResponse{}
	this.Schemas = schemas
	this.Id = id
	this.Password = password
	return &this
}

// NewPasswordInterServerAuthenticationInfoResponseWithDefaults instantiates a new PasswordInterServerAuthenticationInfoResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPasswordInterServerAuthenticationInfoResponseWithDefaults() *PasswordInterServerAuthenticationInfoResponse {
	this := PasswordInterServerAuthenticationInfoResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *PasswordInterServerAuthenticationInfoResponse) GetSchemas() []EnumpasswordInterServerAuthenticationInfoSchemaUrn {
	if o == nil {
		var ret []EnumpasswordInterServerAuthenticationInfoSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetSchemasOk() ([]EnumpasswordInterServerAuthenticationInfoSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *PasswordInterServerAuthenticationInfoResponse) SetSchemas(v []EnumpasswordInterServerAuthenticationInfoSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *PasswordInterServerAuthenticationInfoResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PasswordInterServerAuthenticationInfoResponse) SetId(v string) {
	o.Id = v
}

// GetAuthenticationType returns the AuthenticationType field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetAuthenticationType() EnuminterServerAuthenticationInfoAuthenticationTypeProp {
	if o == nil || isNil(o.AuthenticationType) {
		var ret EnuminterServerAuthenticationInfoAuthenticationTypeProp
		return ret
	}
	return *o.AuthenticationType
}

// GetAuthenticationTypeOk returns a tuple with the AuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetAuthenticationTypeOk() (*EnuminterServerAuthenticationInfoAuthenticationTypeProp, bool) {
	if o == nil || isNil(o.AuthenticationType) {
		return nil, false
	}
	return o.AuthenticationType, true
}

// HasAuthenticationType returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasAuthenticationType() bool {
	if o != nil && !isNil(o.AuthenticationType) {
		return true
	}

	return false
}

// SetAuthenticationType gets a reference to the given EnuminterServerAuthenticationInfoAuthenticationTypeProp and assigns it to the AuthenticationType field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetAuthenticationType(v EnuminterServerAuthenticationInfoAuthenticationTypeProp) {
	o.AuthenticationType = &v
}

// GetBindDN returns the BindDN field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetBindDN() string {
	if o == nil || isNil(o.BindDN) {
		var ret string
		return ret
	}
	return *o.BindDN
}

// GetBindDNOk returns a tuple with the BindDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetBindDNOk() (*string, bool) {
	if o == nil || isNil(o.BindDN) {
		return nil, false
	}
	return o.BindDN, true
}

// HasBindDN returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasBindDN() bool {
	if o != nil && !isNil(o.BindDN) {
		return true
	}

	return false
}

// SetBindDN gets a reference to the given string and assigns it to the BindDN field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetBindDN(v string) {
	o.BindDN = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetUsername() string {
	if o == nil || isNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetUsernameOk() (*string, bool) {
	if o == nil || isNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasUsername() bool {
	if o != nil && !isNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value
func (o *PasswordInterServerAuthenticationInfoResponse) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *PasswordInterServerAuthenticationInfoResponse) SetPassword(v string) {
	o.Password = v
}

// GetPurpose returns the Purpose field value if set, zero value otherwise.
func (o *PasswordInterServerAuthenticationInfoResponse) GetPurpose() []EnuminterServerAuthenticationInfoPurposeProp {
	if o == nil || isNil(o.Purpose) {
		var ret []EnuminterServerAuthenticationInfoPurposeProp
		return ret
	}
	return o.Purpose
}

// GetPurposeOk returns a tuple with the Purpose field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) GetPurposeOk() ([]EnuminterServerAuthenticationInfoPurposeProp, bool) {
	if o == nil || isNil(o.Purpose) {
		return nil, false
	}
	return o.Purpose, true
}

// HasPurpose returns a boolean if a field has been set.
func (o *PasswordInterServerAuthenticationInfoResponse) HasPurpose() bool {
	if o != nil && !isNil(o.Purpose) {
		return true
	}

	return false
}

// SetPurpose gets a reference to the given []EnuminterServerAuthenticationInfoPurposeProp and assigns it to the Purpose field.
func (o *PasswordInterServerAuthenticationInfoResponse) SetPurpose(v []EnuminterServerAuthenticationInfoPurposeProp) {
	o.Purpose = v
}

func (o PasswordInterServerAuthenticationInfoResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if !isNil(o.AuthenticationType) {
		toSerialize["authenticationType"] = o.AuthenticationType
	}
	if !isNil(o.BindDN) {
		toSerialize["bindDN"] = o.BindDN
	}
	if !isNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.Purpose) {
		toSerialize["purpose"] = o.Purpose
	}
	return json.Marshal(toSerialize)
}

type NullablePasswordInterServerAuthenticationInfoResponse struct {
	value *PasswordInterServerAuthenticationInfoResponse
	isSet bool
}

func (v NullablePasswordInterServerAuthenticationInfoResponse) Get() *PasswordInterServerAuthenticationInfoResponse {
	return v.value
}

func (v *NullablePasswordInterServerAuthenticationInfoResponse) Set(val *PasswordInterServerAuthenticationInfoResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordInterServerAuthenticationInfoResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordInterServerAuthenticationInfoResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordInterServerAuthenticationInfoResponse(val *PasswordInterServerAuthenticationInfoResponse) *NullablePasswordInterServerAuthenticationInfoResponse {
	return &NullablePasswordInterServerAuthenticationInfoResponse{value: val, isSet: true}
}

func (v NullablePasswordInterServerAuthenticationInfoResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordInterServerAuthenticationInfoResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
