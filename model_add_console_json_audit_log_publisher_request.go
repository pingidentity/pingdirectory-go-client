/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddConsoleJsonAuditLogPublisherRequest struct for AddConsoleJsonAuditLogPublisherRequest
type AddConsoleJsonAuditLogPublisherRequest struct {
	// Name of the new Log Publisher
	PublisherName string `json:"publisherName"`
	Schemas []EnumconsoleJsonAuditLogPublisherSchemaUrn `json:"schemas"`
	// Indicates whether the Console JSON Audit Log Publisher is enabled for use.
	Enabled bool `json:"enabled"`
	OutputLocation *EnumlogPublisherOutputLocationProp `json:"outputLocation,omitempty"`
	// Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
	WriteMultiLineMessages *bool `json:"writeMultiLineMessages,omitempty"`
	// Indicates whether the audit log should be written in reversible form so that it is possible to revert the changes if desired.
	UseReversibleForm *bool `json:"useReversibleForm,omitempty"`
	SoftDeleteEntryAuditBehavior *EnumlogPublisherSoftDeleteEntryAuditBehaviorProp `json:"softDeleteEntryAuditBehavior,omitempty"`
	// Indicates whether to include information about any operation purpose request control that may have been included in the request.
	IncludeOperationPurposeRequestControl *bool `json:"includeOperationPurposeRequestControl,omitempty"`
	// Indicates whether to include information about any intermediate client request control that may have been included in the request.
	IncludeIntermediateClientRequestControl *bool `json:"includeIntermediateClientRequestControl,omitempty"`
	ObscureAttribute []string `json:"obscureAttribute,omitempty"`
	ExcludeAttribute []string `json:"excludeAttribute,omitempty"`
	// Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
	SuppressInternalOperations *bool `json:"suppressInternalOperations,omitempty"`
	// Indicates whether log messages should include the product name for the Directory Server.
	IncludeProductName *bool `json:"includeProductName,omitempty"`
	// Indicates whether log messages should include the instance name for the Directory Server.
	IncludeInstanceName *bool `json:"includeInstanceName,omitempty"`
	// Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
	IncludeStartupID *bool `json:"includeStartupID,omitempty"`
	// Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
	IncludeThreadID *bool `json:"includeThreadID,omitempty"`
	// Indicates whether log messages for operation requests should include the DN of the authenticated user for the client connection on which the operation was requested.
	IncludeRequesterDN *bool `json:"includeRequesterDN,omitempty"`
	// Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
	IncludeRequesterIPAddress *bool `json:"includeRequesterIPAddress,omitempty"`
	// Indicates whether log messages for operation requests should include a list of the OIDs of any controls included in the request.
	IncludeRequestControls *bool `json:"includeRequestControls,omitempty"`
	// Indicates whether log messages for operation results should include a list of the OIDs of any controls included in the result.
	IncludeResponseControls *bool `json:"includeResponseControls,omitempty"`
	// Indicates whether to log information about the replication change ID.
	IncludeReplicationChangeID *bool `json:"includeReplicationChangeID,omitempty"`
	// Indicates whether to log information about connections established to the server.
	LogConnects *bool `json:"logConnects,omitempty"`
	// Indicates whether to log information about connections that have been closed by the client or terminated by the server.
	LogDisconnects *bool `json:"logDisconnects,omitempty"`
	// Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
	LogSecurityNegotiation *bool `json:"logSecurityNegotiation,omitempty"`
	// Indicates whether to log information about any client certificates presented to the server.
	LogClientCertificates *bool `json:"logClientCertificates,omitempty"`
	// Indicates whether to log information about requests received from clients.
	LogRequests *bool `json:"logRequests,omitempty"`
	// Indicates whether to log information about the results of client requests.
	LogResults *bool `json:"logResults,omitempty"`
	// Indicates whether to log information about search result entries sent to the client.
	LogSearchEntries *bool `json:"logSearchEntries,omitempty"`
	// Indicates whether to log information about search result references sent to the client.
	LogSearchReferences *bool `json:"logSearchReferences,omitempty"`
	// Indicates whether to log information about intermediate responses sent to the client.
	LogIntermediateResponses *bool `json:"logIntermediateResponses,omitempty"`
	// Indicates whether access messages that are generated by replication operations should be suppressed.
	SuppressReplicationOperations *bool `json:"suppressReplicationOperations,omitempty"`
	// Indicates whether to automatically log result messages for any operation in which the corresponding request was logged. In such cases, the result, entry, and reference criteria will be ignored, although the log-responses, log-search-entries, and log-search-references properties will be honored.
	CorrelateRequestsAndResults *bool `json:"correlateRequestsAndResults,omitempty"`
	// Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
	ConnectionCriteria *string `json:"connectionCriteria,omitempty"`
	// Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
	RequestCriteria *string `json:"requestCriteria,omitempty"`
	// Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
	ResultCriteria *string `json:"resultCriteria,omitempty"`
	// Specifies a set of search entry criteria that must match the associated search result entry in order for that it to be logged by this Access Log Publisher.
	SearchEntryCriteria *string `json:"searchEntryCriteria,omitempty"`
	// Specifies a set of search reference criteria that must match the associated search result reference in order for that it to be logged by this Access Log Publisher.
	SearchReferenceCriteria *string `json:"searchReferenceCriteria,omitempty"`
	// A description for this Log Publisher
	Description *string `json:"description,omitempty"`
	LoggingErrorBehavior *EnumlogPublisherLoggingErrorBehaviorProp `json:"loggingErrorBehavior,omitempty"`
}

// NewAddConsoleJsonAuditLogPublisherRequest instantiates a new AddConsoleJsonAuditLogPublisherRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddConsoleJsonAuditLogPublisherRequest(publisherName string, schemas []EnumconsoleJsonAuditLogPublisherSchemaUrn, enabled bool) *AddConsoleJsonAuditLogPublisherRequest {
	this := AddConsoleJsonAuditLogPublisherRequest{}
	this.PublisherName = publisherName
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewAddConsoleJsonAuditLogPublisherRequestWithDefaults instantiates a new AddConsoleJsonAuditLogPublisherRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddConsoleJsonAuditLogPublisherRequestWithDefaults() *AddConsoleJsonAuditLogPublisherRequest {
	this := AddConsoleJsonAuditLogPublisherRequest{}
	return &this
}

// GetPublisherName returns the PublisherName field value
func (o *AddConsoleJsonAuditLogPublisherRequest) GetPublisherName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PublisherName
}

// GetPublisherNameOk returns a tuple with the PublisherName field value
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetPublisherNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PublisherName, true
}

// SetPublisherName sets field value
func (o *AddConsoleJsonAuditLogPublisherRequest) SetPublisherName(v string) {
	o.PublisherName = v
}

// GetSchemas returns the Schemas field value
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSchemas() []EnumconsoleJsonAuditLogPublisherSchemaUrn {
	if o == nil {
		var ret []EnumconsoleJsonAuditLogPublisherSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSchemasOk() ([]EnumconsoleJsonAuditLogPublisherSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSchemas(v []EnumconsoleJsonAuditLogPublisherSchemaUrn) {
	o.Schemas = v
}

// GetEnabled returns the Enabled field value
func (o *AddConsoleJsonAuditLogPublisherRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddConsoleJsonAuditLogPublisherRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetOutputLocation returns the OutputLocation field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetOutputLocation() EnumlogPublisherOutputLocationProp {
	if o == nil || isNil(o.OutputLocation) {
		var ret EnumlogPublisherOutputLocationProp
		return ret
	}
	return *o.OutputLocation
}

// GetOutputLocationOk returns a tuple with the OutputLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetOutputLocationOk() (*EnumlogPublisherOutputLocationProp, bool) {
	if o == nil || isNil(o.OutputLocation) {
    return nil, false
	}
	return o.OutputLocation, true
}

// HasOutputLocation returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasOutputLocation() bool {
	if o != nil && !isNil(o.OutputLocation) {
		return true
	}

	return false
}

// SetOutputLocation gets a reference to the given EnumlogPublisherOutputLocationProp and assigns it to the OutputLocation field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetOutputLocation(v EnumlogPublisherOutputLocationProp) {
	o.OutputLocation = &v
}

// GetWriteMultiLineMessages returns the WriteMultiLineMessages field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetWriteMultiLineMessages() bool {
	if o == nil || isNil(o.WriteMultiLineMessages) {
		var ret bool
		return ret
	}
	return *o.WriteMultiLineMessages
}

// GetWriteMultiLineMessagesOk returns a tuple with the WriteMultiLineMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetWriteMultiLineMessagesOk() (*bool, bool) {
	if o == nil || isNil(o.WriteMultiLineMessages) {
    return nil, false
	}
	return o.WriteMultiLineMessages, true
}

// HasWriteMultiLineMessages returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasWriteMultiLineMessages() bool {
	if o != nil && !isNil(o.WriteMultiLineMessages) {
		return true
	}

	return false
}

// SetWriteMultiLineMessages gets a reference to the given bool and assigns it to the WriteMultiLineMessages field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetWriteMultiLineMessages(v bool) {
	o.WriteMultiLineMessages = &v
}

// GetUseReversibleForm returns the UseReversibleForm field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetUseReversibleForm() bool {
	if o == nil || isNil(o.UseReversibleForm) {
		var ret bool
		return ret
	}
	return *o.UseReversibleForm
}

// GetUseReversibleFormOk returns a tuple with the UseReversibleForm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetUseReversibleFormOk() (*bool, bool) {
	if o == nil || isNil(o.UseReversibleForm) {
    return nil, false
	}
	return o.UseReversibleForm, true
}

// HasUseReversibleForm returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasUseReversibleForm() bool {
	if o != nil && !isNil(o.UseReversibleForm) {
		return true
	}

	return false
}

// SetUseReversibleForm gets a reference to the given bool and assigns it to the UseReversibleForm field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetUseReversibleForm(v bool) {
	o.UseReversibleForm = &v
}

// GetSoftDeleteEntryAuditBehavior returns the SoftDeleteEntryAuditBehavior field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSoftDeleteEntryAuditBehavior() EnumlogPublisherSoftDeleteEntryAuditBehaviorProp {
	if o == nil || isNil(o.SoftDeleteEntryAuditBehavior) {
		var ret EnumlogPublisherSoftDeleteEntryAuditBehaviorProp
		return ret
	}
	return *o.SoftDeleteEntryAuditBehavior
}

// GetSoftDeleteEntryAuditBehaviorOk returns a tuple with the SoftDeleteEntryAuditBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSoftDeleteEntryAuditBehaviorOk() (*EnumlogPublisherSoftDeleteEntryAuditBehaviorProp, bool) {
	if o == nil || isNil(o.SoftDeleteEntryAuditBehavior) {
    return nil, false
	}
	return o.SoftDeleteEntryAuditBehavior, true
}

// HasSoftDeleteEntryAuditBehavior returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasSoftDeleteEntryAuditBehavior() bool {
	if o != nil && !isNil(o.SoftDeleteEntryAuditBehavior) {
		return true
	}

	return false
}

// SetSoftDeleteEntryAuditBehavior gets a reference to the given EnumlogPublisherSoftDeleteEntryAuditBehaviorProp and assigns it to the SoftDeleteEntryAuditBehavior field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSoftDeleteEntryAuditBehavior(v EnumlogPublisherSoftDeleteEntryAuditBehaviorProp) {
	o.SoftDeleteEntryAuditBehavior = &v
}

// GetIncludeOperationPurposeRequestControl returns the IncludeOperationPurposeRequestControl field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeOperationPurposeRequestControl() bool {
	if o == nil || isNil(o.IncludeOperationPurposeRequestControl) {
		var ret bool
		return ret
	}
	return *o.IncludeOperationPurposeRequestControl
}

// GetIncludeOperationPurposeRequestControlOk returns a tuple with the IncludeOperationPurposeRequestControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeOperationPurposeRequestControlOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeOperationPurposeRequestControl) {
    return nil, false
	}
	return o.IncludeOperationPurposeRequestControl, true
}

// HasIncludeOperationPurposeRequestControl returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeOperationPurposeRequestControl() bool {
	if o != nil && !isNil(o.IncludeOperationPurposeRequestControl) {
		return true
	}

	return false
}

// SetIncludeOperationPurposeRequestControl gets a reference to the given bool and assigns it to the IncludeOperationPurposeRequestControl field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeOperationPurposeRequestControl(v bool) {
	o.IncludeOperationPurposeRequestControl = &v
}

// GetIncludeIntermediateClientRequestControl returns the IncludeIntermediateClientRequestControl field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeIntermediateClientRequestControl() bool {
	if o == nil || isNil(o.IncludeIntermediateClientRequestControl) {
		var ret bool
		return ret
	}
	return *o.IncludeIntermediateClientRequestControl
}

// GetIncludeIntermediateClientRequestControlOk returns a tuple with the IncludeIntermediateClientRequestControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeIntermediateClientRequestControlOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeIntermediateClientRequestControl) {
    return nil, false
	}
	return o.IncludeIntermediateClientRequestControl, true
}

// HasIncludeIntermediateClientRequestControl returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeIntermediateClientRequestControl() bool {
	if o != nil && !isNil(o.IncludeIntermediateClientRequestControl) {
		return true
	}

	return false
}

// SetIncludeIntermediateClientRequestControl gets a reference to the given bool and assigns it to the IncludeIntermediateClientRequestControl field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeIntermediateClientRequestControl(v bool) {
	o.IncludeIntermediateClientRequestControl = &v
}

// GetObscureAttribute returns the ObscureAttribute field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetObscureAttribute() []string {
	if o == nil || isNil(o.ObscureAttribute) {
		var ret []string
		return ret
	}
	return o.ObscureAttribute
}

// GetObscureAttributeOk returns a tuple with the ObscureAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetObscureAttributeOk() ([]string, bool) {
	if o == nil || isNil(o.ObscureAttribute) {
    return nil, false
	}
	return o.ObscureAttribute, true
}

// HasObscureAttribute returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasObscureAttribute() bool {
	if o != nil && !isNil(o.ObscureAttribute) {
		return true
	}

	return false
}

// SetObscureAttribute gets a reference to the given []string and assigns it to the ObscureAttribute field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetObscureAttribute(v []string) {
	o.ObscureAttribute = v
}

// GetExcludeAttribute returns the ExcludeAttribute field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetExcludeAttribute() []string {
	if o == nil || isNil(o.ExcludeAttribute) {
		var ret []string
		return ret
	}
	return o.ExcludeAttribute
}

// GetExcludeAttributeOk returns a tuple with the ExcludeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetExcludeAttributeOk() ([]string, bool) {
	if o == nil || isNil(o.ExcludeAttribute) {
    return nil, false
	}
	return o.ExcludeAttribute, true
}

// HasExcludeAttribute returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasExcludeAttribute() bool {
	if o != nil && !isNil(o.ExcludeAttribute) {
		return true
	}

	return false
}

// SetExcludeAttribute gets a reference to the given []string and assigns it to the ExcludeAttribute field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetExcludeAttribute(v []string) {
	o.ExcludeAttribute = v
}

// GetSuppressInternalOperations returns the SuppressInternalOperations field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSuppressInternalOperations() bool {
	if o == nil || isNil(o.SuppressInternalOperations) {
		var ret bool
		return ret
	}
	return *o.SuppressInternalOperations
}

// GetSuppressInternalOperationsOk returns a tuple with the SuppressInternalOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSuppressInternalOperationsOk() (*bool, bool) {
	if o == nil || isNil(o.SuppressInternalOperations) {
    return nil, false
	}
	return o.SuppressInternalOperations, true
}

// HasSuppressInternalOperations returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasSuppressInternalOperations() bool {
	if o != nil && !isNil(o.SuppressInternalOperations) {
		return true
	}

	return false
}

// SetSuppressInternalOperations gets a reference to the given bool and assigns it to the SuppressInternalOperations field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSuppressInternalOperations(v bool) {
	o.SuppressInternalOperations = &v
}

// GetIncludeProductName returns the IncludeProductName field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeProductName() bool {
	if o == nil || isNil(o.IncludeProductName) {
		var ret bool
		return ret
	}
	return *o.IncludeProductName
}

// GetIncludeProductNameOk returns a tuple with the IncludeProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeProductNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeProductName) {
    return nil, false
	}
	return o.IncludeProductName, true
}

// HasIncludeProductName returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeProductName() bool {
	if o != nil && !isNil(o.IncludeProductName) {
		return true
	}

	return false
}

// SetIncludeProductName gets a reference to the given bool and assigns it to the IncludeProductName field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeProductName(v bool) {
	o.IncludeProductName = &v
}

// GetIncludeInstanceName returns the IncludeInstanceName field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeInstanceName() bool {
	if o == nil || isNil(o.IncludeInstanceName) {
		var ret bool
		return ret
	}
	return *o.IncludeInstanceName
}

// GetIncludeInstanceNameOk returns a tuple with the IncludeInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeInstanceNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeInstanceName) {
    return nil, false
	}
	return o.IncludeInstanceName, true
}

// HasIncludeInstanceName returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeInstanceName() bool {
	if o != nil && !isNil(o.IncludeInstanceName) {
		return true
	}

	return false
}

// SetIncludeInstanceName gets a reference to the given bool and assigns it to the IncludeInstanceName field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeInstanceName(v bool) {
	o.IncludeInstanceName = &v
}

// GetIncludeStartupID returns the IncludeStartupID field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeStartupID() bool {
	if o == nil || isNil(o.IncludeStartupID) {
		var ret bool
		return ret
	}
	return *o.IncludeStartupID
}

// GetIncludeStartupIDOk returns a tuple with the IncludeStartupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeStartupIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeStartupID) {
    return nil, false
	}
	return o.IncludeStartupID, true
}

// HasIncludeStartupID returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeStartupID() bool {
	if o != nil && !isNil(o.IncludeStartupID) {
		return true
	}

	return false
}

// SetIncludeStartupID gets a reference to the given bool and assigns it to the IncludeStartupID field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeStartupID(v bool) {
	o.IncludeStartupID = &v
}

// GetIncludeThreadID returns the IncludeThreadID field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeThreadID() bool {
	if o == nil || isNil(o.IncludeThreadID) {
		var ret bool
		return ret
	}
	return *o.IncludeThreadID
}

// GetIncludeThreadIDOk returns a tuple with the IncludeThreadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeThreadIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeThreadID) {
    return nil, false
	}
	return o.IncludeThreadID, true
}

// HasIncludeThreadID returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeThreadID() bool {
	if o != nil && !isNil(o.IncludeThreadID) {
		return true
	}

	return false
}

// SetIncludeThreadID gets a reference to the given bool and assigns it to the IncludeThreadID field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeThreadID(v bool) {
	o.IncludeThreadID = &v
}

// GetIncludeRequesterDN returns the IncludeRequesterDN field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequesterDN() bool {
	if o == nil || isNil(o.IncludeRequesterDN) {
		var ret bool
		return ret
	}
	return *o.IncludeRequesterDN
}

// GetIncludeRequesterDNOk returns a tuple with the IncludeRequesterDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequesterDNOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequesterDN) {
    return nil, false
	}
	return o.IncludeRequesterDN, true
}

// HasIncludeRequesterDN returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeRequesterDN() bool {
	if o != nil && !isNil(o.IncludeRequesterDN) {
		return true
	}

	return false
}

// SetIncludeRequesterDN gets a reference to the given bool and assigns it to the IncludeRequesterDN field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeRequesterDN(v bool) {
	o.IncludeRequesterDN = &v
}

// GetIncludeRequesterIPAddress returns the IncludeRequesterIPAddress field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequesterIPAddress() bool {
	if o == nil || isNil(o.IncludeRequesterIPAddress) {
		var ret bool
		return ret
	}
	return *o.IncludeRequesterIPAddress
}

// GetIncludeRequesterIPAddressOk returns a tuple with the IncludeRequesterIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequesterIPAddressOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequesterIPAddress) {
    return nil, false
	}
	return o.IncludeRequesterIPAddress, true
}

// HasIncludeRequesterIPAddress returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeRequesterIPAddress() bool {
	if o != nil && !isNil(o.IncludeRequesterIPAddress) {
		return true
	}

	return false
}

// SetIncludeRequesterIPAddress gets a reference to the given bool and assigns it to the IncludeRequesterIPAddress field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeRequesterIPAddress(v bool) {
	o.IncludeRequesterIPAddress = &v
}

// GetIncludeRequestControls returns the IncludeRequestControls field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequestControls() bool {
	if o == nil || isNil(o.IncludeRequestControls) {
		var ret bool
		return ret
	}
	return *o.IncludeRequestControls
}

// GetIncludeRequestControlsOk returns a tuple with the IncludeRequestControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeRequestControlsOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequestControls) {
    return nil, false
	}
	return o.IncludeRequestControls, true
}

// HasIncludeRequestControls returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeRequestControls() bool {
	if o != nil && !isNil(o.IncludeRequestControls) {
		return true
	}

	return false
}

// SetIncludeRequestControls gets a reference to the given bool and assigns it to the IncludeRequestControls field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeRequestControls(v bool) {
	o.IncludeRequestControls = &v
}

// GetIncludeResponseControls returns the IncludeResponseControls field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeResponseControls() bool {
	if o == nil || isNil(o.IncludeResponseControls) {
		var ret bool
		return ret
	}
	return *o.IncludeResponseControls
}

// GetIncludeResponseControlsOk returns a tuple with the IncludeResponseControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeResponseControlsOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeResponseControls) {
    return nil, false
	}
	return o.IncludeResponseControls, true
}

// HasIncludeResponseControls returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeResponseControls() bool {
	if o != nil && !isNil(o.IncludeResponseControls) {
		return true
	}

	return false
}

// SetIncludeResponseControls gets a reference to the given bool and assigns it to the IncludeResponseControls field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeResponseControls(v bool) {
	o.IncludeResponseControls = &v
}

// GetIncludeReplicationChangeID returns the IncludeReplicationChangeID field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeReplicationChangeID() bool {
	if o == nil || isNil(o.IncludeReplicationChangeID) {
		var ret bool
		return ret
	}
	return *o.IncludeReplicationChangeID
}

// GetIncludeReplicationChangeIDOk returns a tuple with the IncludeReplicationChangeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetIncludeReplicationChangeIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeReplicationChangeID) {
    return nil, false
	}
	return o.IncludeReplicationChangeID, true
}

// HasIncludeReplicationChangeID returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasIncludeReplicationChangeID() bool {
	if o != nil && !isNil(o.IncludeReplicationChangeID) {
		return true
	}

	return false
}

// SetIncludeReplicationChangeID gets a reference to the given bool and assigns it to the IncludeReplicationChangeID field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetIncludeReplicationChangeID(v bool) {
	o.IncludeReplicationChangeID = &v
}

// GetLogConnects returns the LogConnects field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogConnects() bool {
	if o == nil || isNil(o.LogConnects) {
		var ret bool
		return ret
	}
	return *o.LogConnects
}

// GetLogConnectsOk returns a tuple with the LogConnects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogConnectsOk() (*bool, bool) {
	if o == nil || isNil(o.LogConnects) {
    return nil, false
	}
	return o.LogConnects, true
}

// HasLogConnects returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogConnects() bool {
	if o != nil && !isNil(o.LogConnects) {
		return true
	}

	return false
}

// SetLogConnects gets a reference to the given bool and assigns it to the LogConnects field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogConnects(v bool) {
	o.LogConnects = &v
}

// GetLogDisconnects returns the LogDisconnects field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogDisconnects() bool {
	if o == nil || isNil(o.LogDisconnects) {
		var ret bool
		return ret
	}
	return *o.LogDisconnects
}

// GetLogDisconnectsOk returns a tuple with the LogDisconnects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogDisconnectsOk() (*bool, bool) {
	if o == nil || isNil(o.LogDisconnects) {
    return nil, false
	}
	return o.LogDisconnects, true
}

// HasLogDisconnects returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogDisconnects() bool {
	if o != nil && !isNil(o.LogDisconnects) {
		return true
	}

	return false
}

// SetLogDisconnects gets a reference to the given bool and assigns it to the LogDisconnects field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogDisconnects(v bool) {
	o.LogDisconnects = &v
}

// GetLogSecurityNegotiation returns the LogSecurityNegotiation field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSecurityNegotiation() bool {
	if o == nil || isNil(o.LogSecurityNegotiation) {
		var ret bool
		return ret
	}
	return *o.LogSecurityNegotiation
}

// GetLogSecurityNegotiationOk returns a tuple with the LogSecurityNegotiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSecurityNegotiationOk() (*bool, bool) {
	if o == nil || isNil(o.LogSecurityNegotiation) {
    return nil, false
	}
	return o.LogSecurityNegotiation, true
}

// HasLogSecurityNegotiation returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogSecurityNegotiation() bool {
	if o != nil && !isNil(o.LogSecurityNegotiation) {
		return true
	}

	return false
}

// SetLogSecurityNegotiation gets a reference to the given bool and assigns it to the LogSecurityNegotiation field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogSecurityNegotiation(v bool) {
	o.LogSecurityNegotiation = &v
}

// GetLogClientCertificates returns the LogClientCertificates field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogClientCertificates() bool {
	if o == nil || isNil(o.LogClientCertificates) {
		var ret bool
		return ret
	}
	return *o.LogClientCertificates
}

// GetLogClientCertificatesOk returns a tuple with the LogClientCertificates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogClientCertificatesOk() (*bool, bool) {
	if o == nil || isNil(o.LogClientCertificates) {
    return nil, false
	}
	return o.LogClientCertificates, true
}

// HasLogClientCertificates returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogClientCertificates() bool {
	if o != nil && !isNil(o.LogClientCertificates) {
		return true
	}

	return false
}

// SetLogClientCertificates gets a reference to the given bool and assigns it to the LogClientCertificates field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogClientCertificates(v bool) {
	o.LogClientCertificates = &v
}

// GetLogRequests returns the LogRequests field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogRequests() bool {
	if o == nil || isNil(o.LogRequests) {
		var ret bool
		return ret
	}
	return *o.LogRequests
}

// GetLogRequestsOk returns a tuple with the LogRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.LogRequests) {
    return nil, false
	}
	return o.LogRequests, true
}

// HasLogRequests returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogRequests() bool {
	if o != nil && !isNil(o.LogRequests) {
		return true
	}

	return false
}

// SetLogRequests gets a reference to the given bool and assigns it to the LogRequests field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogRequests(v bool) {
	o.LogRequests = &v
}

// GetLogResults returns the LogResults field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogResults() bool {
	if o == nil || isNil(o.LogResults) {
		var ret bool
		return ret
	}
	return *o.LogResults
}

// GetLogResultsOk returns a tuple with the LogResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogResultsOk() (*bool, bool) {
	if o == nil || isNil(o.LogResults) {
    return nil, false
	}
	return o.LogResults, true
}

// HasLogResults returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogResults() bool {
	if o != nil && !isNil(o.LogResults) {
		return true
	}

	return false
}

// SetLogResults gets a reference to the given bool and assigns it to the LogResults field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogResults(v bool) {
	o.LogResults = &v
}

// GetLogSearchEntries returns the LogSearchEntries field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSearchEntries() bool {
	if o == nil || isNil(o.LogSearchEntries) {
		var ret bool
		return ret
	}
	return *o.LogSearchEntries
}

// GetLogSearchEntriesOk returns a tuple with the LogSearchEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSearchEntriesOk() (*bool, bool) {
	if o == nil || isNil(o.LogSearchEntries) {
    return nil, false
	}
	return o.LogSearchEntries, true
}

// HasLogSearchEntries returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogSearchEntries() bool {
	if o != nil && !isNil(o.LogSearchEntries) {
		return true
	}

	return false
}

// SetLogSearchEntries gets a reference to the given bool and assigns it to the LogSearchEntries field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogSearchEntries(v bool) {
	o.LogSearchEntries = &v
}

// GetLogSearchReferences returns the LogSearchReferences field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSearchReferences() bool {
	if o == nil || isNil(o.LogSearchReferences) {
		var ret bool
		return ret
	}
	return *o.LogSearchReferences
}

// GetLogSearchReferencesOk returns a tuple with the LogSearchReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogSearchReferencesOk() (*bool, bool) {
	if o == nil || isNil(o.LogSearchReferences) {
    return nil, false
	}
	return o.LogSearchReferences, true
}

// HasLogSearchReferences returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogSearchReferences() bool {
	if o != nil && !isNil(o.LogSearchReferences) {
		return true
	}

	return false
}

// SetLogSearchReferences gets a reference to the given bool and assigns it to the LogSearchReferences field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogSearchReferences(v bool) {
	o.LogSearchReferences = &v
}

// GetLogIntermediateResponses returns the LogIntermediateResponses field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogIntermediateResponses() bool {
	if o == nil || isNil(o.LogIntermediateResponses) {
		var ret bool
		return ret
	}
	return *o.LogIntermediateResponses
}

// GetLogIntermediateResponsesOk returns a tuple with the LogIntermediateResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLogIntermediateResponsesOk() (*bool, bool) {
	if o == nil || isNil(o.LogIntermediateResponses) {
    return nil, false
	}
	return o.LogIntermediateResponses, true
}

// HasLogIntermediateResponses returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLogIntermediateResponses() bool {
	if o != nil && !isNil(o.LogIntermediateResponses) {
		return true
	}

	return false
}

// SetLogIntermediateResponses gets a reference to the given bool and assigns it to the LogIntermediateResponses field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLogIntermediateResponses(v bool) {
	o.LogIntermediateResponses = &v
}

// GetSuppressReplicationOperations returns the SuppressReplicationOperations field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSuppressReplicationOperations() bool {
	if o == nil || isNil(o.SuppressReplicationOperations) {
		var ret bool
		return ret
	}
	return *o.SuppressReplicationOperations
}

// GetSuppressReplicationOperationsOk returns a tuple with the SuppressReplicationOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSuppressReplicationOperationsOk() (*bool, bool) {
	if o == nil || isNil(o.SuppressReplicationOperations) {
    return nil, false
	}
	return o.SuppressReplicationOperations, true
}

// HasSuppressReplicationOperations returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasSuppressReplicationOperations() bool {
	if o != nil && !isNil(o.SuppressReplicationOperations) {
		return true
	}

	return false
}

// SetSuppressReplicationOperations gets a reference to the given bool and assigns it to the SuppressReplicationOperations field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSuppressReplicationOperations(v bool) {
	o.SuppressReplicationOperations = &v
}

// GetCorrelateRequestsAndResults returns the CorrelateRequestsAndResults field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetCorrelateRequestsAndResults() bool {
	if o == nil || isNil(o.CorrelateRequestsAndResults) {
		var ret bool
		return ret
	}
	return *o.CorrelateRequestsAndResults
}

// GetCorrelateRequestsAndResultsOk returns a tuple with the CorrelateRequestsAndResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetCorrelateRequestsAndResultsOk() (*bool, bool) {
	if o == nil || isNil(o.CorrelateRequestsAndResults) {
    return nil, false
	}
	return o.CorrelateRequestsAndResults, true
}

// HasCorrelateRequestsAndResults returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasCorrelateRequestsAndResults() bool {
	if o != nil && !isNil(o.CorrelateRequestsAndResults) {
		return true
	}

	return false
}

// SetCorrelateRequestsAndResults gets a reference to the given bool and assigns it to the CorrelateRequestsAndResults field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetCorrelateRequestsAndResults(v bool) {
	o.CorrelateRequestsAndResults = &v
}

// GetConnectionCriteria returns the ConnectionCriteria field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetConnectionCriteria() string {
	if o == nil || isNil(o.ConnectionCriteria) {
		var ret string
		return ret
	}
	return *o.ConnectionCriteria
}

// GetConnectionCriteriaOk returns a tuple with the ConnectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetConnectionCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.ConnectionCriteria) {
    return nil, false
	}
	return o.ConnectionCriteria, true
}

// HasConnectionCriteria returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasConnectionCriteria() bool {
	if o != nil && !isNil(o.ConnectionCriteria) {
		return true
	}

	return false
}

// SetConnectionCriteria gets a reference to the given string and assigns it to the ConnectionCriteria field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetConnectionCriteria(v string) {
	o.ConnectionCriteria = &v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetRequestCriteria() string {
	if o == nil || isNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.RequestCriteria) {
    return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasRequestCriteria() bool {
	if o != nil && !isNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetResultCriteria returns the ResultCriteria field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetResultCriteria() string {
	if o == nil || isNil(o.ResultCriteria) {
		var ret string
		return ret
	}
	return *o.ResultCriteria
}

// GetResultCriteriaOk returns a tuple with the ResultCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetResultCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.ResultCriteria) {
    return nil, false
	}
	return o.ResultCriteria, true
}

// HasResultCriteria returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasResultCriteria() bool {
	if o != nil && !isNil(o.ResultCriteria) {
		return true
	}

	return false
}

// SetResultCriteria gets a reference to the given string and assigns it to the ResultCriteria field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetResultCriteria(v string) {
	o.ResultCriteria = &v
}

// GetSearchEntryCriteria returns the SearchEntryCriteria field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSearchEntryCriteria() string {
	if o == nil || isNil(o.SearchEntryCriteria) {
		var ret string
		return ret
	}
	return *o.SearchEntryCriteria
}

// GetSearchEntryCriteriaOk returns a tuple with the SearchEntryCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSearchEntryCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.SearchEntryCriteria) {
    return nil, false
	}
	return o.SearchEntryCriteria, true
}

// HasSearchEntryCriteria returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasSearchEntryCriteria() bool {
	if o != nil && !isNil(o.SearchEntryCriteria) {
		return true
	}

	return false
}

// SetSearchEntryCriteria gets a reference to the given string and assigns it to the SearchEntryCriteria field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSearchEntryCriteria(v string) {
	o.SearchEntryCriteria = &v
}

// GetSearchReferenceCriteria returns the SearchReferenceCriteria field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSearchReferenceCriteria() string {
	if o == nil || isNil(o.SearchReferenceCriteria) {
		var ret string
		return ret
	}
	return *o.SearchReferenceCriteria
}

// GetSearchReferenceCriteriaOk returns a tuple with the SearchReferenceCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetSearchReferenceCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.SearchReferenceCriteria) {
    return nil, false
	}
	return o.SearchReferenceCriteria, true
}

// HasSearchReferenceCriteria returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasSearchReferenceCriteria() bool {
	if o != nil && !isNil(o.SearchReferenceCriteria) {
		return true
	}

	return false
}

// SetSearchReferenceCriteria gets a reference to the given string and assigns it to the SearchReferenceCriteria field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetSearchReferenceCriteria(v string) {
	o.SearchReferenceCriteria = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetDescription(v string) {
	o.Description = &v
}

// GetLoggingErrorBehavior returns the LoggingErrorBehavior field value if set, zero value otherwise.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLoggingErrorBehavior() EnumlogPublisherLoggingErrorBehaviorProp {
	if o == nil || isNil(o.LoggingErrorBehavior) {
		var ret EnumlogPublisherLoggingErrorBehaviorProp
		return ret
	}
	return *o.LoggingErrorBehavior
}

// GetLoggingErrorBehaviorOk returns a tuple with the LoggingErrorBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) GetLoggingErrorBehaviorOk() (*EnumlogPublisherLoggingErrorBehaviorProp, bool) {
	if o == nil || isNil(o.LoggingErrorBehavior) {
    return nil, false
	}
	return o.LoggingErrorBehavior, true
}

// HasLoggingErrorBehavior returns a boolean if a field has been set.
func (o *AddConsoleJsonAuditLogPublisherRequest) HasLoggingErrorBehavior() bool {
	if o != nil && !isNil(o.LoggingErrorBehavior) {
		return true
	}

	return false
}

// SetLoggingErrorBehavior gets a reference to the given EnumlogPublisherLoggingErrorBehaviorProp and assigns it to the LoggingErrorBehavior field.
func (o *AddConsoleJsonAuditLogPublisherRequest) SetLoggingErrorBehavior(v EnumlogPublisherLoggingErrorBehaviorProp) {
	o.LoggingErrorBehavior = &v
}

func (o AddConsoleJsonAuditLogPublisherRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["publisherName"] = o.PublisherName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.OutputLocation) {
		toSerialize["outputLocation"] = o.OutputLocation
	}
	if !isNil(o.WriteMultiLineMessages) {
		toSerialize["writeMultiLineMessages"] = o.WriteMultiLineMessages
	}
	if !isNil(o.UseReversibleForm) {
		toSerialize["useReversibleForm"] = o.UseReversibleForm
	}
	if !isNil(o.SoftDeleteEntryAuditBehavior) {
		toSerialize["softDeleteEntryAuditBehavior"] = o.SoftDeleteEntryAuditBehavior
	}
	if !isNil(o.IncludeOperationPurposeRequestControl) {
		toSerialize["includeOperationPurposeRequestControl"] = o.IncludeOperationPurposeRequestControl
	}
	if !isNil(o.IncludeIntermediateClientRequestControl) {
		toSerialize["includeIntermediateClientRequestControl"] = o.IncludeIntermediateClientRequestControl
	}
	if !isNil(o.ObscureAttribute) {
		toSerialize["obscureAttribute"] = o.ObscureAttribute
	}
	if !isNil(o.ExcludeAttribute) {
		toSerialize["excludeAttribute"] = o.ExcludeAttribute
	}
	if !isNil(o.SuppressInternalOperations) {
		toSerialize["suppressInternalOperations"] = o.SuppressInternalOperations
	}
	if !isNil(o.IncludeProductName) {
		toSerialize["includeProductName"] = o.IncludeProductName
	}
	if !isNil(o.IncludeInstanceName) {
		toSerialize["includeInstanceName"] = o.IncludeInstanceName
	}
	if !isNil(o.IncludeStartupID) {
		toSerialize["includeStartupID"] = o.IncludeStartupID
	}
	if !isNil(o.IncludeThreadID) {
		toSerialize["includeThreadID"] = o.IncludeThreadID
	}
	if !isNil(o.IncludeRequesterDN) {
		toSerialize["includeRequesterDN"] = o.IncludeRequesterDN
	}
	if !isNil(o.IncludeRequesterIPAddress) {
		toSerialize["includeRequesterIPAddress"] = o.IncludeRequesterIPAddress
	}
	if !isNil(o.IncludeRequestControls) {
		toSerialize["includeRequestControls"] = o.IncludeRequestControls
	}
	if !isNil(o.IncludeResponseControls) {
		toSerialize["includeResponseControls"] = o.IncludeResponseControls
	}
	if !isNil(o.IncludeReplicationChangeID) {
		toSerialize["includeReplicationChangeID"] = o.IncludeReplicationChangeID
	}
	if !isNil(o.LogConnects) {
		toSerialize["logConnects"] = o.LogConnects
	}
	if !isNil(o.LogDisconnects) {
		toSerialize["logDisconnects"] = o.LogDisconnects
	}
	if !isNil(o.LogSecurityNegotiation) {
		toSerialize["logSecurityNegotiation"] = o.LogSecurityNegotiation
	}
	if !isNil(o.LogClientCertificates) {
		toSerialize["logClientCertificates"] = o.LogClientCertificates
	}
	if !isNil(o.LogRequests) {
		toSerialize["logRequests"] = o.LogRequests
	}
	if !isNil(o.LogResults) {
		toSerialize["logResults"] = o.LogResults
	}
	if !isNil(o.LogSearchEntries) {
		toSerialize["logSearchEntries"] = o.LogSearchEntries
	}
	if !isNil(o.LogSearchReferences) {
		toSerialize["logSearchReferences"] = o.LogSearchReferences
	}
	if !isNil(o.LogIntermediateResponses) {
		toSerialize["logIntermediateResponses"] = o.LogIntermediateResponses
	}
	if !isNil(o.SuppressReplicationOperations) {
		toSerialize["suppressReplicationOperations"] = o.SuppressReplicationOperations
	}
	if !isNil(o.CorrelateRequestsAndResults) {
		toSerialize["correlateRequestsAndResults"] = o.CorrelateRequestsAndResults
	}
	if !isNil(o.ConnectionCriteria) {
		toSerialize["connectionCriteria"] = o.ConnectionCriteria
	}
	if !isNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !isNil(o.ResultCriteria) {
		toSerialize["resultCriteria"] = o.ResultCriteria
	}
	if !isNil(o.SearchEntryCriteria) {
		toSerialize["searchEntryCriteria"] = o.SearchEntryCriteria
	}
	if !isNil(o.SearchReferenceCriteria) {
		toSerialize["searchReferenceCriteria"] = o.SearchReferenceCriteria
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.LoggingErrorBehavior) {
		toSerialize["loggingErrorBehavior"] = o.LoggingErrorBehavior
	}
	return json.Marshal(toSerialize)
}

type NullableAddConsoleJsonAuditLogPublisherRequest struct {
	value *AddConsoleJsonAuditLogPublisherRequest
	isSet bool
}

func (v NullableAddConsoleJsonAuditLogPublisherRequest) Get() *AddConsoleJsonAuditLogPublisherRequest {
	return v.value
}

func (v *NullableAddConsoleJsonAuditLogPublisherRequest) Set(val *AddConsoleJsonAuditLogPublisherRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddConsoleJsonAuditLogPublisherRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddConsoleJsonAuditLogPublisherRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddConsoleJsonAuditLogPublisherRequest(val *AddConsoleJsonAuditLogPublisherRequest) *NullableAddConsoleJsonAuditLogPublisherRequest {
	return &NullableAddConsoleJsonAuditLogPublisherRequest{value: val, isSet: true}
}

func (v NullableAddConsoleJsonAuditLogPublisherRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddConsoleJsonAuditLogPublisherRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


