/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumclientConnectionPolicyAllowedAuthTypeProp Specifies the types of authentication that clients associated with this Client Connection Policy will be allowed to request.
type EnumclientConnectionPolicyAllowedAuthTypeProp string

// List of Enumclient-connection-policy-allowedAuthTypeProp
const (
	SIMPLE EnumclientConnectionPolicyAllowedAuthTypeProp = "simple"
	SASL EnumclientConnectionPolicyAllowedAuthTypeProp = "sasl"
)

// All allowed values of EnumclientConnectionPolicyAllowedAuthTypeProp enum
var AllowedEnumclientConnectionPolicyAllowedAuthTypePropEnumValues = []EnumclientConnectionPolicyAllowedAuthTypeProp{
	"simple",
	"sasl",
}

func (v *EnumclientConnectionPolicyAllowedAuthTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumclientConnectionPolicyAllowedAuthTypeProp(value)
	for _, existing := range AllowedEnumclientConnectionPolicyAllowedAuthTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumclientConnectionPolicyAllowedAuthTypeProp", value)
}

// NewEnumclientConnectionPolicyAllowedAuthTypePropFromValue returns a pointer to a valid EnumclientConnectionPolicyAllowedAuthTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumclientConnectionPolicyAllowedAuthTypePropFromValue(v string) (*EnumclientConnectionPolicyAllowedAuthTypeProp, error) {
	ev := EnumclientConnectionPolicyAllowedAuthTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumclientConnectionPolicyAllowedAuthTypeProp: valid values are %v", v, AllowedEnumclientConnectionPolicyAllowedAuthTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumclientConnectionPolicyAllowedAuthTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumclientConnectionPolicyAllowedAuthTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumclient-connection-policy-allowedAuthTypeProp value
func (v EnumclientConnectionPolicyAllowedAuthTypeProp) Ptr() *EnumclientConnectionPolicyAllowedAuthTypeProp {
	return &v
}

type NullableEnumclientConnectionPolicyAllowedAuthTypeProp struct {
	value *EnumclientConnectionPolicyAllowedAuthTypeProp
	isSet bool
}

func (v NullableEnumclientConnectionPolicyAllowedAuthTypeProp) Get() *EnumclientConnectionPolicyAllowedAuthTypeProp {
	return v.value
}

func (v *NullableEnumclientConnectionPolicyAllowedAuthTypeProp) Set(val *EnumclientConnectionPolicyAllowedAuthTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumclientConnectionPolicyAllowedAuthTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumclientConnectionPolicyAllowedAuthTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumclientConnectionPolicyAllowedAuthTypeProp(val *EnumclientConnectionPolicyAllowedAuthTypeProp) *NullableEnumclientConnectionPolicyAllowedAuthTypeProp {
	return &NullableEnumclientConnectionPolicyAllowedAuthTypeProp{value: val, isSet: true}
}

func (v NullableEnumclientConnectionPolicyAllowedAuthTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumclientConnectionPolicyAllowedAuthTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

