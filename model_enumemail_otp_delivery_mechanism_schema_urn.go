/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumemailOtpDeliveryMechanismSchemaUrn the model 'EnumemailOtpDeliveryMechanismSchemaUrn'
type EnumemailOtpDeliveryMechanismSchemaUrn string

// List of Enumemail-otp-delivery-mechanismSchemaUrn
const (
	ENUMEMAILOTPDELIVERYMECHANISMSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0OTP_DELIVERY_MECHANISMEMAIL EnumemailOtpDeliveryMechanismSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:email"
)

// All allowed values of EnumemailOtpDeliveryMechanismSchemaUrn enum
var AllowedEnumemailOtpDeliveryMechanismSchemaUrnEnumValues = []EnumemailOtpDeliveryMechanismSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:email",
}

func (v *EnumemailOtpDeliveryMechanismSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumemailOtpDeliveryMechanismSchemaUrn(value)
	for _, existing := range AllowedEnumemailOtpDeliveryMechanismSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumemailOtpDeliveryMechanismSchemaUrn", value)
}

// NewEnumemailOtpDeliveryMechanismSchemaUrnFromValue returns a pointer to a valid EnumemailOtpDeliveryMechanismSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumemailOtpDeliveryMechanismSchemaUrnFromValue(v string) (*EnumemailOtpDeliveryMechanismSchemaUrn, error) {
	ev := EnumemailOtpDeliveryMechanismSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumemailOtpDeliveryMechanismSchemaUrn: valid values are %v", v, AllowedEnumemailOtpDeliveryMechanismSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumemailOtpDeliveryMechanismSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumemailOtpDeliveryMechanismSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumemail-otp-delivery-mechanismSchemaUrn value
func (v EnumemailOtpDeliveryMechanismSchemaUrn) Ptr() *EnumemailOtpDeliveryMechanismSchemaUrn {
	return &v
}

type NullableEnumemailOtpDeliveryMechanismSchemaUrn struct {
	value *EnumemailOtpDeliveryMechanismSchemaUrn
	isSet bool
}

func (v NullableEnumemailOtpDeliveryMechanismSchemaUrn) Get() *EnumemailOtpDeliveryMechanismSchemaUrn {
	return v.value
}

func (v *NullableEnumemailOtpDeliveryMechanismSchemaUrn) Set(val *EnumemailOtpDeliveryMechanismSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumemailOtpDeliveryMechanismSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumemailOtpDeliveryMechanismSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumemailOtpDeliveryMechanismSchemaUrn(val *EnumemailOtpDeliveryMechanismSchemaUrn) *NullableEnumemailOtpDeliveryMechanismSchemaUrn {
	return &NullableEnumemailOtpDeliveryMechanismSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumemailOtpDeliveryMechanismSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumemailOtpDeliveryMechanismSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

