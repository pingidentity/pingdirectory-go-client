/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginHistogramOpTypeProp Specifies the operation type(s) to use when outputting the response time histogram data. The order of the operations here determines the order of the columns in the output. Use the per-application-ldap-stats setting to further control this.
type EnumpluginHistogramOpTypeProp string

// List of Enumplugin-histogramOpTypeProp
const (
	ENUMPLUGINHISTOGRAMOPTYPEPROP_ALL       EnumpluginHistogramOpTypeProp = "all"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_ADD       EnumpluginHistogramOpTypeProp = "add"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_BIND      EnumpluginHistogramOpTypeProp = "bind"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_COMPARE   EnumpluginHistogramOpTypeProp = "compare"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_DELETE    EnumpluginHistogramOpTypeProp = "delete"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_EXTENDED  EnumpluginHistogramOpTypeProp = "extended"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_MODIFY    EnumpluginHistogramOpTypeProp = "modify"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_MODIFY_DN EnumpluginHistogramOpTypeProp = "modify-dn"
	ENUMPLUGINHISTOGRAMOPTYPEPROP_SEARCH    EnumpluginHistogramOpTypeProp = "search"
)

// All allowed values of EnumpluginHistogramOpTypeProp enum
var AllowedEnumpluginHistogramOpTypePropEnumValues = []EnumpluginHistogramOpTypeProp{
	"all",
	"add",
	"bind",
	"compare",
	"delete",
	"extended",
	"modify",
	"modify-dn",
	"search",
}

func (v *EnumpluginHistogramOpTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginHistogramOpTypeProp(value)
	for _, existing := range AllowedEnumpluginHistogramOpTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginHistogramOpTypeProp", value)
}

// NewEnumpluginHistogramOpTypePropFromValue returns a pointer to a valid EnumpluginHistogramOpTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginHistogramOpTypePropFromValue(v string) (*EnumpluginHistogramOpTypeProp, error) {
	ev := EnumpluginHistogramOpTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginHistogramOpTypeProp: valid values are %v", v, AllowedEnumpluginHistogramOpTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginHistogramOpTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginHistogramOpTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-histogramOpTypeProp value
func (v EnumpluginHistogramOpTypeProp) Ptr() *EnumpluginHistogramOpTypeProp {
	return &v
}

type NullableEnumpluginHistogramOpTypeProp struct {
	value *EnumpluginHistogramOpTypeProp
	isSet bool
}

func (v NullableEnumpluginHistogramOpTypeProp) Get() *EnumpluginHistogramOpTypeProp {
	return v.value
}

func (v *NullableEnumpluginHistogramOpTypeProp) Set(val *EnumpluginHistogramOpTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginHistogramOpTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginHistogramOpTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginHistogramOpTypeProp(val *EnumpluginHistogramOpTypeProp) *NullableEnumpluginHistogramOpTypeProp {
	return &NullableEnumpluginHistogramOpTypeProp{value: val, isSet: true}
}

func (v NullableEnumpluginHistogramOpTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginHistogramOpTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
