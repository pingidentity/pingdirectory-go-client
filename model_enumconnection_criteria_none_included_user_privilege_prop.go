/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaNoneIncludedUserPrivilegeProp Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
type EnumconnectionCriteriaNoneIncludedUserPrivilegeProp string

// List of Enumconnection-criteria-noneIncludedUserPrivilegeProp
const (
	AUDIT_DATA_SECURITY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "audit-data-security"
	BYPASS_ACL EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-acl"
	BYPASS_READ_ACL EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-read-acl"
	MODIFY_ACL EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "modify-acl"
	CONFIG_READ EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "config-read"
	CONFIG_WRITE EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "config-write"
	JMX_READ EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-read"
	JMX_WRITE EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-write"
	JMX_NOTIFY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-notify"
	LDIF_IMPORT EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "ldif-import"
	LDIF_EXPORT EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "ldif-export"
	BACKEND_BACKUP EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "backend-backup"
	BACKEND_RESTORE EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "backend-restore"
	SERVER_SHUTDOWN EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "server-shutdown"
	SERVER_RESTART EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "server-restart"
	PROXIED_AUTH EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "proxied-auth"
	DISCONNECT_CLIENT EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "disconnect-client"
	PASSWORD_RESET EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "password-reset"
	UPDATE_SCHEMA EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "update-schema"
	PRIVILEGE_CHANGE EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "privilege-change"
	UNINDEXED_SEARCH EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "unindexed-search"
	UNINDEXED_SEARCH_WITH_CONTROL EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "unindexed-search-with-control"
	BYPASS_PW_POLICY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-pw-policy"
	LOCKDOWN_MODE EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "lockdown-mode"
	STREAM_VALUES EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "stream-values"
	THIRD_PARTY_TASK EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "third-party-task"
	USE_ADMIN_SESSION EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "use-admin-session"
	SOFT_DELETE_READ EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "soft-delete-read"
	METRICS_READ EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "metrics-read"
	REMOTE_LOG_READ EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "remote-log-read"
	MANAGE_TOPOLOGY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "manage-topology"
	PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-get-password-policy-state-issues"
	PERMIT_PROXIED_MSCHAPV2_DETAILS EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-proxied-mschapv2-details"
	PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-externally-processed-authentication"
	PERMIT_EXPORT_REVERSIBLE_PASSWORDS EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-export-reversible-passwords"
	PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	EXEC_TASK EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "exec-task"
	COLLECT_SUPPORT_DATA EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "collect-support-data"
	FILE_SERVLET_ACCESS EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "file-servlet-access"
	PERMIT_REPLACE_CERTIFICATE_REQUEST EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumconnectionCriteriaNoneIncludedUserPrivilegeProp enum
var AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues = []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaNoneIncludedUserPrivilegeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaNoneIncludedUserPrivilegeProp", value)
}

// NewEnumconnectionCriteriaNoneIncludedUserPrivilegePropFromValue returns a pointer to a valid EnumconnectionCriteriaNoneIncludedUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaNoneIncludedUserPrivilegePropFromValue(v string) (*EnumconnectionCriteriaNoneIncludedUserPrivilegeProp, error) {
	ev := EnumconnectionCriteriaNoneIncludedUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaNoneIncludedUserPrivilegeProp: valid values are %v", v, AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-noneIncludedUserPrivilegeProp value
func (v EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Ptr() *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return &v
}

type NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp struct {
	value *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Get() *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Set(val *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp(val *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return &NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

