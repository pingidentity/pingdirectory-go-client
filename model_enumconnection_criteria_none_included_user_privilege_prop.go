/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaNoneIncludedUserPrivilegeProp Specifies the name of a privilege that must not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have any of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
type EnumconnectionCriteriaNoneIncludedUserPrivilegeProp string

// List of Enumconnection-criteria-noneIncludedUserPrivilegeProp
const (
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_AUDIT_DATA_SECURITY                        EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "audit-data-security"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_BYPASS_ACL                                 EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-acl"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_BYPASS_READ_ACL                            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-read-acl"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_MODIFY_ACL                                 EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "modify-acl"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_CONFIG_READ                                EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "config-read"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_CONFIG_WRITE                               EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "config-write"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_JMX_READ                                   EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-read"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_JMX_WRITE                                  EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-write"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_JMX_NOTIFY                                 EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "jmx-notify"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_LDIF_IMPORT                                EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "ldif-import"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_LDIF_EXPORT                                EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "ldif-export"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_BACKEND_BACKUP                             EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "backend-backup"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_BACKEND_RESTORE                            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "backend-restore"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_SERVER_SHUTDOWN                            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "server-shutdown"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_SERVER_RESTART                             EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "server-restart"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PROXIED_AUTH                               EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "proxied-auth"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_DISCONNECT_CLIENT                          EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "disconnect-client"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PASSWORD_RESET                             EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "password-reset"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_UPDATE_SCHEMA                              EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "update-schema"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PRIVILEGE_CHANGE                           EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "privilege-change"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH                           EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "unindexed-search"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL              EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "unindexed-search-with-control"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_BYPASS_PW_POLICY                           EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "bypass-pw-policy"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_LOCKDOWN_MODE                              EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "lockdown-mode"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_STREAM_VALUES                              EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "stream-values"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_THIRD_PARTY_TASK                           EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "third-party-task"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_USE_ADMIN_SESSION                          EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "use-admin-session"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_SOFT_DELETE_READ                           EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "soft-delete-read"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_METRICS_READ                               EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "metrics-read"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_REMOTE_LOG_READ                            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "remote-log-read"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_MANAGE_TOPOLOGY                            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "manage-topology"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES    EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-get-password-policy-state-issues"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS            EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-proxied-mschapv2-details"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-externally-processed-authentication"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS         EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-export-reversible-passwords"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_EXEC_TASK                                  EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "exec-task"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_COLLECT_SUPPORT_DATA                       EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "collect-support-data"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_FILE_SERVLET_ACCESS                        EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "file-servlet-access"
	ENUMCONNECTIONCRITERIANONEINCLUDEDUSERPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST         EnumconnectionCriteriaNoneIncludedUserPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumconnectionCriteriaNoneIncludedUserPrivilegeProp enum
var AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues = []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaNoneIncludedUserPrivilegeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaNoneIncludedUserPrivilegeProp", value)
}

// NewEnumconnectionCriteriaNoneIncludedUserPrivilegePropFromValue returns a pointer to a valid EnumconnectionCriteriaNoneIncludedUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaNoneIncludedUserPrivilegePropFromValue(v string) (*EnumconnectionCriteriaNoneIncludedUserPrivilegeProp, error) {
	ev := EnumconnectionCriteriaNoneIncludedUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaNoneIncludedUserPrivilegeProp: valid values are %v", v, AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaNoneIncludedUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-noneIncludedUserPrivilegeProp value
func (v EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Ptr() *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return &v
}

type NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp struct {
	value *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Get() *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Set(val *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp(val *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	return &NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaNoneIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
