/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddAccessLogFieldMappingRequestAllOf struct for AddAccessLogFieldMappingRequestAllOf
type AddAccessLogFieldMappingRequestAllOf struct {
	// Name of the new Log Field Mapping
	MappingName string `json:"mappingName"`
}

// NewAddAccessLogFieldMappingRequestAllOf instantiates a new AddAccessLogFieldMappingRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAccessLogFieldMappingRequestAllOf(mappingName string) *AddAccessLogFieldMappingRequestAllOf {
	this := AddAccessLogFieldMappingRequestAllOf{}
	this.MappingName = mappingName
	return &this
}

// NewAddAccessLogFieldMappingRequestAllOfWithDefaults instantiates a new AddAccessLogFieldMappingRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAccessLogFieldMappingRequestAllOfWithDefaults() *AddAccessLogFieldMappingRequestAllOf {
	this := AddAccessLogFieldMappingRequestAllOf{}
	return &this
}

// GetMappingName returns the MappingName field value
func (o *AddAccessLogFieldMappingRequestAllOf) GetMappingName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MappingName
}

// GetMappingNameOk returns a tuple with the MappingName field value
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequestAllOf) GetMappingNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MappingName, true
}

// SetMappingName sets field value
func (o *AddAccessLogFieldMappingRequestAllOf) SetMappingName(v string) {
	o.MappingName = v
}

func (o AddAccessLogFieldMappingRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mappingName"] = o.MappingName
	}
	return json.Marshal(toSerialize)
}

type NullableAddAccessLogFieldMappingRequestAllOf struct {
	value *AddAccessLogFieldMappingRequestAllOf
	isSet bool
}

func (v NullableAddAccessLogFieldMappingRequestAllOf) Get() *AddAccessLogFieldMappingRequestAllOf {
	return v.value
}

func (v *NullableAddAccessLogFieldMappingRequestAllOf) Set(val *AddAccessLogFieldMappingRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAccessLogFieldMappingRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAccessLogFieldMappingRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAccessLogFieldMappingRequestAllOf(val *AddAccessLogFieldMappingRequestAllOf) *NullableAddAccessLogFieldMappingRequestAllOf {
	return &NullableAddAccessLogFieldMappingRequestAllOf{value: val, isSet: true}
}

func (v NullableAddAccessLogFieldMappingRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAccessLogFieldMappingRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


