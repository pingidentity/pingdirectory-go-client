/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddTimeLimitLogRetentionPolicyRequest struct for AddTimeLimitLogRetentionPolicyRequest
type AddTimeLimitLogRetentionPolicyRequest struct {
	// Name of the new Log Retention Policy
	PolicyName string `json:"policyName"`
	Schemas []EnumtimeLimitLogRetentionPolicySchemaUrn `json:"schemas"`
	// Specifies the desired minimum length of time that each log file should be retained.
	RetainDuration string `json:"retainDuration"`
	// A description for this Log Retention Policy
	Description *string `json:"description,omitempty"`
}

// NewAddTimeLimitLogRetentionPolicyRequest instantiates a new AddTimeLimitLogRetentionPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTimeLimitLogRetentionPolicyRequest(policyName string, schemas []EnumtimeLimitLogRetentionPolicySchemaUrn, retainDuration string) *AddTimeLimitLogRetentionPolicyRequest {
	this := AddTimeLimitLogRetentionPolicyRequest{}
	this.PolicyName = policyName
	this.Schemas = schemas
	this.RetainDuration = retainDuration
	return &this
}

// NewAddTimeLimitLogRetentionPolicyRequestWithDefaults instantiates a new AddTimeLimitLogRetentionPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTimeLimitLogRetentionPolicyRequestWithDefaults() *AddTimeLimitLogRetentionPolicyRequest {
	this := AddTimeLimitLogRetentionPolicyRequest{}
	return &this
}

// GetPolicyName returns the PolicyName field value
func (o *AddTimeLimitLogRetentionPolicyRequest) GetPolicyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *AddTimeLimitLogRetentionPolicyRequest) GetPolicyNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *AddTimeLimitLogRetentionPolicyRequest) SetPolicyName(v string) {
	o.PolicyName = v
}

// GetSchemas returns the Schemas field value
func (o *AddTimeLimitLogRetentionPolicyRequest) GetSchemas() []EnumtimeLimitLogRetentionPolicySchemaUrn {
	if o == nil {
		var ret []EnumtimeLimitLogRetentionPolicySchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddTimeLimitLogRetentionPolicyRequest) GetSchemasOk() ([]EnumtimeLimitLogRetentionPolicySchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddTimeLimitLogRetentionPolicyRequest) SetSchemas(v []EnumtimeLimitLogRetentionPolicySchemaUrn) {
	o.Schemas = v
}

// GetRetainDuration returns the RetainDuration field value
func (o *AddTimeLimitLogRetentionPolicyRequest) GetRetainDuration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RetainDuration
}

// GetRetainDurationOk returns a tuple with the RetainDuration field value
// and a boolean to check if the value has been set.
func (o *AddTimeLimitLogRetentionPolicyRequest) GetRetainDurationOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RetainDuration, true
}

// SetRetainDuration sets field value
func (o *AddTimeLimitLogRetentionPolicyRequest) SetRetainDuration(v string) {
	o.RetainDuration = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddTimeLimitLogRetentionPolicyRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTimeLimitLogRetentionPolicyRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddTimeLimitLogRetentionPolicyRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddTimeLimitLogRetentionPolicyRequest) SetDescription(v string) {
	o.Description = &v
}

func (o AddTimeLimitLogRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policyName"] = o.PolicyName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["retainDuration"] = o.RetainDuration
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableAddTimeLimitLogRetentionPolicyRequest struct {
	value *AddTimeLimitLogRetentionPolicyRequest
	isSet bool
}

func (v NullableAddTimeLimitLogRetentionPolicyRequest) Get() *AddTimeLimitLogRetentionPolicyRequest {
	return v.value
}

func (v *NullableAddTimeLimitLogRetentionPolicyRequest) Set(val *AddTimeLimitLogRetentionPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTimeLimitLogRetentionPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTimeLimitLogRetentionPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTimeLimitLogRetentionPolicyRequest(val *AddTimeLimitLogRetentionPolicyRequest) *NullableAddTimeLimitLogRetentionPolicyRequest {
	return &NullableAddTimeLimitLogRetentionPolicyRequest{value: val, isSet: true}
}

func (v NullableAddTimeLimitLogRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTimeLimitLogRetentionPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


