openapi: 3.0.3
info:
  description: This is the PingData Configuration API
  title: PingData Config - OpenAPI 3.0
  version: "0.1"
externalDocs:
  description: PingDirectory Configuration API Docs
  url: https://docs.pingidentity.com/bundle/pingdirectory-91/page/ddl1564011495095.html
servers:
- url: /
tags:
- description: Access the Global Configuration
  name: global-configuration
- description: Access id-token-validators
  name: id-token-validator
- description: Access the Plugin Root
  name: plugin-root
- description: Access sensitive-attributes
  name: sensitive-attribute
- description: Access access-token-validators
  name: access-token-validator
- description: Access the Root DSE Backend
  name: root-dse-backend
- description: Access log-field-mappings
  name: log-field-mapping
- description: Access password-generators
  name: password-generator
- description: Access otp-delivery-mechanisms
  name: otp-delivery-mechanism
- description: Access log-field-behaviors
  name: log-field-behavior
- description: Access server-instances
  name: server-instance
- description: Access log-file-rotation-listeners
  name: log-file-rotation-listener
- description: Access password-policies
  name: password-policy
- description: Access delegated-admin-rights
  name: delegated-admin-rights
- description: Access uncached-attribute-criteria
  name: uncached-attribute-criteria
- description: Access result-code-maps
  name: result-code-map
- description: Access synchronization-providers
  name: synchronization-provider
- description: Access connection-criteria
  name: connection-criteria
- description: Access the Root DN
  name: root-dn
- description: Access trust-manager-providers
  name: trust-manager-provider
- description: Access key-pairs
  name: key-pair
- description: Access request-criteria
  name: request-criteria
- description: Access log-rotation-policies
  name: log-rotation-policy
- description: Access log-field-syntaxes
  name: log-field-syntax
- description: Access extended-operation-handlers
  name: extended-operation-handler
- description: Access azure-authentication-methods
  name: azure-authentication-method
- description: Access passphrase-providers
  name: passphrase-provider
- description: Access soft-delete-policies
  name: soft-delete-policy
- description: Access recurring-task-chains
  name: recurring-task-chain
- description: Access gauges
  name: gauge
- description: Access search-reference-criteria
  name: search-reference-criteria
- description: Access entry-caches
  name: entry-cache
- description: Access the Access Control Handler
  name: access-control-handler
- description: Access alert-handlers
  name: alert-handler
- description: Access the License
  name: license
- description: Access cipher-stream-providers
  name: cipher-stream-provider
- description: Access vault-authentication-methods
  name: vault-authentication-method
- description: Access account-status-notification-handlers
  name: account-status-notification-handler
- description: Access server-groups
  name: server-group
- description: Access pass-through-authentication-handlers
  name: pass-through-authentication-handler
- description: Access consent-definitions
  name: consent-definition
- description: Access the Consent Service
  name: consent-service
- description: Access topology-admin-users
  name: topology-admin-user
- description: Access change-subscriptions
  name: change-subscription
- description: Access the LDAP SDK Debug Logger
  name: ldap-sdk-debug-logger
- description: Access conjur-authentication-methods
  name: conjur-authentication-method
- description: Access constructed-attributes
  name: constructed-attribute
- description: Access password-validators
  name: password-validator
- description: Access the Alarm Manager
  name: alarm-manager
- description: Access connection-handlers
  name: connection-handler
- description: Access web-application-extensions
  name: web-application-extension
- description: Access trusted-certificates
  name: trusted-certificate
- description: Access search-entry-criteria
  name: search-entry-criteria
- description: Access failure-lockout-actions
  name: failure-lockout-action
- description: Access certificate-mappers
  name: certificate-mapper
- description: Access log-publishers
  name: log-publisher
- description: Access replication-assurance-policies
  name: replication-assurance-policy
- description: Access key-manager-providers
  name: key-manager-provider
- description: Access external-servers
  name: external-server
- description: Access dn-maps
  name: dn-map
- description: Access change-subscription-handlers
  name: change-subscription-handler
- description: Access obscured-values
  name: obscured-value
- description: Access the Crypto Manager
  name: crypto-manager
- description: Access monitor-providers
  name: monitor-provider
- description: Access group-implementations
  name: group-implementation
- description: Access gauge-data-sources
  name: gauge-data-source
- description: Access backends
  name: backend
- description: Access attribute-syntaxes
  name: attribute-syntax
- description: Access the Work Queue
  name: work-queue
- description: Access uncached-entry-criteria
  name: uncached-entry-criteria
- description: Access http-servlet-extensions
  name: http-servlet-extension
- description: Access client-connection-policies
  name: client-connection-policy
- description: Access matching-rules
  name: matching-rule
- description: Access virtual-attributes
  name: virtual-attribute
- description: Access notification-managers
  name: notification-manager
- description: Access result-criteria
  name: result-criteria
- description: Access identity-mappers
  name: identity-mapper
- description: Access recurring-tasks
  name: recurring-task
- description: Access rest-resource-types
  name: rest-resource-type
- description: Access sasl-mechanism-handlers
  name: sasl-mechanism-handler
- description: Access data-security-auditors
  name: data-security-auditor
- description: Access monitoring-endpoints
  name: monitoring-endpoint
- description: Access password-storage-schemes
  name: password-storage-scheme
- description: Access the HTTP Configuration
  name: http-configuration
- description: Access json-attribute-constraints
  name: json-attribute-constraints
- description: Access http-servlet-cross-origin-policies
  name: http-servlet-cross-origin-policy
- description: Access delegated-admin-attribute-categories
  name: delegated-admin-attribute-category
- description: Access scim-schemas
  name: scim-schema
- description: Access locations
  name: location
- description: Access log-retention-policies
  name: log-retention-policy
- description: Access oauth-token-handlers
  name: oauth-token-handler
paths:
  /global-configuration:
    get:
      operationId: get-global-configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global-configuration-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Global Configuration does not exist
      security:
      - basicAuth: []
      summary: Returns a single Global Configuration
      tags:
      - global-configuration
    patch:
      operationId: update-global-configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Global Configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/global-configuration-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Global Configuration does not exist
      security:
      - basicAuth: []
      summary: Update an existing Global Configuration by name
      tags:
      - global-configuration
  /id-token-validators:
    post:
      operationId: add-id-token-validator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_id_token_validator_request'
        description: Create a new ID Token Validator in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_id_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The ID Token Validator already exists
      security:
      - basicAuth: []
      summary: Add a new ID Token Validator to the config
      tags:
      - id-token-validator
  /id-token-validators/{id-token-validator-name}:
    delete:
      operationId: delete-id-token-validator
      parameters:
      - description: Name of the ID Token Validator to be deleted
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
        "409":
          description: The ID Token Validator cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a ID Token Validator
      tags:
      - id-token-validator
    get:
      operationId: get-id-token-validator
      parameters:
      - description: Name of the ID Token Validator to be read
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_id_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      summary: Returns a single ID Token Validator
      tags:
      - id-token-validator
    patch:
      operationId: update-id-token-validator
      parameters:
      - description: Name of the ID Token Validator to be updated
        explode: false
        in: path
        name: id-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing ID Token Validator
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_id_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The ID Token Validator does not exist
      security:
      - basicAuth: []
      summary: Update an existing ID Token Validator by name
      tags:
      - id-token-validator
  /plugin-root:
    get:
      operationId: get-plugin-root
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plugin-root-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Plugin Root does not exist
      security:
      - basicAuth: []
      summary: Returns a single Plugin Root
      tags:
      - plugin-root
    patch:
      operationId: update-plugin-root
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Plugin Root
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/plugin-root-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Plugin Root does not exist
      security:
      - basicAuth: []
      summary: Update an existing Plugin Root by name
      tags:
      - plugin-root
  /sensitive-attributes:
    post:
      operationId: add-sensitive-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-sensitive-attribute-request'
        description: Create a new Sensitive Attribute in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Sensitive Attribute already exists
      security:
      - basicAuth: []
      summary: Add a new Sensitive Attribute to the config
      tags:
      - sensitive-attribute
  /sensitive-attributes/{sensitive-attribute-name}:
    delete:
      operationId: delete-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute to be deleted
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
        "409":
          description: The Sensitive Attribute cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Sensitive Attribute
      tags:
      - sensitive-attribute
    get:
      operationId: get-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute to be read
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      summary: Returns a single Sensitive Attribute
      tags:
      - sensitive-attribute
    patch:
      operationId: update-sensitive-attribute
      parameters:
      - description: Name of the Sensitive Attribute to be updated
        explode: false
        in: path
        name: sensitive-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Sensitive Attribute
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/sensitive-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Sensitive Attribute does not exist
      security:
      - basicAuth: []
      summary: Update an existing Sensitive Attribute by name
      tags:
      - sensitive-attribute
  /access-token-validators:
    post:
      operationId: add-access-token-validator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_access_token_validator_request'
        description: Create a new Access Token Validator in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_access_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Access Token Validator already exists
      security:
      - basicAuth: []
      summary: Add a new Access Token Validator to the config
      tags:
      - access-token-validator
  /access-token-validators/{access-token-validator-name}:
    delete:
      operationId: delete-access-token-validator
      parameters:
      - description: Name of the Access Token Validator to be deleted
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Token Validator does not exist
        "409":
          description: The Access Token Validator cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Access Token Validator
      tags:
      - access-token-validator
    get:
      operationId: get-access-token-validator
      parameters:
      - description: Name of the Access Token Validator to be read
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_access_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Token Validator does not exist
      security:
      - basicAuth: []
      summary: Returns a single Access Token Validator
      tags:
      - access-token-validator
    patch:
      operationId: update-access-token-validator
      parameters:
      - description: Name of the Access Token Validator to be updated
        explode: false
        in: path
        name: access-token-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Access Token Validator
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_access_token_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Access Token Validator does not exist
      security:
      - basicAuth: []
      summary: Update an existing Access Token Validator by name
      tags:
      - access-token-validator
  /root-dse-backend:
    get:
      operationId: get-root-dse-backend
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dse-backend-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DSE Backend does not exist
      security:
      - basicAuth: []
      summary: Returns a single Root DSE Backend
      tags:
      - root-dse-backend
    patch:
      operationId: update-root-dse-backend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Root DSE Backend
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dse-backend-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Root DSE Backend does not exist
      security:
      - basicAuth: []
      summary: Update an existing Root DSE Backend by name
      tags:
      - root-dse-backend
  /log-field-mappings:
    post:
      operationId: add-log-field-mapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_field_mapping_request'
        description: Create a new Log Field Mapping in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_mapping_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Field Mapping already exists
      security:
      - basicAuth: []
      summary: Add a new Log Field Mapping to the config
      tags:
      - log-field-mapping
  /log-field-mappings/{log-field-mapping-name}:
    delete:
      operationId: delete-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping to be deleted
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Mapping does not exist
        "409":
          description: The Log Field Mapping cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log Field Mapping
      tags:
      - log-field-mapping
    get:
      operationId: get-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping to be read
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_mapping_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Mapping does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Field Mapping
      tags:
      - log-field-mapping
    patch:
      operationId: update-log-field-mapping
      parameters:
      - description: Name of the Log Field Mapping to be updated
        explode: false
        in: path
        name: log-field-mapping-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Mapping
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_mapping_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Mapping does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Field Mapping by name
      tags:
      - log-field-mapping
  /password-generators:
    post:
      operationId: add-password-generator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_password_generator_request'
        description: Create a new Password Generator in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_generator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Generator already exists
      security:
      - basicAuth: []
      summary: Add a new Password Generator to the config
      tags:
      - password-generator
  /password-generators/{password-generator-name}:
    delete:
      operationId: delete-password-generator
      parameters:
      - description: Name of the Password Generator to be deleted
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Generator does not exist
        "409":
          description: The Password Generator cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Password Generator
      tags:
      - password-generator
    get:
      operationId: get-password-generator
      parameters:
      - description: Name of the Password Generator to be read
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_generator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Generator does not exist
      security:
      - basicAuth: []
      summary: Returns a single Password Generator
      tags:
      - password-generator
    patch:
      operationId: update-password-generator
      parameters:
      - description: Name of the Password Generator to be updated
        explode: false
        in: path
        name: password-generator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Generator
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_generator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Generator does not exist
      security:
      - basicAuth: []
      summary: Update an existing Password Generator by name
      tags:
      - password-generator
  /otp-delivery-mechanisms:
    post:
      operationId: add-otp-delivery-mechanism
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_otp_delivery_mechanism_request'
        description: Create a new OTP Delivery Mechanism in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_otp_delivery_mechanism_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The OTP Delivery Mechanism already exists
      security:
      - basicAuth: []
      summary: Add a new OTP Delivery Mechanism to the config
      tags:
      - otp-delivery-mechanism
  /otp-delivery-mechanisms/{otp-delivery-mechanism-name}:
    delete:
      operationId: delete-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism to be deleted
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OTP Delivery Mechanism does not exist
        "409":
          description: The OTP Delivery Mechanism cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a OTP Delivery Mechanism
      tags:
      - otp-delivery-mechanism
    get:
      operationId: get-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism to be read
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_otp_delivery_mechanism_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OTP Delivery Mechanism does not exist
      security:
      - basicAuth: []
      summary: Returns a single OTP Delivery Mechanism
      tags:
      - otp-delivery-mechanism
    patch:
      operationId: update-otp-delivery-mechanism
      parameters:
      - description: Name of the OTP Delivery Mechanism to be updated
        explode: false
        in: path
        name: otp-delivery-mechanism-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing OTP Delivery Mechanism
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_otp_delivery_mechanism_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The OTP Delivery Mechanism does not exist
      security:
      - basicAuth: []
      summary: Update an existing OTP Delivery Mechanism by name
      tags:
      - otp-delivery-mechanism
  /log-field-behaviors:
    post:
      operationId: add-log-field-behavior
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_field_behavior_request'
        description: Create a new Log Field Behavior in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_behavior_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Field Behavior already exists
      security:
      - basicAuth: []
      summary: Add a new Log Field Behavior to the config
      tags:
      - log-field-behavior
  /log-field-behaviors/{log-field-behavior-name}:
    delete:
      operationId: delete-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior to be deleted
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Behavior does not exist
        "409":
          description: The Log Field Behavior cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log Field Behavior
      tags:
      - log-field-behavior
    get:
      operationId: get-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior to be read
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_behavior_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Behavior does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Field Behavior
      tags:
      - log-field-behavior
    patch:
      operationId: update-log-field-behavior
      parameters:
      - description: Name of the Log Field Behavior to be updated
        explode: false
        in: path
        name: log-field-behavior-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Behavior
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_field_behavior_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Behavior does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Field Behavior by name
      tags:
      - log-field-behavior
  /server-instances/{server-instance-name}:
    get:
      operationId: get-server-instance
      parameters:
      - description: Name of the Server Instance to be read
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_server_instance_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      summary: Returns a single Server Instance
      tags:
      - server-instance
    patch:
      operationId: update-server-instance
      parameters:
      - description: Name of the Server Instance to be updated
        explode: false
        in: path
        name: server-instance-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Instance
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_server_instance_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Instance does not exist
      security:
      - basicAuth: []
      summary: Update an existing Server Instance by name
      tags:
      - server-instance
  /log-file-rotation-listeners:
    post:
      operationId: add-log-file-rotation-listener
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_file_rotation_listener_request'
        description: Create a new Log File Rotation Listener in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_file_rotation_listener_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log File Rotation Listener already exists
      security:
      - basicAuth: []
      summary: Add a new Log File Rotation Listener to the config
      tags:
      - log-file-rotation-listener
  /log-file-rotation-listeners/{log-file-rotation-listener-name}:
    delete:
      operationId: delete-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener to be deleted
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log File Rotation Listener does not exist
        "409":
          description: The Log File Rotation Listener cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log File Rotation Listener
      tags:
      - log-file-rotation-listener
    get:
      operationId: get-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener to be read
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_file_rotation_listener_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log File Rotation Listener does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log File Rotation Listener
      tags:
      - log-file-rotation-listener
    patch:
      operationId: update-log-file-rotation-listener
      parameters:
      - description: Name of the Log File Rotation Listener to be updated
        explode: false
        in: path
        name: log-file-rotation-listener-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log File Rotation Listener
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_file_rotation_listener_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log File Rotation Listener does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log File Rotation Listener by name
      tags:
      - log-file-rotation-listener
  /password-policies:
    post:
      operationId: add-password-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-password-policy-request'
        description: Create a new Password Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Password Policy to the config
      tags:
      - password-policy
  /password-policies/{password-policy-name}:
    delete:
      operationId: delete-password-policy
      parameters:
      - description: Name of the Password Policy to be deleted
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
        "409":
          description: The Password Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Password Policy
      tags:
      - password-policy
    get:
      operationId: get-password-policy
      parameters:
      - description: Name of the Password Policy to be read
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Password Policy
      tags:
      - password-policy
    patch:
      operationId: update-password-policy
      parameters:
      - description: Name of the Password Policy to be updated
        explode: false
        in: path
        name: password-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/password-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Password Policy by name
      tags:
      - password-policy
  /delegated-admin-rights:
    post:
      operationId: add-delegated-admin-rights
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-rights-request'
        description: Create a new Delegated Admin Rights in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Rights already exists
      security:
      - basicAuth: []
      summary: Add a new Delegated Admin Rights to the config
      tags:
      - delegated-admin-rights
  /delegated-admin-rights/{delegated-admin-rights-name}:
    delete:
      operationId: delete-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights to be deleted
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Rights does not exist
        "409":
          description: The Delegated Admin Rights cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Delegated Admin Rights
      tags:
      - delegated-admin-rights
    get:
      operationId: get-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights to be read
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Rights does not exist
      security:
      - basicAuth: []
      summary: Returns a single Delegated Admin Rights
      tags:
      - delegated-admin-rights
    patch:
      operationId: update-delegated-admin-rights
      parameters:
      - description: Name of the Delegated Admin Rights to be updated
        explode: false
        in: path
        name: delegated-admin-rights-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Rights
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-rights-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Rights does not exist
      security:
      - basicAuth: []
      summary: Update an existing Delegated Admin Rights by name
      tags:
      - delegated-admin-rights
  /uncached-attribute-criteria:
    post:
      operationId: add-uncached-attribute-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_uncached_attribute_criteria_request'
        description: Create a new Uncached Attribute Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_attribute_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Uncached Attribute Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Uncached Attribute Criteria to the config
      tags:
      - uncached-attribute-criteria
  /uncached-attribute-criteria/{uncached-attribute-criteria-name}:
    delete:
      operationId: delete-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria to be deleted
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Attribute Criteria does not exist
        "409":
          description: The Uncached Attribute Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Uncached Attribute Criteria
      tags:
      - uncached-attribute-criteria
    get:
      operationId: get-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria to be read
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_attribute_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Attribute Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Uncached Attribute Criteria
      tags:
      - uncached-attribute-criteria
    patch:
      operationId: update-uncached-attribute-criteria
      parameters:
      - description: Name of the Uncached Attribute Criteria to be updated
        explode: false
        in: path
        name: uncached-attribute-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Uncached Attribute Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_attribute_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Uncached Attribute Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Uncached Attribute Criteria by name
      tags:
      - uncached-attribute-criteria
  /result-code-maps:
    post:
      operationId: add-result-code-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-result-code-map-request'
        description: Create a new Result Code Map in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Result Code Map already exists
      security:
      - basicAuth: []
      summary: Add a new Result Code Map to the config
      tags:
      - result-code-map
  /result-code-maps/{result-code-map-name}:
    delete:
      operationId: delete-result-code-map
      parameters:
      - description: Name of the Result Code Map to be deleted
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
        "409":
          description: The Result Code Map cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Result Code Map
      tags:
      - result-code-map
    get:
      operationId: get-result-code-map
      parameters:
      - description: Name of the Result Code Map to be read
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      summary: Returns a single Result Code Map
      tags:
      - result-code-map
    patch:
      operationId: update-result-code-map
      parameters:
      - description: Name of the Result Code Map to be updated
        explode: false
        in: path
        name: result-code-map-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Result Code Map
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/result-code-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Result Code Map does not exist
      security:
      - basicAuth: []
      summary: Update an existing Result Code Map by name
      tags:
      - result-code-map
  /synchronization-providers/{synchronization-provider-name}:
    get:
      operationId: get-synchronization-provider
      parameters:
      - description: Name of the Synchronization Provider to be read
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-synchronization-provider-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Synchronization Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Synchronization Provider
      tags:
      - synchronization-provider
    patch:
      operationId: update-synchronization-provider
      parameters:
      - description: Name of the Synchronization Provider to be updated
        explode: false
        in: path
        name: synchronization-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Synchronization Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-synchronization-provider-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Synchronization Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Synchronization Provider by name
      tags:
      - synchronization-provider
  /connection-criteria:
    post:
      operationId: add-connection-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_connection_criteria_request'
        description: Create a new Connection Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Connection Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Connection Criteria to the config
      tags:
      - connection-criteria
  /connection-criteria/{connection-criteria-name}:
    delete:
      operationId: delete-connection-criteria
      parameters:
      - description: Name of the Connection Criteria to be deleted
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
        "409":
          description: The Connection Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Connection Criteria
      tags:
      - connection-criteria
    get:
      operationId: get-connection-criteria
      parameters:
      - description: Name of the Connection Criteria to be read
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Connection Criteria
      tags:
      - connection-criteria
    patch:
      operationId: update-connection-criteria
      parameters:
      - description: Name of the Connection Criteria to be updated
        explode: false
        in: path
        name: connection-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Connection Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Connection Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Connection Criteria by name
      tags:
      - connection-criteria
  /root-dn:
    get:
      operationId: get-root-dn
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Root DN does not exist
      security:
      - basicAuth: []
      summary: Returns a single Root DN
      tags:
      - root-dn
    patch:
      operationId: update-root-dn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Root DN
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/root-dn-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Root DN does not exist
      security:
      - basicAuth: []
      summary: Update an existing Root DN by name
      tags:
      - root-dn
  /trust-manager-providers:
    post:
      operationId: add-trust-manager-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_trust_manager_provider_request'
        description: Create a new Trust Manager Provider in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_trust_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Trust Manager Provider already exists
      security:
      - basicAuth: []
      summary: Add a new Trust Manager Provider to the config
      tags:
      - trust-manager-provider
  /trust-manager-providers/{trust-manager-provider-name}:
    delete:
      operationId: delete-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider to be deleted
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trust Manager Provider does not exist
        "409":
          description: The Trust Manager Provider cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Trust Manager Provider
      tags:
      - trust-manager-provider
    get:
      operationId: get-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider to be read
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_trust_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trust Manager Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Trust Manager Provider
      tags:
      - trust-manager-provider
    patch:
      operationId: update-trust-manager-provider
      parameters:
      - description: Name of the Trust Manager Provider to be updated
        explode: false
        in: path
        name: trust-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Trust Manager Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_trust_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Trust Manager Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Trust Manager Provider by name
      tags:
      - trust-manager-provider
  /key-pairs:
    post:
      operationId: add-key-pair
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-key-pair-request'
        description: Create a new Key Pair in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Key Pair already exists
      security:
      - basicAuth: []
      summary: Add a new Key Pair to the config
      tags:
      - key-pair
  /key-pairs/{key-pair-name}:
    delete:
      operationId: delete-key-pair
      parameters:
      - description: Name of the Key Pair to be deleted
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
        "409":
          description: The Key Pair cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Key Pair
      tags:
      - key-pair
    get:
      operationId: get-key-pair
      parameters:
      - description: Name of the Key Pair to be read
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      summary: Returns a single Key Pair
      tags:
      - key-pair
    patch:
      operationId: update-key-pair
      parameters:
      - description: Name of the Key Pair to be updated
        explode: false
        in: path
        name: key-pair-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Key Pair
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/key-pair-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Key Pair does not exist
      security:
      - basicAuth: []
      summary: Update an existing Key Pair by name
      tags:
      - key-pair
  /request-criteria:
    post:
      operationId: add-request-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_request_criteria_request'
        description: Create a new Request Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_request_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Request Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Request Criteria to the config
      tags:
      - request-criteria
  /request-criteria/{request-criteria-name}:
    delete:
      operationId: delete-request-criteria
      parameters:
      - description: Name of the Request Criteria to be deleted
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Request Criteria does not exist
        "409":
          description: The Request Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Request Criteria
      tags:
      - request-criteria
    get:
      operationId: get-request-criteria
      parameters:
      - description: Name of the Request Criteria to be read
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_request_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Request Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Request Criteria
      tags:
      - request-criteria
    patch:
      operationId: update-request-criteria
      parameters:
      - description: Name of the Request Criteria to be updated
        explode: false
        in: path
        name: request-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Request Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_request_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Request Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Request Criteria by name
      tags:
      - request-criteria
  /log-rotation-policies:
    post:
      operationId: add-log-rotation-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_rotation_policy_request'
        description: Create a new Log Rotation Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_rotation_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Rotation Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Log Rotation Policy to the config
      tags:
      - log-rotation-policy
  /log-rotation-policies/{log-rotation-policy-name}:
    delete:
      operationId: delete-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be deleted
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
        "409":
          description: The Log Rotation Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log Rotation Policy
      tags:
      - log-rotation-policy
    get:
      operationId: get-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be read
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_rotation_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Rotation Policy
      tags:
      - log-rotation-policy
    patch:
      operationId: update-log-rotation-policy
      parameters:
      - description: Name of the Log Rotation Policy to be updated
        explode: false
        in: path
        name: log-rotation-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Rotation Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_rotation_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Rotation Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Rotation Policy by name
      tags:
      - log-rotation-policy
  /log-field-syntaxes/{log-field-syntax-name}:
    get:
      operationId: get-log-field-syntax
      parameters:
      - description: Name of the Log Field Syntax to be read
        explode: false
        in: path
        name: log-field-syntax-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_field_syntax_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Field Syntax does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Field Syntax
      tags:
      - log-field-syntax
    patch:
      operationId: update-log-field-syntax
      parameters:
      - description: Name of the Log Field Syntax to be updated
        explode: false
        in: path
        name: log-field-syntax-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Field Syntax
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_field_syntax_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Field Syntax does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Field Syntax by name
      tags:
      - log-field-syntax
  /extended-operation-handlers:
    post:
      operationId: add-extended-operation-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_extended_operation_handler_request'
        description: Create a new Extended Operation Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_extended_operation_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Extended Operation Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Extended Operation Handler to the config
      tags:
      - extended-operation-handler
  /extended-operation-handlers/{extended-operation-handler-name}:
    delete:
      operationId: delete-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler to be deleted
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Extended Operation Handler does not exist
        "409":
          description: The Extended Operation Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Extended Operation Handler
      tags:
      - extended-operation-handler
    get:
      operationId: get-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler to be read
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_extended_operation_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Extended Operation Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Extended Operation Handler
      tags:
      - extended-operation-handler
    patch:
      operationId: update-extended-operation-handler
      parameters:
      - description: Name of the Extended Operation Handler to be updated
        explode: false
        in: path
        name: extended-operation-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Extended Operation Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_extended_operation_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Extended Operation Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Extended Operation Handler by name
      tags:
      - extended-operation-handler
  /azure-authentication-methods:
    post:
      operationId: add-azure-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_azure_authentication_method_request'
        description: Create a new Azure Authentication Method in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_azure_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Azure Authentication Method already exists
      security:
      - basicAuth: []
      summary: Add a new Azure Authentication Method to the config
      tags:
      - azure-authentication-method
  /azure-authentication-methods/{azure-authentication-method-name}:
    delete:
      operationId: delete-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method to be deleted
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Azure Authentication Method does not exist
        "409":
          description: The Azure Authentication Method cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Azure Authentication Method
      tags:
      - azure-authentication-method
    get:
      operationId: get-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method to be read
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_azure_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Azure Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Returns a single Azure Authentication Method
      tags:
      - azure-authentication-method
    patch:
      operationId: update-azure-authentication-method
      parameters:
      - description: Name of the Azure Authentication Method to be updated
        explode: false
        in: path
        name: azure-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Azure Authentication Method
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_azure_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Azure Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Update an existing Azure Authentication Method by name
      tags:
      - azure-authentication-method
  /passphrase-providers:
    post:
      operationId: add-passphrase-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_passphrase_provider_request'
        description: Create a new Passphrase Provider in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_passphrase_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Passphrase Provider already exists
      security:
      - basicAuth: []
      summary: Add a new Passphrase Provider to the config
      tags:
      - passphrase-provider
  /passphrase-providers/{passphrase-provider-name}:
    delete:
      operationId: delete-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be deleted
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
        "409":
          description: The Passphrase Provider cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Passphrase Provider
      tags:
      - passphrase-provider
    get:
      operationId: get-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be read
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_passphrase_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Passphrase Provider
      tags:
      - passphrase-provider
    patch:
      operationId: update-passphrase-provider
      parameters:
      - description: Name of the Passphrase Provider to be updated
        explode: false
        in: path
        name: passphrase-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Passphrase Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_passphrase_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Passphrase Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Passphrase Provider by name
      tags:
      - passphrase-provider
  /soft-delete-policies:
    post:
      operationId: add-soft-delete-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-soft-delete-policy-request'
        description: Create a new Soft Delete Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Soft Delete Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Soft Delete Policy to the config
      tags:
      - soft-delete-policy
  /soft-delete-policies/{soft-delete-policy-name}:
    delete:
      operationId: delete-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy to be deleted
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Soft Delete Policy does not exist
        "409":
          description: The Soft Delete Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Soft Delete Policy
      tags:
      - soft-delete-policy
    get:
      operationId: get-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy to be read
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Soft Delete Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Soft Delete Policy
      tags:
      - soft-delete-policy
    patch:
      operationId: update-soft-delete-policy
      parameters:
      - description: Name of the Soft Delete Policy to be updated
        explode: false
        in: path
        name: soft-delete-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Soft Delete Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/soft-delete-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Soft Delete Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Soft Delete Policy by name
      tags:
      - soft-delete-policy
  /recurring-task-chains:
    post:
      operationId: add-recurring-task-chain
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-recurring-task-chain-request'
        description: Create a new Recurring Task Chain in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Recurring Task Chain already exists
      security:
      - basicAuth: []
      summary: Add a new Recurring Task Chain to the config
      tags:
      - recurring-task-chain
  /recurring-task-chains/{recurring-task-chain-name}:
    delete:
      operationId: delete-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain to be deleted
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task Chain does not exist
        "409":
          description: The Recurring Task Chain cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Recurring Task Chain
      tags:
      - recurring-task-chain
    get:
      operationId: get-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain to be read
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task Chain does not exist
      security:
      - basicAuth: []
      summary: Returns a single Recurring Task Chain
      tags:
      - recurring-task-chain
    patch:
      operationId: update-recurring-task-chain
      parameters:
      - description: Name of the Recurring Task Chain to be updated
        explode: false
        in: path
        name: recurring-task-chain-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Recurring Task Chain
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/recurring-task-chain-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Recurring Task Chain does not exist
      security:
      - basicAuth: []
      summary: Update an existing Recurring Task Chain by name
      tags:
      - recurring-task-chain
  /gauges:
    post:
      operationId: add-gauge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_gauge_request'
        description: Create a new Gauge in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Gauge already exists
      security:
      - basicAuth: []
      summary: Add a new Gauge to the config
      tags:
      - gauge
  /gauges/{gauge-name}:
    delete:
      operationId: delete-gauge
      parameters:
      - description: Name of the Gauge to be deleted
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge does not exist
        "409":
          description: The Gauge cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Gauge
      tags:
      - gauge
    get:
      operationId: get-gauge
      parameters:
      - description: Name of the Gauge to be read
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge does not exist
      security:
      - basicAuth: []
      summary: Returns a single Gauge
      tags:
      - gauge
    patch:
      operationId: update-gauge
      parameters:
      - description: Name of the Gauge to be updated
        explode: false
        in: path
        name: gauge-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Gauge
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Gauge does not exist
      security:
      - basicAuth: []
      summary: Update an existing Gauge by name
      tags:
      - gauge
  /search-reference-criteria:
    post:
      operationId: add-search-reference-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_search_reference_criteria_request'
        description: Create a new Search Reference Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_reference_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Search Reference Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Search Reference Criteria to the config
      tags:
      - search-reference-criteria
  /search-reference-criteria/{search-reference-criteria-name}:
    delete:
      operationId: delete-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria to be deleted
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Reference Criteria does not exist
        "409":
          description: The Search Reference Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Search Reference Criteria
      tags:
      - search-reference-criteria
    get:
      operationId: get-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria to be read
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_reference_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Reference Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Search Reference Criteria
      tags:
      - search-reference-criteria
    patch:
      operationId: update-search-reference-criteria
      parameters:
      - description: Name of the Search Reference Criteria to be updated
        explode: false
        in: path
        name: search-reference-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Search Reference Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_reference_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Search Reference Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Search Reference Criteria by name
      tags:
      - search-reference-criteria
  /entry-caches:
    post:
      operationId: add-entry-cache
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-fifo-entry-cache-request'
        description: Create a new Entry Cache in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Entry Cache already exists
      security:
      - basicAuth: []
      summary: Add a new Entry Cache to the config
      tags:
      - entry-cache
  /entry-caches/{entry-cache-name}:
    delete:
      operationId: delete-entry-cache
      parameters:
      - description: Name of the Entry Cache to be deleted
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Entry Cache does not exist
        "409":
          description: The Entry Cache cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Entry Cache
      tags:
      - entry-cache
    get:
      operationId: get-entry-cache
      parameters:
      - description: Name of the Entry Cache to be read
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Entry Cache does not exist
      security:
      - basicAuth: []
      summary: Returns a single Entry Cache
      tags:
      - entry-cache
    patch:
      operationId: update-entry-cache
      parameters:
      - description: Name of the Entry Cache to be updated
        explode: false
        in: path
        name: entry-cache-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Entry Cache
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/fifo-entry-cache-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Entry Cache does not exist
      security:
      - basicAuth: []
      summary: Update an existing Entry Cache by name
      tags:
      - entry-cache
  /access-control-handler:
    get:
      operationId: get-access-control-handler
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsee-compat-access-control-handler-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Access Control Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Access Control Handler
      tags:
      - access-control-handler
    patch:
      operationId: update-access-control-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Access Control Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dsee-compat-access-control-handler-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Access Control Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Access Control Handler by name
      tags:
      - access-control-handler
  /alert-handlers:
    post:
      operationId: add-alert-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_alert_handler_request'
        description: Create a new Alert Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_alert_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Alert Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Alert Handler to the config
      tags:
      - alert-handler
  /alert-handlers/{alert-handler-name}:
    delete:
      operationId: delete-alert-handler
      parameters:
      - description: Name of the Alert Handler to be deleted
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
        "409":
          description: The Alert Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Alert Handler
      tags:
      - alert-handler
    get:
      operationId: get-alert-handler
      parameters:
      - description: Name of the Alert Handler to be read
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alert_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Alert Handler
      tags:
      - alert-handler
    patch:
      operationId: update-alert-handler
      parameters:
      - description: Name of the Alert Handler to be updated
        explode: false
        in: path
        name: alert-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Alert Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_alert_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Alert Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Alert Handler by name
      tags:
      - alert-handler
  /license:
    get:
      operationId: get-license
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/license-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The License does not exist
      security:
      - basicAuth: []
      summary: Returns a single License
      tags:
      - license
    patch:
      operationId: update-license
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing License
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/license-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The License does not exist
      security:
      - basicAuth: []
      summary: Update an existing License by name
      tags:
      - license
  /cipher-stream-providers:
    post:
      operationId: add-cipher-stream-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_cipher_stream_provider_request'
        description: Create a new Cipher Stream Provider in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_cipher_stream_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Cipher Stream Provider already exists
      security:
      - basicAuth: []
      summary: Add a new Cipher Stream Provider to the config
      tags:
      - cipher-stream-provider
  /cipher-stream-providers/{cipher-stream-provider-name}:
    delete:
      operationId: delete-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider to be deleted
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Stream Provider does not exist
        "409":
          description: The Cipher Stream Provider cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Cipher Stream Provider
      tags:
      - cipher-stream-provider
    get:
      operationId: get-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider to be read
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_cipher_stream_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Cipher Stream Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Cipher Stream Provider
      tags:
      - cipher-stream-provider
    patch:
      operationId: update-cipher-stream-provider
      parameters:
      - description: Name of the Cipher Stream Provider to be updated
        explode: false
        in: path
        name: cipher-stream-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Cipher Stream Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_cipher_stream_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Cipher Stream Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Cipher Stream Provider by name
      tags:
      - cipher-stream-provider
  /vault-authentication-methods:
    post:
      operationId: add-vault-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_vault_authentication_method_request'
        description: Create a new Vault Authentication Method in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_vault_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Vault Authentication Method already exists
      security:
      - basicAuth: []
      summary: Add a new Vault Authentication Method to the config
      tags:
      - vault-authentication-method
  /vault-authentication-methods/{vault-authentication-method-name}:
    delete:
      operationId: delete-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method to be deleted
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Vault Authentication Method does not exist
        "409":
          description: The Vault Authentication Method cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Vault Authentication Method
      tags:
      - vault-authentication-method
    get:
      operationId: get-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method to be read
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_vault_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Vault Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Returns a single Vault Authentication Method
      tags:
      - vault-authentication-method
    patch:
      operationId: update-vault-authentication-method
      parameters:
      - description: Name of the Vault Authentication Method to be updated
        explode: false
        in: path
        name: vault-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Vault Authentication Method
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_vault_authentication_method_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Vault Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Update an existing Vault Authentication Method by name
      tags:
      - vault-authentication-method
  /account-status-notification-handlers:
    post:
      operationId: add-account-status-notification-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_account_status_notification_handler_request'
        description: Create a new Account Status Notification Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_account_status_notification_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Account Status Notification Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Account Status Notification Handler to the config
      tags:
      - account-status-notification-handler
  /account-status-notification-handlers/{account-status-notification-handler-name}:
    delete:
      operationId: delete-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be deleted
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
        "409":
          description: The Account Status Notification Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Account Status Notification Handler
      tags:
      - account-status-notification-handler
    get:
      operationId: get-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be read
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_account_status_notification_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Account Status Notification Handler
      tags:
      - account-status-notification-handler
    patch:
      operationId: update-account-status-notification-handler
      parameters:
      - description: Name of the Account Status Notification Handler to be updated
        explode: false
        in: path
        name: account-status-notification-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Account Status Notification Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_account_status_notification_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Account Status Notification Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Account Status Notification Handler by name
      tags:
      - account-status-notification-handler
  /server-groups:
    post:
      operationId: add-server-group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-server-group-request'
        description: Create a new Server Group in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Server Group already exists
      security:
      - basicAuth: []
      summary: Add a new Server Group to the config
      tags:
      - server-group
  /server-groups/{server-group-name}:
    delete:
      operationId: delete-server-group
      parameters:
      - description: Name of the Server Group to be deleted
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Group does not exist
        "409":
          description: The Server Group cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Server Group
      tags:
      - server-group
    get:
      operationId: get-server-group
      parameters:
      - description: Name of the Server Group to be read
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Server Group does not exist
      security:
      - basicAuth: []
      summary: Returns a single Server Group
      tags:
      - server-group
    patch:
      operationId: update-server-group
      parameters:
      - description: Name of the Server Group to be updated
        explode: false
        in: path
        name: server-group-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Server Group
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/server-group-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Server Group does not exist
      security:
      - basicAuth: []
      summary: Update an existing Server Group by name
      tags:
      - server-group
  /pass-through-authentication-handlers:
    post:
      operationId: add-pass-through-authentication-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_pass_through_authentication_handler_request'
        description: Create a new Pass Through Authentication Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_pass_through_authentication_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Pass Through Authentication Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Pass Through Authentication Handler to the config
      tags:
      - pass-through-authentication-handler
  /pass-through-authentication-handlers/{pass-through-authentication-handler-name}:
    delete:
      operationId: delete-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler to be deleted
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Pass Through Authentication Handler does not exist
        "409":
          description: The Pass Through Authentication Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Pass Through Authentication Handler
      tags:
      - pass-through-authentication-handler
    get:
      operationId: get-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler to be read
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_pass_through_authentication_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Pass Through Authentication Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Pass Through Authentication Handler
      tags:
      - pass-through-authentication-handler
    patch:
      operationId: update-pass-through-authentication-handler
      parameters:
      - description: Name of the Pass Through Authentication Handler to be updated
        explode: false
        in: path
        name: pass-through-authentication-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Pass Through Authentication Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_pass_through_authentication_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Pass Through Authentication Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Pass Through Authentication Handler by name
      tags:
      - pass-through-authentication-handler
  /consent-definitions:
    post:
      operationId: add-consent-definition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-consent-definition-request'
        description: Create a new Consent Definition in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Consent Definition already exists
      security:
      - basicAuth: []
      summary: Add a new Consent Definition to the config
      tags:
      - consent-definition
  /consent-definitions/{consent-definition-name}:
    delete:
      operationId: delete-consent-definition
      parameters:
      - description: Name of the Consent Definition to be deleted
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition does not exist
        "409":
          description: The Consent Definition cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Consent Definition
      tags:
      - consent-definition
    get:
      operationId: get-consent-definition
      parameters:
      - description: Name of the Consent Definition to be read
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Definition does not exist
      security:
      - basicAuth: []
      summary: Returns a single Consent Definition
      tags:
      - consent-definition
    patch:
      operationId: update-consent-definition
      parameters:
      - description: Name of the Consent Definition to be updated
        explode: false
        in: path
        name: consent-definition-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Consent Definition
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-definition-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Consent Definition does not exist
      security:
      - basicAuth: []
      summary: Update an existing Consent Definition by name
      tags:
      - consent-definition
  /consent-service:
    get:
      operationId: get-consent-service
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-service-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Consent Service does not exist
      security:
      - basicAuth: []
      summary: Returns a single Consent Service
      tags:
      - consent-service
    patch:
      operationId: update-consent-service
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Consent Service
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/consent-service-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Consent Service does not exist
      security:
      - basicAuth: []
      summary: Update an existing Consent Service by name
      tags:
      - consent-service
  /topology-admin-users:
    post:
      operationId: add-topology-admin-user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-topology-admin-user-request'
        description: Create a new Topology Admin User in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Topology Admin User already exists
      security:
      - basicAuth: []
      summary: Add a new Topology Admin User to the config
      tags:
      - topology-admin-user
  /topology-admin-users/{topology-admin-user-name}:
    delete:
      operationId: delete-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User to be deleted
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
        "409":
          description: The Topology Admin User cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Topology Admin User
      tags:
      - topology-admin-user
    get:
      operationId: get-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User to be read
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      summary: Returns a single Topology Admin User
      tags:
      - topology-admin-user
    patch:
      operationId: update-topology-admin-user
      parameters:
      - description: Name of the Topology Admin User to be updated
        explode: false
        in: path
        name: topology-admin-user-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Topology Admin User
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/topology-admin-user-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Topology Admin User does not exist
      security:
      - basicAuth: []
      summary: Update an existing Topology Admin User by name
      tags:
      - topology-admin-user
  /change-subscriptions:
    post:
      operationId: add-change-subscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-change-subscription-request'
        description: Create a new Change Subscription in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Change Subscription already exists
      security:
      - basicAuth: []
      summary: Add a new Change Subscription to the config
      tags:
      - change-subscription
  /change-subscriptions/{change-subscription-name}:
    delete:
      operationId: delete-change-subscription
      parameters:
      - description: Name of the Change Subscription to be deleted
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription does not exist
        "409":
          description: The Change Subscription cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Change Subscription
      tags:
      - change-subscription
    get:
      operationId: get-change-subscription
      parameters:
      - description: Name of the Change Subscription to be read
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription does not exist
      security:
      - basicAuth: []
      summary: Returns a single Change Subscription
      tags:
      - change-subscription
    patch:
      operationId: update-change-subscription
      parameters:
      - description: Name of the Change Subscription to be updated
        explode: false
        in: path
        name: change-subscription-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Change Subscription
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/change-subscription-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Change Subscription does not exist
      security:
      - basicAuth: []
      summary: Update an existing Change Subscription by name
      tags:
      - change-subscription
  /ldap-sdk-debug-logger:
    get:
      operationId: get-ldap-sdk-debug-logger
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-sdk-debug-logger-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The LDAP SDK Debug Logger does not exist
      security:
      - basicAuth: []
      summary: Returns a single LDAP SDK Debug Logger
      tags:
      - ldap-sdk-debug-logger
    patch:
      operationId: update-ldap-sdk-debug-logger
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing LDAP SDK Debug Logger
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ldap-sdk-debug-logger-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The LDAP SDK Debug Logger does not exist
      security:
      - basicAuth: []
      summary: Update an existing LDAP SDK Debug Logger by name
      tags:
      - ldap-sdk-debug-logger
  /conjur-authentication-methods:
    post:
      operationId: add-conjur-authentication-method
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-api-key-conjur-authentication-method-request'
        description: Create a new Conjur Authentication Method in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Conjur Authentication Method already exists
      security:
      - basicAuth: []
      summary: Add a new Conjur Authentication Method to the config
      tags:
      - conjur-authentication-method
  /conjur-authentication-methods/{conjur-authentication-method-name}:
    delete:
      operationId: delete-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method to be deleted
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Conjur Authentication Method does not exist
        "409":
          description: The Conjur Authentication Method cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Conjur Authentication Method
      tags:
      - conjur-authentication-method
    get:
      operationId: get-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method to be read
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Conjur Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Returns a single Conjur Authentication Method
      tags:
      - conjur-authentication-method
    patch:
      operationId: update-conjur-authentication-method
      parameters:
      - description: Name of the Conjur Authentication Method to be updated
        explode: false
        in: path
        name: conjur-authentication-method-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Conjur Authentication Method
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/api-key-conjur-authentication-method-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Conjur Authentication Method does not exist
      security:
      - basicAuth: []
      summary: Update an existing Conjur Authentication Method by name
      tags:
      - conjur-authentication-method
  /constructed-attributes:
    post:
      operationId: add-constructed-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-constructed-attribute-request'
        description: Create a new Constructed Attribute in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Constructed Attribute already exists
      security:
      - basicAuth: []
      summary: Add a new Constructed Attribute to the config
      tags:
      - constructed-attribute
  /constructed-attributes/{constructed-attribute-name}:
    delete:
      operationId: delete-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute to be deleted
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Constructed Attribute does not exist
        "409":
          description: The Constructed Attribute cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Constructed Attribute
      tags:
      - constructed-attribute
    get:
      operationId: get-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute to be read
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Constructed Attribute does not exist
      security:
      - basicAuth: []
      summary: Returns a single Constructed Attribute
      tags:
      - constructed-attribute
    patch:
      operationId: update-constructed-attribute
      parameters:
      - description: Name of the Constructed Attribute to be updated
        explode: false
        in: path
        name: constructed-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Constructed Attribute
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/constructed-attribute-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Constructed Attribute does not exist
      security:
      - basicAuth: []
      summary: Update an existing Constructed Attribute by name
      tags:
      - constructed-attribute
  /password-validators:
    post:
      operationId: add-password-validator
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_password_validator_request'
        description: Create a new Password Validator in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Validator already exists
      security:
      - basicAuth: []
      summary: Add a new Password Validator to the config
      tags:
      - password-validator
  /password-validators/{password-validator-name}:
    delete:
      operationId: delete-password-validator
      parameters:
      - description: Name of the Password Validator to be deleted
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
        "409":
          description: The Password Validator cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Password Validator
      tags:
      - password-validator
    get:
      operationId: get-password-validator
      parameters:
      - description: Name of the Password Validator to be read
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      summary: Returns a single Password Validator
      tags:
      - password-validator
    patch:
      operationId: update-password-validator
      parameters:
      - description: Name of the Password Validator to be updated
        explode: false
        in: path
        name: password-validator-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Validator
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_validator_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Validator does not exist
      security:
      - basicAuth: []
      summary: Update an existing Password Validator by name
      tags:
      - password-validator
  /alarm-manager:
    get:
      operationId: get-alarm-manager
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alarm-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Alarm Manager does not exist
      security:
      - basicAuth: []
      summary: Returns a single Alarm Manager
      tags:
      - alarm-manager
    patch:
      operationId: update-alarm-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Alarm Manager
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/alarm-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Alarm Manager does not exist
      security:
      - basicAuth: []
      summary: Update an existing Alarm Manager by name
      tags:
      - alarm-manager
  /connection-handlers:
    post:
      operationId: add-connection-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_connection_handler_request'
        description: Create a new Connection Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Connection Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Connection Handler to the config
      tags:
      - connection-handler
  /connection-handlers/{connection-handler-name}:
    delete:
      operationId: delete-connection-handler
      parameters:
      - description: Name of the Connection Handler to be deleted
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Handler does not exist
        "409":
          description: The Connection Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Connection Handler
      tags:
      - connection-handler
    get:
      operationId: get-connection-handler
      parameters:
      - description: Name of the Connection Handler to be read
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Connection Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Connection Handler
      tags:
      - connection-handler
    patch:
      operationId: update-connection-handler
      parameters:
      - description: Name of the Connection Handler to be updated
        explode: false
        in: path
        name: connection-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Connection Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_connection_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Connection Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Connection Handler by name
      tags:
      - connection-handler
  /web-application-extensions/{web-application-extension-name}:
    get:
      operationId: get-web-application-extension
      parameters:
      - description: Name of the Web Application Extension to be read
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console-web-application-extension-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      summary: Returns a single Web Application Extension
      tags:
      - web-application-extension
    patch:
      operationId: update-web-application-extension
      parameters:
      - description: Name of the Web Application Extension to be updated
        explode: false
        in: path
        name: web-application-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Web Application Extension
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/console-web-application-extension-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Web Application Extension does not exist
      security:
      - basicAuth: []
      summary: Update an existing Web Application Extension by name
      tags:
      - web-application-extension
  /trusted-certificates:
    post:
      operationId: add-trusted-certificate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-trusted-certificate-request'
        description: Create a new Trusted Certificate in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Trusted Certificate already exists
      security:
      - basicAuth: []
      summary: Add a new Trusted Certificate to the config
      tags:
      - trusted-certificate
  /trusted-certificates/{trusted-certificate-name}:
    delete:
      operationId: delete-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate to be deleted
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trusted Certificate does not exist
        "409":
          description: The Trusted Certificate cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Trusted Certificate
      tags:
      - trusted-certificate
    get:
      operationId: get-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate to be read
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Trusted Certificate does not exist
      security:
      - basicAuth: []
      summary: Returns a single Trusted Certificate
      tags:
      - trusted-certificate
    patch:
      operationId: update-trusted-certificate
      parameters:
      - description: Name of the Trusted Certificate to be updated
        explode: false
        in: path
        name: trusted-certificate-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Trusted Certificate
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/trusted-certificate-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Trusted Certificate does not exist
      security:
      - basicAuth: []
      summary: Update an existing Trusted Certificate by name
      tags:
      - trusted-certificate
  /search-entry-criteria:
    post:
      operationId: add-search-entry-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_search_entry_criteria_request'
        description: Create a new Search Entry Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Search Entry Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Search Entry Criteria to the config
      tags:
      - search-entry-criteria
  /search-entry-criteria/{search-entry-criteria-name}:
    delete:
      operationId: delete-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria to be deleted
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Entry Criteria does not exist
        "409":
          description: The Search Entry Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Search Entry Criteria
      tags:
      - search-entry-criteria
    get:
      operationId: get-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria to be read
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Search Entry Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Search Entry Criteria
      tags:
      - search-entry-criteria
    patch:
      operationId: update-search-entry-criteria
      parameters:
      - description: Name of the Search Entry Criteria to be updated
        explode: false
        in: path
        name: search-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Search Entry Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_search_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Search Entry Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Search Entry Criteria by name
      tags:
      - search-entry-criteria
  /failure-lockout-actions:
    post:
      operationId: add-failure-lockout-action
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_failure_lockout_action_request'
        description: Create a new Failure Lockout Action in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_failure_lockout_action_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Failure Lockout Action already exists
      security:
      - basicAuth: []
      summary: Add a new Failure Lockout Action to the config
      tags:
      - failure-lockout-action
  /failure-lockout-actions/{failure-lockout-action-name}:
    delete:
      operationId: delete-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action to be deleted
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Failure Lockout Action does not exist
        "409":
          description: The Failure Lockout Action cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Failure Lockout Action
      tags:
      - failure-lockout-action
    get:
      operationId: get-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action to be read
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_failure_lockout_action_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Failure Lockout Action does not exist
      security:
      - basicAuth: []
      summary: Returns a single Failure Lockout Action
      tags:
      - failure-lockout-action
    patch:
      operationId: update-failure-lockout-action
      parameters:
      - description: Name of the Failure Lockout Action to be updated
        explode: false
        in: path
        name: failure-lockout-action-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Failure Lockout Action
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_failure_lockout_action_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Failure Lockout Action does not exist
      security:
      - basicAuth: []
      summary: Update an existing Failure Lockout Action by name
      tags:
      - failure-lockout-action
  /certificate-mappers:
    post:
      operationId: add-certificate-mapper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_certificate_mapper_request'
        description: Create a new Certificate Mapper in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_certificate_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Certificate Mapper already exists
      security:
      - basicAuth: []
      summary: Add a new Certificate Mapper to the config
      tags:
      - certificate-mapper
  /certificate-mappers/{certificate-mapper-name}:
    delete:
      operationId: delete-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper to be deleted
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Certificate Mapper does not exist
        "409":
          description: The Certificate Mapper cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Certificate Mapper
      tags:
      - certificate-mapper
    get:
      operationId: get-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper to be read
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_certificate_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Certificate Mapper does not exist
      security:
      - basicAuth: []
      summary: Returns a single Certificate Mapper
      tags:
      - certificate-mapper
    patch:
      operationId: update-certificate-mapper
      parameters:
      - description: Name of the Certificate Mapper to be updated
        explode: false
        in: path
        name: certificate-mapper-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Certificate Mapper
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_certificate_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Certificate Mapper does not exist
      security:
      - basicAuth: []
      summary: Update an existing Certificate Mapper by name
      tags:
      - certificate-mapper
  /log-publishers:
    post:
      operationId: add-log-publisher
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_publisher_request'
        description: Create a new Log Publisher in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_publisher_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Publisher already exists
      security:
      - basicAuth: []
      summary: Add a new Log Publisher to the config
      tags:
      - log-publisher
  /log-publishers/{log-publisher-name}:
    delete:
      operationId: delete-log-publisher
      parameters:
      - description: Name of the Log Publisher to be deleted
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Publisher does not exist
        "409":
          description: The Log Publisher cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log Publisher
      tags:
      - log-publisher
    get:
      operationId: get-log-publisher
      parameters:
      - description: Name of the Log Publisher to be read
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_publisher_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Publisher does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Publisher
      tags:
      - log-publisher
    patch:
      operationId: update-log-publisher
      parameters:
      - description: Name of the Log Publisher to be updated
        explode: false
        in: path
        name: log-publisher-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Publisher
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_log_publisher_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Publisher does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Publisher by name
      tags:
      - log-publisher
  /replication-assurance-policies:
    post:
      operationId: add-replication-assurance-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-replication-assurance-policy-request'
        description: Create a new Replication Assurance Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Replication Assurance Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Replication Assurance Policy to the config
      tags:
      - replication-assurance-policy
  /replication-assurance-policies/{replication-assurance-policy-name}:
    delete:
      operationId: delete-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy to be deleted
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Replication Assurance Policy does not exist
        "409":
          description: The Replication Assurance Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Replication Assurance Policy
      tags:
      - replication-assurance-policy
    get:
      operationId: get-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy to be read
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Replication Assurance Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Replication Assurance Policy
      tags:
      - replication-assurance-policy
    patch:
      operationId: update-replication-assurance-policy
      parameters:
      - description: Name of the Replication Assurance Policy to be updated
        explode: false
        in: path
        name: replication-assurance-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Replication Assurance Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/replication-assurance-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Replication Assurance Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Replication Assurance Policy by name
      tags:
      - replication-assurance-policy
  /key-manager-providers:
    post:
      operationId: add-key-manager-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_key_manager_provider_request'
        description: Create a new Key Manager Provider in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_key_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Key Manager Provider already exists
      security:
      - basicAuth: []
      summary: Add a new Key Manager Provider to the config
      tags:
      - key-manager-provider
  /key-manager-providers/{key-manager-provider-name}:
    delete:
      operationId: delete-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider to be deleted
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Manager Provider does not exist
        "409":
          description: The Key Manager Provider cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Key Manager Provider
      tags:
      - key-manager-provider
    get:
      operationId: get-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider to be read
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_key_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Key Manager Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Key Manager Provider
      tags:
      - key-manager-provider
    patch:
      operationId: update-key-manager-provider
      parameters:
      - description: Name of the Key Manager Provider to be updated
        explode: false
        in: path
        name: key-manager-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Key Manager Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_key_manager_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Key Manager Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Key Manager Provider by name
      tags:
      - key-manager-provider
  /external-servers:
    post:
      operationId: add-external-server
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_external_server_request'
        description: Create a new External Server in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_external_server_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The External Server already exists
      security:
      - basicAuth: []
      summary: Add a new External Server to the config
      tags:
      - external-server
  /external-servers/{external-server-name}:
    delete:
      operationId: delete-external-server
      parameters:
      - description: Name of the External Server to be deleted
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The External Server does not exist
        "409":
          description: The External Server cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a External Server
      tags:
      - external-server
    get:
      operationId: get-external-server
      parameters:
      - description: Name of the External Server to be read
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_external_server_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The External Server does not exist
      security:
      - basicAuth: []
      summary: Returns a single External Server
      tags:
      - external-server
    patch:
      operationId: update-external-server
      parameters:
      - description: Name of the External Server to be updated
        explode: false
        in: path
        name: external-server-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing External Server
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_external_server_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The External Server does not exist
      security:
      - basicAuth: []
      summary: Update an existing External Server by name
      tags:
      - external-server
  /dn-maps:
    post:
      operationId: add-dn-map
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-dn-map-request'
        description: Create a new DN Map in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The DN Map already exists
      security:
      - basicAuth: []
      summary: Add a new DN Map to the config
      tags:
      - dn-map
  /dn-maps/{dn-map-name}:
    delete:
      operationId: delete-dn-map
      parameters:
      - description: Name of the DN Map to be deleted
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The DN Map does not exist
        "409":
          description: The DN Map cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a DN Map
      tags:
      - dn-map
    get:
      operationId: get-dn-map
      parameters:
      - description: Name of the DN Map to be read
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The DN Map does not exist
      security:
      - basicAuth: []
      summary: Returns a single DN Map
      tags:
      - dn-map
    patch:
      operationId: update-dn-map
      parameters:
      - description: Name of the DN Map to be updated
        explode: false
        in: path
        name: dn-map-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing DN Map
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/dn-map-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The DN Map does not exist
      security:
      - basicAuth: []
      summary: Update an existing DN Map by name
      tags:
      - dn-map
  /change-subscription-handlers:
    post:
      operationId: add-change-subscription-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_change_subscription_handler_request'
        description: Create a new Change Subscription Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_change_subscription_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Change Subscription Handler already exists
      security:
      - basicAuth: []
      summary: Add a new Change Subscription Handler to the config
      tags:
      - change-subscription-handler
  /change-subscription-handlers/{change-subscription-handler-name}:
    delete:
      operationId: delete-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler to be deleted
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription Handler does not exist
        "409":
          description: The Change Subscription Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Change Subscription Handler
      tags:
      - change-subscription-handler
    get:
      operationId: get-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler to be read
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_change_subscription_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Change Subscription Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single Change Subscription Handler
      tags:
      - change-subscription-handler
    patch:
      operationId: update-change-subscription-handler
      parameters:
      - description: Name of the Change Subscription Handler to be updated
        explode: false
        in: path
        name: change-subscription-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Change Subscription Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_change_subscription_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Change Subscription Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing Change Subscription Handler by name
      tags:
      - change-subscription-handler
  /obscured-values:
    post:
      operationId: add-obscured-value
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-obscured-value-request'
        description: Create a new Obscured Value in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Obscured Value already exists
      security:
      - basicAuth: []
      summary: Add a new Obscured Value to the config
      tags:
      - obscured-value
  /obscured-values/{obscured-value-name}:
    delete:
      operationId: delete-obscured-value
      parameters:
      - description: Name of the Obscured Value to be deleted
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Obscured Value does not exist
        "409":
          description: The Obscured Value cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Obscured Value
      tags:
      - obscured-value
    get:
      operationId: get-obscured-value
      parameters:
      - description: Name of the Obscured Value to be read
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Obscured Value does not exist
      security:
      - basicAuth: []
      summary: Returns a single Obscured Value
      tags:
      - obscured-value
    patch:
      operationId: update-obscured-value
      parameters:
      - description: Name of the Obscured Value to be updated
        explode: false
        in: path
        name: obscured-value-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Obscured Value
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/obscured-value-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Obscured Value does not exist
      security:
      - basicAuth: []
      summary: Update an existing Obscured Value by name
      tags:
      - obscured-value
  /crypto-manager:
    get:
      operationId: get-crypto-manager
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crypto-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Crypto Manager does not exist
      security:
      - basicAuth: []
      summary: Returns a single Crypto Manager
      tags:
      - crypto-manager
    patch:
      operationId: update-crypto-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Crypto Manager
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/crypto-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Crypto Manager does not exist
      security:
      - basicAuth: []
      summary: Update an existing Crypto Manager by name
      tags:
      - crypto-manager
  /monitor-providers:
    post:
      operationId: add-monitor-provider
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-third-party-monitor-provider-request'
        description: Create a new Monitor Provider in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_monitor_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Monitor Provider already exists
      security:
      - basicAuth: []
      summary: Add a new Monitor Provider to the config
      tags:
      - monitor-provider
  /monitor-providers/{monitor-provider-name}:
    delete:
      operationId: delete-monitor-provider
      parameters:
      - description: Name of the Monitor Provider to be deleted
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitor Provider does not exist
        "409":
          description: The Monitor Provider cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Monitor Provider
      tags:
      - monitor-provider
    get:
      operationId: get-monitor-provider
      parameters:
      - description: Name of the Monitor Provider to be read
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_monitor_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitor Provider does not exist
      security:
      - basicAuth: []
      summary: Returns a single Monitor Provider
      tags:
      - monitor-provider
    patch:
      operationId: update-monitor-provider
      parameters:
      - description: Name of the Monitor Provider to be updated
        explode: false
        in: path
        name: monitor-provider-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Monitor Provider
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_monitor_provider_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Monitor Provider does not exist
      security:
      - basicAuth: []
      summary: Update an existing Monitor Provider by name
      tags:
      - monitor-provider
  /group-implementations/{group-implementation-name}:
    get:
      operationId: get-group-implementation
      parameters:
      - description: Name of the Group Implementation to be read
        explode: false
        in: path
        name: group-implementation-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_group_implementation_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Group Implementation does not exist
      security:
      - basicAuth: []
      summary: Returns a single Group Implementation
      tags:
      - group-implementation
    patch:
      operationId: update-group-implementation
      parameters:
      - description: Name of the Group Implementation to be updated
        explode: false
        in: path
        name: group-implementation-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Group Implementation
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_group_implementation_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Group Implementation does not exist
      security:
      - basicAuth: []
      summary: Update an existing Group Implementation by name
      tags:
      - group-implementation
  /gauge-data-sources:
    post:
      operationId: add-gauge-data-source
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_gauge_data_source_request'
        description: Create a new Gauge Data Source in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_data_source_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Gauge Data Source already exists
      security:
      - basicAuth: []
      summary: Add a new Gauge Data Source to the config
      tags:
      - gauge-data-source
  /gauge-data-sources/{gauge-data-source-name}:
    delete:
      operationId: delete-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source to be deleted
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge Data Source does not exist
        "409":
          description: The Gauge Data Source cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Gauge Data Source
      tags:
      - gauge-data-source
    get:
      operationId: get-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source to be read
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_data_source_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Gauge Data Source does not exist
      security:
      - basicAuth: []
      summary: Returns a single Gauge Data Source
      tags:
      - gauge-data-source
    patch:
      operationId: update-gauge-data-source
      parameters:
      - description: Name of the Gauge Data Source to be updated
        explode: false
        in: path
        name: gauge-data-source-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Gauge Data Source
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_gauge_data_source_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Gauge Data Source does not exist
      security:
      - basicAuth: []
      summary: Update an existing Gauge Data Source by name
      tags:
      - gauge-data-source
  /backends:
    post:
      operationId: add-backend
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-local-db-backend-request'
        description: Create a new Backend in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_backend_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Backend already exists
      security:
      - basicAuth: []
      summary: Add a new Backend to the config
      tags:
      - backend
  /backends/{backend-name}:
    delete:
      operationId: delete-backend
      parameters:
      - description: Name of the Backend to be deleted
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Backend does not exist
        "409":
          description: The Backend cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Backend
      tags:
      - backend
    get:
      operationId: get-backend
      parameters:
      - description: Name of the Backend to be read
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_backend_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Backend does not exist
      security:
      - basicAuth: []
      summary: Returns a single Backend
      tags:
      - backend
    patch:
      operationId: update-backend
      parameters:
      - description: Name of the Backend to be updated
        explode: false
        in: path
        name: backend-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Backend
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_backend_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Backend does not exist
      security:
      - basicAuth: []
      summary: Update an existing Backend by name
      tags:
      - backend
  /attribute-syntaxes/{attribute-syntax-name}:
    get:
      operationId: get-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax to be read
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_attribute_syntax_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      summary: Returns a single Attribute Syntax
      tags:
      - attribute-syntax
    patch:
      operationId: update-attribute-syntax
      parameters:
      - description: Name of the Attribute Syntax to be updated
        explode: false
        in: path
        name: attribute-syntax-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Attribute Syntax
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_attribute_syntax_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Attribute Syntax does not exist
      security:
      - basicAuth: []
      summary: Update an existing Attribute Syntax by name
      tags:
      - attribute-syntax
  /work-queue:
    get:
      operationId: get-work-queue
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/high-throughput-work-queue-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Work Queue does not exist
      security:
      - basicAuth: []
      summary: Returns a single Work Queue
      tags:
      - work-queue
    patch:
      operationId: update-work-queue
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Work Queue
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/high-throughput-work-queue-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Work Queue does not exist
      security:
      - basicAuth: []
      summary: Update an existing Work Queue by name
      tags:
      - work-queue
  /uncached-entry-criteria:
    post:
      operationId: add-uncached-entry-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_uncached_entry_criteria_request'
        description: Create a new Uncached Entry Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Uncached Entry Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Uncached Entry Criteria to the config
      tags:
      - uncached-entry-criteria
  /uncached-entry-criteria/{uncached-entry-criteria-name}:
    delete:
      operationId: delete-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be deleted
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
        "409":
          description: The Uncached Entry Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Uncached Entry Criteria
      tags:
      - uncached-entry-criteria
    get:
      operationId: get-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be read
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Uncached Entry Criteria
      tags:
      - uncached-entry-criteria
    patch:
      operationId: update-uncached-entry-criteria
      parameters:
      - description: Name of the Uncached Entry Criteria to be updated
        explode: false
        in: path
        name: uncached-entry-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Uncached Entry Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_uncached_entry_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Uncached Entry Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Uncached Entry Criteria by name
      tags:
      - uncached-entry-criteria
  /http-servlet-extensions:
    post:
      operationId: add-http-servlet-extension
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_http_servlet_extension_request'
        description: Create a new HTTP Servlet Extension in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_http_servlet_extension_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The HTTP Servlet Extension already exists
      security:
      - basicAuth: []
      summary: Add a new HTTP Servlet Extension to the config
      tags:
      - http-servlet-extension
  /http-servlet-extensions/{http-servlet-extension-name}:
    delete:
      operationId: delete-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension to be deleted
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Extension does not exist
        "409":
          description: The HTTP Servlet Extension cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a HTTP Servlet Extension
      tags:
      - http-servlet-extension
    get:
      operationId: get-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension to be read
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_http_servlet_extension_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Extension does not exist
      security:
      - basicAuth: []
      summary: Returns a single HTTP Servlet Extension
      tags:
      - http-servlet-extension
    patch:
      operationId: update-http-servlet-extension
      parameters:
      - description: Name of the HTTP Servlet Extension to be updated
        explode: false
        in: path
        name: http-servlet-extension-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Servlet Extension
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_http_servlet_extension_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Servlet Extension does not exist
      security:
      - basicAuth: []
      summary: Update an existing HTTP Servlet Extension by name
      tags:
      - http-servlet-extension
  /client-connection-policies:
    post:
      operationId: add-client-connection-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-client-connection-policy-request'
        description: Create a new Client Connection Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Client Connection Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Client Connection Policy to the config
      tags:
      - client-connection-policy
  /client-connection-policies/{client-connection-policy-name}:
    delete:
      operationId: delete-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy to be deleted
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Client Connection Policy does not exist
        "409":
          description: The Client Connection Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Client Connection Policy
      tags:
      - client-connection-policy
    get:
      operationId: get-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy to be read
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Client Connection Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Client Connection Policy
      tags:
      - client-connection-policy
    patch:
      operationId: update-client-connection-policy
      parameters:
      - description: Name of the Client Connection Policy to be updated
        explode: false
        in: path
        name: client-connection-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Client Connection Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/client-connection-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Client Connection Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Client Connection Policy by name
      tags:
      - client-connection-policy
  /matching-rules/{matching-rule-name}:
    get:
      operationId: get-matching-rule
      parameters:
      - description: Name of the Matching Rule to be read
        explode: false
        in: path
        name: matching-rule-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_matching_rule_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Matching Rule does not exist
      security:
      - basicAuth: []
      summary: Returns a single Matching Rule
      tags:
      - matching-rule
    patch:
      operationId: update-matching-rule
      parameters:
      - description: Name of the Matching Rule to be updated
        explode: false
        in: path
        name: matching-rule-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Matching Rule
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_matching_rule_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Matching Rule does not exist
      security:
      - basicAuth: []
      summary: Update an existing Matching Rule by name
      tags:
      - matching-rule
  /virtual-attributes:
    post:
      operationId: add-virtual-attribute
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_virtual_attribute_request'
        description: Create a new Virtual Attribute in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_virtual_attribute_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Virtual Attribute already exists
      security:
      - basicAuth: []
      summary: Add a new Virtual Attribute to the config
      tags:
      - virtual-attribute
  /virtual-attributes/{virtual-attribute-name}:
    delete:
      operationId: delete-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute to be deleted
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Virtual Attribute does not exist
        "409":
          description: The Virtual Attribute cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Virtual Attribute
      tags:
      - virtual-attribute
    get:
      operationId: get-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute to be read
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_virtual_attribute_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Virtual Attribute does not exist
      security:
      - basicAuth: []
      summary: Returns a single Virtual Attribute
      tags:
      - virtual-attribute
    patch:
      operationId: update-virtual-attribute
      parameters:
      - description: Name of the Virtual Attribute to be updated
        explode: false
        in: path
        name: virtual-attribute-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Virtual Attribute
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_virtual_attribute_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Virtual Attribute does not exist
      security:
      - basicAuth: []
      summary: Update an existing Virtual Attribute by name
      tags:
      - virtual-attribute
  /notification-managers:
    post:
      operationId: add-notification-manager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-third-party-notification-manager-request'
        description: Create a new Notification Manager in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Notification Manager already exists
      security:
      - basicAuth: []
      summary: Add a new Notification Manager to the config
      tags:
      - notification-manager
  /notification-managers/{notification-manager-name}:
    delete:
      operationId: delete-notification-manager
      parameters:
      - description: Name of the Notification Manager to be deleted
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
        "409":
          description: The Notification Manager cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Notification Manager
      tags:
      - notification-manager
    get:
      operationId: get-notification-manager
      parameters:
      - description: Name of the Notification Manager to be read
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      summary: Returns a single Notification Manager
      tags:
      - notification-manager
    patch:
      operationId: update-notification-manager
      parameters:
      - description: Name of the Notification Manager to be updated
        explode: false
        in: path
        name: notification-manager-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Notification Manager
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/third-party-notification-manager-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Notification Manager does not exist
      security:
      - basicAuth: []
      summary: Update an existing Notification Manager by name
      tags:
      - notification-manager
  /result-criteria:
    post:
      operationId: add-result-criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_result_criteria_request'
        description: Create a new Result Criteria in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_result_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Result Criteria already exists
      security:
      - basicAuth: []
      summary: Add a new Result Criteria to the config
      tags:
      - result-criteria
  /result-criteria/{result-criteria-name}:
    delete:
      operationId: delete-result-criteria
      parameters:
      - description: Name of the Result Criteria to be deleted
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Criteria does not exist
        "409":
          description: The Result Criteria cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Result Criteria
      tags:
      - result-criteria
    get:
      operationId: get-result-criteria
      parameters:
      - description: Name of the Result Criteria to be read
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_result_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Result Criteria does not exist
      security:
      - basicAuth: []
      summary: Returns a single Result Criteria
      tags:
      - result-criteria
    patch:
      operationId: update-result-criteria
      parameters:
      - description: Name of the Result Criteria to be updated
        explode: false
        in: path
        name: result-criteria-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Result Criteria
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_result_criteria_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Result Criteria does not exist
      security:
      - basicAuth: []
      summary: Update an existing Result Criteria by name
      tags:
      - result-criteria
  /identity-mappers:
    post:
      operationId: add-identity-mapper
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_identity_mapper_request'
        description: Create a new Identity Mapper in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_identity_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Identity Mapper already exists
      security:
      - basicAuth: []
      summary: Add a new Identity Mapper to the config
      tags:
      - identity-mapper
  /identity-mappers/{identity-mapper-name}:
    delete:
      operationId: delete-identity-mapper
      parameters:
      - description: Name of the Identity Mapper to be deleted
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Identity Mapper does not exist
        "409":
          description: The Identity Mapper cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Identity Mapper
      tags:
      - identity-mapper
    get:
      operationId: get-identity-mapper
      parameters:
      - description: Name of the Identity Mapper to be read
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_identity_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Identity Mapper does not exist
      security:
      - basicAuth: []
      summary: Returns a single Identity Mapper
      tags:
      - identity-mapper
    patch:
      operationId: update-identity-mapper
      parameters:
      - description: Name of the Identity Mapper to be updated
        explode: false
        in: path
        name: identity-mapper-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Identity Mapper
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_identity_mapper_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Identity Mapper does not exist
      security:
      - basicAuth: []
      summary: Update an existing Identity Mapper by name
      tags:
      - identity-mapper
  /recurring-tasks:
    post:
      operationId: add-recurring-task
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_recurring_task_request'
        description: Create a new Recurring Task in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_recurring_task_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Recurring Task already exists
      security:
      - basicAuth: []
      summary: Add a new Recurring Task to the config
      tags:
      - recurring-task
  /recurring-tasks/{recurring-task-name}:
    delete:
      operationId: delete-recurring-task
      parameters:
      - description: Name of the Recurring Task to be deleted
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task does not exist
        "409":
          description: The Recurring Task cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Recurring Task
      tags:
      - recurring-task
    get:
      operationId: get-recurring-task
      parameters:
      - description: Name of the Recurring Task to be read
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_recurring_task_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Recurring Task does not exist
      security:
      - basicAuth: []
      summary: Returns a single Recurring Task
      tags:
      - recurring-task
    patch:
      operationId: update-recurring-task
      parameters:
      - description: Name of the Recurring Task to be updated
        explode: false
        in: path
        name: recurring-task-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Recurring Task
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_recurring_task_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Recurring Task does not exist
      security:
      - basicAuth: []
      summary: Update an existing Recurring Task by name
      tags:
      - recurring-task
  /rest-resource-types:
    post:
      operationId: add-rest-resource-type
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_rest_resource_type_request'
        description: Create a new REST Resource Type in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_rest_resource_type_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The REST Resource Type already exists
      security:
      - basicAuth: []
      summary: Add a new REST Resource Type to the config
      tags:
      - rest-resource-type
  /rest-resource-types/{rest-resource-type-name}:
    delete:
      operationId: delete-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type to be deleted
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
        "409":
          description: The REST Resource Type cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a REST Resource Type
      tags:
      - rest-resource-type
    get:
      operationId: get-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type to be read
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_rest_resource_type_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      summary: Returns a single REST Resource Type
      tags:
      - rest-resource-type
    patch:
      operationId: update-rest-resource-type
      parameters:
      - description: Name of the REST Resource Type to be updated
        explode: false
        in: path
        name: rest-resource-type-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing REST Resource Type
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_rest_resource_type_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The REST Resource Type does not exist
      security:
      - basicAuth: []
      summary: Update an existing REST Resource Type by name
      tags:
      - rest-resource-type
  /sasl-mechanism-handlers:
    post:
      operationId: add-sasl-mechanism-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_sasl_mechanism_handler_request'
        description: Create a new SASL Mechanism Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_sasl_mechanism_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SASL Mechanism Handler already exists
      security:
      - basicAuth: []
      summary: Add a new SASL Mechanism Handler to the config
      tags:
      - sasl-mechanism-handler
  /sasl-mechanism-handlers/{sasl-mechanism-handler-name}:
    delete:
      operationId: delete-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler to be deleted
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SASL Mechanism Handler does not exist
        "409":
          description: The SASL Mechanism Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a SASL Mechanism Handler
      tags:
      - sasl-mechanism-handler
    get:
      operationId: get-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler to be read
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_sasl_mechanism_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SASL Mechanism Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single SASL Mechanism Handler
      tags:
      - sasl-mechanism-handler
    patch:
      operationId: update-sasl-mechanism-handler
      parameters:
      - description: Name of the SASL Mechanism Handler to be updated
        explode: false
        in: path
        name: sasl-mechanism-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SASL Mechanism Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_sasl_mechanism_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SASL Mechanism Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing SASL Mechanism Handler by name
      tags:
      - sasl-mechanism-handler
  /data-security-auditors:
    post:
      operationId: add-data-security-auditor
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_data_security_auditor_request'
        description: Create a new Data Security Auditor in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_data_security_auditor_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Data Security Auditor already exists
      security:
      - basicAuth: []
      summary: Add a new Data Security Auditor to the config
      tags:
      - data-security-auditor
  /data-security-auditors/{data-security-auditor-name}:
    delete:
      operationId: delete-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor to be deleted
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
        "409":
          description: The Data Security Auditor cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Data Security Auditor
      tags:
      - data-security-auditor
    get:
      operationId: get-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor to be read
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_data_security_auditor_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      summary: Returns a single Data Security Auditor
      tags:
      - data-security-auditor
    patch:
      operationId: update-data-security-auditor
      parameters:
      - description: Name of the Data Security Auditor to be updated
        explode: false
        in: path
        name: data-security-auditor-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Data Security Auditor
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_data_security_auditor_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Data Security Auditor does not exist
      security:
      - basicAuth: []
      summary: Update an existing Data Security Auditor by name
      tags:
      - data-security-auditor
  /monitoring-endpoints:
    post:
      operationId: add-monitoring-endpoint
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-statsd-monitoring-endpoint-request'
        description: Create a new Monitoring Endpoint in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Monitoring Endpoint already exists
      security:
      - basicAuth: []
      summary: Add a new Monitoring Endpoint to the config
      tags:
      - monitoring-endpoint
  /monitoring-endpoints/{monitoring-endpoint-name}:
    delete:
      operationId: delete-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint to be deleted
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitoring Endpoint does not exist
        "409":
          description: The Monitoring Endpoint cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Monitoring Endpoint
      tags:
      - monitoring-endpoint
    get:
      operationId: get-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint to be read
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Monitoring Endpoint does not exist
      security:
      - basicAuth: []
      summary: Returns a single Monitoring Endpoint
      tags:
      - monitoring-endpoint
    patch:
      operationId: update-monitoring-endpoint
      parameters:
      - description: Name of the Monitoring Endpoint to be updated
        explode: false
        in: path
        name: monitoring-endpoint-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Monitoring Endpoint
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/statsd-monitoring-endpoint-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Monitoring Endpoint does not exist
      security:
      - basicAuth: []
      summary: Update an existing Monitoring Endpoint by name
      tags:
      - monitoring-endpoint
  /password-storage-schemes:
    post:
      operationId: add-password-storage-scheme
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_password_storage_scheme_request'
        description: Create a new Password Storage Scheme in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_password_storage_scheme_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Password Storage Scheme already exists
      security:
      - basicAuth: []
      summary: Add a new Password Storage Scheme to the config
      tags:
      - password-storage-scheme
  /password-storage-schemes/{password-storage-scheme-name}:
    delete:
      operationId: delete-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be deleted
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
        "409":
          description: The Password Storage Scheme cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Password Storage Scheme
      tags:
      - password-storage-scheme
    get:
      operationId: get-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be read
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_password_storage_scheme_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      summary: Returns a single Password Storage Scheme
      tags:
      - password-storage-scheme
    patch:
      operationId: update-password-storage-scheme
      parameters:
      - description: Name of the Password Storage Scheme to be updated
        explode: false
        in: path
        name: password-storage-scheme-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Password Storage Scheme
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/get_password_storage_scheme_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Password Storage Scheme does not exist
      security:
      - basicAuth: []
      summary: Update an existing Password Storage Scheme by name
      tags:
      - password-storage-scheme
  /http-configuration:
    get:
      operationId: get-http-configuration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-configuration-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Configuration does not exist
      security:
      - basicAuth: []
      summary: Returns a single HTTP Configuration
      tags:
      - http-configuration
    patch:
      operationId: update-http-configuration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Configuration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-configuration-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Configuration does not exist
      security:
      - basicAuth: []
      summary: Update an existing HTTP Configuration by name
      tags:
      - http-configuration
  /json-attribute-constraints:
    post:
      operationId: add-json-attribute-constraints
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-json-attribute-constraints-request'
        description: Create a new JSON Attribute Constraints in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The JSON Attribute Constraints already exists
      security:
      - basicAuth: []
      summary: Add a new JSON Attribute Constraints to the config
      tags:
      - json-attribute-constraints
  /json-attribute-constraints/{json-attribute-constraints-name}:
    delete:
      operationId: delete-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints to be deleted
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Attribute Constraints does not exist
        "409":
          description: The JSON Attribute Constraints cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a JSON Attribute Constraints
      tags:
      - json-attribute-constraints
    get:
      operationId: get-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints to be read
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The JSON Attribute Constraints does not exist
      security:
      - basicAuth: []
      summary: Returns a single JSON Attribute Constraints
      tags:
      - json-attribute-constraints
    patch:
      operationId: update-json-attribute-constraints
      parameters:
      - description: Name of the JSON Attribute Constraints to be updated
        explode: false
        in: path
        name: json-attribute-constraints-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing JSON Attribute Constraints
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/json-attribute-constraints-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The JSON Attribute Constraints does not exist
      security:
      - basicAuth: []
      summary: Update an existing JSON Attribute Constraints by name
      tags:
      - json-attribute-constraints
  /http-servlet-cross-origin-policies:
    post:
      operationId: add-http-servlet-cross-origin-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-http-servlet-cross-origin-policy-request'
        description: Create a new HTTP Servlet Cross Origin Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The HTTP Servlet Cross Origin Policy already exists
      security:
      - basicAuth: []
      summary: Add a new HTTP Servlet Cross Origin Policy to the config
      tags:
      - http-servlet-cross-origin-policy
  /http-servlet-cross-origin-policies/{http-servlet-cross-origin-policy-name}:
    delete:
      operationId: delete-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy to be deleted
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
        "409":
          description: The HTTP Servlet Cross Origin Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a HTTP Servlet Cross Origin Policy
      tags:
      - http-servlet-cross-origin-policy
    get:
      operationId: get-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy to be read
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single HTTP Servlet Cross Origin Policy
      tags:
      - http-servlet-cross-origin-policy
    patch:
      operationId: update-http-servlet-cross-origin-policy
      parameters:
      - description: Name of the HTTP Servlet Cross Origin Policy to be updated
        explode: false
        in: path
        name: http-servlet-cross-origin-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing HTTP Servlet Cross Origin Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/http-servlet-cross-origin-policy-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The HTTP Servlet Cross Origin Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing HTTP Servlet Cross Origin Policy by name
      tags:
      - http-servlet-cross-origin-policy
  /delegated-admin-attribute-categories:
    post:
      operationId: add-delegated-admin-attribute-category
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-delegated-admin-attribute-category-request'
        description: Create a new Delegated Admin Attribute Category in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Delegated Admin Attribute Category already exists
      security:
      - basicAuth: []
      summary: Add a new Delegated Admin Attribute Category to the config
      tags:
      - delegated-admin-attribute-category
  /delegated-admin-attribute-categories/{delegated-admin-attribute-category-name}:
    delete:
      operationId: delete-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category to be deleted
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute Category does not exist
        "409":
          description: The Delegated Admin Attribute Category cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Delegated Admin Attribute Category
      tags:
      - delegated-admin-attribute-category
    get:
      operationId: get-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category to be read
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Delegated Admin Attribute Category does not exist
      security:
      - basicAuth: []
      summary: Returns a single Delegated Admin Attribute Category
      tags:
      - delegated-admin-attribute-category
    patch:
      operationId: update-delegated-admin-attribute-category
      parameters:
      - description: Name of the Delegated Admin Attribute Category to be updated
        explode: false
        in: path
        name: delegated-admin-attribute-category-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Delegated Admin Attribute Category
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/delegated-admin-attribute-category-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Delegated Admin Attribute Category does not exist
      security:
      - basicAuth: []
      summary: Update an existing Delegated Admin Attribute Category by name
      tags:
      - delegated-admin-attribute-category
  /scim-schemas:
    post:
      operationId: add-scim-schema
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-scim-schema-request'
        description: Create a new SCIM Schema in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The SCIM Schema already exists
      security:
      - basicAuth: []
      summary: Add a new SCIM Schema to the config
      tags:
      - scim-schema
  /scim-schemas/{scim-schema-name}:
    delete:
      operationId: delete-scim-schema
      parameters:
      - description: Name of the SCIM Schema to be deleted
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Schema does not exist
        "409":
          description: The SCIM Schema cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a SCIM Schema
      tags:
      - scim-schema
    get:
      operationId: get-scim-schema
      parameters:
      - description: Name of the SCIM Schema to be read
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The SCIM Schema does not exist
      security:
      - basicAuth: []
      summary: Returns a single SCIM Schema
      tags:
      - scim-schema
    patch:
      operationId: update-scim-schema
      parameters:
      - description: Name of the SCIM Schema to be updated
        explode: false
        in: path
        name: scim-schema-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing SCIM Schema
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/scim-schema-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The SCIM Schema does not exist
      security:
      - basicAuth: []
      summary: Update an existing SCIM Schema by name
      tags:
      - scim-schema
  /locations:
    post:
      operationId: add-location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add-location-request'
        description: Create a new Location in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Location already exists
      security:
      - basicAuth: []
      summary: Add a new Location to the config
      tags:
      - location
  /locations/{location-name}:
    delete:
      operationId: delete-location
      parameters:
      - description: Name of the Location to be deleted
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Location does not exist
        "409":
          description: The Location cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Location
      tags:
      - location
    get:
      operationId: get-location
      parameters:
      - description: Name of the Location to be read
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Location does not exist
      security:
      - basicAuth: []
      summary: Returns a single Location
      tags:
      - location
    patch:
      operationId: update-location
      parameters:
      - description: Name of the Location to be updated
        explode: false
        in: path
        name: location-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Location
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/location-response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Location does not exist
      security:
      - basicAuth: []
      summary: Update an existing Location by name
      tags:
      - location
  /log-retention-policies:
    post:
      operationId: add-log-retention-policy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_log_retention_policy_request'
        description: Create a new Log Retention Policy in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_retention_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The Log Retention Policy already exists
      security:
      - basicAuth: []
      summary: Add a new Log Retention Policy to the config
      tags:
      - log-retention-policy
  /log-retention-policies/{log-retention-policy-name}:
    delete:
      operationId: delete-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy to be deleted
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Retention Policy does not exist
        "409":
          description: The Log Retention Policy cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a Log Retention Policy
      tags:
      - log-retention-policy
    get:
      operationId: get-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy to be read
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_retention_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The Log Retention Policy does not exist
      security:
      - basicAuth: []
      summary: Returns a single Log Retention Policy
      tags:
      - log-retention-policy
    patch:
      operationId: update-log-retention-policy
      parameters:
      - description: Name of the Log Retention Policy to be updated
        explode: false
        in: path
        name: log-retention-policy-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing Log Retention Policy
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_log_retention_policy_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The Log Retention Policy does not exist
      security:
      - basicAuth: []
      summary: Update an existing Log Retention Policy by name
      tags:
      - log-retention-policy
  /oauth-token-handlers:
    post:
      operationId: add-oauth-token-handler
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/add_oauth_token_handler_request'
        description: Create a new OAuth Token Handler in the config
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_oauth_token_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Bad request
        "409":
          description: The OAuth Token Handler already exists
      security:
      - basicAuth: []
      summary: Add a new OAuth Token Handler to the config
      tags:
      - oauth-token-handler
  /oauth-token-handlers/{oauth-token-handler-name}:
    delete:
      operationId: delete-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be deleted
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
        "409":
          description: The OAuth Token Handler cannot be deleted
      security:
      - basicAuth: []
      summary: Delete a OAuth Token Handler
      tags:
      - oauth-token-handler
    get:
      operationId: get-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be read
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_oauth_token_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      summary: Returns a single OAuth Token Handler
      tags:
      - oauth-token-handler
    patch:
      operationId: update-oauth-token-handler
      parameters:
      - description: Name of the OAuth Token Handler to be updated
        explode: false
        in: path
        name: oauth-token-handler-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/updateRequest'
        description: Update an existing OAuth Token Handler
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/add_oauth_token_handler_200_response'
          description: Successful operation
        "401":
          description: Requestor cannot be authenticated
        "403":
          description: Requestor does not have the required privileges
        "400":
          description: Invalid request
        "404":
          description: The OAuth Token Handler does not exist
      security:
      - basicAuth: []
      summary: Update an existing OAuth Token Handler by name
      tags:
      - oauth-token-handler
components:
  schemas:
    global-configuration-response:
      example:
        replicationBacklogDurationAlertThreshold: replicationBacklogDurationAlertThreshold
        maxSMTPConnectionAge: maxSMTPConnectionAge
        encryptBackupsByDefault: true
        attributesModifiableWithIgnoreNoUserModificationRequestControl:
        - null
        - null
        startupErrorLoggerOutputLocation: null
        redactSensitiveValuesInConfigLogs: true
        ldifExportEncryptionSettingsDefinitionID: ldifExportEncryptionSettingsDefinitionID
        automaticallyCompressEncryptedLDIFExports: true
        defaultInternalOperationClientConnectionPolicy: defaultInternalOperationClientConnectionPolicy
        maximumConcurrentConnections: 5
        maximumConcurrentConnectionsPerIPAddress: 2
        maximumAttributesPerAddRequest: 3
        allowInsecureLocalJMXConnections: true
        allowedInsecureRequestCriteria: allowedInsecureRequestCriteria
        proxiedAuthorizationIdentityMapper: proxiedAuthorizationIdentityMapper
        backgroundThreadForEachPersistentSearch: true
        backupEncryptionSettingsDefinitionID: backupEncryptionSettingsDefinitionID
        invalidAttributeSyntaxBehavior: null
        unrecoverableDatabaseErrorMode: null
        autoNameWithEntryUUIDConnectionCriteria: autoNameWithEntryUUIDConnectionCriteria
        rejectUnauthenticatedRequests: true
        replicationPurgeObsoleteReplicas: true
        maximumModificationsPerModifyRequest: 2
        replicationSetName: replicationSetName
        warnForBackendsWithMultipleBaseDns: true
        autoNameWithEntryUUIDRequestCriteria: autoNameWithEntryUUIDRequestCriteria
        resultCodeMap: resultCodeMap
        disabledPrivilege:
        - null
        - null
        sizeLimit: 6
        databaseOnVirtualizedOrNetworkStorage: true
        jmxUseLegacyMbeanNames: true
        forcedGCPrimeDuration: forcedGCPrimeDuration
        schemas:
        - null
        sensitiveAttribute:
        - sensitiveAttribute
        - sensitiveAttribute
        allowedUnauthenticatedRequestCriteria: allowedUnauthenticatedRequestCriteria
        forceAsMasterForMirroredData: true
        duplicateAlertTimeLimit: duplicateAlertTimeLimit
        allowedInsecureTLSProtocol:
        - null
        - null
        duplicateAlertLimit: 1
        allowInheritedReplicationOfSubordinateBackends: true
        networkAddressCacheTTL: networkAddressCacheTTL
        startupMinReplicationBacklogCount: 1
        instanceName: instanceName
        duplicateErrorLogTimeLimit: duplicateErrorLogTimeLimit
        ldapJoinSizeLimit: 5
        duplicateErrorLogLimit: 1
        networkAddressOutageCacheEnabled: true
        allowAttributeNameExceptions: true
        replicationAssuranceSourceTimeoutSuspendDuration: replicationAssuranceSourceTimeoutSuspendDuration
        permitSyntaxViolationsForAttribute:
        - permitSyntaxViolationsForAttribute
        - permitSyntaxViolationsForAttribute
        singleStructuralObjectclassBehavior: null
        subtreeAccessibilityAlertTimeLimit: subtreeAccessibilityAlertTimeLimit
        idleTimeLimit: idleTimeLimit
        lookthroughLimit: 1
        configurationServerGroup: configurationServerGroup
        encryptData: true
        notifyAbandonedOperations: true
        bindWithDNRequiresPassword: true
        maximumConcurrentConnectionsPerBindDN: 7
        jmxValueBehavior: null
        allowedTask:
        - allowedTask
        - allowedTask
        enableSubOperationTimer: true
        writabilityMode: null
        maximumConcurrentUnindexedSearches: 9
        maximumServerOutLogFileSize: maximumServerOutLogFileSize
        maxSMTPConnectionCount: 4
        encryptLDIFExportsByDefault: true
        timeLimit: timeLimit
        verifyEntryDigests: true
        rejectInsecureRequests: true
        maximumServerOutLogFileCount: 4
        smtpServer:
        - smtpServer
        - smtpServer
        trackedApplication:
        - trackedApplication
        - trackedApplication
        exitOnJVMError: true
        serverErrorResultCode: 7
        replicationHistoryLimit: 1
        location: location
        softDeletePolicy: softDeletePolicy
        encryptionSettingsCipherStreamProvider: encryptionSettingsCipherStreamProvider
        returnBindErrorMessages: true
        replicationAssuranceSourceBacklogFastStartThreshold: 7
        smtpConnectionHealthCheckInterval: smtpConnectionHealthCheckInterval
        maximumUserDataPasswordPoliciesToCache: 0
        defaultPasswordPolicy: defaultPasswordPolicy
        replicationBacklogCountAlertThreshold: 6
        maximumShutdownTime: maximumShutdownTime
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumglobal-configurationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        instanceName:
          description: Specifies a name that may be used to uniquely identify this
            Directory Server instance among other instances in the environment.
          type: string
        location:
          description: Specifies the location for this Directory Server. Operations
            performed which involve communication with other servers may prefer servers
            in the same location to help ensure low-latency responses.
          type: string
        configurationServerGroup:
          description: "When this property is set, changes made to this server using\
            \ the console or dsconfig can be automatically applied to all servers\
            \ in the specified server group."
          type: string
        forceAsMasterForMirroredData:
          description: "Indicates whether this server should be forced to assume the\
            \ master role if no other suitable server is found to act as master or\
            \ if multiple masters are detected. A master is only needed when changes\
            \ are made to mirrored data, i.e. data specific to the topology itself\
            \ and cluster-wide configuration data."
          type: boolean
        encryptData:
          description: "Indicates whether the Directory Server should encrypt the\
            \ data that it stores in all components that support it. This may include\
            \ certain types of backends (including local DB and large attribute backends),\
            \ the LDAP changelog, and the replication server database."
          type: boolean
        encryptionSettingsCipherStreamProvider:
          description: Specifies the cipher stream provider that should be used to
            protect the contents of the encryption settings database.
          type: string
        encryptBackupsByDefault:
          description: Indicates whether the server should encrypt backups by default.
          type: boolean
        backupEncryptionSettingsDefinitionID:
          description: The unique identifier for the encryption settings definition
            to use to generate the encryption key for encrypted backups by default.
          type: string
        encryptLDIFExportsByDefault:
          description: Indicates whether the server should encrypt LDIF exports by
            default.
          type: boolean
        ldifExportEncryptionSettingsDefinitionID:
          description: The unique identifier for the encryption settings definition
            to use to generate the encryption key for encrypted LDIF exports by default.
          type: string
        automaticallyCompressEncryptedLDIFExports:
          description: Indicates whether to automatically compress LDIF exports that
            are also encrypted.
          type: boolean
        redactSensitiveValuesInConfigLogs:
          description: "Indicates whether the values of sensitive configuration properties\
            \ should be redacted when logging configuration changes, including in\
            \ the configuration audit log, the error log, and the server.out log file."
          type: boolean
        sensitiveAttribute:
          items:
            description: Provides the ability to indicate that some attributes should
              be considered sensitive and additional protection should be in place
              when interacting with those attributes.
            type: string
          type: array
        rejectInsecureRequests:
          description: Indicates whether the Directory Server should reject any LDAP
            request (other than StartTLS) received from a client that is not using
            an encrypted connection.
          type: boolean
        allowedInsecureRequestCriteria:
          description: "A set of criteria that may be used to match LDAP requests\
            \ that may be permitted over an insecure connection even if reject-insecure-requests\
            \ is true. Note that some types of requests will always be permitted,\
            \ including StartTLS and start administrative session requests."
          type: string
        rejectUnauthenticatedRequests:
          description: "Indicates whether the Directory Server should reject any LDAP\
            \ request (other than bind or StartTLS requests) received from a client\
            \ that has not yet been authenticated, whose last authentication attempt\
            \ was unsuccessful, or whose last authentication attempt used anonymous\
            \ authentication."
          type: boolean
        allowedUnauthenticatedRequestCriteria:
          description: "A set of criteria that may be used to match LDAP requests\
            \ that may be permitted over an unauthenticated connection even if reject-unauthenticated-requests\
            \ is true. Note that some types of requests will always be permitted,\
            \ including bind, StartTLS, and start administrative session requests."
          type: string
        bindWithDNRequiresPassword:
          description: Indicates whether the Directory Server should reject any simple
            bind request that contains a DN but no password.
          type: boolean
        disabledPrivilege:
          items:
            $ref: '#/components/schemas/Enumglobal-configuration-disabledPrivilegeProp'
          type: array
        defaultPasswordPolicy:
          description: Specifies the name of the password policy that is in effect
            for users whose entries do not specify an alternate password policy (either
            via a real or virtual attribute).
          type: string
        maximumUserDataPasswordPoliciesToCache:
          description: "Specifies the maximum number of password policies that are\
            \ defined in the user data (that is, outside of the configuration) that\
            \ the server should cache in memory for faster access. A value of zero\
            \ indicates that the server should not cache any user data password policies."
          type: integer
        proxiedAuthorizationIdentityMapper:
          description: Specifies the name of the identity mapper to map authorization
            ID values (using the "u:" form) provided in the proxied authorization
            control to the corresponding user entry.
          type: string
        verifyEntryDigests:
          description: "Indicates whether the digest should always be verified whenever\
            \ an entry containing a digest is decoded. If this is \"true\", then if\
            \ a digest exists, it will always be verified. Otherwise, the digest will\
            \ be written when encoding entries but ignored when decoding entries but\
            \ may still be available for other verification processing."
          type: boolean
        allowedInsecureTLSProtocol:
          items:
            $ref: '#/components/schemas/Enumglobal-configuration-allowedInsecureTLSProtocolProp'
          type: array
        allowInsecureLocalJMXConnections:
          description: Indicates that processes attaching to this server's local JVM
            are allowed to access internal data through JMX without the authentication
            requirements that remote JMX connections are subject to. Please review
            and understand the data that this option will expose (such as cn=monitor)
            to client applications to ensure there are no security concerns.
          type: boolean
        defaultInternalOperationClientConnectionPolicy:
          description: Specifies the client connection policy that will be used by
            default for internal operations.
          type: string
        sizeLimit:
          description: Specifies the maximum number of entries that the Directory
            Server should return to the client during a search operation.
          type: integer
        timeLimit:
          description: Specifies the maximum length of time that the Directory Server
            should be allowed to spend processing a search operation.
          type: string
        idleTimeLimit:
          description: Specifies the maximum length of time that a client connection
            may remain established since its last completed operation.
          type: string
        lookthroughLimit:
          description: Specifies the maximum number of entries that the Directory
            Server should "look through" in the course of processing a search request.
          type: integer
        ldapJoinSizeLimit:
          description: Specifies the maximum number of entries that may be directly
            joined with any individual search result entry.
          type: integer
        maximumConcurrentConnections:
          description: Specifies the maximum number of LDAP client connections which
            may be established to this Directory Server at the same time.
          type: integer
        maximumConcurrentConnectionsPerIPAddress:
          description: Specifies the maximum number of LDAP client connections originating
            from the same IP address which may be established to this Directory Server
            at the same time.
          type: integer
        maximumConcurrentConnectionsPerBindDN:
          description: Specifies the maximum number of LDAP client connections which
            may be established to this Directory Server at the same time and authenticated
            as the same user.
          type: integer
        maximumConcurrentUnindexedSearches:
          description: Specifies the maximum number of unindexed searches that may
            be in progress in this backend at any given time. Any unindexed searches
            requested while the maximum number of unindexed searches are already being
            processed will be rejected. A value of zero indicates that no limit will
            be enforced.
          type: integer
        maximumAttributesPerAddRequest:
          description: Specifies the maximum number of attributes that may be included
            in an add request. This property does not impose any limit on the number
            of values that an attribute may have.
          type: integer
        maximumModificationsPerModifyRequest:
          description: Specifies the maximum number of modifications that may be included
            in a modify request. This property does not impose any limit on the number
            of attribute values that a modification may have.
          type: integer
        backgroundThreadForEachPersistentSearch:
          description: Indicates whether the server should use a separate background
            thread for each persistent search.
          type: boolean
        allowAttributeNameExceptions:
          description: Indicates whether the Directory Server should allow underscores
            in attribute names and allow attribute names to begin with numeric digits
            (both of which are violations of the LDAP standards).
          type: boolean
        invalidAttributeSyntaxBehavior:
          $ref: '#/components/schemas/Enumglobal-configuration-invalidAttributeSyntaxBehaviorProp'
        permitSyntaxViolationsForAttribute:
          items:
            description: Specifies a set of attribute types for which the server will
              permit values that do not conform to the associated attribute syntax.
            type: string
          type: array
        singleStructuralObjectclassBehavior:
          $ref: '#/components/schemas/Enumglobal-configuration-singleStructuralObjectclassBehaviorProp'
        attributesModifiableWithIgnoreNoUserModificationRequestControl:
          items:
            $ref: '#/components/schemas/Enumglobal-configuration-attributesModifiableWithIgnoreNoUserModificationRequestControlProp'
          type: array
        maximumServerOutLogFileSize:
          description: "The maximum allowed size that the server.out log file will\
            \ be allowed to have. If a write would cause the file to exceed this size,\
            \ then the current file will be rotated out of place and a new empty file\
            \ will be created and the message written to it."
          type: string
        maximumServerOutLogFileCount:
          description: "The maximum number of server.out log files (including the\
            \ current active log file) that should be retained. When rotating the\
            \ log file, if the total number of files exceeds this count, then the\
            \ oldest file(s) will be removed so that the total number of log files\
            \ is within this limit."
          type: integer
        startupErrorLoggerOutputLocation:
          $ref: '#/components/schemas/Enumglobal-configuration-startupErrorLoggerOutputLocationProp'
        exitOnJVMError:
          description: "Indicates whether the Directory Server should be shut down\
            \ if a severe error is raised (e.g., an out of memory error) which may\
            \ prevent the JVM from continuing to run properly."
          type: boolean
        serverErrorResultCode:
          description: Specifies the numeric value of the result code when request
            processing fails due to an internal server error.
          type: integer
        resultCodeMap:
          description: "Specifies a result code map that should be used for clients\
            \ that do not have a map associated with their client connection policy.\
            \ If the associated client connection policy has a result code map, then\
            \ that map will be used instead. If no map is associated either with the\
            \ client connection policy or the global configuration, then an internal\
            \ default will be used."
          type: string
        returnBindErrorMessages:
          description: Indicates whether responses for failed bind operations should
            include a message string providing the reason for the authentication failure.
          type: boolean
        notifyAbandonedOperations:
          description: Indicates whether the Directory Server should send a response
            to any operation that is interrupted via an abandon request.
          type: boolean
        duplicateErrorLogLimit:
          description: Specifies the maximum number of duplicate error log messages
            that should be logged in the time window specified by the duplicate-error-log-time-limit
            property.
          type: integer
        duplicateErrorLogTimeLimit:
          description: Specifies the length of time that must expire before duplicate
            log messages above the duplicate-error-log-limit threshold are logged
            again to the error log.
          type: string
        duplicateAlertLimit:
          description: Specifies the maximum number of duplicate alert messages that
            should be sent via the administrative alert framework in the time window
            specified by the duplicate-alert-time-limit property.
          type: integer
        duplicateAlertTimeLimit:
          description: Specifies the length of time that must expire before duplicate
            messages are sent via the administrative alert framework.
          type: string
        writabilityMode:
          $ref: '#/components/schemas/Enumglobal-configuration-writabilityModeProp'
        unrecoverableDatabaseErrorMode:
          $ref: '#/components/schemas/Enumglobal-configuration-unrecoverableDatabaseErrorModeProp'
        databaseOnVirtualizedOrNetworkStorage:
          description: "This setting provides data integrity options when the Directory\
            \ Server is installed with a database on a network storage device. A storage\
            \ device may be accessed directly by a physical server, or indirectly\
            \ through a virtual machine running on a hypervisor. Enabling this setting\
            \ will apply changes to all Local DB Backends, the LDAP Changelog Backend,\
            \ and the replication changelog database."
          type: boolean
        autoNameWithEntryUUIDConnectionCriteria:
          description: Connection criteria that may be used to identify clients whose
            add requests should use entryUUID as the naming attribute.
          type: string
        autoNameWithEntryUUIDRequestCriteria:
          description: Request criteria that may be used to identify add requests
            that should use entryUUID as the naming attribute.
          type: string
        softDeletePolicy:
          description: "Specifies the soft delete policy that will be used by default\
            \ for delete operations. Soft delete operations introduce the ability\
            \ to control the server behavior of the delete operation. Instead of performing\
            \ a permanent delete of an entry, deleted entries can be retained as soft\
            \ deleted entries by their entryUUID values and are available for undelete\
            \ at a later time. In addition to a soft delete policy enabling soft deletes,\
            \ delete operations sent to the server must have the soft delete request\
            \ control present with sufficient access privileges to access the soft\
            \ delete request control."
          type: string
        subtreeAccessibilityAlertTimeLimit:
          description: Specifies the length of time that a subtree may remain hidden
            or read-only before an administrative alert is sent.
          type: string
        warnForBackendsWithMultipleBaseDns:
          description: Indicates whether the server should issue a warning when enabling
            a backend that contains multiple base DNs.
          type: boolean
        forcedGCPrimeDuration:
          description: Specifies the minimum length of time required for backend or
            request processor initialization that will trigger the server to force
            an explicit garbage collection. A value of "0 seconds" indicates that
            the server should never invoke an explicit garbage collection regardless
            of the length of time required to initialize the server backends.
          type: string
        replicationSetName:
          description: The name of the replication set assigned to this Directory
            Server. Restricted domains are only replicated within instances using
            the same replication set name.
          type: string
        startupMinReplicationBacklogCount:
          description: "The number of outstanding changes any replica can have before\
            \ the Directory Server will start accepting connections. The Directory\
            \ Server may never accept connections if this setting is too low. If you\
            \ are unsure which value to use, you can use the number of expected updates\
            \ within a five second interval."
          type: integer
        replicationBacklogCountAlertThreshold:
          description: An alert is sent when the number of outstanding replication
            changes for the Directory Server has exceeded this threshold for longer
            than the replication backlog duration alert threshold.
          type: integer
        replicationBacklogDurationAlertThreshold:
          description: An alert is sent when the number of outstanding replication
            changes for the Directory Server has exceeded the replication backlog
            count alert threshold for longer than this duration.
          type: string
        replicationAssuranceSourceTimeoutSuspendDuration:
          description: The amount of time a replication assurance source (i.e. a peer
            Directory Server) will be suspended from assurance requirements on this
            Directory Server if it experiences an assurance timeout.
          type: string
        replicationAssuranceSourceBacklogFastStartThreshold:
          description: The maximum number of replication backlog updates a replication
            assurance source (i.e. a peer Directory Server) can have and be immediately
            recognized as an available assurance source by this Directory Server.
          type: integer
        replicationHistoryLimit:
          description: Specifies the size limit for historical information.
          type: integer
        allowInheritedReplicationOfSubordinateBackends:
          description: Allow replication to be inherited by subordinate/child backends.
          type: boolean
        replicationPurgeObsoleteReplicas:
          description: Indicates whether state about obsolete replicas is automatically
            purged.
          type: boolean
        smtpServer:
          items:
            description: "Specifies the set of servers that will be used to send email\
              \ messages. The order in which the servers are listed indicates the\
              \ order in which the Directory Server will attempt to use them in the\
              \ course of sending a message. The first attempt will always go to the\
              \ server at the top of the list, and servers further down the list will\
              \ only be used if none of the servers listed above it were able to successfully\
              \ send the message."
            type: string
          type: array
        maxSMTPConnectionCount:
          description: The maximum number of SMTP connections that will be maintained
            for delivering email messages.
          type: integer
        maxSMTPConnectionAge:
          description: The maximum length of time that a connection to an SMTP server
            should be considered valid.
          type: string
        smtpConnectionHealthCheckInterval:
          description: The length of time between checks to ensure that available
            SMTP connections are still valid.
          type: string
        allowedTask:
          items:
            description: Specifies the fully-qualified name of a Java class that may
              be invoked in the server.
            type: string
          type: array
        enableSubOperationTimer:
          description: "Indicates whether the Directory Server should attempt to record\
            \ information about the length of time required to process various phases\
            \ of an operation. Enabling this feature may impact performance, but could\
            \ make it easier to identify potential bottlenecks in operation processing."
          type: boolean
        maximumShutdownTime:
          description: Specifies the maximum amount of time the shutdown of Directory
            Server may take.
          type: string
        networkAddressCacheTTL:
          description: Specifies the length of time that the Directory Server should
            cache the IP addresses associated with the names of systems with which
            it interacts.
          type: string
        networkAddressOutageCacheEnabled:
          description: Specifies whether the Directory Server should cache the last
            valid IP addresses associated with the names of systems with which it
            interacts with when the domain name service returns an unknown host exception.
            Java may return an unknown host exception when there is unexpected interruption
            in domain name service so this setting protects the Directory Server from
            temporary DNS server outages if previous results have been cached.
          type: boolean
        trackedApplication:
          items:
            description: Specifies criteria for identifying specific applications
              that access the server to enable tracking throughput and latency of
              LDAP operations issued by an application.
            type: string
          type: array
        jmxValueBehavior:
          $ref: '#/components/schemas/Enumglobal-configuration-jmxValueBehaviorProp'
        jmxUseLegacyMbeanNames:
          description: "When set to true, the server will use its original, non-standard\
            \ JMX MBean names for the monitoring MBeans. These include RDN keys of\
            \ \"Rdn1\" and \"Rdn2\" instead of the recommended \"type\" and \"name\"\
            \ keys. This should option should only be enabled for installations that\
            \ have monitoring infrastructure that depends on the old keys."
          type: boolean
      required:
      - allowInheritedReplicationOfSubordinateBackends
      - defaultPasswordPolicy
      - duplicateAlertLimit
      - duplicateAlertTimeLimit
      - duplicateErrorLogLimit
      - duplicateErrorLogTimeLimit
      - instanceName
      - proxiedAuthorizationIdentityMapper
      - replicationAssuranceSourceBacklogFastStartThreshold
      - replicationAssuranceSourceTimeoutSuspendDuration
      - replicationBacklogCountAlertThreshold
      - replicationBacklogDurationAlertThreshold
      - startupMinReplicationBacklogCount
      type: object
    Enumglobal-configurationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:global-configuration
      type: string
    Enumglobal-configuration-disabledPrivilegeProp:
      description: Specifies the name of a privilege that should not be evaluated
        by the server.
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumglobal-configuration-jmxValueBehaviorProp:
      description: Specifies how a Java type is chosen for monitor attributes exposed
        as JMX attribute values.
      enum:
      - inferred
      - string
      type: string
    Enumglobal-configuration-invalidAttributeSyntaxBehaviorProp:
      description: Specifies how the Directory Server should handle operations whenever
        an attribute value violates the associated attribute syntax.
      enum:
      - accept
      - reject
      - warn
      type: string
    Enumglobal-configuration-attributesModifiableWithIgnoreNoUserModificationRequestControlProp:
      description: Specifies the operational attribute types that are defined in the
        schema with the NO-USER-MODIFICATION constraint that the server will allow
        to be altered if the associated request contains the ignore NO-USER-MODIFICATION
        request control.
      enum:
      - creatorsName
      - createTimestamp
      - modifiersName
      - modifyTimestamp
      type: string
    Enumglobal-configuration-startupErrorLoggerOutputLocationProp:
      description: "Specifies how the server should handle error log messages (which\
        \ may include errors, warnings, and notices) generated during startup. All\
        \ of these messages will be written to all configured error loggers, but they\
        \ may also be written to other locations (like standard output, standard error,\
        \ or the server.out log file) so that they are displayed on the console when\
        \ the server is starting."
      enum:
      - standard-output
      - standard-error
      - server-out-file
      - standard-output-and-server-out-file
      - standard-error-and-server-out-file
      - disabled
      type: string
    Enumglobal-configuration-writabilityModeProp:
      description: Specifies the kinds of write operations the Directory Server can
        process.
      enum:
      - enabled
      - disabled
      - internal-only
      type: string
    Enumglobal-configuration-unrecoverableDatabaseErrorModeProp:
      description: Specifies the action which should be taken for any database that
        experiences an unrecoverable error. Action applies to local database backends
        and the replication recent changes database.
      enum:
      - enter-lockdown-mode
      - raise-unavailable-alarm
      - initiate-server-shutdown
      type: string
    Enumglobal-configuration-allowedInsecureTLSProtocolProp:
      description: "Specifies a set of TLS protocols that will be permitted for use\
        \ in the server even though there may be known vulnerabilities that could\
        \ cause their use to be unsafe in some conditions. Enabling support for insecure\
        \ TLS protocols is discouraged, and is generally recommended only as a short-term\
        \ measure to permit legacy clients to interact with the server until they\
        \ can be updated to support more secure communication protocols."
      enum:
      - sslv3
      type: string
    Enumglobal-configuration-singleStructuralObjectclassBehaviorProp:
      description: "Specifies how the Directory Server should handle operations for\
        \ an entry does not contain a structural object class, or for an entry that\
        \ contains multiple structural classes."
      enum:
      - accept
      - reject
      - warn
      type: string
    add-ping-one-id-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_one_id_token_validator_request_allOf'
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
    ping-one-id-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_one_id_token_validator_response_allOf'
      - $ref: '#/components/schemas/ping-one-id-token-validator-shared'
    ping-one-id-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumping-one-id-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        issuerURL:
          description: Specifies a PingOne base issuer URL.
          type: string
        OpenIDConnectProvider:
          description: Specifies HTTPS connection settings for the PingOne OpenID
            Connect provider.
          type: string
        OpenIDConnectMetadataCacheDuration:
          description: How often the PingOne ID Token Validator should refresh its
            stored cache of OpenID Connect-related metadata.
          type: string
        description:
          description: A description for this ID Token Validator
          type: string
        enabled:
          description: Indicates whether this ID Token Validator is enabled for use
            in the Directory Server.
          type: boolean
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            to correlate an ID token subject value to a user entry. The claim name
            from which to obtain the subject (i.e. the currently logged-in user) may
            be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject; i.e.,\
            \ the authenticated user."
          type: string
        clockSkewGracePeriod:
          description: "Specifies the amount of clock skew that is tolerated by the\
            \ ID Token Validator when evaluating whether a token is within its valid\
            \ time interval. The duration specified by this parameter will be subtracted\
            \ from the token's not-before (nbf) time and added to the token's expiration\
            \ (exp) time, if present, to allow for any time difference between the\
            \ local server's clock and the token issuer's clock."
          type: string
        jwksCacheDuration:
          description: How often the ID Token Validator should refresh its cache of
            JWKS token signing keys.
          type: string
        evaluationOrderIndex:
          description: "When multiple ID Token Validators are defined for a single\
            \ Directory Server, this property determines the order in which the ID\
            \ Token Validators are consulted. Values of this property must be unique\
            \ among all ID Token Validators defined within Directory Server but not\
            \ necessarily contiguous. ID Token Validators with lower values will be\
            \ evaluated first to determine if they are able to validate the ID token."
          type: integer
      required:
      - OpenIDConnectProvider
      - enabled
      - evaluationOrderIndex
      - identityMapper
      - issuerURL
      - schemas
      type: object
    Enumping-one-id-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:id-token-validator:ping-one
      type: string
    add-openid-connect-id-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_one_id_token_validator_request_allOf'
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
    openid-connect-id-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_one_id_token_validator_response_allOf'
      - $ref: '#/components/schemas/openid-connect-id-token-validator-shared'
    openid-connect-id-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumopenid-connect-id-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allowedSigningAlgorithm:
          items:
            $ref: '#/components/schemas/Enumid-token-validator-allowedSigningAlgorithmProp'
          type: array
        signingCertificate:
          items:
            description: Specifies the locally stored certificates that may be used
              to validate the signature of an incoming ID token. This property may
              be specified if a JWKS endpoint should not be used to retrieve public
              signing keys.
            type: string
          type: array
        OpenIDConnectProvider:
          description: Specifies the OpenID Connect provider that issues ID tokens
            handled by this OpenID Connect ID Token Validator. This property is used
            in conjunction with the jwks-endpoint-path property.
          type: string
        jwksEndpointPath:
          description: "The relative path to the JWKS endpoint from which to retrieve\
            \ one or more public signing keys that may be used to validate the signature\
            \ of an incoming ID token. This path is relative to the base_url property\
            \ defined for the validator's OpenID Connect provider. If jwks-endpoint-path\
            \ is specified, the OpenID Connect ID Token Validator will not consult\
            \ locally stored certificates for validating token signatures."
          type: string
        description:
          description: A description for this ID Token Validator
          type: string
        enabled:
          description: Indicates whether this ID Token Validator is enabled for use
            in the Directory Server.
          type: boolean
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            to correlate an ID token subject value to a user entry. The claim name
            from which to obtain the subject (i.e. the currently logged-in user) may
            be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject; i.e.,\
            \ the authenticated user."
          type: string
        issuerURL:
          description: Specifies the OpenID Connect provider's issuer URL.
          type: string
        clockSkewGracePeriod:
          description: "Specifies the amount of clock skew that is tolerated by the\
            \ ID Token Validator when evaluating whether a token is within its valid\
            \ time interval. The duration specified by this parameter will be subtracted\
            \ from the token's not-before (nbf) time and added to the token's expiration\
            \ (exp) time, if present, to allow for any time difference between the\
            \ local server's clock and the token issuer's clock."
          type: string
        jwksCacheDuration:
          description: How often the ID Token Validator should refresh its cache of
            JWKS token signing keys.
          type: string
        evaluationOrderIndex:
          description: "When multiple ID Token Validators are defined for a single\
            \ Directory Server, this property determines the order in which the ID\
            \ Token Validators are consulted. Values of this property must be unique\
            \ among all ID Token Validators defined within Directory Server but not\
            \ necessarily contiguous. ID Token Validators with lower values will be\
            \ evaluated first to determine if they are able to validate the ID token."
          type: integer
      required:
      - allowedSigningAlgorithm
      - enabled
      - evaluationOrderIndex
      - identityMapper
      - issuerURL
      - schemas
      type: object
    Enumopenid-connect-id-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:id-token-validator:openid-connect
      type: string
    Enumid-token-validator-allowedSigningAlgorithmProp:
      description: Specifies an allow list of JWT signing algorithms that will be
        accepted by the OpenID Connect ID Token Validator.
      enum:
      - RS256
      - RS384
      - RS512
      - ES256
      - ES384
      - ES512
      type: string
    plugin-root-response:
      example:
        pluginOrderPreParseAbandon: pluginOrderPreParseAbandon
        pluginOrderPreParseModify: pluginOrderPreParseModify
        pluginOrderPreOperationExtended: pluginOrderPreOperationExtended
        pluginOrderSearchResultEntry: pluginOrderSearchResultEntry
        pluginOrderPostOperationDelete: pluginOrderPostOperationDelete
        pluginOrderPostOperationExtended: pluginOrderPostOperationExtended
        pluginOrderPreParseAdd: pluginOrderPreParseAdd
        pluginOrderPostResponseModifyDN: pluginOrderPostResponseModifyDN
        pluginOrderPreOperationCompare: pluginOrderPreOperationCompare
        pluginOrderPreParseModifyDN: pluginOrderPreParseModifyDN
        pluginOrderPreOperationDelete: pluginOrderPreOperationDelete
        pluginOrderPostResponseSearch: pluginOrderPostResponseSearch
        pluginOrderPostOperationAbandon: pluginOrderPostOperationAbandon
        pluginOrderPreOperationModify: pluginOrderPreOperationModify
        pluginOrderShutdown: pluginOrderShutdown
        pluginOrderPostResponseAdd: pluginOrderPostResponseAdd
        pluginOrderLDIFExport: pluginOrderLDIFExport
        pluginOrderLDIFImport: pluginOrderLDIFImport
        pluginOrderPostSynchronizationModifyDN: pluginOrderPostSynchronizationModifyDN
        pluginOrderPreParseDelete: pluginOrderPreParseDelete
        pluginOrderPostResponseBind: pluginOrderPostResponseBind
        pluginOrderPostOperationAdd: pluginOrderPostOperationAdd
        pluginOrderPostOperationSearch: pluginOrderPostOperationSearch
        pluginOrderPostSynchronizationModify: pluginOrderPostSynchronizationModify
        pluginOrderPreOperationSearch: pluginOrderPreOperationSearch
        schemas:
        - null
        pluginOrderPreParseBind: pluginOrderPreParseBind
        pluginOrderPostOperationModifyDN: pluginOrderPostOperationModifyDN
        pluginOrderPostDisconnect: pluginOrderPostDisconnect
        pluginOrderPostResponseCompare: pluginOrderPostResponseCompare
        pluginOrderPostConnect: pluginOrderPostConnect
        pluginOrderPreParseSearch: pluginOrderPreParseSearch
        pluginOrderPostResponseExtended: pluginOrderPostResponseExtended
        pluginOrderPreParseExtended: pluginOrderPreParseExtended
        pluginOrderSearchResultReference: pluginOrderSearchResultReference
        pluginOrderPreParseCompare: pluginOrderPreParseCompare
        pluginOrderPostOperationCompare: pluginOrderPostOperationCompare
        pluginOrderPostOperationUnbind: pluginOrderPostOperationUnbind
        pluginOrderPreOperationBind: pluginOrderPreOperationBind
        pluginOrderPreOperationAdd: pluginOrderPreOperationAdd
        pluginOrderPostOperationModify: pluginOrderPostOperationModify
        pluginOrderStartup: pluginOrderStartup
        pluginOrderPreOperationModifyDN: pluginOrderPreOperationModifyDN
        pluginOrderPostSynchronizationAdd: pluginOrderPostSynchronizationAdd
        pluginOrderPostSynchronizationDelete: pluginOrderPostSynchronizationDelete
        pluginOrderSubordinateModifyDN: pluginOrderSubordinateModifyDN
        pluginOrderIntermediateResponse: pluginOrderIntermediateResponse
        pluginOrderPostOperationBind: pluginOrderPostOperationBind
        pluginOrderPostResponseModify: pluginOrderPostResponseModify
        pluginOrderPreParseUnbind: pluginOrderPreParseUnbind
        pluginOrderPostResponseDelete: pluginOrderPostResponseDelete
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumplugin-rootSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        pluginOrderStartup:
          description: Specifies the order in which startup plug-ins are to be loaded
            and invoked.
          type: string
        pluginOrderShutdown:
          description: Specifies the order in which shutdown plug-ins are to be loaded
            and invoked.
          type: string
        pluginOrderPostConnect:
          description: Specifies the order in which post-connect plug-ins are to be
            loaded and invoked.
          type: string
        pluginOrderPostDisconnect:
          description: Specifies the order in which post-disconnect plug-ins are to
            be loaded and invoked.
          type: string
        pluginOrderLDIFImport:
          description: Specifies the order in which LDIF import plug-ins are to be
            loaded and invoked.
          type: string
        pluginOrderLDIFExport:
          description: Specifies the order in which LDIF export plug-ins are to be
            loaded and invoked.
          type: string
        pluginOrderPreParseAbandon:
          description: Specifies the order in which pre-parse abandon plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseAdd:
          description: Specifies the order in which pre-parse add plug-ins are to
            be loaded and invoked.
          type: string
        pluginOrderPreParseBind:
          description: Specifies the order in which pre-parse bind plug-ins are to
            be loaded and invoked.
          type: string
        pluginOrderPreParseCompare:
          description: Specifies the order in which pre-parse compare plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseDelete:
          description: Specifies the order in which pre-parse delete plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseExtended:
          description: Specifies the order in which pre-parse extended operation plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPreParseModify:
          description: Specifies the order in which pre-parse modify plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseModifyDN:
          description: Specifies the order in which pre-parse modify DN plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseSearch:
          description: Specifies the order in which pre-parse search plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreParseUnbind:
          description: Specifies the order in which pre-parse unbind plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreOperationAdd:
          description: Specifies the order in which pre-operation add plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreOperationBind:
          description: Specifies the order in which pre-operation bind plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPreOperationCompare:
          description: Specifies the order in which pre-operation compare plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPreOperationDelete:
          description: Specifies the order in which pre-operation delete plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPreOperationExtended:
          description: Specifies the order in which pre-operation extended operation
            plug-ins are to be loaded and invoked.
          type: string
        pluginOrderPreOperationModify:
          description: Specifies the order in which pre-operation modify plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPreOperationModifyDN:
          description: Specifies the order in which pre-operation modify DN plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPreOperationSearch:
          description: Specifies the order in which pre-operation search plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationAbandon:
          description: Specifies the order in which post-operation abandon plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationAdd:
          description: Specifies the order in which post-operation add plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPostOperationBind:
          description: Specifies the order in which post-operation bind plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPostOperationCompare:
          description: Specifies the order in which post-operation compare plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationDelete:
          description: Specifies the order in which post-operation delete plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationExtended:
          description: Specifies the order in which post-operation extended operation
            plug-ins are to be loaded and invoked.
          type: string
        pluginOrderPostOperationModify:
          description: Specifies the order in which post-operation modify plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationModifyDN:
          description: Specifies the order in which post-operation modify DN plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationSearch:
          description: Specifies the order in which post-operation search plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostOperationUnbind:
          description: Specifies the order in which post-operation unbind plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostResponseAdd:
          description: Specifies the order in which post-response add plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPostResponseBind:
          description: Specifies the order in which post-response bind plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderPostResponseCompare:
          description: Specifies the order in which post-response compare plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostResponseDelete:
          description: Specifies the order in which post-response delete plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostResponseExtended:
          description: Specifies the order in which post-response extended operation
            plug-ins are to be loaded and invoked.
          type: string
        pluginOrderPostResponseModify:
          description: Specifies the order in which post-response modify plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostResponseModifyDN:
          description: Specifies the order in which post-response modify DN plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostSynchronizationAdd:
          description: Specifies the order in which post-synchronization add plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostSynchronizationDelete:
          description: Specifies the order in which post-synchronization delete plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostSynchronizationModify:
          description: Specifies the order in which post-synchronization modify plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderPostSynchronizationModifyDN:
          description: Specifies the order in which post-synchronization modify DN
            plug-ins are to be loaded and invoked.
          type: string
        pluginOrderPostResponseSearch:
          description: Specifies the order in which post-response search plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderSearchResultEntry:
          description: Specifies the order in which search result entry plug-ins are
            to be loaded and invoked.
          type: string
        pluginOrderSearchResultReference:
          description: Specifies the order in which search result reference plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderSubordinateModifyDN:
          description: Specifies the order in which subordinate modify DN plug-ins
            are to be loaded and invoked.
          type: string
        pluginOrderIntermediateResponse:
          description: Specifies the order in which intermediate response plug-ins
            are to be loaded and invoked.
          type: string
      type: object
    Enumplugin-rootSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:plugin-root
      type: string
    add-sensitive-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_sensitive_attribute_request_allOf'
      - $ref: '#/components/schemas/sensitive-attribute-shared'
    sensitive-attribute-response:
      allOf:
      - $ref: '#/components/schemas/sensitive_attribute_response_allOf'
      - $ref: '#/components/schemas/sensitive-attribute-shared'
    sensitive-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsensitive-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Sensitive Attribute
          type: string
        attributeType:
          items:
            description: The name(s) or OID(s) of the attribute types for attributes
              whose values may be considered sensitive.
            type: string
          type: array
        includeDefaultSensitiveOperationalAttributes:
          description: Indicates whether to automatically include any server-generated
            operational attributes that may contain sensitive data.
          type: boolean
        allowInReturnedEntries:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInReturnedEntriesProp'
        allowInFilter:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInFilterProp'
        allowInAdd:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInAddProp'
        allowInCompare:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInCompareProp'
        allowInModify:
          $ref: '#/components/schemas/Enumsensitive-attribute-allowInModifyProp'
      required:
      - attributeType
      type: object
    Enumsensitive-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sensitive-attribute
      type: string
    Enumsensitive-attribute-allowInCompareProp:
      description: Indicates whether clients will be allowed to target sensitive attributes
        with compare requests.
      enum:
      - allow
      - reject
      - secure-only
      type: string
    Enumsensitive-attribute-allowInFilterProp:
      description: "Indicates whether clients will be allowed to include sensitive\
        \ attributes in search filters. This also includes filters that may be used\
        \ in other forms, including assertion and LDAP join request controls."
      enum:
      - allow
      - reject
      - secure-only
      type: string
    Enumsensitive-attribute-allowInAddProp:
      description: Indicates whether clients will be allowed to include sensitive
        attributes in add requests.
      enum:
      - allow
      - reject
      - secure-only
      type: string
    Enumsensitive-attribute-allowInReturnedEntriesProp:
      description: "Indicates whether sensitive attributes should be included in entries\
        \ returned to the client. This includes not only search result entries, but\
        \ also other forms including in the values of controls like the pre-read,\
        \ post-read, get authorization entry, and LDAP join response controls."
      enum:
      - allow
      - suppress
      - secure-only
      type: string
    Enumsensitive-attribute-allowInModifyProp:
      description: Indicates whether clients will be allowed to target sensitive attributes
        with modify requests.
      enum:
      - allow
      - reject
      - secure-only
      type: string
    add-ping-federate-access-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_federate_access_token_validator_request_allOf'
      - $ref: '#/components/schemas/ping-federate-access-token-validator-shared'
    ping-federate-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_federate_access_token_validator_response_allOf'
      - $ref: '#/components/schemas/ping-federate-access-token-validator-shared'
    ping-federate-access-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumping-federate-access-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        clientID:
          description: The client identifier to use when authenticating to the PingFederate
            authorization server.
          type: string
        clientSecret:
          description: The client secret to use when authenticating to the PingFederate
            authorization server.
          format: password
          type: string
        clientSecretPassphraseProvider:
          description: The passphrase provider for obtaining the client secret to
            use when authenticating to the PingFederate authorization server.
          type: string
        includeAudParameter:
          description: Whether to include the incoming request URL as the "aud" parameter
            when calling the PingFederate introspection endpoint. This property is
            ignored if the access-token-manager-id property is set.
          type: boolean
        accessTokenManagerID:
          description: The Access Token Manager instance ID to specify when calling
            the PingFederate introspection endpoint. If this property is set the include-aud-parameter
            property is ignored.
          type: string
        endpointCacheRefresh:
          description: How often the Access Token Validator should refresh its stored
            value of the PingFederate server's token introspection endpoint.
          type: string
        evaluationOrderIndex:
          description: "When multiple Ping Federate Access Token Validators are defined\
            \ for a single Directory Server, this property determines the evaluation\
            \ order for determining the correct validator class for an access token\
            \ received by the Directory Server. Values of this property must be unique\
            \ among all Ping Federate Access Token Validators defined within Directory\
            \ Server but not necessarily contiguous. Ping Federate Access Token Validators\
            \ with a smaller value will be evaluated first to determine if they are\
            \ able to validate the access token."
          type: integer
        authorizationServer:
          description: Specifies the external server that will be used to aid in validating
            access tokens. In most cases this will be the Authorization Server that
            minted the token.
          type: string
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            for associating user entries with Bearer token subject names. The claim
            name from which to obtain the subject (i.e. the currently logged-in user)
            may be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject, i.e.\
            \ the logged-in user in an access token. This property goes hand-in-hand\
            \ with the identity-mapper property and tells the Identity Mapper which\
            \ field to use to look up the user entry on the server."
          type: string
        description:
          description: A description for this Access Token Validator
          type: string
        enabled:
          description: Indicates whether this Access Token Validator is enabled for
            use in Directory Server.
          type: boolean
      required:
      - clientID
      - enabled
      - evaluationOrderIndex
      - schemas
      type: object
    Enumping-federate-access-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:access-token-validator:ping-federate
      type: string
    add-jwt-access-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_federate_access_token_validator_request_allOf'
      - $ref: '#/components/schemas/jwt-access-token-validator-shared'
    jwt-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_federate_access_token_validator_response_allOf'
      - $ref: '#/components/schemas/jwt-access-token-validator-shared'
    jwt-access-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjwt-access-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allowedSigningAlgorithm:
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedSigningAlgorithmProp'
          type: array
        signingCertificate:
          items:
            description: "Specifies the locally stored certificates that may be used\
              \ to validate the signature of an incoming JWT access token. If this\
              \ property is specified, the JWT Access Token Validator will not use\
              \ a JWKS endpoint to retrieve public keys."
            type: string
          type: array
        jwksEndpointPath:
          description: "The relative path to JWKS endpoint from which to retrieve\
            \ one or more public signing keys that may be used to validate the signature\
            \ of an incoming JWT access token. This path is relative to the base_url\
            \ property defined for the validator's external authorization server.\
            \ If jwks-endpoint-path is specified, the JWT Access Token Validator will\
            \ not consult locally stored certificates for validating token signatures."
          type: string
        encryptionKeyPair:
          description: "The public-private key pair that is used to encrypt the JWT\
            \ payload. If specified, the JWT Access Token Validator will use the private\
            \ key to decrypt the JWT payload, and the public key must be exported\
            \ to the Authorization Server that is issuing access tokens."
          type: string
        allowedKeyEncryptionAlgorithm:
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedKeyEncryptionAlgorithmProp'
          type: array
        allowedContentEncryptionAlgorithm:
          items:
            $ref: '#/components/schemas/Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp'
          type: array
        clockSkewGracePeriod:
          description: "Specifies the amount of clock skew that is tolerated by the\
            \ JWT Access Token Validator when evaluating whether a token is within\
            \ its valid time interval. The duration specified by this parameter will\
            \ be subtracted from the token's not-before (nbf) time and added to the\
            \ token's expiration (exp) time, if present, to allow for any time difference\
            \ between the local server's clock and the token issuer's clock."
          type: string
        clientIDClaimName:
          description: The name of the token claim that contains the OAuth2 client
            Id.
          type: string
        scopeClaimName:
          description: The name of the token claim that contains the scopes granted
            by the token.
          type: string
        evaluationOrderIndex:
          description: "When multiple JWT Access Token Validators are defined for\
            \ a single Directory Server, this property determines the evaluation order\
            \ for determining the correct validator class for an access token received\
            \ by the Directory Server. Values of this property must be unique among\
            \ all JWT Access Token Validators defined within Directory Server but\
            \ not necessarily contiguous. JWT Access Token Validators with a smaller\
            \ value will be evaluated first to determine if they are able to validate\
            \ the access token."
          type: integer
        authorizationServer:
          description: Specifies the external server that will be used to aid in validating
            access tokens. In most cases this will be the Authorization Server that
            minted the token.
          type: string
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            for associating user entries with Bearer token subject names. The claim
            name from which to obtain the subject (i.e. the currently logged-in user)
            may be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject, i.e.\
            \ the logged-in user in an access token. This property goes hand-in-hand\
            \ with the identity-mapper property and tells the Identity Mapper which\
            \ field to use to look up the user entry on the server."
          type: string
        description:
          description: A description for this Access Token Validator
          type: string
        enabled:
          description: Indicates whether this Access Token Validator is enabled for
            use in Directory Server.
          type: boolean
      required:
      - allowedContentEncryptionAlgorithm
      - allowedKeyEncryptionAlgorithm
      - allowedSigningAlgorithm
      - enabled
      - evaluationOrderIndex
      - schemas
      type: object
    Enumjwt-access-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:access-token-validator:jwt
      type: string
    add-mock-access-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_federate_access_token_validator_request_allOf'
      - $ref: '#/components/schemas/mock-access-token-validator-shared'
    mock-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_federate_access_token_validator_response_allOf'
      - $ref: '#/components/schemas/mock-access-token-validator-shared'
    mock-access-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummock-access-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        clientIDClaimName:
          description: The name of the token claim that contains the OAuth2 client
            ID.
          type: string
        scopeClaimName:
          description: The name of the token claim that contains the scopes granted
            by the token.
          type: string
        evaluationOrderIndex:
          description: "When multiple Mock Access Token Validators are defined for\
            \ a single Directory Server, this property determines the evaluation order\
            \ for determining the correct validator class for an access token received\
            \ by the Directory Server. Values of this property must be unique among\
            \ all Mock Access Token Validators defined within Directory Server but\
            \ not necessarily contiguous. Mock Access Token Validators with a smaller\
            \ value will be evaluated first to determine if they are able to validate\
            \ the access token."
          type: integer
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            for associating user entries with Bearer token subject names. The claim
            name from which to obtain the subject (i.e. the currently logged-in user)
            may be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject, i.e.\
            \ the logged-in user in an access token. This property goes hand-in-hand\
            \ with the identity-mapper property and tells the Identity Mapper which\
            \ field to use to look up the user entry on the server."
          type: string
        description:
          description: A description for this Access Token Validator
          type: string
        enabled:
          description: Indicates whether this Access Token Validator is enabled for
            use in Directory Server.
          type: boolean
      required:
      - enabled
      - evaluationOrderIndex
      - schemas
      type: object
    Enummock-access-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:access-token-validator:mock
      type: string
    add-third-party-access-token-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_ping_federate_access_token_validator_request_allOf'
      - $ref: '#/components/schemas/third-party-access-token-validator-shared'
    third-party-access-token-validator-response:
      allOf:
      - $ref: '#/components/schemas/ping_federate_access_token_validator_response_allOf'
      - $ref: '#/components/schemas/third-party-access-token-validator-shared'
    third-party-access-token-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-access-token-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Access Token Validator.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Access Token Validator. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        identityMapper:
          description: Specifies the name of the Identity Mapper that should be used
            for associating user entries with Bearer token subject names. The claim
            name from which to obtain the subject (i.e. the currently logged-in user)
            may be configured using the subject-claim-name property.
          type: string
        subjectClaimName:
          description: "The name of the token claim that contains the subject, i.e.\
            \ the logged-in user in an access token. This property goes hand-in-hand\
            \ with the identity-mapper property and tells the Identity Mapper which\
            \ field to use to look up the user entry on the server."
          type: string
        description:
          description: A description for this Access Token Validator
          type: string
        enabled:
          description: Indicates whether this Access Token Validator is enabled for
            use in Directory Server.
          type: boolean
        evaluationOrderIndex:
          description: "When multiple Access Token Validators are defined for a single\
            \ Directory Server, this property determines the evaluation order for\
            \ determining the correct validator class for an access token received\
            \ by the Directory Server. Values of this property must be unique among\
            \ all Access Token Validators defined within Directory Server but not\
            \ necessarily contiguous. Access Token Validators with a smaller value\
            \ will be evaluated first to determine if they are able to validate the\
            \ access token."
          type: integer
      required:
      - enabled
      - evaluationOrderIndex
      - extensionClass
      - schemas
      type: object
    Enumthird-party-access-token-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:access-token-validator:third-party
      type: string
    Enumaccess-token-validator-allowedContentEncryptionAlgorithmProp:
      description: Specifies an allow list of JWT content encryption algorithms that
        will be accepted by the JWT Access Token Validator.
      enum:
      - A128CBC_HS256
      - A192CBC_HS384
      - A256CBC_HS512
      type: string
    Enumaccess-token-validator-allowedKeyEncryptionAlgorithmProp:
      description: Specifies an allow list of JWT key encryption algorithms that will
        be accepted by the JWT Access Token Validator. This setting is only used if
        encryption-key-pair is set.
      enum:
      - RSA_OAEP
      - ECDH_ES
      - ECDH_ES_A128KW
      - ECDH_ES_A192KW
      - ECDH_ES_A256KW
      type: string
    Enumaccess-token-validator-allowedSigningAlgorithmProp:
      description: Specifies an allow list of JWT signing algorithms that will be
        accepted by the JWT Access Token Validator.
      enum:
      - RS256
      - RS384
      - RS512
      - ES256
      - ES384
      - ES512
      type: string
    root-dse-backend-response:
      example:
        subordinateBaseDN:
        - subordinateBaseDN
        - subordinateBaseDN
        additionalSupportedControlOID:
        - additionalSupportedControlOID
        - additionalSupportedControlOID
        showAllAttributes: true
        schemas:
        - null
        useLegacyVendorVersion: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumroot-dse-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        subordinateBaseDN:
          items:
            description: "Specifies the set of base DNs used for singleLevel, wholeSubtree,\
              \ and subordinateSubtree searches based at the root DSE."
            type: string
          type: array
        additionalSupportedControlOID:
          items:
            description: Specifies an additional OID that should appear in the list
              of supportedControl values in the server's root DSE.
            type: string
          type: array
        showAllAttributes:
          description: Indicates whether all attributes in the root DSE are to be
            treated like user attributes (and therefore returned to clients by default)
            regardless of the Directory Server schema configuration.
          type: boolean
        useLegacyVendorVersion:
          description: Indicates whether the server's root DSE should reflect current
            or legacy values for the vendorName and vendorVersion attributes.
          type: boolean
      required:
      - showAllAttributes
      type: object
    Enumroot-dse-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:root-dse-backend
      type: string
    add-access-log-field-mapping-request:
      allOf:
      - $ref: '#/components/schemas/add_access_log_field_mapping_request_allOf'
      - $ref: '#/components/schemas/access-log-field-mapping-shared'
    access-log-field-mapping-response:
      allOf:
      - $ref: '#/components/schemas/access_log_field_mapping_response_allOf'
      - $ref: '#/components/schemas/access-log-field-mapping-shared'
    access-log-field-mapping-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaccess-log-field-mappingSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFieldTimestamp:
          description: The time that the operation was processed.
          type: string
        logFieldConnectionID:
          description: The connection ID assigned to the client connection.
          type: string
        logFieldStartupid:
          description: "The startup ID for the Directory Server. A different value\
            \ will be generated each time the server is started, and it may be used\
            \ to distinguish between operations with the same connection ID and operation\
            \ ID across server restarts."
          type: string
        logFieldProductName:
          description: "The name for this Directory Server product, which may be used\
            \ to identify which product was used to log the message if multiple products\
            \ log to the same database table."
          type: string
        logFieldInstanceName:
          description: "A name that uniquely identifies this Directory Server instance,\
            \ which may be used to identify which instance was used to log the message\
            \ if multiple server instances log to the same database table."
          type: string
        logFieldOperationID:
          description: The operation ID for the operation processed by the server.
          type: string
        logFieldMessageType:
          description: "The type of log message. Message types may include \"CONNECT\"\
            , \"DISCONNECT\", \"FORWARD\", \"RESULT\", \"ENTRY\", or \"REFERENCE\"\
            ."
          type: string
        logFieldOperationType:
          description: The type of operation that was processed.
          type: string
        logFieldMessageID:
          description: The message ID included in the client request.
          type: string
        logFieldResultCode:
          description: The numeric result code for the operation.
          type: string
        logFieldMessage:
          description: The diagnostic message for the operation.
          type: string
        logFieldOrigin:
          description: "The origin for the operation. Values may include \"replication\"\
            \ (if the operation was received via replication), \"internal\" (if it\
            \ was an internal operation processed by a server component), or \"external\"\
            \ (if it was a request from a client)."
          type: string
        logFieldRequesterDN:
          description: The DN of the user that requested the operation.
          type: string
        logFieldDisconnectReason:
          description: The reason that the client connection was closed.
          type: string
        logFieldDeleteOldRDN:
          description: Indicates whether the old RDN values should be removed from
            an entry while processing a modify DN operation.
          type: string
        logFieldAuthenticatedUserDN:
          description: The DN of the user that authenticated to the server.
          type: string
        logFieldProcessingTime:
          description: The length of time (in milliseconds with microsecond accuracy)
            required to process the operation.
          type: string
        logFieldRequestedAttributes:
          description: The set of requested attributes for the search operation.
          type: string
        logFieldSASLMechanismName:
          description: The name of the SASL mechanism used to authenticate.
          type: string
        logFieldNewRDN:
          description: The new RDN to use for a modify DN operation.
          type: string
        logFieldBaseDN:
          description: The base DN for a search operation.
          type: string
        logFieldBindDN:
          description: The bind DN for a bind operation.
          type: string
        logFieldMatchedDN:
          description: The DN of the superior entry closest to the DN specified by
            the client.
          type: string
        logFieldRequesterIPAddress:
          description: The IP address of the client that requested the operation.
          type: string
        logFieldAuthenticationType:
          description: The type of authentication requested by the client.
          type: string
        logFieldNewSuperiorDN:
          description: The new superior DN from a modify DN operation.
          type: string
        logFieldFilter:
          description: The filter from a search operation.
          type: string
        logFieldAlternateAuthorizationDN:
          description: The DN of the alternate authorization identity used when processing
            the operation.
          type: string
        logFieldEntryDN:
          description: The DN of the entry targeted by the operation.
          type: string
        logFieldEntriesReturned:
          description: The number of search result entries returned to the client.
          type: string
        logFieldAuthenticationFailureID:
          description: The numeric identifier for the authentication failure reason.
          type: string
        logFieldRequestOID:
          description: The OID of an extended request.
          type: string
        logFieldResponseOID:
          description: The OID of an extended response.
          type: string
        logFieldTargetProtocol:
          description: The protocol used when forwarding the request to a backend
            server.
          type: string
        logFieldTargetPort:
          description: "The network port of the Directory Server to which the client\
            \ connection has been established, or of the backend server to which the\
            \ request has been forwarded."
          type: string
        logFieldTargetAddress:
          description: The network address of the Directory Server to which the client
            connection has been established.
          type: string
        logFieldTargetAttribute:
          description: The name of the attribute targeted by a compare operation.
          type: string
        logFieldTargetHost:
          description: The address of the server to which the request has been forwarded.
          type: string
        logFieldProtocolVersion:
          description: The protocol version used by the client when communicating
            with the Directory Server.
          type: string
        logFieldProtocolName:
          description: The name of the protocol the client is using to communicate
            with the Directory Server.
          type: string
        logFieldAuthenticationFailureReason:
          description: A message explaining the reason that the authentication attempt
            failed.
          type: string
        logFieldAdditionalInformation:
          description: Additional information about the operation that was processed
            which was not returned to the client.
          type: string
        logFieldUnindexed:
          description: Indicates whether the requested search operation was unindexed.
          type: string
        logFieldScope:
          description: The scope for the search operation.
          type: string
        logFieldReferralUrls:
          description: The referral URLs returned to the client.
          type: string
        logFieldSourceAddress:
          description: The address of the client from which the connection was established.
          type: string
        logFieldMessageIDToAbandon:
          description: The message ID of the operation to be abandoned.
          type: string
        logFieldResponseControls:
          description: The OIDs of the response controls returned to the client.
          type: string
        logFieldRequestControls:
          description: The OIDs of the request controls returned to the client.
          type: string
        logFieldIntermediateClientResult:
          description: The contents of the intermediate client response control returned
            to the client.
          type: string
        logFieldIntermediateClientRequest:
          description: The contents of the intermediate client request control provided
            by the client.
          type: string
        logFieldReplicationChangeID:
          description: The replication change ID.
          type: string
        description:
          description: A description for this Log Field Mapping
          type: string
      required:
      - schemas
      type: object
    Enumaccess-log-field-mappingSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-mapping:access
      type: string
    add-error-log-field-mapping-request:
      allOf:
      - $ref: '#/components/schemas/add_access_log_field_mapping_request_allOf'
      - $ref: '#/components/schemas/error-log-field-mapping-shared'
    error-log-field-mapping-response:
      allOf:
      - $ref: '#/components/schemas/access_log_field_mapping_response_allOf'
      - $ref: '#/components/schemas/error-log-field-mapping-shared'
    error-log-field-mapping-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumerror-log-field-mappingSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFieldTimestamp:
          description: The time that the log message was generated.
          type: string
        logFieldProductName:
          description: "The name for this Directory Server product, which may be used\
            \ to identify which product was used to log the message if multiple products\
            \ log to the same database table."
          type: string
        logFieldInstanceName:
          description: "A name that uniquely identifies this Directory Server instance,\
            \ which may be used to identify which instance was used to log the message\
            \ if multiple server instances log to the same database table."
          type: string
        logFieldStartupid:
          description: The startup ID for the Directory Server. A different value
            will be generated each time the server is started.
          type: string
        logFieldCategory:
          description: The category for the log message.
          type: string
        logFieldSeverity:
          description: The severity for the log message.
          type: string
        logFieldMessageID:
          description: The numeric value which uniquely identifies the type of message.
          type: string
        logFieldMessage:
          description: The text of the log message.
          type: string
        description:
          description: A description for this Log Field Mapping
          type: string
      required:
      - schemas
      type: object
    Enumerror-log-field-mappingSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-mapping:error
      type: string
    add-random-password-generator-request:
      allOf:
      - $ref: '#/components/schemas/add_random_password_generator_request_allOf'
      - $ref: '#/components/schemas/random-password-generator-shared'
    random-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/random_password_generator_response_allOf'
      - $ref: '#/components/schemas/random-password-generator-shared'
    random-password-generator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumrandom-password-generatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordCharacterSet:
          items:
            description: Specifies one or more named character sets.
            type: string
          type: array
        passwordFormat:
          description: Specifies the format to use for the generated password.
          type: string
        description:
          description: A description for this Password Generator
          type: string
        enabled:
          description: Indicates whether the Password Generator is enabled for use.
          type: boolean
      required:
      - enabled
      - passwordCharacterSet
      - passwordFormat
      - schemas
      type: object
    Enumrandom-password-generatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-generator:random
      type: string
    add-groovy-scripted-password-generator-request:
      allOf:
      - $ref: '#/components/schemas/add_random_password_generator_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-password-generator-shared'
    groovy-scripted-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/random_password_generator_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-password-generator-shared'
    groovy-scripted-password-generator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-password-generatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Password Generator.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Password Generator. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Generator
          type: string
        enabled:
          description: Indicates whether the Password Generator is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-password-generatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-generator:groovy-scripted
      type: string
    add-passphrase-password-generator-request:
      allOf:
      - $ref: '#/components/schemas/add_random_password_generator_request_allOf'
      - $ref: '#/components/schemas/passphrase-password-generator-shared'
    passphrase-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/random_password_generator_response_allOf'
      - $ref: '#/components/schemas/passphrase-password-generator-shared'
    passphrase-password-generator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpassphrase-password-generatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        dictionaryFile:
          description: The path to the dictionary file that will be used to obtain
            the words for use in generated passwords.
          type: string
        minimumPasswordCharacters:
          description: The minimum number of characters that generated passwords will
            be required to have.
          type: integer
        minimumPasswordWords:
          description: The minimum number of words that must be concatenated in the
            course of generating a password.
          type: integer
        capitalizeWords:
          description: Indicates whether to capitalize each word used in the generated
            password.
          type: boolean
        description:
          description: A description for this Password Generator
          type: string
        enabled:
          description: Indicates whether the Password Generator is enabled for use.
          type: boolean
      required:
      - dictionaryFile
      - enabled
      - schemas
      type: object
    Enumpassphrase-password-generatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-generator:passphrase
      type: string
    add-third-party-password-generator-request:
      allOf:
      - $ref: '#/components/schemas/add_random_password_generator_request_allOf'
      - $ref: '#/components/schemas/third-party-password-generator-shared'
    third-party-password-generator-response:
      allOf:
      - $ref: '#/components/schemas/random_password_generator_response_allOf'
      - $ref: '#/components/schemas/third-party-password-generator-shared'
    third-party-password-generator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-password-generatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Password Generator.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Password Generator. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Generator
          type: string
        enabled:
          description: Indicates whether the Password Generator is enabled for use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-password-generatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-generator:third-party
      type: string
    add-twilio-otp-delivery-mechanism-request:
      allOf:
      - $ref: '#/components/schemas/add_twilio_otp_delivery_mechanism_request_allOf'
      - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-shared'
    twilio-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/twilio_otp_delivery_mechanism_response_allOf'
      - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-shared'
    twilio-otp-delivery-mechanism-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtwilio-otp-delivery-mechanismSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        twilioAccountSID:
          description: The unique identifier assigned to the Twilio account that will
            be used.
          type: string
        twilioAuthToken:
          description: The auth token for the Twilio account that will be used.
          format: password
          type: string
        twilioAuthTokenPassphraseProvider:
          description: The passphrase provider that may be used to obtain the auth
            token for the Twilio account that will be used.
          type: string
        phoneNumberAttributeType:
          description: The name or OID of the attribute in the user's entry that holds
            the phone number to which the message should be sent.
          type: string
        phoneNumberJSONField:
          description: The name of the JSON field whose value is the phone number
            to which the message should be sent. The phone number must be contained
            in a top-level field whose value is a single string.
          type: string
        phoneNumberJSONObjectFilter:
          description: A JSON object filter that may be used to identify which phone
            number value to use when sending the message.
          type: string
        senderPhoneNumber:
          items:
            description: The outgoing phone number to use for the messages. Values
              must be phone numbers you have obtained for use with your Twilio account.
            type: string
          type: array
        messageTextBeforeOTP:
          description: Any text that should appear in the message before the one-time
            password value.
          type: string
        messageTextAfterOTP:
          description: Any text that should appear in the message after the one-time
            password value.
          type: string
        description:
          description: A description for this OTP Delivery Mechanism
          type: string
        enabled:
          description: Indicates whether this OTP Delivery Mechanism is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - phoneNumberAttributeType
      - schemas
      - senderPhoneNumber
      - twilioAccountSID
      type: object
    Enumtwilio-otp-delivery-mechanismSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:twilio
      type: string
    add-email-otp-delivery-mechanism-request:
      allOf:
      - $ref: '#/components/schemas/add_twilio_otp_delivery_mechanism_request_allOf'
      - $ref: '#/components/schemas/email-otp-delivery-mechanism-shared'
    email-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/twilio_otp_delivery_mechanism_response_allOf'
      - $ref: '#/components/schemas/email-otp-delivery-mechanism-shared'
    email-otp-delivery-mechanism-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumemail-otp-delivery-mechanismSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        emailAddressAttributeType:
          description: The name or OID of the attribute that holds the email address
            to which the message should be sent.
          type: string
        emailAddressJSONField:
          description: The name of the JSON field whose value is the email address
            to which the message should be sent. The email address must be contained
            in a top-level field whose value is a single string.
          type: string
        emailAddressJSONObjectFilter:
          description: A JSON object filter that may be used to identify which email
            address value to use when sending the message.
          type: string
        senderAddress:
          description: The e-mail address to use as the sender for the one-time password.
          type: string
        messageSubject:
          description: The subject to use for the e-mail message.
          type: string
        messageTextBeforeOTP:
          description: Any text that should appear in the message before the one-time
            password value.
          type: string
        messageTextAfterOTP:
          description: Any text that should appear in the message after the one-time
            password value.
          type: string
        description:
          description: A description for this OTP Delivery Mechanism
          type: string
        enabled:
          description: Indicates whether this OTP Delivery Mechanism is enabled for
            use in the server.
          type: boolean
      required:
      - emailAddressAttributeType
      - enabled
      - messageSubject
      - schemas
      - senderAddress
      type: object
    Enumemail-otp-delivery-mechanismSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:email
      type: string
    add-third-party-otp-delivery-mechanism-request:
      allOf:
      - $ref: '#/components/schemas/add_twilio_otp_delivery_mechanism_request_allOf'
      - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-shared'
    third-party-otp-delivery-mechanism-response:
      allOf:
      - $ref: '#/components/schemas/twilio_otp_delivery_mechanism_response_allOf'
      - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-shared'
    third-party-otp-delivery-mechanism-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-otp-delivery-mechanismSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party OTP Delivery Mechanism.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party OTP Delivery Mechanism. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this OTP Delivery Mechanism
          type: string
        enabled:
          description: Indicates whether this OTP Delivery Mechanism is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-otp-delivery-mechanismSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:otp-delivery-mechanism:third-party
      type: string
    add-text-access-log-field-behavior-request:
      allOf:
      - $ref: '#/components/schemas/add_text_access_log_field_behavior_request_allOf'
      - $ref: '#/components/schemas/text-access-log-field-behavior-shared'
    text-access-log-field-behavior-response:
      allOf:
      - $ref: '#/components/schemas/text_access_log_field_behavior_response_allOf'
      - $ref: '#/components/schemas/text-access-log-field-behavior-shared'
    text-access-log-field-behavior-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtext-access-log-field-behaviorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        preserveField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-preserveFieldProp'
          type: array
        preserveFieldName:
          items:
            description: "The names of any custom fields whose values should be preserved.\
              \ This should generally only be used for fields that are not available\
              \ through the preserve-field property (for example, custom log fields\
              \ defined in Server SDK extensions)."
            type: string
          type: array
        omitField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-omitFieldProp'
          type: array
        omitFieldName:
          items:
            description: "The names of any custom fields that should be omitted from\
              \ log messages. This should generally only be used for fields that are\
              \ not available through the omit-field property (for example, custom\
              \ log fields defined in Server SDK extensions)."
            type: string
          type: array
        redactEntireValueField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-redactEntireValueFieldProp'
          type: array
        redactEntireValueFieldName:
          items:
            description: "The names of any custom fields whose values should be completely\
              \ redacted. This should generally only be used for fields that are not\
              \ available through the redact-entire-value-field property (for example,\
              \ custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        redactValueComponentsField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-redactValueComponentsFieldProp'
          type: array
        redactValueComponentsFieldName:
          items:
            description: "The names of any custom fields for which to redact components\
              \ within the value. This should generally only be used for fields that\
              \ are not available through the redact-value-components-field property\
              \ (for example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        tokenizeEntireValueField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-tokenizeEntireValueFieldProp'
          type: array
        tokenizeEntireValueFieldName:
          items:
            description: "The names of any custom fields whose values should be completely\
              \ tokenized. This should generally only be used for fields that are\
              \ not available through the tokenize-entire-value-field property (for\
              \ example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        tokenizeValueComponentsField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-tokenizeValueComponentsFieldProp'
          type: array
        tokenizeValueComponentsFieldName:
          items:
            description: "The names of any custom fields for which to tokenize components\
              \ within the value. This should generally only be used for fields that\
              \ are not available through the tokenize-value-components-field property\
              \ (for example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        description:
          description: A description for this Log Field Behavior
          type: string
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-behavior-defaultBehaviorProp'
      required:
      - schemas
      type: object
    Enumtext-access-log-field-behaviorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-behavior:text-access
      type: string
    add-json-formatted-access-log-field-behavior-request:
      allOf:
      - $ref: '#/components/schemas/add_text_access_log_field_behavior_request_allOf'
      - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-shared'
    json-formatted-access-log-field-behavior-response:
      allOf:
      - $ref: '#/components/schemas/text_access_log_field_behavior_response_allOf'
      - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-shared'
    json-formatted-access-log-field-behavior-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-formatted-access-log-field-behaviorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        preserveField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-preserveFieldProp'
          type: array
        preserveFieldName:
          items:
            description: "The names of any custom fields whose values should be preserved.\
              \ This should generally only be used for fields that are not available\
              \ through the preserve-field property (for example, custom log fields\
              \ defined in Server SDK extensions)."
            type: string
          type: array
        omitField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-omitFieldProp'
          type: array
        omitFieldName:
          items:
            description: "The names of any custom fields that should be omitted from\
              \ log messages. This should generally only be used for fields that are\
              \ not available through the omit-field property (for example, custom\
              \ log fields defined in Server SDK extensions)."
            type: string
          type: array
        redactEntireValueField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-redactEntireValueFieldProp'
          type: array
        redactEntireValueFieldName:
          items:
            description: "The names of any custom fields whose values should be completely\
              \ redacted. This should generally only be used for fields that are not\
              \ available through the redact-entire-value-field property (for example,\
              \ custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        redactValueComponentsField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-redactValueComponentsFieldProp'
          type: array
        redactValueComponentsFieldName:
          items:
            description: "The names of any custom fields for which to redact components\
              \ within the value. This should generally only be used for fields that\
              \ are not available through the redact-value-components-field property\
              \ (for example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        tokenizeEntireValueField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-tokenizeEntireValueFieldProp'
          type: array
        tokenizeEntireValueFieldName:
          items:
            description: "The names of any custom fields whose values should be completely\
              \ tokenized. This should generally only be used for fields that are\
              \ not available through the tokenize-entire-value-field property (for\
              \ example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        tokenizeValueComponentsField:
          items:
            $ref: '#/components/schemas/Enumlog-field-behavior-tokenizeValueComponentsFieldProp'
          type: array
        tokenizeValueComponentsFieldName:
          items:
            description: "The names of any custom fields for which to tokenize components\
              \ within the value. This should generally only be used for fields that\
              \ are not available through the tokenize-value-components-field property\
              \ (for example, custom log fields defined in Server SDK extensions)."
            type: string
          type: array
        description:
          description: A description for this Log Field Behavior
          type: string
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-behavior-defaultBehaviorProp'
      required:
      - schemas
      type: object
    Enumjson-formatted-access-log-field-behaviorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-behavior:json-formatted-access
      type: string
    Enumlog-field-behavior-redactValueComponentsFieldProp:
      description: The log fields whose values will include redacted components.
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    Enumlog-field-behavior-tokenizeEntireValueFieldProp:
      description: "The log fields whose values should be completely tokenized in\
        \ log messages. The field name will be included, but the value will be replaced\
        \ with a token that does not reveal the actual value, but that is generated\
        \ from the value."
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    Enumlog-field-behavior-omitFieldProp:
      description: The log fields that should be omitted entirely from log messages.
        Neither the field name nor value will be included.
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    Enumlog-field-behavior-preserveFieldProp:
      description: "The log fields whose values should be logged with the intended\
        \ value. The values for these fields will be preserved, although they may\
        \ be sanitized for parsability or safety purposes (for example, to escape\
        \ special characters in the value), and values that are too long may be truncated."
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    Enumlog-field-behavior-defaultBehaviorProp:
      description: "The default behavior that the server should exhibit for fields\
        \ for which no explicit behavior is defined. If no default behavior is defined,\
        \ the server will fall back to using the default behavior configured for the\
        \ syntax used for each log field."
      enum:
      - preserve
      - omit
      - redact-entire-value
      - redact-value-components
      - tokenize-entire-value
      - tokenize-value-components
      type: string
    Enumlog-field-behavior-tokenizeValueComponentsFieldProp:
      description: The log fields whose values will include tokenized components.
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    Enumlog-field-behavior-redactEntireValueFieldProp:
      description: "The log fields whose values should be completely redacted in log\
        \ messages. The field name will be included, but with a fixed value that does\
        \ not reflect the actual value for the field."
      enum:
      - abandon-message-id
      - add-attributes
      - add-entry-dn
      - add-undelete-from-dn
      - additional-info
      - administrative-operation
      - assurance-timeout-millis
      - authorization-dn
      - auto-authenticated-as
      - bind-authentication-dn
      - bind-authentication-failure-id
      - bind-authentication-failure-name
      - bind-authentication-failure-reason
      - bind-authentication-type
      - bind-authorization-dn
      - bind-dn
      - bind-protocol-version
      - bind-retired-password-used
      - bind-sasl-mechanism
      - change-to-soft-deleted-entry
      - cipher
      - client-connection-policy
      - collect-support-data-comment
      - collect-support-data-encrypted
      - collect-support-data-include-binary-files
      - collect-support-data-include-expensive-data
      - collect-support-data-include-extension-source
      - collect-support-data-include-replication-state-dump
      - collect-support-data-jstack-count
      - collect-support-data-log-duration
      - collect-support-data-log-file-head-collection-size-kb
      - collect-support-data-log-file-tail-collection-size-kb
      - collect-support-data-log-time-window
      - collect-support-data-report-count
      - collect-support-data-report-interval-seconds
      - collect-support-data-security-level
      - collect-support-data-use-sequential-mode
      - compare-assertion-value
      - compare-attribute-name
      - compare-entry-dn
      - connect-from-address
      - connect-from-port
      - connect-to-address
      - connect-to-port
      - connection-id
      - delete-entry-dn
      - delete-soft-deleted-entry-dn
      - deliver-otp-authentication-id
      - deliver-otp-preferred-delivery-mechanisms
      - deliver-password-reset-token-dn
      - deliver-password-reset-token-preferred-delivery-mechanisms
      - deliver-password-reset-token-successful-delivery-mechanism
      - deliver-password-reset-token-unsuccessful-delivery-mechanisms
      - diagnostic-message
      - disconnect-message
      - disconnect-reason
      - entry-rebalancing-admin-action-message
      - entry-rebalancing-base-dn
      - entry-rebalancing-entries-added-to-target
      - entry-rebalancing-entries-deleted-from-source
      - entry-rebalancing-entries-read-from-source
      - entry-rebalancing-error-message
      - entry-rebalancing-operation-id
      - entry-rebalancing-size-limit
      - entry-rebalancing-source-backend-set
      - entry-rebalancing-source-server
      - entry-rebalancing-source-server-altered
      - entry-rebalancing-target-backend-set
      - entry-rebalancing-target-server
      - entry-rebalancing-target-server-altered
      - export-reversible-passwords-backend-id
      - export-reversible-passwords-encryption-settings-definition-id
      - export-reversible-passwords-entries-excluded-not-matching-filter
      - export-reversible-passwords-entries-excluded-without-passwords
      - export-reversible-passwords-entries-exported-with-non-reversible-passwords
      - export-reversible-passwords-entries-exported-with-reversible-passwords
      - export-reversible-passwords-entries-exported-without-passwords
      - export-reversible-passwords-export-non-reversible-passwords
      - export-reversible-passwords-export-only-entries-with-passwords
      - export-reversible-passwords-filter
      - export-reversible-passwords-include-virtual-attributes
      - export-reversible-passwords-output-file
      - export-reversible-passwords-total-entries-examined
      - export-reversible-passwords-total-entries-excluded
      - export-reversible-passwords-total-entries-exported
      - extended-request-oid
      - extended-request-type
      - extended-response-oid
      - extended-response-type
      - externally-processed-bind-authentication-id
      - externally-processed-bind-auth-failure-reason
      - externally-processed-bind-end-client-ip-address
      - externally-processed-bind-external-mechanism-name
      - externally-processed-bind-was-password-based
      - externally-processed-bind-was-secure
      - externally-processed-bind-was-successful
      - generate-password-num-passwords
      - generate-password-max-validation-attempts
      - generate-password-password-generator
      - generate-password-password-policy
      - get-supported-otp-delivery-mechanisms-dn
      - gssapi-bind-qop
      - gssapi-bind-requested-authentication-id
      - gssapi-bind-requested-authorization-id
      - indexes-with-keys-accessed-exceeding-entry-limit
      - indexes-with-keys-accessed-near-entry-limit
      - instance-name
      - inter-server-bind-connection-privileges
      - inter-server-bind-connection-purpose
      - inter-server-bind-source-certificate-subject
      - inter-server-component
      - inter-server-control-forwarded-client-connection-policy
      - inter-server-properties
      - inter-server-operation-purpose
      - intermediate-client-request
      - intermediate-client-result
      - intermediate-response-name
      - intermediate-response-oid
      - intermediate-response-value
      - intermediate-responses-returned
      - issuer-certificate-subject-dn
      - ldap-client-decode-error-message
      - local-assurance-level
      - local-assurance-satisfied
      - matched-dn
      - message-id
      - missing-privileges
      - moddn-delete-old-rdn
      - moddn-entry-dn
      - moddn-new-rdn
      - moddn-new-superior-dn
      - modify-attributes
      - modify-entry-dn
      - multi-update-connection-id
      - multi-update-first-failed-operation
      - multi-update-first-failed-operation-error-message
      - multi-update-first-failed-operation-result-code
      - multi-update-operation-id
      - non-critical-json-formatted-request-control-decode-errors
      - non-critical-request-controls-ignored-due-to-acl
      - oauthbearer-bind-access-token-client-id
      - oauthbearer-bind-access-token-expiration-time
      - oauthbearer-bind-access-token-identifier
      - oauthbearer-bind-access-token-identity-mapper
      - oauthbearer-bind-access-token-is-active
      - oauthbearer-bind-access-token-issued-at
      - oauthbearer-bind-access-token-issuer
      - oauthbearer-bind-access-token-not-before
      - oauthbearer-bind-access-token-owner
      - oauthbearer-bind-access-token-scope
      - oauthbearer-bind-access-token-subject
      - oauthbearer-bind-access-token-type
      - oauthbearer-bind-access-token-username
      - oauthbearer-bind-access-token-validator
      - oauthbearer-bind-authorization-error-code
      - oauthbearer-bind-authorization-id
      - oauthbearer-bind-id-token-client-id
      - oauthbearer-bind-id-token-expiration-time
      - oauthbearer-bind-id-token-identifier
      - oauthbearer-bind-id-token-identity-mapper
      - oauthbearer-bind-id-token-is-active
      - oauthbearer-bind-id-token-issued-at
      - oauthbearer-bind-id-token-issuer
      - oauthbearer-bind-id-token-not-before
      - oauthbearer-bind-id-token-owner
      - oauthbearer-bind-id-token-subject
      - oauthbearer-bind-id-token-type
      - oauthbearer-bind-id-token-username
      - oauthbearer-bind-id-token-validator
      - operation-id
      - operation-oauth-scopes
      - operation-purpose
      - origin
      - pass-through-authentication-mapped-dn
      - pass-through-authentication-succeeded
      - pass-through-authentication-updated-local-password
      - password-modify-grace-login-used
      - password-modify-target-entry
      - password-modify-used-password-reset-token
      - password-policy-state-entry-dn
      - password-update-behavior-allow-pre-encoded-password
      - password-update-behavior-ignore-minimum-password-age
      - password-update-behavior-ignore-password-history
      - password-update-behavior-is-self-change
      - password-update-behavior-must-change-password
      - password-update-behavior-password-storage-scheme
      - password-update-behavior-skip-password-validation
      - peer-certificate-subject-dn
      - ping-one-pass-through-authentication-auth-failure-reason
      - ping-one-pass-through-authentication-mapped-id
      - ping-one-pass-through-authentication-updated-local-user-password
      - pluggable-pass-through-authentication-failure-reason
      - pluggable-pass-through-authentication-mapped-user-identifier
      - pluggable-pass-through-authentication-result-code
      - pluggable-pass-through-authentication-updated-local-user-password
      - pre-authorization-used-privileges
      - processing-time-millis
      - product-name
      - protocol
      - referral-urls
      - remote-assurance-level
      - remote-assurance-satisfied
      - replace-certificate-certificate-decode-error
      - replace-certificate-certificate-source
      - replace-certificate-key-store-error
      - replace-certificate-key-store-path
      - replace-certificate-private-key-decode-error
      - replace-certificate-request-decode-error
      - replace-certificate-tool-error
      - replication-change-id
      - request-control-oids
      - requester-dn
      - requester-ip-address
      - response-control-oids
      - response-delayed-by-assurance
      - result-code-name
      - result-code-value
      - search-base-dn
      - search-deref-policy
      - search-entries-returned
      - search-filter
      - search-requested-attributes
      - search-result-entry-dn
      - search-result-entry-attributes
      - search-scope-value
      - search-size-limit
      - search-time-limit-seconds
      - search-types-only
      - search-unindexed
      - server-assurance-results
      - servers-accessed
      - single-use-token-successful-delivery-mechanism
      - single-use-token-token-id
      - single-use-token-unsuccessful-delivery-mechanisms
      - single-use-token-user-dn
      - startup-id
      - target-host
      - target-port
      - target-protocol
      - thread-id
      - totp-shared-secret-authentication-id
      - totp-shared-secret-static-password-provided
      - triggered-by-connection-id
      - triggered-by-operation-id
      - uncached-data-accessed
      - uniqueness-request-control
      - used-privileges
      - using-admin-session-worker-thread
      - work-queue-wait-time-millis
      - yubikey-otp-bind-authentication-id
      - yubikey-otp-bind-authorization-id
      - yubikey-otp-device-authentication-id
      - yubikey-otp-device-static-password-provided
      - yubikey-otp-device-yubikey-public-id
      type: string
    proxy-server-instance-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumproxy-server-instanceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverInstanceType:
          $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
        serverInstanceName:
          description: "The name of this Server Instance. The instance name needs\
            \ to be unique if this server will be part of a topology of servers that\
            \ are connected to each other. Once set, it may not be changed."
          type: string
        clusterName:
          description: The name of the cluster to which this Server Instance belongs.
            Server instances within the same cluster will share the same cluster-wide
            configuration.
          type: string
        serverInstanceLocation:
          description: Specifies the location for the Server Instance.
          type: string
        hostname:
          description: The name of the host where this Server Instance is installed.
          type: string
        serverRoot:
          description: The file system path where this Server Instance is installed.
          type: string
        serverVersion:
          description: The version of the server.
          type: string
        interServerCertificate:
          description: The public component of the certificate used by this instance
            to protect inter-server communication and to perform server-specific encryption.
            This will generally be managed by the server and should only be altered
            by administrators under explicit direction from Ping Identity support
            personnel.
          type: string
        ldapPort:
          description: The TCP port on which this server is listening for LDAP connections.
          type: integer
        ldapsPort:
          description: The TCP port on which this server is listening for LDAP secure
            connections.
          type: integer
        httpPort:
          description: The TCP port on which this server is listening for HTTP connections.
          type: integer
        httpsPort:
          description: The TCP port on which this server is listening for HTTPS connections.
          type: integer
        replicationPort:
          description: The replication TCP port.
          type: integer
        replicationServerID:
          description: Specifies a unique identifier for the replication server on
            this server instance.
          type: integer
        replicationDomainServerID:
          items:
            description: Specifies a unique identifier for the Directory Server within
              the replication domain.
            type: integer
          type: array
        jmxPort:
          description: The TCP port on which this server is listening for JMX connections.
          type: integer
        jmxsPort:
          description: The TCP port on which this server is listening for JMX secure
            connections.
          type: integer
        preferredSecurity:
          $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
        startTLSEnabled:
          description: Indicates whether StartTLS is enabled on this server.
          type: boolean
        baseDN:
          items:
            description: The set of base DNs under the root DSE.
            type: string
          type: array
        memberOfServerGroup:
          items:
            description: The set of groups of which this server is a member.
            type: string
          type: array
      required:
      - clusterName
      - schemas
      - serverInstanceName
      - serverVersion
      type: object
    Enumproxy-server-instanceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-instance:proxy
      type: string
    metrics-engine-server-instance-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummetrics-engine-server-instanceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverInstanceType:
          $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
        serverInstanceName:
          description: "The name of this Server Instance. The instance name needs\
            \ to be unique if this server will be part of a topology of servers that\
            \ are connected to each other. Once set, it may not be changed."
          type: string
        clusterName:
          description: The name of the cluster to which this Server Instance belongs.
            Server instances within the same cluster will share the same cluster-wide
            configuration.
          type: string
        serverInstanceLocation:
          description: Specifies the location for the Server Instance.
          type: string
        hostname:
          description: The name of the host where this Server Instance is installed.
          type: string
        serverRoot:
          description: The file system path where this Server Instance is installed.
          type: string
        serverVersion:
          description: The version of the server.
          type: string
        interServerCertificate:
          description: The public component of the certificate used by this instance
            to protect inter-server communication and to perform server-specific encryption.
            This will generally be managed by the server and should only be altered
            by administrators under explicit direction from Ping Identity support
            personnel.
          type: string
        ldapPort:
          description: The TCP port on which this server is listening for LDAP connections.
          type: integer
        ldapsPort:
          description: The TCP port on which this server is listening for LDAP secure
            connections.
          type: integer
        httpPort:
          description: The TCP port on which this server is listening for HTTP connections.
          type: integer
        httpsPort:
          description: The TCP port on which this server is listening for HTTPS connections.
          type: integer
        replicationPort:
          description: The replication TCP port.
          type: integer
        replicationServerID:
          description: Specifies a unique identifier for the replication server on
            this server instance.
          type: integer
        replicationDomainServerID:
          items:
            description: Specifies a unique identifier for the Directory Server within
              the replication domain.
            type: integer
          type: array
        jmxPort:
          description: The TCP port on which this server is listening for JMX connections.
          type: integer
        jmxsPort:
          description: The TCP port on which this server is listening for JMX secure
            connections.
          type: integer
        preferredSecurity:
          $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
        startTLSEnabled:
          description: Indicates whether StartTLS is enabled on this server.
          type: boolean
        baseDN:
          items:
            description: The set of base DNs under the root DSE.
            type: string
          type: array
        memberOfServerGroup:
          items:
            description: The set of groups of which this server is a member.
            type: string
          type: array
      required:
      - clusterName
      - schemas
      - serverInstanceName
      - serverVersion
      type: object
    Enummetrics-engine-server-instanceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-instance:metrics-engine
      type: string
    authorize-server-instance-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumauthorize-server-instanceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverInstanceType:
          $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
        serverInstanceName:
          description: "The name of this Server Instance. The instance name needs\
            \ to be unique if this server will be part of a topology of servers that\
            \ are connected to each other. Once set, it may not be changed."
          type: string
        clusterName:
          description: The name of the cluster to which this Server Instance belongs.
            Server instances within the same cluster will share the same cluster-wide
            configuration.
          type: string
        serverInstanceLocation:
          description: Specifies the location for the Server Instance.
          type: string
        hostname:
          description: The name of the host where this Server Instance is installed.
          type: string
        serverRoot:
          description: The file system path where this Server Instance is installed.
          type: string
        serverVersion:
          description: The version of the server.
          type: string
        interServerCertificate:
          description: The public component of the certificate used by this instance
            to protect inter-server communication and to perform server-specific encryption.
            This will generally be managed by the server and should only be altered
            by administrators under explicit direction from Ping Identity support
            personnel.
          type: string
        ldapPort:
          description: The TCP port on which this server is listening for LDAP connections.
          type: integer
        ldapsPort:
          description: The TCP port on which this server is listening for LDAP secure
            connections.
          type: integer
        httpPort:
          description: The TCP port on which this server is listening for HTTP connections.
          type: integer
        httpsPort:
          description: The TCP port on which this server is listening for HTTPS connections.
          type: integer
        replicationPort:
          description: The replication TCP port.
          type: integer
        replicationServerID:
          description: Specifies a unique identifier for the replication server on
            this server instance.
          type: integer
        replicationDomainServerID:
          items:
            description: Specifies a unique identifier for the Directory Server within
              the replication domain.
            type: integer
          type: array
        jmxPort:
          description: The TCP port on which this server is listening for JMX connections.
          type: integer
        jmxsPort:
          description: The TCP port on which this server is listening for JMX secure
            connections.
          type: integer
        preferredSecurity:
          $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
        startTLSEnabled:
          description: Indicates whether StartTLS is enabled on this server.
          type: boolean
        baseDN:
          items:
            description: The set of base DNs under the root DSE.
            type: string
          type: array
        memberOfServerGroup:
          items:
            description: The set of groups of which this server is a member.
            type: string
          type: array
      required:
      - clusterName
      - schemas
      - serverInstanceName
      - serverVersion
      type: object
    Enumauthorize-server-instanceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-instance:authorize
      type: string
    directory-server-instance-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdirectory-server-instanceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverInstanceType:
          $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
        replicationSetName:
          description: The name of the replication set assigned to this Directory
            Server. Restricted domains are only replicated within instances using
            the same replication set name.
          type: string
        loadBalancingAlgorithmName:
          items:
            description: The name of the configuration object for a load-balancing
              algorithm that should include this server.
            type: string
          type: array
        serverInstanceName:
          description: "The name of this Server Instance. The instance name needs\
            \ to be unique if this server will be part of a topology of servers that\
            \ are connected to each other. Once set, it may not be changed."
          type: string
        clusterName:
          description: The name of the cluster to which this Server Instance belongs.
            Server instances within the same cluster will share the same cluster-wide
            configuration.
          type: string
        serverInstanceLocation:
          description: Specifies the location for the Server Instance.
          type: string
        hostname:
          description: The name of the host where this Server Instance is installed.
          type: string
        serverRoot:
          description: The file system path where this Server Instance is installed.
          type: string
        serverVersion:
          description: The version of the server.
          type: string
        interServerCertificate:
          description: The public component of the certificate used by this instance
            to protect inter-server communication and to perform server-specific encryption.
            This will generally be managed by the server and should only be altered
            by administrators under explicit direction from Ping Identity support
            personnel.
          type: string
        ldapPort:
          description: The TCP port on which this server is listening for LDAP connections.
          type: integer
        ldapsPort:
          description: The TCP port on which this server is listening for LDAP secure
            connections.
          type: integer
        httpPort:
          description: The TCP port on which this server is listening for HTTP connections.
          type: integer
        httpsPort:
          description: The TCP port on which this server is listening for HTTPS connections.
          type: integer
        replicationPort:
          description: The replication TCP port.
          type: integer
        replicationServerID:
          description: Specifies a unique identifier for the replication server on
            this server instance.
          type: integer
        replicationDomainServerID:
          items:
            description: Specifies a unique identifier for the Directory Server within
              the replication domain.
            type: integer
          type: array
        jmxPort:
          description: The TCP port on which this server is listening for JMX connections.
          type: integer
        jmxsPort:
          description: The TCP port on which this server is listening for JMX secure
            connections.
          type: integer
        preferredSecurity:
          $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
        startTLSEnabled:
          description: Indicates whether StartTLS is enabled on this server.
          type: boolean
        baseDN:
          items:
            description: The set of base DNs under the root DSE.
            type: string
          type: array
        memberOfServerGroup:
          items:
            description: The set of groups of which this server is a member.
            type: string
          type: array
      required:
      - clusterName
      - schemas
      - serverInstanceName
      - serverVersion
      type: object
    Enumdirectory-server-instanceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-instance:directory
      type: string
    sync-server-instance-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsync-server-instanceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverInstanceType:
          $ref: '#/components/schemas/Enumserver-instance-serverInstanceTypeProp'
        serverInstanceName:
          description: "The name of this Server Instance. The instance name needs\
            \ to be unique if this server will be part of a topology of servers that\
            \ are connected to each other. Once set, it may not be changed."
          type: string
        clusterName:
          description: The name of the cluster to which this Server Instance belongs.
            Server instances within the same cluster will share the same cluster-wide
            configuration.
          type: string
        serverInstanceLocation:
          description: Specifies the location for the Server Instance.
          type: string
        hostname:
          description: The name of the host where this Server Instance is installed.
          type: string
        serverRoot:
          description: The file system path where this Server Instance is installed.
          type: string
        serverVersion:
          description: The version of the server.
          type: string
        interServerCertificate:
          description: The public component of the certificate used by this instance
            to protect inter-server communication and to perform server-specific encryption.
            This will generally be managed by the server and should only be altered
            by administrators under explicit direction from Ping Identity support
            personnel.
          type: string
        ldapPort:
          description: The TCP port on which this server is listening for LDAP connections.
          type: integer
        ldapsPort:
          description: The TCP port on which this server is listening for LDAP secure
            connections.
          type: integer
        httpPort:
          description: The TCP port on which this server is listening for HTTP connections.
          type: integer
        httpsPort:
          description: The TCP port on which this server is listening for HTTPS connections.
          type: integer
        replicationPort:
          description: The replication TCP port.
          type: integer
        replicationServerID:
          description: Specifies a unique identifier for the replication server on
            this server instance.
          type: integer
        replicationDomainServerID:
          items:
            description: Specifies a unique identifier for the Directory Server within
              the replication domain.
            type: integer
          type: array
        jmxPort:
          description: The TCP port on which this server is listening for JMX connections.
          type: integer
        jmxsPort:
          description: The TCP port on which this server is listening for JMX secure
            connections.
          type: integer
        preferredSecurity:
          $ref: '#/components/schemas/Enumserver-instance-preferredSecurityProp'
        startTLSEnabled:
          description: Indicates whether StartTLS is enabled on this server.
          type: boolean
        baseDN:
          items:
            description: The set of base DNs under the root DSE.
            type: string
          type: array
        memberOfServerGroup:
          items:
            description: The set of groups of which this server is a member.
            type: string
          type: array
      required:
      - clusterName
      - schemas
      - serverInstanceName
      - serverVersion
      type: object
    Enumsync-server-instanceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-instance:sync
      type: string
    Enumserver-instance-preferredSecurityProp:
      description: Specifies the preferred mechanism to use for securing connections
        to the server.
      enum:
      - none
      - ssl
      - starttls
      type: string
    Enumserver-instance-serverInstanceTypeProp:
      description: Specifies the type of server installation.
      enum:
      - ds
      - proxy
      - authorize
      - metrics
      - sync
      type: string
    add-summarize-log-file-rotation-listener-request:
      allOf:
      - $ref: '#/components/schemas/add_summarize_log_file_rotation_listener_request_allOf'
      - $ref: '#/components/schemas/summarize-log-file-rotation-listener-shared'
    summarize-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/summarize_log_file_rotation_listener_response_allOf'
      - $ref: '#/components/schemas/summarize-log-file-rotation-listener-shared'
    summarize-log-file-rotation-listener-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsummarize-log-file-rotation-listenerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        outputDirectory:
          description: "The path to the directory in which the summarize-access-log\
            \ output should be written. If no value is provided, the output file will\
            \ be written into the same directory as the rotated log file."
          type: string
        description:
          description: A description for this Log File Rotation Listener
          type: string
        enabled:
          description: Indicates whether the Log File Rotation Listener is enabled
            for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsummarize-log-file-rotation-listenerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:summarize
      type: string
    add-copy-log-file-rotation-listener-request:
      allOf:
      - $ref: '#/components/schemas/add_summarize_log_file_rotation_listener_request_allOf'
      - $ref: '#/components/schemas/copy-log-file-rotation-listener-shared'
    copy-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/summarize_log_file_rotation_listener_response_allOf'
      - $ref: '#/components/schemas/copy-log-file-rotation-listener-shared'
    copy-log-file-rotation-listener-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcopy-log-file-rotation-listenerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        copyToDirectory:
          description: "The path to the directory to which log files should be copied.\
            \ It must be different from the directory to which the log file is originally\
            \ written, and administrators should ensure that the filesystem has sufficient\
            \ space to hold files as they are copied."
          type: string
        compressOnCopy:
          description: Indicates whether the file should be gzip-compressed as it
            is copied into the destination directory.
          type: boolean
        description:
          description: A description for this Log File Rotation Listener
          type: string
        enabled:
          description: Indicates whether the Log File Rotation Listener is enabled
            for use.
          type: boolean
      required:
      - copyToDirectory
      - enabled
      - schemas
      type: object
    Enumcopy-log-file-rotation-listenerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:copy
      type: string
    add-third-party-log-file-rotation-listener-request:
      allOf:
      - $ref: '#/components/schemas/add_summarize_log_file_rotation_listener_request_allOf'
      - $ref: '#/components/schemas/third-party-log-file-rotation-listener-shared'
    third-party-log-file-rotation-listener-response:
      allOf:
      - $ref: '#/components/schemas/summarize_log_file_rotation_listener_response_allOf'
      - $ref: '#/components/schemas/third-party-log-file-rotation-listener-shared'
    third-party-log-file-rotation-listener-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-log-file-rotation-listenerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Log File Rotation Listener.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Log File Rotation Listener. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Log File Rotation Listener
          type: string
        enabled:
          description: Indicates whether the Log File Rotation Listener is enabled
            for use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-log-file-rotation-listenerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-file-rotation-listener:third-party
      type: string
    add-password-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_password_policy_request_allOf'
      - $ref: '#/components/schemas/password-policy-shared'
    password-policy-response:
      allOf:
      - $ref: '#/components/schemas/password_policy_response_allOf'
      - $ref: '#/components/schemas/password-policy-shared'
    password-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpassword-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Password Policy
          type: string
        requireSecureAuthentication:
          description: Indicates whether users with the associated password policy
            are required to authenticate in a secure manner.
          type: boolean
        requireSecurePasswordChanges:
          description: Indicates whether users with the associated password policy
            are required to change their password in a secure manner that does not
            expose the credentials.
          type: boolean
        accountStatusNotificationHandler:
          items:
            description: Specifies the names of the account status notification handlers
              that are used with the associated password storage scheme.
            type: string
          type: array
        stateUpdateFailurePolicy:
          $ref: '#/components/schemas/Enumpassword-policy-stateUpdateFailurePolicyProp'
        enableDebug:
          description: Indicates whether to enable debugging for the password policy
            state.
          type: boolean
        passwordAttribute:
          description: Specifies the attribute type used to hold user passwords.
          type: string
        defaultPasswordStorageScheme:
          items:
            description: Specifies the names of the password storage schemes that
              are used to encode clear-text passwords for this password policy.
            type: string
          type: array
        deprecatedPasswordStorageScheme:
          items:
            description: Specifies the names of the password storage schemes that
              are considered deprecated for this password policy.
            type: string
          type: array
        allowMultiplePasswordValues:
          description: Indicates whether user entries can have multiple distinct values
            for the password attribute.
          type: boolean
        allowPreEncodedPasswords:
          description: Indicates whether users can change their passwords by providing
            a pre-encoded value.
          type: boolean
        passwordValidator:
          items:
            description: Specifies the names of the password validators that are used
              with the associated password storage scheme.
            type: string
          type: array
        bindPasswordValidator:
          items:
            description: Specifies the names of the password validators that should
              be invoked for bind operations.
            type: string
          type: array
        minimumBindPasswordValidationFrequency:
          description: Indicates how frequently password validation should be performed
            during bind operations for each user to whom this password policy is assigned.
          type: string
        bindPasswordValidationFailureAction:
          $ref: '#/components/schemas/Enumpassword-policy-bindPasswordValidationFailureActionProp'
        passwordGenerator:
          description: Specifies the name of the password generator that is used with
            the associated password policy.
          type: string
        passwordHistoryCount:
          description: Specifies the maximum number of former passwords to maintain
            in the password history.
          type: integer
        passwordHistoryDuration:
          description: Specifies the maximum length of time that passwords remain
            in the password history.
          type: string
        minPasswordAge:
          description: Specifies the minimum length of time after a password change
            before the user is allowed to change the password again.
          type: string
        maxPasswordAge:
          description: "Specifies the maximum length of time that a user can continue\
            \ using the same password before it must be changed (that is, the password\
            \ expiration interval)."
          type: string
        passwordExpirationWarningInterval:
          description: Specifies the maximum length of time before a user's password
            actually expires that the server begins to include warning notifications
            in bind responses for that user.
          type: string
        expirePasswordsWithoutWarning:
          description: Indicates whether the Directory Server allows a user's password
            to expire even if that user has never seen an expiration warning notification.
          type: boolean
        returnPasswordExpirationControls:
          $ref: '#/components/schemas/Enumpassword-policy-returnPasswordExpirationControlsProp'
        allowExpiredPasswordChanges:
          description: Indicates whether a user whose password is expired is still
            allowed to change that password using the password modify extended operation.
          type: boolean
        graceLoginCount:
          description: Specifies the number of grace logins that a user is allowed
            after the account has expired to allow that user to choose a new password.
          type: integer
        requireChangeByTime:
          description: Specifies the time by which all users with the associated password
            policy must change their passwords.
          type: string
        lockoutFailureCount:
          description: Specifies the maximum number of authentication failures that
            a user is allowed before the account is locked out.
          type: integer
        lockoutDuration:
          description: Specifies the length of time that an account is locked after
            too many authentication failures.
          type: string
        lockoutFailureExpirationInterval:
          description: Specifies the length of time before an authentication failure
            is no longer counted against a user for the purposes of account lockout.
          type: string
        ignoreDuplicatePasswordFailures:
          description: "Indicates whether to ignore subsequent authentication failures\
            \ using the same password as an earlier failed authentication attempt\
            \ (within the time frame defined by the lockout failure expiration interval).\
            \ If this option is \"true\", then multiple failed attempts using the\
            \ same password will be considered only a single failure. If this option\
            \ is \"false\", then any failure will be tracked regardless of whether\
            \ it used the same password as an earlier attempt."
          type: boolean
        failureLockoutAction:
          description: The action that the server should take for authentication attempts
            that target a user with more than the configured number of outstanding
            authentication failures.
          type: string
        idleLockoutInterval:
          description: "Specifies the maximum length of time that an account may remain\
            \ idle (that is, the associated user does not authenticate to the server)\
            \ before that user is locked out."
          type: string
        allowUserPasswordChanges:
          description: Indicates whether users can change their own passwords.
          type: boolean
        passwordChangeRequiresCurrentPassword:
          description: Indicates whether user password changes must use the password
            modify extended operation and must include the user's current password
            before the change is allowed.
          type: boolean
        passwordRetirementBehavior:
          items:
            $ref: '#/components/schemas/Enumpassword-policy-passwordRetirementBehaviorProp'
          type: array
        maxRetiredPasswordAge:
          description: Specifies the maximum length of time that a retired password
            should be considered valid and may be used to authenticate to the server.
          type: string
        allowedPasswordResetTokenUseCondition:
          items:
            $ref: '#/components/schemas/Enumpassword-policy-allowedPasswordResetTokenUseConditionProp'
          type: array
        forceChangeOnAdd:
          description: Indicates whether users are forced to change their passwords
            upon first authenticating to the Directory Server after their account
            has been created.
          type: boolean
        forceChangeOnReset:
          description: "Indicates whether users are forced to change their passwords\
            \ if they are reset by an administrator. If a user's password is changed\
            \ by any other user, that is considered an administrative password reset."
          type: boolean
        maxPasswordResetAge:
          description: Specifies the maximum length of time that users have to change
            passwords after they have been reset by an administrator before they become
            locked.
          type: string
        skipValidationForAdministrators:
          description: Indicates whether passwords set by administrators are allowed
            to bypass the password validation process that is required for user password
            changes.
          type: boolean
        maximumRecentLoginHistorySuccessfulAuthenticationCount:
          description: The maximum number of successful authentication attempts to
            include in the recent login history for each account.
          type: integer
        maximumRecentLoginHistorySuccessfulAuthenticationDuration:
          description: The maximum age of successful authentication attempts to include
            in the recent login history for each account.
          type: string
        maximumRecentLoginHistoryFailedAuthenticationCount:
          description: The maximum number of failed authentication attempts to include
            in the recent login history for each account.
          type: integer
        maximumRecentLoginHistoryFailedAuthenticationDuration:
          description: The maximum age of failed authentication attempts to include
            in the recent login history for each account.
          type: string
        recentLoginHistorySimilarAttemptBehavior:
          $ref: '#/components/schemas/Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp'
        lastLoginIPAddressAttribute:
          description: Specifies the name or OID of the attribute type that is used
            to hold the IP address of the client from which the user last authenticated.
          type: string
        lastLoginTimeAttribute:
          description: Specifies the name or OID of the attribute type that is used
            to hold the last login time for users with the associated password policy.
          type: string
        lastLoginTimeFormat:
          description: "Specifies the format string that is used to generate the last\
            \ login time value for users with the associated password policy. Last\
            \ login time values will be written using the UTC (also known as GMT,\
            \ or Greenwich Mean Time) time zone."
          type: string
        previousLastLoginTimeFormat:
          items:
            description: Specifies the format string(s) that might have been used
              with the last login time at any point in the past for users associated
              with the password policy.
            type: string
          type: array
      required:
      - defaultPasswordStorageScheme
      - passwordAttribute
      type: object
    Enumpassword-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-policy
      type: string
    Enumpassword-policy-stateUpdateFailurePolicyProp:
      description: Specifies how the server deals with the inability to update password
        policy state information during an authentication attempt.
      enum:
      - ignore
      - reactive
      - proactive
      type: string
    Enumpassword-policy-bindPasswordValidationFailureActionProp:
      description: Specifies the behavior that the server should exhibit if a bind
        password fails validation by one or more of the configured bind password validators.
      enum:
      - reject-bind
      - force-password-change
      - generate-account-status-notification
      type: string
    Enumpassword-policy-returnPasswordExpirationControlsProp:
      description: Indicates whether the server should return the password expiring
        and password expired response controls (as described in draft-vchu-ldap-pwd-policy).
      enum:
      - unless-password-policy-control-is-used
      - always
      - never
      type: string
    Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp:
      description: "The behavior that the server will exhibit when multiple similar\
        \ authentication attempts (with the same values for the successful, authentication-method,\
        \ client-ip-address, and failure-reason fields) are processed for an account."
      enum:
      - collapse-similar-attempts-on-the-same-date
      - maintain-every-attempt
      - update-at-most-once-per-day
      type: string
    Enumpassword-policy-allowedPasswordResetTokenUseConditionProp:
      description: "The set of conditions under which a user governed by this Password\
        \ Policy will be permitted to generate a password reset token via the deliver\
        \ password reset token extended operation, and to use that token in lieu of\
        \ the current password via the password modify extended operation."
      enum:
      - account-usable
      - password-expired
      - account-locked-due-to-failures
      - account-locked-due-to-idle-time-limit
      - account-locked-due-to-admin-reset-timeout
      - account-locked-due-to-validation-failure
      type: string
    Enumpassword-policy-passwordRetirementBehaviorProp:
      description: Specifies the conditions under which the server may retire a user's
        current password in the course of setting a new password for that user (whether
        via a modify operation or a password modify extended operation).
      enum:
      - retire-on-self-change
      - retire-on-administrative-reset
      - retire-on-request-with-control
      type: string
    add-delegated-admin-rights-request:
      allOf:
      - $ref: '#/components/schemas/add_delegated_admin_rights_request_allOf'
      - $ref: '#/components/schemas/delegated-admin-rights-shared'
    delegated-admin-rights-response:
      allOf:
      - $ref: '#/components/schemas/delegated_admin_rights_response_allOf'
      - $ref: '#/components/schemas/delegated-admin-rights-shared'
    delegated-admin-rights-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-rightsSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Delegated Admin Rights
          type: string
        enabled:
          description: Indicates whether the Delegated Admin Rights is enabled.
          type: boolean
        adminUserDN:
          description: "Specifies the DN of an administrative user who has authority\
            \ to manage resources. Either admin-user-dn or admin-group-dn must be\
            \ specified, but not both."
          type: string
        adminGroupDN:
          description: "Specifies the DN of a group of administrative users who have\
            \ authority to manage resources. Either admin-user-dn or admin-group-dn\
            \ must be specified, but not both."
          type: string
      required:
      - enabled
      type: object
    Enumdelegated-admin-rightsSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:delegated-admin-rights
      type: string
    add-default-uncached-attribute-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_attribute_criteria_request_allOf'
      - $ref: '#/components/schemas/default-uncached-attribute-criteria-shared'
    default-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_attribute_criteria_response_allOf'
      - $ref: '#/components/schemas/default-uncached-attribute-criteria-shared'
    default-uncached-attribute-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdefault-uncached-attribute-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Uncached Attribute Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Attribute Criteria is enabled
            for use in the server.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumdefault-uncached-attribute-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:default
      type: string
    add-groovy-scripted-uncached-attribute-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_attribute_criteria_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-shared'
    groovy-scripted-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_attribute_criteria_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-shared'
    groovy-scripted-uncached-attribute-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-uncached-attribute-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Uncached Attribute Criteria.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Uncached Attribute Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Uncached Attribute Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Attribute Criteria is enabled
            for use in the server.
          type: boolean
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-uncached-attribute-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:groovy-scripted
      type: string
    add-simple-uncached-attribute-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_attribute_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-uncached-attribute-criteria-shared'
    simple-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_attribute_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-uncached-attribute-criteria-shared'
    simple-uncached-attribute-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-uncached-attribute-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        attributeType:
          items:
            description: Specifies the attribute types for attributes that may be
              written to the uncached-id2entry database.
            type: string
          type: array
        minValueCount:
          description: Specifies the minimum number of values that an attribute must
            have before it will be written into the uncached-id2entry database.
          type: integer
        minTotalValueSize:
          description: "Specifies the minimum total value size (i.e., the sum of the\
            \ sizes of all values) that an attribute must have before it will be written\
            \ into the uncached-id2entry database."
          type: string
        description:
          description: A description for this Uncached Attribute Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Attribute Criteria is enabled
            for use in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumsimple-uncached-attribute-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:simple
      type: string
    add-third-party-uncached-attribute-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_attribute_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-shared'
    third-party-uncached-attribute-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_attribute_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-shared'
    third-party-uncached-attribute-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-uncached-attribute-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Uncached Attribute Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Uncached Attribute Criteria. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Uncached Attribute Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Attribute Criteria is enabled
            for use in the server.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-uncached-attribute-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:third-party
      type: string
    add-result-code-map-request:
      allOf:
      - $ref: '#/components/schemas/add_result_code_map_request_allOf'
      - $ref: '#/components/schemas/result-code-map-shared'
    result-code-map-response:
      allOf:
      - $ref: '#/components/schemas/result_code_map_response_allOf'
      - $ref: '#/components/schemas/result-code-map-shared'
    result-code-map-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumresult-code-mapSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Result Code Map
          type: string
        bindAccountLockedResultCode:
          description: Specifies the result code that should be returned if a bind
            attempt fails because the user's account is locked as a result of too
            many failed authentication attempts.
          type: integer
        bindMissingUserResultCode:
          description: Specifies the result code that should be returned if a bind
            attempt fails because the target user entry does not exist in the server.
          type: integer
        bindMissingPasswordResultCode:
          description: Specifies the result code that should be returned if a password-based
            bind attempt fails because the target user entry does not have a password.
          type: integer
        serverErrorResultCode:
          description: Specifies the result code that should be returned if a generic
            error occurs within the server.
          type: integer
      type: object
    Enumresult-code-mapSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:result-code-map
      type: string
    replication-synchronization-provider-response:
      example:
        numUpdateReplayThreads: 0
        schemas:
        - null
        description: description
        enabled: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreplication-synchronization-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        numUpdateReplayThreads:
          description: Specifies the number of update replay threads.
          type: integer
        description:
          description: A description for this Synchronization Provider
          type: string
        enabled:
          description: Indicates whether the Synchronization Provider is enabled for
            use.
          type: boolean
      required:
      - enabled
      type: object
    Enumreplication-synchronization-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:synchronization-provider:replication
      type: string
    add-simple-connection-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_connection_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
    simple-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_connection_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-connection-criteria-shared'
    simple-connection-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-connection-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        includedClientAddress:
          items:
            description: Specifies an address mask that may be used to specify a set
              of clients that should be included in this Simple Connection Criteria.
            type: string
          type: array
        excludedClientAddress:
          items:
            description: Specifies an address mask that may be used to specify a set
              of clients that should be excluded from this Simple Connection Criteria.
            type: string
          type: array
        includedConnectionHandler:
          items:
            description: Specifies a connection handler for clients that should be
              included in this Simple Connection Criteria.
            type: string
          type: array
        excludedConnectionHandler:
          items:
            description: Specifies a connection handler for clients that should be
              excluded from this Simple Connection Criteria.
            type: string
          type: array
        includedProtocol:
          items:
            description: Specifies the name of a communication protocol that should
              be used by clients included in this Simple Connection Criteria.
            type: string
          type: array
        excludedProtocol:
          items:
            description: Specifies the name of a communication protocol that should
              be used by clients excluded from this Simple Connection Criteria.
            type: string
          type: array
        communicationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-communicationSecurityLevelProp'
        userAuthType:
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-userAuthTypeProp'
          type: array
        authenticationSecurityLevel:
          $ref: '#/components/schemas/Enumconnection-criteria-authenticationSecurityLevelProp'
        includedUserSASLMechanism:
          items:
            description: "Specifies the name of a SASL mechanism that should be used\
              \ by clients included in this Simple Connection Criteria. This will\
              \ only be taken into account for client connections that have authenticated\
              \ to the server using a SASL mechanism and will be ignored for unauthenticated\
              \ client connections and for client connections that authenticated using\
              \ some other method (e.g., those performing simple or internal authentication)."
            type: string
          type: array
        excludedUserSASLMechanism:
          items:
            description: "Specifies the name of a SASL mechanism that should be used\
              \ by clients excluded from this Simple Connection Criteria. This will\
              \ only be taken into account for client connections that have authenticated\
              \ to the server using a SASL mechanism and will be ignored for unauthenticated\
              \ client connections and for client connections that authenticated using\
              \ some other method (e.g., those performing simple or internal authentication)."
            type: string
          type: array
        includedUserBaseDN:
          items:
            description: "Specifies a base DN below which authenticated user entries\
              \ may exist for clients included in this Simple Connection Criteria.\
              \ This will only be taken into account for client connections that have\
              \ authenticated to the server and will be ignored for unauthenticated\
              \ client connections. Refer to the authz version of this property in\
              \ Simple Result Criteria if operations are being proxied (performed\
              \ using proxied authorization), and you need to match the originating\
              \ user of the operation rather than the proxy user (the user the proxy\
              \ authenticated as)."
            type: string
          type: array
        excludedUserBaseDN:
          items:
            description: "Specifies a base DN below which authenticated user entries\
              \ may exist for clients excluded from this Simple Connection Criteria.\
              \ This will only be taken into account for client connections that have\
              \ authenticated to the server and will be ignored for unauthenticated\
              \ client connections. Refer to the authz version of this property in\
              \ Simple Result Criteria if operations are being proxied (performed\
              \ using proxied authorization), and you need to match the originating\
              \ user of the operation rather than the proxy user (the user the proxy\
              \ authenticated as)."
            type: string
          type: array
        allIncludedUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authenticated users\
              \ must exist for clients included in this Simple Connection Criteria.\
              \ If any group DNs are provided, then the authenticated user must be\
              \ a member of all of those groups. This will only be taken into account\
              \ for client connections that have authenticated to the server and will\
              \ be ignored for unauthenticated client connections. Refer to the authz\
              \ version of this property in Simple Result Criteria if operations are\
              \ being proxied (performed using proxied authorization), and you need\
              \ to match the originating user of the operation rather than the proxy\
              \ user (the user the proxy authenticated as)."
            type: string
          type: array
        anyIncludedUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authenticated users\
              \ may exist for clients included in this Simple Connection Criteria.\
              \ If any group DNs are provided, then the authenticated user must be\
              \ a member of at least one of those groups. This will only be taken\
              \ into account for client connections that have authenticated to the\
              \ server and will be ignored for unauthenticated client connections.\
              \ Refer to the authz version of this property in Simple Result Criteria\
              \ if operations are being proxied (performed using proxied authorization),\
              \ and you need to match the originating user of the operation rather\
              \ than the proxy user (the user the proxy authenticated as)."
            type: string
          type: array
        notAllIncludedUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authenticated users\
              \ should not exist for clients included in this Simple Connection Criteria.\
              \ If any group DNs are provided, then the authenticated user must not\
              \ be a member of at least one of those groups (that is, the user may\
              \ be a member of zero or more of those groups, but not of all of them).\
              \ This will only be taken into account for client connections that have\
              \ authenticated to the server and will be ignored for unauthenticated\
              \ client connections. Refer to the authz version of this property in\
              \ Simple Result Criteria if operations are being proxied (performed\
              \ using proxied authorization), and you need to match the originating\
              \ user of the operation rather than the proxy user (the user the proxy\
              \ authenticated as)."
            type: string
          type: array
        noneIncludedUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authenticated users\
              \ must not exist for clients included in this Simple Connection Criteria.\
              \ If any group DNs are provided, then the authenticated user must not\
              \ be a member any of those groups. This will only be taken into account\
              \ for client connections that have authenticated to the server and will\
              \ be ignored for unauthenticated client connections. Refer to the authz\
              \ version of this property in Simple Result Criteria if operations are\
              \ being proxied (performed using proxied authorization), and you need\
              \ to match the originating user of the operation rather than the proxy\
              \ user (the user the proxy authenticated as)."
            type: string
          type: array
        allIncludedUserFilter:
          items:
            description: "Specifies a search filter that must match the entry of the\
              \ authenticated user for clients included in this Simple Connection\
              \ Criteria. If any filters are provided, then all of those filters must\
              \ match the authenticated user entry. This will only be taken into account\
              \ for client connections that have authenticated to the server and will\
              \ be ignored for unauthenticated client connections."
            type: string
          type: array
        anyIncludedUserFilter:
          items:
            description: "Specifies a search filter that may match the entry of the\
              \ authenticated user for clients included in this Simple Connection\
              \ Criteria. If any filters are provided, then at least one of those\
              \ filters must match the authenticated user entry. This will only be\
              \ taken into account for client connections that have authenticated\
              \ to the server and will be ignored for unauthenticated client connections."
            type: string
          type: array
        notAllIncludedUserFilter:
          items:
            description: "Specifies a search filter that should not match the entry\
              \ of the authenticated user for clients included in this Simple Connection\
              \ Criteria. If any filters are provided, then at least one of those\
              \ filters must not match the authenticated user entry (that is, the\
              \ user entry may match zero or more of those filters, but not all of\
              \ them). This will only be taken into account for client connections\
              \ that have authenticated to the server and will be ignored for unauthenticated\
              \ client connections."
            type: string
          type: array
        noneIncludedUserFilter:
          items:
            description: "Specifies a search filter that must not match the entry\
              \ of the authenticated user for clients included in this Simple Connection\
              \ Criteria. If any filters are provided, then none of those filters\
              \ may match the authenticated user entry. This will only be taken into\
              \ account for client connections that have authenticated to the server\
              \ and will be ignored for unauthenticated client connections."
            type: string
          type: array
        allIncludedUserPrivilege:
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-allIncludedUserPrivilegeProp'
          type: array
        anyIncludedUserPrivilege:
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-anyIncludedUserPrivilegeProp'
          type: array
        notAllIncludedUserPrivilege:
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-notAllIncludedUserPrivilegeProp'
          type: array
        noneIncludedUserPrivilege:
          items:
            $ref: '#/components/schemas/Enumconnection-criteria-noneIncludedUserPrivilegeProp'
          type: array
        description:
          description: A description for this Connection Criteria
          type: string
      required:
      - schemas
      type: object
    Enumsimple-connection-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-criteria:simple
      type: string
    add-aggregate-connection-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_connection_criteria_request_allOf'
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
    aggregate-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_connection_criteria_response_allOf'
      - $ref: '#/components/schemas/aggregate-connection-criteria-shared'
    aggregate-connection-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-connection-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedConnectionCriteria:
          items:
            description: "Specifies a connection criteria object that must match the\
              \ associated client connection in order to match the aggregate connection\
              \ criteria. If one or more all-included connection criteria objects\
              \ are provided, then a client connection must match all of them in order\
              \ to match the aggregate connection criteria."
            type: string
          type: array
        anyIncludedConnectionCriteria:
          items:
            description: "Specifies a connection criteria object that may match the\
              \ associated client connection in order to match the aggregate connection\
              \ criteria. If one or more any-included connection criteria objects\
              \ are provided, then a client connection must match at least one of\
              \ them in order to match the aggregate connection criteria."
            type: string
          type: array
        notAllIncludedConnectionCriteria:
          items:
            description: "Specifies a connection criteria object that should not match\
              \ the associated client connection in order to match the aggregate connection\
              \ criteria. If one or more not-all-included connection criteria objects\
              \ are provided, then a client connection must not match all of them\
              \ (that is, it may match zero or more of them, but it must not match\
              \ all of them) in order to match the aggregate connection criteria."
            type: string
          type: array
        noneIncludedConnectionCriteria:
          items:
            description: "Specifies a connection criteria object that must not match\
              \ the associated client connection in order to match the aggregate connection\
              \ criteria. If one or more none-included connection criteria objects\
              \ are provided, then a client connection must not match any of them\
              \ in order to match the aggregate connection criteria."
            type: string
          type: array
        description:
          description: A description for this Connection Criteria
          type: string
      required:
      - schemas
      type: object
    Enumaggregate-connection-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-criteria:aggregate
      type: string
    add-third-party-connection-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_connection_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
    third-party-connection-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_connection_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-connection-criteria-shared'
    third-party-connection-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-connection-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Connection Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Connection Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Connection Criteria
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-connection-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-criteria:third-party
      type: string
    Enumconnection-criteria-noneIncludedUserPrivilegeProp:
      description: "Specifies the name of a privilege that must not be held by the\
        \ authenticated user for clients included in this Simple Connection Criteria.\
        \ If any privilege names are provided, then the authenticated user must not\
        \ have any of those privileges. This will only be taken into account for client\
        \ connections that have authenticated to the server and will be ignored for\
        \ unauthenticated client connections."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumconnection-criteria-communicationSecurityLevelProp:
      description: Indicates whether this Simple Connection Criteria should require
        or allow clients using a secure communication channel.
      enum:
      - any
      - secure-only
      - insecure-only
      type: string
    Enumconnection-criteria-anyIncludedUserPrivilegeProp:
      description: "Specifies the name of a privilege that may be held by the authenticated\
        \ user for clients included in this Simple Connection Criteria. If any privilege\
        \ names are provided, then the authenticated user must have at least one of\
        \ those privileges. This will only be taken into account for client connections\
        \ that have authenticated to the server and will be ignored for unauthenticated\
        \ client connections."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumconnection-criteria-allIncludedUserPrivilegeProp:
      description: "Specifies the name of a privilege that must be held by the authenticated\
        \ user for clients included in this Simple Connection Criteria. If any privilege\
        \ names are provided, then the authenticated user must have all of those privileges.\
        \ This will only be taken into account for client connections that have authenticated\
        \ to the server and will be ignored for unauthenticated client connections."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumconnection-criteria-authenticationSecurityLevelProp:
      description: Indicates whether this Simple Connection Criteria should require
        or allow clients that authenticated using a secure manner. This will only
        be taken into account for client connections that have authenticated to the
        server and will be ignored for unauthenticated client connections.
      enum:
      - any
      - secure-only
      - insecure-only
      type: string
    Enumconnection-criteria-userAuthTypeProp:
      description: Specifies the authentication types for client connections that
        may be included in this Simple Connection Criteria.
      enum:
      - none
      - simple
      - sasl
      - internal
      type: string
    Enumconnection-criteria-notAllIncludedUserPrivilegeProp:
      description: "Specifies the name of a privilege that should not be held by the\
        \ authenticated user for clients included in this Simple Connection Criteria.\
        \ If any privilege names are provided, then the authenticated user must not\
        \ have at least one of those privileges (that is, the user may hold zero or\
        \ more of those privileges, but not all of them). This will only be taken\
        \ into account for client connections that have authenticated to the server\
        \ and will be ignored for unauthenticated client connections."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    root-dn-response:
      example:
        defaultRootPrivilegeName:
        - null
        - null
        schemas:
        - null
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumroot-dnSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        defaultRootPrivilegeName:
          items:
            $ref: '#/components/schemas/Enumroot-dn-defaultRootPrivilegeNameProp'
          type: array
      type: object
    Enumroot-dnSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:root-dn
      type: string
    Enumroot-dn-defaultRootPrivilegeNameProp:
      description: Specifies the names of the privileges that root users will be granted
        by default.
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    add-blind-trust-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_blind_trust_manager_provider_request_allOf'
      - $ref: '#/components/schemas/blind-trust-manager-provider-shared'
    blind-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/blind_trust_manager_provider_response_allOf'
      - $ref: '#/components/schemas/blind-trust-manager-provider-shared'
    blind-trust-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumblind-trust-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicate whether the Trust Manager Provider is enabled for
            use.
          type: boolean
        includeJVMDefaultIssuers:
          description: "Indicates whether certificates issued by an authority included\
            \ in the JVM's set of default issuers should be automatically trusted,\
            \ even if they would not otherwise be trusted by this provider."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumblind-trust-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:blind
      type: string
    add-file-based-trust-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_blind_trust_manager_provider_request_allOf'
      - $ref: '#/components/schemas/file-based-trust-manager-provider-shared'
    file-based-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/blind_trust_manager_provider_response_allOf'
      - $ref: '#/components/schemas/file-based-trust-manager-provider-shared'
    file-based-trust-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-trust-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        trustStoreFile:
          description: Specifies the path to the file containing the trust information.
            It can be an absolute path or a path that is relative to the Directory
            Server instance root.
          type: string
        trustStoreType:
          description: Specifies the format for the data in the trust store file.
          type: string
        trustStorePin:
          description: Specifies the clear-text PIN needed to access the File Based
            Trust Manager Provider.
          format: password
          type: string
        trustStorePinFile:
          description: Specifies the path to the text file whose only contents should
            be a single line containing the clear-text PIN needed to access the File
            Based Trust Manager Provider.
          type: string
        trustStorePinPassphraseProvider:
          description: The passphrase provider to use to obtain the clear-text PIN
            needed to access the File Based Trust Manager Provider.
          type: string
        enabled:
          description: Indicate whether the Trust Manager Provider is enabled for
            use.
          type: boolean
        includeJVMDefaultIssuers:
          description: "Indicates whether certificates issued by an authority included\
            \ in the JVM's set of default issuers should be automatically trusted,\
            \ even if they would not otherwise be trusted by this provider."
          type: boolean
      required:
      - enabled
      - schemas
      - trustStoreFile
      type: object
    Enumfile-based-trust-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:file-based
      type: string
    add-jvm-default-trust-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_blind_trust_manager_provider_request_allOf'
      - $ref: '#/components/schemas/jvm-default-trust-manager-provider-shared'
    jvm-default-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/blind_trust_manager_provider_response_allOf'
      - $ref: '#/components/schemas/jvm-default-trust-manager-provider-shared'
    jvm-default-trust-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjvm-default-trust-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicate whether the Trust Manager Provider is enabled for
            use.
          type: boolean
        includeJVMDefaultIssuers:
          description: "Indicates whether certificates issued by an authority included\
            \ in the JVM's set of default issuers should be automatically trusted,\
            \ even if they would not otherwise be trusted by this provider."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumjvm-default-trust-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:jvm-default
      type: string
    add-third-party-trust-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_blind_trust_manager_provider_request_allOf'
      - $ref: '#/components/schemas/third-party-trust-manager-provider-shared'
    third-party-trust-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/blind_trust_manager_provider_response_allOf'
      - $ref: '#/components/schemas/third-party-trust-manager-provider-shared'
    third-party-trust-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-trust-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Trust Manager Provider.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Trust Manager Provider. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        enabled:
          description: Indicate whether the Trust Manager Provider is enabled for
            use.
          type: boolean
        includeJVMDefaultIssuers:
          description: "Indicates whether certificates issued by an authority included\
            \ in the JVM's set of default issuers should be automatically trusted,\
            \ even if they would not otherwise be trusted by this provider."
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-trust-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:trust-manager-provider:third-party
      type: string
    add-key-pair-request:
      allOf:
      - $ref: '#/components/schemas/add_key_pair_request_allOf'
      - $ref: '#/components/schemas/key-pair-shared'
    key-pair-response:
      allOf:
      - $ref: '#/components/schemas/key_pair_response_allOf'
      - $ref: '#/components/schemas/key-pair-shared'
    key-pair-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumkey-pairSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        keyAlgorithm:
          $ref: '#/components/schemas/Enumkey-pair-keyAlgorithmProp'
        selfSignedCertificateValidity:
          description: "The validity period for a self-signed certificate. If not\
            \ specified, the self-signed certificate will be valid for approximately\
            \ 20 years. This is not used when importing an existing key-pair. The\
            \ system will not automatically rotate expired certificates. It is up\
            \ to the administrator to do that when that happens."
          type: string
        subjectDN:
          description: The DN that should be used as the subject for the self-signed
            certificate and certificate signing request. This is not used when importing
            an existing key-pair.
          type: string
        certificateChain:
          description: The PEM-encoded X.509 certificate chain.
          type: string
        privateKey:
          description: The base64-encoded private key that is encrypted using the
            preferred encryption settings definition.
          format: password
          type: string
      required:
      - keyAlgorithm
      type: object
    Enumkey-pairSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:key-pair
      type: string
    Enumkey-pair-keyAlgorithmProp:
      description: "The algorithm name and the length in bits of the key, e.g. RSA_2048."
      enum:
      - RSA_2048
      - RSA_3072
      - RSA_4096
      - EC_256
      - EC_384
      - EC_521
      type: string
    add-root-dse-request-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_root_dse_request_criteria_request_allOf'
      - $ref: '#/components/schemas/root-dse-request-criteria-shared'
    root-dse-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/root_dse_request_criteria_response_allOf'
      - $ref: '#/components/schemas/root-dse-request-criteria-shared'
    root-dse-request-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumroot-dse-request-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        operationType:
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-operationTypeProp'
          type: array
        description:
          description: A description for this Request Criteria
          type: string
      required:
      - schemas
      type: object
    Enumroot-dse-request-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:request-criteria:root-dse
      type: string
    add-simple-request-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_root_dse_request_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-request-criteria-shared'
    simple-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/root_dse_request_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-request-criteria-shared'
    simple-request-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-request-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        operationType:
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-operationTypeProp'
          type: array
        operationOrigin:
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-operationOriginProp'
          type: array
        connectionCriteria:
          description: Specifies a connection criteria object that must match the
            associated client connection for operations included in this Simple Request
            Criteria.
          type: string
        allIncludedRequestControl:
          items:
            description: "Specifies the OID of a control that must be present in the\
              \ request from the client for operations included in this Simple Request\
              \ Criteria. If any control OIDs are provided, then the request must\
              \ contain all of those controls."
            type: string
          type: array
        anyIncludedRequestControl:
          items:
            description: "Specifies the OID of a control that may be present in the\
              \ request from the client for operations included in this Simple Request\
              \ Criteria. If any control OIDs are provided, then the request must\
              \ contain at least one of those controls."
            type: string
          type: array
        notAllIncludedRequestControl:
          items:
            description: "Specifies the OID of a control that should not be present\
              \ in the request from the client for operations included in this Simple\
              \ Request Criteria. If any control OIDs are provided, then the request\
              \ must not contain at least one of those controls (that is, the request\
              \ may contain zero or more of those controls, but not all of them)."
            type: string
          type: array
        noneIncludedRequestControl:
          items:
            description: "Specifies the OID of a control that must not be present\
              \ in the request from the client for operations included in this Simple\
              \ Request Criteria. If any control OIDs are provided, then the request\
              \ must not contain any of those controls."
            type: string
          type: array
        includedTargetEntryDN:
          items:
            description: "Specifies a base DN below which targeted entries may exist\
              \ for requests included in this Simple Request Criteria. This will only\
              \ be taken into account for add, simple bind, compare, delete, modify,\
              \ modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations."
            type: string
          type: array
        excludedTargetEntryDN:
          items:
            description: "Specifies a base DN below which targeted entries may not\
              \ exist for requests included in this Simple Request Criteria. This\
              \ will only be taken into account for add, simple bind, compare, delete,\
              \ modify, modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations."
            type: string
          type: array
        allIncludedTargetEntryFilter:
          items:
            description: "Specifies a search filter that must match the target entry\
              \ for requests included in this Simple Request Criteria. This will only\
              \ be taken into account for add, simple bind, compare, delete, modify,\
              \ modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations. If any filters are provided,\
              \ then the target entry must match all of those filters."
            type: string
          type: array
        anyIncludedTargetEntryFilter:
          items:
            description: "Specifies a search filter that may match the target entry\
              \ for requests included in this Simple Request Criteria. This will only\
              \ be taken into account for add, simple bind, compare, delete, modify,\
              \ modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations. If any filters are provided,\
              \ then the target entry must match at least one of those filters."
            type: string
          type: array
        notAllIncludedTargetEntryFilter:
          items:
            description: "Specifies a search filter that should not match the target\
              \ entry for requests included in this Simple Request Criteria. This\
              \ will only be taken into account for add, simple bind, compare, delete,\
              \ modify, modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations. If any filters are provided,\
              \ then the target entry must not match at least one of those filters\
              \ (that is, the request may match zero or more of those filters, but\
              \ not of all of them)."
            type: string
          type: array
        noneIncludedTargetEntryFilter:
          items:
            description: "Specifies a search filter that must not match the target\
              \ entry for requests included in this Simple Request Criteria. This\
              \ will only be taken into account for add, simple bind, compare, delete,\
              \ modify, modify DN, and search operations. It will be ignored for abandon,\
              \ SASL bind, extended, and unbind operations. If any filters are provided,\
              \ then the target entry must not match any of those filters."
            type: string
          type: array
        allIncludedTargetEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the target entry must be a member for requests included in this\
              \ Simple Request Criteria. This will only be taken into account for\
              \ add, simple bind, compare, delete, modify, modify DN, and search operations.\
              \ It will be ignored for abandon, SASL bind, extended, and unbind operations.\
              \ If any group DNs are provided, then the target entry must be a member\
              \ of all of those groups."
            type: string
          type: array
        anyIncludedTargetEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the target entry may be a member for requests included in this\
              \ Simple Request Criteria. This will only be taken into account for\
              \ add, simple bind, compare, delete, modify, modify DN, and search operations.\
              \ It will be ignored for abandon, SASL bind, extended, and unbind operations.\
              \ If any group DNs are provided, then the target entry must be a member\
              \ of at least one of those groups."
            type: string
          type: array
        notAllIncludedTargetEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the target entry should not be a member for requests included\
              \ in this Simple Request Criteria. This will only be taken into account\
              \ for add, simple bind, compare, delete, modify, modify DN, and search\
              \ operations. It will be ignored for abandon, SASL bind, extended, and\
              \ unbind operations. If any group DNs are provided, then the target\
              \ entry must not be a member of at least one of those groups (that is,\
              \ the target entry may be a member of zero or more of those groups,\
              \ but not all of them)."
            type: string
          type: array
        noneIncludedTargetEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the target entry must not be a member for requests included in\
              \ this Simple Request Criteria. This will only be taken into account\
              \ for add, simple bind, compare, delete, modify, modify DN, and search\
              \ operations. It will be ignored for abandon, SASL bind, extended, and\
              \ unbind operations. If any group DNs are provided, then the target\
              \ entry must not be a member of any of those groups."
            type: string
          type: array
        targetBindType:
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-targetBindTypeProp'
          type: array
        includedTargetSASLMechanism:
          items:
            description: Specifies the name of a SASL mechanism for bind requests
              included in this Simple Request Criteria. This will only be taken into
              account for SASL bind operations and will be ignored for other types
              of operations and for bind operations that do not use SASL authentication.
            type: string
          type: array
        excludedTargetSASLMechanism:
          items:
            description: Specifies the name of a SASL mechanism for bind requests
              excluded from this Simple Request Criteria. This will only be taken
              into account for SASL bind operations and will be ignored for other
              types of operations and for bind operations that do not use SASL authentication.
            type: string
          type: array
        includedTargetAttribute:
          items:
            description: "Specifies the name or OID of an attribute type which must\
              \ be targeted by requests included in this Simple Request Criteria.\
              \ This will only be taken into account for add, compare, modify, modify\
              \ DN, and search operations. It will be ignored for abandon, bind, delete,\
              \ extended, and unbind operations."
            type: string
          type: array
        excludedTargetAttribute:
          items:
            description: "Specifies the name or OID of an attribute type which must\
              \ not be targeted by requests included in this Simple Request Criteria.\
              \ This will only be taken into account for add, compare, modify, modify\
              \ DN, and search operations. It will be ignored for abandon, bind, delete,\
              \ extended, and unbind operations."
            type: string
          type: array
        includedExtendedOperationOID:
          items:
            description: Specifies the request OID for extended requests included
              in this Simple Request Criteria. This will only be taken into account
              for extended requests and will be ignored for all other types of requests.
            type: string
          type: array
        excludedExtendedOperationOID:
          items:
            description: Specifies the request OID for extended requests excluded
              from this Simple Request Criteria. This will only be taken into account
              for extended requests and will be ignored for all other types of requests.
            type: string
          type: array
        includedSearchScope:
          items:
            $ref: '#/components/schemas/Enumrequest-criteria-includedSearchScopeProp'
          type: array
        usingAdministrativeSessionWorkerThread:
          $ref: '#/components/schemas/Enumrequest-criteria-usingAdministrativeSessionWorkerThreadProp'
        includedApplicationName:
          items:
            description: Specifies an application name for requests included in this
              Simple Request Criteria.
            type: string
          type: array
        excludedApplicationName:
          items:
            description: Specifies an application name for requests excluded from
              this Simple Request Criteria.
            type: string
          type: array
        description:
          description: A description for this Request Criteria
          type: string
      required:
      - schemas
      type: object
    Enumsimple-request-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:request-criteria:simple
      type: string
    add-aggregate-request-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_root_dse_request_criteria_request_allOf'
      - $ref: '#/components/schemas/aggregate-request-criteria-shared'
    aggregate-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/root_dse_request_criteria_response_allOf'
      - $ref: '#/components/schemas/aggregate-request-criteria-shared'
    aggregate-request-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-request-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedRequestCriteria:
          items:
            description: "Specifies a request criteria object that must match the\
              \ associated operation request in order to match the aggregate request\
              \ criteria. If one or more all-included request criteria objects are\
              \ provided, then an operation request must match all of them in order\
              \ to match the aggregate request criteria."
            type: string
          type: array
        anyIncludedRequestCriteria:
          items:
            description: "Specifies a request criteria object that may match the associated\
              \ operation request in order to the this aggregate request criteria.\
              \ If one or more any-included request criteria objects are provided,\
              \ then an operation request must match at least one of them in order\
              \ to match the aggregate request criteria."
            type: string
          type: array
        notAllIncludedRequestCriteria:
          items:
            description: "Specifies a request criteria object that should not match\
              \ the associated operation request in order to match the aggregate request\
              \ criteria. If one or more not-all-included request criteria objects\
              \ are provided, then an operation request must not match all of them\
              \ (that is, it may match zero or more of them, but it must not match\
              \ all of them) in order to match the aggregate request criteria."
            type: string
          type: array
        noneIncludedRequestCriteria:
          items:
            description: "Specifies a request criteria object that must not match\
              \ the associated operation request in order to match the aggregate request\
              \ criteria. If one or more none-included request criteria objects are\
              \ provided, then an operation request must not match any of them in\
              \ order to match the aggregate request criteria."
            type: string
          type: array
        description:
          description: A description for this Request Criteria
          type: string
      required:
      - schemas
      type: object
    Enumaggregate-request-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:request-criteria:aggregate
      type: string
    add-third-party-request-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_root_dse_request_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-request-criteria-shared'
    third-party-request-criteria-response:
      allOf:
      - $ref: '#/components/schemas/root_dse_request_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-request-criteria-shared'
    third-party-request-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-request-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Request Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Request Criteria. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Request Criteria
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-request-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:request-criteria:third-party
      type: string
    Enumrequest-criteria-operationOriginProp:
      description: "Specifies the origin for operations to be included in this Simple\
        \ Request Criteria. If no values are provided, then the operation origin will\
        \ not be taken into consideration when determining whether an operation matches\
        \ this Simple Request Criteria."
      enum:
      - external-request
      - internal-operation
      - replicated-operation
      type: string
    Enumrequest-criteria-operationTypeProp:
      description: The types of operations that may be matched by this Root DSE Request
        Criteria.
      enum:
      - compare
      - base-object-search
      - single-level-search
      - whole-subtree-search
      - subordinate-subtree-search
      type: string
    Enumrequest-criteria-usingAdministrativeSessionWorkerThreadProp:
      description: Indicates whether operations being processed using a dedicated
        administrative session worker thread should be included in this Simple Request
        Criteria.
      enum:
      - "true"
      - "false"
      - any
      type: string
    Enumrequest-criteria-targetBindTypeProp:
      description: "Specifies the authentication type for bind requests included in\
        \ this Simple Request Criteria. This will only be taken into account for bind\
        \ operations and will be ignored for any other type of operation. If no values\
        \ are provided, then the authentication type will not be considered when determining\
        \ whether the request should be included in this Simple Request Criteria."
      enum:
      - simple
      - sasl
      type: string
    Enumrequest-criteria-includedSearchScopeProp:
      description: Specifies the search scope values included in this Simple Request
        Criteria. This will only be taken into account for search requests and will
        be ignored for all other types of requests.
      enum:
      - base-object
      - single-level
      - whole-subtree
      - subordinate-subtree
      type: string
    add-time-limit-log-rotation-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_rotation_policy_request_allOf'
      - $ref: '#/components/schemas/time-limit-log-rotation-policy-shared'
    time-limit-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_rotation_policy_response_allOf'
      - $ref: '#/components/schemas/time-limit-log-rotation-policy-shared'
    time-limit-log-rotation-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtime-limit-log-rotation-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        rotationInterval:
          description: Specifies the time interval between rotations.
          type: string
        description:
          description: A description for this Log Rotation Policy
          type: string
      required:
      - rotationInterval
      - schemas
      type: object
    Enumtime-limit-log-rotation-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:time-limit
      type: string
    add-fixed-time-log-rotation-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_rotation_policy_request_allOf'
      - $ref: '#/components/schemas/fixed-time-log-rotation-policy-shared'
    fixed-time-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_rotation_policy_response_allOf'
      - $ref: '#/components/schemas/fixed-time-log-rotation-policy-shared'
    fixed-time-log-rotation-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfixed-time-log-rotation-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        timeOfDay:
          items:
            description: Specifies the time of day at which log rotation should occur.
            type: string
          type: array
        description:
          description: A description for this Log Rotation Policy
          type: string
      required:
      - schemas
      - timeOfDay
      type: object
    Enumfixed-time-log-rotation-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:fixed-time
      type: string
    add-never-rotate-log-rotation-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_rotation_policy_request_allOf'
      - $ref: '#/components/schemas/never-rotate-log-rotation-policy-shared'
    never-rotate-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_rotation_policy_response_allOf'
      - $ref: '#/components/schemas/never-rotate-log-rotation-policy-shared'
    never-rotate-log-rotation-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnever-rotate-log-rotation-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Log Rotation Policy
          type: string
      required:
      - schemas
      type: object
    Enumnever-rotate-log-rotation-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:never-rotate
      type: string
    add-size-limit-log-rotation-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_rotation_policy_request_allOf'
      - $ref: '#/components/schemas/size-limit-log-rotation-policy-shared'
    size-limit-log-rotation-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_rotation_policy_response_allOf'
      - $ref: '#/components/schemas/size-limit-log-rotation-policy-shared'
    size-limit-log-rotation-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsize-limit-log-rotation-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        fileSizeLimit:
          description: Specifies the maximum size that a log file can reach before
            it is rotated.
          type: string
        description:
          description: A description for this Log Rotation Policy
          type: string
      required:
      - fileSizeLimit
      - schemas
      type: object
    Enumsize-limit-log-rotation-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-rotation-policy:size-limit
      type: string
    json-log-field-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-log-field-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        includedSensitiveField:
          items:
            description: The names of the JSON fields that will be considered sensitive.
            type: string
          type: array
        excludedSensitiveField:
          items:
            description: The names of the JSON fields that will not be considered
              sensitive.
            type: string
          type: array
        description:
          description: A description for this Log Field Syntax
          type: string
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-syntax-defaultBehaviorProp'
      required:
      - schemas
      type: object
    Enumjson-log-field-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-syntax:json
      type: string
    attribute-based-log-field-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumattribute-based-log-field-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        includedSensitiveAttribute:
          items:
            description: The set of attribute types that will be considered sensitive.
            type: string
          type: array
        excludedSensitiveAttribute:
          items:
            description: The set of attribute types that will not be considered sensitive.
            type: string
          type: array
        description:
          description: A description for this Log Field Syntax
          type: string
        defaultBehavior:
          $ref: '#/components/schemas/Enumlog-field-syntax-defaultBehaviorProp'
      required:
      - schemas
      type: object
    Enumattribute-based-log-field-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-field-syntax:attribute-based
      type: string
    Enumlog-field-syntax-defaultBehaviorProp:
      description: The default behavior that the server should exhibit when logging
        fields with this syntax. This may be overridden on a per-field basis.
      enum:
      - preserve
      - omit
      - redact-entire-value
      - redact-value-components
      - tokenize-entire-value
      - tokenize-value-components
      type: string
    cancel-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcancel-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumcancel-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:cancel
      type: string
    add-validate-totp-password-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-shared'
    validate-totp-password-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-shared'
    validate-totp-password-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvalidate-totp-password-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        sharedSecretAttributeType:
          description: The name or OID of the attribute that will be used to hold
            the shared secret key used during TOTP processing.
          type: string
        timeIntervalDuration:
          description: The duration of the time interval used for TOTP processing.
          type: string
        adjacentIntervalsToCheck:
          description: The number of adjacent time intervals (both before and after
            the current time) that should be checked when performing authentication.
          type: integer
        preventTOTPReuse:
          description: Indicates whether to prevent clients from re-using TOTP passwords.
          type: boolean
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumvalidate-totp-password-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:validate-totp-password
      type: string
    add-replace-certificate-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-shared'
    replace-certificate-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-shared'
    replace-certificate-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreplace-certificate-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allowRemotelyProvidedCertificates:
          description: Indicates whether clients should be allowed to directly provide
            a new listener or inter-server certificate chain in the extended request.
          type: boolean
        allowedOperation:
          items:
            $ref: '#/components/schemas/Enumextended-operation-handler-allowedOperationProp'
          type: array
        connectionCriteria:
          description: A set of criteria that client connections must satisfy before
            they will be allowed to request the associated extended operations.
          type: string
        requestCriteria:
          description: A set of criteria that the extended requests must satisfy before
            they will be processed by the server.
          type: string
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumreplace-certificate-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:replace-certificate
      type: string
    get-connection-id-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumget-connection-id-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumget-connection-id-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-connection-id
      type: string
    multi-update-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummulti-update-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enummulti-update-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:multi-update
      type: string
    notification-subscription-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnotification-subscription-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumnotification-subscription-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:notification-subscription
      type: string
    password-modify-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpassword-modify-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: Specifies the name of the identity mapper that should be used
            in conjunction with the password modify extended operation.
          type: string
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumpassword-modify-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-modify
      type: string
    add-collect-support-data-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-shared'
    collect-support-data-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-shared'
    collect-support-data-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcollect-support-data-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumcollect-support-data-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:collect-support-data
      type: string
    add-export-reversible-passwords-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-shared'
    export-reversible-passwords-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-shared'
    export-reversible-passwords-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexport-reversible-passwords-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumexport-reversible-passwords-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:export-reversible-passwords
      type: string
    batched-transactions-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbatched-transactions-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumbatched-transactions-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:batched-transactions
      type: string
    get-changelog-batch-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumget-changelog-batch-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumget-changelog-batch-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-changelog-batch
      type: string
    get-supported-otp-delivery-mechanisms-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumget-supported-otp-delivery-mechanisms-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumget-supported-otp-delivery-mechanisms-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-supported-otp-delivery-mechanisms
      type: string
    add-single-use-tokens-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-shared'
    single-use-tokens-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-shared'
    single-use-tokens-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsingle-use-tokens-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordGenerator:
          description: The password generator that will be used to create the single-use
            token values to be delivered to the end user.
          type: string
        defaultOTPDeliveryMechanism:
          items:
            description: The set of delivery mechanisms that may be used to deliver
              single-use tokens to users in requests that do not specify one or more
              preferred delivery mechanisms.
            type: string
          type: array
        defaultSingleUseTokenValidityDuration:
          description: The default length of time that a single-use token will be
            considered valid by the server if the client doesn't specify a duration
            in the deliver single-use token request.
          type: string
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - defaultOTPDeliveryMechanism
      - enabled
      - passwordGenerator
      - schemas
      type: object
    Enumsingle-use-tokens-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:single-use-tokens
      type: string
    generate-password-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgenerate-password-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        defaultPasswordPolicy:
          description: "The default password policy that should be used when generating\
            \ and validating passwords if the request does not specify an alternate\
            \ policy. If this is not provided, then this Generate Password Extended\
            \ Operation Handler will use the default password policy defined in the\
            \ global configuration."
          type: string
        defaultPasswordGenerator:
          description: The default password generator that will be used if the selected
            password policy is not configured with a password generator.
          type: string
        maximumPasswordsPerRequest:
          description: The maximum number of passwords that may be generated and returned
            to the client for a single request.
          type: integer
        maximumValidationAttemptsPerPassword:
          description: The maximum number of attempts that the server may use to generate
            a password that passes validation.
          type: integer
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - defaultPasswordGenerator
      - enabled
      - schemas
      type: object
    Enumgenerate-password-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:generate-password
      type: string
    who-am-i-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumwho-am-i-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumwho-am-i-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:who-am-i
      type: string
    start-tls-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstart-tls-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumstart-tls-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:start-tls
      type: string
    add-deliver-password-reset-token-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-shared'
    deliver-password-reset-token-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-shared'
    deliver-password-reset-token-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdeliver-password-reset-token-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordGenerator:
          description: The password generator that will be used to create the password
            reset token values to be delivered to the end user.
          type: string
        defaultTokenDeliveryMechanism:
          items:
            description: The set of delivery mechanisms that may be used to deliver
              password reset tokens to users for requests that do not specify one
              or more preferred delivery mechanisms.
            type: string
          type: array
        passwordResetTokenValidityDuration:
          description: The maximum length of time that a password reset token should
            be considered valid.
          type: string
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - defaultTokenDeliveryMechanism
      - enabled
      - passwordGenerator
      - passwordResetTokenValidityDuration
      - schemas
      type: object
    Enumdeliver-password-reset-token-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-password-reset-token
      type: string
    password-policy-state-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpassword-policy-state-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumpassword-policy-state-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:password-policy-state
      type: string
    get-password-quality-requirements-extended-operation-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumget-password-quality-requirements-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumget-password-quality-requirements-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:get-password-quality-requirements
      type: string
    add-deliver-otp-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-shared'
    deliver-otp-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-shared'
    deliver-otp-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdeliver-otp-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the user(s)
            targeted by the authentication identity contained in the extended request.
            This will only be used for "u:"-style authentication identities.
          type: string
        passwordGenerator:
          description: The password generator that will be used to create the one-time
            password values to be delivered to the end user.
          type: string
        defaultOTPDeliveryMechanism:
          items:
            description: The set of delivery mechanisms that may be used to deliver
              one-time passwords to users in requests that do not specify one or more
              preferred delivery mechanisms.
            type: string
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - defaultOTPDeliveryMechanism
      - enabled
      - identityMapper
      - passwordGenerator
      - schemas
      type: object
    Enumdeliver-otp-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:deliver-otp
      type: string
    add-third-party-extended-operation-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_validate_totp_password_extended_operation_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-extended-operation-handler-shared'
    third-party-extended-operation-handler-response:
      allOf:
      - $ref: '#/components/schemas/validate_totp_password_extended_operation_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-extended-operation-handler-shared'
    third-party-extended-operation-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-extended-operation-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Extended Operation Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Extended Operation Handler. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Extended Operation Handler
          type: string
        enabled:
          description: "Indicates whether the Extended Operation Handler is enabled\
            \ (that is, whether the types of extended operations are allowed in the\
            \ server)."
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-extended-operation-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:third-party
      type: string
    Enumextended-operation-handler-allowedOperationProp:
      description: The types of replace certificate operations that clients will be
        allowed to request.
      enum:
      - replace-listener-certificate
      - replace-inter-server-certificate
      - purge-retired-listener-certificates
      - purge-retired-inter-server-certificates
      type: string
    add-default-azure-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_default_azure_authentication_method_request_allOf'
      - $ref: '#/components/schemas/default-azure-authentication-method-shared'
    default-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/default_azure_authentication_method_response_allOf'
      - $ref: '#/components/schemas/default-azure-authentication-method-shared'
    default-azure-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdefault-azure-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        tenantID:
          description: "The tenant ID to use to authenticate. If this is not provided,\
            \ then it will be obtained from the AZURE_TENANT_ID environment variable."
          type: string
        clientID:
          description: "The client ID to use to authenticate. If this is not provided,\
            \ then it will be obtained from the AZURE_CLIENT_ID"
          type: string
        description:
          description: A description for this Azure Authentication Method
          type: string
      required:
      - schemas
      type: object
    Enumdefault-azure-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:default
      type: string
    add-client-secret-azure-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_default_azure_authentication_method_request_allOf'
      - $ref: '#/components/schemas/client-secret-azure-authentication-method-shared'
    client-secret-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/default_azure_authentication_method_response_allOf'
      - $ref: '#/components/schemas/client-secret-azure-authentication-method-shared'
    client-secret-azure-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumclient-secret-azure-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        tenantID:
          description: The tenant ID to use to authenticate.
          type: string
        clientID:
          description: The client ID to use to authenticate.
          type: string
        clientSecret:
          description: The client secret to use to authenticate.
          format: password
          type: string
        description:
          description: A description for this Azure Authentication Method
          type: string
      required:
      - clientID
      - clientSecret
      - schemas
      - tenantID
      type: object
    Enumclient-secret-azure-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:client-secret
      type: string
    add-username-password-azure-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_default_azure_authentication_method_request_allOf'
      - $ref: '#/components/schemas/username-password-azure-authentication-method-shared'
    username-password-azure-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/default_azure_authentication_method_response_allOf'
      - $ref: '#/components/schemas/username-password-azure-authentication-method-shared'
    username-password-azure-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumusername-password-azure-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        tenantID:
          description: The tenant ID to use to authenticate.
          type: string
        clientID:
          description: The client ID to use to authenticate.
          type: string
        username:
          description: The username for the user to authenticate.
          type: string
        password:
          description: The password for the user to authenticate.
          format: password
          type: string
        description:
          description: A description for this Azure Authentication Method
          type: string
      required:
      - clientID
      - password
      - schemas
      - tenantID
      - username
      type: object
    Enumusername-password-azure-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:username-password
      type: string
    add-environment-variable-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
    environment-variable-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-shared'
    environment-variable-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumenvironment-variable-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        environmentVariable:
          description: The name of the environment variable that is expected to hold
            the passphrase.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - enabled
      - environmentVariable
      - schemas
      type: object
    Enumenvironment-variable-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:environment-variable
      type: string
    add-amazon-secrets-manager-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
    amazon-secrets-manager-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-shared'
    amazon-secrets-manager-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        awsExternalServer:
          description: The external server with information to use when interacting
            with the AWS Secrets Manager.
          type: string
        secretID:
          description: The Amazon Resource Name (ARN) or the user-friendly name of
            the secret to be retrieved.
          type: string
        secretFieldName:
          description: The name of the JSON field whose value is the passphrase that
            will be retrieved.
          type: string
        secretVersionID:
          description: The unique identifier for the version of the secret to be retrieved.
          type: string
        secretVersionStage:
          description: The staging label for the version of the secret to be retrieved.
          type: string
        maxCacheDuration:
          description: The maximum length of time that the passphrase provider may
            cache the passphrase that has been read from Vault. A value of zero seconds
            indicates that the provider should always attempt to read the passphrase
            from Vault.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - awsExternalServer
      - enabled
      - schemas
      - secretFieldName
      - secretID
      type: object
    Enumamazon-secrets-manager-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:amazon-secrets-manager
      type: string
    add-obscured-value-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
    obscured-value-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-shared'
    obscured-value-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumobscured-value-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        obscuredValue:
          description: The value to be stored in an obscured form.
          format: password
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - enabled
      - obscuredValue
      - schemas
      type: object
    Enumobscured-value-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:obscured-value
      type: string
    add-azure-key-vault-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
    azure-key-vault-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-shared'
    azure-key-vault-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        keyVaultURI:
          description: The URI that identifies the Azure Key Vault from which the
            secret is to be retrieved.
          type: string
        azureAuthenticationMethod:
          description: The mechanism used to authenticate to the Azure service.
          type: string
        secretName:
          description: The name of the secret to retrieve.
          type: string
        maxCacheDuration:
          description: The maximum length of time that the passphrase provider may
            cache the passphrase that has been read from Azure Key Vault. A value
            of zero seconds indicates that the provider should always attempt to read
            the passphrase from the Azure service.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - azureAuthenticationMethod
      - enabled
      - keyVaultURI
      - schemas
      - secretName
      type: object
    Enumazure-key-vault-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:azure-key-vault
      type: string
    add-file-based-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
    file-based-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/file-based-passphrase-provider-shared'
    file-based-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordFile:
          description: The path to the file containing the passphrase.
          type: string
        maxCacheDuration:
          description: The maximum length of time that the passphrase provider may
            cache the passphrase that has been read from the target file. A value
            of zero seconds indicates that the provider should always attempt to read
            the passphrase from the file.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - enabled
      - passwordFile
      - schemas
      type: object
    Enumfile-based-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:file-based
      type: string
    add-conjur-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
    conjur-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/conjur-passphrase-provider-shared'
    conjur-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconjur-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conjurExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Conjur instance containing the passphrase.
          type: string
        conjurSecretRelativePath:
          description: The portion of the path that follows the account name in the
            URI needed to obtain the desired secret. Any special characters in the
            path must be URL-encoded.
          type: string
        maxCacheDuration:
          description: The maximum length of time that the passphrase provider may
            cache the passphrase that has been read from Conjur. A value of zero seconds
            indicates that the provider should always attempt to read the passphrase
            from Conjur.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - conjurExternalServer
      - conjurSecretRelativePath
      - enabled
      - schemas
      type: object
    Enumconjur-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:conjur
      type: string
    add-vault-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
    vault-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/vault-passphrase-provider-shared'
    vault-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvault-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Vault instance containing the passphrase.
          type: string
        vaultSecretPath:
          description: The path to the desired secret in the Vault service. This will
            be appended to the value of the base-url property for the associated Vault
            external server.
          type: string
        vaultSecretFieldName:
          description: The name of the field in the Vault secret record that contains
            the passphrase to use to generate the encryption key.
          type: string
        maxCacheDuration:
          description: The maximum length of time that the passphrase provider may
            cache the passphrase that has been read from Vault. A value of zero seconds
            indicates that the provider should always attempt to read the passphrase
            from Vault.
          type: string
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - enabled
      - schemas
      - vaultExternalServer
      - vaultSecretFieldName
      - vaultSecretPath
      type: object
    Enumvault-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:vault
      type: string
    add-third-party-passphrase-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_environment_variable_passphrase_provider_request_allOf'
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
    third-party-passphrase-provider-response:
      allOf:
      - $ref: '#/components/schemas/environment_variable_passphrase_provider_response_allOf'
      - $ref: '#/components/schemas/third-party-passphrase-provider-shared'
    third-party-passphrase-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-passphrase-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Passphrase Provider.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Passphrase Provider. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Passphrase Provider
          type: string
        enabled:
          description: Indicates whether this Passphrase Provider is enabled for use
            in the server.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-passphrase-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:passphrase-provider:third-party
      type: string
    add-soft-delete-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_soft_delete_policy_request_allOf'
      - $ref: '#/components/schemas/soft-delete-policy-shared'
    soft-delete-policy-response:
      allOf:
      - $ref: '#/components/schemas/soft_delete_policy_response_allOf'
      - $ref: '#/components/schemas/soft-delete-policy-shared'
    soft-delete-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsoft-delete-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Soft Delete Policy
          type: string
        autoSoftDeleteConnectionCriteria:
          description: Connection criteria used to automatically identify a delete
            operation for processing as a soft delete request.
          type: string
        autoSoftDeleteRequestCriteria:
          description: Request criteria used to automatically identify a delete operation
            for processing as a soft delete request.
          type: string
        softDeleteRetentionTime:
          description: Specifies the maximum length of time that soft delete entries
            are retained before they are eligible to purged automatically.
          type: string
        softDeleteRetainNumberOfEntries:
          description: Specifies the number of soft deleted entries to retain before
            the oldest entries are purged.
          type: integer
      type: object
    Enumsoft-delete-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:soft-delete-policy
      type: string
    add-recurring-task-chain-request:
      allOf:
      - $ref: '#/components/schemas/add_recurring_task_chain_request_allOf'
      - $ref: '#/components/schemas/recurring-task-chain-shared'
    recurring-task-chain-response:
      allOf:
      - $ref: '#/components/schemas/recurring_task_chain_response_allOf'
      - $ref: '#/components/schemas/recurring-task-chain-shared'
    recurring-task-chain-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chainSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Recurring Task Chain
          type: string
        enabled:
          description: "Indicates whether this Recurring Task Chain is enabled for\
            \ use. Recurring Task Chains that are disabled will not have any new instances\
            \ scheduled, but instances that are already scheduled will be preserved.\
            \ Those instances may be manually canceled if desired."
          type: boolean
        recurringTask:
          items:
            description: "The set of recurring tasks that make up this chain. At least\
              \ one value must be provided. If multiple values are given, then the\
              \ task instances will be invoked in the order in which they are listed."
            type: string
          type: array
        scheduledMonth:
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledMonthProp'
          type: array
        scheduledDateSelectionType:
          $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDateSelectionTypeProp'
        scheduledDayOfTheWeek:
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDayOfTheWeekProp'
          type: array
        scheduledDayOfTheMonth:
          items:
            $ref: '#/components/schemas/Enumrecurring-task-chain-scheduledDayOfTheMonthProp'
          type: array
        scheduledTimeOfDay:
          items:
            description: "The time of day at which instances of the Recurring Task\
              \ Chain should be eligible to start running. Values should be in the\
              \ format HH:MM (where HH is a two-digit representation of the hour of\
              \ the day, between 00 and 23, inclusive), and MM is a two-digit representation\
              \ of the minute of the hour (between 00 and 59, inclusive). Alternately,\
              \ the value can be in the form *:MM, which indicates that the task should\
              \ be eligible to start at the specified minute of every hour. At least\
              \ one value must be provided, but multiple values may be given to indicate\
              \ multiple start times within the same day."
            type: string
          type: array
        timeZone:
          description: "The time zone that will be used to interpret the scheduled-time-of-day\
            \ values. If no value is provided, then the JVM's default time zone will\
            \ be used."
          type: string
        interruptedByShutdownBehavior:
          $ref: '#/components/schemas/Enumrecurring-task-chain-interruptedByShutdownBehaviorProp'
        serverOfflineAtStartTimeBehavior:
          $ref: '#/components/schemas/Enumrecurring-task-chain-serverOfflineAtStartTimeBehaviorProp'
      required:
      - enabled
      - recurringTask
      - scheduledDateSelectionType
      - scheduledMonth
      - scheduledTimeOfDay
      type: object
    Enumrecurring-task-chainSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task-chain
      type: string
    Enumrecurring-task-chain-scheduledMonthProp:
      description: The months of the year in which instances of this Recurring Task
        Chain may be scheduled to start.
      enum:
      - january
      - february
      - march
      - april
      - may
      - june
      - july
      - august
      - september
      - october
      - november
      - december
      type: string
    Enumrecurring-task-chain-interruptedByShutdownBehaviorProp:
      description: Specifies the behavior that the server should exhibit if it is
        shut down or abnormally terminated while an instance of this Recurring Task
        Chain is running.
      enum:
      - cancel-interrupted-task-and-dependencies
      - cancel-only-interrupted-task-but-preserve-dependencies
      type: string
    Enumrecurring-task-chain-scheduledDayOfTheWeekProp:
      description: "The specific days of the week on which instances of this Recurring\
        \ Task Chain may be scheduled to start. If the scheduled-day-selection-type\
        \ property has a value of selected-days-of-the-week, then this property must\
        \ have one or more values; otherwise, it must be left undefined."
      enum:
      - every-sunday
      - every-monday
      - every-tuesday
      - every-wednesday
      - every-thursday
      - every-friday
      - every-saturday
      - first-sunday-of-the-month
      - first-monday-of-the-month
      - first-tuesday-of-the-month
      - first-wednesday-of-the-month
      - first-thursday-of-the-month
      - first-friday-of-the-month
      - first-saturday-of-the-month
      - second-sunday-of-the-month
      - second-monday-of-the-month
      - second-tuesday-of-the-month
      - second-wednesday-of-the-month
      - second-thursday-of-the-month
      - second-friday-of-the-month
      - second-saturday-of-the-month
      - third-sunday-of-the-month
      - third-monday-of-the-month
      - third-tuesday-of-the-month
      - third-wednesday-of-the-month
      - third-thursday-of-the-month
      - third-friday-of-the-month
      - third-saturday-of-the-month
      - fourth-sunday-of-the-month
      - fourth-monday-of-the-month
      - fourth-tuesday-of-the-month
      - fourth-wednesday-of-the-month
      - fourth-thursday-of-the-month
      - fourth-friday-of-the-month
      - fourth-saturday-of-the-month
      - fifth-sunday-of-the-month
      - fifth-monday-of-the-month
      - fifth-tuesday-of-the-month
      - fifth-wednesday-of-the-month
      - fifth-thursday-of-the-month
      - fifth-friday-of-the-month
      - fifth-saturday-of-the-month
      - last-sunday-of-the-month
      - last-monday-of-the-month
      - last-tuesday-of-the-month
      - last-wednesday-of-the-month
      - last-thursday-of-the-month
      - last-friday-of-the-month
      - last-saturday-of-the-month
      type: string
    Enumrecurring-task-chain-serverOfflineAtStartTimeBehaviorProp:
      description: Specifies the behavior that the server should exhibit if it is
        offline when the start time arrives for the tasks in this Recurring Task Chain.
      enum:
      - run-immediately-upon-server-startup
      - cancel-iteration-and-wait-for-next-scheduled-start-time
      type: string
    Enumrecurring-task-chain-scheduledDayOfTheMonthProp:
      description: "The specific days of the month on which instances of this Recurring\
        \ Task Chain may be scheduled to start. If the scheduled-day-selection-type\
        \ property has a value of selected-days-of-the-month, then this property must\
        \ have one or more values; otherwise, it must be left undefined."
      enum:
      - day-01
      - day-02
      - day-03
      - day-04
      - day-05
      - day-06
      - day-07
      - day-08
      - day-09
      - day-10
      - day-11
      - day-12
      - day-13
      - day-14
      - day-15
      - day-16
      - day-17
      - day-18
      - day-19
      - day-20
      - day-21
      - day-22
      - day-23
      - day-24
      - day-25
      - day-26
      - day-27
      - day-28
      - day-29
      - day-30
      - day-31
      - next-to-last-day-of-the-month
      - last-day-of-the-month
      type: string
    Enumrecurring-task-chain-scheduledDateSelectionTypeProp:
      description: The mechanism used to determine the dates on which instances of
        this Recurring Task Chain may be scheduled to start.
      enum:
      - every-day
      - selected-days-of-the-week
      - selected-days-of-the-month
      type: string
    add-indicator-gauge-request:
      allOf:
      - $ref: '#/components/schemas/add_indicator_gauge_request_allOf'
      - $ref: '#/components/schemas/indicator-gauge-shared'
    indicator-gauge-response:
      allOf:
      - $ref: '#/components/schemas/indicator_gauge_response_allOf'
      - $ref: '#/components/schemas/indicator-gauge-shared'
    indicator-gauge-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumindicator-gaugeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        gaugeDataSource:
          description: Specifies the source of data to use in determining this Indicator
            Gauge's severity and status.
          type: string
        criticalValue:
          description: A regular expression pattern that is used to determine whether
            the current monitored value indicates this gauge's severity should be
            critical.
          type: string
        majorValue:
          description: A regular expression pattern that is used to determine whether
            the current monitored value indicates this gauge's severity will be 'major'.
          type: string
        minorValue:
          description: A regular expression pattern that is used to determine whether
            the current monitored value indicates this gauge's severity will be 'minor'.
          type: string
        warningValue:
          description: A regular expression pattern that is used to determine whether
            the current monitored value indicates this gauge's severity will be 'warning'.
          type: string
        description:
          description: A description for this Gauge
          type: string
        enabled:
          description: Indicates whether this Gauge is enabled.
          type: boolean
        overrideSeverity:
          $ref: '#/components/schemas/Enumgauge-overrideSeverityProp'
        alertLevel:
          $ref: '#/components/schemas/Enumgauge-alertLevelProp'
        updateInterval:
          description: The frequency with which this Gauge is updated.
          type: string
        samplesPerUpdateInterval:
          description: Indicates the number of times the monitor data source value
            will be collected during the update interval.
          type: integer
        includeResource:
          items:
            description: Specifies set of resources to be monitored.
            type: string
          type: array
        excludeResource:
          items:
            description: Specifies resources to exclude from being monitored.
            type: string
          type: array
        serverUnavailableSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverUnavailableSeverityLevelProp'
        serverDegradedSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverDegradedSeverityLevelProp'
      required:
      - enabled
      - gaugeDataSource
      - schemas
      type: object
    Enumindicator-gaugeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:gauge:indicator
      type: string
    add-numeric-gauge-request:
      allOf:
      - $ref: '#/components/schemas/add_indicator_gauge_request_allOf'
      - $ref: '#/components/schemas/numeric-gauge-shared'
    numeric-gauge-response:
      allOf:
      - $ref: '#/components/schemas/indicator_gauge_response_allOf'
      - $ref: '#/components/schemas/numeric-gauge-shared'
    numeric-gauge-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnumeric-gaugeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        gaugeDataSource:
          description: Specifies the source of data to use in determining this gauge's
            current severity.
          type: string
        criticalValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should be 'critical'.
          type: number
        criticalExitValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should no longer be 'critical'.
          type: number
        majorValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should be 'major'.
          type: number
        majorExitValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should no longer be 'major'.
          type: number
        minorValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should be 'minor'.
          type: number
        minorExitValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should no longer be 'minor'.
          type: number
        warningValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should be 'warning'.
          type: number
        warningExitValue:
          description: A value that is used to determine whether the current monitored
            value indicates this gauge's severity should no longer be 'warning'.
          type: number
        description:
          description: A description for this Gauge
          type: string
        enabled:
          description: Indicates whether this Gauge is enabled.
          type: boolean
        overrideSeverity:
          $ref: '#/components/schemas/Enumgauge-overrideSeverityProp'
        alertLevel:
          $ref: '#/components/schemas/Enumgauge-alertLevelProp'
        updateInterval:
          description: The frequency with which this Gauge is updated.
          type: string
        samplesPerUpdateInterval:
          description: Indicates the number of times the monitor data source value
            will be collected during the update interval.
          type: integer
        includeResource:
          items:
            description: Specifies set of resources to be monitored.
            type: string
          type: array
        excludeResource:
          items:
            description: Specifies resources to exclude from being monitored.
            type: string
          type: array
        serverUnavailableSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverUnavailableSeverityLevelProp'
        serverDegradedSeverityLevel:
          $ref: '#/components/schemas/Enumgauge-serverDegradedSeverityLevelProp'
      required:
      - enabled
      - gaugeDataSource
      - schemas
      type: object
    Enumnumeric-gaugeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:gauge:numeric
      type: string
    Enumgauge-alertLevelProp:
      description: Specifies the level at which alerts are sent for alarms raised
        by this Gauge.
      enum:
      - always
      - warning-and-above
      - minor-and-above
      - major-and-above
      - critical-only
      - never
      type: string
    Enumgauge-serverUnavailableSeverityLevelProp:
      description: Specifies the alarm severity level at or above which the server
        is considered unavailable.
      enum:
      - critical
      - major
      - minor
      - warning
      - none
      type: string
    Enumgauge-overrideSeverityProp:
      description: "When defined, causes this Gauge to assume the specified severity,\
        \ overriding its computed severity. This is useful for testing alarms generated\
        \ by Gauges as well as suppressing alarms for known conditions."
      enum:
      - normal
      - warning
      - minor
      - major
      - critical
      type: string
    Enumgauge-serverDegradedSeverityLevelProp:
      description: Specifies the alarm severity level at or above which the server
        is considered degraded.
      enum:
      - critical
      - major
      - minor
      - warning
      - none
      type: string
    add-simple-search-reference-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_reference_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-search-reference-criteria-shared'
    simple-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_reference_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-search-reference-criteria-shared'
    simple-search-reference-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-search-reference-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        requestCriteria:
          description: Specifies a request criteria object that must match the associated
            request for references included in this Simple Search Reference Criteria.
          type: string
        allIncludedReferenceControl:
          items:
            description: "Specifies the OID of a control that must be present in search\
              \ result references included in this Simple Search Reference Criteria.\
              \ If any control OIDs are provided, then the reference must contain\
              \ all of those controls."
            type: string
          type: array
        anyIncludedReferenceControl:
          items:
            description: "Specifies the OID of a control that may be present in search\
              \ result references included in this Simple Search Reference Criteria.\
              \ If any control OIDs are provided, then the reference must contain\
              \ at least one of those controls."
            type: string
          type: array
        notAllIncludedReferenceControl:
          items:
            description: "Specifies the OID of a control that should not be present\
              \ in search result references included in this Simple Search Reference\
              \ Criteria. If any control OIDs are provided, then the reference must\
              \ not contain at least one of those controls (that is, it may contain\
              \ zero or more of those controls, but not all of them)."
            type: string
          type: array
        noneIncludedReferenceControl:
          items:
            description: "Specifies the OID of a control that must not be present\
              \ in search result references included in this Simple Search Reference\
              \ Criteria. If any control OIDs are provided, then the reference must\
              \ not contain any of those controls."
            type: string
          type: array
        description:
          description: A description for this Search Reference Criteria
          type: string
      required:
      - schemas
      type: object
    Enumsimple-search-reference-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:simple
      type: string
    add-aggregate-search-reference-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_reference_criteria_request_allOf'
      - $ref: '#/components/schemas/aggregate-search-reference-criteria-shared'
    aggregate-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_reference_criteria_response_allOf'
      - $ref: '#/components/schemas/aggregate-search-reference-criteria-shared'
    aggregate-search-reference-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-search-reference-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedSearchReferenceCriteria:
          items:
            description: "Specifies a search reference criteria object that must match\
              \ the associated search result reference in order to match the aggregate\
              \ search reference criteria. If one or more all-included search reference\
              \ criteria objects are provided, then a search result reference must\
              \ match all of them in order to match the aggregate search reference\
              \ criteria."
            type: string
          type: array
        anyIncludedSearchReferenceCriteria:
          items:
            description: "Specifies a search reference criteria object that may match\
              \ the associated search result reference in order to match the aggregate\
              \ search reference criteria. If one or more any-included search reference\
              \ criteria objects are provided, then a search result reference must\
              \ match at least one of them in order to match the aggregate search\
              \ reference criteria."
            type: string
          type: array
        notAllIncludedSearchReferenceCriteria:
          items:
            description: "Specifies a search reference criteria object that should\
              \ not match the associated search result reference in order to match\
              \ the aggregate search reference criteria. If one or more not-all-included\
              \ search reference criteria objects are provided, then a search result\
              \ reference must not match all of them (that is, it may match zero or\
              \ more of them, but it must not match all of them) in order to match\
              \ the aggregate search reference criteria."
            type: string
          type: array
        noneIncludedSearchReferenceCriteria:
          items:
            description: "Specifies a search reference criteria object that must not\
              \ match the associated search result reference in order to match the\
              \ aggregate search reference criteria. If one or more none-included\
              \ search reference criteria objects are provided, then a search result\
              \ reference must not match any of them in order to match the aggregate\
              \ search reference criteria."
            type: string
          type: array
        description:
          description: A description for this Search Reference Criteria
          type: string
      required:
      - schemas
      type: object
    Enumaggregate-search-reference-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:aggregate
      type: string
    add-third-party-search-reference-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_reference_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-search-reference-criteria-shared'
    third-party-search-reference-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_reference_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-search-reference-criteria-shared'
    third-party-search-reference-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-search-reference-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Search Reference Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Search Reference Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Search Reference Criteria
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-search-reference-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-reference-criteria:third-party
      type: string
    add-fifo-entry-cache-request:
      allOf:
      - $ref: '#/components/schemas/add_fifo_entry_cache_request_allOf'
      - $ref: '#/components/schemas/fifo-entry-cache-shared'
    fifo-entry-cache-response:
      allOf:
      - $ref: '#/components/schemas/fifo_entry_cache_response_allOf'
      - $ref: '#/components/schemas/fifo-entry-cache-shared'
    fifo-entry-cache-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfifo-entry-cacheSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        maxMemoryPercent:
          description: "Specifies the maximum amount of memory, as a percentage of\
            \ the total maximum JVM heap size, that this cache should occupy when\
            \ full. If the amount of memory the cache is using is greater than this\
            \ amount, then an attempt to put a new entry in the cache will be ignored\
            \ and will cause the oldest entry to be purged."
          type: integer
        maxEntries:
          description: "Specifies the maximum number of entries that will be allowed\
            \ in the cache. Once the cache reaches this size, then adding new entries\
            \ will cause existing entries to be purged, starting with the oldest."
          type: integer
        onlyCacheFrequentlyAccessed:
          description: Specifies that the cache should only store entries which are
            accessed much more frequently than the average entry. The cache will observe
            attempts to place entries in the cache and compare an entry's accesses
            to the average entry's.
          type: boolean
        includeFilter:
          items:
            description: The set of filters that define the entries that should be
              included in the cache.
            type: string
          type: array
        excludeFilter:
          items:
            description: The set of filters that define the entries that should be
              excluded from the cache.
            type: string
          type: array
        minCacheEntryValueCount:
          description: Specifies the minimum number of attribute values (optionally
            across a specified subset of attributes as defined in the min-cache-entry-attributes
            property) for entries that should be held in the cache. Entries with fewer
            than this number of attribute values will be excluded from the cache.
          type: integer
        minCacheEntryAttribute:
          items:
            description: "Specifies the names of the attribute types for which the\
              \ min-cache-entry-value-count property should apply. If no attribute\
              \ types are specified, then all user attributes will be examined."
            type: string
          type: array
        description:
          description: A description for this Entry Cache
          type: string
        enabled:
          description: Indicates whether the Entry Cache is enabled.
          type: boolean
        cacheLevel:
          description: Specifies the cache level in the cache order if more than one
            instance of the cache is configured.
          type: integer
        cacheUnindexedSearchResults:
          description: Indicates whether the entry cache should be updated with entries
            that have been returned to the client during the course of processing
            an unindexed search.
          type: boolean
      required:
      - cacheLevel
      - enabled
      type: object
    Enumfifo-entry-cacheSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:entry-cache:fifo
      type: string
    dsee-compat-access-control-handler-response:
      example:
        allowedBindControl:
        - null
        - null
        schemas:
        - null
        globalACI:
        - globalACI
        - globalACI
        allowedBindControlOID:
        - allowedBindControlOID
        - allowedBindControlOID
        enabled: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdsee-compat-access-control-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        globalACI:
          items:
            description: Defines global access control rules.
            type: string
          type: array
        allowedBindControl:
          items:
            $ref: '#/components/schemas/Enumaccess-control-handler-allowedBindControlProp'
          type: array
        allowedBindControlOID:
          items:
            description: Specifies the OIDs of any additional controls (not covered
              by the allowed-bind-control property) that should be permitted in bind
              requests.
            type: string
          type: array
        enabled:
          description: "Indicates whether this Access Control Handler is enabled.\
            \ If set to FALSE, then no access control is enforced, and any client\
            \ (including unauthenticated or anonymous clients) could be allowed to\
            \ perform any operation if not subject to other restrictions, such as\
            \ those enforced by the privilege subsystem."
          type: boolean
      required:
      - enabled
      type: object
    Enumdsee-compat-access-control-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:access-control-handler:dsee-compat
      type: string
    Enumaccess-control-handler-allowedBindControlProp:
      description: "Specifies a set of controls that clients should be allowed to\
        \ include in bind requests. As bind requests are evaluated as the unauthenticated\
        \ user, any controls included in this set will be permitted for any bind attempt.\
        \ If you wish to grant permission for any bind controls not listed here, then\
        \ the allowed-bind-control-oid property may be used to accomplish that."
      enum:
      - administrative-operation
      - authorization-identity
      - get-authorization-entry
      - get-backend-set-id
      - get-password-policy-state-issues
      - get-recent-login-history
      - get-server-id
      - get-user-resource-limits
      - intermediate-client
      - operation-purpose
      - password-policy
      - retain-identity
      - route-to-backend-set
      - route-to-server
      - suppress-operational-attribute-update
      type: string
    output-alert-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumoutput-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        outputLocation:
          $ref: '#/components/schemas/Enumalert-handler-outputLocationProp'
        outputFormat:
          $ref: '#/components/schemas/Enumalert-handler-outputFormatProp'
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - schemas
      type: object
    Enumoutput-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:output
      type: string
    add-smtp-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/smtp-alert-handler-shared'
    smtp-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/smtp-alert-handler-shared'
    smtp-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsmtp-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ SMTP Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        senderAddress:
          description: Specifies the email address to use as the sender for messages
            generated by this alert handler.
          type: string
        recipientAddress:
          items:
            description: Specifies an email address to which the messages should be
              sent.
            type: string
          type: array
        messageSubject:
          description: Specifies the subject that should be used for email messages
            generated by this alert handler.
          type: string
        messageBody:
          description: Specifies the body that should be used for email messages generated
            by this alert handler.
          type: string
        includeMonitorDataFilter:
          description: Include monitor entries that match this filter.
          type: string
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - messageBody
      - messageSubject
      - recipientAddress
      - schemas
      - senderAddress
      type: object
    Enumsmtp-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:smtp
      type: string
    add-jmx-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/jmx-alert-handler-shared'
    jmx-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/jmx-alert-handler-shared'
    jmx-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjmx-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ JMX Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - schemas
      type: object
    Enumjmx-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:jmx
      type: string
    add-groovy-scripted-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-shared'
    groovy-scripted-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-shared'
    groovy-scripted-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Alert Handler.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Alert Handler. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:groovy-scripted
      type: string
    add-snmp-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/snmp-alert-handler-shared'
    snmp-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/snmp-alert-handler-shared'
    snmp-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsnmp-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ SNMP Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        serverHostName:
          description: Specifies the address of the SNMP agent to which traps will
            be sent.
          type: string
        serverPort:
          description: Specifies the port number of the SNMP agent to which traps
            will be sent.
          type: integer
        communityName:
          description: Specifies the name of the community to which the traps will
            be sent.
          type: string
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - communityName
      - enabled
      - schemas
      - serverHostName
      - serverPort
      type: object
    Enumsnmp-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp
      type: string
    add-twilio-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/twilio-alert-handler-shared'
    twilio-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/twilio-alert-handler-shared'
    twilio-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtwilio-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Twilio Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        twilioAccountSID:
          description: The unique identifier assigned to the Twilio account that will
            be used.
          type: string
        twilioAuthToken:
          description: The auth token for the Twilio account that will be used.
          format: password
          type: string
        twilioAuthTokenPassphraseProvider:
          description: The passphrase provider that may be used to obtain the auth
            token for the Twilio account that will be used.
          type: string
        senderPhoneNumber:
          items:
            description: The outgoing phone number to use for the messages. Values
              must be phone numbers you have obtained for use with your Twilio account.
            type: string
          type: array
        recipientPhoneNumber:
          items:
            description: The phone number to which alert notifications should be delivered.
            type: string
          type: array
        longMessageBehavior:
          $ref: '#/components/schemas/Enumalert-handler-longMessageBehaviorProp'
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - longMessageBehavior
      - recipientPhoneNumber
      - schemas
      - senderPhoneNumber
      - twilioAccountSID
      type: object
    Enumtwilio-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:twilio
      type: string
    add-error-log-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/error-log-alert-handler-shared'
    error-log-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/error-log-alert-handler-shared'
    error-log-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumerror-log-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - schemas
      type: object
    Enumerror-log-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:error-log
      type: string
    add-snmp-sub-agent-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-shared'
    snmp-sub-agent-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-shared'
    snmp-sub-agent-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsnmp-sub-agent-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ SNMP Sub Agent Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - schemas
      type: object
    Enumsnmp-sub-agent-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:snmp-sub-agent
      type: string
    add-exec-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/exec-alert-handler-shared'
    exec-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/exec-alert-handler-shared'
    exec-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexec-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        command:
          description: "Specifies the path of the command to execute, without any\
            \ arguments. It must be an absolute path for reasons of security and reliability."
          type: string
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Exec Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - command
      - enabled
      - schemas
      type: object
    Enumexec-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:exec
      type: string
    add-third-party-alert-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_alert_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-alert-handler-shared'
    third-party-alert-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_alert_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-alert-handler-shared'
    third-party-alert-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-alert-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Alert Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Alert Handler. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Alert Handler
          type: string
        enabled:
          description: Indicates whether the Alert Handler is enabled.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Alert Handler in a background thread so that any potentially-expensive\
            \ processing (e.g., performing network communication to deliver the alert\
            \ notification) will not delay whatever processing the server was performing\
            \ when the alert was generated."
          type: boolean
        enabledAlertSeverity:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertSeverityProp'
          type: array
        enabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-enabledAlertTypeProp'
          type: array
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumalert-handler-disabledAlertTypeProp'
          type: array
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-alert-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alert-handler:third-party
      type: string
    Enumalert-handler-enabledAlertSeverityProp:
      description: "Specifies the alert severities for which this alert handler should\
        \ be used. If no values are provided, then this alert handler will be enabled\
        \ for alerts with any severity."
      enum:
      - info
      - warning
      - error
      - fatal
      type: string
    Enumalert-handler-outputFormatProp:
      description: The format to use when writing the alert messages.
      enum:
      - legacy-text
      - single-line-json
      - multi-line-json
      type: string
    Enumalert-handler-outputLocationProp:
      description: The location to which alert messages will be written.
      enum:
      - server-out-file
      - standard-output
      - standard-error
      type: string
    Enumalert-handler-enabledAlertTypeProp:
      description: Specifies the names of the alert types that are enabled for this
        alert handler.
      enum:
      - access-control-change
      - access-control-disabled
      - access-control-enabled
      - access-control-parse-failure
      - access-log-criteria-matched
      - alarm-cleared
      - alarm-critical
      - alarm-major
      - alarm-minor
      - alarm-warning
      - backend-disabled
      - backend-initialization-failed
      - backup-failed
      - cannot-acquire-shared-backend-lock
      - cannot-copy-schema-files
      - cannot-decode-entry
      - cannot-find-recurring-task
      - cannot-register-backend
      - cannot-release-shared-backend-lock
      - cannot-rename-current-task-file
      - cannot-rename-new-task-file
      - cannot-restore-backup
      - cannot-schedule-recurring-task-iteration
      - cannot-write-configuration
      - cannot-write-new-schema-files
      - cannot-write-server-state-file
      - cannot-write-task-backing-file
      - config-change
      - console-logger-without-no-detach
      - crypto-manager-error
      - continuous-garbage-collection-detected
      - deadlock-detected
      - debug-logging-enabled
      - delegated-admin-configuration-errors
      - duplicate-alerts-suppressed
      - duplicate-error-alerts-suppressed
      - duplicate-fatal-alerts-suppressed
      - duplicate-info-alerts-suppressed
      - duplicate-warning-alerts-suppressed
      - embedded-postgresql-unavailable
      - entering-lockdown-mode
      - entry-references-removed-attribute-type
      - exec-task-launching-command
      - exploded-index-background-delete-cleanup-failed
      - exploded-index-background-delete-failed
      - external-config-file-edit-handled
      - external-config-file-edit-lost
      - external-server-initialization-failed
      - failed-to-apply-mirrored-configuration
      - file-retention-task-delete-failure
      - force-gc-complete
      - force-gc-starting
      - global-index-insufficient-disk-space-error
      - global-index-persistence-error
      - global-index-read-error
      - global-referential-integrity-update-failure
      - globally-unique-attribute-conflict
      - health-check-available-to-degraded
      - health-check-available-to-unavailable
      - health-check-degraded-to-available
      - health-check-degraded-to-unavailable
      - health-check-unavailable-to-available
      - health-check-unavailable-to-degraded
      - http-connection-handler-duplicate-context-path
      - http-connection-handler-duplicate-servlet-extension
      - index-corrupt
      - index-degraded
      - index-rebuild-completed
      - index-rebuild-in-progress
      - insecure-access-token-validator-enabled
      - invalid-privilege
      - je-background-sync-failed
      - je-cleaner-disabled
      - je-daemon-thread-exception
      - je-environment-not-closed-cleanly
      - je-recovery-required
      - jvm-misconfiguration
      - large-attribute-update-failure
      - lba-no-available-servers
      - ldap-connection-handler-cannot-listen
      - ldap-connection-handler-consecutive-failures
      - ldap-connection-handler-uncaught-error
      - ldif-backend-cannot-write
      - ldif-connection-handler-parse-error
      - ldif-connection-handler-io-error
      - leaving-lockdown-mode
      - log-file-rotation-listener-invoke-error
      - log-file-rotation-listener-processing-takes-too-long
      - logging-error
      - low-disk-space-error
      - low-disk-space-warning
      - mirrored-subtree-manager-forced-as-master-error
      - mirrored-subtree-manager-forced-as-master-warning
      - mirrored-subtree-manager-no-master-found
      - mirrored-subtree-server-not-in-topology
      - mirrored-subtree-manager-operation-error
      - mirrored-subtree-manager-failed-outbound-connection
      - mirrored-subtree-manager-connection-asymmetry
      - missing-schema-elements-referenced-by-backend
      - monitoring-endpoint-unable-to-connect
      - no-enabled-alert-handlers
      - offline-config-change-detected
      - out-of-disk-space-error
      - pdp-unavailable
      - pdp-trust-framework-version-deprecated
      - proxy-entry-balancing-operation-failure
      - proxy-entry-balancing-error-multiple-operations-succeeded
      - proxy-entry-rebalancing-admin-action-required
      - replication-backlogged
      - replication-metadata-decode-failure
      - replication-missing-changes
      - replication-monitor-data-unavailable
      - replication-plugin-message-serialization-failure
      - replication-server-changelog-failure
      - replication-server-listen-failure
      - replication-unresolved-conflict
      - replication-unsent-changes
      - replication-replay-failed
      - restart-required
      - schema-checking-disabled
      - scim-lookthrough-limit-exceeded
      - restricted-subtree-accessibility
      - server-shutting-down
      - server-starting
      - server-started
      - subtree-delete-interrupted
      - sync-resource-connection-error
      - sync-resource-operation-error
      - sync-pipe-initialization-error
      - sync-pipe-backlog-above-threshold
      - sync-pipe-backlog-below-threshold
      - system-nanotime-stopped
      - system-current-time-shifted
      - task-started
      - task-completed
      - task-failed
      - third-party-extension-exception
      - thread-exit-holding-lock
      - threshold-warning-entry
      - threshold-warning-exit
      - threshold-critical-entry
      - threshold-critical-exit
      - topology-registry-secret-key-deleted
      - uncaught-exception
      - unindexed-internal-search
      - unique-attribute-sync-conflict
      - unique-attribute-sync-error
      - uniqueness-control-post-commit-conflict
      - unlicensed-product
      - unrecognized-alert-type
      - user-defined-error
      - user-defined-fatal
      - user-defined-info
      - user-defined-warning
      - worker-thread-caught-error
      - work-queue-backlogged
      - work-queue-full
      - work-queue-no-threads-remaining
      - server-jvm-paused
      - sensitive-trace-data-logged-warning
      - replication-generation-id-mismatch
      - account-temporarily-locked-account-status-notification
      - account-permanently-locked-account-status-notification
      - account-unlocked-account-status-notification
      - account-idle-locked-account-status-notification
      - account-reset-locked-account-status-notification
      - account-disabled-account-status-notification
      - account-enabled-account-status-notification
      - account-not-yet-active-account-status-notification
      - account-expired-account-status-notification
      - password-expired-account-status-notification
      - password-expiring-account-status-notification
      - password-reset-account-status-notification
      - password-changed-account-status-notification
      - account-created-account-status-notification
      - account-updated-account-status-notification
      - bind-password-failed-validation-account-status-notification
      - must-change-password-account-status-notification
      - privilege-assigned
      - insecure-request-rejected
      - incremental-backups-deprecated
      - replace-certificate-succeeded
      - replace-certificate-failed
      type: string
    Enumalert-handler-longMessageBehaviorProp:
      description: The behavior to use for alert messages that are longer than the
        160-character size limit for SMS messages.
      enum:
      - truncate
      - send-as-multiple-messages
      type: string
    Enumalert-handler-disabledAlertTypeProp:
      description: Specifies the names of the alert types that are disabled for this
        alert handler.
      enum:
      - access-control-change
      - access-control-disabled
      - access-control-enabled
      - access-control-parse-failure
      - access-log-criteria-matched
      - alarm-cleared
      - alarm-critical
      - alarm-major
      - alarm-minor
      - alarm-warning
      - backend-disabled
      - backend-initialization-failed
      - backup-failed
      - cannot-acquire-shared-backend-lock
      - cannot-copy-schema-files
      - cannot-decode-entry
      - cannot-find-recurring-task
      - cannot-register-backend
      - cannot-release-shared-backend-lock
      - cannot-rename-current-task-file
      - cannot-rename-new-task-file
      - cannot-restore-backup
      - cannot-schedule-recurring-task-iteration
      - cannot-write-configuration
      - cannot-write-new-schema-files
      - cannot-write-server-state-file
      - cannot-write-task-backing-file
      - config-change
      - console-logger-without-no-detach
      - crypto-manager-error
      - continuous-garbage-collection-detected
      - deadlock-detected
      - debug-logging-enabled
      - delegated-admin-configuration-errors
      - duplicate-alerts-suppressed
      - duplicate-error-alerts-suppressed
      - duplicate-fatal-alerts-suppressed
      - duplicate-info-alerts-suppressed
      - duplicate-warning-alerts-suppressed
      - embedded-postgresql-unavailable
      - entering-lockdown-mode
      - entry-references-removed-attribute-type
      - exec-task-launching-command
      - exploded-index-background-delete-cleanup-failed
      - exploded-index-background-delete-failed
      - external-config-file-edit-handled
      - external-config-file-edit-lost
      - external-server-initialization-failed
      - failed-to-apply-mirrored-configuration
      - file-retention-task-delete-failure
      - force-gc-complete
      - force-gc-starting
      - global-index-insufficient-disk-space-error
      - global-index-persistence-error
      - global-index-read-error
      - global-referential-integrity-update-failure
      - globally-unique-attribute-conflict
      - health-check-available-to-degraded
      - health-check-available-to-unavailable
      - health-check-degraded-to-available
      - health-check-degraded-to-unavailable
      - health-check-unavailable-to-available
      - health-check-unavailable-to-degraded
      - http-connection-handler-duplicate-context-path
      - http-connection-handler-duplicate-servlet-extension
      - index-corrupt
      - index-degraded
      - index-rebuild-completed
      - index-rebuild-in-progress
      - insecure-access-token-validator-enabled
      - invalid-privilege
      - je-background-sync-failed
      - je-cleaner-disabled
      - je-daemon-thread-exception
      - je-environment-not-closed-cleanly
      - je-recovery-required
      - jvm-misconfiguration
      - large-attribute-update-failure
      - lba-no-available-servers
      - ldap-connection-handler-cannot-listen
      - ldap-connection-handler-consecutive-failures
      - ldap-connection-handler-uncaught-error
      - ldif-backend-cannot-write
      - ldif-connection-handler-parse-error
      - ldif-connection-handler-io-error
      - leaving-lockdown-mode
      - log-file-rotation-listener-invoke-error
      - log-file-rotation-listener-processing-takes-too-long
      - logging-error
      - low-disk-space-error
      - low-disk-space-warning
      - mirrored-subtree-manager-forced-as-master-error
      - mirrored-subtree-manager-forced-as-master-warning
      - mirrored-subtree-manager-no-master-found
      - mirrored-subtree-server-not-in-topology
      - mirrored-subtree-manager-operation-error
      - mirrored-subtree-manager-failed-outbound-connection
      - mirrored-subtree-manager-connection-asymmetry
      - missing-schema-elements-referenced-by-backend
      - monitoring-endpoint-unable-to-connect
      - no-enabled-alert-handlers
      - offline-config-change-detected
      - out-of-disk-space-error
      - pdp-unavailable
      - pdp-trust-framework-version-deprecated
      - proxy-entry-balancing-operation-failure
      - proxy-entry-balancing-error-multiple-operations-succeeded
      - proxy-entry-rebalancing-admin-action-required
      - replication-backlogged
      - replication-metadata-decode-failure
      - replication-missing-changes
      - replication-monitor-data-unavailable
      - replication-plugin-message-serialization-failure
      - replication-server-changelog-failure
      - replication-server-listen-failure
      - replication-unresolved-conflict
      - replication-unsent-changes
      - replication-replay-failed
      - restart-required
      - schema-checking-disabled
      - scim-lookthrough-limit-exceeded
      - restricted-subtree-accessibility
      - server-shutting-down
      - server-starting
      - server-started
      - subtree-delete-interrupted
      - sync-resource-connection-error
      - sync-resource-operation-error
      - sync-pipe-initialization-error
      - sync-pipe-backlog-above-threshold
      - sync-pipe-backlog-below-threshold
      - system-nanotime-stopped
      - system-current-time-shifted
      - task-started
      - task-completed
      - task-failed
      - third-party-extension-exception
      - thread-exit-holding-lock
      - threshold-warning-entry
      - threshold-warning-exit
      - threshold-critical-entry
      - threshold-critical-exit
      - topology-registry-secret-key-deleted
      - uncaught-exception
      - unindexed-internal-search
      - unique-attribute-sync-conflict
      - unique-attribute-sync-error
      - uniqueness-control-post-commit-conflict
      - unlicensed-product
      - unrecognized-alert-type
      - user-defined-error
      - user-defined-fatal
      - user-defined-info
      - user-defined-warning
      - worker-thread-caught-error
      - work-queue-backlogged
      - work-queue-full
      - work-queue-no-threads-remaining
      - server-jvm-paused
      - sensitive-trace-data-logged-warning
      - replication-generation-id-mismatch
      - account-temporarily-locked-account-status-notification
      - account-permanently-locked-account-status-notification
      - account-unlocked-account-status-notification
      - account-idle-locked-account-status-notification
      - account-reset-locked-account-status-notification
      - account-disabled-account-status-notification
      - account-enabled-account-status-notification
      - account-not-yet-active-account-status-notification
      - account-expired-account-status-notification
      - password-expired-account-status-notification
      - password-expiring-account-status-notification
      - password-reset-account-status-notification
      - password-changed-account-status-notification
      - account-created-account-status-notification
      - account-updated-account-status-notification
      - bind-password-failed-validation-account-status-notification
      - must-change-password-account-status-notification
      - privilege-assigned
      - insecure-request-rejected
      - incremental-backups-deprecated
      - replace-certificate-succeeded
      - replace-certificate-failed
      type: string
    license-response:
      example:
        directoryPlatformLicenseKey: directoryPlatformLicenseKey
        schemas:
        - null
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/EnumlicenseSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        directoryPlatformLicenseKey:
          description: "License key enabling use of Directory Server, Directory Proxy\
            \ Server, Data Sync Server, and Data Metrics Server products."
          type: string
      type: object
    EnumlicenseSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:license
      type: string
    add-amazon-key-management-service-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-shared'
    amazon-key-management-service-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-shared'
    amazon-key-management-service-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumamazon-key-management-service-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        encryptedPassphraseFile:
          description: The path to a file that will hold the encrypted passphrase
            used by this cipher stream provider.
          type: string
        awsExternalServer:
          description: The external server with information to use when interacting
            with the Amazon Key Management Service.
          type: string
        awsAccessKeyID:
          description: The access key ID that will be used if this cipher stream provider
            will authenticate to the Amazon Key Management Service using an access
            key rather than an IAM role associated with an EC2 instance.
          type: string
        awsSecretAccessKey:
          description: The secret access key that will be used if this cipher stream
            provider will authenticate to the Amazon Key Management Service using
            an access key rather than an IAM role associated with an EC2 instance.
          format: password
          type: string
        awsRegionName:
          description: "The name of the Amazon Web Services region that holds the\
            \ encryption key. This is optional, and if it is not provided, then the\
            \ server will attempt to determine the region from the key ARN."
          type: string
        kmsEncryptionKeyArn:
          description: "The Amazon resource name (ARN) for the KMS key that will be\
            \ used to encrypt the contents of the passphrase file. This key must exist,\
            \ and the AWS client must have access to encrypt and decrypt data using\
            \ this key."
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - encryptedPassphraseFile
      - kmsEncryptionKeyArn
      - schemas
      type: object
    Enumamazon-key-management-service-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-key-management-service
      type: string
    add-amazon-secrets-manager-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-shared'
    amazon-secrets-manager-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-shared'
    amazon-secrets-manager-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        awsExternalServer:
          description: The external server with information to use when interacting
            with the AWS Secrets Manager.
          type: string
        secretID:
          description: The Amazon Resource Name (ARN) or the user-friendly name of
            the secret to be retrieved.
          type: string
        secretFieldName:
          description: The name of the JSON field whose value is the passphrase that
            will be used to generate the encryption key for protecting the contents
            of the encryption settings database.
          type: string
        secretVersionID:
          description: The unique identifier for the version of the secret to be retrieved.
          type: string
        secretVersionStage:
          description: The staging label for the version of the secret to be retrieved.
          type: string
        encryptionMetadataFile:
          description: The path to a file that will hold metadata about the encryption
            performed by this Amazon Secrets Manager Cipher Stream Provider.
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - awsExternalServer
      - enabled
      - encryptionMetadataFile
      - schemas
      - secretFieldName
      - secretID
      type: object
    Enumamazon-secrets-manager-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:amazon-secrets-manager
      type: string
    add-azure-key-vault-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-shared'
    azure-key-vault-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-shared'
    azure-key-vault-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        keyVaultURI:
          description: The URI that identifies the Azure Key Vault from which the
            secret is to be retrieved.
          type: string
        azureAuthenticationMethod:
          description: The mechanism used to authenticate to the Azure service.
          type: string
        secretName:
          description: The name of the secret to retrieve.
          type: string
        encryptionMetadataFile:
          description: The path to a file that will hold metadata about the encryption
            performed by this Azure Key Vault Cipher Stream Provider.
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - azureAuthenticationMethod
      - enabled
      - encryptionMetadataFile
      - keyVaultURI
      - schemas
      - secretName
      type: object
    Enumazure-key-vault-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:azure-key-vault
      type: string
    add-file-based-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/file-based-cipher-stream-provider-shared'
    file-based-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/file-based-cipher-stream-provider-shared'
    file-based-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordFile:
          description: The path to the file containing the password to use when generating
            ciphers.
          type: string
        waitForPasswordFile:
          description: Indicates whether the server should wait for the password file
            to become available if it does not exist.
          type: boolean
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - passwordFile
      - schemas
      type: object
    Enumfile-based-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:file-based
      type: string
    add-wait-for-passphrase-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-shared'
    wait-for-passphrase-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-shared'
    wait-for-passphrase-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumwait-for-passphrase-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumwait-for-passphrase-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:wait-for-passphrase
      type: string
    add-conjur-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/conjur-cipher-stream-provider-shared'
    conjur-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/conjur-cipher-stream-provider-shared'
    conjur-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconjur-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conjurExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Conjur server.
          type: string
        conjurSecretRelativePath:
          description: The portion of the path that follows the account name in the
            URI needed to obtain the secret passphrase to use to generate the encryption
            key. Any special characters in the path must be URL-encoded.
          type: string
        encryptionMetadataFile:
          description: The path to a file that will hold metadata about the encryption
            performed by this Conjur Cipher Stream Provider.
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - conjurExternalServer
      - conjurSecretRelativePath
      - enabled
      - encryptionMetadataFile
      - schemas
      type: object
    Enumconjur-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:conjur
      type: string
    add-pkcs11-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-shared'
    pkcs11-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-shared'
    pkcs11-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpkcs11-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        pkcs11ProviderClass:
          description: "The fully-qualified name of the Java security provider class\
            \ that implements support for interacting with PKCS #11 tokens."
          type: string
        pkcs11ProviderConfigurationFile:
          description: "The path to the file to use to configure the security provider\
            \ that implements support for interacting with PKCS #11 tokens."
          type: string
        keyStorePin:
          description: "The clear-text user PIN needed to interact with the PKCS #11\
            \ token."
          format: password
          type: string
        keyStorePinFile:
          description: "The path to a file containing the user PIN needed to interact\
            \ with the PKCS #11 token. The file must exist and must contain exactly\
            \ one line with a clear-text representation of the PIN."
          type: string
        keyStorePinEnvironmentVariable:
          description: "The name of an environment variable whose value is the user\
            \ PIN needed to interact with the PKCS #11 token. The environment variable\
            \ must be defined and must contain a clear-text representation of the\
            \ PIN."
          type: string
        pkcs11KeyStoreType:
          description: "The key store type to use when obtaining an instance of a\
            \ key store for interacting with a PKCS #11 token."
          type: string
        sslCertNickname:
          description: "The alias for the certificate in the PKCS #11 token that will\
            \ be used to wrap the encryption key. The target certificate must exist\
            \ in the PKCS #11 token, and it must have an RSA key pair because the\
            \ JVM does not currently provide adequate key wrapping support for elliptic\
            \ curve key pairs.  If you have also configured the server to use a PKCS\
            \ #11 token for accessing listener certificates, we strongly recommend\
            \ that you use a different certificate to protect the contents of the\
            \ encryption settings database than you use for negotiating TLS sessions\
            \ with clients. It is imperative that the certificate used by this PKCS11\
            \ Cipher Stream Provider remain constant for the life of the provider\
            \ because if the certificate were to be replaced, then the contents of\
            \ the encryption settings database could become inaccessible. Unlike with\
            \ listener certificates used for TLS negotiation that need to be replaced\
            \ on a regular basis, this PKCS11 Cipher Stream Provider does not consider\
            \ the validity period for the associated certificate, and it will continue\
            \ to function even after the certificate has expired.  If you need to\
            \ rotate the certificate used to protect the server's encryption settings\
            \ database, you should first install the desired new certificate in the\
            \ PKCS #11 token under a different alias. Then, you should create a new\
            \ instance of this PKCS11 Cipher Stream Provider that is configured to\
            \ use that certificate, and that also uses a different value for the encryption-metadata-file\
            \ because the information in that file is tied to the certificate used\
            \ to generate it. Finally, you will need to update the global configuration\
            \ so that the encryption-settings-cipher-stream-provider property references\
            \ the new cipher stream provider rather than this one. The update to the\
            \ global configuration must be done with the server online so that it\
            \ can properly re-encrypt the contents of the encryption settings database\
            \ with the correct key tied to the new certificate."
          type: string
        encryptionMetadataFile:
          description: The path to a file that will hold metadata about the encryption
            performed by this PKCS11 Cipher Stream Provider.
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - encryptionMetadataFile
      - schemas
      - sslCertNickname
      type: object
    Enumpkcs11-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:pkcs11
      type: string
    add-vault-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/vault-cipher-stream-provider-shared'
    vault-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/vault-cipher-stream-provider-shared'
    vault-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvault-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Vault server.
          type: string
        vaultServerBaseURI:
          items:
            description: "The base URL needed to access the Vault server. The base\
              \ URL should consist of the protocol (\"http\" or \"https\"), the server\
              \ address (resolvable name or IP address), and the port number. For\
              \ example, \"https://vault.example.com:8200/\"."
            type: string
          type: array
        vaultAuthenticationMethod:
          description: The mechanism used to authenticate to the Vault server.
          type: string
        vaultSecretPath:
          description: The path to the desired secret in the Vault service. This will
            be appended to the value of the base-url property for the associated Vault
            external server.
          type: string
        vaultSecretFieldName:
          description: The name of the field in the Vault secret record that contains
            the passphrase to use to generate the encryption key.
          type: string
        vaultEncryptionMetadataFile:
          description: The path to a file that will hold metadata about the encryption
            performed by this Vault Cipher Stream Provider.
          type: string
        trustStoreFile:
          description: The path to a file containing the information needed to trust
            the certificate presented by the Vault servers.
          type: string
        trustStorePin:
          description: "The passphrase needed to access the contents of the trust\
            \ store. This is only required if a trust store file is required, and\
            \ if that trust store requires a PIN to access its contents."
          format: password
          type: string
        trustStoreType:
          description: The store type for the specified trust store file. The value
            should likely be one of "JKS" or "PKCS12".
          type: string
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - schemas
      - vaultEncryptionMetadataFile
      - vaultSecretFieldName
      - vaultSecretPath
      type: object
    Enumvault-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:vault
      type: string
    add-third-party-cipher-stream-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_amazon_key_management_service_cipher_stream_provider_request_allOf'
      - $ref: '#/components/schemas/third-party-cipher-stream-provider-shared'
    third-party-cipher-stream-provider-response:
      allOf:
      - $ref: '#/components/schemas/amazon_key_management_service_cipher_stream_provider_response_allOf'
      - $ref: '#/components/schemas/third-party-cipher-stream-provider-shared'
    third-party-cipher-stream-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-cipher-stream-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Cipher Stream Provider.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Cipher Stream Provider. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Cipher Stream Provider
          type: string
        enabled:
          description: Indicates whether this Cipher Stream Provider is enabled for
            use in the Directory Server.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-cipher-stream-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:cipher-stream-provider:third-party
      type: string
    add-static-token-vault-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_static_token_vault_authentication_method_request_allOf'
      - $ref: '#/components/schemas/static-token-vault-authentication-method-shared'
    static-token-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/static_token_vault_authentication_method_response_allOf'
      - $ref: '#/components/schemas/static-token-vault-authentication-method-shared'
    static-token-vault-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstatic-token-vault-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultAccessToken:
          description: The static token used to authenticate to the Vault server.
          format: password
          type: string
        description:
          description: A description for this Vault Authentication Method
          type: string
      required:
      - schemas
      - vaultAccessToken
      type: object
    Enumstatic-token-vault-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:static-token
      type: string
    add-app-role-vault-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_static_token_vault_authentication_method_request_allOf'
      - $ref: '#/components/schemas/app-role-vault-authentication-method-shared'
    app-role-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/static_token_vault_authentication_method_response_allOf'
      - $ref: '#/components/schemas/app-role-vault-authentication-method-shared'
    app-role-vault-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumapp-role-vault-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultRoleID:
          description: The role ID for the AppRole to authenticate.
          type: string
        vaultSecretID:
          description: The secret ID for the AppRole to authenticate.
          format: password
          type: string
        loginMechanismName:
          description: The name used when enabling the desired AppRole authentication
            mechanism in the Vault server.
          type: string
        description:
          description: A description for this Vault Authentication Method
          type: string
      required:
      - schemas
      - vaultRoleID
      - vaultSecretID
      type: object
    Enumapp-role-vault-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:app-role
      type: string
    add-user-pass-vault-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_static_token_vault_authentication_method_request_allOf'
      - $ref: '#/components/schemas/user-pass-vault-authentication-method-shared'
    user-pass-vault-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/static_token_vault_authentication_method_response_allOf'
      - $ref: '#/components/schemas/user-pass-vault-authentication-method-shared'
    user-pass-vault-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumuser-pass-vault-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        username:
          description: The username for the user to authenticate.
          type: string
        password:
          description: The password for the user to authenticate.
          format: password
          type: string
        loginMechanismName:
          description: The name used when enabling the desired UserPass authentication
            mechanism in the Vault server.
          type: string
        description:
          description: A description for this Vault Authentication Method
          type: string
      required:
      - password
      - schemas
      - username
      type: object
    Enumuser-pass-vault-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:vault-authentication-method:user-pass
      type: string
    add-smtp-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
    smtp-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-shared'
    smtp-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsmtp-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        emailAddressAttributeType:
          items:
            description: Specifies which attribute in the user's entries may be used
              to obtain the email address when notifying the end user.
            type: string
          type: array
        emailAddressJSONField:
          description: The name of the JSON field whose value is the email address
            to which the message should be sent. The email address must be contained
            in a top-level field whose value is a single string.
          type: string
        emailAddressJSONObjectFilter:
          description: A JSON object filter that may be used to identify which email
            address value to use when sending the message.
          type: string
        recipientAddress:
          items:
            description: "Specifies an email address to which notification messages\
              \ are sent, either instead of or in addition to the end user for whom\
              \ the notification has been generated."
            type: string
          type: array
        sendMessageWithoutEndUserAddress:
          description: "Indicates whether an email notification message should be\
            \ generated and sent to the set of notification recipients even if the\
            \ user entry does not contain any values for any of the email address\
            \ attributes (that is, in cases when it is not possible to notify the\
            \ end user)."
          type: boolean
        senderAddress:
          description: Specifies the email address from which the message is sent.
            Note that this does not necessarily have to be a legitimate email address.
          type: string
        messageSubject:
          items:
            description: Specifies the subject that should be used for email messages
              generated by this account status notification handler.
            type: string
          type: array
        messageTemplateFile:
          items:
            description: Specifies the path to the file containing the message template
              to generate the email notification messages.
            type: string
          type: array
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - enabled
      - messageSubject
      - messageTemplateFile
      - schemas
      - sendMessageWithoutEndUserAddress
      - senderAddress
      type: object
    Enumsmtp-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:smtp
      type: string
    add-groovy-scripted-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
    groovy-scripted-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-shared'
    groovy-scripted-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Account Status Notification Handler.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Account Status Notification Handler. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:groovy-scripted
      type: string
    add-admin-alert-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
    admin-alert-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-shared'
    admin-alert-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumadmin-alert-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        accountStatusNotificationType:
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
          type: array
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - accountStatusNotificationType
      - enabled
      - schemas
      type: object
    Enumadmin-alert-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:admin-alert
      type: string
    add-error-log-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
    error-log-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-shared'
    error-log-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumerror-log-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        accountStatusNotificationType:
          items:
            $ref: '#/components/schemas/Enumaccount-status-notification-handler-accountStatusNotificationTypeProp'
          type: array
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - accountStatusNotificationType
      - enabled
      - schemas
      type: object
    Enumerror-log-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:error-log
      type: string
    add-multi-part-email-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
    multi-part-email-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-shared'
    multi-part-email-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummulti-part-email-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        accountTemporarilyFailureLockedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an account becomes temporarily
            locked as a result of too many authentication failures.
          type: string
        accountPermanentlyFailureLockedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an account becomes permanently
            locked as a result of too many authentication failures.
          type: string
        accountIdleLockedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that authentication attempt fails
            because it has been too long since the user last successfully authenticated.
          type: string
        accountResetLockedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that authentication attempt fails
            because the user failed to choose a new password in a timely manner after
            an administrative reset.
          type: string
        accountUnlockedMessageTemplate:
          description: "The path to a file containing the template to use to generate\
            \ the email message to send in the event that a user's account has been\
            \ unlocked (e.g., by an administrative password reset)."
          type: string
        accountDisabledMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user's account is disabled
            by an administrator.
          type: string
        accountEnabledMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user's account is enabled
            by an administrator.
          type: string
        accountNotYetActiveMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an authentication attempt
            fails because the account has an activation time that is in the future.
          type: string
        accountExpiredMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an authentication attempt
            fails because the account has an expiration time that is in the past.
          type: string
        passwordExpiredMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an authentication attempt
            fails because the account has an expired password.
          type: string
        passwordExpiringMessageTemplate:
          description: "The path to a file containing the template to use to generate\
            \ the email message to send in the event that an authentication attempt\
            \ succeeds, but the user's password is about to expire. This notification\
            \ will only be generated the first time the user authenticates within\
            \ the window of time that the server should warn about an upcoming password\
            \ expiration."
          type: string
        passwordResetMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user's password has been
            reset by an administrator.
          type: string
        passwordChangedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user changes their own password.
          type: string
        accountCreatedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a new account is created in
            an add request that matches the criteria provided in the account-creation-notification-request-criteria
            property.
          type: string
        accountUpdatedMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that an existing account is updated
            with a modify or modify DN operation that matches the criteria provided
            in the account-update-notification-request-criteria property.
          type: string
        bindPasswordFailedValidationMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user authenticated with
            a password that failed to satisfy the criteria for one or more of the
            configured password validators.
          type: string
        mustChangePasswordMessageTemplate:
          description: The path to a file containing the template to use to generate
            the email message to send in the event that a user successfully authenticates
            to the server but will be required to choose a new password before they
            will be allowed to perform any other operations.
          type: string
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enummulti-part-email-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:multi-part-email
      type: string
    add-third-party-account-status-notification-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_smtp_account_status_notification_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
    third-party-account-status-notification-handler-response:
      allOf:
      - $ref: '#/components/schemas/smtp_account_status_notification_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-shared'
    third-party-account-status-notification-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-account-status-notification-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Account Status Notification Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Account Status Notification Handler. Each configuration
              property should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Account Status Notification Handler
          type: string
        enabled:
          description: Indicates whether the Account Status Notification Handler is
            enabled. Only enabled handlers are invoked whenever a related event occurs
            in the server.
          type: boolean
        asynchronous:
          description: "Indicates whether the server should attempt to invoke this\
            \ Account Status Notification Handler in a background thread so that any\
            \ potentially-expensive processing (e.g., performing network communication\
            \ to deliver a message) will not delay processing for the operation that\
            \ triggered the notification."
          type: boolean
        accountCreationNotificationRequestCriteria:
          description: A request criteria object that identifies which add requests
            should result in account creation notifications for this handler.
          type: string
        accountUpdateNotificationRequestCriteria:
          description: A request criteria object that identifies which modify and
            modify DN requests should result in account update notifications for this
            handler.
          type: string
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-account-status-notification-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:account-status-notification-handler:third-party
      type: string
    Enumaccount-status-notification-handler-accountStatusNotificationTypeProp:
      description: The types of account status notifications that should result in
        administrative alerts.
      enum:
      - account-temporarily-locked
      - account-permanently-locked
      - account-unlocked
      - account-idle-locked
      - account-reset-locked
      - account-disabled
      - account-enabled
      - account-not-yet-active
      - account-expired
      - password-expired
      - password-expiring
      - password-reset
      - password-changed
      - account-created
      - account-updated
      - bind-password-failed-validation
      - must-change-password
      type: string
    add-server-group-request:
      allOf:
      - $ref: '#/components/schemas/add_server_group_request_allOf'
      - $ref: '#/components/schemas/server-group-shared'
    server-group-response:
      allOf:
      - $ref: '#/components/schemas/server_group_response_allOf'
      - $ref: '#/components/schemas/server-group-shared'
    server-group-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumserver-groupSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        member:
          items:
            description: A server instance that is a member of this group.
            type: string
          type: array
      type: object
    Enumserver-groupSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:server-group
      type: string
    add-ldap-pass-through-authentication-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_ldap_pass_through_authentication_handler_request_allOf'
      - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-shared'
    ldap-pass-through-authentication-handler-response:
      allOf:
      - $ref: '#/components/schemas/ldap_pass_through_authentication_handler_response_allOf'
      - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-shared'
    ldap-pass-through-authentication-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldap-pass-through-authentication-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        server:
          items:
            description: Specifies the LDAP external server(s) to which authentication
              attempts should be forwarded.
            type: string
          type: array
        serverAccessMode:
          $ref: '#/components/schemas/Enumpass-through-authentication-handler-serverAccessModeProp'
        dnMap:
          items:
            description: Specifies one or more DN mappings that may be used to transform
              bind DNs before attempting to bind to the external servers.
            type: string
          type: array
        bindDNPattern:
          description: "A pattern to use to construct the bind DN for the simple bind\
            \ request to send to the remote server. This may consist of a combination\
            \ of static text and attribute values and other directives enclosed in\
            \ curly braces.  For example, the value \"cn={cn},ou=People,dc=example,dc=com\"\
            \ indicates that the remote bind DN should be constructed from the text\
            \ \"cn=\" followed by the value of the local entry's cn attribute followed\
            \ by the text \"ou=People,dc=example,dc=com\". If an attribute contains\
            \ the value to use as the bind DN for pass-through authentication, then\
            \ the pattern may simply be the name of that attribute in curly braces\
            \ (e.g., if the seeAlso attribute contains the bind DN for the target\
            \ user, then a bind DN pattern of \"{seeAlso}\" would be appropriate).\
            \  Note that a bind DN pattern can be used to construct a bind DN that\
            \ is not actually a valid LDAP distinguished name. For example, if authentication\
            \ is being passed through to a Microsoft Active Directory server, then\
            \ a bind DN pattern could be used to construct a user principal name (UPN)\
            \ as an alternative to a distinguished name."
          type: string
        searchBaseDN:
          description: "The base DN to use when searching for the user entry using\
            \ a filter constructed from the pattern defined in the search-filter-pattern\
            \ property. If no base DN is specified, the null DN will be used as the\
            \ search base DN."
          type: string
        searchFilterPattern:
          description: "A pattern to use to construct a filter to use when searching\
            \ an external server for the entry of the user as whom to bind. For example,\
            \ \"(mail={uid:ldapFilterEscape}@example.com)\" would construct a search\
            \ filter to search for a user whose entry in the local server contains\
            \ a uid attribute whose value appears before \"@example.com\" in the mail\
            \ attribute in the external server. Note that the \"ldapFilterEscape\"\
            \ modifier should almost always be used with attributes specified in the\
            \ pattern."
          type: string
        initialConnections:
          description: Specifies the initial number of connections to establish to
            each external server against which authentication may be attempted.
          type: integer
        maxConnections:
          description: Specifies the maximum number of connections to maintain to
            each external server against which authentication may be attempted. This
            value must be greater than or equal to the value for the initial-connections
            property.
          type: integer
        useLocation:
          description: Indicates whether to take server locations into account when
            prioritizing the servers to use for pass-through authentication attempts.
          type: boolean
        maximumAllowedLocalResponseTime:
          description: The maximum length of time to wait for a response from an external
            server in the same location as this Directory Server before considering
            it unavailable.
          type: string
        maximumAllowedNonlocalResponseTime:
          description: The maximum length of time to wait for a response from an external
            server in a different location from this Directory Server before considering
            it unavailable.
          type: string
        usePasswordPolicyControl:
          description: Indicates whether to include the password policy request control
            (as defined in draft-behera-ldap-password-policy-10) in bind requests
            sent to the external server.
          type: boolean
        description:
          description: A description for this Pass Through Authentication Handler
          type: string
      required:
      - initialConnections
      - maxConnections
      - schemas
      - server
      - serverAccessMode
      type: object
    Enumldap-pass-through-authentication-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:ldap
      type: string
    add-third-party-pass-through-authentication-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_ldap_pass_through_authentication_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-shared'
    third-party-pass-through-authentication-handler-response:
      allOf:
      - $ref: '#/components/schemas/ldap_pass_through_authentication_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-shared'
    third-party-pass-through-authentication-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-pass-through-authentication-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Pass Through Authentication Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Pass Through Authentication Handler. Each configuration
              property should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Pass Through Authentication Handler
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-pass-through-authentication-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:pass-through-authentication-handler:third-party
      type: string
    Enumpass-through-authentication-handler-serverAccessModeProp:
      description: Specifies the manner in which external servers should be used for
        pass-through authentication attempts if multiple servers are defined.
      enum:
      - round-robin
      - failover-on-unavailable
      - failover-on-any-failure
      type: string
    add-consent-definition-request:
      allOf:
      - $ref: '#/components/schemas/add_consent_definition_request_allOf'
      - $ref: '#/components/schemas/consent-definition-shared'
    consent-definition-response:
      allOf:
      - $ref: '#/components/schemas/consent_definition_response_allOf'
      - $ref: '#/components/schemas/consent-definition-shared'
    consent-definition-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsent-definitionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        uniqueID:
          description: A version-independent unique identifier for this Consent Definition.
          type: string
        displayName:
          description: A human-readable display name for this Consent Definition.
          type: string
        parameter:
          items:
            description: Optional parameters for this Consent Definition.
            type: string
          type: array
        description:
          description: A description for this Consent Definition
          type: string
      required:
      - uniqueID
      type: object
    Enumconsent-definitionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:consent-definition
      type: string
    consent-service-response:
      example:
        bindDN: bindDN
        serviceAccountDN:
        - serviceAccountDN
        - serviceAccountDN
        audience: audience
        searchSizeLimit: 0
        schemas:
        - null
        unprivilegedConsentScope: unprivilegedConsentScope
        privilegedConsentScope: privilegedConsentScope
        baseDN: baseDN
        consentRecordIdentityMapper:
        - consentRecordIdentityMapper
        - consentRecordIdentityMapper
        enabled: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsent-serviceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Consent Service is enabled.
          type: boolean
        baseDN:
          description: The base DN under which consent records are stored.
          type: string
        bindDN:
          description: The DN of an internal service account used by the Consent Service
            to make internal LDAP requests.
          type: string
        searchSizeLimit:
          description: The maximum number of consent resources that may be returned
            from a search request.
          type: integer
        consentRecordIdentityMapper:
          items:
            description: "If specified, the Identity Mapper(s) that may be used to\
              \ map consent record subject and actor values to DNs. This is typically\
              \ only needed if privileged API clients will be used."
            type: string
          type: array
        serviceAccountDN:
          items:
            description: The set of account DNs that the Consent Service will consider
              to be privileged.
            type: string
          type: array
        unprivilegedConsentScope:
          description: The name of a scope that must be present in an access token
            accepted by the Consent Service for unprivileged clients.
          type: string
        privilegedConsentScope:
          description: The name of a scope that must be present in an access token
            accepted by the Consent Service if the client is to be considered privileged.
          type: string
        audience:
          description: A string or URI that identifies the Consent Service in the
            context of OAuth2 authorization.
          type: string
      required:
      - enabled
      type: object
    Enumconsent-serviceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:consent-service
      type: string
    add-topology-admin-user-request:
      allOf:
      - $ref: '#/components/schemas/add_topology_admin_user_request_allOf'
      - $ref: '#/components/schemas/topology-admin-user-shared'
    topology-admin-user-response:
      allOf:
      - $ref: '#/components/schemas/topology_admin_user_response_allOf'
      - $ref: '#/components/schemas/topology-admin-user-shared'
    topology-admin-user-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtopology-admin-userSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
      type: object
    Enumtopology-admin-userSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:topology-admin-user
      type: string
    add-change-subscription-request:
      allOf:
      - $ref: '#/components/schemas/add_change_subscription_request_allOf'
      - $ref: '#/components/schemas/change-subscription-shared'
    change-subscription-response:
      allOf:
      - $ref: '#/components/schemas/change_subscription_response_allOf'
      - $ref: '#/components/schemas/change-subscription-shared'
    change-subscription-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumchange-subscriptionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Change Subscription
          type: string
        connectionCriteria:
          description: Specifies a set of connection criteria that must match the
            client connection associated with an operation in order for that operation
            to be processed by a change subscription handler.
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the request
            associated with an operation in order for that operation to be processed
            by a change subscription handler.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the result
            associated with an operation in order for that operation to be processed
            by a change subscription handler.
          type: string
        expirationTime:
          description: "Specifies a timestamp that provides an expiration time for\
            \ this change subscription. If an expiration time is provided, then the\
            \ change subscription will not be active after that time has passed."
          type: string
      type: object
    Enumchange-subscriptionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:change-subscription
      type: string
    ldap-sdk-debug-logger-response:
      example:
        debugType:
        - null
        - null
        queueSize: 0
        rotationPolicy:
        - rotationPolicy
        - rotationPolicy
        compressionMechanism: null
        encryptionSettingsDefinitionID: encryptionSettingsDefinitionID
        description: description
        encryptLog: true
        rotationListener:
        - rotationListener
        - rotationListener
        enabled: true
        debugLevel: null
        autoFlush: true
        asynchronous: true
        schemas:
        - null
        logFile: logFile
        logFilePermissions: logFilePermissions
        timestampPrecision: null
        timeInterval: timeInterval
        includeStackTrace: true
        retentionPolicy:
        - retentionPolicy
        - retentionPolicy
        loggingErrorBehavior: null
        append: true
        bufferSize: bufferSize
        signLog: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldap-sdk-debug-loggerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this LDAP SDK Debug Logger
          type: string
        enabled:
          description: Indicates whether this LDAP SDK Debug Logger is enabled.
          type: boolean
        logFile:
          description: The path and base name of the file to use for log files generated
            by this LDAP SDK Debug Logger. The path may be either absolute or relative
            to the server root.
          type: string
        debugLevel:
          $ref: '#/components/schemas/Enumldap-sdk-debug-logger-debugLevelProp'
        debugType:
          items:
            $ref: '#/components/schemas/Enumldap-sdk-debug-logger-debugTypeProp'
          type: array
        includeStackTrace:
          description: Indicates whether a stack trace of the thread which called
            the debug method should be included in debug log messages.
          type: boolean
        logFilePermissions:
          description: The UNIX permissions of the log files created by this LDAP
            SDK Debug Logger.
          type: string
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        asynchronous:
          description: Indicates whether the LDAP SDK Debug Logger will publish records
            asynchronously.
          type: boolean
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        rotationPolicy:
          items:
            description: The rotation policy to use for the LDAP SDK Debug Logger
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the LDAP SDK Debug Logger
              .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumldap-sdk-debug-logger-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        timestampPrecision:
          $ref: '#/components/schemas/Enumldap-sdk-debug-logger-timestampPrecisionProp'
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumldap-sdk-debug-logger-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - debugLevel
      - debugType
      - enabled
      - includeStackTrace
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      type: object
    Enumldap-sdk-debug-loggerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:ldap-sdk-debug-logger
      type: string
    Enumldap-sdk-debug-logger-debugLevelProp:
      description: The minimum debug level that should be used for messages to be
        logged.
      enum:
      - severe
      - warning
      - info
      - config
      - fine
      - finer
      - finest
      type: string
    Enumldap-sdk-debug-logger-loggingErrorBehaviorProp:
      description: Specifies the behavior that the server should exhibit if an error
        occurs during logging processing.
      enum:
      - standard-error
      - lockdown-mode
      type: string
    Enumldap-sdk-debug-logger-debugTypeProp:
      description: The types of debug messages that should be logged.
      enum:
      - asn1
      - coding-error
      - connect
      - exception
      - ldap
      - ldif
      - monitor
      - other
      type: string
    Enumldap-sdk-debug-logger-timestampPrecisionProp:
      description: Specifies the smallest time unit to be included in timestamps.
      enum:
      - seconds
      - milliseconds
      type: string
    Enumldap-sdk-debug-logger-compressionMechanismProp:
      description: Specifies the type of compression (if any) to use for log files
        that are written.
      enum:
      - none
      - gzip
      type: string
    add-api-key-conjur-authentication-method-request:
      allOf:
      - $ref: '#/components/schemas/add_api_key_conjur_authentication_method_request_allOf'
      - $ref: '#/components/schemas/api-key-conjur-authentication-method-shared'
    api-key-conjur-authentication-method-response:
      allOf:
      - $ref: '#/components/schemas/api_key_conjur_authentication_method_response_allOf'
      - $ref: '#/components/schemas/api-key-conjur-authentication-method-shared'
    api-key-conjur-authentication-method-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumapi-key-conjur-authentication-methodSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        username:
          description: The username for the user to authenticate.
          type: string
        password:
          description: The password for the user to authenticate. This will be used
            to obtain an API key for the target user.
          format: password
          type: string
        apiKey:
          description: The API key for the user to authenticate.
          format: password
          type: string
        description:
          description: A description for this Conjur Authentication Method
          type: string
      required:
      - username
      type: object
    Enumapi-key-conjur-authentication-methodSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:conjur-authentication-method:api-key
      type: string
    add-constructed-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_constructed_attribute_request_allOf'
      - $ref: '#/components/schemas/constructed-attribute-shared'
    constructed-attribute-response:
      allOf:
      - $ref: '#/components/schemas/constructed_attribute_response_allOf'
      - $ref: '#/components/schemas/constructed-attribute-shared'
    constructed-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconstructed-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Constructed Attribute
          type: string
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be constructed.
          type: string
        valuePattern:
          items:
            description: Specifies a pattern for constructing the attribute value
              using fixed text and attribute values from the entry.
            type: string
          type: array
      required:
      - attributeType
      - valuePattern
      type: object
    Enumconstructed-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:constructed-attribute
      type: string
    add-character-set-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/character-set-password-validator-shared'
    character-set-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/character-set-password-validator-shared'
    character-set-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcharacter-set-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        characterSet:
          items:
            description: Specifies a character set containing characters that a password
              may contain and a value indicating the minimum number of characters
              required from that set.
            type: string
          type: array
        allowUnclassifiedCharacters:
          description: Indicates whether this password validator allows passwords
            to contain characters outside of any of the user-defined character sets.
          type: boolean
        minimumRequiredCharacterSets:
          description: Specifies the minimum number of character sets that must be
            represented in a proposed password.
          type: integer
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - allowUnclassifiedCharacters
      - characterSet
      - enabled
      - schemas
      type: object
    Enumcharacter-set-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:character-set
      type: string
    add-similarity-based-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
    similarity-based-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/similarity-based-password-validator-shared'
    similarity-based-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimilarity-based-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        minPasswordDifference:
          description: Specifies the minimum difference of new and old password.
          type: integer
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - minPasswordDifference
      - schemas
      type: object
    Enumsimilarity-based-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:similarity-based
      type: string
    add-attribute-value-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
    attribute-value-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/attribute-value-password-validator-shared'
    attribute-value-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumattribute-value-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        matchAttribute:
          items:
            description: "Specifies the name(s) of the attribute(s) whose values should\
              \ be checked to determine whether they match the provided password.\
              \ If no values are provided, then the server checks if the proposed\
              \ password matches the value of any user attribute in the target user's\
              \ entry."
            type: string
          type: array
        testPasswordSubstringOfAttributeValue:
          description: Indicates whether to reject any proposed password that is a
            substring of a value in one of the match attributes in the target user's
            entry.
          type: boolean
        testAttributeValueSubstringOfPassword:
          description: Indicates whether to reject any proposed password in which
            a value in one of the match attributes in the target user's entry is a
            substring of that password.
          type: boolean
        minimumAttributeValueLengthForSubstringMatches:
          description: The minimum length that an attribute value must have for it
            to be considered when rejecting passwords that contain the value of another
            attribute as a substring.
          type: integer
        testReversedPassword:
          description: Indicates whether to perform matching against the reversed
            value of the provided password in addition to the order in which it was
            given.
          type: boolean
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - schemas
      - testReversedPassword
      type: object
    Enumattribute-value-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:attribute-value
      type: string
    add-dictionary-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
    dictionary-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/dictionary-password-validator-shared'
    dictionary-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdictionary-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        dictionaryFile:
          description: Specifies the path to the file containing a list of words that
            cannot be used as passwords.
          type: string
        caseSensitiveValidation:
          description: Indicates whether this password validator is to treat password
            characters in a case-sensitive manner.
          type: boolean
        testReversedPassword:
          description: Indicates whether this password validator is to test the reversed
            value of the provided password as well as the order in which it was given.
          type: boolean
        ignoreLeadingNonAlphabeticCharacters:
          description: "Indicates whether to ignore any digits, symbols, or other\
            \ non-alphabetic characters that may appear at the beginning of a proposed\
            \ password."
          type: boolean
        ignoreTrailingNonAlphabeticCharacters:
          description: "Indicates whether to ignore any digits, symbols, or other\
            \ non-alphabetic characters that may appear at the end of a proposed password."
          type: boolean
        stripDiacriticalMarks:
          description: "Indicates whether to strip characters of any diacritical marks\
            \ (like accents, cedillas, circumflexes, diaereses, tildes, and umlauts)\
            \ they may contain. Any characters with a diacritical mark would be replaced\
            \ with a base version"
          type: boolean
        alternativePasswordCharacterMapping:
          items:
            description: Provides a set of character substitutions that can be applied
              to the proposed password when checking to see if it is in the provided
              dictionary. Each mapping should consist of a single character followed
              by a colon and a list of the alternative characters that may be used
              in place of that character.
            type: string
          type: array
        maximumAllowedPercentOfPassword:
          description: The maximum allowed percent of a proposed password that any
            single dictionary word is allowed to comprise. A value of 100 indicates
            that a proposed password will only be rejected if the dictionary contains
            the entire proposed password (after any configured transformations have
            been applied).
          type: integer
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - caseSensitiveValidation
      - dictionaryFile
      - enabled
      - schemas
      - testReversedPassword
      type: object
    Enumdictionary-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:dictionary
      type: string
    add-haystack-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/haystack-password-validator-shared'
    haystack-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/haystack-password-validator-shared'
    haystack-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhaystack-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        assumedPasswordGuessesPerSecond:
          description: The number of password guesses per second that a potential
            attacker may be expected to make.
          type: string
        minimumAcceptableTimeToExhaustSearchSpace:
          description: The minimum length of time (using the configured number of
            password guesses per second) required to exhaust the entire search space
            for a proposed password in order for that password to be considered acceptable.
          type: string
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - assumedPasswordGuessesPerSecond
      - enabled
      - minimumAcceptableTimeToExhaustSearchSpace
      - schemas
      type: object
    Enumhaystack-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:haystack
      type: string
    add-groovy-scripted-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
    groovy-scripted-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-password-validator-shared'
    groovy-scripted-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Password Validator.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Password Validator. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:groovy-scripted
      type: string
    add-pwned-passwords-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
    pwned-passwords-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/pwned-passwords-password-validator-shared'
    pwned-passwords-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpwned-passwords-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        pwnedPasswordsBaseURL:
          description: The base URL for requests used to interact with the Pwned Passwords
            service. The first five characters of the hexadecimal representation of
            the unsalted SHA-1 digest of a proposed password will be appended to this
            base URL to construct the HTTP GET request used to obtain information
            about potential matches.
          type: string
        invokeForAdd:
          description: Indicates whether this password validator should be used to
            validate clear-text passwords provided in LDAP add requests.
          type: boolean
        invokeForSelfChange:
          description: Indicates whether this password validator should be used to
            validate clear-text passwords provided by an end user in the course of
            changing their own password.
          type: boolean
        invokeForAdminReset:
          description: Indicates whether this password validator should be used to
            validate clear-text passwords provided by administrators when changing
            the password for another user.
          type: boolean
        acceptPasswordOnServiceError:
          description: Indicates whether to accept the proposed password if an error
            occurs while attempting to interact with the Pwned Passwords service.
          type: boolean
        keyManagerProvider:
          description: "Specifies which key manager provider should be used to obtain\
            \ a client certificate to present to the validation server when performing\
            \ HTTPS communication. This may be left undefined if communication will\
            \ not be secured with HTTPS, or if there is no need to present a client\
            \ certificate to the validation service."
          type: string
        trustManagerProvider:
          description: "Specifies which trust manager provider should be used to determine\
            \ whether to trust the certificate presented by the server when performing\
            \ HTTPS communication. This may be left undefined if HTTPS communication\
            \ is not needed, or if the validation service presents a certificate that\
            \ is trusted by the default JVM configuration (which should be the case\
            \ for the Pwned Password servers)."
          type: string
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - acceptPasswordOnServiceError
      - enabled
      - invokeForAdd
      - invokeForAdminReset
      - invokeForSelfChange
      - pwnedPasswordsBaseURL
      - schemas
      type: object
    Enumpwned-passwords-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:pwned-passwords
      type: string
    add-length-based-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/length-based-password-validator-shared'
    length-based-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/length-based-password-validator-shared'
    length-based-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlength-based-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        maxPasswordLength:
          description: Specifies the maximum number of characters that can be included
            in a proposed password.
          type: integer
        minPasswordLength:
          description: Specifies the minimum number of characters that must be included
            in a proposed password.
          type: integer
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumlength-based-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:length-based
      type: string
    add-regular-expression-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
    regular-expression-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/regular-expression-password-validator-shared'
    regular-expression-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumregular-expression-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        matchPattern:
          description: The regular expression to use for this password validator.
          type: string
        matchBehavior:
          $ref: '#/components/schemas/Enumpassword-validator-matchBehaviorProp'
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - matchBehavior
      - matchPattern
      - schemas
      type: object
    Enumregular-expression-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:regular-expression
      type: string
    add-unique-characters-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
    unique-characters-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/unique-characters-password-validator-shared'
    unique-characters-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunique-characters-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        minUniqueCharacters:
          description: Specifies the minimum number of unique characters that a password
            will be allowed to contain.
          type: integer
        caseSensitiveValidation:
          description: Indicates whether this password validator should treat password
            characters in a case-sensitive manner.
          type: boolean
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - caseSensitiveValidation
      - enabled
      - minUniqueCharacters
      - schemas
      type: object
    Enumunique-characters-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:unique-characters
      type: string
    add-repeated-characters-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
    repeated-characters-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/repeated-characters-password-validator-shared'
    repeated-characters-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumrepeated-characters-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        maxConsecutiveLength:
          description: Specifies the maximum number of times that any character can
            appear consecutively in a password value.
          type: integer
        caseSensitiveValidation:
          description: Indicates whether this password validator should treat password
            characters in a case-sensitive manner.
          type: boolean
        characterSet:
          items:
            description: "Specifies a set of characters that should be considered\
              \ equivalent for the purpose of this password validator. This can be\
              \ used, for example, to ensure that passwords contain no more than three\
              \ consecutive digits."
            type: string
          type: array
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - caseSensitiveValidation
      - enabled
      - maxConsecutiveLength
      - schemas
      type: object
    Enumrepeated-characters-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:repeated-characters
      type: string
    add-third-party-password-validator-request:
      allOf:
      - $ref: '#/components/schemas/add_character_set_password_validator_request_allOf'
      - $ref: '#/components/schemas/third-party-password-validator-shared'
    third-party-password-validator-response:
      allOf:
      - $ref: '#/components/schemas/character_set_password_validator_response_allOf'
      - $ref: '#/components/schemas/third-party-password-validator-shared'
    third-party-password-validator-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-password-validatorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Password Validator.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Password Validator. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Validator
          type: string
        enabled:
          description: Indicates whether the password validator is enabled for use.
          type: boolean
        validatorRequirementDescription:
          description: "Specifies a message that can be used to describe the requirements\
            \ imposed by this password validator to end users. If a value is provided\
            \ for this property, then it will override any description that may have\
            \ otherwise been generated by the validator."
          type: string
        validatorFailureMessage:
          description: "Specifies a message that may be provided to the end user in\
            \ the event that a proposed password is rejected by this validator. If\
            \ a value is provided for this property, then it will override any failure\
            \ message that may have otherwise been generated by the validator."
          type: string
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-password-validatorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-validator:third-party
      type: string
    Enumpassword-validator-matchBehaviorProp:
      description: The behavior to exhibit if a user's proposed password matches the
        regular expression defined in the match-pattern property.
      enum:
      - require-match
      - reject-match
      type: string
    alarm-manager-response:
      example:
        suppressedAlarm:
        - null
        - null
        schemas:
        - null
        generatedAlertTypes:
        - null
        - null
        defaultGaugeAlertLevel: null
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumalarm-managerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        defaultGaugeAlertLevel:
          $ref: '#/components/schemas/Enumalarm-manager-defaultGaugeAlertLevelProp'
        generatedAlertTypes:
          items:
            $ref: '#/components/schemas/Enumalarm-manager-generatedAlertTypesProp'
          type: array
        suppressedAlarm:
          items:
            $ref: '#/components/schemas/Enumalarm-manager-suppressedAlarmProp'
          type: array
      required:
      - defaultGaugeAlertLevel
      - generatedAlertTypes
      type: object
    Enumalarm-managerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:alarm-manager
      type: string
    Enumalarm-manager-generatedAlertTypesProp:
      description: Indicates what kind of alert types should be generated.
      enum:
      - standard
      - alarm
      type: string
    Enumalarm-manager-defaultGaugeAlertLevelProp:
      description: Specifies the level at which alerts are sent for alarms raised
        by the Alarm Manager.
      enum:
      - always
      - warning-and-above
      - minor-and-above
      - major-and-above
      - critical-only
      - never
      type: string
    Enumalarm-manager-suppressedAlarmProp:
      description: "Specifies the names of the alarm alert types that should be suppressed.\
        \ If the condition that triggers an alarm in this list occurs, then the alarm\
        \ will not be raised and no alerts will be generated. Only a subset of alarms\
        \ can be suppressed in this way. Alarms triggered by a gauge can be disabled\
        \ by disabling the gauge."
      enum:
      - no-enabled-alert-handlers
      - pdp-unavailable
      type: string
    add-jmx-connection-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_jmx_connection_handler_request_allOf'
      - $ref: '#/components/schemas/jmx-connection-handler-shared'
    jmx-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/jmx_connection_handler_response_allOf'
      - $ref: '#/components/schemas/jmx-connection-handler-shared'
    jmx-connection-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjmx-connection-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        listenPort:
          description: Specifies the port number on which the JMX Connection Handler
            will listen for connections from clients.
          type: integer
        useSSL:
          description: Indicates whether the JMX Connection Handler should use SSL.
          type: boolean
        sslCertNickname:
          description: Specifies the nickname (also called the alias) of the certificate
            that the JMX Connection Handler should use when performing SSL communication.
          type: string
        keyManagerProvider:
          description: Specifies the name of the key manager that should be used with
            this JMX Connection Handler .
          type: string
        description:
          description: A description for this Connection Handler
          type: string
        enabled:
          description: Indicates whether the Connection Handler is enabled.
          type: boolean
        allowedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are allowed to establish connections to this connection
              handler.
            type: string
          type: array
        deniedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are not allowed to establish connections to this
              connection handler.
            type: string
          type: array
      required:
      - enabled
      - listenPort
      - schemas
      type: object
    Enumjmx-connection-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-handler:jmx
      type: string
    add-ldap-connection-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_jmx_connection_handler_request_allOf'
      - $ref: '#/components/schemas/ldap-connection-handler-shared'
    ldap-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/jmx_connection_handler_response_allOf'
      - $ref: '#/components/schemas/ldap-connection-handler-shared'
    ldap-connection-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldap-connection-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        listenAddress:
          items:
            description: Specifies the address or set of addresses on which this LDAP
              Connection Handler should listen for connections from LDAP clients.
            type: string
          type: array
        listenPort:
          description: Specifies the port number on which the LDAP Connection Handler
            will listen for connections from clients.
          type: integer
        useSSL:
          description: Indicates whether the LDAP Connection Handler should use SSL.
          type: boolean
        allowStartTLS:
          description: Indicates whether clients are allowed to use StartTLS.
          type: boolean
        sslCertNickname:
          description: Specifies the nickname (also called the alias) of the certificate
            that the LDAP Connection Handler should use when performing SSL communication.
          type: string
        keyManagerProvider:
          description: Specifies the name of the key manager that should be used with
            this LDAP Connection Handler .
          type: string
        trustManagerProvider:
          description: Specifies the name of the trust manager that should be used
            with the LDAP Connection Handler .
          type: string
        allowLDAPV2:
          description: Indicates whether connections from LDAPv2 clients are allowed.
          type: boolean
        useTCPKeepAlive:
          description: Indicates whether the LDAP Connection Handler should use TCP
            keep-alive.
          type: boolean
        sendRejectionNotice:
          description: Indicates whether the LDAP Connection Handler should send a
            notice of disconnection extended response message to the client if a new
            connection is rejected for some reason.
          type: boolean
        failedBindResponseDelay:
          description: Specifies the length of time that the server should delay the
            response to non-successful bind operations. A value of zero milliseconds
            indicates that non-successful bind operations should not be delayed.
          type: string
        maxRequestSize:
          description: Specifies the size of the largest LDAP request message that
            will be allowed by this LDAP Connection handler.
          type: string
        maxCancelHandlers:
          description: Specifies the maximum number of threads that are used to process
            cancel and abandon requests from clients.
          type: integer
        numAcceptHandlers:
          description: "Specifies the number of threads that are used to accept new\
            \ client connections, and to perform any initial preparation on those\
            \ connections that may be needed before the connection can be used to\
            \ read requests and send responses."
          type: integer
        numRequestHandlers:
          description: Specifies the number of request handlers that are used to read
            requests from clients.
          type: integer
        sslClientAuthPolicy:
          $ref: '#/components/schemas/Enumconnection-handler-sslClientAuthPolicyProp'
        acceptBacklog:
          description: Specifies the maximum number of pending connection attempts
            that are allowed to queue up in the accept backlog before the server starts
            rejecting new connection attempts.
          type: integer
        sslProtocol:
          items:
            description: Specifies the names of the SSL protocols that are allowed
              for use in SSL or StartTLS communication. The set of supported ssl protocols
              can be viewed via the ssl context monitor entry.
            type: string
          type: array
        sslCipherSuite:
          items:
            description: Specifies the names of the SSL cipher suites that are allowed
              for use in SSL or StartTLS communication. The set of supported cipher
              suites can be viewed via the ssl context monitor entry.
            type: string
          type: array
        maxBlockedWriteTimeLimit:
          description: Specifies the maximum length of time that attempts to write
            data to LDAP clients should be allowed to block.
          type: string
        autoAuthenticateUsingClientCertificate:
          description: "Indicates whether to attempt to automatically authenticate\
            \ a client connection that has established a secure communication channel\
            \ (using either SSL or StartTLS) and presented its own client certificate.\
            \ Generally, clients should use the SASL EXTERNAL mechanism to authenticate\
            \ using a client certificate, but some clients may not support that capability\
            \ and/or may expect automatic authentication."
          type: boolean
        closeConnectionsWhenUnavailable:
          description: Indicates whether all connections associated with this LDAP
            Connection Handler should be closed and no new connections accepted when
            the server has determined that it is "unavailable." This allows clients
            (or a network load balancer) to route requests to another server.
          type: boolean
        closeConnectionsOnExplicitGC:
          description: Indicates whether all connections associated with this LDAP
            Connection Handler should be closed before an explicit garbage collection
            is performed to allow clients to route requests to another server.
          type: boolean
        description:
          description: A description for this Connection Handler
          type: string
        enabled:
          description: Indicates whether the Connection Handler is enabled.
          type: boolean
        allowedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are allowed to establish connections to this connection
              handler.
            type: string
          type: array
        deniedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are not allowed to establish connections to this
              connection handler.
            type: string
          type: array
      required:
      - enabled
      - listenPort
      - schemas
      type: object
    Enumldap-connection-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-handler:ldap
      type: string
    add-ldif-connection-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_jmx_connection_handler_request_allOf'
      - $ref: '#/components/schemas/ldif-connection-handler-shared'
    ldif-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/jmx_connection_handler_response_allOf'
      - $ref: '#/components/schemas/ldif-connection-handler-shared'
    ldif-connection-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldif-connection-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allowedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are allowed to establish connections to this connection
              handler.
            type: string
          type: array
        deniedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are not allowed to establish connections to this
              connection handler.
            type: string
          type: array
        ldifDirectory:
          description: Specifies the path to the directory in which the LDIF files
            should be placed.
          type: string
        pollInterval:
          description: Specifies how frequently the LDIF connection handler should
            check the LDIF directory to determine whether a new LDIF file has been
            added.
          type: string
        description:
          description: A description for this Connection Handler
          type: string
        enabled:
          description: Indicates whether the Connection Handler is enabled.
          type: boolean
      required:
      - enabled
      - ldifDirectory
      - pollInterval
      - schemas
      type: object
    Enumldif-connection-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-handler:ldif
      type: string
    add-http-connection-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_jmx_connection_handler_request_allOf'
      - $ref: '#/components/schemas/http-connection-handler-shared'
    http-connection-handler-response:
      allOf:
      - $ref: '#/components/schemas/jmx_connection_handler_response_allOf'
      - $ref: '#/components/schemas/http-connection-handler-shared'
    http-connection-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhttp-connection-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        listenAddress:
          description: "Specifies the address on which to listen for connections from\
            \ HTTP clients. If no value is defined, the server will listen on all\
            \ addresses on all interfaces."
          type: string
        listenPort:
          description: Specifies the port number on which the HTTP Connection Handler
            will listen for connections from clients.
          type: integer
        useSSL:
          description: Indicates whether the HTTP Connection Handler should use SSL.
          type: boolean
        sslCertNickname:
          description: Specifies the nickname (also called the alias) of the certificate
            that the HTTP Connection Handler should use when performing SSL communication.
          type: string
        httpServletExtension:
          items:
            description: Specifies information about servlets that will be provided
              via this connection handler.
            type: string
          type: array
        webApplicationExtension:
          items:
            description: Specifies information about web applications that will be
              provided via this connection handler.
            type: string
          type: array
        httpOperationLogPublisher:
          items:
            description: Specifies the set of HTTP operation loggers that should be
              used to log information about requests and responses for operations
              processed through this HTTP Connection Handler.
            type: string
          type: array
        sslProtocol:
          items:
            description: Specifies the names of the SSL protocols that are allowed
              for use in SSL communication. The set of supported ssl protocols can
              be viewed via the ssl context monitor entry.
            type: string
          type: array
        sslCipherSuite:
          items:
            description: Specifies the names of the SSL cipher suites that are allowed
              for use in SSL communication. The set of supported cipher suites can
              be viewed via the ssl context monitor entry.
            type: string
          type: array
        keyManagerProvider:
          description: Specifies the key manager provider that will be used to obtain
            the certificate to present to HTTPS clients.
          type: string
        trustManagerProvider:
          description: Specifies the trust manager provider that will be used to validate
            any certificates presented by HTTPS clients.
          type: string
        numRequestHandlers:
          description: Specifies the number of threads that will be used for accepting
            connections and reading requests from clients.
          type: integer
        keepStats:
          description: Indicates whether to enable statistics collection for this
            connection handler.
          type: boolean
        acceptBacklog:
          description: "Specifies the number of concurrent outstanding connection\
            \ attempts that the connection handler should allow. The default value\
            \ should be acceptable in most cases, but it may need to be increased\
            \ in environments that may attempt to establish large numbers of connections\
            \ simultaneously."
          type: integer
        allowTCPReuseAddress:
          description: Indicates whether the server should attempt to reuse socket
            descriptors. This may be useful in environments with a high rate of connection
            establishment and termination.
          type: boolean
        idleTimeLimit:
          description: "Specifies the maximum idle time for a connection. The max\
            \ idle time is applied when waiting for a new request to be received on\
            \ a connection, when reading the headers and content of a request, or\
            \ when writing the headers and content of a response."
          type: string
        lowResourcesConnectionThreshold:
          description: "Specifies the number of connections, which if exceeded, places\
            \ this handler in a low resource state where a different idle time limit\
            \ is applied on the connections."
          type: integer
        lowResourcesIdleTimeLimit:
          description: "Specifies the maximum idle time for a connection when this\
            \ handler is in a low resource state as defined by low-resource-connections.\
            \ The max idle time is applied when waiting for a new request to be received\
            \ on a connection, when reading the headers and content of a request,\
            \ or when writing the headers and content of a response."
          type: string
        enableMultipartMIMEParameters:
          description: Determines whether request form parameters submitted in multipart/
            form-data (RFC 2388) format should be processed as request parameters.
          type: boolean
        useForwardedHeaders:
          description: Indicates whether to use "Forwarded" and "X-Forwarded-*" request
            headers to override corresponding HTTP request information available during
            request processing.
          type: boolean
        httpRequestHeaderSize:
          description: Specifies the maximum buffer size of an http request including
            the request uri and all of the request headers.
          type: integer
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        useCorrelationIDHeader:
          description: "If enabled, a correlation ID header will be added to outgoing\
            \ HTTP responses."
          type: boolean
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
        correlationIDRequestHeader:
          items:
            description: "Specifies the set of HTTP request headers that may contain\
              \ a value to be used as the correlation ID. Example values are \"Correlation-Id\"\
              , \"X-Amzn-Trace-Id\", and \"X-Request-Id\"."
            type: string
          type: array
        sslClientAuthPolicy:
          $ref: '#/components/schemas/Enumconnection-handler-sslClientAuthPolicyProp'
        description:
          description: A description for this Connection Handler
          type: string
        enabled:
          description: Indicates whether the Connection Handler is enabled.
          type: boolean
        allowedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are allowed to establish connections to this connection
              handler.
            type: string
          type: array
        deniedClient:
          items:
            description: Specifies a set of address masks that determines the addresses
              of the clients that are not allowed to establish connections to this
              connection handler.
            type: string
          type: array
      required:
      - enabled
      - listenPort
      - schemas
      type: object
    Enumhttp-connection-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:connection-handler:http
      type: string
    Enumconnection-handler-sslClientAuthPolicyProp:
      description: Specifies the policy that the LDAP Connection Handler should use
        regarding client SSL certificates.
      enum:
      - disabled
      - optional
      - required
      type: string
    console-web-application-extension-response:
      example:
        ldapServer: ldapServer
        complexity: null
        initParameter:
        - initParameter
        - initParameter
        baseContextPath: baseContextPath
        oidcTrustStoreFile: oidcTrustStoreFile
        oidcStrictHostnameVerification: true
        oidcClientID: oidcClientID
        oidcTrustStorePinPassphraseProvider: oidcTrustStorePinPassphraseProvider
        description: description
        oidcClientSecretPassphraseProvider: oidcClientSecretPassphraseProvider
        oidcClientSecret: oidcClientSecret
        temporaryDirectory: temporaryDirectory
        oidcIssuerURL: oidcIssuerURL
        trustStorePinPassphraseProvider: trustStorePinPassphraseProvider
        ssoEnabled: true
        trustStoreFile: trustStoreFile
        documentRootDirectory: documentRootDirectory
        schemas:
        - null
        oidcTrustAll: true
        logFile: logFile
        warFile: warFile
        trustStoreType: trustStoreType
        oidcTrustStoreType: oidcTrustStoreType
        deploymentDescriptorFile: deploymentDescriptorFile
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsole-web-application-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        ssoEnabled:
          description: Indicates that SSO login into the Administrative Console is
            enabled.
          type: boolean
        oidcClientID:
          description: The client ID to use when authenticating to the OpenID Connect
            provider.
          type: string
        oidcClientSecret:
          description: The client secret to use when authenticating to the OpenID
            Connect provider.
          format: password
          type: string
        oidcClientSecretPassphraseProvider:
          description: A passphrase provider that may be used to obtain the client
            secret to use when authenticating to the OpenID Connect provider.
          type: string
        oidcIssuerURL:
          description: The issuer URL of the OpenID Connect provider.
          type: string
        oidcTrustStoreFile:
          description: "Specifies the path to the truststore file used by this application\
            \ to evaluate OIDC provider certificates. If this field is left blank,\
            \ the default JVM trust store will be used."
          type: string
        oidcTrustStoreType:
          description: Specifies the format for the data in the OIDC trust store file.
          type: string
        oidcTrustStorePinPassphraseProvider:
          description: "The passphrase provider that may be used to obtain the PIN\
            \ for the trust store used with OIDC providers. This is only required\
            \ if a trust store file is required, and if that trust store requires\
            \ a PIN to access its contents."
          type: string
        oidcStrictHostnameVerification:
          description: "Controls whether or not hostname verification is performed,\
            \ which checks if the hostname of the OIDC provider matches the name(s)\
            \ stored inside the certificate it provides. This property should only\
            \ be set to false for testing purposes."
          type: boolean
        oidcTrustAll:
          description: "Controls whether or not this application will always trust\
            \ any certificate that is presented to it, regardless of its contents.\
            \ This property should only be set to true for testing purposes."
          type: boolean
        ldapServer:
          description: The LDAP URL used to connect to the managed server.
          type: string
        trustStoreFile:
          description: "Specifies the path to the truststore file, which is used by\
            \ this application to establish trust of managed servers."
          type: string
        trustStoreType:
          description: Specifies the format for the data in the trust store file.
          type: string
        trustStorePinPassphraseProvider:
          description: "The passphrase provider that may be used to obtain the PIN\
            \ for the trust store used with managed LDAP servers. This is only required\
            \ if a trust store file is required, and if that trust store requires\
            \ a PIN to access its contents."
          type: string
        logFile:
          description: The path to the log file for the web application.
          type: string
        complexity:
          $ref: '#/components/schemas/Enumweb-application-extension-complexityProp'
        description:
          description: A description for this Web Application Extension
          type: string
        baseContextPath:
          description: Specifies the base context path that should be used by HTTP
            clients to reference content. The value must start with a forward slash
            and at least one additional character and must represent a valid HTTP
            context path.
          type: string
        warFile:
          description: Specifies the path to a standard web application archive (WAR)
            file.
          type: string
        documentRootDirectory:
          description: "Specifies the path to the directory on the local filesystem\
            \ containing the files to be served by this Web Application Extension.\
            \ The path must exist, and it must be a directory."
          type: string
        deploymentDescriptorFile:
          description: Specifies the path to the deployment descriptor file when used
            with document-root-directory.
          type: string
        temporaryDirectory:
          description: Specifies the path to the directory that may be used to store
            temporary files such as extracted WAR files and compiled JSP files.
          type: string
        initParameter:
          items:
            description: Specifies an initialization parameter to pass into the web
              application during startup.
            type: string
          type: array
      required:
      - baseContextPath
      type: object
    Enumconsole-web-application-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:web-application-extension:console
      type: string
    Enumweb-application-extension-complexityProp:
      description: Specifies the maximum complexity level for managed configuration
        elements.
      enum:
      - basic
      - standard
      - advanced
      - expert
      type: string
    add-trusted-certificate-request:
      allOf:
      - $ref: '#/components/schemas/add_trusted_certificate_request_allOf'
      - $ref: '#/components/schemas/trusted-certificate-shared'
    trusted-certificate-response:
      allOf:
      - $ref: '#/components/schemas/trusted_certificate_response_allOf'
      - $ref: '#/components/schemas/trusted-certificate-shared'
    trusted-certificate-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtrusted-certificateSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        certificate:
          description: The PEM-encoded X.509v3 certificate.
          type: string
      required:
      - certificate
      type: object
    Enumtrusted-certificateSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:trusted-certificate
      type: string
    add-simple-search-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-search-entry-criteria-shared'
    simple-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-search-entry-criteria-shared'
    simple-search-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-search-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        requestCriteria:
          description: Specifies a request criteria object that must match the associated
            request for entries included in this Simple Search Entry Criteria. of
            them.
          type: string
        allIncludedEntryControl:
          items:
            description: "Specifies the OID of a control that must be present in search\
              \ result entries included in this Simple Search Entry Criteria. If any\
              \ control OIDs are provided, then the entry must contain all of those\
              \ controls."
            type: string
          type: array
        anyIncludedEntryControl:
          items:
            description: "Specifies the OID of a control that may be present in search\
              \ result entries included in this Simple Search Entry Criteria. If any\
              \ control OIDs are provided, then the entry must contain at least one\
              \ of those controls."
            type: string
          type: array
        notAllIncludedEntryControl:
          items:
            description: "Specifies the OID of a control that should not be present\
              \ in search result entries included in this Simple Search Entry Criteria.\
              \ If any control OIDs are provided, then the entry must not contain\
              \ at least one of those controls (that is, it may contain zero or more\
              \ of those controls, but not all of them)."
            type: string
          type: array
        noneIncludedEntryControl:
          items:
            description: "Specifies the OID of a control that must not be present\
              \ in search result entries included in this Simple Search Entry Criteria.\
              \ If any control OIDs are provided, then the entry must not contain\
              \ any of those controls."
            type: string
          type: array
        includedEntryBaseDN:
          items:
            description: Specifies a base DN below which entries included in this
              Simple Search Entry Criteria may exist.
            type: string
          type: array
        excludedEntryBaseDN:
          items:
            description: Specifies a base DN below which entries included in this
              Simple Search Entry Criteria may not exist.
            type: string
          type: array
        allIncludedEntryFilter:
          items:
            description: "Specifies a search filter that must match search result\
              \ entries included in this Simple Search Entry Criteria. Note that this\
              \ matching will be performed against the entry that is actually returned\
              \ to the client and may not reflect the complete entry stored in the\
              \ server. If any filters are provided, then the returned entry must\
              \ match all of those filters."
            type: string
          type: array
        anyIncludedEntryFilter:
          items:
            description: "Specifies a search filter that may match search result entries\
              \ included in this Simple Search Entry Criteria. Note that this matching\
              \ will be performed against the entry that is actually returned to the\
              \ client and may not reflect the complete entry stored in the server.\
              \ If any filters are provided, then the entry must match at least one\
              \ of those filters."
            type: string
          type: array
        notAllIncludedEntryFilter:
          items:
            description: "Specifies a search filter that should not match search result\
              \ entries included in this Simple Search Entry Criteria. Note that this\
              \ matching will be performed against the entry that is actually returned\
              \ to the client and may not reflect the complete entry stored in the\
              \ server. If any filters are provided, then the entry must not match\
              \ at least one of those filters (that is, the entry may match zero or\
              \ more of those filters, but not of all of them)."
            type: string
          type: array
        noneIncludedEntryFilter:
          items:
            description: "Specifies a search filter that must not match search result\
              \ entries included in this Simple Search Entry Criteria. Note that this\
              \ matching will be performed against the entry that is actually returned\
              \ to the client and may not reflect the complete entry stored in the\
              \ server. If any filters are provided, then the entry must not match\
              \ any of those filters."
            type: string
          type: array
        allIncludedEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the entry must be a member to be included in this Simple Search\
              \ Entry Criteria. If any group DNs are provided, then the entry must\
              \ be a member of all of them."
            type: string
          type: array
        anyIncludedEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the entry may be a member to be included in this Simple Search\
              \ Entry Criteria. If any group DNs are provided, then the entry must\
              \ be a member of at least one of them."
            type: string
          type: array
        notAllIncludedEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the entry should not be a member to be included in this Simple\
              \ Search Entry Criteria. If any group DNs are provided, then the entry\
              \ must not be a member of at least one of them (that is, the entry may\
              \ be a member of zero or more of the specified groups, but not of all\
              \ of them)."
            type: string
          type: array
        noneIncludedEntryGroupDN:
          items:
            description: "Specifies the DN of a group in which the user associated\
              \ with the entry must not be a member to be included in this Simple\
              \ Search Entry Criteria. If any group DNs are provided, then the entry\
              \ must not be a member of any of them."
            type: string
          type: array
        description:
          description: A description for this Search Entry Criteria
          type: string
      required:
      - schemas
      type: object
    Enumsimple-search-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:simple
      type: string
    add-aggregate-search-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/aggregate-search-entry-criteria-shared'
    aggregate-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/aggregate-search-entry-criteria-shared'
    aggregate-search-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-search-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedSearchEntryCriteria:
          items:
            description: "Specifies a search entry criteria object that must match\
              \ the associated search result entry in order to match the aggregate\
              \ search entry criteria. If one or more all-included search entry criteria\
              \ objects are provided, then a search result entry must match all of\
              \ them in order to match the aggregate search entry criteria."
            type: string
          type: array
        anyIncludedSearchEntryCriteria:
          items:
            description: "Specifies a search entry criteria object that may match\
              \ the associated search result entry in order to match the aggregate\
              \ search entry criteria. If one or more any-included search entry criteria\
              \ objects are provided, then a search result entry must match at least\
              \ one of them in order to match the aggregate search entry criteria."
            type: string
          type: array
        notAllIncludedSearchEntryCriteria:
          items:
            description: "Specifies a search entry criteria object that should not\
              \ match the associated search result entry in order to match the aggregate\
              \ search entry criteria. If one or more not-all-included search entry\
              \ criteria objects are provided, then a search result entry must not\
              \ match all of them (that is, it may match zero or more of them, but\
              \ it must not match all of them) in order to match the aggregate search\
              \ entry criteria."
            type: string
          type: array
        noneIncludedSearchEntryCriteria:
          items:
            description: "Specifies a search entry criteria object that must not match\
              \ the associated search result entry in order to match the aggregate\
              \ search entry criteria. If one or more none-included search entry criteria\
              \ objects are provided, then a search result entry must not match any\
              \ of them in order to match the aggregate search entry criteria."
            type: string
          type: array
        description:
          description: A description for this Search Entry Criteria
          type: string
      required:
      - schemas
      type: object
    Enumaggregate-search-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:aggregate
      type: string
    add-third-party-search-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_search_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-search-entry-criteria-shared'
    third-party-search-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_search_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-search-entry-criteria-shared'
    third-party-search-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-search-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Search Entry Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Search Entry Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Search Entry Criteria
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-search-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:search-entry-criteria:third-party
      type: string
    add-delay-bind-response-failure-lockout-action-request:
      allOf:
      - $ref: '#/components/schemas/add_delay_bind_response_failure_lockout_action_request_allOf'
      - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-shared'
    delay-bind-response-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/delay_bind_response_failure_lockout_action_response_allOf'
      - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-shared'
    delay-bind-response-failure-lockout-action-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdelay-bind-response-failure-lockout-actionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        delay:
          description: The length of time to delay the bind response for accounts
            with too many failed authentication attempts.
          type: string
        allowBlockingDelay:
          description: Indicates whether to delay the response for authentication
            attempts even if that delay may block the thread being used to process
            the attempt.
          type: boolean
        generateAccountStatusNotification:
          description: Indicates whether to generate an account status notification
            for cases in which a bind response is delayed because of failure lockout.
          type: boolean
        description:
          description: A description for this Failure Lockout Action
          type: string
      required:
      - delay
      - schemas
      type: object
    Enumdelay-bind-response-failure-lockout-actionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:delay-bind-response
      type: string
    add-no-operation-failure-lockout-action-request:
      allOf:
      - $ref: '#/components/schemas/add_delay_bind_response_failure_lockout_action_request_allOf'
      - $ref: '#/components/schemas/no-operation-failure-lockout-action-shared'
    no-operation-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/delay_bind_response_failure_lockout_action_response_allOf'
      - $ref: '#/components/schemas/no-operation-failure-lockout-action-shared'
    no-operation-failure-lockout-action-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumno-operation-failure-lockout-actionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        generateAccountStatusNotification:
          description: Indicates whether to generate an account status notification
            for cases in which this failure lockout action is invoked for a bind attempt
            with too many outstanding authentication failures.
          type: boolean
        description:
          description: A description for this Failure Lockout Action
          type: string
      required:
      - schemas
      type: object
    Enumno-operation-failure-lockout-actionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:no-operation
      type: string
    add-lock-account-failure-lockout-action-request:
      allOf:
      - $ref: '#/components/schemas/add_delay_bind_response_failure_lockout_action_request_allOf'
      - $ref: '#/components/schemas/lock-account-failure-lockout-action-shared'
    lock-account-failure-lockout-action-response:
      allOf:
      - $ref: '#/components/schemas/delay_bind_response_failure_lockout_action_response_allOf'
      - $ref: '#/components/schemas/lock-account-failure-lockout-action-shared'
    lock-account-failure-lockout-action-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlock-account-failure-lockout-actionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Failure Lockout Action
          type: string
      required:
      - schemas
      type: object
    Enumlock-account-failure-lockout-actionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:failure-lockout-action:lock-account
      type: string
    add-subject-equals-dn-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-shared'
    subject-equals-dn-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-shared'
    subject-equals-dn-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsubject-equals-dn-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsubject-equals-dn-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-equals-dn
      type: string
    add-subject-dn-to-user-attribute-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-shared'
    subject-dn-to-user-attribute-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-shared'
    subject-dn-to-user-attribute-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsubject-dn-to-user-attribute-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        subjectAttribute:
          description: Specifies the name or OID of the attribute whose value should
            exactly match the certificate subject DN.
          type: string
        userBaseDN:
          items:
            description: Specifies the base DNs that should be used when performing
              searches to map the client certificate to a user entry.
            type: string
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      - subjectAttribute
      type: object
    Enumsubject-dn-to-user-attribute-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-dn-to-user-attribute
      type: string
    add-groovy-scripted-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-shared'
    groovy-scripted-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-shared'
    groovy-scripted-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Certificate Mapper.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Certificate Mapper. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:groovy-scripted
      type: string
    add-subject-attribute-to-user-attribute-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-shared'
    subject-attribute-to-user-attribute-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-shared'
    subject-attribute-to-user-attribute-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsubject-attribute-to-user-attribute-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        subjectAttributeMapping:
          items:
            description: Specifies a mapping between certificate attributes and user
              attributes.
            type: string
          type: array
        userBaseDN:
          items:
            description: Specifies the base DNs that should be used when performing
              searches to map the client certificate to a user entry.
            type: string
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      - subjectAttributeMapping
      type: object
    Enumsubject-attribute-to-user-attribute-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:subject-attribute-to-user-attribute
      type: string
    add-fingerprint-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/fingerprint-certificate-mapper-shared'
    fingerprint-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/fingerprint-certificate-mapper-shared'
    fingerprint-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfingerprint-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        fingerprintAttribute:
          description: Specifies the attribute in which to look for the fingerprint.
          type: string
        fingerprintAlgorithm:
          $ref: '#/components/schemas/Enumcertificate-mapper-fingerprintAlgorithmProp'
        userBaseDN:
          items:
            description: Specifies the set of base DNs below which to search for users.
            type: string
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - fingerprintAlgorithm
      - fingerprintAttribute
      - schemas
      type: object
    Enumfingerprint-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:fingerprint
      type: string
    add-third-party-certificate-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_subject_equals_dn_certificate_mapper_request_allOf'
      - $ref: '#/components/schemas/third-party-certificate-mapper-shared'
    third-party-certificate-mapper-response:
      allOf:
      - $ref: '#/components/schemas/subject_equals_dn_certificate_mapper_response_allOf'
      - $ref: '#/components/schemas/third-party-certificate-mapper-shared'
    third-party-certificate-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-certificate-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Certificate Mapper.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Certificate Mapper. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Certificate Mapper
          type: string
        enabled:
          description: Indicates whether the Certificate Mapper is enabled.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-certificate-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:certificate-mapper:third-party
      type: string
    Enumcertificate-mapper-fingerprintAlgorithmProp:
      description: Specifies the name of the digest algorithm to compute the fingerprint
        of client certificates.
      enum:
      - md5
      - sha1
      - sha256
      type: string
    add-syslog-json-audit-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-shared'
    syslog-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-shared'
    syslog-json-audit-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-json-audit-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog JSON Audit Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog JSON Audit Log Publisher.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        useReversibleForm:
          description: Indicates whether the audit log should be written in reversible
            form so that it is possible to revert the changes if desired.
          type: boolean
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          description: Indicates whether to include information about any operation
            purpose request control that may have been included in the request.
          type: boolean
        includeIntermediateClientRequestControl:
          description: Indicates whether to include information about any intermediate
            client request control that may have been included in the request.
          type: boolean
        obscureAttribute:
          items:
            description: Specifies the names of any attribute types that should have
              their values obscured in the audit log because they may be considered
              sensitive.
            type: string
          type: array
        excludeAttribute:
          items:
            description: Specifies the names of any attribute types that should be
              excluded from the audit log.
            type: string
          type: array
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      - syslogSeverity
      type: object
    Enumsyslog-json-audit-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-audit
      type: string
    add-syslog-based-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-shared'
    syslog-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-shared'
    syslog-based-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-based-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Syslog Based Error Log Publisher is enabled
            for use.
          type: boolean
        serverHostName:
          description: Specifies the hostname or IP address of the syslogd host to
            log to. It is highly recommend to use localhost.
          type: string
        serverPort:
          description: Specifies the port number of the syslogd host to log to.
          type: integer
        syslogFacility:
          description: Specifies the syslog facility to use for this Syslog Based
            Error Log Publisher
          type: integer
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        asynchronous:
          description: Indicates whether the Syslog Based Error Log Publisher will
            publish records asynchronously.
          type: boolean
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - schemas
      - serverHostName
      - serverPort
      - syslogFacility
      type: object
    Enumsyslog-based-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-error
      type: string
    add-third-party-file-based-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-shared'
    third-party-file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-shared'
    third-party-file-based-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-file-based-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the Third
            Party File Based Access Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Third
            Party File Based Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Third Party File Based
              Access Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Third Party File Based
              Access Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party File Based Access Log Publisher.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party File Based Access Log Publisher. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        asynchronous:
          description: Indicates whether the Third Party File Based Access Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - extensionClass
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumthird-party-file-based-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-access
      type: string
    add-operation-timing-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-shared'
    operation-timing-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-shared'
    operation-timing-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumoperation-timing-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the Operation
            Timing Access Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Operation
            Timing Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Operation Timing Access
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Operation Timing Access
              Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages should include the DN of the
            authenticated user for the client connection on which the operation was
            requested.
          type: boolean
        minIncludedOperationProcessingTime:
          description: "The minimum processing time (i.e., \"etime\") for operations\
            \ that should be logged by this Operation Timing Access Log Publisher"
          type: string
        minIncludedPhaseTimeNanos:
          description: The minimum length of time in nanoseconds that an operation
            phase should take before it is included in a log message.
          type: integer
        asynchronous:
          description: Indicates whether the Operation Timing Access Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumoperation-timing-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:operation-timing-access
      type: string
    add-third-party-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-shared'
    third-party-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-shared'
    third-party-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party HTTP Operation Log Publisher.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party HTTP Operation Log Publisher. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-http-operation
      type: string
    add-admin-alert-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-shared'
    admin-alert-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-shared'
    admin-alert-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumadmin-alert-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Admin Alert Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Admin Alert Access Log Publisher.
          type: string
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        asynchronous:
          description: Indicates whether the Admin Alert Access Log Publisher will
            publish records asynchronously.
          type: boolean
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - schemas
      type: object
    Enumadmin-alert-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:admin-alert-access
      type: string
    add-file-based-trace-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-trace-log-publisher-shared'
    file-based-trace-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-trace-log-publisher-shared'
    file-based-trace-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-trace-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based Trace Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based Trace Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based Trace Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based Trace Log
              Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        asynchronous:
          description: Indicates whether the Writer Based Trace Log Publisher will
            publish records asynchronously.
          type: boolean
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        debugMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-debugMessageTypeProp'
          type: array
        httpMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-httpMessageTypeProp'
          type: array
        accessTokenValidatorMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-accessTokenValidatorMessageTypeProp'
          type: array
        idTokenValidatorMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-idTokenValidatorMessageTypeProp'
          type: array
        scimMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-scimMessageTypeProp'
          type: array
        consentMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-consentMessageTypeProp'
          type: array
        directoryRESTAPIMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-directoryRESTAPIMessageTypeProp'
          type: array
        extensionMessageType:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-extensionMessageTypeProp'
          type: array
        includePathPattern:
          items:
            description: "Specifies a set of HTTP request URL paths to determine whether\
              \ log messages are included for a HTTP request. Log messages are included\
              \ for a HTTP request if the request path does not match any exclude-path-pattern,\
              \ and the request path does match an include-path-pattern (or no include-path-pattern\
              \ is specified)."
            type: string
          type: array
        excludePathPattern:
          items:
            description: "Specifies a set of HTTP request URL paths to determine whether\
              \ log messages are excluded for a HTTP request. Log messages are included\
              \ for a HTTP request if the request path does not match any exclude-path-pattern,\
              \ and the request path does match an include-path-pattern (or no include-path-pattern\
              \ is specified)."
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-trace-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-trace
      type: string
    add-jdbc-based-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-shared'
    jdbc-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-shared'
    jdbc-based-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjdbc-based-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        server:
          description: The JDBC-based Database Server to use for a connection.
          type: string
        logFieldMapping:
          description: The log field mapping associates loggable fields to database
            column names. The table name is not part of this mapping.
          type: string
        logTableName:
          description: The table name to log entries to the database server.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - logFieldMapping
      - logTableName
      - schemas
      - server
      type: object
    Enumjdbc-based-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-error
      type: string
    add-jdbc-based-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-shared'
    jdbc-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-shared'
    jdbc-based-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjdbc-based-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        server:
          description: The JDBC-based Database Server to use for a connection.
          type: string
        logFieldMapping:
          description: The log field mapping associates loggable fields to database
            column names. The table name is not part of this mapping.
          type: string
        logTableName:
          description: The table name to log entries to the database server.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - logFieldMapping
      - logTableName
      - schemas
      - server
      type: object
    Enumjdbc-based-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:jdbc-based-access
      type: string
    add-common-log-file-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-shared'
    common-log-file-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-shared'
    common-log-file-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcommon-log-file-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the Common
            Log File HTTP Operation Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Common
            Log File HTTP Operation Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Common Log File HTTP Operation
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Common Log File HTTP
              Operation Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        asynchronous:
          description: Indicates whether the Common Log File HTTP Operation Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumcommon-log-file-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:common-log-file-http-operation
      type: string
    console-json-error-log-publisher-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsole-json-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Console JSON Error Log Publisher is enabled
            for use.
          type: boolean
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use the generified version of the log\
            \ message string (which may use placeholders like %s for a string or %d\
            \ for an integer), rather than the version of the message with those placeholders\
            \ replaced with specific values that would normally be written to the\
            \ log."
          type: boolean
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      type: object
    Enumconsole-json-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-error
      type: string
    add-syslog-text-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-shared'
    syslog-text-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-shared'
    syslog-text-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-text-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog Text Error Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog Text Error Log Publisher.
          type: string
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use the generified version of the log\
            \ message string (which may use placeholders like %s for a string or %d\
            \ for an integer), rather than the version of the message with those placeholders\
            \ replaced with specific values that would normally be written to the\
            \ log."
          type: boolean
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      type: object
    Enumsyslog-text-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-error
      type: string
    add-syslog-based-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-shared'
    syslog-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-shared'
    syslog-based-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-based-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Syslog Based Access Log Publisher is
            enabled for use.
          type: boolean
        serverHostName:
          description: Specifies the hostname or IP address of the syslogd host to
            log to. It is highly recommend to use localhost.
          type: string
        serverPort:
          description: Specifies the port number of the syslogd host to log to.
          type: integer
        syslogFacility:
          description: Specifies the syslog facility to use for this Syslog Based
            Access Log Publisher
          type: integer
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        asynchronous:
          description: Indicates whether the Writer Based Access Log Publisher will
            publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - schemas
      - serverHostName
      - serverPort
      - syslogFacility
      type: object
    Enumsyslog-based-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-based-access
      type: string
    add-file-based-json-audit-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-shared'
    file-based-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-shared'
    file-based-json-audit-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-json-audit-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based JSON Audit Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based JSON Audit Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based JSON Audit
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based JSON Audit
              Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        asynchronous:
          description: Indicates whether the File Based JSON Audit Log Publisher will
            publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        useReversibleForm:
          description: Indicates whether the audit log should be written in reversible
            form so that it is possible to revert the changes if desired.
          type: boolean
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          description: Indicates whether to include information about any operation
            purpose request control that may have been included in the request.
          type: boolean
        includeIntermediateClientRequestControl:
          description: Indicates whether to include information about any intermediate
            client request control that may have been included in the request.
          type: boolean
        obscureAttribute:
          items:
            description: Specifies the names of any attribute types that should have
              their values obscured in the audit log because they may be considered
              sensitive.
            type: string
          type: array
        excludeAttribute:
          items:
            description: Specifies the names of any attribute types that should be
              excluded from the audit log.
            type: string
          type: array
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-json-audit-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-audit
      type: string
    add-file-based-debug-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-debug-log-publisher-shared'
    file-based-debug-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-debug-log-publisher-shared'
    file-based-debug-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-debug-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based Debug Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based Debug Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based Debug Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based Debug Log
              Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        asynchronous:
          description: Indicates whether the File Based Debug Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        defaultDebugLevel:
          $ref: '#/components/schemas/Enumlog-publisher-defaultDebugLevelProp'
        defaultDebugCategory:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultDebugCategoryProp'
          type: array
        defaultOmitMethodEntryArguments:
          description: Indicates whether to include method arguments in debug messages
            logged by default.
          type: boolean
        defaultOmitMethodReturnValue:
          description: Indicates whether to include the return value in debug messages
            logged by default.
          type: boolean
        defaultIncludeThrowableCause:
          description: Indicates whether to include the cause of exceptions in exception
            thrown and caught messages logged by default.
          type: boolean
        defaultThrowableStackFrames:
          description: Indicates the number of stack frames to include in the stack
            trace for method entry and exception thrown messages.
          type: integer
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - defaultDebugLevel
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-debug-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-debug
      type: string
    add-file-based-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-error-log-publisher-shared'
    file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-error-log-publisher-shared'
    file-based-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based Error Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based Error Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based Error Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based Error Log
              Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use the generified version of the log\
            \ message string (which may use placeholders like %s for a string or %d\
            \ for an integer), rather than the version of the message with those placeholders\
            \ replaced with specific values that would normally be written to the\
            \ log."
          type: boolean
        asynchronous:
          description: Indicates whether the File Based Error Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-error
      type: string
    add-third-party-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/third-party-error-log-publisher-shared'
    third-party-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/third-party-error-log-publisher-shared'
    third-party-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Error Log Publisher.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Error Log Publisher. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-error
      type: string
    add-syslog-text-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-shared'
    syslog-text-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-shared'
    syslog-text-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-text-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog Text Access Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog Text Access Log Publisher.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        asynchronous:
          description: Indicates whether the Writer Based Access Log Publisher will
            publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      - syslogSeverity
      type: object
    Enumsyslog-text-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-text-access
      type: string
    add-detailed-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-shared'
    detailed-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-shared'
    detailed-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdetailed-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the Detailed
            HTTP Operation Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Detailed
            HTTP Operation Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Detailed HTTP Operation
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Detailed HTTP Operation
              Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        logRequests:
          description: Indicates whether to record a log message with information
            about requests received from the client.
          type: boolean
        logResults:
          description: Indicates whether to record a log message with information
            about the result of processing a requested HTTP operation.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether result log messages should include all of
            the elements of request log messages. This may be used to record a single
            message per operation with details about both the request and response.
          type: boolean
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          items:
            description: "Specifies the case-insensitive names of request headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-headers\
              \ property has a value of true."
            type: string
          type: array
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          items:
            description: "Specifies the case-insensitive names of response headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-response-headers\
              \ property has a value of true."
            type: string
          type: array
        logRequestAuthorizationType:
          description: "Indicates whether to log the type of credentials given if\
            \ an \"Authorization\" header was included in the request. Logging the\
            \ authorization type may be useful, and is much more secure than logging\
            \ the entire value of the \"Authorization\" header."
          type: boolean
        logRequestCookieNames:
          description: Indicates whether to log the names of any cookies included
            in an HTTP request. Logging cookie names may be useful and is much more
            secure than logging the entire content of the cookies (which may include
            sensitive information).
          type: boolean
        logResponseCookieNames:
          description: Indicates whether to log the names of any cookies set in an
            HTTP response. Logging cookie names may be useful and is much more secure
            than logging the entire content of the cookies (which may include sensitive
            information).
          type: boolean
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        logRequestProtocol:
          description: Indicates whether request log messages should include information
            about the HTTP version specified in the request.
          type: boolean
        suppressedRequestParameterName:
          items:
            description: "Specifies the case-insensitive names of request parameters\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-parameters\
              \ property has a value of parameter-names or parameter-names-and-values."
            type: string
          type: array
        logRedirectURI:
          description: "Indicates whether the redirect URI (i.e., the value of the\
            \ \"Location\" header from responses) should be included in response log\
            \ messages."
          type: boolean
        asynchronous:
          description: Indicates whether the Detailed HTTP Operation Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        maxStringLength:
          description: "Specifies the maximum length of any individual string that\
            \ should be logged. If a log message includes a string longer than this\
            \ number of characters, it will be truncated. A value of zero indicates\
            \ that no truncation will be used."
          type: integer
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumdetailed-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:detailed-http-operation
      type: string
    add-json-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/json-access-log-publisher-shared'
    json-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/json-access-log-publisher-shared'
    json-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the JSON
            Access Log Publisher. The path to the file can be specified either as
            relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this JSON
            Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the JSON Access Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the JSON Access Log Publisher
              .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        asynchronous:
          description: Indicates whether the JSON Access Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumjson-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:json-access
      type: string
    add-debug-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/debug-access-log-publisher-shared'
    debug-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/debug-access-log-publisher-shared'
    debug-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdebug-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logFile:
          description: The file name to use for the log files generated by the Debug
            Access Log Publisher. The path to the file can be specified either as
            relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Debug
            Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Debug Access Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Debug Access Log Publisher
              .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        obscureSensitiveContent:
          description: "Indicates whether the resulting log file should attempt to\
            \ obscure content that may be considered sensitive. This primarily includes\
            \ the credentials for bind requests, the values of password modify extended\
            \ requests and responses, and the values of any attributes specified in\
            \ the obscure-attribute property. Note that the use of this option does\
            \ not guarantee no sensitive information will be exposed, so the log output\
            \ should still be carefully guarded."
          type: boolean
        obscureAttribute:
          items:
            description: Specifies the names of any attribute types that should have
              their values obscured if the obscure-sensitive-content property has
              a value of true.
            type: string
          type: array
        debugACIEnabled:
          description: Indicates whether to include debugging information about ACIs
            being used by the operations being logged.
          type: boolean
        asynchronous:
          description: Indicates whether the Debug Access Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumdebug-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:debug-access
      type: string
    add-syslog-json-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-shared'
    syslog-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-shared'
    syslog-json-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-json-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog JSON HTTP Operation Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog JSON HTTP Operation Log Publisher.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logRequests:
          description: Indicates whether to record a log message with information
            about requests received from the client.
          type: boolean
        logResults:
          description: Indicates whether to record a log message with information
            about the result of processing a requested HTTP operation.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether result log messages should include all of
            the elements of request log messages. This may be used to record a single
            message per operation with details about both the request and response.
          type: boolean
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          items:
            description: "Specifies the case-insensitive names of request headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-headers\
              \ property has a value of true."
            type: string
          type: array
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          items:
            description: "Specifies the case-insensitive names of response headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-response-headers\
              \ property has a value of true."
            type: string
          type: array
        logRequestAuthorizationType:
          description: "Indicates whether to log the type of credentials given if\
            \ an \"Authorization\" header was included in the request. Logging the\
            \ authorization type may be useful, and is much more secure than logging\
            \ the entire value of the \"Authorization\" header."
          type: boolean
        logRequestCookieNames:
          description: Indicates whether to log the names of any cookies included
            in an HTTP request. Logging cookie names may be useful and is much more
            secure than logging the entire content of the cookies (which may include
            sensitive information).
          type: boolean
        logResponseCookieNames:
          description: Indicates whether to log the names of any cookies set in an
            HTTP response. Logging cookie names may be useful and is much more secure
            than logging the entire content of the cookies (which may include sensitive
            information).
          type: boolean
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          items:
            description: "Specifies the case-insensitive names of request parameters\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-parameters\
              \ property has a value of parameter-names or parameter-names-and-values."
            type: string
          type: array
        logRequestProtocol:
          description: Indicates whether request log messages should include information
            about the HTTP version specified in the request.
          type: boolean
        logRedirectURI:
          description: "Indicates whether the redirect URI (i.e., the value of the\
            \ \"Location\" header from responses) should be included in response log\
            \ messages."
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      - syslogSeverity
      type: object
    Enumsyslog-json-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-http-operation
      type: string
    add-third-party-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/third-party-access-log-publisher-shared'
    third-party-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/third-party-access-log-publisher-shared'
    third-party-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Access Log Publisher.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Access Log Publisher. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-access
      type: string
    add-file-based-audit-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-audit-log-publisher-shared'
    file-based-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-audit-log-publisher-shared'
    file-based-audit-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-audit-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        logFile:
          description: The file name to use for the log files generated by the File
            Based Audit Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based Audit Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based Audit Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based Audit Log
              Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        useReversibleForm:
          description: Indicates whether the audit log should be written in reversible
            form so that it is possible to revert the changes if desired.
          type: boolean
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-softDeleteEntryAuditBehaviorProp'
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeOperationPurposeRequestControl:
          description: Indicates whether to include information about any operation
            purpose request control that may have been included in the request.
          type: boolean
        includeIntermediateClientRequestControl:
          description: Indicates whether to include information about any intermediate
            client request control that may have been included in the request.
          type: boolean
        obscureAttribute:
          items:
            description: Specifies the names of any attribute types that should have
              their values obscured in the audit log because they may be considered
              sensitive.
            type: string
          type: array
        excludeAttribute:
          items:
            description: Specifies the names of any attribute types that should be
              excluded from the audit log.
            type: string
          type: array
        asynchronous:
          description: Indicates whether the File Based Audit Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-audit-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-audit
      type: string
    add-json-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/json-error-log-publisher-shared'
    json-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/json-error-log-publisher-shared'
    json-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the JSON
            Error Log Publisher. The path to the file can be specified either as relative
            to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this JSON
            Error Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the JSON Error Log Publisher
              .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the JSON Error Log Publisher
              .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        asynchronous:
          description: Indicates whether the JSON Error Log Publisher will publish
            records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use the generified version of the log\
            \ message string (which may use placeholders like %s for a string or %d\
            \ for an integer), rather than the version of the message with those placeholders\
            \ replaced with specific values that would normally be written to the\
            \ log."
          type: boolean
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumjson-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:json-error
      type: string
    add-groovy-scripted-file-based-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-shared'
    groovy-scripted-file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-shared'
    groovy-scripted-file-based-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-file-based-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted File Based Access Log Publisher.
          type: string
        logFile:
          description: The file name to use for the log files generated by the Scripted
            File Based Access Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Scripted
            File Based Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Scripted File Based Access
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Scripted File Based Access
              Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted File Based Access Log Publisher. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        asynchronous:
          description: Indicates whether the Scripted File Based Access Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-file-based-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-access
      type: string
    add-groovy-scripted-file-based-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-shared'
    groovy-scripted-file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-shared'
    groovy-scripted-file-based-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-file-based-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted File Based Error Log Publisher.
          type: string
        logFile:
          description: The file name to use for the log files generated by the Scripted
            File Based Error Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Scripted
            File Based Error Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Scripted File Based Error
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Scripted File Based Error
              Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted File Based Error Log Publisher. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        asynchronous:
          description: Indicates whether the Scripted File Based Error Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-file-based-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-file-based-error
      type: string
    add-syslog-json-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-shared'
    syslog-json-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-shared'
    syslog-json-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-json-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog JSON Access Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog JSON Access Log Publisher.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      - syslogSeverity
      type: object
    Enumsyslog-json-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-access
      type: string
    add-groovy-scripted-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-shared'
    groovy-scripted-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-shared'
    groovy-scripted-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Access Log Publisher.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Access Log Publisher. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-access
      type: string
    add-third-party-file-based-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-shared'
    third-party-file-based-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-shared'
    third-party-file-based-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-file-based-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the Third
            Party File Based Error Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this Third
            Party File Based Error Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the Third Party File Based
              Error Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the Third Party File Based
              Error Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party File Based Error Log Publisher.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party File Based Error Log Publisher. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        asynchronous:
          description: Indicates whether the Third Party File Based Error Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - extensionClass
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumthird-party-file-based-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:third-party-file-based-error
      type: string
    add-console-json-audit-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/console-json-audit-log-publisher-shared'
    console-json-audit-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/console-json-audit-log-publisher-shared'
    console-json-audit-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsole-json-audit-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Console JSON Audit Log Publisher is enabled
            for use.
          type: boolean
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        useReversibleForm:
          description: Indicates whether the audit log should be written in reversible
            form so that it is possible to revert the changes if desired.
          type: boolean
        softDeleteEntryAuditBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-softDeleteEntryAuditBehaviorProp'
        includeOperationPurposeRequestControl:
          description: Indicates whether to include information about any operation
            purpose request control that may have been included in the request.
          type: boolean
        includeIntermediateClientRequestControl:
          description: Indicates whether to include information about any intermediate
            client request control that may have been included in the request.
          type: boolean
        obscureAttribute:
          items:
            description: Specifies the names of any attribute types that should have
              their values obscured in the audit log because they may be considered
              sensitive.
            type: string
          type: array
        excludeAttribute:
          items:
            description: Specifies the names of any attribute types that should be
              excluded from the audit log.
            type: string
          type: array
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      type: object
    Enumconsole-json-audit-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-audit
      type: string
    add-console-json-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-shared'
    console-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-shared'
    console-json-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsole-json-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Console JSON HTTP Operation Log Publisher
            is enabled for use.
          type: boolean
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        logRequests:
          description: Indicates whether to record a log message with information
            about requests received from the client.
          type: boolean
        logResults:
          description: Indicates whether to record a log message with information
            about the result of processing a requested HTTP operation.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether result log messages should include all of
            the elements of request log messages. This may be used to record a single
            message per operation with details about both the request and response.
          type: boolean
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          items:
            description: "Specifies the case-insensitive names of request headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-headers\
              \ property has a value of true."
            type: string
          type: array
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          items:
            description: "Specifies the case-insensitive names of response headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-response-headers\
              \ property has a value of true."
            type: string
          type: array
        logRequestAuthorizationType:
          description: "Indicates whether to log the type of credentials given if\
            \ an \"Authorization\" header was included in the request. Logging the\
            \ authorization type may be useful, and is much more secure than logging\
            \ the entire value of the \"Authorization\" header."
          type: boolean
        logRequestCookieNames:
          description: Indicates whether to log the names of any cookies included
            in an HTTP request. Logging cookie names may be useful and is much more
            secure than logging the entire content of the cookies (which may include
            sensitive information).
          type: boolean
        logResponseCookieNames:
          description: Indicates whether to log the names of any cookies set in an
            HTTP response. Logging cookie names may be useful and is much more secure
            than logging the entire content of the cookies (which may include sensitive
            information).
          type: boolean
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          items:
            description: "Specifies the case-insensitive names of request parameters\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-parameters\
              \ property has a value of parameter-names or parameter-names-and-values."
            type: string
          type: array
        logRequestProtocol:
          description: Indicates whether request log messages should include information
            about the HTTP version specified in the request.
          type: boolean
        logRedirectURI:
          description: "Indicates whether the redirect URI (i.e., the value of the\
            \ \"Location\" header from responses) should be included in response log\
            \ messages."
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      type: object
    Enumconsole-json-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-http-operation
      type: string
    console-json-access-log-publisher-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsole-json-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Console JSON Access Log Publisher is
            enabled for use.
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        outputLocation:
          $ref: '#/components/schemas/Enumlog-publisher-outputLocationProp'
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      type: object
    Enumconsole-json-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:console-json-access
      type: string
    add-file-based-access-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-access-log-publisher-shared'
    file-based-access-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-access-log-publisher-shared'
    file-based-access-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-access-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based Access Log Publisher. The path to the file can be specified either
            as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based Access Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based Access Log
              Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based Access Log
              Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        timestampPrecision:
          $ref: '#/components/schemas/Enumlog-publisher-timestampPrecisionProp'
        logConnects:
          description: Indicates whether to log information about connections established
            to the server.
          type: boolean
        logDisconnects:
          description: Indicates whether to log information about connections that
            have been closed by the client or terminated by the server.
          type: boolean
        logRequests:
          description: Indicates whether to log information about requests received
            from clients.
          type: boolean
        logAssuranceCompleted:
          description: Indicates whether to log information about the result of replication
            assurance processing.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequesterDN:
          description: Indicates whether log messages for operation requests should
            include the DN of the authenticated user for the client connection on
            which the operation was requested.
          type: boolean
        includeRequesterIPAddress:
          description: Indicates whether log messages for operation requests should
            include the IP address of the client that requested the operation.
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether log messages for operation results should
            include information about both the request and the result.
          type: boolean
        includeRequestDetailsInSearchEntryMessages:
          description: Indicates whether log messages for search result entries should
            include information about the associated search request.
          type: boolean
        includeRequestDetailsInSearchReferenceMessages:
          description: Indicates whether log messages for search result references
            should include information about the associated search request.
          type: boolean
        includeRequestDetailsInIntermediateResponseMessages:
          description: Indicates whether log messages for intermediate responses should
            include information about the associated operation request.
          type: boolean
        includeResultCodeNames:
          description: Indicates whether result log messages should include human-readable
            names for result codes in addition to their numeric values.
          type: boolean
        includeExtendedSearchRequestDetails:
          description: "Indicates whether log messages for search requests should\
            \ include extended information from the request, including the requested\
            \ size limit, time limit, alias dereferencing behavior, and types only\
            \ behavior."
          type: boolean
        includeAddAttributeNames:
          description: Indicates whether log messages for add requests should include
            a list of the names of the attributes included in the entry to add.
          type: boolean
        includeModifyAttributeNames:
          description: Indicates whether log messages for modify requests should include
            a list of the names of the attributes to be modified.
          type: boolean
        includeSearchEntryAttributeNames:
          description: Indicates whether log messages for search result entries should
            include a list of the names of the attributes included in the entry that
            was returned.
          type: boolean
        includeRequestControls:
          description: Indicates whether log messages for operation requests should
            include a list of the OIDs of any controls included in the request.
          type: boolean
        includeResponseControls:
          description: Indicates whether log messages for operation results should
            include a list of the OIDs of any controls included in the result.
          type: boolean
        includeReplicationChangeID:
          description: Indicates whether to log information about the replication
            change ID.
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use generified version of certain message\
            \ strings, including diagnostic messages, additional information messages,\
            \ authentication failure reasons, and disconnect messages. Generified\
            \ versions of those strings may use placeholders (like %s for a string\
            \ or %d for an integer) rather than the version of the string with those\
            \ placeholders replaced with specific values."
          type: boolean
        asynchronous:
          description: Indicates whether the Writer Based Access Log Publisher will
            publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        maxStringLength:
          description: Specifies the maximum number of characters that may be included
            in any string in a log message before that string is truncated and replaced
            with a placeholder indicating the number of characters that were omitted.
            This can help prevent extremely long log messages from being written.
          type: integer
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        logFieldBehavior:
          description: The behavior to use for determining which fields to log and
            whether to transform the values of those fields in any way.
          type: string
        logSecurityNegotiation:
          description: "Indicates whether to log information about the result of any\
            \ security negotiation (e.g., SSL handshake) processing that has been\
            \ performed."
          type: boolean
        logClientCertificates:
          description: Indicates whether to log information about any client certificates
            presented to the server.
          type: boolean
        logResults:
          description: Indicates whether to log information about the results of client
            requests.
          type: boolean
        logSearchEntries:
          description: Indicates whether to log information about search result entries
            sent to the client.
          type: boolean
        logSearchReferences:
          description: Indicates whether to log information about search result references
            sent to the client.
          type: boolean
        logIntermediateResponses:
          description: Indicates whether to log information about intermediate responses
            sent to the client.
          type: boolean
        suppressInternalOperations:
          description: "Indicates whether internal operations (for example, operations\
            \ that are initiated by plugins) should be logged along with the operations\
            \ that are requested by users."
          type: boolean
        suppressReplicationOperations:
          description: Indicates whether access messages that are generated by replication
            operations should be suppressed.
          type: boolean
        correlateRequestsAndResults:
          description: "Indicates whether to automatically log result messages for\
            \ any operation in which the corresponding request was logged. In such\
            \ cases, the result, entry, and reference criteria will be ignored, although\
            \ the log-responses, log-search-entries, and log-search-references properties\
            \ will be honored."
          type: boolean
        connectionCriteria:
          description: "Specifies a set of connection criteria that must match the\
            \ associated client connection in order for a connect, disconnect, request,\
            \ or result message to be logged."
          type: string
        requestCriteria:
          description: Specifies a set of request criteria that must match the associated
            operation request in order for a request or result to be logged by this
            Access Log Publisher.
          type: string
        resultCriteria:
          description: Specifies a set of result criteria that must match the associated
            operation result in order for that result to be logged by this Access
            Log Publisher.
          type: string
        searchEntryCriteria:
          description: Specifies a set of search entry criteria that must match the
            associated search result entry in order for that it to be logged by this
            Access Log Publisher.
          type: string
        searchReferenceCriteria:
          description: Specifies a set of search reference criteria that must match
            the associated search result reference in order for that it to be logged
            by this Access Log Publisher.
          type: string
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-access-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-access
      type: string
    add-groovy-scripted-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-shared'
    groovy-scripted-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-shared'
    groovy-scripted-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Error Log Publisher.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Error Log Publisher. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-error
      type: string
    add-file-based-json-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-shared'
    file-based-json-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-shared'
    file-based-json-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-json-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: The file name to use for the log files generated by the File
            Based JSON HTTP Operation Log Publisher. The path to the file can be specified
            either as relative to the server root or as an absolute path.
          type: string
        logFilePermissions:
          description: The UNIX permissions of the log files created by this File
            Based JSON HTTP Operation Log Publisher.
          type: string
        rotationPolicy:
          items:
            description: The rotation policy to use for the File Based JSON HTTP Operation
              Log Publisher .
            type: string
          type: array
        rotationListener:
          items:
            description: A listener that should be notified whenever a log file is
              rotated out of service.
            type: string
          type: array
        retentionPolicy:
          items:
            description: The retention policy to use for the File Based JSON HTTP
              Operation Log Publisher .
            type: string
          type: array
        compressionMechanism:
          $ref: '#/components/schemas/Enumlog-publisher-compressionMechanismProp'
        signLog:
          description: Indicates whether the log should be cryptographically signed
            so that the log content cannot be altered in an undetectable manner.
          type: boolean
        encryptLog:
          description: Indicates whether log files should be encrypted so that their
            content is not available to unauthorized users.
          type: boolean
        encryptionSettingsDefinitionID:
          description: "Specifies the ID of the encryption settings definition that\
            \ should be used to encrypt the data. If this is not provided, the server's\
            \ preferred encryption settings definition will be used. The \"encryption-settings\
            \ list\" command can be used to obtain a list of the encryption settings\
            \ definitions available in the server."
          type: string
        append:
          description: Specifies whether to append to existing log files.
          type: boolean
        asynchronous:
          description: Indicates whether the File Based JSON HTTP Operation Log Publisher
            will publish records asynchronously.
          type: boolean
        autoFlush:
          description: Specifies whether to flush the writer after every log record.
          type: boolean
        bufferSize:
          description: Specifies the log file buffer size.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        timeInterval:
          description: Specifies the interval at which to check whether the log files
            need to be rotated.
          type: string
        logRequests:
          description: Indicates whether to record a log message with information
            about requests received from the client.
          type: boolean
        logResults:
          description: Indicates whether to record a log message with information
            about the result of processing a requested HTTP operation.
          type: boolean
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        includeRequestDetailsInResultMessages:
          description: Indicates whether result log messages should include all of
            the elements of request log messages. This may be used to record a single
            message per operation with details about both the request and response.
          type: boolean
        logRequestHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestHeadersProp'
        suppressedRequestHeaderName:
          items:
            description: "Specifies the case-insensitive names of request headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-headers\
              \ property has a value of true."
            type: string
          type: array
        logResponseHeaders:
          $ref: '#/components/schemas/Enumlog-publisher-logResponseHeadersProp'
        suppressedResponseHeaderName:
          items:
            description: "Specifies the case-insensitive names of response headers\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-response-headers\
              \ property has a value of true."
            type: string
          type: array
        logRequestAuthorizationType:
          description: "Indicates whether to log the type of credentials given if\
            \ an \"Authorization\" header was included in the request. Logging the\
            \ authorization type may be useful, and is much more secure than logging\
            \ the entire value of the \"Authorization\" header."
          type: boolean
        logRequestCookieNames:
          description: Indicates whether to log the names of any cookies included
            in an HTTP request. Logging cookie names may be useful and is much more
            secure than logging the entire content of the cookies (which may include
            sensitive information).
          type: boolean
        logResponseCookieNames:
          description: Indicates whether to log the names of any cookies set in an
            HTTP response. Logging cookie names may be useful and is much more secure
            than logging the entire content of the cookies (which may include sensitive
            information).
          type: boolean
        logRequestParameters:
          $ref: '#/components/schemas/Enumlog-publisher-logRequestParametersProp'
        suppressedRequestParameterName:
          items:
            description: "Specifies the case-insensitive names of request parameters\
              \ that should be omitted from log messages (e.g., for the purpose of\
              \ brevity or security). This will only be used if the log-request-parameters\
              \ property has a value of parameter-names or parameter-names-and-values."
            type: string
          type: array
        logRequestProtocol:
          description: Indicates whether request log messages should include information
            about the HTTP version specified in the request.
          type: boolean
        logRedirectURI:
          description: "Indicates whether the redirect URI (i.e., the value of the\
            \ \"Location\" header from responses) should be included in response log\
            \ messages."
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should use a multi-line\
            \ representation (with each object field and array value on its own line)\
            \ that may be easier for administrators to read, but each message will\
            \ be larger (because of additional spaces and end-of-line markers), and\
            \ it may be more difficult to consume and parse through some text-oriented\
            \ tools."
          type: boolean
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - asynchronous
      - enabled
      - logFile
      - logFilePermissions
      - retentionPolicy
      - rotationPolicy
      - schemas
      type: object
    Enumfile-based-json-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:file-based-json-http-operation
      type: string
    add-syslog-json-error-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-shared'
    syslog-json-error-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-shared'
    syslog-json-error-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-json-error-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        defaultSeverity:
          items:
            $ref: '#/components/schemas/Enumlog-publisher-defaultSeverityProp'
          type: array
        syslogExternalServer:
          items:
            description: The syslog server to which messages should be sent.
            type: string
          type: array
        syslogFacility:
          $ref: '#/components/schemas/Enumlog-publisher-syslogFacilityProp'
        syslogSeverity:
          $ref: '#/components/schemas/Enumlog-publisher-syslogSeverityProp'
        syslogMessageHostName:
          description: The local host name that will be included in syslog messages
            that are logged by this Syslog JSON Error Log Publisher.
          type: string
        syslogMessageApplicationName:
          description: The application name that will be included in syslog messages
            that are logged by this Syslog JSON Error Log Publisher.
          type: string
        queueSize:
          description: The maximum number of log records that can be stored in the
            asynchronous queue.
          type: integer
        includeProductName:
          description: Indicates whether log messages should include the product name
            for the Directory Server.
          type: boolean
        includeInstanceName:
          description: Indicates whether log messages should include the instance
            name for the Directory Server.
          type: boolean
        includeStartupID:
          description: "Indicates whether log messages should include the startup\
            \ ID for the Directory Server, which is a value assigned to the server\
            \ instance at startup and may be used to identify when the server has\
            \ been restarted."
          type: boolean
        includeThreadID:
          description: "Indicates whether log messages should include the thread ID\
            \ for the Directory Server in each log message. This ID can be used to\
            \ correlate log messages from the same thread within a single log as well\
            \ as generated by the same thread across different types of log files.\
            \ More information about the thread with a specific ID can be obtained\
            \ using the cn=JVM Stack Trace,cn=monitor entry."
          type: boolean
        writeMultiLineMessages:
          description: "Indicates whether the JSON objects should be formatted to\
            \ span multiple lines with a single element on each line. The multi-line\
            \ format is potentially more user friendly (if administrators may need\
            \ to look at the log files), but each message will be larger because of\
            \ the additional spaces and end-of-line markers."
          type: boolean
        generifyMessageStringsWhenPossible:
          description: "Indicates whether to use the generified version of the log\
            \ message string (which may use placeholders like %s for a string or %d\
            \ for an integer), rather than the version of the message with those placeholders\
            \ replaced with specific values that would normally be written to the\
            \ log."
          type: boolean
        overrideSeverity:
          items:
            description: Specifies the override severity levels for the logger based
              on the category of the messages.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - syslogExternalServer
      - syslogFacility
      type: object
    Enumsyslog-json-error-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:syslog-json-error
      type: string
    add-groovy-scripted-http-operation-log-publisher-request:
      allOf:
      - $ref: '#/components/schemas/add_syslog_json_audit_log_publisher_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-shared'
    groovy-scripted-http-operation-log-publisher-response:
      allOf:
      - $ref: '#/components/schemas/syslog_json_audit_log_publisher_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-shared'
    groovy-scripted-http-operation-log-publisher-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-http-operation-log-publisherSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted HTTP Operation Log Publisher.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted HTTP Operation Log Publisher. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Log Publisher
          type: string
        enabled:
          description: Indicates whether the Log Publisher is enabled for use.
          type: boolean
        loggingErrorBehavior:
          $ref: '#/components/schemas/Enumlog-publisher-loggingErrorBehaviorProp'
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-http-operation-log-publisherSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-publisher:groovy-scripted-http-operation
      type: string
    Enumlog-publisher-debugMessageTypeProp:
      description: Specifies the debug message types which can be logged. Note that
        enabling these may result in sensitive information being logged.
      enum:
      - http-full-request-and-response
      - ldap-external-server-request
      - server-sdk-extension
      - store-adapter-mapping
      - store-adapter-processing
      - access-token-validator-request-and-response
      - access-token-validator-processing
      - id-token-validator-request-and-response
      - id-token-validator-processing
      - consent-service-request-and-response
      - gateway-request-and-response
      - policy-request-and-response
      type: string
    Enumlog-publisher-loggingErrorBehaviorProp:
      description: Specifies the behavior that the server should exhibit if an error
        occurs during logging processing.
      enum:
      - standard-error
      - lockdown-mode
      type: string
    Enumlog-publisher-defaultDebugLevelProp:
      description: The lowest severity level of debug messages to log when none of
        the defined targets match the message.
      enum:
      - disabled
      - error
      - warning
      - info
      - verbose
      - all
      type: string
    Enumlog-publisher-logRequestParametersProp:
      description: "Indicates what (if any) information about request parameters should\
        \ be included in request log messages. Note that this will only be used for\
        \ requests with a method other than GET, since GET request parameters will\
        \ be included in the request URL."
      enum:
      - none
      - parameter-names
      - parameter-names-and-values
      type: string
    Enumlog-publisher-extensionMessageTypeProp:
      description: Specifies the Server SDK extension message types that can be logged.
      enum:
      - error
      - warning
      - notice
      - info
      type: string
    Enumlog-publisher-httpMessageTypeProp:
      description: Specifies the HTTP message types which can be logged.
      enum:
      - request
      - response
      type: string
    Enumlog-publisher-directoryRESTAPIMessageTypeProp:
      description: Specifies the Directory REST API message types which can be logged.
      enum:
      - error
      type: string
    Enumlog-publisher-defaultSeverityProp:
      description: Specifies the default severity levels for the logger.
      enum:
      - all
      - none
      - fatal-error
      - info
      - mild-error
      - mild-warning
      - notice
      - severe-error
      - severe-warning
      - debug
      type: string
    Enumlog-publisher-logRequestHeadersProp:
      description: Indicates whether request log messages should include information
        about HTTP headers included in the request.
      enum:
      - none
      - header-names
      - header-names-and-values
      type: string
    Enumlog-publisher-softDeleteEntryAuditBehaviorProp:
      description: Specifies the audit behavior for delete and modify operations on
        soft-deleted entries.
      enum:
      - included
      - excluded
      type: string
    Enumlog-publisher-consentMessageTypeProp:
      description: Specifies the consent message types that can be logged.
      enum:
      - consent-created
      - consent-updated
      - consent-deleted
      - consent-retrieved
      - consent-search
      - definition-created
      - definition-updated
      - definition-deleted
      - definition-retrieved
      - definition-search
      - localization-created
      - localization-updated
      - localization-deleted
      - localization-retrieved
      - localization-search
      - error
      - audit
      type: string
    Enumlog-publisher-timestampPrecisionProp:
      description: Specifies the smallest time unit to be included in timestamps.
      enum:
      - seconds
      - milliseconds
      type: string
    Enumlog-publisher-accessTokenValidatorMessageTypeProp:
      description: Specifies the access token validator message types that can be
        logged.
      enum:
      - subject-lookup
      - external-server-request
      - external-server-response
      - validation
      - error
      type: string
    Enumlog-publisher-idTokenValidatorMessageTypeProp:
      description: Specifies the ID token validator message types that can be logged.
      enum:
      - external-server-request
      - external-server-response
      - validation
      - warning
      - error
      type: string
    Enumlog-publisher-defaultDebugCategoryProp:
      description: The debug message categories to be logged when none of the defined
        targets match the message.
      enum:
      - caught
      - constructor
      - data
      - database-access
      - enter
      - exit
      - message
      - protocol
      - thrown
      type: string
    Enumlog-publisher-syslogFacilityProp:
      description: The syslog facility to use for the messages that are logged by
        this Syslog JSON Audit Log Publisher.
      enum:
      - user-level-messages
      - system-daemons
      - security-and-authorization
      - security-and-authorization-alternative
      - log-audit
      - log-alert
      - local-use-0
      - local-use-1
      - local-use-2
      - local-use-3
      - local-use-4
      - local-use-5
      - local-use-6
      - local-use-7
      - kernel-messages
      - mail-system
      - syslogd-internal-messages
      - line-printer
      - network-news
      - uucp
      - clock-daemon
      - ftp-daemon
      - ntp-daemon
      - clock-daemon-alternative
      type: string
    Enumlog-publisher-logResponseHeadersProp:
      description: Indicates whether response log messages should include information
        about HTTP headers included in the response.
      enum:
      - none
      - header-names
      - header-names-and-values
      type: string
    Enumlog-publisher-outputLocationProp:
      description: Specifies the output stream to which JSON-formatted error log messages
        should be written.
      enum:
      - standard-output
      - standard-error
      type: string
    Enumlog-publisher-scimMessageTypeProp:
      description: Specifies the SCIM message types which can be logged.
      enum:
      - request
      - result
      - internal-request
      - internal-result
      - error
      type: string
    Enumlog-publisher-syslogSeverityProp:
      description: The syslog severity to use for the messages that are logged by
        this Syslog JSON Audit Log Publisher.
      enum:
      - emergency
      - alert
      - critical
      - error
      - warning
      - notice
      - informational
      - debug
      type: string
    Enumlog-publisher-compressionMechanismProp:
      description: Specifies the type of compression (if any) to use for log files
        that are written.
      enum:
      - none
      - gzip
      type: string
    add-replication-assurance-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_replication_assurance_policy_request_allOf'
      - $ref: '#/components/schemas/replication-assurance-policy-shared'
    replication-assurance-policy-response:
      allOf:
      - $ref: '#/components/schemas/replication_assurance_policy_response_allOf'
      - $ref: '#/components/schemas/replication-assurance-policy-shared'
    replication-assurance-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreplication-assurance-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: Description of the Replication Assurance Policy.
          type: string
        enabled:
          description: "Indicates whether this Replication Assurance Policy is enabled\
            \ for use in the server. If a Replication Assurance Policy is disabled,\
            \ then no new operations will be associated with it."
          type: boolean
        evaluationOrderIndex:
          description: "When multiple Replication Assurance Policies are defined,\
            \ this property determines the evaluation order for finding a Replication\
            \ Assurance Policy match against an operation. Policies are evaluated\
            \ based on this index from least to greatest. Values of this property\
            \ must be unique but not necessarily contiguous."
          type: integer
        localLevel:
          $ref: '#/components/schemas/Enumreplication-assurance-policy-localLevelProp'
        remoteLevel:
          $ref: '#/components/schemas/Enumreplication-assurance-policy-remoteLevelProp'
        timeout:
          description: Specifies the maximum length of time to wait for the replication
            assurance requirements to be met before timing out and replying to the
            client.
          type: string
        connectionCriteria:
          description: "Specifies a connection criteria used to indicate which operations\
            \ from clients matching this criteria use this policy. If both a connection\
            \ criteria and a request criteria are specified for a policy, then both\
            \ must match an operation for the policy to be assigned."
          type: string
        requestCriteria:
          description: "Specifies a request criteria used to indicate which operations\
            \ from clients matching this criteria use this policy. If both a connection\
            \ criteria and a request criteria are specified for a policy, then both\
            \ must match an operation for the policy to be assigned."
          type: string
      required:
      - enabled
      - evaluationOrderIndex
      - localLevel
      - remoteLevel
      - timeout
      type: object
    Enumreplication-assurance-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:replication-assurance-policy
      type: string
    Enumreplication-assurance-policy-localLevelProp:
      description: "Specifies the assurance level used to replicate to local servers.\
        \ A local server is defined as one with the same value for the location setting\
        \ in the global configuration.  The local-level must be set to an assurance\
        \ level at least as strict as the remote-level. In other words, if remote-level\
        \ is set to \"received-any-remote-location\" or \"received-all-remote-locations\"\
        , then local-level must be either \"received-any-server\" or \"processed-all-servers\"\
        . If remote-level is \"processed-all-remote-servers\", then local-level must\
        \ be \"processed-all-servers\"."
      enum:
      - none
      - received-any-server
      - processed-all-servers
      type: string
    Enumreplication-assurance-policy-remoteLevelProp:
      description: Specifies the assurance level used to replicate to remote servers.
        A remote server is defined as one with a different value for the location
        setting in the global configuration.
      enum:
      - none
      - received-any-remote-location
      - received-all-remote-locations
      - processed-all-remote-servers
      type: string
    add-file-based-key-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_file_based_key_manager_provider_request_allOf'
      - $ref: '#/components/schemas/file-based-key-manager-provider-shared'
    file-based-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/file_based_key_manager_provider_response_allOf'
      - $ref: '#/components/schemas/file-based-key-manager-provider-shared'
    file-based-key-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-based-key-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        keyStoreFile:
          description: "Specifies the path to the file that contains the private key\
            \ information. This may be an absolute path, or a path that is relative\
            \ to the Directory Server instance root."
          type: string
        keyStoreType:
          description: Specifies the format for the data in the key store file.
          type: string
        keyStorePin:
          description: Specifies the PIN needed to access the File Based Key Manager
            Provider.
          format: password
          type: string
        keyStorePinFile:
          description: Specifies the path to the text file whose only contents should
            be a single line containing the clear-text PIN needed to access the File
            Based Key Manager Provider.
          type: string
        keyStorePinPassphraseProvider:
          description: The passphrase provider to use to obtain the clear-text PIN
            needed to access the File Based Key Manager Provider.
          type: string
        privateKeyPin:
          description: Specifies the clear-text PIN needed to access the File Based
            Key Manager Provider private key. If no private key PIN is specified the
            PIN defaults to the key store PIN.
          format: password
          type: string
        privateKeyPinFile:
          description: Specifies the path to the text file whose only contents should
            be a single line containing the clear-text PIN needed to access the File
            Based Key Manager Provider private key. If no private key PIN is specified
            the PIN defaults to the key store PIN.
          type: string
        privateKeyPinPassphraseProvider:
          description: The passphrase provider to use to obtain the clear-text PIN
            needed to access the File Based Key Manager Provider private key. If no
            private key PIN is specified the PIN defaults to the key store PIN.
          type: string
        description:
          description: A description for this Key Manager Provider
          type: string
        enabled:
          description: Indicates whether the Key Manager Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - keyStoreFile
      - schemas
      type: object
    Enumfile-based-key-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:key-manager-provider:file-based
      type: string
    add-pkcs11-key-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_file_based_key_manager_provider_request_allOf'
      - $ref: '#/components/schemas/pkcs11-key-manager-provider-shared'
    pkcs11-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/file_based_key_manager_provider_response_allOf'
      - $ref: '#/components/schemas/pkcs11-key-manager-provider-shared'
    pkcs11-key-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpkcs11-key-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        pkcs11ProviderClass:
          description: "The fully-qualified name of the Java security provider class\
            \ that implements support for interacting with PKCS #11 tokens."
          type: string
        pkcs11ProviderConfigurationFile:
          description: "The path to the file to use to configure the security provider\
            \ that implements support for interacting with PKCS #11 tokens."
          type: string
        pkcs11KeyStoreType:
          description: "The key store type to use when obtaining an instance of a\
            \ key store for interacting with a PKCS #11 token."
          type: string
        keyStorePin:
          description: Specifies the PIN needed to access the PKCS11 Key Manager Provider.
          format: password
          type: string
        keyStorePinFile:
          description: Specifies the path to the text file whose only contents should
            be a single line containing the clear-text PIN needed to access the PKCS11
            Key Manager Provider.
          type: string
        keyStorePinPassphraseProvider:
          description: The passphrase provider to use to obtain the clear-text PIN
            needed to access the PKCS11 Key Manager Provider.
          type: string
        description:
          description: A description for this Key Manager Provider
          type: string
        enabled:
          description: Indicates whether the Key Manager Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumpkcs11-key-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:key-manager-provider:pkcs11
      type: string
    add-third-party-key-manager-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_file_based_key_manager_provider_request_allOf'
      - $ref: '#/components/schemas/third-party-key-manager-provider-shared'
    third-party-key-manager-provider-response:
      allOf:
      - $ref: '#/components/schemas/file_based_key_manager_provider_response_allOf'
      - $ref: '#/components/schemas/third-party-key-manager-provider-shared'
    third-party-key-manager-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-key-manager-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Key Manager Provider.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Key Manager Provider. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Key Manager Provider
          type: string
        enabled:
          description: Indicates whether the Key Manager Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-key-manager-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:key-manager-provider:third-party
      type: string
    add-opendj-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/opendj-external-server-shared'
    opendj-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/opendj-external-server-shared'
    opendj-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumopendj-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverHostName:
          description: The host name or IP address of the target LDAP server.
          type: string
        serverPort:
          description: The port number on which the server listens for requests.
          type: integer
        location:
          description: Specifies the location for the LDAP External Server.
          type: string
        bindDN:
          description: The DN to use to bind to the target LDAP server if simple authentication
            is required.
          type: string
        password:
          description: The login password for the specified user.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          description: "Specifies the maximum length of time to wait for a connection\
            \ to be established for the purpose of performing a health check. If the\
            \ connection cannot be established within this length of time, the server\
            \ will be classified as unavailable."
          type: string
        maxConnectionAge:
          description: Specifies the maximum length of time that connections to this
            server should be allowed to remain established before being closed and
            replaced with newly-established connections.
          type: string
        minExpiredConnectionDisconnectInterval:
          description: Specifies the minimum length of time that should pass between
            connection closures as a result of the connections being established for
            longer than the maximum connection age. This may help avoid cases in which
            a large number of connections are closed and re-established in a short
            period of time because of the maximum connection age.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
          type: string
        maxResponseSize:
          description: Specifies the maximum response size that should be supported
            for messages received from the LDAP external server.
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL or StartTLS is to be
            used for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        trustManagerProvider:
          description: The trust manager provider to use if SSL or StartTLS is to
            be used for connection-level security.
          type: string
        initialConnections:
          description: The number of connections to initially establish to the LDAP
            external server. A value of zero indicates that the number of connections
            should be dynamically based on the number of available worker threads.
            This will be ignored when using a thread-local connection pool.
          type: integer
        maxConnections:
          description: The maximum number of concurrent connections to maintain for
            the LDAP external server. A value of zero indicates that the number of
            connections should be dynamically based on the number of available worker
            threads. This will be ignored when using a thread-local connection pool.
          type: integer
        defunctConnectionResultCode:
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
          type: array
        abandonOnTimeout:
          description: "Indicates whether to send an abandon request for an operation\
            \ for which a response timeout is encountered. A request which has timed\
            \ out on one server may be retried on another server regardless of whether\
            \ an abandon request is sent, but if the initial attempt is not abandoned\
            \ then a long-running operation may unnecessarily continue to consume\
            \ processing resources on the initial server."
          type: boolean
        description:
          description: A description for this External Server
          type: string
      required:
      - authenticationMethod
      - connectTimeout
      - connectionSecurity
      - maxConnectionAge
      - maxResponseSize
      - schemas
      - serverHostName
      - serverPort
      - verifyCredentialsMethod
      type: object
    Enumopendj-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:opendj
      type: string
    add-smtp-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/smtp-external-server-shared'
    smtp-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/smtp-external-server-shared'
    smtp-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsmtp-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverHostName:
          description: The host name of the smtp server.
          type: string
        serverPort:
          description: The port number where the smtp server listens for requests.
          type: integer
        smtpSecurity:
          $ref: '#/components/schemas/Enumexternal-server-smtpSecurityProp'
        userName:
          description: The name of the login account to use when connecting to the
            smtp server. Both username and password must be supplied if this attribute
            is set.
          type: string
        password:
          description: The login password for the specified user name. Both username
            and password must be supplied if this attribute is set.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        smtpTimeout:
          description: Specifies the maximum length of time that a connection or attempted
            connection to a SMTP server may take.
          type: string
        smtpConnectionProperties:
          items:
            description: Specifies the connection properties for the smtp server.
            type: string
          type: array
        description:
          description: A description for this External Server
          type: string
      required:
      - schemas
      - serverHostName
      type: object
    Enumsmtp-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:smtp
      type: string
    add-nokia-ds-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/nokia-ds-external-server-shared'
    nokia-ds-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/nokia-ds-external-server-shared'
    nokia-ds-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnokia-ds-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          description: "Indicates whether to include the administrative operation\
            \ request control in requests sent to this server which are intended for\
            \ administrative operations (e.g., health checking) rather than requests\
            \ directly from clients."
          type: boolean
        serverHostName:
          description: The host name or IP address of the target LDAP server.
          type: string
        serverPort:
          description: The port number on which the server listens for requests.
          type: integer
        location:
          description: Specifies the location for the LDAP External Server.
          type: string
        bindDN:
          description: The DN to use to bind to the target LDAP server if simple authentication
            is required.
          type: string
        password:
          description: The login password for the specified user.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-authenticationMethodProp'
        healthCheckConnectTimeout:
          description: "Specifies the maximum length of time to wait for a connection\
            \ to be established for the purpose of performing a health check. If the\
            \ connection cannot be established within this length of time, the server\
            \ will be classified as unavailable."
          type: string
        maxConnectionAge:
          description: Specifies the maximum length of time that connections to this
            server should be allowed to remain established before being closed and
            replaced with newly-established connections.
          type: string
        minExpiredConnectionDisconnectInterval:
          description: Specifies the minimum length of time that should pass between
            connection closures as a result of the connections being established for
            longer than the maximum connection age. This may help avoid cases in which
            a large number of connections are closed and re-established in a short
            period of time because of the maximum connection age.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
          type: string
        maxResponseSize:
          description: Specifies the maximum response size that should be supported
            for messages received from the LDAP external server.
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL or StartTLS is to be
            used for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        trustManagerProvider:
          description: The trust manager provider to use if SSL or StartTLS is to
            be used for connection-level security.
          type: string
        initialConnections:
          description: The number of connections to initially establish to the LDAP
            external server. A value of zero indicates that the number of connections
            should be dynamically based on the number of available worker threads.
            This will be ignored when using a thread-local connection pool.
          type: integer
        maxConnections:
          description: The maximum number of concurrent connections to maintain for
            the LDAP external server. A value of zero indicates that the number of
            connections should be dynamically based on the number of available worker
            threads. This will be ignored when using a thread-local connection pool.
          type: integer
        defunctConnectionResultCode:
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
          type: array
        abandonOnTimeout:
          description: "Indicates whether to send an abandon request for an operation\
            \ for which a response timeout is encountered. A request which has timed\
            \ out on one server may be retried on another server regardless of whether\
            \ an abandon request is sent, but if the initial attempt is not abandoned\
            \ then a long-running operation may unnecessarily continue to consume\
            \ processing resources on the initial server."
          type: boolean
        description:
          description: A description for this External Server
          type: string
      required:
      - authenticationMethod
      - connectTimeout
      - connectionSecurity
      - maxConnectionAge
      - maxResponseSize
      - schemas
      - serverHostName
      - serverPort
      - verifyCredentialsMethod
      type: object
    Enumnokia-ds-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:nokia-ds
      type: string
    add-ping-one-http-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/ping-one-http-external-server-shared'
    ping-one-http-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/ping-one-http-external-server-shared'
    ping-one-http-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumping-one-http-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        hostnameVerificationMethod:
          $ref: '#/components/schemas/Enumexternal-server-hostnameVerificationMethodProp'
        trustManagerProvider:
          description: The trust manager provider to use for HTTPS connection-level
            security.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before aborting a request to PingOne.
          type: string
        responseTimeout:
          description: Specifies the maximum length of time to wait for response data
            to be read from an established connection before aborting a request to
            PingOne.
          type: string
        baseURL:
          description: "The base URL of the external server, optionally including\
            \ port number, for example \"https://externalService:9031\"."
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL (HTTPS) is to be used
            for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        sslCertNickname:
          description: The certificate alias within the keystore to use if SSL (HTTPS)
            is to be used for connection-level security. When specifying a value for
            this property you must ensure that the external server trusts this server's
            public certificate by adding this server's public certificate to the external
            server's trust store.
          type: string
        description:
          description: A description for this External Server
          type: string
      required:
      - baseURL
      - schemas
      type: object
    Enumping-one-http-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:ping-one-http
      type: string
    add-active-directory-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/active-directory-external-server-shared'
    active-directory-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/active-directory-external-server-shared'
    active-directory-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumactive-directory-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        bindDN:
          description: The DN to use to bind to the target LDAP server if simple authentication
            is required. The authentication identity can also be specified in User-Principal-Name
            (UPN) format.
          type: string
        serverHostName:
          description: The host name or IP address of the target LDAP server.
          type: string
        serverPort:
          description: The port number on which the server listens for requests.
          type: integer
        location:
          description: Specifies the location for the LDAP External Server.
          type: string
        password:
          description: The login password for the specified user.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          description: "Specifies the maximum length of time to wait for a connection\
            \ to be established for the purpose of performing a health check. If the\
            \ connection cannot be established within this length of time, the server\
            \ will be classified as unavailable."
          type: string
        maxConnectionAge:
          description: Specifies the maximum length of time that connections to this
            server should be allowed to remain established before being closed and
            replaced with newly-established connections.
          type: string
        minExpiredConnectionDisconnectInterval:
          description: Specifies the minimum length of time that should pass between
            connection closures as a result of the connections being established for
            longer than the maximum connection age. This may help avoid cases in which
            a large number of connections are closed and re-established in a short
            period of time because of the maximum connection age.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
          type: string
        maxResponseSize:
          description: Specifies the maximum response size that should be supported
            for messages received from the LDAP external server.
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL or StartTLS is to be
            used for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        trustManagerProvider:
          description: The trust manager provider to use if SSL or StartTLS is to
            be used for connection-level security.
          type: string
        initialConnections:
          description: The number of connections to initially establish to the LDAP
            external server. A value of zero indicates that the number of connections
            should be dynamically based on the number of available worker threads.
            This will be ignored when using a thread-local connection pool.
          type: integer
        maxConnections:
          description: The maximum number of concurrent connections to maintain for
            the LDAP external server. A value of zero indicates that the number of
            connections should be dynamically based on the number of available worker
            threads. This will be ignored when using a thread-local connection pool.
          type: integer
        defunctConnectionResultCode:
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
          type: array
        abandonOnTimeout:
          description: "Indicates whether to send an abandon request for an operation\
            \ for which a response timeout is encountered. A request which has timed\
            \ out on one server may be retried on another server regardless of whether\
            \ an abandon request is sent, but if the initial attempt is not abandoned\
            \ then a long-running operation may unnecessarily continue to consume\
            \ processing resources on the initial server."
          type: boolean
        description:
          description: A description for this External Server
          type: string
      required:
      - authenticationMethod
      - connectTimeout
      - connectionSecurity
      - maxConnectionAge
      - maxResponseSize
      - schemas
      - serverHostName
      - serverPort
      - verifyCredentialsMethod
      type: object
    Enumactive-directory-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:active-directory
      type: string
    add-oracle-unified-directory-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/oracle-unified-directory-external-server-shared'
    oracle-unified-directory-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/oracle-unified-directory-external-server-shared'
    oracle-unified-directory-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumoracle-unified-directory-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverHostName:
          description: The host name or IP address of the target LDAP server.
          type: string
        serverPort:
          description: The port number on which the server listens for requests.
          type: integer
        location:
          description: Specifies the location for the LDAP External Server.
          type: string
        bindDN:
          description: The DN to use to bind to the target LDAP server if simple authentication
            is required.
          type: string
        password:
          description: The login password for the specified user.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-authenticationMethodProp'
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        healthCheckConnectTimeout:
          description: "Specifies the maximum length of time to wait for a connection\
            \ to be established for the purpose of performing a health check. If the\
            \ connection cannot be established within this length of time, the server\
            \ will be classified as unavailable."
          type: string
        maxConnectionAge:
          description: Specifies the maximum length of time that connections to this
            server should be allowed to remain established before being closed and
            replaced with newly-established connections.
          type: string
        minExpiredConnectionDisconnectInterval:
          description: Specifies the minimum length of time that should pass between
            connection closures as a result of the connections being established for
            longer than the maximum connection age. This may help avoid cases in which
            a large number of connections are closed and re-established in a short
            period of time because of the maximum connection age.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
          type: string
        maxResponseSize:
          description: Specifies the maximum response size that should be supported
            for messages received from the LDAP external server.
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL or StartTLS is to be
            used for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        trustManagerProvider:
          description: The trust manager provider to use if SSL or StartTLS is to
            be used for connection-level security.
          type: string
        initialConnections:
          description: The number of connections to initially establish to the LDAP
            external server. A value of zero indicates that the number of connections
            should be dynamically based on the number of available worker threads.
            This will be ignored when using a thread-local connection pool.
          type: integer
        maxConnections:
          description: The maximum number of concurrent connections to maintain for
            the LDAP external server. A value of zero indicates that the number of
            connections should be dynamically based on the number of available worker
            threads. This will be ignored when using a thread-local connection pool.
          type: integer
        defunctConnectionResultCode:
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
          type: array
        abandonOnTimeout:
          description: "Indicates whether to send an abandon request for an operation\
            \ for which a response timeout is encountered. A request which has timed\
            \ out on one server may be retried on another server regardless of whether\
            \ an abandon request is sent, but if the initial attempt is not abandoned\
            \ then a long-running operation may unnecessarily continue to consume\
            \ processing resources on the initial server."
          type: boolean
        description:
          description: A description for this External Server
          type: string
      required:
      - authenticationMethod
      - connectTimeout
      - connectionSecurity
      - maxConnectionAge
      - maxResponseSize
      - schemas
      - serverHostName
      - serverPort
      - verifyCredentialsMethod
      type: object
    Enumoracle-unified-directory-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:oracle-unified-directory
      type: string
    add-conjur-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/conjur-external-server-shared'
    conjur-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/conjur-external-server-shared'
    conjur-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconjur-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conjurServerBaseURI:
          items:
            description: "The base URL needed to access the CyberArk Conjur server.\
              \ The base URL should consist of the protocol (\"http\" or \"https\"\
              ), the server address (resolvable name or IP address), and the port\
              \ number. For example, \"https://conjur.example.com:8443/\"."
            type: string
          type: array
        conjurAuthenticationMethod:
          description: The mechanism used to authenticate to the Conjur server.
          type: string
        conjurAccountName:
          description: The name of the account with which the desired secrets are
            associated.
          type: string
        trustStoreFile:
          description: The path to a file containing the information needed to trust
            the certificate presented by the Conjur servers.
          type: string
        trustStorePin:
          description: "The PIN needed to access the contents of the trust store.\
            \ This is only required if a trust store file is required, and if that\
            \ trust store requires a PIN to access its contents."
          format: password
          type: string
        trustStoreType:
          description: "The store type for the specified trust store file. The value\
            \ should likely be one of \"JKS\", \"PKCS12\", or \"BCFKS\"."
          type: string
        description:
          description: A description for this External Server
          type: string
      required:
      - conjurAccountName
      - conjurAuthenticationMethod
      - conjurServerBaseURI
      - schemas
      type: object
    Enumconjur-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:conjur
      type: string
    add-jdbc-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/jdbc-external-server-shared'
    jdbc-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/jdbc-external-server-shared'
    jdbc-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjdbc-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        jdbcDriverType:
          $ref: '#/components/schemas/Enumexternal-server-jdbcDriverTypeProp'
        jdbcDriverURL:
          description: Specify the complete JDBC URL which will be used instead of
            the automatic URL format. You must select type 'other' for the jdbc-driver-type.
          type: string
        databaseName:
          description: Specifies which database to connect to. This is ignored if
            jdbc-driver-url is specified.
          type: string
        serverHostName:
          description: The host name of the database server. This is ignored if jdbc-driver-url
            is specified.
          type: string
        serverPort:
          description: The port number where the database server listens for requests.
            This is ignored if jdbc-driver-url is specified
          type: integer
        userName:
          description: The name of the login account to use when connecting to the
            database server.
          type: string
        password:
          description: The login password for the specified user name.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        validationQuery:
          description: The SQL query that will be used to validate connections to
            the database before making them available to the Directory Server.
          type: string
        validationQueryTimeout:
          description: "Specifies the amount of time to wait for a response from the\
            \ database when executing the validation query, if one is set. If the\
            \ timeout is exceeded, the Directory Server will drop the connection and\
            \ obtain a new one. A value of zero indicates no timeout."
          type: string
        jdbcConnectionProperties:
          items:
            description: Specifies the connection properties for the JDBC datasource.
            type: string
          type: array
        transactionIsolationLevel:
          $ref: '#/components/schemas/Enumexternal-server-transactionIsolationLevelProp'
        description:
          description: A description for this External Server
          type: string
      required:
      - jdbcDriverType
      - schemas
      type: object
    Enumjdbc-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:jdbc
      type: string
    add-amazon-aws-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/amazon-aws-external-server-shared'
    amazon-aws-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/amazon-aws-external-server-shared'
    amazon-aws-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumamazon-aws-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        awsAccessKeyID:
          description: "The access key ID that will be used if authentication should\
            \ use an access key. If this is provided, then an aws-secret-access-key\
            \ must also be provided. If this is not provided, then no aws-secret-access-key\
            \ may be configured, and the server must be running in an EC2 instance\
            \ that is configured with an IAM role with permission to perform the necessary\
            \ operations."
          type: string
        awsSecretAccessKey:
          description: "The secret access key that will be used if authentication\
            \ should use an access key. If this is provided, then an aws-access-key-id\
            \ must also be provided. If this is not provided, then no aws-access-key-id\
            \ may be configured, and the server must be running in an EC2 instance\
            \ that is configured with an IAM role with permission to perform the necessary\
            \ operations."
          format: password
          type: string
        awsRegionName:
          description: The name of the AWS region containing the resources that will
            be accessed.
          type: string
        description:
          description: A description for this External Server
          type: string
      required:
      - awsRegionName
      - schemas
      type: object
    Enumamazon-aws-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:amazon-aws
      type: string
    add-syslog-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/syslog-external-server-shared'
    syslog-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/syslog-external-server-shared'
    syslog-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsyslog-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        serverHostName:
          description: The address of the syslog server.
          type: string
        serverPort:
          description: The port on which the syslog server accepts connections.
          type: integer
        transportMechanism:
          $ref: '#/components/schemas/Enumexternal-server-transportMechanismProp'
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
            This will only be used when communicating with the syslog server over
            TCP (with or without TLS encryption).
          type: string
        maxConnectionAge:
          description: The maximum length of time that TCP connections should remain
            established. This will be ignored for UDP-based connections. A zero duration
            indicates that no maximum age will be imposed.
          type: string
        trustManagerProvider:
          description: A trust manager provider that will be used to determine whether
            to trust the certificate chain presented by the syslog server when communication
            is encrypted with TLS. This property will be ignored when not using TLS
            encryption.
          type: string
        description:
          description: A description for this External Server
          type: string
      required:
      - connectTimeout
      - maxConnectionAge
      - schemas
      - serverHostName
      - transportMechanism
      - trustManagerProvider
      type: object
    Enumsyslog-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:syslog
      type: string
    add-nokia-proxy-server-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/nokia-proxy-server-external-server-shared'
    nokia-proxy-server-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/nokia-proxy-server-external-server-shared'
    nokia-proxy-server-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnokia-proxy-server-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        verifyCredentialsMethod:
          $ref: '#/components/schemas/Enumexternal-server-verifyCredentialsMethodProp'
        useAdministrativeOperationControl:
          description: "Indicates whether to include the administrative operation\
            \ request control in requests sent to this server which are intended for\
            \ administrative operations (e.g., health checking) rather than requests\
            \ directly from clients."
          type: boolean
        serverHostName:
          description: The host name or IP address of the target LDAP server.
          type: string
        serverPort:
          description: The port number on which the server listens for requests.
          type: integer
        location:
          description: Specifies the location for the LDAP External Server.
          type: string
        bindDN:
          description: The DN to use to bind to the target LDAP server if simple authentication
            is required.
          type: string
        password:
          description: The login password for the specified user.
          format: password
          type: string
        passphraseProvider:
          description: The passphrase provider to use to obtain the login password
            for the specified user.
          type: string
        connectionSecurity:
          $ref: '#/components/schemas/Enumexternal-server-connectionSecurityProp'
        authenticationMethod:
          $ref: '#/components/schemas/Enumexternal-server-authenticationMethodProp'
        healthCheckConnectTimeout:
          description: "Specifies the maximum length of time to wait for a connection\
            \ to be established for the purpose of performing a health check. If the\
            \ connection cannot be established within this length of time, the server\
            \ will be classified as unavailable."
          type: string
        maxConnectionAge:
          description: Specifies the maximum length of time that connections to this
            server should be allowed to remain established before being closed and
            replaced with newly-established connections.
          type: string
        minExpiredConnectionDisconnectInterval:
          description: Specifies the minimum length of time that should pass between
            connection closures as a result of the connections being established for
            longer than the maximum connection age. This may help avoid cases in which
            a large number of connections are closed and re-established in a short
            period of time because of the maximum connection age.
          type: string
        connectTimeout:
          description: Specifies the maximum length of time to wait for a connection
            to be established before giving up and considering the server unavailable.
          type: string
        maxResponseSize:
          description: Specifies the maximum response size that should be supported
            for messages received from the LDAP external server.
          type: string
        keyManagerProvider:
          description: The key manager provider to use if SSL or StartTLS is to be
            used for connection-level security. When specifying a value for this property
            (except when using the Null key manager provider) you must ensure that
            the external server trusts this server's public certificate by adding
            this server's public certificate to the external server's trust store.
          type: string
        trustManagerProvider:
          description: The trust manager provider to use if SSL or StartTLS is to
            be used for connection-level security.
          type: string
        initialConnections:
          description: The number of connections to initially establish to the LDAP
            external server. A value of zero indicates that the number of connections
            should be dynamically based on the number of available worker threads.
            This will be ignored when using a thread-local connection pool.
          type: integer
        maxConnections:
          description: The maximum number of concurrent connections to maintain for
            the LDAP external server. A value of zero indicates that the number of
            connections should be dynamically based on the number of available worker
            threads. This will be ignored when using a thread-local connection pool.
          type: integer
        defunctConnectionResultCode:
          items:
            $ref: '#/components/schemas/Enumexternal-server-defunctConnectionResultCodeProp'
          type: array
        abandonOnTimeout:
          description: "Indicates whether to send an abandon request for an operation\
            \ for which a response timeout is encountered. A request which has timed\
            \ out on one server may be retried on another server regardless of whether\
            \ an abandon request is sent, but if the initial attempt is not abandoned\
            \ then a long-running operation may unnecessarily continue to consume\
            \ processing resources on the initial server."
          type: boolean
        description:
          description: A description for this External Server
          type: string
      required:
      - authenticationMethod
      - connectTimeout
      - connectionSecurity
      - maxConnectionAge
      - maxResponseSize
      - schemas
      - serverHostName
      - serverPort
      - verifyCredentialsMethod
      type: object
    Enumnokia-proxy-server-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:nokia-proxy-server
      type: string
    add-vault-external-server-request:
      allOf:
      - $ref: '#/components/schemas/add_opendj_external_server_request_allOf'
      - $ref: '#/components/schemas/vault-external-server-shared'
    vault-external-server-response:
      allOf:
      - $ref: '#/components/schemas/opendj_external_server_response_allOf'
      - $ref: '#/components/schemas/vault-external-server-shared'
    vault-external-server-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvault-external-serverSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultServerBaseURI:
          items:
            description: "The base URL needed to access the Vault server. The base\
              \ URL should consist of the protocol (\"http\" or \"https\"), the server\
              \ address (resolvable name or IP address), and the port number. For\
              \ example, \"https://vault.example.com:8200/\"."
            type: string
          type: array
        vaultAuthenticationMethod:
          description: The mechanism used to authenticate to the Vault server.
          type: string
        trustStoreFile:
          description: The path to a file containing the information needed to trust
            the certificate presented by the Vault servers.
          type: string
        trustStorePin:
          description: "The passphrase needed to access the contents of the trust\
            \ store. This is only required if a trust store file is required, and\
            \ if that trust store requires a PIN to access its contents."
          format: password
          type: string
        trustStoreType:
          description: "The store type for the specified trust store file. The value\
            \ should likely be one of \"JKS\", \"PKCS12\", or \"BCFKS\"."
          type: string
        description:
          description: A description for this External Server
          type: string
      required:
      - schemas
      - vaultAuthenticationMethod
      - vaultServerBaseURI
      type: object
    Enumvault-external-serverSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:external-server:vault
      type: string
    Enumexternal-server-verifyCredentialsMethodProp:
      description: The mechanism to use to verify user credentials while ensuring
        that the ability to process other operations is not impacted by an alternate
        authorization identity.
      enum:
      - separate-connections
      - retain-identity-control
      - bind-on-existing-connections
      type: string
    Enumexternal-server-jdbcDriverTypeProp:
      description: Specifies a supported database driver type. The driver class will
        be automatically selected based on this selection. We highly recommend using
        a JDBC 4 driver that is suitable for the current Java platform.
      enum:
      - oraclethin
      - oracleoci
      - mysql
      - db2
      - sqlserver
      - postgres
      - other
      type: string
    Enumexternal-server-defunctConnectionResultCodeProp:
      description: "Specifies the operation result code values that should cause the\
        \ associated connection should be considered defunct. If an operation fails\
        \ with one of these result codes, then it will be terminated and an attempt\
        \ will be made to establish a new connection in its place."
      enum:
      - success
      - operations-error
      - protocol-error
      - time-limit-exceeded
      - size-limit-exceeded
      - compare-false
      - compare-true
      - auth-method-not-supported
      - strong-auth-required
      - referral
      - admin-limit-exceeded
      - unavailable-critical-extension
      - confidentiality-required
      - sasl-bind-in-progress
      - no-such-attribute
      - undefined-attribute-type
      - inappropriate-matching
      - constraint-violation
      - attribute-or-value-exists
      - invalid-attribute-syntax
      - no-such-object
      - alias-problem
      - invalid-dn-syntax
      - alias-dereferencing-problem
      - inappropriate-authentication
      - invalid-credentials
      - insufficient-access-rights
      - busy
      - unavailable
      - unwilling-to-perform
      - loop-detect
      - sort-control-missing
      - offset-range-error
      - naming-violation
      - object-class-violation
      - not-allowed-on-nonleaf
      - not-allowed-on-rdn
      - entry-already-exists
      - object-class-mods-prohibited
      - affects-multiple-dsas
      - virtual-list-view-error
      - other
      - server-down
      - local-error
      - encoding-error
      - decoding-error
      - timeout
      - auth-unknown
      - filter-error
      - user-canceled
      - param-error
      - no-memory
      - connect-error
      - not-supported
      - control-not-found
      - no-results-returned
      - more-results-to-return
      - client-loop
      - referral-limit-exceeded
      - canceled
      - no-such-operation
      - too-late
      - cannot-cancel
      - assertion-failed
      - authorization-denied
      - no-operation
      - interactive-transaction-aborted
      type: string
    Enumexternal-server-authenticationMethodProp:
      description: The mechanism to use to authenticate to the target server.
      enum:
      - none
      - simple
      - external
      - inter-server
      type: string
    Enumexternal-server-hostnameVerificationMethodProp:
      description: The mechanism for checking if the hostname in the PingOne ID Token
        Validator's base-url value matches the name(s) stored inside the X.509 certificate
        presented by PingOne.
      enum:
      - allow-all
      - strict
      type: string
    Enumexternal-server-transactionIsolationLevelProp:
      description: This property specifies the default transaction isolation level
        for connections to this JDBC External Server.
      enum:
      - read-committed
      - read-uncommitted
      - repeatable-read
      - serializable
      type: string
    Enumexternal-server-connectionSecurityProp:
      description: The mechanism to use to secure communication with the directory
        server.
      enum:
      - none
      - ssl
      - starttls
      type: string
    Enumexternal-server-smtpSecurityProp:
      description: This property specifies type of connection security to use when
        connecting to the outgoing mail server.
      enum:
      - none
      - starttls
      - ssl
      type: string
    Enumexternal-server-transportMechanismProp:
      description: The transport mechanism that should be used when communicating
        with the syslog server.
      enum:
      - unencrypted-udp
      - unencrypted-tcp
      - tls-encrypted-tcp
      type: string
    add-dn-map-request:
      allOf:
      - $ref: '#/components/schemas/add_dn_map_request_allOf'
      - $ref: '#/components/schemas/dn-map-shared'
    dn-map-response:
      allOf:
      - $ref: '#/components/schemas/dn_map_response_allOf'
      - $ref: '#/components/schemas/dn-map-shared'
    dn-map-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdn-mapSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this DN Map
          type: string
        fromDNPattern:
          description: "Specifies the DN pattern to match when determining whether\
            \ this map applies to a specific source DN. If the provided bind DN matches\
            \ this pattern, then the to-dn-pattern will be used to perform the mapping.\
            \ If the provided bind DN does not match this pattern, then no mapping\
            \ will be performed."
          type: string
        toDNPattern:
          description: "Specifies a pattern for constructing the DN value using fixed\
            \ text, DN components matching wild-card values in from-dn-pattern, and\
            \ attribute values from the source entry."
          type: string
      required:
      - fromDNPattern
      - toDNPattern
      type: object
    Enumdn-mapSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:dn-map
      type: string
    add-groovy-scripted-change-subscription-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_groovy_scripted_change_subscription_handler_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-shared'
    groovy-scripted-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/groovy_scripted_change_subscription_handler_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-shared'
    groovy-scripted-change-subscription-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-change-subscription-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Change Subscription Handler.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Change Subscription Handler. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Change Subscription Handler
          type: string
        enabled:
          description: Indicates whether this change subscription handler is enabled
            within the server.
          type: boolean
        changeSubscription:
          items:
            description: The set of change subscriptions for which this change subscription
              handler should be notified. If no values are provided then it will be
              notified for all change subscriptions defined in the server.
            type: string
          type: array
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-change-subscription-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:groovy-scripted
      type: string
    add-logging-change-subscription-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_groovy_scripted_change_subscription_handler_request_allOf'
      - $ref: '#/components/schemas/logging-change-subscription-handler-shared'
    logging-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/groovy_scripted_change_subscription_handler_response_allOf'
      - $ref: '#/components/schemas/logging-change-subscription-handler-shared'
    logging-change-subscription-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlogging-change-subscription-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        logFile:
          description: Specifies the log file in which the change notification messages
            will be written.
          type: string
        description:
          description: A description for this Change Subscription Handler
          type: string
        enabled:
          description: Indicates whether this change subscription handler is enabled
            within the server.
          type: boolean
        changeSubscription:
          items:
            description: The set of change subscriptions for which this change subscription
              handler should be notified. If no values are provided then it will be
              notified for all change subscriptions defined in the server.
            type: string
          type: array
      required:
      - enabled
      - logFile
      - schemas
      type: object
    Enumlogging-change-subscription-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:logging
      type: string
    add-third-party-change-subscription-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_groovy_scripted_change_subscription_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-change-subscription-handler-shared'
    third-party-change-subscription-handler-response:
      allOf:
      - $ref: '#/components/schemas/groovy_scripted_change_subscription_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-change-subscription-handler-shared'
    third-party-change-subscription-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-change-subscription-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Change Subscription Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Change Subscription Handler. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Change Subscription Handler
          type: string
        enabled:
          description: Indicates whether this change subscription handler is enabled
            within the server.
          type: boolean
        changeSubscription:
          items:
            description: The set of change subscriptions for which this change subscription
              handler should be notified. If no values are provided then it will be
              notified for all change subscriptions defined in the server.
            type: string
          type: array
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-change-subscription-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:change-subscription-handler:third-party
      type: string
    add-obscured-value-request:
      allOf:
      - $ref: '#/components/schemas/add_obscured_value_request_allOf'
      - $ref: '#/components/schemas/obscured-value-shared'
    obscured-value-response:
      allOf:
      - $ref: '#/components/schemas/obscured_value_response_allOf'
      - $ref: '#/components/schemas/obscured-value-shared'
    obscured-value-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumobscured-valueSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Obscured Value
          type: string
        obscuredValue:
          description: The value to be stored in an obscured form.
          format: password
          type: string
      required:
      - obscuredValue
      type: object
    Enumobscured-valueSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:obscured-value
      type: string
    crypto-manager-response:
      example:
        sslCertNickname: sslCertNickname
        digestAlgorithm: digestAlgorithm
        macKeyLength: 0
        outboundSSLProtocol:
        - outboundSSLProtocol
        - outboundSSLProtocol
        cipherTransformation: cipherTransformation
        keyWrappingTransformation: keyWrappingTransformation
        enableSha1CipherSuites: true
        enableRsaKeyExchangeCipherSuites: true
        macAlgorithm: macAlgorithm
        outboundSSLCipherSuite:
        - outboundSSLCipherSuite
        - outboundSSLCipherSuite
        schemas:
        - null
        sslProtocol:
        - sslProtocol
        - sslProtocol
        sslCipherSuite:
        - sslCipherSuite
        - sslCipherSuite
        cipherKeyLength: 6
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcrypto-managerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        digestAlgorithm:
          description: Specifies the preferred message digest algorithm for the Directory
            Server.
          type: string
        macAlgorithm:
          description: Specifies the preferred MAC algorithm for the Directory Server.
          type: string
        macKeyLength:
          description: Specifies the key length in bits for the preferred MAC algorithm.
          type: integer
        cipherTransformation:
          description: Specifies the cipher for the Directory Server using the syntax
            algorithm/mode/padding.
          type: string
        cipherKeyLength:
          description: Specifies the key length in bits for the preferred cipher.
          type: integer
        keyWrappingTransformation:
          description: The preferred key wrapping transformation for the Directory
            Server. This value must be the same for all server instances in a replication
            topology.
          type: string
        sslProtocol:
          items:
            description: Specifies the names of TLS protocols that are allowed for
              use in secure communication.
            type: string
          type: array
        sslCipherSuite:
          items:
            description: Specifies the names of the TLS cipher suites that are allowed
              for use in secure communication.
            type: string
          type: array
        outboundSSLProtocol:
          items:
            description: Specifies the names of the TLS protocols that will be enabled
              for outbound connections initiated by the Directory Server.
            type: string
          type: array
        outboundSSLCipherSuite:
          items:
            description: Specifies the names of the TLS cipher suites that will be
              enabled for outbound connections initiated by the Directory Server.
            type: string
          type: array
        enableSha1CipherSuites:
          description: Indicates whether to enable support for TLS cipher suites that
            use the SHA-1 digest algorithm. The SHA-1 digest algorithm is no longer
            considered secure and is not recommended for use.
          type: boolean
        enableRsaKeyExchangeCipherSuites:
          description: "Indicates whether to enable support for TLS cipher suites\
            \ that use the RSA key exchange algorithm. Cipher suites that rely on\
            \ RSA key exchange are not recommended because they do not support forward\
            \ secrecy, which means that if the private key is compromised, then any\
            \ communication negotiated using that private key should also be considered\
            \ compromised."
          type: boolean
        sslCertNickname:
          description: Specifies the nickname (also called the alias) of the certificate
            that the Crypto Manager should use when performing SSL communication.
          type: string
      type: object
    Enumcrypto-managerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:crypto-manager
      type: string
    general-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgeneral-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumgeneral-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:general
      type: string
    memory-usage-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummemory-usage-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enummemory-usage-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:memory-usage
      type: string
    stack-trace-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstack-trace-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumstack-trace-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:stack-trace
      type: string
    disk-space-usage-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdisk-space-usage-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        lowSpaceWarningSizeThreshold:
          description: "Specifies the low space warning threshold value as an absolute\
            \ amount of space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will begin generating warning alert\
            \ notifications."
          type: string
        lowSpaceWarningPercentThreshold:
          description: "Specifies the low space warning threshold value as a percentage\
            \ of total space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will begin generating warning alert\
            \ notifications."
          type: integer
        lowSpaceErrorSizeThreshold:
          description: "Specifies the low space error threshold value as an absolute\
            \ amount of space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will start rejecting operations requested\
            \ by non-root users."
          type: string
        lowSpaceErrorPercentThreshold:
          description: "Specifies the low space error threshold value as a percentage\
            \ of total space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will start rejecting operations requested\
            \ by non-root users."
          type: integer
        outOfSpaceErrorSizeThreshold:
          description: "Specifies the out of space error threshold value as an absolute\
            \ amount of space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will shut itself down to avoid problems\
            \ that may occur from complete exhaustion of usable space."
          type: string
        outOfSpaceErrorPercentThreshold:
          description: "Specifies the out of space error threshold value as a percentage\
            \ of total space. If the amount of usable disk space drops below this\
            \ amount, then the Directory Server will shut itself down to avoid problems\
            \ that may occur from complete exhaustion of usable space."
          type: integer
        alertFrequency:
          description: "Specifies the length of time between administrative alerts\
            \ generated in response to lack of usable disk space. Administrative alerts\
            \ will be generated whenever the amount of usable space drops below any\
            \ threshold, and they will also be generated at regular intervals as long\
            \ as the amount of usable space remains below the threshold value. A value\
            \ of zero indicates that alerts should only be generated when the amount\
            \ of usable space drops below a configured threshold."
          type: string
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - alertFrequency
      - enabled
      - schemas
      type: object
    Enumdisk-space-usage-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:disk-space-usage
      type: string
    system-info-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsystem-info-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsystem-info-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:system-info
      type: string
    active-operations-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumactive-operations-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumactive-operations-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:active-operations
      type: string
    ssl-context-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumssl-context-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumssl-context-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:ssl-context
      type: string
    client-connection-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumclient-connection-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumclient-connection-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:client-connection
      type: string
    version-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumversion-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumversion-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:version
      type: string
    host-system-monitor-provider-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhost-system-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Host System Monitor Provider is enabled
            for use.
          type: boolean
        diskDevices:
          items:
            description: Specifies which disk devices to monitor for I/O activity.
              Should be the device name as displayed by iostat -d.
            type: string
          type: array
        networkDevices:
          items:
            description: Specifies which network interfaces to monitor for I/O activity.
              Should be the device name as displayed by netstat -i.
            type: string
          type: array
        systemUtilizationMonitorLogDirectory:
          description: "Specifies a relative or absolute path to the directory on\
            \ the local filesystem containing the log files used by the system utilization\
            \ monitor. The path must exist, and it must be a writable directory by\
            \ the server process."
          type: string
        description:
          description: A description for this Monitor Provider
          type: string
      required:
      - enabled
      - schemas
      - systemUtilizationMonitorLogDirectory
      type: object
    Enumhost-system-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:host-system
      type: string
    add-third-party-monitor-provider-request:
      allOf:
      - $ref: '#/components/schemas/add_third_party_monitor_provider_request_allOf'
      - $ref: '#/components/schemas/third-party-monitor-provider-shared'
    third-party-monitor-provider-response:
      allOf:
      - $ref: '#/components/schemas/third_party_monitor_provider_response_allOf'
      - $ref: '#/components/schemas/third-party-monitor-provider-shared'
    third-party-monitor-provider-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-monitor-providerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Monitor Provider.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Monitor Provider. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Monitor Provider
          type: string
        enabled:
          description: Indicates whether the Monitor Provider is enabled for use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-monitor-providerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitor-provider:third-party
      type: string
    static-group-implementation-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstatic-group-implementationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Group Implementation
          type: string
        enabled:
          description: Indicates whether the Group Implementation is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumstatic-group-implementationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:group-implementation:static
      type: string
    virtual-static-group-implementation-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvirtual-static-group-implementationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Group Implementation
          type: string
        enabled:
          description: Indicates whether the Group Implementation is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumvirtual-static-group-implementationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:group-implementation:virtual-static
      type: string
    dynamic-group-implementation-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdynamic-group-implementationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Group Implementation
          type: string
        enabled:
          description: Indicates whether the Group Implementation is enabled.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumdynamic-group-implementationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:group-implementation:dynamic
      type: string
    add-indicator-gauge-data-source-request:
      allOf:
      - $ref: '#/components/schemas/add_indicator_gauge_data_source_request_allOf'
      - $ref: '#/components/schemas/indicator-gauge-data-source-shared'
    indicator-gauge-data-source-response:
      allOf:
      - $ref: '#/components/schemas/indicator_gauge_data_source_response_allOf'
      - $ref: '#/components/schemas/indicator-gauge-data-source-shared'
    indicator-gauge-data-source-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumindicator-gauge-data-sourceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Gauge Data Source
          type: string
        additionalText:
          description: Additional information about the source of this data that is
            added to alerts sent as a result of gauges that use this Gauge Data Source.
          type: string
        monitorObjectclass:
          description: The object class name of the monitor entries to examine for
            generating gauge data.
          type: string
        monitorAttribute:
          description: Specifies the attribute on the monitor entries from which to
            derive the current gauge value.
          type: string
        includeFilter:
          description: An optional LDAP filter that can be used restrict which monitor
            entries are used to compute output.
          type: string
        resourceAttribute:
          description: Specifies the attribute whose value is used to identify the
            specific resource being monitored (e.g. device name).
          type: string
        resourceType:
          description: A string indicating the type of resource being monitored.
          type: string
        minimumUpdateInterval:
          description: "The minimum frequency with which gauges using this Gauge Data\
            \ Source can be configured for update. In order to prevent undesirable\
            \ side effects, some Gauge Data Sources may use this property to impose\
            \ a higher bound on the update frequency of gauges."
          type: string
      required:
      - monitorAttribute
      - monitorObjectclass
      - schemas
      type: object
    Enumindicator-gauge-data-sourceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:gauge-data-source:indicator
      type: string
    add-numeric-gauge-data-source-request:
      allOf:
      - $ref: '#/components/schemas/add_indicator_gauge_data_source_request_allOf'
      - $ref: '#/components/schemas/numeric-gauge-data-source-shared'
    numeric-gauge-data-source-response:
      allOf:
      - $ref: '#/components/schemas/indicator_gauge_data_source_response_allOf'
      - $ref: '#/components/schemas/numeric-gauge-data-source-shared'
    numeric-gauge-data-source-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnumeric-gauge-data-sourceSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        dataOrientation:
          $ref: '#/components/schemas/Enumgauge-data-source-dataOrientationProp'
        statisticType:
          $ref: '#/components/schemas/Enumgauge-data-source-statisticTypeProp'
        divideValueBy:
          description: An optional floating point value that can be used to scale
            the resulting value.
          type: number
        divideValueByAttribute:
          description: An optional property that can scale the resulting value by
            another attribute in the monitored entry.
          type: string
        divideValueByCounterAttribute:
          description: An optional property that can scale the resulting value by
            another attribute whose value represents a counter in the monitored entry.
          type: string
        description:
          description: A description for this Gauge Data Source
          type: string
        additionalText:
          description: Additional information about the source of this data that is
            added to alerts sent as a result of gauges that use this Gauge Data Source.
          type: string
        monitorObjectclass:
          description: The object class name of the monitor entries to examine for
            generating gauge data.
          type: string
        monitorAttribute:
          description: Specifies the attribute on the monitor entries from which to
            derive the current gauge value.
          type: string
        includeFilter:
          description: An optional LDAP filter that can be used restrict which monitor
            entries are used to compute output.
          type: string
        resourceAttribute:
          description: Specifies the attribute whose value is used to identify the
            specific resource being monitored (e.g. device name).
          type: string
        resourceType:
          description: A string indicating the type of resource being monitored.
          type: string
        minimumUpdateInterval:
          description: "The minimum frequency with which gauges using this Gauge Data\
            \ Source can be configured for update. In order to prevent undesirable\
            \ side effects, some Gauge Data Sources may use this property to impose\
            \ a higher bound on the update frequency of gauges."
          type: string
      required:
      - monitorAttribute
      - monitorObjectclass
      - schemas
      - statisticType
      type: object
    Enumnumeric-gauge-data-sourceSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:gauge-data-source:numeric
      type: string
    Enumgauge-data-source-dataOrientationProp:
      description: Indicates whether a higher or lower value is a more severe condition.
      enum:
      - lower-is-better
      - higher-is-better
      type: string
    Enumgauge-data-source-statisticTypeProp:
      description: Specifies the type of statistic to include in the output for the
        monitored attribute.
      enum:
      - count-per-second
      - average
      - minimum
      - maximum
      type: string
    config-file-handler-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconfig-file-handler-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        insignificantConfigArchiveAttribute:
          items:
            description: The name or OID of an attribute type that is considered insignificant
              for the purpose of maintaining the configuration archive.
            type: string
          type: array
        mirroredSubtreePeerPollingInterval:
          description: Tells the server component that is responsible for mirroring
            configuration data across a topology of servers the maximum amount of
            time to wait before polling the peer servers in the topology to determine
            if there are any changes in the topology. Mirrored data includes meta-data
            about the servers in the topology as well as cluster-wide configuration
            data.
          type: string
        mirroredSubtreeEntryUpdateTimeout:
          description: "Tells the server component that is responsible for mirroring\
            \ configuration data across a topology of servers the maximum amount of\
            \ time to wait for an update operation (add, delete, modify and modify-dn)\
            \ on an entry to be applied on all servers in the topology. Mirrored data\
            \ includes meta-data about the servers in the topology as well as cluster-wide\
            \ configuration data."
          type: string
        mirroredSubtreeSearchTimeout:
          description: Tells the server component that is responsible for mirroring
            configuration data across a topology of servers the maximum amount of
            time to wait for a search operation to complete. Mirrored data includes
            meta-data about the servers in the topology as well as cluster-wide configuration
            data. Search requests that take longer than this timeout will be canceled
            and considered failures.
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - writabilityMode
      type: object
    Enumconfig-file-handler-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:config-file-handler
      type: string
    schema-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumschema-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        schemaEntryDN:
          items:
            description: Defines the base DNs of the subtrees in which the schema
              information is published in addition to the value included in the base-dn
              property.
            type: string
          type: array
        showAllAttributes:
          description: Indicates whether to treat all attributes in the schema entry
            as if they were user attributes regardless of their configuration.
          type: boolean
        readOnlySchemaFile:
          items:
            description: Specifies the name of a file (which must exist in the config/schema
              directory) containing schema elements that should be considered read-only.
              Any schema definitions contained in read-only files cannot be altered
              by external clients.
            type: string
          type: array
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - showAllAttributes
      - writabilityMode
      type: object
    Enumschema-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:schema
      type: string
    backup-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbackup-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        backupDirectory:
          items:
            description: Specifies the path to a backup directory containing one or
              more backups for a particular backend.
            type: string
          type: array
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - backupDirectory
      - baseDN
      - enabled
      - schemas
      - writabilityMode
      type: object
    Enumbackup-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:backup
      type: string
    task-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtask-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        taskBackingFile:
          description: Specifies the path to the backing file for storing information
            about the tasks configured in the server.
          type: string
        maximumInitialTaskLogMessagesToRetain:
          description: "The maximum number of log messages to retain in each task\
            \ entry from the beginning of the processing for that task. If too many\
            \ messages are logged during task processing, then retaining only a limited\
            \ number of messages from the beginning and/or end of task processing\
            \ can reduce the amount of memory that the server consumes by caching\
            \ information about currently-active and recently-completed tasks."
          type: integer
        maximumFinalTaskLogMessagesToRetain:
          description: "The maximum number of log messages to retain in each task\
            \ entry from the end of the processing for that task. If too many messages\
            \ are logged during task processing, then retaining only a limited number\
            \ of messages from the beginning and/or end of task processing can reduce\
            \ the amount of memory that the server consumes by caching information\
            \ about currently-active and recently-completed tasks."
          type: integer
        taskRetentionTime:
          description: Specifies the length of time that task entries should be retained
            after processing on the associated task has been completed.
          type: string
        notificationSenderAddress:
          description: "Specifies the email address to use as the sender address (that\
            \ is, the \"From:\" address) for notification mail messages generated\
            \ when a task completes execution."
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - taskBackingFile
      - writabilityMode
      type: object
    Enumtask-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:task
      type: string
    alert-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumalert-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        ldifFile:
          description: Specifies the path to the LDIF file that serves as the backing
            file for this backend.
          type: string
        alertRetentionTime:
          description: Specifies the maximum length of time that information about
            generated alerts should be maintained before they will be purged.
          type: string
        maxAlerts:
          description: "Specifies the maximum number of alerts that should be retained.\
            \ If more alerts than this configured maximum are generated within the\
            \ alert retention time, then the oldest alerts will be purged to achieve\
            \ this maximum."
          type: integer
        disabledAlertType:
          items:
            $ref: '#/components/schemas/Enumbackend-disabledAlertTypeProp'
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - alertRetentionTime
      - backendID
      - baseDN
      - enabled
      - ldifFile
      - schemas
      - writabilityMode
      type: object
    Enumalert-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:alert
      type: string
    encryption-settings-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumencryption-settings-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - writabilityMode
      type: object
    Enumencryption-settings-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:encryption-settings
      type: string
    trust-store-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtrust-store-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        trustStoreFile:
          description: Specifies the path to the file that stores the trust information.
          type: string
        trustStoreType:
          description: Specifies the format for the data in the key store file.
          type: string
        trustStorePin:
          description: Specifies the clear-text PIN needed to access the Trust Store
            Backend.
          format: password
          type: string
        trustStorePinFile:
          description: Specifies the path to the text file whose only contents should
            be a single line containing the clear-text PIN needed to access the Trust
            Store Backend.
          type: string
        trustStorePinPassphraseProvider:
          description: The passphrase provider to use to obtain the clear-text PIN
            needed to access the Trust Store Backend.
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - trustStoreFile
      - writabilityMode
      type: object
    Enumtrust-store-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:trust-store
      type: string
    alarm-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumalarm-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        ldifFile:
          description: Specifies the path to the LDIF file that serves as the backing
            file for this backend.
          type: string
        alarmRetentionTime:
          description: Specifies the maximum length of time that information about
            raised alarms should be maintained before they will be purged.
          type: string
        maxAlarms:
          description: "Specifies the maximum number of alarms that should be retained.\
            \ If more alarms than this configured maximum are generated within the\
            \ alarm retention time, then the oldest alarms will be purged to achieve\
            \ this maximum. Only alarms at normal severity will be purged."
          type: integer
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - alarmRetentionTime
      - backendID
      - baseDN
      - enabled
      - ldifFile
      - schemas
      - writabilityMode
      type: object
    Enumalarm-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:alarm
      type: string
    changelog-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumchangelog-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        dbDirectory:
          description: Specifies the path to the filesystem directory that is used
            to hold the Berkeley DB Java Edition database files containing the data
            for this backend. The files for this backend are stored in a sub-directory
            named after the backend-id.
          type: string
        dbDirectoryPermissions:
          description: Specifies the permissions that should be applied to the directory
            containing the backend database files and to directories and files created
            during backup of the backend.
          type: string
        dbCachePercent:
          description: Specifies the percentage of JVM memory to allocate to the changelog
            database cache.
          type: integer
        jeProperty:
          items:
            description: Specifies the database and environment properties for the
              Berkeley DB Java Edition database for this changelog backend.
            type: string
          type: array
        changelogWriteBatchSize:
          description: Specifies the number of changelog entries written in a single
            database transaction.
          type: integer
        changelogPurgeBatchSize:
          description: Specifies the number of changelog entries purged in a single
            database transaction.
          type: integer
        changelogWriteQueueCapacity:
          description: Specifies the capacity of the changelog write queue in number
            of changes.
          type: integer
        indexIncludeAttribute:
          items:
            description: Specifies which attribute types are to be specifically included
              in the set of attribute indexes maintained on the changelog. If this
              property does not have any values then no attribute types are indexed.
            type: string
          type: array
        indexExcludeAttribute:
          items:
            description: Specifies which attribute types are to be specifically excluded
              from the set of attribute indexes maintained on the changelog. This
              property is useful when the index-include-attribute property contains
              one of the special values "*" and "+".
            type: string
          type: array
        changelogMaximumAge:
          description: Changes are guaranteed to be maintained in the changelog database
            for at least this duration. Setting target-database-size can allow additional
            changes to be maintained up to the configured size on disk.
          type: string
        targetDatabaseSize:
          description: The changelog database is allowed to grow up to this size on
            disk even if changes are older than the configured changelog-maximum-age.
          type: string
        changelogEntryIncludeBaseDN:
          items:
            description: The base DNs for branches in the data for which to record
              changes in the changelog.
            type: string
          type: array
        changelogEntryExcludeBaseDN:
          items:
            description: The base DNs for branches in the data for which no changelog
              records should be generated.
            type: string
          type: array
        changelogEntryIncludeFilter:
          items:
            description: "A filter that indicates which changelog entries should actually\
              \ be stored in the changelog. Note that this filter is evaluated against\
              \ the changelog entry itself and not against the entry that was the\
              \ target of the change referenced by the changelog entry. This filter\
              \ may target any attributes that appear in changelog entries with the\
              \ exception of the changeNumber and entry-size-bytes attributes, since\
              \ they will not be known at the time of the filter evaluation."
            type: string
          type: array
        changelogEntryExcludeFilter:
          items:
            description: "A filter that indicates which changelog entries should be\
              \ excluded from the changelog. Note that this filter is evaluated against\
              \ the changelog entry itself and not against the entry that was the\
              \ target of the change referenced by the changelog entry. This filter\
              \ may target any attributes that appear in changelog entries with the\
              \ exception of the changeNumber and entry-size-bytes attributes, since\
              \ they will not be known at the time of the filter evaluation."
            type: string
          type: array
        changelogIncludeAttribute:
          items:
            description: Specifies which attribute types will be included in a changelog
              entry for ADD and MODIFY operations.
            type: string
          type: array
        changelogExcludeAttribute:
          items:
            description: Specifies a set of attribute types that should be excluded
              in a changelog entry for ADD and MODIFY operations.
            type: string
          type: array
        changelogDeletedEntryIncludeAttribute:
          items:
            description: Specifies a set of attribute types that should be included
              in a changelog entry for DELETE operations.
            type: string
          type: array
        changelogDeletedEntryExcludeAttribute:
          items:
            description: Specifies a set of attribute types that should be excluded
              from a changelog entry for DELETE operations.
            type: string
          type: array
        changelogIncludeKeyAttribute:
          items:
            description: Specifies which attribute types will be included in a changelog
              entry on every change.
            type: string
          type: array
        changelogMaxBeforeAfterValues:
          description: "This controls whether all attribute values for a modified\
            \ attribute (even those values that have not changed) will be included\
            \ in the changelog entry. If the number of attribute values does not exceed\
            \ this limit, then all values for the modified attribute will be included\
            \ in the changelog entry."
          type: integer
        writeLastmodAttributes:
          description: "Specifies whether values of creatorsName, createTimestamp,\
            \ modifiersName and modifyTimestamp attributes will be written to changelog\
            \ entries."
          type: boolean
        useReversibleForm:
          description: Specifies whether the changelog should provide enough information
            to be able to revert the changes if desired.
          type: boolean
        includeVirtualAttributes:
          items:
            $ref: '#/components/schemas/Enumbackend-includeVirtualAttributesProp'
          type: array
        applyAccessControlsToChangelogEntryContents:
          description: "Indicates whether the contents of changelog entries should\
            \ be subject to access control and sensitive attribute evaluation such\
            \ that the contents of attributes like changes, deletedEntryAttrs, ds-changelog-entry-key-attr-values,\
            \ ds-changelog-before-values, and ds-changelog-after-values may be altered\
            \ based on attributes the user can see in the target entry."
          type: boolean
        reportExcludedChangelogAttributes:
          $ref: '#/components/schemas/Enumbackend-reportExcludedChangelogAttributesProp'
        softDeleteEntryIncludedOperation:
          items:
            $ref: '#/components/schemas/Enumbackend-softDeleteEntryIncludedOperationProp'
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - changelogMaximumAge
      - enabled
      - schemas
      - writabilityMode
      type: object
    Enumchangelog-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:changelog
      type: string
    monitor-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummonitor-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - schemas
      - writabilityMode
      type: object
    Enummonitor-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:monitor
      type: string
    add-local-db-backend-request:
      allOf:
      - $ref: '#/components/schemas/add_local_db_backend_request_allOf'
      - $ref: '#/components/schemas/local-db-backend-shared'
    local-db-backend-response:
      allOf:
      - $ref: '#/components/schemas/local_db_backend_response_allOf'
      - $ref: '#/components/schemas/local-db-backend-shared'
    local-db-backend-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlocal-db-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        uncachedId2entryCacheMode:
          $ref: '#/components/schemas/Enumbackend-uncachedId2entryCacheModeProp'
        uncachedAttributeCriteria:
          description: The criteria that will be used to identify attributes that
            should be written into the uncached-id2entry database rather than the
            id2entry database. This will only be used for entries in which the associated
            uncached-entry-criteria does not indicate that the entire entry should
            be uncached.
          type: string
        uncachedEntryCriteria:
          description: The criteria that will be used to identify entries that should
            be written into the uncached-id2entry database rather than the id2entry
            database.
          type: string
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertForUntrustedIndex:
          description: Determines whether the Directory Server enters a DEGRADED state
            when this Local DB Backend has an index whose contents cannot be trusted.
          type: boolean
        returnUnavailableForUntrustedIndex:
          description: Determines whether the Directory Server returns UNAVAILABLE
            for any LDAP search operation in this Local DB Backend that would use
            an index whose contents cannot be trusted.
          type: boolean
        processFiltersWithUndefinedAttributeTypes:
          description: Determines whether the Directory Server should continue filter
            processing for LDAP search operations in this Local DB Backend that includes
            a search filter with an attribute that is not defined in the schema. This
            will only apply if check-schema is enabled in the global configuration.
          type: boolean
        isPrivateBackend:
          description: Indicates whether this backend should be considered a private
            backend in the server. Private backends are meant for storing server-internal
            information and should not be used for user or application data.
          type: boolean
        dbDirectory:
          description: Specifies the path to the filesystem directory that is used
            to hold the Berkeley DB Java Edition database files containing the data
            for this backend. The files for this backend are stored in a sub-directory
            named after the backend-id.
          type: string
        dbDirectoryPermissions:
          description: Specifies the permissions that should be applied to the directory
            containing the backend database files and to directories and files created
            during backup or LDIF export of the backend.
          type: string
        compactCommonParentDN:
          items:
            description: Provides a DN of an entry that may be the parent for a large
              number of entries in the backend. This may be used to help increase
              the space efficiency when encoding entries for storage.
            type: string
          type: array
        compressEntries:
          description: Indicates whether the backend should attempt to compress entries
            before storing them in the database.
          type: boolean
        hashEntries:
          description: "Indicates whether to calculate and store a message digest\
            \ of the entry contents along with the entry data, in order to provide\
            \ a means of verifying the integrity of the entry data."
          type: boolean
        dbNumCleanerThreads:
          description: Specifies the number of threads that the backend should maintain
            to keep the database log files at or near the desired utilization. A value
            of zero indicates that the number of cleaner threads should be automatically
            configured based on the number of available CPUs.
          type: integer
        dbCleanerMinUtilization:
          description: Specifies the minimum percentage of "live" data that the database
            cleaner attempts to keep in database log files.
          type: integer
        dbEvictorCriticalPercentage:
          description: "Specifies the percentage over the configured maximum that\
            \ the database cache is allowed to grow. It is recommended to set this\
            \ value slightly above zero when the database is too large to fully cache\
            \ in memory. In this case, a dedicated background evictor thread is used\
            \ to perform evictions once the cache fills up reducing the possibility\
            \ that server threads are blocked."
          type: integer
        dbCheckpointerWakeupInterval:
          description: Specifies the maximum length of time that should pass between
            checkpoints.
          type: string
        dbBackgroundSyncInterval:
          description: Specifies the interval to use when performing background synchronous
            writes in the database environment in order to smooth overall write performance
            and increase data durability. A value of "0 s" will disable background
            synchronous writes.
          type: string
        dbUseThreadLocalHandles:
          description: Indicates whether to use thread-local database handles to reduce
            contention in the backend.
          type: boolean
        dbLogFileMax:
          description: Specifies the maximum size for a database log file.
          type: string
        dbLoggingLevel:
          description: Specifies the log level that should be used by the database
            when it is writing information into the je.info file.
          type: string
        jeProperty:
          items:
            description: Specifies the database and environment properties for the
              Berkeley DB Java Edition database serving the data for this backend.
            type: string
          type: array
        dbCachePercent:
          description: Specifies the percentage of JVM memory to allocate to the database
            cache.
          type: integer
        defaultCacheMode:
          $ref: '#/components/schemas/Enumbackend-defaultCacheModeProp'
        id2entryCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2entryCacheModeProp'
        dn2idCacheMode:
          $ref: '#/components/schemas/Enumbackend-dn2idCacheModeProp'
        id2childrenCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2childrenCacheModeProp'
        id2subtreeCacheMode:
          $ref: '#/components/schemas/Enumbackend-id2subtreeCacheModeProp'
        dn2uriCacheMode:
          $ref: '#/components/schemas/Enumbackend-dn2uriCacheModeProp'
        primeMethod:
          items:
            $ref: '#/components/schemas/Enumbackend-primeMethodProp'
          type: array
        primeThreadCount:
          description: "Specifies the number of threads to use when priming. At present,\
            \ this applies only to the preload and cursor-across-indexes prime methods."
          type: integer
        primeTimeLimit:
          description: Specifies the maximum length of time that the backend prime
            should be allowed to run. A duration of zero seconds indicates that there
            should not be a time limit.
          type: string
        primeAllIndexes:
          description: "Indicates whether to prime all indexes associated with this\
            \ backend, or to only prime the specified set of indexes (as configured\
            \ with the system-index-to-prime property for the system indexes, and\
            \ the prime-index property in the attribute index definition for attribute\
            \ indexes)."
          type: boolean
        systemIndexToPrime:
          items:
            $ref: '#/components/schemas/Enumbackend-systemIndexToPrimeProp'
          type: array
        systemIndexToPrimeInternalNodesOnly:
          items:
            $ref: '#/components/schemas/Enumbackend-systemIndexToPrimeInternalNodesOnlyProp'
          type: array
        backgroundPrime:
          description: "Indicates whether to attempt to perform the prime using a\
            \ background thread if possible. If background priming is enabled, then\
            \ the Directory Server may be allowed to accept client connections and\
            \ process requests while the prime is in progress."
          type: boolean
        indexEntryLimit:
          description: Specifies the maximum number of entries that are allowed to
            match a given index key before that particular index key is no longer
            maintained.
          type: integer
        compositeIndexEntryLimit:
          description: Specifies the maximum number of entries that are allowed to
            match a given composite index key before that particular composite index
            key is no longer maintained.
          type: integer
        id2childrenIndexEntryLimit:
          description: "Specifies the maximum number of entry IDs to maintain for\
            \ each entry in the id2children system index (which keeps track of the\
            \ immediate children for an entry, to assist in otherwise unindexed searches\
            \ with a single-level scope). A value of 0 means there is no limit, however\
            \ this could have a big impact on database size on disk and on server\
            \ performance."
          type: integer
        id2subtreeIndexEntryLimit:
          description: "Specifies the maximum number of entry IDs to maintain for\
            \ each entry in the id2subtree system index (which keeps track of all\
            \ descendants below an entry, to assist in otherwise unindexed searches\
            \ with a whole-subtree or subordinate subtree scope). A value of 0 means\
            \ there is no limit, however this could have a big impact on database\
            \ size on disk and on server performance."
          type: integer
        importTempDirectory:
          description: Specifies the location of the directory that is used to hold
            temporary information during the index post-processing phase of an LDIF
            import.
          type: string
        importThreadCount:
          description: Specifies the number of threads to use for concurrent processing
            during an LDIF import.
          type: integer
        exportThreadCount:
          description: Specifies the number of threads to use for concurrently retrieving
            and encoding entries during an LDIF export.
          type: integer
        dbImportCachePercent:
          description: The percentage of JVM memory to allocate to the database cache
            during import operations.
          type: integer
        dbTxnWriteNoSync:
          description: Indicates whether the database should synchronously flush data
            as it is written to disk.
          type: boolean
        deadlockRetryLimit:
          description: Specifies the number of times that the server should retry
            an attempted operation in the backend if a deadlock results from two concurrent
            requests that interfere with each other in a conflicting manner.
          type: integer
        externalTxnDefaultBackendLockBehavior:
          $ref: '#/components/schemas/Enumbackend-externalTxnDefaultBackendLockBehaviorProp'
        singleWriterLockBehavior:
          $ref: '#/components/schemas/Enumbackend-singleWriterLockBehaviorProp'
        subtreeDeleteSizeLimit:
          description: Specifies the maximum number of entries that may be deleted
            from the backend when using the subtree delete control.
          type: integer
        numRecentChanges:
          description: Specifies the number of recent LDAP entry changes per replica
            for which the backend keeps a record to allow replication to recover in
            the event that the server is abruptly terminated. Increasing this value
            can lead to an increased peak server modification rate as well as increased
            replication throughput.
          type: integer
        offlineProcessDatabaseOpenTimeout:
          description: "Specifies a timeout duration which will be used for opening\
            \ the database environment by an offline process, such as export-ldif."
          type: string
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - dbDirectory
      - enabled
      - importTempDirectory
      - schemas
      - writabilityMode
      type: object
    Enumlocal-db-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:local-db
      type: string
    metrics-backend-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummetrics-backendSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backendID:
          description: Specifies a name to identify the associated backend.
          type: string
        storageDir:
          description: Specifies the path to the directory that will be used to store
            queued samples.
          type: string
        metricsDir:
          description: Specifies the path to the directory that contains metric definitions.
          type: string
        sampleFlushInterval:
          description: Period when samples are flushed to disk.
          type: string
        retentionPolicy:
          items:
            description: The retention policy to use for the Metrics Backend .
            type: string
          type: array
        description:
          description: A description for this Backend
          type: string
        enabled:
          description: Indicates whether the backend is enabled in the server.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DN(s) for the data that the backend handles.
            type: string
          type: array
        writabilityMode:
          $ref: '#/components/schemas/Enumbackend-writabilityModeProp'
        setDegradedAlertWhenDisabled:
          description: Determines whether the Directory Server enters a DEGRADED state
            (and sends a corresponding alert) when this Backend is disabled.
          type: boolean
        returnUnavailableWhenDisabled:
          description: Determines whether any LDAP operation that would use this Backend
            is to return UNAVAILABLE when this Backend is disabled.
          type: boolean
        backupFilePermissions:
          description: Specifies the permissions that should be applied to files and
            directories created by a backup of the backend.
          type: string
        notificationManager:
          description: Specifies a notification manager for changes resulting from
            operations processed through this Backend
          type: string
      required:
      - backendID
      - baseDN
      - enabled
      - metricsDir
      - retentionPolicy
      - schemas
      - storageDir
      - writabilityMode
      type: object
    Enummetrics-backendSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:backend:metrics
      type: string
    Enumbackend-softDeleteEntryIncludedOperationProp:
      description: Specifies which operations performed on soft-deleted entries will
        appear in the changelog.
      enum:
      - modify
      - delete
      type: string
    Enumbackend-writabilityModeProp:
      description: Specifies the behavior that the backend should use when processing
        write operations.
      enum:
      - enabled
      - disabled
      - internal-only
      type: string
    Enumbackend-includeVirtualAttributesProp:
      description: Specifies the changelog entry elements (if any) in which virtual
        attributes should be included.
      enum:
      - add-attributes
      - deleted-entry-attributes
      - before-and-after-values
      - key-attribute-values
      type: string
    Enumbackend-uncachedId2entryCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the uncached-id2entry database, which provides a way to store\
        \ complete or partial encoded entries with a different (and presumably less\
        \ memory-intensive) cache mode than records written to id2entry."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-primeMethodProp:
      description: Specifies the method that should be used to prime caches with data
        for this backend.
      enum:
      - none
      - preload
      - preload-internal-nodes-only
      - cursor-across-indexes
      - prime-to-filesystem-cache
      - prime-to-filesystem-cache-non-sequential
      type: string
    Enumbackend-defaultCacheModeProp:
      description: "Specifies the cache mode that should be used for any database\
        \ for which the cache mode is not explicitly specified. This includes the\
        \ id2entry database, which stores encoded entries, and all attribute indexes."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-externalTxnDefaultBackendLockBehaviorProp:
      description: "Specifies the default behavior that should be exhibited by external\
        \ transactions (e.g., an LDAP transaction or an atomic multi-update operation)\
        \ with regard to acquiring an exclusive lock in this backend."
      enum:
      - do-not-acquire
      - acquire-after-retries
      - acquire-before-retries
      - acquire-before-initial-attempt
      type: string
    Enumbackend-systemIndexToPrimeProp:
      description: Specifies which system index(es) should be primed when the backend
        is initialized.
      enum:
      - dn2id
      - id2entry
      - id2children
      - id2subtree
      - dn2uri
      type: string
    Enumbackend-singleWriterLockBehaviorProp:
      description: Specifies the condition under which to acquire a single-writer
        lock to ensure that the associated operation will be the only write in progress
        at the time the lock is held. The single-writer lock can help avoid problems
        that result from database lock conflicts that arise between two write operations
        being processed at the same time in the same backend. This will not have any
        effect on the read operations processed while the write is in progress.
      enum:
      - never-acquire
      - acquire-on-retry
      - always-acquire
      type: string
    Enumbackend-id2subtreeCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the id2subtree database, which provides a mapping between the\
        \ entry ID of a particular entry and the entry IDs of all of its children\
        \ to any depth. This index may be used when performing searches with a whole-subtree\
        \ or subordinate-subtree scope if the search filter cannot be resolved to\
        \ a small enough candidate list. The size of this database directly depends\
        \ on the number of entries that have children."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-systemIndexToPrimeInternalNodesOnlyProp:
      description: "Specifies the system index(es) for which internal database nodes\
        \ only (i.e., the database keys but not values) should be primed when the\
        \ backend is initialized."
      enum:
      - dn2id
      - id2entry
      - uncached-id2entry
      - id2children
      - id2subtree
      - dn2uri
      type: string
    Enumbackend-dn2uriCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the dn2uri database, which provides a mapping between a normalized\
        \ entry DN and a set of referral URLs contained in the associated smart referral\
        \ entry."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-dn2idCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the dn2id database, which provides a mapping between normalized\
        \ entry DNs and the corresponding entry IDs."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-id2entryCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the id2entry database, which provides a mapping between entry\
        \ IDs and entry contents. Consider configuring uncached entries or uncached\
        \ attributes in lieu of changing from the \"cache-keys-and-values\" default\
        \ value."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-id2childrenCacheModeProp:
      description: "Specifies the cache mode that should be used when accessing the\
        \ records in the id2children database, which provides a mapping between the\
        \ entry ID of a particular entry and the entry IDs of all of its immediate\
        \ children. This index may be used when performing searches with a single-level\
        \ scope if the search filter cannot be resolved to a small enough candidate\
        \ list. The size of this database directly depends on the number of entries\
        \ that have children."
      enum:
      - cache-keys-and-values
      - cache-keys-only
      - no-caching
      - keep-hot
      - default
      - make-cold
      - evict-leaf-immediately
      - evict-bin-immediately
      type: string
    Enumbackend-reportExcludedChangelogAttributesProp:
      description: Indicates whether changelog entries that have been altered by applying
        access controls should include additional information about any attributes
        that may have been removed.
      enum:
      - none
      - attribute-counts
      - attribute-names
      type: string
    Enumbackend-disabledAlertTypeProp:
      description: Specifies the names of the alert types that should not be added
        to the backend. This can be used to suppress high volume alerts that might
        trigger hitting the max-alerts limit sooner than desired. Disabled alert types
        will not be sent out over persistent searches on this backend.
      enum:
      - access-control-change
      - access-control-disabled
      - access-control-enabled
      - access-control-parse-failure
      - access-log-criteria-matched
      - alarm-cleared
      - alarm-critical
      - alarm-major
      - alarm-minor
      - alarm-warning
      - backend-disabled
      - backend-initialization-failed
      - backup-failed
      - cannot-acquire-shared-backend-lock
      - cannot-copy-schema-files
      - cannot-decode-entry
      - cannot-find-recurring-task
      - cannot-register-backend
      - cannot-release-shared-backend-lock
      - cannot-rename-current-task-file
      - cannot-rename-new-task-file
      - cannot-restore-backup
      - cannot-schedule-recurring-task-iteration
      - cannot-write-configuration
      - cannot-write-new-schema-files
      - cannot-write-server-state-file
      - cannot-write-task-backing-file
      - config-change
      - console-logger-without-no-detach
      - crypto-manager-error
      - continuous-garbage-collection-detected
      - deadlock-detected
      - debug-logging-enabled
      - delegated-admin-configuration-errors
      - duplicate-alerts-suppressed
      - duplicate-error-alerts-suppressed
      - duplicate-fatal-alerts-suppressed
      - duplicate-info-alerts-suppressed
      - duplicate-warning-alerts-suppressed
      - embedded-postgresql-unavailable
      - entering-lockdown-mode
      - entry-references-removed-attribute-type
      - exec-task-launching-command
      - exploded-index-background-delete-cleanup-failed
      - exploded-index-background-delete-failed
      - external-config-file-edit-handled
      - external-config-file-edit-lost
      - external-server-initialization-failed
      - failed-to-apply-mirrored-configuration
      - file-retention-task-delete-failure
      - force-gc-complete
      - force-gc-starting
      - global-index-insufficient-disk-space-error
      - global-index-persistence-error
      - global-index-read-error
      - global-referential-integrity-update-failure
      - globally-unique-attribute-conflict
      - health-check-available-to-degraded
      - health-check-available-to-unavailable
      - health-check-degraded-to-available
      - health-check-degraded-to-unavailable
      - health-check-unavailable-to-available
      - health-check-unavailable-to-degraded
      - http-connection-handler-duplicate-context-path
      - http-connection-handler-duplicate-servlet-extension
      - index-corrupt
      - index-degraded
      - index-rebuild-completed
      - index-rebuild-in-progress
      - insecure-access-token-validator-enabled
      - invalid-privilege
      - je-background-sync-failed
      - je-cleaner-disabled
      - je-daemon-thread-exception
      - je-environment-not-closed-cleanly
      - je-recovery-required
      - jvm-misconfiguration
      - large-attribute-update-failure
      - lba-no-available-servers
      - ldap-connection-handler-cannot-listen
      - ldap-connection-handler-consecutive-failures
      - ldap-connection-handler-uncaught-error
      - ldif-backend-cannot-write
      - ldif-connection-handler-parse-error
      - ldif-connection-handler-io-error
      - leaving-lockdown-mode
      - log-file-rotation-listener-invoke-error
      - log-file-rotation-listener-processing-takes-too-long
      - logging-error
      - low-disk-space-error
      - low-disk-space-warning
      - mirrored-subtree-manager-forced-as-master-error
      - mirrored-subtree-manager-forced-as-master-warning
      - mirrored-subtree-manager-no-master-found
      - mirrored-subtree-server-not-in-topology
      - mirrored-subtree-manager-operation-error
      - mirrored-subtree-manager-failed-outbound-connection
      - mirrored-subtree-manager-connection-asymmetry
      - missing-schema-elements-referenced-by-backend
      - monitoring-endpoint-unable-to-connect
      - no-enabled-alert-handlers
      - offline-config-change-detected
      - out-of-disk-space-error
      - pdp-unavailable
      - pdp-trust-framework-version-deprecated
      - proxy-entry-balancing-operation-failure
      - proxy-entry-balancing-error-multiple-operations-succeeded
      - proxy-entry-rebalancing-admin-action-required
      - replication-backlogged
      - replication-metadata-decode-failure
      - replication-missing-changes
      - replication-monitor-data-unavailable
      - replication-plugin-message-serialization-failure
      - replication-server-changelog-failure
      - replication-server-listen-failure
      - replication-unresolved-conflict
      - replication-unsent-changes
      - replication-replay-failed
      - restart-required
      - schema-checking-disabled
      - scim-lookthrough-limit-exceeded
      - restricted-subtree-accessibility
      - server-shutting-down
      - server-starting
      - server-started
      - subtree-delete-interrupted
      - sync-resource-connection-error
      - sync-resource-operation-error
      - sync-pipe-initialization-error
      - sync-pipe-backlog-above-threshold
      - sync-pipe-backlog-below-threshold
      - system-nanotime-stopped
      - system-current-time-shifted
      - task-started
      - task-completed
      - task-failed
      - third-party-extension-exception
      - thread-exit-holding-lock
      - threshold-warning-entry
      - threshold-warning-exit
      - threshold-critical-entry
      - threshold-critical-exit
      - topology-registry-secret-key-deleted
      - uncaught-exception
      - unindexed-internal-search
      - unique-attribute-sync-conflict
      - unique-attribute-sync-error
      - uniqueness-control-post-commit-conflict
      - unlicensed-product
      - unrecognized-alert-type
      - user-defined-error
      - user-defined-fatal
      - user-defined-info
      - user-defined-warning
      - worker-thread-caught-error
      - work-queue-backlogged
      - work-queue-full
      - work-queue-no-threads-remaining
      - server-jvm-paused
      - sensitive-trace-data-logged-warning
      - replication-generation-id-mismatch
      - account-temporarily-locked-account-status-notification
      - account-permanently-locked-account-status-notification
      - account-unlocked-account-status-notification
      - account-idle-locked-account-status-notification
      - account-reset-locked-account-status-notification
      - account-disabled-account-status-notification
      - account-enabled-account-status-notification
      - account-not-yet-active-account-status-notification
      - account-expired-account-status-notification
      - password-expired-account-status-notification
      - password-expiring-account-status-notification
      - password-reset-account-status-notification
      - password-changed-account-status-notification
      - account-created-account-status-notification
      - account-updated-account-status-notification
      - bind-password-failed-validation-account-status-notification
      - must-change-password-account-status-notification
      - privilege-assigned
      - insecure-request-rejected
      - incremental-backups-deprecated
      - replace-certificate-succeeded
      - replace-certificate-failed
      type: string
    attribute-type-description-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumattribute-type-description-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        stripSyntaxMinUpperBound:
          description: Indicates whether the suggested minimum upper bound appended
            to an attribute's syntax OID in its schema definition Attribute Type Description
            should be stripped.
          type: boolean
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumattribute-type-description-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:attribute-type-description
      type: string
    directory-string-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdirectory-string-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allowZeroLengthValues:
          description: "Indicates whether zero-length (that is, an empty string) values\
            \ are allowed."
          type: boolean
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumdirectory-string-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:directory-string
      type: string
    telephone-number-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtelephone-number-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        strictFormat:
          description: Indicates whether to require telephone number values to strictly
            comply with the standard definition for this syntax.
          type: boolean
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumtelephone-number-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:telephone-number
      type: string
    distinguished-name-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdistinguished-name-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumdistinguished-name-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:distinguished-name
      type: string
    generalized-time-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgeneralized-time-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumgeneralized-time-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:generalized-time
      type: string
    integer-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enuminteger-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enuminteger-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:integer
      type: string
    uuid-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumuuid-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumuuid-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:uuid
      type: string
    json-object-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-object-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumjson-object-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:json-object
      type: string
    user-password-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumuser-password-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumuser-password-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:user-password
      type: string
    boolean-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumboolean-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumboolean-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:boolean
      type: string
    hex-string-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhex-string-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumhex-string-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:hex-string
      type: string
    bit-string-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbit-string-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumbit-string-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:bit-string
      type: string
    ldap-url-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldap-url-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        strictFormat:
          description: "Indicates whether values for attributes with this syntax will\
            \ be required to be in the valid LDAP URL format. If this is set to false,\
            \ then arbitrary strings will be allowed."
          type: boolean
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumldap-url-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:ldap-url
      type: string
    name-and-optional-uid-attribute-syntax-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumname-and-optional-uid-attribute-syntaxSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enableCompaction:
          description: Indicates whether values of attributes with this syntax should
            be compacted when stored in a local DB database.
          type: boolean
        includeAttributeInCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should be compacted. If one or more\
              \ include attributes are specified, then only those attributes will\
              \ have their values compacted. If not set then all attributes will have\
              \ their values compacted. The exclude-attribute-from-compaction property\
              \ takes precedence over this property."
            type: string
          type: array
        excludeAttributeFromCompaction:
          items:
            description: "Specifies the specific attributes (which should be associated\
              \ with this syntax) whose values should not be compacted. If one or\
              \ more exclude attributes are specified, then values of those attributes\
              \ will not have their values compacted. This property takes precedence\
              \ over the include-attribute-in-compaction property."
            type: string
          type: array
        enabled:
          description: Indicates whether the Attribute Syntax is enabled.
          type: boolean
        requireBinaryTransfer:
          description: "Indicates whether values of this attribute are required to\
            \ have a \"binary\" transfer option as described in RFC 4522. Attributes\
            \ with this syntax will generally be referenced with names including \"\
            ;binary\" (e.g., \"userCertificate;binary\")."
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumname-and-optional-uid-attribute-syntaxSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:attribute-syntax:name-and-optional-uid
      type: string
    high-throughput-work-queue-response:
      example:
        expensiveOperationMinimumDumpInterval: expensiveOperationMinimumDumpInterval
        expensiveOperationMinimumConcurrentCount: 7
        maxQueueTime: maxQueueTime
        expensiveOperationCheckInterval: expensiveOperationCheckInterval
        maxWorkQueueCapacity: 2
        monitorQueueTime: true
        maxOfferTime: maxOfferTime
        numAdministrativeSessionWorkerThreads: 1
        schemas:
        - null
        numQueues: 5
        numWriteQueues: 5
        numWriteWorkerThreads: 6
        numWorkerThreads: 0
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhigh-throughput-work-queueSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        numWorkerThreads:
          description: Specifies the total number of worker threads that should be
            used within the server in order to process requested operations. The worker
            threads will be split evenly across all of the configured queues.
          type: integer
        numWriteWorkerThreads:
          description: "Specifies the number of worker threads that should be used\
            \ within the server to process write (add, delete, modify, and modify\
            \ DN) operations. If this is specified, then separate sets of worker threads\
            \ will be used for processing read and write operations, and the value\
            \ of the num-worker-threads property will reflect the number of threads\
            \ to use to process read operations."
          type: integer
        numAdministrativeSessionWorkerThreads:
          description: "Specifies the number of worker threads that should be used\
            \ to process operations as part of an administrative session. These threads\
            \ may be reserved only for special use by management applications like\
            \ dsconfig, the administration console, and other administrative tools,\
            \ so that these applications may be used to diagnose problems and take\
            \ any necessary corrective action even if all \"normal\" worker threads\
            \ are busy processing other requests."
          type: integer
        numQueues:
          description: Specifies the number of blocking queues that should be maintained.
            A value of zero indicates that the server should attempt to automatically
            select an optimal value (one queue for every two worker threads).
          type: integer
        numWriteQueues:
          description: "Specifies the number of blocking queues that should be maintained\
            \ for write operations. This will only be used if a value is specified\
            \ for the num-write-worker-threads property, in which case the num-queues\
            \ property will specify the number of queues for read operations. Otherwise,\
            \ all operations will be processed by a common set of worker threads and\
            \ the value of the num-queues property will specify the number of queues\
            \ for all types of operations."
          type: integer
        maxWorkQueueCapacity:
          description: Specifies the maximum number of pending operations that may
            be held in any of the queues at any given time. The total number of pending
            requests may be as large as this value times the total number of queues.
          type: integer
        maxOfferTime:
          description: "Specifies the maximum length of time that the connection handler\
            \ should be allowed to wait to enqueue a request if the work queue is\
            \ full. If the attempt to enqueue an operation does not succeed within\
            \ this period of time, then the operation will be rejected and an error\
            \ response will be returned to the client. A value of zero indicates that\
            \ operations should be rejected immediately if the work queue is already\
            \ at its maximum capacity."
          type: string
        monitorQueueTime:
          description: Indicates whether the work queue should monitor the length
            of time that operations are held in the queue. When enabled the queue
            time will be included with access log messages as "qtime" in milliseconds.
          type: boolean
        maxQueueTime:
          description: "Specifies the maximum length of time that an operation should\
            \ be allowed to wait on the work queue. If an operation has been waiting\
            \ on the queue longer than this period of time, then it will receive an\
            \ immediate failure result rather than being processed once it has been\
            \ handed off to a worker thread. A value of zero seconds indicates that\
            \ there should not be any maximum queue time imposed. This setting will\
            \ only be used if the monitor-queue-time property has a value of true."
          type: string
        expensiveOperationCheckInterval:
          description: "The interval that the work queue should use when checking\
            \ for potentially expensive operations. If at least expensive-operation-minimum-concurrent-count\
            \ worker threads are found to be processing the same operation on two\
            \ consecutive polls separated by this time interval (i.e., the worker\
            \ thread has been processing that operation for at least this length of\
            \ time, and potentially up to twice this length of time), then a stack\
            \ trace of all running threads will be written to a file for analysis\
            \ to provide potentially useful information that may help better understand\
            \ the reason it is taking so long. It may be that the operation is simply\
            \ an expensive one to process, but there may be other external factors\
            \ (e.g., a database checkpoint, a log rotation, lock contention, etc.)\
            \ that could be to blame. This option is primarily intended for debugging\
            \ purposes and should generally be used under the direction of Ping Identity\
            \ support."
          type: string
        expensiveOperationMinimumConcurrentCount:
          description: "The minimum number of concurrent expensive operations that\
            \ should be detected to trigger dumping stack traces for all threads.\
            \ If at least this number of worker threads are seen processing the same\
            \ operations in two consecutive intervals, then the server will dump a\
            \ stack trace of all threads to a file. This option is primarily intended\
            \ for debugging purposes and should generally be used under the direction\
            \ of Ping Identity support."
          type: integer
        expensiveOperationMinimumDumpInterval:
          description: The minimum length of time that should be required to pass
            after dumping stack trace information for all threads before the server
            should be allowed to create a second dump. This will help prevent the
            server from dumping stack traces too frequently and eventually consuming
            all available disk space with stack trace log output. This option is primarily
            intended for debugging purposes and should generally be used under the
            direction of Ping Identity support.
          type: string
      type: object
    Enumhigh-throughput-work-queueSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:work-queue:high-throughput
      type: string
    add-default-uncached-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/default-uncached-entry-criteria-shared'
    default-uncached-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdefault-uncached-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Uncached Entry Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Entry Criteria is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumdefault-uncached-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:default
      type: string
    add-last-access-time-uncached-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-shared'
    last-access-time-uncached-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlast-access-time-uncached-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        accessTimeThreshold:
          description: Specifies the maximum length of time that has passed since
            an entry was last accessed that it should still be included in the id2entry
            database. Entries that have not been accessed in more than this length
            of time may be written into the uncached-id2entry database.
          type: string
        description:
          description: A description for this Uncached Entry Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Entry Criteria is enabled for
            use in the server.
          type: boolean
      required:
      - accessTimeThreshold
      - enabled
      - schemas
      type: object
    Enumlast-access-time-uncached-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:last-access-time
      type: string
    add-filter-based-uncached-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
    filter-based-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-shared'
    filter-based-uncached-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfilter-based-uncached-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        filter:
          description: Specifies the search filter that should be used to differentiate
            entries into cached and uncached sets.
          type: string
        filterIdentifiesUncachedEntries:
          description: Indicates whether the associated filter identifies those entries
            which should be stored in the uncached-id2entry database (if true) or
            entries which should be stored in the id2entry database (if false).
          type: boolean
        description:
          description: A description for this Uncached Entry Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Entry Criteria is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - filter
      - filterIdentifiesUncachedEntries
      - schemas
      type: object
    Enumfilter-based-uncached-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:filter-based
      type: string
    add-groovy-scripted-uncached-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-shared'
    groovy-scripted-uncached-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Uncached Entry Criteria.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Uncached Entry Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Uncached Entry Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Entry Criteria is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-uncached-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:groovy-scripted
      type: string
    add-third-party-uncached-entry-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_default_uncached_entry_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-response:
      allOf:
      - $ref: '#/components/schemas/default_uncached_entry_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-shared'
    third-party-uncached-entry-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-uncached-entry-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Uncached Entry Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Uncached Entry Criteria. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Uncached Entry Criteria
          type: string
        enabled:
          description: Indicates whether this Uncached Entry Criteria is enabled for
            use in the server.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-uncached-entry-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:uncached-entry-criteria:third-party
      type: string
    delegated-admin-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        basicAuthEnabled:
          description: "Enables HTTP Basic authentication, using a username and password.\
            \ The Identity Mapper specified by the identity-mapper property will be\
            \ used to map the username to a DN."
          type: boolean
        identityMapper:
          description: Specifies the Identity Mapper that is to be used for associating
            user entries with basic authentication user names.
          type: string
        accessTokenValidator:
          items:
            description: "If specified, the Access Token Validator(s) that may be\
              \ used to validate access tokens for requests submitted to this Delegated\
              \ Admin HTTP Servlet Extension."
            type: string
          type: array
        accessTokenScope:
          description: The name of a scope that must be present in an access token
            accepted by the Delegated Admin HTTP Servlet Extension.
          type: string
        audience:
          description: A string or URI that identifies the Delegated Admin HTTP Servlet
            Extension in the context of OAuth2 authorization.
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      type: object
    Enumdelegated-admin-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:delegated-admin
      type: string
    add-quickstart-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-shared'
    quickstart-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-shared'
    quickstart-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumquickstart-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        server:
          description: Specifies the PingFederate server to be configured.
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      type: object
    Enumquickstart-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:quickstart
      type: string
    add-groovy-scripted-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-shared'
    groovy-scripted-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-shared'
    groovy-scripted-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted HTTP Servlet Extension.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted HTTP Servlet Extension. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:groovy-scripted
      type: string
    add-availability-state-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-shared'
    availability-state-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-shared'
    availability-state-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumavailability-state-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseContextPath:
          description: Specifies the base context path that HTTP clients should use
            to access this servlet. The value must start with a forward slash and
            must represent a valid HTTP context path.
          type: string
        availableStatusCode:
          description: Specifies the HTTP status code that the servlet should return
            if the server considers itself to be available.
          type: integer
        degradedStatusCode:
          description: Specifies the HTTP status code that the servlet should return
            if the server considers itself to be degraded.
          type: integer
        unavailableStatusCode:
          description: Specifies the HTTP status code that the servlet should return
            if the server considers itself to be unavailable.
          type: integer
        overrideStatusCode:
          description: "Specifies a HTTP status code that the servlet should always\
            \ return, regardless of the server's availability. If this value is defined,\
            \ it will override the availability-based return codes."
          type: integer
        includeResponseBody:
          description: Indicates whether the response should include a body that is
            a JSON object.
          type: boolean
        additionalResponseContents:
          description: "A JSON-formatted string containing additional fields to be\
            \ returned in the response body. For example, an additional-response-contents\
            \ value of '{ \"key\": \"value\" }' would add the key and value to the\
            \ root of the JSON response body."
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - availableStatusCode
      - baseContextPath
      - degradedStatusCode
      - schemas
      - unavailableStatusCode
      type: object
    Enumavailability-state-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:availability-state
      type: string
    add-file-server-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/file-server-http-servlet-extension-shared'
    file-server-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/file-server-http-servlet-extension-shared'
    file-server-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-server-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseContextPath:
          description: Specifies the base context path that should be used by HTTP
            clients to reference content. The value must start with a forward slash
            and must represent a valid HTTP context path.
          type: string
        documentRootDirectory:
          description: "Specifies the path to the directory on the local filesystem\
            \ containing the files to be served by this File Server HTTP Servlet Extension.\
            \ The path must exist, and it must be a directory."
          type: string
        enableDirectoryIndexing:
          description: "Indicates whether to generate a default HTML page with a listing\
            \ of available files if the requested path refers to a directory rather\
            \ than a file, and that directory does not contain an index file."
          type: boolean
        indexFile:
          items:
            description: Specifies the name of a file whose contents may be returned
              to the client if the requested path refers to a directory rather than
              a file.
            type: string
          type: array
        mimeTypesFile:
          description: Specifies the path to a file that contains MIME type mappings
            that will be used to determine the appropriate value to return for the
            Content-Type header based on the extension of the requested file.
          type: string
        defaultMIMEType:
          description: Specifies the default MIME type to use for the Content-Type
            header when a mapping cannot be found.
          type: string
        requireAuthentication:
          description: Indicates whether the servlet extension should only accept
            requests from authenticated clients.
          type: boolean
        allowedAuthenticationType:
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-allowedAuthenticationTypeProp'
          type: array
        accessTokenValidator:
          items:
            description: The access token validators that may be used to verify the
              authenticity of an OAuth 2.0 bearer token.
            type: string
          type: array
        idTokenValidator:
          items:
            description: The ID token validators that may be used to verify the authenticity
              of an of an OpenID Connect ID token.
            type: string
          type: array
        requireFileServletAccessPrivilege:
          description: Indicates whether the servlet extension should only accept
            requests from authenticated clients that have the file-servlet-access
            privilege.
          type: boolean
        requireGroup:
          items:
            description: "The DN of a group whose members will be permitted to access\
              \ to the associated files. If multiple group DNs are configured, then\
              \ anyone who is a member of at least one of those groups will be granted\
              \ access."
            type: string
          type: array
        identityMapper:
          description: The identity mapper that will be used to identify the entry
            with which a username is associated.
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - baseContextPath
      - documentRootDirectory
      - schemas
      type: object
    Enumfile-server-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:file-server
      type: string
    velocity-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvelocity-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseContextPath:
          description: The context path to use to access all template-based and static
            content. The value must start with a forward slash and must represent
            a valid HTTP context path.
          type: string
        staticContextPath:
          description: "The path below the base context path by which static, non-template\
            \ content such as images, CSS, and Javascript files are accessible."
          type: string
        staticContentDirectory:
          description: "Specifies the base directory in which static, non-template\
            \ content such as images, CSS, and Javascript files are stored on the\
            \ filesystem."
          type: string
        staticCustomDirectory:
          description: "Specifies the base directory in which custom static, non-template\
            \ content such as images, CSS, and Javascript files are stored on the\
            \ filesystem. Files in this directory will override those with the same\
            \ name in the directory specified by the static-content-directory property."
          type: string
        templateDirectory:
          items:
            description: Specifies an ordered list of directories in which to search
              for the template files.
            type: string
          type: array
        exposeRequestAttributes:
          description: Specifies whether the HTTP request will be exposed to templates.
          type: boolean
        exposeSessionAttributes:
          description: Specifies whether the HTTP session will be exposed to templates.
          type: boolean
        exposeServerContext:
          description: Specifies whether a server context will be exposed under context
            key 'ubid_server' for all template contexts.
          type: boolean
        allowContextOverride:
          description: Indicates whether context providers may override existing context
            objects with new values.
          type: boolean
        mimeTypesFile:
          description: Specifies the path to a file that contains MIME type mappings
            that will be used to determine the appropriate value to return for the
            Content-Type header based on the extension of the requested static content
            file.
          type: string
        defaultMIMEType:
          description: Specifies the default value that will be used in the response's
            Content-Type header that indicates the type of content to return.
          type: string
        characterEncoding:
          description: Specifies the value that will be used for all responses' Content-Type
            headers' charset parameter that indicates the character encoding of the
            document.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all template page requests.
            type: string
          type: array
        staticResponseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for static content requests such as images and scripts.
            type: string
          type: array
        requireAuthentication:
          description: Require authentication when accessing Velocity templates.
          type: boolean
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            for associating basic authentication credentials with user entries.
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - baseContextPath
      - schemas
      - templateDirectory
      type: object
    Enumvelocity-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:velocity
      type: string
    consent-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconsent-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        bearerTokenAuthEnabled:
          description: Enables HTTP bearer token authentication.
          type: boolean
        basicAuthEnabled:
          description: "Enables HTTP Basic authentication, using a username and password.\
            \ The Identity Mapper specified by the identity-mapper property will be\
            \ used to map the username to a DN."
          type: boolean
        identityMapper:
          description: Specifies the Identity Mapper that is to be used for associating
            basic authentication usernames with DNs.
          type: string
        accessTokenValidator:
          items:
            description: "If specified, the Access Token Validator(s) that may be\
              \ used to validate access tokens for requests submitted to this Consent\
              \ HTTP Servlet Extension."
            type: string
          type: array
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      type: object
    Enumconsent-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:consent
      type: string
    config-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconfig-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            for associating user entries with basic authentication user names.
          type: string
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      type: object
    Enumconfig-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:config
      type: string
    scim2-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumscim2-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        baseContextPath:
          description: The context path to use to access the SCIM 2.0 interface. The
            value must start with a forward slash and must represent a valid HTTP
            context path.
          type: string
        accessTokenValidator:
          items:
            description: "If specified, the Access Token Validator(s) that may be\
              \ used to validate access tokens for requests submitted to this SCIM2\
              \ HTTP Servlet Extension."
            type: string
          type: array
        mapAccessTokensToLocalUsers:
          $ref: '#/components/schemas/Enumhttp-servlet-extension-mapAccessTokensToLocalUsersProp'
        debugEnabled:
          description: Enables debug logging of the SCIM 2.0 SDK. Debug messages will
            be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.broker.http.scim2.extension.SCIM2HTTPServletExtension.
          type: boolean
        debugLevel:
          $ref: '#/components/schemas/Enumhttp-servlet-extension-debugLevelProp'
        debugType:
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-debugTypeProp'
          type: array
        includeStackTrace:
          description: Indicates whether a stack trace of the thread which called
            the debug method should be included in debug log messages.
          type: boolean
        swaggerEnabled:
          description: Indicates whether the SCIM2 HTTP Servlet Extension will generate
            a Swagger specification document.
          type: boolean
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - baseContextPath
      - debugLevel
      - debugType
      - includeStackTrace
      - schemas
      type: object
    Enumscim2-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:scim2
      type: string
    directory-rest-api-http-servlet-extension-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdirectory-rest-api-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        basicAuthEnabled:
          description: "Enables HTTP Basic authentication, using a username and password.\
            \ The Identity Mapper specified by the identity-mapper property will be\
            \ used to map the username to a DN."
          type: boolean
        identityMapper:
          description: Specifies the Identity Mapper that is to be used for associating
            user entries with basic authentication usernames.
          type: string
        accessTokenValidator:
          items:
            description: "If specified, the Access Token Validator(s) that may be\
              \ used to validate access tokens for requests submitted to this Directory\
              \ REST API HTTP Servlet Extension."
            type: string
          type: array
        accessTokenScope:
          description: The name of a scope that must be present in an access token
            accepted by the Directory REST API HTTP Servlet Extension.
          type: string
        audience:
          description: A string or URI that identifies the Directory REST API HTTP
            Servlet Extension in the context of OAuth2 authorization.
          type: string
        maxPageSize:
          description: The maximum number of entries to be returned in one page of
            search results.
          type: integer
        schemasEndpointObjectclass:
          items:
            description: The list of object classes which will be returned by the
              schemas endpoint.
            type: string
          type: array
        defaultOperationalAttribute:
          items:
            description: A set of operational attributes that will be returned with
              entries by default.
            type: string
          type: array
        rejectExpansionAttribute:
          items:
            description: A set of attributes which the client is not allowed to provide
              for the expand query parameters. This should be used for attributes
              that could either have a large number of values or that reference entries
              that are very large like groups.
            type: string
          type: array
        allowedControl:
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-allowedControlProp'
          type: array
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - schemas
      type: object
    Enumdirectory-rest-api-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:directory-rest-api
      type: string
    add-ldap-mapped-scim-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-shared'
    ldap-mapped-scim-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-shared'
    ldap-mapped-scim-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldap-mapped-scim-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        OAuthTokenHandler:
          description: Specifies the OAuth Token Handler implementation that should
            be used to validate OAuth 2.0 bearer tokens when they are included in
            a SCIM request.
          type: string
        basicAuthEnabled:
          description: "Enables HTTP Basic authentication, using a username and password."
          type: boolean
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            to match the username included in the HTTP Basic authentication header
            to the corresponding user in the directory.
          type: string
        resourceMappingFile:
          description: The path to an XML file defining the resources supported by
            the SCIM interface and the SCIM-to-LDAP attribute mappings to use.
          type: string
        includeLDAPObjectclass:
          items:
            description: Specifies the LDAP object classes that should be exposed
              directly as SCIM resources.
            type: string
          type: array
        excludeLDAPObjectclass:
          items:
            description: Specifies the LDAP object classes that should be not be exposed
              directly as SCIM resources.
            type: string
          type: array
        includeLDAPBaseDN:
          items:
            description: Specifies the base DNs for the branches of the DIT that should
              be exposed via the Identity Access API.
            type: string
          type: array
        excludeLDAPBaseDN:
          items:
            description: Specifies the base DNs for the branches of the DIT that should
              not be exposed via the Identity Access API.
            type: string
          type: array
        entityTagLDAPAttribute:
          description: Specifies the LDAP attribute whose value should be used as
            the entity tag value to enable SCIM resource versioning support.
          type: string
        baseContextPath:
          description: The context path to use to access the SCIM interface. The value
            must start with a forward slash and must represent a valid HTTP context
            path.
          type: string
        temporaryDirectory:
          description: Specifies the location of the directory that is used to create
            temporary files containing SCIM request data.
          type: string
        temporaryDirectoryPermissions:
          description: Specifies the permissions that should be applied to the directory
            that is used to create temporary files.
          type: string
        maxResults:
          description: The maximum number of resources that are returned in a response.
          type: integer
        bulkMaxOperations:
          description: The maximum number of operations that are permitted in a bulk
            request.
          type: integer
        bulkMaxPayloadSize:
          description: The maximum payload size in bytes of a bulk request.
          type: string
        bulkMaxConcurrentRequests:
          description: The maximum number of bulk requests that may be processed concurrently
            by the server. Any bulk request that would cause this limit to be exceeded
            is rejected with HTTP status code 503.
          type: integer
        debugEnabled:
          description: Enables debug logging of the SCIM SDK. Debug messages will
            be forwarded to the Directory Server debug logger with the scope of com.unboundid.directory.server.extensions.scim.SCIMHTTPServletExtension.
          type: boolean
        debugLevel:
          $ref: '#/components/schemas/Enumhttp-servlet-extension-debugLevelProp'
        debugType:
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-extension-debugTypeProp'
          type: array
        includeStackTrace:
          description: Indicates whether a stack trace of the thread which called
            the debug method should be included in debug log messages.
          type: boolean
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - baseContextPath
      - debugLevel
      - debugType
      - includeStackTrace
      - schemas
      - temporaryDirectory
      - temporaryDirectoryPermissions
      type: object
    Enumldap-mapped-scim-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:ldap-mapped-scim
      type: string
    add-third-party-http-servlet-extension-request:
      allOf:
      - $ref: '#/components/schemas/add_quickstart_http_servlet_extension_request_allOf'
      - $ref: '#/components/schemas/third-party-http-servlet-extension-shared'
    third-party-http-servlet-extension-response:
      allOf:
      - $ref: '#/components/schemas/quickstart_http_servlet_extension_response_allOf'
      - $ref: '#/components/schemas/third-party-http-servlet-extension-shared'
    third-party-http-servlet-extension-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-http-servlet-extensionSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party HTTP Servlet Extension.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party HTTP Servlet Extension. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this HTTP Servlet Extension
          type: string
        crossOriginPolicy:
          description: The cross-origin request policy to use for the HTTP Servlet
            Extension.
          type: string
        responseHeader:
          items:
            description: Specifies HTTP header fields and values added to response
              headers for all requests.
            type: string
          type: array
        correlationIDResponseHeader:
          description: "Specifies the name of the HTTP response header that will contain\
            \ a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\"\
            , and \"X-Request-Id\"."
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-http-servlet-extensionSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-extension:third-party
      type: string
    Enumhttp-servlet-extension-debugLevelProp:
      description: The minimum debug level that should be used for messages to be
        logged.
      enum:
      - severe
      - warning
      - info
      - config
      - fine
      - finer
      - finest
      type: string
    Enumhttp-servlet-extension-debugTypeProp:
      description: The types of debug messages that should be logged.
      enum:
      - coding-error
      - exception
      - other
      type: string
    Enumhttp-servlet-extension-allowedAuthenticationTypeProp:
      description: The types of authentication that may be used to authenticate to
        the file servlet.
      enum:
      - basic
      - access-token
      - id-token
      type: string
    Enumhttp-servlet-extension-mapAccessTokensToLocalUsersProp:
      description: Indicates whether the SCIM2 servlet should attempt to map the presented
        access token to a local user.
      enum:
      - disabled
      - optional
      - required
      type: string
    Enumhttp-servlet-extension-allowedControlProp:
      description: Specifies the names of any request controls that should be allowed
        by the Directory REST API. Any request that contains a critical control not
        in this list will be rejected. Any non-critical request control which is not
        supported by the Directory REST API will be removed from the request.
      enum:
      - assertion
      - assured-replication
      - exclude-branch
      - generate-password
      - get-effective-rights
      - ignore-no-user-modification
      - intermediate-client
      - join
      - manage-dsa-it
      - matched-values
      - matching-entry-count
      - name-with-entryuuid
      - no-op
      - operation-purpose
      - password-update-behavior
      - password-validation-details
      - permissive-modify
      - permit-unindexed-search
      - post-read
      - pre-read
      - proxied-authorization-v1
      - proxied-authorization-v2
      - purge-password
      - real-attributes-only
      - reject-unindexed-search
      - retire-password
      - suppress-referential-integrity
      - uniqueness
      - virtual-attributes-only
      type: string
    add-client-connection-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_client_connection_policy_request_allOf'
      - $ref: '#/components/schemas/client-connection-policy-shared'
    client-connection-policy-response:
      allOf:
      - $ref: '#/components/schemas/client_connection_policy_response_allOf'
      - $ref: '#/components/schemas/client-connection-policy-shared'
    client-connection-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumclient-connection-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        policyID:
          description: Specifies a name which uniquely identifies this Client Connection
            Policy in the server.
          type: string
        description:
          description: A description for this Client Connection Policy
          type: string
        enabled:
          description: "Indicates whether this Client Connection Policy is enabled\
            \ for use in the server. If a Client Connection Policy is disabled, then\
            \ no new client connections will be associated with it."
          type: boolean
        evaluationOrderIndex:
          description: "Specifies the order in which Client Connection Policy definitions\
            \ will be evaluated. A Client Connection Policy with a lower index will\
            \ be evaluated before one with a higher index, and the first Client Connection\
            \ Policy evaluated which may apply to a client connection will be used\
            \ for that connection. Each Client Connection Policy must be assigned\
            \ a unique evaluation order index value."
          type: integer
        connectionCriteria:
          description: Specifies a set of connection criteria that must match the
            associated client connection for it to be associated with this Client
            Connection Policy.
          type: string
        terminateConnection:
          description: Indicates whether any client connection for which this Client
            Connection Policy is selected should be terminated. This makes it possible
            to define fine-grained criteria for clients that should not be allowed
            to connect to this Directory Server.
          type: boolean
        sensitiveAttribute:
          items:
            description: Provides the ability to indicate that some attributes should
              be considered sensitive and additional protection should be in place
              when interacting with those attributes.
            type: string
          type: array
        excludeGlobalSensitiveAttribute:
          items:
            description: Specifies the set of global sensitive attribute definitions
              that should not apply to this client connection policy.
            type: string
          type: array
        resultCodeMap:
          description: "Specifies the result code map that should be used for clients\
            \ associated with this Client Connection Policy. If a value is defined\
            \ for this property, then it will override any result code map referenced\
            \ in the global configuration."
          type: string
        includedBackendBaseDN:
          items:
            description: Specifies the set of backend base DNs for which subtree views
              should be included in this Client Connection Policy.
            type: string
          type: array
        excludedBackendBaseDN:
          items:
            description: Specifies the set of backend base DNs for which subtree views
              should be excluded from this Client Connection Policy.
            type: string
          type: array
        allowedOperation:
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedOperationProp'
          type: array
        requiredOperationRequestCriteria:
          description: "Specifies a request criteria object that will be required\
            \ to match all requests submitted by clients associated with this Client\
            \ Connection Policy. If a client submits a request that does not satisfy\
            \ this request criteria object, then that request will be rejected."
          type: string
        prohibitedOperationRequestCriteria:
          description: "Specifies a request criteria object that must not match any\
            \ requests submitted by clients associated with this Client Connection\
            \ Policy. If a client submits a request that satisfies this request criteria\
            \ object, then that request will be rejected."
          type: string
        allowedRequestControl:
          items:
            description: Specifies the OIDs of the controls that clients associated
              with this Client Connection Policy will be allowed to include in requests.
            type: string
          type: array
        deniedRequestControl:
          items:
            description: Specifies the OIDs of the controls that clients associated
              with this Client Connection Policy will not be allowed to include in
              requests.
            type: string
          type: array
        allowedExtendedOperation:
          items:
            description: Specifies the OIDs of the extended operations that clients
              associated with this Client Connection Policy will be allowed to request.
            type: string
          type: array
        deniedExtendedOperation:
          items:
            description: Specifies the OIDs of the extended operations that clients
              associated with this Client Connection Policy will not be allowed to
              request.
            type: string
          type: array
        allowedAuthType:
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedAuthTypeProp'
          type: array
        allowedSASLMechanism:
          items:
            description: Specifies the names of the SASL mechanisms that clients associated
              with this Client Connection Policy will be allowed to request.
            type: string
          type: array
        deniedSASLMechanism:
          items:
            description: Specifies the names of the SASL mechanisms that clients associated
              with this Client Connection Policy will not be allowed to request.
            type: string
          type: array
        allowedFilterType:
          items:
            $ref: '#/components/schemas/Enumclient-connection-policy-allowedFilterTypeProp'
          type: array
        allowUnindexedSearches:
          description: "Indicates whether clients will be allowed to request search\
            \ operations that cannot be efficiently processed using the set of indexes\
            \ defined in the corresponding backend. Note that even if this is false,\
            \ some clients may be able to request unindexed searches if the allow-unindexed-searches-with-control\
            \ property has a value of true and the necessary conditions are satisfied."
          type: boolean
        allowUnindexedSearchesWithControl:
          description: "Indicates whether clients will be allowed to request search\
            \ operations that cannot be efficiently processed using the set of indexes\
            \ defined in the corresponding backend, as long as the search request\
            \ also includes the permit unindexed search request control and the requester\
            \ has the unindexed-search-with-control privilege (or that privilege is\
            \ disabled in the global configuration)."
          type: boolean
        minimumSubstringLength:
          description: "Specifies the minimum number of consecutive bytes that must\
            \ be present in any subInitial, subAny, or subFinal element of a substring\
            \ filter component (i.e., the minimum number of consecutive bytes between\
            \ wildcard characters in a substring filter). Any attempt to use a substring\
            \ search with an element containing fewer than this number of bytes will\
            \ be rejected."
          type: integer
        maximumConcurrentConnections:
          description: Specifies the maximum number of client connections which may
            be associated with this Client Connection Policy at any given time.
          type: integer
        maximumConnectionDuration:
          description: Specifies the maximum length of time that a connection associated
            with this Client Connection Policy may be established. Any connection
            which is associated with this Client Connection Policy and has been established
            for longer than this period of time may be terminated.
          type: string
        maximumIdleConnectionDuration:
          description: Specifies the maximum length of time that a connection associated
            with this Client Connection Policy may remain established after the completion
            of the last operation processed on that connection. Any new operation
            requested on the connection will reset this timer. Any connection associated
            with this Client Connection Policy which has been idle for longer than
            this length of time may be terminated.
          type: string
        maximumOperationCountPerConnection:
          description: "Specifies the maximum number of operations that may be requested\
            \ by any client connection associated with this Client Connection Policy.\
            \ If an attempt is made to process more than this number of operations\
            \ on a client connection, then that connection will be terminated."
          type: integer
        maximumConcurrentOperationsPerConnection:
          description: Specifies the maximum number of concurrent operations that
            can be in progress for any connection. This can help prevent a single
            client connection from monopolizing server processing resources by sending
            a large number of concurrent asynchronous requests. A value of zero indicates
            that no limit will be placed on the number of concurrent requests for
            a single client.
          type: integer
        maximumConcurrentOperationWaitTimeBeforeRejecting:
          description: "Specifies the maximum length of time that the server should\
            \ wait for an outstanding operation to complete before rejecting a new\
            \ request received when the maximum number of outstanding operations are\
            \ already in progress on that connection. If an existing outstanding operation\
            \ on the connection completes before this time, then the operation will\
            \ be processed. Otherwise, the operation will be rejected with a \"busy\"\
            \ result."
          type: string
        maximumConcurrentOperationsPerConnectionExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-maximumConcurrentOperationsPerConnectionExceededBehaviorProp'
        maximumConnectionOperationRate:
          items:
            description: "Specifies the maximum rate at which a client associated\
              \ with this Client Connection Policy may issue requests to the Directory\
              \ Server. If any client attempts to request operations at a rate higher\
              \ than this limit, then the server will exhibit the behavior described\
              \ in the connection-operation-rate-exceeded-behavior property."
            type: string
          type: array
        connectionOperationRateExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-connectionOperationRateExceededBehaviorProp'
        maximumPolicyOperationRate:
          items:
            description: "Specifies the maximum rate at which all clients associated\
              \ with this Client Connection Policy, as a collective set, may issue\
              \ requests to the Directory Server. If this limit is exceeded, then\
              \ the server will exhibit the behavior described in the policy-operation-rate-exceeded-behavior\
              \ property."
            type: string
          type: array
        policyOperationRateExceededBehavior:
          $ref: '#/components/schemas/Enumclient-connection-policy-policyOperationRateExceededBehaviorProp'
        maximumSearchSizeLimit:
          description: Specifies the maximum number of entries that may be returned
            for a search performed by a client associated with this Client Connection
            Policy.
          type: integer
        maximumSearchTimeLimit:
          description: Specifies the maximum length of time that the server should
            spend processing search operations requested by clients associated with
            this Client Connection Policy.
          type: string
        maximumSearchLookthroughLimit:
          description: Specifies the maximum number of entries that may be examined
            by a backend in the course of processing a search requested by clients
            associated with this Client Connection Policy.
          type: integer
        maximumLDAPJoinSizeLimit:
          description: Specifies the maximum number of entries that may be joined
            with any single search result entry for a search request performed by
            a client associated with this Client Connection Policy.
          type: integer
        maximumSortSizeLimitWithoutVLVIndex:
          description: Specifies the maximum number of entries that the server will
            attempt to sort without the benefit of a VLV index. A value of zero indicates
            that no limit should be enforced.
          type: integer
      required:
      - allowedAuthType
      - allowedOperation
      - enabled
      - evaluationOrderIndex
      - policyID
      type: object
    Enumclient-connection-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:client-connection-policy
      type: string
    Enumclient-connection-policy-connectionOperationRateExceededBehaviorProp:
      description: "Specifies the behavior that the Directory Server should exhibit\
        \ if a client connection attempts to exceed a rate defined in the maximum-connection-operation-rate\
        \ property. If the configured behavior is one that will reject requested operations,\
        \ then that behavior will persist until the end of the corresponding interval.\
        \ The server will resume allowing that client to perform operations when that\
        \ interval expires, as long as no other operation rate limits have been exceeded."
      enum:
      - disconnect
      - reject-admin-limit-exceeded
      - reject-constraint-violation
      - reject-busy
      - reject-unavailable
      - reject-unwilling-to-perform
      - reject-other
      type: string
    Enumclient-connection-policy-policyOperationRateExceededBehaviorProp:
      description: "Specifies the behavior that the Directory Server should exhibit\
        \ if a client connection attempts to exceed a rate defined in the maximum-policy-operation-rate\
        \ property. If the configured behavior is one that will reject requested operations,\
        \ then that behavior will persist until the end of the corresponding interval.\
        \ The server will resume allowing clients associated with this Client Connection\
        \ Policy to perform operations when that interval expires, as long as no other\
        \ operation rate limits have been exceeded."
      enum:
      - disconnect
      - reject-admin-limit-exceeded
      - reject-constraint-violation
      - reject-busy
      - reject-unavailable
      - reject-unwilling-to-perform
      - reject-other
      type: string
    Enumclient-connection-policy-allowedFilterTypeProp:
      description: Specifies the types of filter components that may be included in
        search requests from clients associated with this Client Connection Policy
        which have a non-baseObject scope.
      enum:
      - and
      - or
      - not
      - equality
      - sub-initial
      - sub-any
      - sub-final
      - greater-or-equal
      - less-or-equal
      - present
      - approximate-match
      - extensible-match
      type: string
    Enumclient-connection-policy-maximumConcurrentOperationsPerConnectionExceededBehaviorProp:
      description: Specifies the behavior that the Directory Server should exhibit
        if a client attempts to invoke more concurrent operations on a single connection
        than allowed by the maximum-concurrent-operations-per-connection property.
      enum:
      - disconnect
      - reject-admin-limit-exceeded
      - reject-constraint-violation
      - reject-busy
      - reject-unavailable
      - reject-unwilling-to-perform
      - reject-other
      type: string
    Enumclient-connection-policy-allowedAuthTypeProp:
      description: Specifies the types of authentication that clients associated with
        this Client Connection Policy will be allowed to request.
      enum:
      - simple
      - sasl
      type: string
    Enumclient-connection-policy-allowedOperationProp:
      description: Specifies the types of operations that clients associated with
        this Client Connection Policy will be allowed to request.
      enum:
      - abandon
      - add
      - bind
      - compare
      - delete
      - extended
      - modify
      - modify-dn
      - search
      type: string
    ordering-matching-rule-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumordering-matching-ruleSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Matching Rule is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumordering-matching-ruleSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:matching-rule:ordering
      type: string
    approximate-matching-rule-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumapproximate-matching-ruleSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Matching Rule is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumapproximate-matching-ruleSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:matching-rule:approximate
      type: string
    equality-matching-rule-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumequality-matching-ruleSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Matching Rule is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumequality-matching-ruleSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:matching-rule:equality
      type: string
    substring-matching-rule-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsubstring-matching-ruleSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Matching Rule is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsubstring-matching-ruleSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:matching-rule:substring
      type: string
    add-mirror-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/mirror-virtual-attribute-shared'
    mirror-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/mirror-virtual-attribute-shared'
    mirror-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummirror-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        sourceAttribute:
          description: Specifies the source attribute containing the values to use
            for this virtual attribute.
          type: string
        sourceEntryDNAttribute:
          description: Specifies the attribute containing the DN of another entry
            from which to obtain the source attribute providing the values for this
            virtual attribute.
          type: string
        sourceEntryDNMap:
          description: Specifies a DN map that will be used to identify the entry
            from which to obtain the source attribute providing the values for this
            virtual attribute.
          type: string
        bypassAccessControlForSearches:
          description: Indicates whether searches performed by this virtual attribute
            provider should be exempted from access control restrictions.
          type: boolean
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      - sourceAttribute
      type: object
    Enummirror-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:mirror
      type: string
    entry-checksum-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumentry-checksum-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        excludeOperationalAttributes:
          description: Indicates whether all operational attributes should be excluded
            from the generated checksum.
          type: boolean
        excludedAttribute:
          items:
            description: Specifies the attributes that should be excluded from the
              checksum calculation.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumentry-checksum-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-checksum
      type: string
    member-of-server-group-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummember-of-server-group-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enummember-of-server-group-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member-of-server-group
      type: string
    add-constructed-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/constructed-virtual-attribute-shared'
    constructed-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/constructed-virtual-attribute-shared'
    constructed-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconstructed-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        valuePattern:
          items:
            description: Specifies a pattern for constructing the virtual attribute
              value using fixed text and attribute values from the entry.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      - valuePattern
      type: object
    Enumconstructed-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:constructed
      type: string
    add-is-member-of-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-shared'
    is-member-of-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-shared'
    is-member-of-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumis-member-of-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        directMembershipsOnly:
          description: Specifies whether to only include groups in which the user
            is directly associated with and the membership maybe modified via the
            group entry. Groups in which the user's membership is derived dynamically
            or through nested groups will not be included.
          type: boolean
        includedGroupFilter:
          description: "A search filter that will be used to identify which groups\
            \ should be included in the values of the virtual attribute. With no value\
            \ defined (which is the default behavior), all groups that contain the\
            \ target user will be included."
          type: string
        rewriteSearchFilters:
          $ref: '#/components/schemas/Enumvirtual-attribute-rewriteSearchFiltersProp'
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumis-member-of-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:is-member-of
      type: string
    num-subordinates-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnum-subordinates-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumnum-subordinates-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:num-subordinates
      type: string
    add-reverse-dn-join-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-shared'
    reverse-dn-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-shared'
    reverse-dn-join-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreverse-dn-join-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        joinDNAttribute:
          description: The attribute in related entries whose set of values must contain
            the DN of the search result entry to be joined with that entry.
          type: string
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          description: "The fixed, administrator-specified base DN for the internal\
            \ searches used to identify joined entries."
          type: string
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          description: "The maximum number of entries that may be joined with the\
            \ source entry, which also corresponds to the maximum number of values\
            \ that the virtual attribute provider will generate for an entry."
          type: integer
        joinFilter:
          description: "An optional filter that specifies additional criteria for\
            \ identifying joined entries. If a join-filter value is specified, then\
            \ only entries matching that filter (in addition to satisfying the other\
            \ join criteria) will be joined with the search result entry."
          type: string
        joinAttribute:
          items:
            description: An optional set of the names of the attributes to include
              with joined entries.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - joinBaseDNType
      - joinDNAttribute
      - schemas
      type: object
    Enumreverse-dn-join-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:reverse-dn-join
      type: string
    add-identify-references-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/identify-references-virtual-attribute-shared'
    identify-references-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/identify-references-virtual-attribute-shared'
    identify-references-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumidentify-references-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        referencedByAttribute:
          items:
            description: "The name or OID of an attribute type whose values will be\
              \ searched for references to the target entry. The attribute type must\
              \ be defined in the server schema, must have a syntax of either \"distinguished\
              \ name\" or \"name and optional UID\", and must be indexed for equality."
            type: string
          type: array
        referenceSearchBaseDN:
          items:
            description: "The base DN that will be used when searching for references\
              \ to the target entry. If no reference search base DN is specified,\
              \ the default behavior will be to search below all public naming contexts\
              \ configured in the server."
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - referencedByAttribute
      - schemas
      type: object
    Enumidentify-references-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:identify-references
      type: string
    add-user-defined-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/user-defined-virtual-attribute-shared'
    user-defined-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/user-defined-virtual-attribute-shared'
    user-defined-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumuser-defined-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        value:
          items:
            description: Specifies the values to be included in the virtual attribute.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      - value
      type: object
    Enumuser-defined-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:user-defined
      type: string
    current-time-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcurrent-time-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        returnUtcTime:
          description: Indicates whether to return current time in UTC.
          type: boolean
        includeMilliseconds:
          description: Indicates whether the current time includes millisecond precision.
          type: boolean
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumcurrent-time-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:current-time
      type: string
    short-unique-id-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumshort-unique-id-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        sequenceNumberAttribute:
          description: Specifies the name or OID of the attribute which contains the
            sequence number from which unique identifiers are generated. The attribute
            should have Integer syntax or a String syntax permitting integer values.
            If this property is modified then the filter property should be updated
            accordingly so that only entries containing the sequence number attribute
            are eligible to have a value generated for this virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      - sequenceNumberAttribute
      type: object
    Enumshort-unique-id-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:short-unique-id
      type: string
    add-entry-dn-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-shared'
    entry-dn-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-shared'
    entry-dn-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumentry-dn-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumentry-dn-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:entry-dn
      type: string
    has-subordinates-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhas-subordinates-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumhas-subordinates-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:has-subordinates
      type: string
    add-equality-join-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/equality-join-virtual-attribute-shared'
    equality-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/equality-join-virtual-attribute-shared'
    equality-join-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumequality-join-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        joinSourceAttribute:
          description: The attribute containing the value(s) in the source entry to
            use to identify related entries.
          type: string
        joinTargetAttribute:
          description: The attribute in target entries whose value(s) match values
            of the source attribute in the source entry.
          type: string
        joinMatchAll:
          description: "Indicates whether joined entries will be required to have\
            \ all values for the source attribute, or only at least one of its values."
          type: boolean
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          description: "The fixed, administrator-specified base DN for the internal\
            \ searches used to identify joined entries."
          type: string
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          description: "The maximum number of entries that may be joined with the\
            \ source entry, which also corresponds to the maximum number of values\
            \ that the virtual attribute provider will generate for an entry."
          type: integer
        joinFilter:
          description: "An optional filter that specifies additional criteria for\
            \ identifying joined entries. If a join-filter value is specified, then\
            \ only entries matching that filter (in addition to satisfying the other\
            \ join criteria) will be joined with the search result entry."
          type: string
        joinAttribute:
          items:
            description: An optional set of the names of the attributes to include
              with joined entries.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - joinBaseDNType
      - joinSourceAttribute
      - joinTargetAttribute
      - schemas
      type: object
    Enumequality-join-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:equality-join
      type: string
    add-groovy-scripted-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-shared'
    groovy-scripted-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-shared'
    groovy-scripted-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Virtual Attribute.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Virtual Attribute. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:groovy-scripted
      type: string
    instance-name-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enuminstance-name-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enuminstance-name-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:instance-name
      type: string
    replication-state-detail-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreplication-state-detail-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumreplication-state-detail-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:replication-state-detail
      type: string
    add-member-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/member-virtual-attribute-shared'
    member-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/member-virtual-attribute-shared'
    member-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummember-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        allowRetrievingMembership:
          description: Indicates whether to handle requests that request all values
            for the virtual attribute.
          type: boolean
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
      required:
      - allowRetrievingMembership
      - attributeType
      - enabled
      - schemas
      type: object
    Enummember-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:member
      type: string
    add-password-policy-state-json-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-shared'
    password-policy-state-json-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-shared'
    password-policy-state-json-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpassword-policy-state-json-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumpassword-policy-state-json-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:password-policy-state-json
      type: string
    subschema-subentry-virtual-attribute-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsubschema-subentry-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - schemas
      type: object
    Enumsubschema-subentry-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:subschema-subentry
      type: string
    add-dn-join-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/dn-join-virtual-attribute-shared'
    dn-join-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/dn-join-virtual-attribute-shared'
    dn-join-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdn-join-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        joinDNAttribute:
          description: The attribute whose values are the DNs of the entries to be
            joined with the search result entry.
          type: string
        joinBaseDNType:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinBaseDNTypeProp'
        joinCustomBaseDN:
          description: "The fixed, administrator-specified base DN for the internal\
            \ searches used to identify joined entries."
          type: string
        joinScope:
          $ref: '#/components/schemas/Enumvirtual-attribute-joinScopeProp'
        joinSizeLimit:
          description: "The maximum number of entries that may be joined with the\
            \ source entry, which also corresponds to the maximum number of values\
            \ that the virtual attribute provider will generate for an entry."
          type: integer
        joinFilter:
          description: "An optional filter that specifies additional criteria for\
            \ identifying joined entries. If a join-filter value is specified, then\
            \ only entries matching that filter (in addition to satisfying the other\
            \ join criteria) will be joined with the search result entry."
          type: string
        joinAttribute:
          items:
            description: An optional set of the names of the attributes to include
              with joined entries.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - joinBaseDNType
      - joinDNAttribute
      - schemas
      type: object
    Enumdn-join-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:dn-join
      type: string
    add-third-party-virtual-attribute-request:
      allOf:
      - $ref: '#/components/schemas/add_mirror_virtual_attribute_request_allOf'
      - $ref: '#/components/schemas/third-party-virtual-attribute-shared'
    third-party-virtual-attribute-response:
      allOf:
      - $ref: '#/components/schemas/mirror_virtual_attribute_response_allOf'
      - $ref: '#/components/schemas/third-party-virtual-attribute-shared'
    third-party-virtual-attribute-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-virtual-attributeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Virtual Attribute.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Virtual Attribute. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Virtual Attribute
          type: string
        enabled:
          description: Indicates whether the Virtual Attribute is enabled for use.
          type: boolean
        attributeType:
          description: Specifies the attribute type for the attribute whose values
            are to be dynamically assigned by the virtual attribute.
          type: string
        baseDN:
          items:
            description: Specifies the base DNs for the branches containing entries
              that are eligible to use this virtual attribute.
            type: string
          type: array
        groupDN:
          items:
            description: Specifies the DNs of the groups whose members can be eligible
              to use this virtual attribute.
            type: string
          type: array
        filter:
          items:
            description: Specifies the search filters to be applied against entries
              to determine if the virtual attribute is to be generated for those entries.
            type: string
          type: array
        clientConnectionPolicy:
          items:
            description: "Specifies a set of client connection policies for which\
              \ this Virtual Attribute should be generated. If this is undefined,\
              \ then this Virtual Attribute will always be generated. If it is associated\
              \ with one or more client connection policies, then this Virtual Attribute\
              \ will be generated only for operations requested by clients assigned\
              \ to one of those client connection policies."
            type: string
          type: array
        conflictBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-conflictBehaviorProp'
        requireExplicitRequestByName:
          description: Indicates whether attributes of this type must be explicitly
            included by name in the list of requested attributes. Note that this will
            only apply to virtual attributes which are associated with an attribute
            type that is operational. It will be ignored for virtual attributes associated
            with a non-operational attribute type.
          type: boolean
        multipleVirtualAttributeEvaluationOrderIndex:
          description: Specifies the order in which virtual attribute definitions
            for the same attribute type will be evaluated when generating values for
            an entry.
          type: integer
        multipleVirtualAttributeMergeBehavior:
          $ref: '#/components/schemas/Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp'
        allowIndexConflicts:
          description: Indicates whether the server should allow creating or altering
            this virtual attribute definition even if it conflicts with one or more
            indexes defined in the server.
          type: boolean
      required:
      - attributeType
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-virtual-attributeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:virtual-attribute:third-party
      type: string
    Enumvirtual-attribute-conflictBehaviorProp:
      description: Specifies the behavior that the server is to exhibit for entries
        that already contain one or more real values for the associated attribute.
      enum:
      - real-overrides-virtual
      - virtual-overrides-real
      - merge-real-and-virtual
      type: string
    Enumvirtual-attribute-rewriteSearchFiltersProp:
      description: Search filters that include Is Member Of Virtual Attribute searches
        on dynamic groups can be updated to include the dynamic group filter in the
        search filter itself. This can allow the backend to more efficiently process
        the search filter by using attribute indexes sooner in the search processing.
      enum:
      - always
      - within-group-scope
      - never
      type: string
    Enumvirtual-attribute-joinScopeProp:
      description: The scope for searches used to identify joined entries.
      enum:
      - base-object
      - single-level
      - whole-subtree
      - subordinate-subtree
      type: string
    Enumvirtual-attribute-multipleVirtualAttributeMergeBehaviorProp:
      description: Specifies the behavior that will be exhibited for cases in which
        multiple virtual attribute definitions apply to the same multivalued attribute
        type. This will be ignored for single-valued attribute types.
      enum:
      - use-first-definition
      - use-only-definitions-with-the-lowest-evaluation-order-index
      - use-all-definitions
      type: string
    Enumvirtual-attribute-joinBaseDNTypeProp:
      description: Specifies how server should determine the base DN for the internal
        searches used to identify joined entries.
      enum:
      - use-search-base-dn
      - use-source-entry-dn
      - use-custom-base-dn
      type: string
    add-third-party-notification-manager-request:
      allOf:
      - $ref: '#/components/schemas/add_third_party_notification_manager_request_allOf'
      - $ref: '#/components/schemas/third-party-notification-manager-shared'
    third-party-notification-manager-response:
      allOf:
      - $ref: '#/components/schemas/third_party_notification_manager_response_allOf'
      - $ref: '#/components/schemas/third-party-notification-manager-shared'
    third-party-notification-manager-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-notification-managerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Notification Manager.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Notification Manager. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Notification Manager
          type: string
        enabled:
          description: Indicates whether this Notification Manager is enabled within
            the server.
          type: boolean
        subscriptionBaseDN:
          description: "Specifies the DN of the entry below which subscription data\
            \ is stored for this Notification Manager. This needs to be in the backend\
            \ that has the data to be notified on, and must not be the same entry\
            \ as the backend base DN. The subscription base DN entry does not need\
            \ to exist as it will be created by the server."
          type: string
        transactionNotification:
          $ref: '#/components/schemas/Enumnotification-manager-transactionNotificationProp'
        monitorEntriesEnabled:
          description: Enables monitor entries for this Notification Manager.
          type: boolean
      required:
      - enabled
      - extensionClass
      - subscriptionBaseDN
      - transactionNotification
      type: object
    Enumthird-party-notification-managerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:notification-manager:third-party
      type: string
    Enumnotification-manager-transactionNotificationProp:
      description: Specifies how the operations in an external transaction (e.g. a
        multi-update extended operation or an LDAP transaction) are notified for this
        Notification Manager.
      enum:
      - individual
      - matched-operations
      - all-operations
      type: string
    add-simple-result-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_result_criteria_request_allOf'
      - $ref: '#/components/schemas/simple-result-criteria-shared'
    simple-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_result_criteria_response_allOf'
      - $ref: '#/components/schemas/simple-result-criteria-shared'
    simple-result-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsimple-result-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        requestCriteria:
          description: Specifies a request criteria object that must match the associated
            request for operations included in this Simple Result Criteria.
          type: string
        resultCodeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-resultCodeCriteriaProp'
        resultCodeValue:
          items:
            $ref: '#/components/schemas/Enumresult-criteria-resultCodeValueProp'
          type: array
        processingTimeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-processingTimeCriteriaProp'
        processingTimeValue:
          description: Specifies the boundary value to use for the operation processing
            time when determining whether to include that operation in this Simple
            Result Criteria. This will be ignored if the "processing-time-criteria"
            property has a value of "any".
          type: string
        queueTimeCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-queueTimeCriteriaProp'
        queueTimeValue:
          description: Specifies the boundary value to use for the time an operation
            spent on the work queue when determining whether to include that operation
            in this Simple Result Criteria. This will be ignored if the "queue-time-criteria"
            property has a value of "any".
          type: string
        referralReturned:
          $ref: '#/components/schemas/Enumresult-criteria-referralReturnedProp'
        allIncludedResponseControl:
          items:
            description: "Specifies the OID of a control that must be present in the\
              \ response to the client for operations included in this Simple Result\
              \ Criteria. If any control OIDs are provided, then the response must\
              \ contain all of those controls."
            type: string
          type: array
        anyIncludedResponseControl:
          items:
            description: "Specifies the OID of a control that may be present in the\
              \ response to the client for operations included in this Simple Result\
              \ Criteria. If any control OIDs are provided, then the response must\
              \ contain at least one of those controls."
            type: string
          type: array
        notAllIncludedResponseControl:
          items:
            description: "Specifies the OID of a control that should not be present\
              \ in the response to the client for operations included in this Simple\
              \ Result Criteria. If any control OIDs are provided, then the response\
              \ must not contain at least one of those controls (that is, the response\
              \ may contain zero or more of those controls, but not all of them)."
            type: string
          type: array
        noneIncludedResponseControl:
          items:
            description: "Specifies the OID of a control that must not be present\
              \ in the response to the client for operations included in this Simple\
              \ Result Criteria. If any control OIDs are provided, then the response\
              \ must not contain any of those controls."
            type: string
          type: array
        usedAlternateAuthzid:
          $ref: '#/components/schemas/Enumresult-criteria-usedAlternateAuthzidProp'
        usedAnyPrivilege:
          $ref: '#/components/schemas/Enumresult-criteria-usedAnyPrivilegeProp'
        usedPrivilege:
          items:
            $ref: '#/components/schemas/Enumresult-criteria-usedPrivilegeProp'
          type: array
        missingAnyPrivilege:
          $ref: '#/components/schemas/Enumresult-criteria-missingAnyPrivilegeProp'
        missingPrivilege:
          items:
            $ref: '#/components/schemas/Enumresult-criteria-missingPrivilegeProp'
          type: array
        retiredPasswordUsedForBind:
          $ref: '#/components/schemas/Enumresult-criteria-retiredPasswordUsedForBindProp'
        searchEntryReturnedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchEntryReturnedCriteriaProp'
        searchEntryReturnedCount:
          description: "Specifies the target number of entries returned for use when\
            \ determining whether a search operation should be included in this Simple\
            \ Result Criteria. This will be ignored for all operations other than\
            \ search, and it will be ignored for search operations if the \"search-entry-criteria\"\
            \ property has a value of \"any\"."
          type: integer
        searchReferenceReturnedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchReferenceReturnedCriteriaProp'
        searchReferenceReturnedCount:
          description: "Specifies the target number of references returned for use\
            \ when determining whether a search operation should be included in this\
            \ Simple Result Criteria. This will be ignored for all operations other\
            \ than search, and it will be ignored for search operations if the \"\
            search-reference-criteria\" property has a value of \"any\"."
          type: integer
        searchIndexedCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-searchIndexedCriteriaProp'
        includedAuthzUserBaseDN:
          items:
            description: "Specifies a base DN below which authorization user entries\
              \ may exist for operations included in this Simple Result Criteria.\
              \ The authorization user could be the currently authenticated user on\
              \ the connection (the user that performed the Bind operation), or different\
              \ if proxied authorization was used to request that the operation be\
              \ performed under the authorization of another user (as is the case\
              \ for operations that come through a Directory Proxy Server). This property\
              \ will be ignored for operations where no authentication or authorization\
              \ has been performed."
            type: string
          type: array
        excludedAuthzUserBaseDN:
          items:
            description: "Specifies a base DN below which authorization user entries\
              \ may exist for operations excluded from this Simple Result Criteria.\
              \ The authorization user could be the currently authenticated user on\
              \ the connection (the user that performed the Bind operation), or different\
              \ if proxied authorization was used to request that the operation be\
              \ performed under the authorization of another user (as is the case\
              \ for operations that come through a Directory Proxy Server). This property\
              \ will be ignored for operations where no authentication or authorization\
              \ has been performed."
            type: string
          type: array
        allIncludedAuthzUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authorization users\
              \ must exist for operations included in this Simple Result Criteria.\
              \ If any group DNs are provided, then the authorization user must be\
              \ a member of all of those groups. The authorization user could be the\
              \ currently authenticated user on the connection (the user that performed\
              \ the Bind operation), or different if proxied authorization was used\
              \ to request that the operation be performed under the authorization\
              \ of another user (as is the case for operations that come through a\
              \ Directory Proxy Server). This property will be ignored for operations\
              \ where no authentication or authorization has been performed."
            type: string
          type: array
        anyIncludedAuthzUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authorization users\
              \ may exist for operations included in this Simple Result Criteria.\
              \ If any group DNs are provided, then the authorization user must be\
              \ a member of at least one of those groups. The authorization user could\
              \ be the currently authenticated user on the connection (the user that\
              \ performed the Bind operation), or different if proxied authorization\
              \ was used to request that the operation be performed under the authorization\
              \ of another user (as is the case for operations that come through a\
              \ Directory Proxy Server). This property will be ignored for operations\
              \ where no authentication or authorization has been performed."
            type: string
          type: array
        notAllIncludedAuthzUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authorization users\
              \ should not exist for operations included in this Simple Result Criteria.\
              \ If any group DNs are provided, then the authorization user must not\
              \ be a member of at least one of those groups (that is, the user may\
              \ be a member of zero or more of those groups, but not of all of them).\
              \ The authorization user could be the currently authenticated user on\
              \ the connection (the user that performed the Bind operation), or different\
              \ if proxied authorization was used to request that the operation be\
              \ performed under the authorization of another user (as is the case\
              \ for operations that come through a Directory Proxy Server). This property\
              \ will be ignored for operations where no authentication or authorization\
              \ has been performed."
            type: string
          type: array
        noneIncludedAuthzUserGroupDN:
          items:
            description: "Specifies the DN of a group in which authorization users\
              \ must not exist for operations included in this Simple Result Criteria.\
              \ If any group DNs are provided, then the authorization user must not\
              \ be a member any of those groups. The authorization user could be the\
              \ currently authenticated user on the connection (the user that performed\
              \ the Bind operation), or different if proxied authorization was used\
              \ to request that the operation be performed under the authorization\
              \ of another user (as is the case for operations that come through a\
              \ Directory Proxy Server). This property will be ignored for operations\
              \ where no authentication or authorization has been performed."
            type: string
          type: array
        description:
          description: A description for this Result Criteria
          type: string
      required:
      - schemas
      type: object
    Enumsimple-result-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:result-criteria:simple
      type: string
    add-aggregate-result-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_result_criteria_request_allOf'
      - $ref: '#/components/schemas/aggregate-result-criteria-shared'
    aggregate-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_result_criteria_response_allOf'
      - $ref: '#/components/schemas/aggregate-result-criteria-shared'
    aggregate-result-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-result-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedResultCriteria:
          items:
            description: "Specifies a result criteria object that must match the associated\
              \ operation result in order to match the aggregate result criteria.\
              \ If one or more all-included result criteria objects are provided,\
              \ then an operation result must match all of them in order to match\
              \ the aggregate result criteria."
            type: string
          type: array
        anyIncludedResultCriteria:
          items:
            description: "Specifies a result criteria object that may match the associated\
              \ operation result in order to match the aggregate result criteria.\
              \ If one or more any-included result criteria objects are provided,\
              \ then an operation result must match at least one of them in order\
              \ to match the aggregate result criteria."
            type: string
          type: array
        notAllIncludedResultCriteria:
          items:
            description: "Specifies a result criteria object that should not match\
              \ the associated operation result in order to match the aggregate result\
              \ criteria. If one or more not-all-included result criteria objects\
              \ are provided, then an operation result must not match all of them\
              \ (that is, it may match zero or more of them, but it must not match\
              \ all of them) in order to match the aggregate result criteria."
            type: string
          type: array
        noneIncludedResultCriteria:
          items:
            description: "Specifies a result criteria object that must not match the\
              \ associated operation result in order to match the aggregate result\
              \ criteria. If one or more none-included result criteria objects are\
              \ provided, then an operation result must not match any of them in order\
              \ to match the aggregate result criteria."
            type: string
          type: array
        description:
          description: A description for this Result Criteria
          type: string
      required:
      - schemas
      type: object
    Enumaggregate-result-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:result-criteria:aggregate
      type: string
    add-replication-assurance-result-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_result_criteria_request_allOf'
      - $ref: '#/components/schemas/replication-assurance-result-criteria-shared'
    replication-assurance-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_result_criteria_response_allOf'
      - $ref: '#/components/schemas/replication-assurance-result-criteria-shared'
    replication-assurance-result-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumreplication-assurance-result-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        localAssuranceLevel:
          items:
            $ref: '#/components/schemas/Enumresult-criteria-localAssuranceLevelProp'
          type: array
        remoteAssuranceLevel:
          items:
            $ref: '#/components/schemas/Enumresult-criteria-remoteAssuranceLevelProp'
          type: array
        assuranceTimeoutCriteria:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceTimeoutCriteriaProp'
        assuranceTimeoutValue:
          description: The value to use for performing matching based on the assurance
            timeout. This will be ignored if the assurance-timeout-criteria is "any".
          type: string
        responseDelayedByAssurance:
          $ref: '#/components/schemas/Enumresult-criteria-responseDelayedByAssuranceProp'
        assuranceBehaviorAlteredByControl:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceBehaviorAlteredByControlProp'
        assuranceSatisfied:
          $ref: '#/components/schemas/Enumresult-criteria-assuranceSatisfiedProp'
        description:
          description: A description for this Result Criteria
          type: string
      required:
      - localAssuranceLevel
      - remoteAssuranceLevel
      - schemas
      type: object
    Enumreplication-assurance-result-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:result-criteria:replication-assurance
      type: string
    add-third-party-result-criteria-request:
      allOf:
      - $ref: '#/components/schemas/add_simple_result_criteria_request_allOf'
      - $ref: '#/components/schemas/third-party-result-criteria-shared'
    third-party-result-criteria-response:
      allOf:
      - $ref: '#/components/schemas/simple_result_criteria_response_allOf'
      - $ref: '#/components/schemas/third-party-result-criteria-shared'
    third-party-result-criteria-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-result-criteriaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Result Criteria.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Result Criteria. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Result Criteria
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-result-criteriaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:result-criteria:third-party
      type: string
    Enumresult-criteria-missingAnyPrivilegeProp:
      description: "Indicates whether operations in which one or more privileges were\
        \ missing should be included in this Simple Result Criteria. If no value is\
        \ provided, then whether there were any missing privileges will not be considered\
        \ when determining whether an operation matches this Simple Result Criteria."
      enum:
      - required
      - prohibited
      - optional
      type: string
    Enumresult-criteria-searchEntryReturnedCriteriaProp:
      description: Indicates whether the number of entries returned should be considered
        when determining whether a search operation should be included in this Simple
        Result Criteria. This will be ignored for all operations other than search.
      enum:
      - any
      - equal-to
      - not-equal-to
      - less-than-or-equal-to
      - greater-than-or-equal-to
      type: string
    Enumresult-criteria-resultCodeCriteriaProp:
      description: Specifies which operation result codes are allowed for operations
        included in this Simple Result Criteria.
      enum:
      - all-result-codes
      - non-failure-result-codes
      - failure-result-codes
      - selected-result-codes
      type: string
    Enumresult-criteria-localAssuranceLevelProp:
      description: The local assurance level values that will be allowed to match
        this Replication Assurance Result Criteria.
      enum:
      - none
      - received-any-server
      - processed-all-servers
      type: string
    Enumresult-criteria-assuranceBehaviorAlteredByControlProp:
      description: Indicates whether this Replication Assurance Result Criteria should
        match operations based on whether the assurance requirements were altered
        by a control included in the request from the client.
      enum:
      - any
      - "true"
      - "false"
      type: string
    Enumresult-criteria-usedPrivilegeProp:
      description: "Specifies the name of a privilege that must have been used during\
        \ the processing for operations included in this Simple Result Criteria. If\
        \ any privilege names are provided, then the associated operation must have\
        \ used at least one of those privileges. If no privilege names were provided,\
        \ then the set of privileges used will not be considered when determining\
        \ whether an operation should be included in this Simple Result Criteria."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumresult-criteria-searchReferenceReturnedCriteriaProp:
      description: Indicates whether the number of references returned should be considered
        when determining whether a search operation should be included in this Simple
        Result Criteria. This will be ignored for all operations other than search.
      enum:
      - any
      - equal-to
      - not-equal-to
      - less-than-or-equal-to
      - greater-than-or-equal-to
      type: string
    Enumresult-criteria-resultCodeValueProp:
      description: Specifies the operation result code values for results included
        in this Simple Result Criteria. This will only be taken into account if the
        "result-code-criteria" property has a value of "selected-result-codes".
      enum:
      - success
      - operations-error
      - protocol-error
      - time-limit-exceeded
      - size-limit-exceeded
      - compare-false
      - compare-true
      - auth-method-not-supported
      - strong-auth-required
      - referral
      - admin-limit-exceeded
      - unavailable-critical-extension
      - confidentiality-required
      - sasl-bind-in-progress
      - no-such-attribute
      - undefined-attribute-type
      - inappropriate-matching
      - constraint-violation
      - attribute-or-value-exists
      - invalid-attribute-syntax
      - no-such-object
      - alias-problem
      - invalid-dn-syntax
      - alias-dereferencing-problem
      - inappropriate-authentication
      - invalid-credentials
      - insufficient-access-rights
      - busy
      - unavailable
      - unwilling-to-perform
      - loop-detect
      - sort-control-missing
      - offset-range-error
      - naming-violation
      - objectclass-violation
      - not-allowed-on-nonleaf
      - not-allowed-on-rdn
      - entry-already-exists
      - objectclass-mods-prohibited
      - affects-multiple-dsas
      - virtual-list-view-error
      - other
      - canceled
      - no-such-operation
      - too-late
      - cannot-cancel
      - assertion-failed
      - authorization-denied
      - no-operation
      - interactive-transaction-aborted
      - database-lock-conflict
      - mirrored-subtree-digest-mismatch
      - token-delivery-mechanism-unavailable
      - token-delivery-attempt-failed
      - token-delivery-invalid-recipient-id
      - token-delivery-invalid-account-state
      type: string
    Enumresult-criteria-processingTimeCriteriaProp:
      description: "Indicates whether the time required to process the operation should\
        \ be taken into consideration when determining whether to include the operation\
        \ in this Simple Result Criteria. If the processing time should be taken into\
        \ account, then the \"processing-time-value\" property should contain the\
        \ boundary value."
      enum:
      - any
      - less-than-or-equal-to
      - greater-than-or-equal-to
      type: string
    Enumresult-criteria-referralReturnedProp:
      description: "Indicates whether operation results which include one or more\
        \ referral URLs should be included in this Simple Result Criteria. If no value\
        \ is provided, then whether an operation includes any referral URLs will not\
        \ be considered when determining whether it matches this Simple Result Criteria."
      enum:
      - required
      - prohibited
      - optional
      type: string
    Enumresult-criteria-usedAnyPrivilegeProp:
      description: "Indicates whether operations in which one or more privileges were\
        \ used should be included in this Simple Result Criteria. If no value is provided,\
        \ then whether an operation used any privileges will not be considered when\
        \ determining whether it matches this Simple Result Criteria."
      enum:
      - required
      - prohibited
      - optional
      type: string
    Enumresult-criteria-assuranceSatisfiedProp:
      description: Indicates whether this Replication Assurance Result Criteria should
        match operations based on whether the assurance requirements have been satisfied.
      enum:
      - any
      - both-satisfied
      - either-satisfied
      - at-least-local-satisfied
      - at-least-remote-satisfied
      - only-local-satisfied
      - only-remote-satisfied
      - either-not-satisfied
      - at-least-local-not-satisfied
      - at-least-remote-not-satisfied
      - neither-satisfied
      type: string
    Enumresult-criteria-responseDelayedByAssuranceProp:
      description: Indicates whether this Replication Assurance Result Criteria should
        match operations based on whether the response to the client was delayed by
        assurance processing.
      enum:
      - any
      - "true"
      - "false"
      type: string
    Enumresult-criteria-searchIndexedCriteriaProp:
      description: Indicates whether a search operation should be matched by this
        Simple Result Criteria based on whether it is considered indexed by the server.
        This will be ignored for all operations other than search.
      enum:
      - any
      - indexed
      - unindexed
      type: string
    Enumresult-criteria-remoteAssuranceLevelProp:
      description: The local assurance level values that will be allowed to match
        this Replication Assurance Result Criteria.
      enum:
      - none
      - received-any-remote-location
      - received-all-remote-locations
      - processed-all-remote-servers
      type: string
    Enumresult-criteria-queueTimeCriteriaProp:
      description: "Indicates whether the time the operation was required to wait\
        \ on the work queue should be taken into consideration when determining whether\
        \ to include the operation in this Simple Result Criteria. If the queue time\
        \ should be taken into account, then the \"queue-time-value\" property should\
        \ contain the boundary value. This property should only be given a value other\
        \ than \"any\" if the work queue has been configured to monitor the time operations\
        \ have spent on the work queue."
      enum:
      - any
      - less-than-or-equal-to
      - greater-than-or-equal-to
      type: string
    Enumresult-criteria-usedAlternateAuthzidProp:
      description: "Indicates whether operation results in which the associated operation\
        \ used an authorization identity that is different from the authentication\
        \ identity (e.g., as the result of using a proxied authorization control)\
        \ should be included in this Simple Result Criteria. If no value is provided,\
        \ then whether an operation used an alternate authorization identity will\
        \ not be considered when determining whether it matches this Simple Result\
        \ Criteria."
      enum:
      - required
      - prohibited
      - optional
      type: string
    Enumresult-criteria-retiredPasswordUsedForBindProp:
      description: Indicates whether the use of a retired password for authentication
        should be considered when determining whether a bind operation should be included
        in this Simple Result Criteria. This will be ignored for all operations other
        than bind.
      enum:
      - any
      - retired-password-used
      - retired-password-not-used
      type: string
    Enumresult-criteria-assuranceTimeoutCriteriaProp:
      description: The criteria to use when performing matching based on the assurance
        timeout.
      enum:
      - any
      - less-than-or-equal-to
      - greater-than-or-equal-to
      type: string
    Enumresult-criteria-missingPrivilegeProp:
      description: "Specifies the name of a privilege that must have been missing\
        \ during the processing for operations included in this Simple Result Criteria.\
        \ If any privilege names are provided, then the associated operation must\
        \ have been missing at least one of those privileges. If no privilege names\
        \ were provided, then the set of privileges missing will not be considered\
        \ when determining whether an operation should be included in this Simple\
        \ Result Criteria."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - use-admin-session
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-externally-processed-authentication
      - permit-export-reversible-passwords
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    add-exact-match-identity-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_exact_match_identity_mapper_request_allOf'
      - $ref: '#/components/schemas/exact-match-identity-mapper-shared'
    exact-match-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/exact_match_identity_mapper_response_allOf'
      - $ref: '#/components/schemas/exact-match-identity-mapper-shared'
    exact-match-identity-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexact-match-identity-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        matchAttribute:
          items:
            description: Specifies the attribute whose value should exactly match
              the ID string provided to this identity mapper.
            type: string
          type: array
        matchBaseDN:
          items:
            description: Specifies the set of base DNs below which to search for users.
            type: string
          type: array
        matchFilter:
          description: An optional filter that mapped users must match.
          type: string
        description:
          description: A description for this Identity Mapper
          type: string
        enabled:
          description: Indicates whether the Identity Mapper is enabled for use.
          type: boolean
      required:
      - enabled
      - matchAttribute
      - schemas
      type: object
    Enumexact-match-identity-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:identity-mapper:exact-match
      type: string
    add-groovy-scripted-identity-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_exact_match_identity_mapper_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-identity-mapper-shared'
    groovy-scripted-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/exact_match_identity_mapper_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-identity-mapper-shared'
    groovy-scripted-identity-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-identity-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted Identity Mapper.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted Identity Mapper. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Identity Mapper
          type: string
        enabled:
          description: Indicates whether the Identity Mapper is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-identity-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:identity-mapper:groovy-scripted
      type: string
    add-regular-expression-identity-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_exact_match_identity_mapper_request_allOf'
      - $ref: '#/components/schemas/regular-expression-identity-mapper-shared'
    regular-expression-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/exact_match_identity_mapper_response_allOf'
      - $ref: '#/components/schemas/regular-expression-identity-mapper-shared'
    regular-expression-identity-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumregular-expression-identity-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        matchAttribute:
          items:
            description: Specifies the name or OID of the attribute whose value should
              match the provided identifier string after it has been processed by
              the associated regular expression.
            type: string
          type: array
        matchBaseDN:
          items:
            description: "Specifies the base DN(s) that should be used when performing\
              \ searches to map the provided ID string to a user entry. If multiple\
              \ values are given, searches are performed below all the specified base\
              \ DNs."
            type: string
          type: array
        matchFilter:
          description: An optional filter that mapped users must match.
          type: string
        matchPattern:
          description: Specifies the regular expression pattern that is used to identify
            portions of the ID string that will be replaced.
          type: string
        replacePattern:
          description: Specifies the replacement pattern that should be used for substrings
            in the ID string that match the provided regular expression pattern.
          type: string
        description:
          description: A description for this Identity Mapper
          type: string
        enabled:
          description: Indicates whether the Identity Mapper is enabled for use.
          type: boolean
      required:
      - enabled
      - matchAttribute
      - matchPattern
      - schemas
      type: object
    Enumregular-expression-identity-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:identity-mapper:regular-expression
      type: string
    add-aggregate-identity-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_exact_match_identity_mapper_request_allOf'
      - $ref: '#/components/schemas/aggregate-identity-mapper-shared'
    aggregate-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/exact_match_identity_mapper_response_allOf'
      - $ref: '#/components/schemas/aggregate-identity-mapper-shared'
    aggregate-identity-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaggregate-identity-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        allIncludedIdentityMapper:
          items:
            description: "The set of identity mappers that must all match the target\
              \ entry. Each identity mapper must uniquely match the same target entry.\
              \ If any of the identity mappers match multiple entries, if any of them\
              \ match zero entries, or if any of them match different entries, then\
              \ the mapping will fail."
            type: string
          type: array
        anyIncludedIdentityMapper:
          items:
            description: "The set of identity mappers that will be used to identify\
              \ the target entry. At least one identity mapper must uniquely match\
              \ an entry. If multiple identity mappers match entries, then they must\
              \ all uniquely match the same entry. If none of the identity mappers\
              \ match any entries, if any of them match multiple entries, or if any\
              \ of them match different entries, then the mapping will fail."
            type: string
          type: array
        description:
          description: A description for this Identity Mapper
          type: string
        enabled:
          description: Indicates whether the Identity Mapper is enabled for use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumaggregate-identity-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:identity-mapper:aggregate
      type: string
    add-third-party-identity-mapper-request:
      allOf:
      - $ref: '#/components/schemas/add_exact_match_identity_mapper_request_allOf'
      - $ref: '#/components/schemas/third-party-identity-mapper-shared'
    third-party-identity-mapper-response:
      allOf:
      - $ref: '#/components/schemas/exact_match_identity_mapper_response_allOf'
      - $ref: '#/components/schemas/third-party-identity-mapper-shared'
    third-party-identity-mapper-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-identity-mapperSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Identity Mapper.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Identity Mapper. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Identity Mapper
          type: string
        enabled:
          description: Indicates whether the Identity Mapper is enabled for use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-identity-mapperSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:identity-mapper:third-party
      type: string
    add-generate-server-profile-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/generate-server-profile-recurring-task-shared'
    generate-server-profile-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/generate-server-profile-recurring-task-shared'
    generate-server-profile-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgenerate-server-profile-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        profileDirectory:
          description: "The directory in which the generated server profiles will\
            \ be placed. The files will be named with the pattern \"server-profile-{timestamp}.zip\"\
            , where \"{timestamp}\" represents the time that the profile was generated."
          type: string
        includePath:
          items:
            description: "An optional set of additional paths to files within the\
              \ instance root that should be included in the generated server profile.\
              \ All paths must be within the instance root, and relative paths will\
              \ be relative to the instance root."
            type: string
          type: array
        retainPreviousProfileCount:
          description: The minimum number of previous server profile zip files that
            should be preserved after a new profile is generated.
          type: integer
        retainPreviousProfileAge:
          description: The minimum age of previous server profile zip files that should
            be preserved after a new profile is generated.
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - profileDirectory
      - schemas
      type: object
    Enumgenerate-server-profile-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:generate-server-profile
      type: string
    add-leave-lockdown-mode-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-shared'
    leave-lockdown-mode-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-shared'
    leave-lockdown-mode-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumleave-lockdown-mode-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reason:
          description: The reason that the server is being taken out of in lockdown
            mode.
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - schemas
      type: object
    Enumleave-lockdown-mode-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:leave-lockdown-mode
      type: string
    add-backup-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/backup-recurring-task-shared'
    backup-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/backup-recurring-task-shared'
    backup-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbackup-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        backupDirectory:
          description: "The directory in which backup files will be placed. When backing\
            \ up a single backend, the backup files will be placed directly in this\
            \ directory. When backing up multiple backends, the backup files for each\
            \ backend will be placed in a subdirectory whose name is the corresponding\
            \ backend ID."
          type: string
        includedBackendID:
          items:
            description: The backend IDs of any backends that should be included in
              the backup.
            type: string
          type: array
        excludedBackendID:
          items:
            description: The backend IDs of any backends that should be excluded from
              the backup. All backends that support backups and are not listed will
              be included.
            type: string
          type: array
        compress:
          description: Indicates whether to compress the data as it is written into
            the backup.
          type: boolean
        encrypt:
          description: Indicates whether to encrypt the data as it is written into
            the backup.
          type: boolean
        encryptionSettingsDefinitionID:
          description: The ID of an encryption settings definition to use to obtain
            the backup encryption key.
          type: string
        sign:
          description: "Indicates whether to cryptographically sign backups, which\
            \ will make it possible to detect whether the backup has been altered\
            \ since it was created."
          type: boolean
        retainPreviousFullBackupCount:
          description: The minimum number of previous full backups that should be
            preserved after a new backup completes successfully.
          type: integer
        retainPreviousFullBackupAge:
          description: The minimum age of previous full backups that should be preserved
            after a new backup completes successfully.
          type: string
        maxMegabytesPerSecond:
          description: "The maximum rate, in megabytes per second, at which backups\
            \ should be written."
          type: integer
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - backupDirectory
      - schemas
      type: object
    Enumbackup-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:backup
      type: string
    add-delay-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/delay-recurring-task-shared'
    delay-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/delay-recurring-task-shared'
    delay-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdelay-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        sleepDuration:
          description: The length of time to sleep before the task completes.
          type: string
        durationToWaitForWorkQueueIdle:
          description: "Indicates that task should wait for up to the specified length\
            \ of time for the work queue to report that all worker threads are idle\
            \ and there are no pending operations. Note that this primarily monitors\
            \ operations that use worker threads, which does not include internal\
            \ operations (for example, those invoked by extensions), and may not include\
            \ requests from non-LDAP clients (for example, HTTP-based clients)."
          type: string
        ldapURLForSearchExpectedToReturnEntries:
          items:
            description: "An LDAP URL that provides the criteria for a search request\
              \ that is expected to return at least one entry. The search will be\
              \ performed internally, and only the base DN, scope, and filter from\
              \ the URL will be used; any host, port, or requested attributes included\
              \ in the URL will be ignored."
            type: string
          type: array
        searchInterval:
          description: The length of time the server should sleep between searches
            performed using the criteria from the ldap-url-for-search-expected-to-return-entries
            property.
          type: string
        searchTimeLimit:
          description: The length of time that the server will wait for a response
            to each internal search performed using the criteria from the ldap-url-for-search-expected-to-return-entries
            property.
          type: string
        durationToWaitForSearchToReturnEntries:
          description: The maximum length of time that the server will continue to
            perform internal searches using the criteria from the ldap-url-for-search-expected-to-return-entries
            property.
          type: string
        taskReturnStateIfTimeoutIsEncountered:
          $ref: '#/components/schemas/Enumrecurring-task-taskReturnStateIfTimeoutIsEncounteredProp'
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - schemas
      type: object
    Enumdelay-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:delay
      type: string
    add-statically-defined-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/statically-defined-recurring-task-shared'
    statically-defined-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/statically-defined-recurring-task-shared'
    statically-defined-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstatically-defined-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        taskJavaClass:
          description: The fully-qualified name of the Java class that provides the
            logic for the task to be invoked.
          type: string
        taskObjectClass:
          items:
            description: "The names or OIDs of the object classes to include in the\
              \ tasks that are scheduled from this Statically Defined Recurring Task.\
              \ All object classes must be defined in the server schema, and the combination\
              \ of object classes must be valid for a task entry."
            type: string
          type: array
        taskAttributeValue:
          items:
            description: "The set of attribute values that should be included in the\
              \ tasks that are scheduled from this Statically Defined Recurring Task.\
              \ Each value must be in the form {attribute-type}={value}, where {attribute-type}\
              \ is the name or OID of an attribute type that is defined in the schema\
              \ and permitted with the configured set of object classes, and {value}\
              \ is a value to assign to an attribute with that type. A multivalued\
              \ attribute can be created by providing multiple name-value pairs with\
              \ the same name and different values."
            type: string
          type: array
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - schemas
      - taskJavaClass
      - taskObjectClass
      type: object
    Enumstatically-defined-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:statically-defined
      type: string
    add-collect-support-data-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/collect-support-data-recurring-task-shared'
    collect-support-data-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/collect-support-data-recurring-task-shared'
    collect-support-data-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcollect-support-data-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        outputDirectory:
          description: "The directory in which the support data archive files will\
            \ be placed. The path must be a directory, and that directory must already\
            \ exist. Relative paths will be interpreted as relative to the server\
            \ root."
          type: string
        encryptionPassphraseFile:
          description: The path to a file that contains the passphrase to encrypt
            the contents of the support data archive.
          type: string
        includeExpensiveData:
          description: "Indicates whether the support data archive should include\
            \ information that may be expensive to obtain, and that may temporarily\
            \ affect the server's performance or responsiveness."
          type: boolean
        includeReplicationStateDump:
          description: "Indicates whether the support data archive should include\
            \ a replication state dump, which may be several megabytes in size."
          type: boolean
        includeBinaryFiles:
          description: Indicates whether the support data archive should include binary
            files that may not have otherwise been included. Note that it may not
            be possible to obscure or redact sensitive information in binary files.
          type: boolean
        includeExtensionSource:
          description: Indicates whether the support data archive should include the
            source code (if available) for any third-party extensions that may be
            installed in the server.
          type: boolean
        useSequentialMode:
          description: "Indicates whether to capture support data information sequentially\
            \ rather than in parallel. Capturing data in sequential mode may reduce\
            \ the amount of memory that the tool requires to operate, at the cost\
            \ of taking longer to run."
          type: boolean
        securityLevel:
          $ref: '#/components/schemas/Enumrecurring-task-securityLevelProp'
        jstackCount:
          description: The number of times to invoke the jstack utility to obtain
            a stack trace of all threads running in the JVM. A value of zero indicates
            that the jstack utility should not be invoked.
          type: integer
        reportCount:
          description: "The number of intervals of data to collect from tools that\
            \ use sample-based reporting, like vmstat, iostat, and mpstat. A value\
            \ of zero indicates that these kinds of tools should not be used to collect\
            \ any information."
          type: integer
        reportIntervalSeconds:
          description: "The duration (in seconds) between each interval of data to\
            \ collect from tools that use sample-based reporting, like vmstat, iostat,\
            \ and mpstat."
          type: integer
        logDuration:
          description: The maximum age (leading up to the time the collect-support-data
            tool was invoked) for log content to include in the support data archive.
          type: string
        logFileHeadCollectionSize:
          description: The amount of data to collect from the beginning of each log
            file included in the support data archive.
          type: string
        logFileTailCollectionSize:
          description: The amount of data to collect from the end of each log file
            included in the support data archive.
          type: string
        comment:
          description: An optional comment to include in a README file within the
            support data archive.
          type: string
        retainPreviousSupportDataArchiveCount:
          description: The minimum number of previous support data archives that should
            be preserved after a new archive is generated.
          type: integer
        retainPreviousSupportDataArchiveAge:
          description: The minimum age of previous support data archives that should
            be preserved after a new archive is generated.
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - outputDirectory
      - schemas
      type: object
    Enumcollect-support-data-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:collect-support-data
      type: string
    add-ldif-export-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/ldif-export-recurring-task-shared'
    ldif-export-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/ldif-export-recurring-task-shared'
    ldif-export-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumldif-export-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        ldifDirectory:
          description: The directory in which LDIF export files will be placed. The
            directory must already exist.
          type: string
        backendID:
          items:
            description: The backend ID for a backend to be exported.
            type: string
          type: array
        excludeBackendID:
          items:
            description: The backend ID for a backend to be excluded from the export.
            type: string
          type: array
        compress:
          description: Indicates whether to compress the LDIF data as it is exported.
          type: boolean
        encrypt:
          description: Indicates whether to encrypt the LDIF data as it exported.
          type: boolean
        encryptionSettingsDefinitionID:
          description: The ID of an encryption settings definition to use to obtain
            the LDIF export encryption key.
          type: string
        sign:
          description: "Indicates whether to cryptographically sign the exported data,\
            \ which will make it possible to detect whether the LDIF data has been\
            \ altered since it was exported."
          type: boolean
        retainPreviousLDIFExportCount:
          description: The minimum number of previous LDIF exports that should be
            preserved after a new export completes successfully.
          type: integer
        retainPreviousLDIFExportAge:
          description: The minimum age of previous LDIF exports that should be preserved
            after a new export completes successfully.
          type: string
        maxMegabytesPerSecond:
          description: "The maximum rate, in megabytes per second, at which LDIF exports\
            \ should be written."
          type: integer
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - ldifDirectory
      - schemas
      type: object
    Enumldif-export-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:ldif-export
      type: string
    add-enter-lockdown-mode-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-shared'
    enter-lockdown-mode-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-shared'
    enter-lockdown-mode-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumenter-lockdown-mode-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reason:
          description: The reason that the server is being placed in lockdown mode.
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - schemas
      type: object
    Enumenter-lockdown-mode-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:enter-lockdown-mode
      type: string
    add-exec-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/exec-recurring-task-shared'
    exec-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/exec-recurring-task-shared'
    exec-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexec-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        commandPath:
          description: "The absolute path to the command to execute. It must be an\
            \ absolute path, the corresponding file must exist, and it must be listed\
            \ in the config/exec-command-whitelist.txt file."
          type: string
        commandArguments:
          description: "A string containing the arguments to provide to the command.\
            \ If the command should be run without arguments, this property should\
            \ be left undefined. If there should be multiple arguments, then they\
            \ should be separated with spaces."
          type: string
        commandOutputFileBaseName:
          description: The path and base name for a file to which the command output
            (both standard output and standard error) should be written. This may
            be left undefined if the command output should not be recorded into a
            file.
          type: string
        retainPreviousOutputFileCount:
          description: The minimum number of previous command output files that should
            be preserved after a new instance of the command is invoked.
          type: integer
        retainPreviousOutputFileAge:
          description: The minimum age of previous command output files that should
            be preserved after a new instance of the command is invoked.
          type: string
        logCommandOutput:
          description: Indicates whether the command's output (both standard output
            and standard error) should be recorded in the server's error log.
          type: boolean
        taskCompletionStateForNonzeroExitCode:
          $ref: '#/components/schemas/Enumrecurring-task-taskCompletionStateForNonzeroExitCodeProp'
        workingDirectory:
          description: The absolute path to a working directory where the command
            should be executed. It must be an absolute path and the corresponding
            directory must exist.
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - commandPath
      - schemas
      type: object
    Enumexec-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:exec
      type: string
    add-file-retention-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/file-retention-recurring-task-shared'
    file-retention-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/file-retention-recurring-task-shared'
    file-retention-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-retention-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        targetDirectory:
          description: The path to the directory containing the files to examine.
            The directory must exist.
          type: string
        filenamePattern:
          description: "A pattern that specifies the names of the files to examine.\
            \ The pattern may contain zero or more asterisks as wildcards, where each\
            \ wildcard matches zero or more characters. It may also contain at most\
            \ one occurrence of the special string \"${timestamp}\", which will match\
            \ a timestamp with the format specified using the timestamp-format property.\
            \ All other characters in the pattern will be treated literally."
          type: string
        timestampFormat:
          $ref: '#/components/schemas/Enumrecurring-task-timestampFormatProp'
        retainFileCount:
          description: The minimum number of files matching the pattern that will
            be retained.
          type: integer
        retainFileAge:
          description: The minimum age of files matching the pattern that will be
            retained.
          type: string
        retainAggregateFileSize:
          description: "The minimum aggregate size of files that will be retained.\
            \ The size should be specified as an integer followed by a unit that is\
            \ one of \"b\" or \"bytes\", \"kb\" or \"kilobytes\", \"mb\" or \"megabytes\"\
            , \"gb\" or \"gigabytes\", or \"tb\" or \"terabytes\". For example, a\
            \ value of \"1 gb\" indicates that at least one gigabyte of files should\
            \ be retained."
          type: string
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - filenamePattern
      - schemas
      - targetDirectory
      - timestampFormat
      type: object
    Enumfile-retention-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:file-retention
      type: string
    add-third-party-recurring-task-request:
      allOf:
      - $ref: '#/components/schemas/add_generate_server_profile_recurring_task_request_allOf'
      - $ref: '#/components/schemas/third-party-recurring-task-shared'
    third-party-recurring-task-response:
      allOf:
      - $ref: '#/components/schemas/generate_server_profile_recurring_task_response_allOf'
      - $ref: '#/components/schemas/third-party-recurring-task-shared'
    third-party-recurring-task-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-recurring-taskSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Recurring Task.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Recurring Task. Each configuration property should be given
              in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Recurring Task
          type: string
        cancelOnTaskDependencyFailure:
          description: Indicates whether an instance of this Recurring Task should
            be canceled if the task immediately before it in the recurring task chain
            fails to complete successfully (including if it is canceled by an administrator
            before it starts or while it is running).
          type: boolean
        emailOnStart:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task starts running. If this option\
              \ is used, then at least one smtp-server must be configured in the global\
              \ configuration."
            type: string
          type: array
        emailOnSuccess:
          items:
            description: "The email addresses to which a message should be sent whenever\
              \ an instance of this Recurring Task completes successfully. If this\
              \ option is used, then at least one smtp-server must be configured in\
              \ the global configuration."
            type: string
          type: array
        emailOnFailure:
          items:
            description: "The email addresses to which a message should be sent if\
              \ an instance of this Recurring Task fails to complete successfully.\
              \ If this option is used, then at least one smtp-server must be configured\
              \ in the global configuration."
            type: string
          type: array
        alertOnStart:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task starts running.
          type: boolean
        alertOnSuccess:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task completes successfully.
          type: boolean
        alertOnFailure:
          description: Indicates whether the server should generate an administrative
            alert whenever an instance of this Recurring Task fails to complete successfully.
          type: boolean
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-recurring-taskSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:recurring-task:third-party
      type: string
    Enumrecurring-task-securityLevelProp:
      description: "The security level to use when deciding which information to include\
        \ in or exclude from the support data archive, and which included data should\
        \ be obscured or redacted."
      enum:
      - none
      - obscure-secrets
      - maximum
      type: string
    Enumrecurring-task-taskCompletionStateForNonzeroExitCodeProp:
      description: "The final task state that a task instance should have if the task\
        \ executes the specified command and that command completes with a nonzero\
        \ exit code, which generally means that the command did not complete successfully."
      enum:
      - stopped-by-error
      - completed-with-errors
      - completed-successfully
      type: string
    Enumrecurring-task-timestampFormatProp:
      description: "The format to use for the timestamp represented by the \"${timestamp}\"\
        \ token in the filename pattern."
      enum:
      - generalized-time-utc-with-milliseconds
      - generalized-time-utc-with-seconds
      - generalized-time-utc-with-minutes
      - local-time-with-milliseconds
      - local-time-with-seconds
      - local-time-with-minutes
      - local-date
      type: string
    Enumrecurring-task-taskReturnStateIfTimeoutIsEncounteredProp:
      description: "The return state to use if a timeout is encountered while waiting\
        \ for the server work queue to become idle (if the duration-to-wait-for-work-queue-idle\
        \ property has a value), or if the time specified by the duration-to-wait-for-search-to-return-entries\
        \ elapses without the associated search returning any entries."
      enum:
      - stopped-by-error
      - completed-with-errors
      - completed-successfully
      type: string
    add-user-rest-resource-type-request:
      allOf:
      - $ref: '#/components/schemas/add_user_rest_resource_type_request_allOf'
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/user_rest_resource_type_response_allOf'
      - $ref: '#/components/schemas/user-rest-resource-type-shared'
    user-rest-resource-type-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumuser-rest-resource-typeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordAttributeCategory:
          description: Specifies which attribute category the password belongs to.
          type: string
        passwordDisplayOrderIndex:
          description: This property determines the display order for the password
            within its attribute category. Attributes are ordered within their category
            based on this index from least to greatest.
          type: integer
        description:
          description: A description for this REST Resource Type
          type: string
        enabled:
          description: Indicates whether the REST Resource Type is enabled.
          type: boolean
        resourceEndpoint:
          description: The HTTP addressable endpoint of this REST Resource Type relative
            to a REST API base URL. Do not include a leading '/'.
          type: string
        structuralLDAPObjectclass:
          description: Specifies the LDAP structural object class that should be exposed
            by this REST Resource Type.
          type: string
        auxiliaryLDAPObjectclass:
          items:
            description: Specifies an auxiliary LDAP object class that should be exposed
              by this REST Resource Type.
            type: string
          type: array
        searchBaseDN:
          description: Specifies the base DN of the branch of the LDAP directory where
            resources of this type are located.
          type: string
        includeFilter:
          items:
            description: The set of LDAP filters that define the LDAP entries that
              should be included in this REST Resource Type.
            type: string
          type: array
        parentDN:
          description: "Specifies the DN of the parent entry for new resources of\
            \ this type, when a parent resource is not provided by the app. The parent\
            \ DN must be at or below the search base of this resource type."
          type: string
        parentResourceType:
          description: Specifies the name of another resource type which may be a
            parent of new resources of this type. The search base DN of the parent
            resource type must be at or above the search base DN of this resource
            type.
          type: string
        relativeDNFromParentResource:
          description: Specifies a template for a relative DN from the parent resource
            which identifies the parent entry for a new resource of this type. If
            this property is not specified then new resources are created immediately
            below the parent resource or parent DN.
          type: string
        createRDNAttributeType:
          description: Specifies the name or OID of the LDAP attribute type to be
            used as the RDN of new resources.
          type: string
        postCreateConstructedAttribute:
          items:
            description: Specifies an attribute whose values are to be constructed
              when a new resource is created. The values are only set at creation
              time. Subsequent modifications to attributes in the constructed attribute
              value-pattern are not propagated here.
            type: string
          type: array
        updateConstructedAttribute:
          items:
            description: Specifies an attribute whose values are to be constructed
              when a resource is updated. The constructed values replace any existing
              values of the attribute.
            type: string
          type: array
        displayName:
          description: A human readable display name for this REST Resource Type.
          type: string
        searchFilterPattern:
          description: Specifies the LDAP filter that should be used when searching
            for resources matching provided search text. All attribute types in the
            filter pattern referencing the search text must have a Delegated Admin
            Attribute definition.
          type: string
        primaryDisplayAttributeType:
          description: Specifies the name or OID of the LDAP attribute type which
            is the primary display attribute. This attribute type must be in the search
            filter pattern and must have a Delegated Admin Attribute definition.
          type: string
        delegatedAdminSearchSizeLimit:
          description: The maximum number of resources that may be returned from a
            search request.
          type: integer
        delegatedAdminReportSizeLimit:
          description: The maximum number of resources that may be included in a report.
          type: integer
        membersColumnName:
          description: Specifies the name of the group member column that will be
            displayed in the Delegated Admin UI
          type: string
        nonmembersColumnName:
          description: Specifies the name of the group nonmember column that will
            be displayed in the Delegated Admin UI
          type: string
      required:
      - enabled
      - resourceEndpoint
      - schemas
      - searchBaseDN
      - structuralLDAPObjectclass
      type: object
    Enumuser-rest-resource-typeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:rest-resource-type:user
      type: string
    add-group-rest-resource-type-request:
      allOf:
      - $ref: '#/components/schemas/add_user_rest_resource_type_request_allOf'
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-response:
      allOf:
      - $ref: '#/components/schemas/user_rest_resource_type_response_allOf'
      - $ref: '#/components/schemas/group-rest-resource-type-shared'
    group-rest-resource-type-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroup-rest-resource-typeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        membersColumnName:
          description: Specifies the name of the group member column that will be
            displayed in the Delegated Admin UI
          type: string
        nonmembersColumnName:
          description: Specifies the name of the group nonmember column that will
            be displayed in the Delegated Admin UI
          type: string
        description:
          description: A description for this REST Resource Type
          type: string
        enabled:
          description: Indicates whether the REST Resource Type is enabled.
          type: boolean
        resourceEndpoint:
          description: The HTTP addressable endpoint of this REST Resource Type relative
            to a REST API base URL. Do not include a leading '/'.
          type: string
        structuralLDAPObjectclass:
          description: Specifies the LDAP structural object class that should be exposed
            by this REST Resource Type.
          type: string
        auxiliaryLDAPObjectclass:
          items:
            description: Specifies an auxiliary LDAP object class that should be exposed
              by this REST Resource Type.
            type: string
          type: array
        searchBaseDN:
          description: Specifies the base DN of the branch of the LDAP directory where
            resources of this type are located.
          type: string
        includeFilter:
          items:
            description: The set of LDAP filters that define the LDAP entries that
              should be included in this REST Resource Type.
            type: string
          type: array
        parentDN:
          description: "Specifies the DN of the parent entry for new resources of\
            \ this type, when a parent resource is not provided by the app. The parent\
            \ DN must be at or below the search base of this resource type."
          type: string
        parentResourceType:
          description: Specifies the name of another resource type which may be a
            parent of new resources of this type. The search base DN of the parent
            resource type must be at or above the search base DN of this resource
            type.
          type: string
        relativeDNFromParentResource:
          description: Specifies a template for a relative DN from the parent resource
            which identifies the parent entry for a new resource of this type. If
            this property is not specified then new resources are created immediately
            below the parent resource or parent DN.
          type: string
        createRDNAttributeType:
          description: Specifies the name or OID of the LDAP attribute type to be
            used as the RDN of new resources.
          type: string
        postCreateConstructedAttribute:
          items:
            description: Specifies an attribute whose values are to be constructed
              when a new resource is created. The values are only set at creation
              time. Subsequent modifications to attributes in the constructed attribute
              value-pattern are not propagated here.
            type: string
          type: array
        updateConstructedAttribute:
          items:
            description: Specifies an attribute whose values are to be constructed
              when a resource is updated. The constructed values replace any existing
              values of the attribute.
            type: string
          type: array
        displayName:
          description: A human readable display name for this REST Resource Type.
          type: string
        searchFilterPattern:
          description: Specifies the LDAP filter that should be used when searching
            for resources matching provided search text. All attribute types in the
            filter pattern referencing the search text must have a Delegated Admin
            Attribute definition.
          type: string
        primaryDisplayAttributeType:
          description: Specifies the name or OID of the LDAP attribute type which
            is the primary display attribute. This attribute type must be in the search
            filter pattern and must have a Delegated Admin Attribute definition.
          type: string
        delegatedAdminSearchSizeLimit:
          description: The maximum number of resources that may be returned from a
            search request.
          type: integer
        delegatedAdminReportSizeLimit:
          description: The maximum number of resources that may be included in a report.
          type: integer
      required:
      - enabled
      - resourceEndpoint
      - schemas
      - searchBaseDN
      - structuralLDAPObjectclass
      type: object
    Enumgroup-rest-resource-typeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:rest-resource-type:group
      type: string
    add-unboundid-ms-chap-v2-sasl-mechanism-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_unboundid_ms_chap_v2_sasl_mechanism_handler_request_allOf'
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-shared'
    unboundid-ms-chap-v2-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/unboundid_ms_chap_v2_sasl_mechanism_handler_response_allOf'
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-shared'
    unboundid-ms-chap-v2-sasl-mechanism-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-ms-chap-v2-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the entry
            associated with the username provided in the bind request.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumunboundid-ms-chap-v2-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-ms-chap-v2
      type: string
    unboundid-totp-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the user(s)
            targeted in the authentication and/or authorization identities contained
            in the bind request. This will only be used for "u:"-style identities.
          type: string
        sharedSecretAttributeType:
          description: The name or OID of the attribute that will be used to hold
            the shared secret key used during TOTP processing.
          type: string
        timeIntervalDuration:
          description: The duration of the time interval used for TOTP processing.
          type: string
        adjacentIntervalsToCheck:
          description: The number of adjacent time intervals (both before and after
            the current time) that should be checked when performing authentication.
          type: integer
        requireStaticPassword:
          description: "Indicates whether to require a static password (as might be\
            \ held in the userPassword attribute, or whatever password attribute is\
            \ defined in the password policy governing the user) in addition to the\
            \ one-time password."
          type: boolean
        preventTOTPReuse:
          description: Indicates whether to prevent clients from re-using TOTP passwords.
          type: boolean
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumunboundid-totp-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-totp
      type: string
    unboundid-yubikey-otp-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-yubikey-otp-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        yubikeyClientID:
          description: The client ID to include in requests to the YubiKey validation
            server. A client ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
          type: string
        yubikeyAPIKey:
          description: The API key needed to verify signatures generated by the YubiKey
            validation server. A client ID and API key may be obtained for free from
            https://upgrade.yubico.com/getapikey/.
          format: password
          type: string
        yubikeyAPIKeyPassphraseProvider:
          description: The passphrase provider to use to obtain the API key needed
            to verify signatures generated by the YubiKey validation server. A client
            ID and API key may be obtained for free from https://upgrade.yubico.com/getapikey/.
          type: string
        yubikeyValidationServerBaseURL:
          items:
            description: The base URL of the validation server to use to verify one-time
              passwords. You should only need to change the value if you wish to use
              your own validation server instead of using one of the Yubico servers.
              The server must use the YubiKey Validation Protocol version 2.0.
            type: string
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the user(s)
            targeted in the authentication and/or authorization identities contained
            in the bind request. This will only be used for "u:"-style identities.
          type: string
        requireStaticPassword:
          description: Indicates whether a user will be required to provide a static
            password when authenticating via the UNBOUNDID-YUBIKEY-OTP SASL mechanism.
          type: boolean
        keyManagerProvider:
          description: "Specifies which key manager provider should be used to obtain\
            \ a client certificate to present to the validation server when performing\
            \ HTTPS communication. This may be left undefined if communication will\
            \ not be secured with HTTPS, or if there is no need to present a client\
            \ certificate to the validation service."
          type: string
        trustManagerProvider:
          description: "Specifies which trust manager provider should be used to determine\
            \ whether to trust the certificate presented by the server when performing\
            \ HTTPS communication. This may be left undefined if HTTPS communication\
            \ is not needed, or if the validation service presents a certificate that\
            \ is trusted by the default JVM configuration (which should be the case\
            \ for the validation servers that Yubico provides, but may not be the\
            \ case if an alternate validation server is configured)."
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      - yubikeyValidationServerBaseURL
      type: object
    Enumunboundid-yubikey-otp-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-yubikey-otp
      type: string
    external-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexternal-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        certificateValidationPolicy:
          $ref: '#/components/schemas/Enumsasl-mechanism-handler-certificateValidationPolicyProp'
        certificateAttribute:
          description: Specifies the name of the attribute to hold user certificates.
          type: string
        certificateMapper:
          description: Specifies the name of the certificate mapper that should be
            used to match client certificates to user entries.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - certificateMapper
      - certificateValidationPolicy
      - enabled
      - schemas
      type: object
    Enumexternal-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:external
      type: string
    digest-md5-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdigest-md5-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        realm:
          description: Specifies the realm that is to be used by the server for DIGEST-MD5
            authentication.
          type: string
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            with this SASL mechanism handler to match the authentication or authorization
            ID included in the SASL bind request to the corresponding user in the
            directory.
          type: string
        serverFqdn:
          description: Specifies the DNS-resolvable fully-qualified domain name for
            the server that is used when validating the digest-uri parameter during
            the authentication process.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumdigest-md5-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5
      type: string
    plain-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumplain-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            with this SASL mechanism handler to match the authentication or authorization
            ID included in the SASL bind request to the corresponding user in the
            directory.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumplain-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:plain
      type: string
    add-unboundid-delivered-otp-sasl-mechanism-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_unboundid_ms_chap_v2_sasl_mechanism_handler_request_allOf'
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-shared'
    unboundid-delivered-otp-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/unboundid_ms_chap_v2_sasl_mechanism_handler_response_allOf'
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-shared'
    unboundid-delivered-otp-sasl-mechanism-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-delivered-otp-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the user(s)
            targeted in the authentication and/or authorization identities contained
            in the bind request. This will only be used for "u:"-style identities.
          type: string
        otpValidityDuration:
          description: The maximum length of time that a one-time password value should
            be considered valid.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - otpValidityDuration
      - schemas
      type: object
    Enumunboundid-delivered-otp-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-delivered-otp
      type: string
    unboundid-external-auth-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: The identity mapper that should be used to identify the user
            targeted by the authentication ID contained in the bind request. This
            will only be used for "u:"-style authentication ID values.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth
      type: string
    anonymous-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumanonymous-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumanonymous-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:anonymous
      type: string
    cram-md5-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcram-md5-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        identityMapper:
          description: Specifies the name of the identity mapper used with this SASL
            mechanism handler to match the authentication ID included in the SASL
            bind request to the corresponding user in the directory.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumcram-md5-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:cram-md5
      type: string
    add-oauth-bearer-sasl-mechanism-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_unboundid_ms_chap_v2_sasl_mechanism_handler_request_allOf'
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-shared'
    oauth-bearer-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/unboundid_ms_chap_v2_sasl_mechanism_handler_response_allOf'
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-shared'
    oauth-bearer-sasl-mechanism-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumoauth-bearer-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        accessTokenValidator:
          items:
            description: An access token validator that will ensure that each presented
              OAuth access token is authentic and trustworthy. It must be configured
              with an identity mapper that will be used to map the access token to
              a local entry.
            type: string
          type: array
        idTokenValidator:
          items:
            description: "An ID token validator that will ensure that each presented\
              \ OpenID Connect ID token is authentic and trustworthy, and that will\
              \ map the token to a local entry."
            type: string
          type: array
        requireBothAccessTokenAndIDToken:
          description: Indicates whether bind requests will be required to have both
            an OAuth access token (in the "auth" element of the bind request) and
            an OpenID Connect ID token (in the "pingidentityidtoken" element of the
            bind request).
          type: boolean
        validateAccessTokenWhenIDTokenIsAlsoProvided:
          $ref: '#/components/schemas/Enumsasl-mechanism-handler-validateAccessTokenWhenIDTokenIsAlsoProvidedProp'
        alternateAuthorizationIdentityMapper:
          description: The identity mapper that will be used to map an alternate authorization
            identity (provided in the GS2 header of the encoded OAUTHBEARER bind request
            credentials) to the corresponding local entry.
          type: string
        allRequiredScope:
          items:
            description: The set of OAuth scopes that will all be required for any
              access tokens that will be allowed for authentication.
            type: string
          type: array
        anyRequiredScope:
          items:
            description: The set of OAuth scopes that a token may have to be allowed
              for authentication.
            type: string
          type: array
        serverFqdn:
          description: The fully-qualified name that clients are expected to use when
            communicating with the server.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumoauth-bearer-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:oauth-bearer
      type: string
    unboundid-certificate-plus-password-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumunboundid-certificate-plus-password-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        certificateMapper:
          description: The certificate mapper that will be used to identify the target
            user based on the certificate that was presented to the server.
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - certificateMapper
      - enabled
      - schemas
      type: object
    Enumunboundid-certificate-plus-password-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-certificate-plus-password
      type: string
    gssapi-sasl-mechanism-handler-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgssapi-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        realm:
          description: Specifies the realm to be used for GSSAPI authentication.
          type: string
        kdcAddress:
          description: Specifies the address of the KDC that is to be used for Kerberos
            processing.
          type: string
        keytab:
          description: Specifies the keytab file that should be used for Kerberos
            processing.
          type: string
        allowNullServerFqdn:
          description: Specifies whether or not to allow a null value for the server-fqdn.
          type: boolean
        serverFqdn:
          description: Specifies the DNS-resolvable fully-qualified domain name for
            the system.
          type: string
        allowedQualityOfProtection:
          items:
            $ref: '#/components/schemas/Enumsasl-mechanism-handler-allowedQualityOfProtectionProp'
          type: array
        identityMapper:
          description: Specifies the name of the identity mapper that is to be used
            with this SASL mechanism handler to match the Kerberos principal included
            in the SASL bind request to the corresponding user in the directory.
          type: string
        alternateAuthorizationIdentityMapper:
          description: "Specifies the name of the identity mapper that is to be used\
            \ with this SASL mechanism handler to map the alternate authorization\
            \ identity (if provided, and if different from the Kerberos principal\
            \ used as the authentication identity) to the corresponding user in the\
            \ directory. If no value is specified, then the mapper specified in the\
            \ identity-mapper configuration property will be used."
          type: string
        kerberosServicePrincipal:
          description: Specifies the Kerberos service principal that the Directory
            Server will use to identify itself to the KDC.
          type: string
        gssapiRole:
          $ref: '#/components/schemas/Enumsasl-mechanism-handler-gssapiRoleProp'
        jaasConfigFile:
          description: Specifies the path to a JAAS (Java Authentication and Authorization
            Service) configuration file that provides the information that the JVM
            should use for Kerberos processing.
          type: string
        enableDebug:
          description: "Indicates whether to enable debugging for the Java GSSAPI\
            \ provider. Debug information will be written to standard output, which\
            \ should be captured in the server.out log file."
          type: boolean
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - identityMapper
      - schemas
      type: object
    Enumgssapi-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:gssapi
      type: string
    add-third-party-sasl-mechanism-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_unboundid_ms_chap_v2_sasl_mechanism_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-shared'
    third-party-sasl-mechanism-handler-response:
      allOf:
      - $ref: '#/components/schemas/unboundid_ms_chap_v2_sasl_mechanism_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-shared'
    third-party-sasl-mechanism-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-sasl-mechanism-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party SASL Mechanism Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party SASL Mechanism Handler. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        identityMapper:
          description: "The identity mapper that may be used to map usernames to user\
            \ entries. If the custom SASL mechanism involves a username or some other\
            \ form of authentication and/or authorization identity, then this may\
            \ be used to map that ID to an entry for that user."
          type: string
        description:
          description: A description for this SASL Mechanism Handler
          type: string
        enabled:
          description: Indicates whether the SASL mechanism handler is enabled for
            use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-sasl-mechanism-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:third-party
      type: string
    Enumsasl-mechanism-handler-certificateValidationPolicyProp:
      description: Indicates whether to attempt to validate the peer certificate against
        a certificate held in the user's entry.
      enum:
      - always
      - ifpresent
      - never
      type: string
    Enumsasl-mechanism-handler-allowedQualityOfProtectionProp:
      description: Specifies the supported quality of protection (QoP) levels that
        clients will be permitted to request when performing GSSAPI authentication.
      enum:
      - auth
      - auth-int
      - auth-conf
      type: string
    Enumsasl-mechanism-handler-gssapiRoleProp:
      description: Specifies the role that should be declared for the server in the
        generated JAAS configuration file.
      enum:
      - acceptor
      - initiator
      type: string
    Enumsasl-mechanism-handler-validateAccessTokenWhenIDTokenIsAlsoProvidedProp:
      description: Indicates whether to validate the OAuth access token in addition
        to the OpenID Connect ID token in OAUTHBEARER bind requests that contain both
        types of tokens.
      enum:
      - validate-only-the-id-token
      - validate-both-tokens-but-only-map-the-id-token
      - validate-and-map-both-tokens
      type: string
    add-expired-password-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
    expired-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/expired-password-data-security-auditor-shared'
    expired-password-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumexpired-password-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        passwordEvaluationAge:
          description: "If set, the auditor will report all users with passwords older\
            \ than the specified value even if password expiration is not enabled."
          type: string
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enumexpired-password-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:expired-password
      type: string
    add-multiple-password-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
    multiple-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-shared'
    multiple-password-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummultiple-password-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enummultiple-password-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:multiple-password
      type: string
    add-disabled-account-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
    disabled-account-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-shared'
    disabled-account-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdisabled-account-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enumdisabled-account-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:disabled-account
      type: string
    add-weakly-encoded-password-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
    weakly-encoded-password-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-shared'
    weakly-encoded-password-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumweakly-encoded-password-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        weakPasswordStorageScheme:
          items:
            description: The password storage schemes that are considered weak. Users
              with any of the specified password storage schemes will be included
              in the report.
            type: string
          type: array
        weakCryptEncoding:
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-weakCryptEncodingProp'
          type: array
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      - weakPasswordStorageScheme
      type: object
    Enumweakly-encoded-password-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:weakly-encoded-password
      type: string
    add-privilege-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
    privilege-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/privilege-data-security-auditor-shared'
    privilege-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumprivilege-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        includePrivilege:
          items:
            $ref: '#/components/schemas/Enumdata-security-auditor-includePrivilegeProp'
          type: array
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enumprivilege-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:privilege
      type: string
    add-locked-account-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
    locked-account-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/locked-account-data-security-auditor-shared'
    locked-account-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumlocked-account-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        maximumIdleTime:
          description: "If set, users that have not authenticated for more than the\
            \ specified time will be reported even if idle account lockout is not\
            \ configured. Note that users may only be reported if the last login time\
            \ tracking is enabled."
          type: string
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enumlocked-account-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:locked-account
      type: string
    add-access-control-data-security-auditor-request:
      allOf:
      - $ref: '#/components/schemas/add_expired_password_data_security_auditor_request_allOf'
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
    access-control-data-security-auditor-response:
      allOf:
      - $ref: '#/components/schemas/expired_password_data_security_auditor_response_allOf'
      - $ref: '#/components/schemas/access-control-data-security-auditor-shared'
    access-control-data-security-auditor-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaccess-control-data-security-auditorSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        reportFile:
          description: Specifies the name of the detailed report file.
          type: string
        includeAttribute:
          items:
            description: "Specifies the attributes from the audited entries that should\
              \ be included detailed reports. By default, no attributes are included."
            type: string
          type: array
        enabled:
          description: Indicates whether the Data Security Auditor is enabled for
            use.
          type: boolean
        auditBackend:
          items:
            description: "Specifies which backends the data security auditor may be\
              \ applied to. By default, the data security auditors will audit entries\
              \ in all backend types that support data auditing (Local DB, LDIF, and\
              \ Config File Handler)."
            type: string
          type: array
        auditSeverity:
          $ref: '#/components/schemas/Enumdata-security-auditor-auditSeverityProp'
      required:
      - enabled
      - reportFile
      - schemas
      type: object
    Enumaccess-control-data-security-auditorSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:data-security-auditor:access-control
      type: string
    Enumdata-security-auditor-includePrivilegeProp:
      description: "If defined, only entries with the specified privileges will be\
        \ reported. By default, entries with any privilege assigned will be reported."
      enum:
      - audit-data-security
      - bypass-acl
      - bypass-read-acl
      - modify-acl
      - config-read
      - config-write
      - jmx-read
      - jmx-write
      - jmx-notify
      - ldif-import
      - ldif-export
      - backend-backup
      - backend-restore
      - server-shutdown
      - server-restart
      - proxied-auth
      - disconnect-client
      - password-reset
      - update-schema
      - privilege-change
      - unindexed-search
      - unindexed-search-with-control
      - bypass-pw-policy
      - lockdown-mode
      - stream-values
      - third-party-task
      - soft-delete-read
      - metrics-read
      - remote-log-read
      - manage-topology
      - permit-get-password-policy-state-issues
      - permit-proxied-mschapv2-details
      - permit-forwarding-client-connection-policy
      - exec-task
      - collect-support-data
      - file-servlet-access
      - permit-replace-certificate-request
      type: string
    Enumdata-security-auditor-auditSeverityProp:
      description: Specifies the severity of events to include in the report.
      enum:
      - error
      - warning
      - notice
      - verbose
      type: string
    Enumdata-security-auditor-weakCryptEncodingProp:
      description: Reporting on users with passwords encoded using the Crypt Password
        Storage scheme may be further limited by selecting one or more encoding mechanisms
        that are considered weak.
      enum:
      - crypt
      - sha-2-256
      - sha-2-512
      type: string
    add-statsd-monitoring-endpoint-request:
      allOf:
      - $ref: '#/components/schemas/add_statsd_monitoring_endpoint_request_allOf'
      - $ref: '#/components/schemas/statsd-monitoring-endpoint-shared'
    statsd-monitoring-endpoint-response:
      allOf:
      - $ref: '#/components/schemas/statsd_monitoring_endpoint_response_allOf'
      - $ref: '#/components/schemas/statsd-monitoring-endpoint-shared'
    statsd-monitoring-endpoint-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumstatsd-monitoring-endpointSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        hostname:
          description: The name of the host where this StatsD Monitoring Endpoint
            should send metric data.
          type: string
        serverPort:
          description: Specifies the port number of the endpoint where metric data
            should be sent.
          type: integer
        connectionType:
          $ref: '#/components/schemas/Enummonitoring-endpoint-connectionTypeProp'
        trustManagerProvider:
          description: The trust manager provider to use if SSL over TCP is to be
            used for connection-level security.
          type: string
        additionalTags:
          items:
            description: "Specifies any optional additional tags to include in StatsD\
              \ messages. Any additional tags will be appended to the end of each\
              \ StatsD message, separated by commas. Tags should be written in a [key]:[value]\
              \ format (\"host:server1\", for example)."
            type: string
          type: array
        enabled:
          description: Indicates whether this Monitoring Endpoint is enabled for use
            in the Directory Server.
          type: boolean
      required:
      - connectionType
      - enabled
      - hostname
      - serverPort
      type: object
    Enumstatsd-monitoring-endpointSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:monitoring-endpoint:statsd
      type: string
    Enummonitoring-endpoint-connectionTypeProp:
      description: Specifies the protocol and security that this StatsD Monitoring
        Endpoint should use to connect to the configured endpoint.
      enum:
      - unencrypted-udp
      - unencrypted-tcp
      - ssl-over-tcp
      type: string
    salted-sha256-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsalted-sha256-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsalted-sha256-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha256
      type: string
    add-crypt-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
    crypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/crypt-password-storage-scheme-shared'
    crypt-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumcrypt-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        passwordEncodingMechanism:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-passwordEncodingMechanismProp'
        numDigestRounds:
          description: Specifies the number of digest rounds to use for the SHA-2
            encodings. This will not be used for the legacy or MD5-based encodings.
          type: integer
        maxPasswordLength:
          description: "Specifies the maximum allowed length, in bytes, for passwords\
            \ encoded with this scheme, which can help mitigate denial of service\
            \ attacks from clients that attempt to bind with very long passwords."
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumcrypt-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:crypt
      type: string
    base64-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbase64-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Base64 Password Storage Scheme is enabled
            for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumbase64-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:base64
      type: string
    salted-md5-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsalted-md5-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Salted MD5 Password Storage Scheme is
            enabled for use.
          type: boolean
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumsalted-md5-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-md5
      type: string
    aes-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaes-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumaes-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes
      type: string
    add-vault-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
    vault-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/vault-password-storage-scheme-shared'
    vault-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumvault-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        vaultExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Vault instance containing the passphrase.
          type: string
        defaultField:
          description: The default name of the field in JSON objects contained in
            the AWS Secrets Manager service that contains the password for the target
            user.
          type: string
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      - vaultExternalServer
      type: object
    Enumvault-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:vault
      type: string
    add-third-party-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
    third-party-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/third-party-password-storage-scheme-shared'
    third-party-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Password Storage Scheme.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Password Storage Scheme. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party
      type: string
    add-argon2-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
    argon2-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/argon2-password-storage-scheme-shared'
    argon2-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumargon2-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        iterationCount:
          description: The number of rounds of cryptographic processing required in
            the course of encoding each password.
          type: integer
        parallelismFactor:
          description: The number of concurrent threads that will be used in the course
            of encoding each password.
          type: integer
        memoryUsageKb:
          description: The number of kilobytes of memory that must be used in the
            course of encoding each password.
          type: integer
        saltLengthBytes:
          description: The number of bytes to use for the generated salt.
          type: integer
        derivedKeyLengthBytes:
          description: The number of bytes to use for the derived key. The value must
            be greater than or equal to 8 and less than or equal to 512.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - derivedKeyLengthBytes
      - enabled
      - iterationCount
      - memoryUsageKb
      - parallelismFactor
      - saltLengthBytes
      - schemas
      type: object
    Enumargon2-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:argon2
      type: string
    add-third-party-enhanced-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
    third-party-enhanced-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-shared'
    third-party-enhanced-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-enhanced-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party Enhanced Password Storage Scheme.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party Enhanced Password Storage Scheme. Each configuration property
              should be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - extensionClass
      - schemas
      type: object
    Enumthird-party-enhanced-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:third-party-enhanced
      type: string
    add-pbkdf2-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
    pbkdf2-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-shared'
    pbkdf2-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumpbkdf2-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        digestAlgorithm:
          $ref: '#/components/schemas/Enumpassword-storage-scheme-digestAlgorithmProp'
        iterationCount:
          description: Specifies the number of iterations to use when encoding passwords.
            The value must be greater than or equal to 1000.
          type: integer
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
            The value must be greater than or equal to 8.
          type: integer
        derivedKeyLengthBytes:
          description: Specifies the number of bytes to use for the derived key. The
            value must be greater than or equal to 8.
          type: integer
        maxPasswordLength:
          description: "Specifies the maximum allowed length, in bytes, for passwords\
            \ encoded with this scheme, which can help mitigate denial of service\
            \ attacks from clients that attempt to bind with very long passwords."
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - derivedKeyLengthBytes
      - enabled
      - iterationCount
      - saltLengthBytes
      - schemas
      type: object
    Enumpbkdf2-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:pbkdf2
      type: string
    rc4-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumrc4-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the RC4 Password Storage Scheme is enabled
            for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumrc4-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:rc4
      type: string
    salted-sha384-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsalted-sha384-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsalted-sha384-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha384
      type: string
    triple-des-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtriple-des-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Triple DES Password Storage Scheme is
            enabled for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumtriple-des-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:triple-des
      type: string
    clear-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumclear-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Clear Password Storage Scheme is enabled
            for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumclear-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:clear
      type: string
    add-aes-256-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
    aes-256-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-shared'
    aes-256-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumaes-256-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        encryptionSettingsDefinitionID:
          description: "The identifier for the encryption settings definition that\
            \ should be used to derive the encryption key to use when encrypting new\
            \ passwords. If this is not provided, the server's preferred encryption\
            \ settings definition will be used."
          type: string
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumaes-256-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:aes-256
      type: string
    add-bcrypt-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
    bcrypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-shared'
    bcrypt-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumbcrypt-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        bcryptCostFactor:
          description: "Specifies the cost factor to use when encoding passwords with\
            \ Bcrypt. A higher cost factor requires more processing to generate a\
            \ password, which makes attacks against the password more expensive."
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumbcrypt-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:bcrypt
      type: string
    blowfish-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumblowfish-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumblowfish-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:blowfish
      type: string
    sha1-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsha1-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the SHA1 Password Storage Scheme is enabled
            for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumsha1-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:sha1
      type: string
    add-amazon-secrets-manager-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
    amazon-secrets-manager-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-shared'
    amazon-secrets-manager-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumamazon-secrets-manager-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        awsExternalServer:
          description: The external server with information to use when interacting
            with the AWS Secrets Manager service.
          type: string
        defaultField:
          description: The default name of the field in JSON objects contained in
            the AWS Secrets Manager service that contains the password for the target
            user.
          type: string
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - awsExternalServer
      - enabled
      - schemas
      type: object
    Enumamazon-secrets-manager-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:amazon-secrets-manager
      type: string
    add-azure-key-vault-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
    azure-key-vault-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-shared'
    azure-key-vault-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumazure-key-vault-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        keyVaultURI:
          description: The URI that identifies the Azure Key Vault from which the
            secret is to be retrieved.
          type: string
        azureAuthenticationMethod:
          description: The mechanism used to authenticate to the Azure service.
          type: string
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - azureAuthenticationMethod
      - enabled
      - keyVaultURI
      - schemas
      type: object
    Enumazure-key-vault-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:azure-key-vault
      type: string
    add-conjur-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
    conjur-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/conjur-password-storage-scheme-shared'
    conjur-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumconjur-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        conjurExternalServer:
          description: An external server definition with information needed to connect
            and authenticate to the Conjur instance containing user passwords.
          type: string
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - conjurExternalServer
      - enabled
      - schemas
      type: object
    Enumconjur-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:conjur
      type: string
    salted-sha1-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsalted-sha1-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the Salted SHA1 Password Storage Scheme is
            enabled for use.
          type: boolean
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enumsalted-sha1-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha1
      type: string
    salted-sha512-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsalted-sha512-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        saltLengthBytes:
          description: Specifies the number of bytes to use for the generated salt.
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumsalted-sha512-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:salted-sha512
      type: string
    add-scrypt-password-storage-scheme-request:
      allOf:
      - $ref: '#/components/schemas/add_crypt_password_storage_scheme_request_allOf'
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
    scrypt-password-storage-scheme-response:
      allOf:
      - $ref: '#/components/schemas/crypt_password_storage_scheme_response_allOf'
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-shared'
    scrypt-password-storage-scheme-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumscrypt-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scryptCpuMemoryCostFactorExponent:
          description: "Specifies the exponent that should be used for the CPU/memory\
            \ cost factor. The cost factor must be a power of two, so the value of\
            \ this property represents the power to which two is raised. The CPU/memory\
            \ cost factor specifies the number of iterations required for encoding\
            \ the password, and also affects the amount of memory required during\
            \ processing. A higher cost factor requires more processing and more memory\
            \ to generate a password, which makes attacks against the password more\
            \ expensive."
          type: integer
        scryptBlockSize:
          description: "Specifies the block size for the digest that will be used\
            \ in the course of encoding passwords. Increasing the block size while\
            \ keeping the CPU/memory cost factor constant will increase the amount\
            \ of memory required to encode a password, but it also increases the ratio\
            \ of sequential memory access to random memory access (and sequential\
            \ memory access is generally faster than random memory access)."
          type: integer
        scryptParallelizationParameter:
          description: Specifies the number of times that scrypt has to perform the
            entire encoding process to produce the final result.
          type: integer
        maxPasswordLength:
          description: "Specifies the maximum allowed length, in bytes, for passwords\
            \ encoded with this scheme, which can help mitigate denial of service\
            \ attacks from clients that attempt to bind with very long passwords."
          type: integer
        description:
          description: A description for this Password Storage Scheme
          type: string
        enabled:
          description: Indicates whether the Password Storage Scheme is enabled for
            use.
          type: boolean
      required:
      - enabled
      - schemas
      type: object
    Enumscrypt-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:scrypt
      type: string
    md5-password-storage-scheme-response:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enummd5-password-storage-schemeSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        enabled:
          description: Indicates whether the MD5 Password Storage Scheme is enabled
            for use.
          type: boolean
        description:
          description: A description for this Password Storage Scheme
          type: string
      required:
      - enabled
      - schemas
      type: object
    Enummd5-password-storage-schemeSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:password-storage-scheme:md5
      type: string
    Enumpassword-storage-scheme-passwordEncodingMechanismProp:
      description: Specifies the mechanism that should be used to encode clear-text
        passwords for use with this scheme.
      enum:
      - crypt
      - md5
      - sha-2-256
      - sha-2-512
      type: string
    Enumpassword-storage-scheme-digestAlgorithmProp:
      description: Specifies the digest algorithm that will be used when encoding
        passwords.
      enum:
      - sha-1
      - sha-256
      - sha-384
      - sha-512
      type: string
    http-configuration-response:
      example:
        schemas:
        - null
        includeStackTracesInErrorPages: true
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhttp-configurationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        includeStackTracesInErrorPages:
          description: "Indicates whether exceptions thrown by servlet or web application\
            \ extensions will be included in the resulting error page response. Stack\
            \ traces can be helpful in diagnosing application errors, but in production\
            \ they may reveal information that might be useful to a malicious attacker."
          type: boolean
      type: object
    Enumhttp-configurationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-configuration
      type: string
    add-json-attribute-constraints-request:
      allOf:
      - $ref: '#/components/schemas/add_json_attribute_constraints_request_allOf'
      - $ref: '#/components/schemas/json-attribute-constraints-shared'
    json-attribute-constraints-response:
      allOf:
      - $ref: '#/components/schemas/json_attribute_constraints_response_allOf'
      - $ref: '#/components/schemas/json-attribute-constraints-shared'
    json-attribute-constraints-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumjson-attribute-constraintsSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this JSON Attribute Constraints
          type: string
        enabled:
          description: Indicates whether this JSON Attribute Constraints is enabled.
          type: boolean
        attributeType:
          description: "The name or OID of the LDAP attribute type whose values will\
            \ be subject to the associated field constraints. This attribute type\
            \ must be defined in the server schema, and it must have a \"JSON object\"\
            \ syntax."
          type: string
        allowUnnamedFields:
          description: "Indicates whether JSON objects stored as values of attributes\
            \ with the associated attribute-type will be permitted to include fields\
            \ for which there is no subordinate json-field-constraints definition.\
            \ If unnamed fields are allowed, then no constraints will be imposed on\
            \ the values of those fields. However, if unnamed fields are not allowed,\
            \ then the server will reject any attempt to store a JSON object with\
            \ a field for which there is no corresponding json-fields-constraints\
            \ definition."
          type: boolean
      required:
      - attributeType
      type: object
    Enumjson-attribute-constraintsSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:json-attribute-constraints
      type: string
    add-http-servlet-cross-origin-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_http_servlet_cross_origin_policy_request_allOf'
      - $ref: '#/components/schemas/http-servlet-cross-origin-policy-shared'
    http-servlet-cross-origin-policy-response:
      allOf:
      - $ref: '#/components/schemas/http_servlet_cross_origin_policy_response_allOf'
      - $ref: '#/components/schemas/http-servlet-cross-origin-policy-shared'
    http-servlet-cross-origin-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumhttp-servlet-cross-origin-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this HTTP Servlet Cross Origin Policy
          type: string
        corsAllowedMethods:
          items:
            description: "A list of HTTP methods allowed for cross-origin access to\
              \ resources. i.e. one or more of GET, POST, PUT, DELETE, etc."
            type: string
          type: array
        corsAllowedOrigins:
          items:
            description: A list of origins that are allowed to execute cross-origin
              requests.
            type: string
          type: array
        corsExposedHeaders:
          items:
            description: A list of HTTP headers other than the simple response headers
              that browsers are allowed to access.
            type: string
          type: array
        corsAllowedHeaders:
          items:
            description: A list of HTTP headers that are supported by the resource
              and can be specified in a cross-origin request.
            type: string
          type: array
        corsPreflightMaxAge:
          description: The maximum amount of time that a preflight request can be
            cached by a client.
          type: string
        corsAllowCredentials:
          description: Indicates whether the servlet extension allows CORS requests
            with username/password credentials.
          type: boolean
      type: object
    Enumhttp-servlet-cross-origin-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:http-servlet-cross-origin-policy
      type: string
    add-delegated-admin-attribute-category-request:
      allOf:
      - $ref: '#/components/schemas/add_delegated_admin_attribute_category_request_allOf'
      - $ref: '#/components/schemas/delegated-admin-attribute-category-shared'
    delegated-admin-attribute-category-response:
      allOf:
      - $ref: '#/components/schemas/delegated_admin_attribute_category_response_allOf'
      - $ref: '#/components/schemas/delegated-admin-attribute-category-shared'
    delegated-admin-attribute-category-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumdelegated-admin-attribute-categorySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Delegated Admin Attribute Category
          type: string
        displayName:
          description: A human readable display name for this Delegated Admin Attribute
            Category.
          type: string
        displayOrderIndex:
          description: Delegated Admin Attribute Categories are ordered for display
            based on this index from least to greatest.
          type: integer
      required:
      - displayName
      - displayOrderIndex
      type: object
    Enumdelegated-admin-attribute-categorySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute-category
      type: string
    add-scim-schema-request:
      allOf:
      - $ref: '#/components/schemas/add_scim_schema_request_allOf'
      - $ref: '#/components/schemas/scim-schema-shared'
    scim-schema-response:
      allOf:
      - $ref: '#/components/schemas/scim_schema_response_allOf'
      - $ref: '#/components/schemas/scim-schema-shared'
    scim-schema-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumscim-schemaSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this SCIM Schema
          type: string
        schemaURN:
          description: The URN which identifies this SCIM Schema.
          type: string
        displayName:
          description: The human readable name for this SCIM Schema.
          type: string
      required:
      - schemaURN
      type: object
    Enumscim-schemaSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:scim-schema
      type: string
    add-location-request:
      allOf:
      - $ref: '#/components/schemas/add_location_request_allOf'
      - $ref: '#/components/schemas/location-shared'
    location-response:
      allOf:
      - $ref: '#/components/schemas/location_response_allOf'
      - $ref: '#/components/schemas/location-shared'
    location-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/EnumlocationSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Location
          type: string
      type: object
    EnumlocationSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:location
      type: string
    add-time-limit-log-retention-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_retention_policy_request_allOf'
      - $ref: '#/components/schemas/time-limit-log-retention-policy-shared'
    time-limit-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_retention_policy_response_allOf'
      - $ref: '#/components/schemas/time-limit-log-retention-policy-shared'
    time-limit-log-retention-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumtime-limit-log-retention-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        retainDuration:
          description: Specifies the desired minimum length of time that each log
            file should be retained.
          type: string
        description:
          description: A description for this Log Retention Policy
          type: string
      required:
      - retainDuration
      - schemas
      type: object
    Enumtime-limit-log-retention-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-retention-policy:time-limit
      type: string
    add-never-delete-log-retention-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_retention_policy_request_allOf'
      - $ref: '#/components/schemas/never-delete-log-retention-policy-shared'
    never-delete-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_retention_policy_response_allOf'
      - $ref: '#/components/schemas/never-delete-log-retention-policy-shared'
    never-delete-log-retention-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumnever-delete-log-retention-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        description:
          description: A description for this Log Retention Policy
          type: string
      required:
      - schemas
      type: object
    Enumnever-delete-log-retention-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-retention-policy:never-delete
      type: string
    add-file-count-log-retention-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_retention_policy_request_allOf'
      - $ref: '#/components/schemas/file-count-log-retention-policy-shared'
    file-count-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_retention_policy_response_allOf'
      - $ref: '#/components/schemas/file-count-log-retention-policy-shared'
    file-count-log-retention-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfile-count-log-retention-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        numberOfFiles:
          description: Specifies the number of archived log files to retain before
            the oldest ones are cleaned.
          type: integer
        description:
          description: A description for this Log Retention Policy
          type: string
      required:
      - numberOfFiles
      - schemas
      type: object
    Enumfile-count-log-retention-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-retention-policy:file-count
      type: string
    add-free-disk-space-log-retention-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_retention_policy_request_allOf'
      - $ref: '#/components/schemas/free-disk-space-log-retention-policy-shared'
    free-disk-space-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_retention_policy_response_allOf'
      - $ref: '#/components/schemas/free-disk-space-log-retention-policy-shared'
    free-disk-space-log-retention-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumfree-disk-space-log-retention-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        freeDiskSpace:
          description: Specifies the minimum amount of free disk space that should
            be available on the file system on which the archived log files are stored.
          type: string
        description:
          description: A description for this Log Retention Policy
          type: string
      required:
      - freeDiskSpace
      - schemas
      type: object
    Enumfree-disk-space-log-retention-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-retention-policy:free-disk-space
      type: string
    add-size-limit-log-retention-policy-request:
      allOf:
      - $ref: '#/components/schemas/add_time_limit_log_retention_policy_request_allOf'
      - $ref: '#/components/schemas/size-limit-log-retention-policy-shared'
    size-limit-log-retention-policy-response:
      allOf:
      - $ref: '#/components/schemas/time_limit_log_retention_policy_response_allOf'
      - $ref: '#/components/schemas/size-limit-log-retention-policy-shared'
    size-limit-log-retention-policy-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumsize-limit-log-retention-policySchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        diskSpaceUsed:
          description: Specifies the maximum total disk space used by the log files.
          type: string
        description:
          description: A description for this Log Retention Policy
          type: string
      required:
      - diskSpaceUsed
      - schemas
      type: object
    Enumsize-limit-log-retention-policySchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:log-retention-policy:size-limit
      type: string
    add-groovy-scripted-oauth-token-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_groovy_scripted_oauth_token_handler_request_allOf'
      - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-shared'
    groovy-scripted-oauth-token-handler-response:
      allOf:
      - $ref: '#/components/schemas/groovy_scripted_oauth_token_handler_response_allOf'
      - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-shared'
    groovy-scripted-oauth-token-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumgroovy-scripted-oauth-token-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        scriptClass:
          description: The fully-qualified name of the Groovy class providing the
            logic for the Groovy Scripted OAuth Token Handler.
          type: string
        scriptArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Scripted OAuth Token Handler. Each configuration property should be
              given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this OAuth Token Handler
          type: string
      required:
      - schemas
      - scriptClass
      type: object
    Enumgroovy-scripted-oauth-token-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:groovy-scripted
      type: string
    add-third-party-oauth-token-handler-request:
      allOf:
      - $ref: '#/components/schemas/add_groovy_scripted_oauth_token_handler_request_allOf'
      - $ref: '#/components/schemas/third-party-oauth-token-handler-shared'
    third-party-oauth-token-handler-response:
      allOf:
      - $ref: '#/components/schemas/groovy_scripted_oauth_token_handler_response_allOf'
      - $ref: '#/components/schemas/third-party-oauth-token-handler-shared'
    third-party-oauth-token-handler-shared:
      properties:
        schemas:
          items:
            $ref: '#/components/schemas/Enumthird-party-oauth-token-handlerSchemaUrn'
          maxItems: 1
          minItems: 1
          type: array
        extensionClass:
          description: The fully-qualified name of the Java class providing the logic
            for the Third Party OAuth Token Handler.
          type: string
        extensionArgument:
          items:
            description: The set of arguments used to customize the behavior for the
              Third Party OAuth Token Handler. Each configuration property should
              be given in the form 'name=value'.
            type: string
          type: array
        description:
          description: A description for this OAuth Token Handler
          type: string
      required:
      - extensionClass
      - schemas
      type: object
    Enumthird-party-oauth-token-handlerSchemaUrn:
      enum:
      - urn:pingidentity:schemas:configuration:2.0:oauth-token-handler:third-party
      type: string
    updateRequest:
      properties:
        operations:
          items:
            $ref: '#/components/schemas/Operation'
          type: array
      required:
      - operations
      type: object
    Operation:
      properties:
        op:
          $ref: '#/components/schemas/EnumOperation'
        path:
          type: string
        value:
          type: string
      required:
      - op
      - path
      type: object
    EnumOperation:
      enum:
      - add
      - remove
      - replace
      type: string
    add_id_token_validator_request:
      oneOf:
      - $ref: '#/components/schemas/add-ping-one-id-token-validator-request'
      - $ref: '#/components/schemas/add-openid-connect-id-token-validator-request'
    add_id_token_validator_200_response:
      oneOf:
      - $ref: '#/components/schemas/ping-one-id-token-validator-response'
      - $ref: '#/components/schemas/openid-connect-id-token-validator-response'
    add_access_token_validator_request:
      oneOf:
      - $ref: '#/components/schemas/add-ping-federate-access-token-validator-request'
      - $ref: '#/components/schemas/add-jwt-access-token-validator-request'
      - $ref: '#/components/schemas/add-mock-access-token-validator-request'
      - $ref: '#/components/schemas/add-third-party-access-token-validator-request'
    add_access_token_validator_200_response:
      oneOf:
      - $ref: '#/components/schemas/ping-federate-access-token-validator-response'
      - $ref: '#/components/schemas/jwt-access-token-validator-response'
      - $ref: '#/components/schemas/mock-access-token-validator-response'
      - $ref: '#/components/schemas/third-party-access-token-validator-response'
    add_log_field_mapping_request:
      oneOf:
      - $ref: '#/components/schemas/add-access-log-field-mapping-request'
      - $ref: '#/components/schemas/add-error-log-field-mapping-request'
    add_log_field_mapping_200_response:
      oneOf:
      - $ref: '#/components/schemas/access-log-field-mapping-response'
      - $ref: '#/components/schemas/error-log-field-mapping-response'
    add_password_generator_request:
      oneOf:
      - $ref: '#/components/schemas/add-random-password-generator-request'
      - $ref: '#/components/schemas/add-groovy-scripted-password-generator-request'
      - $ref: '#/components/schemas/add-passphrase-password-generator-request'
      - $ref: '#/components/schemas/add-third-party-password-generator-request'
    add_password_generator_200_response:
      oneOf:
      - $ref: '#/components/schemas/random-password-generator-response'
      - $ref: '#/components/schemas/groovy-scripted-password-generator-response'
      - $ref: '#/components/schemas/passphrase-password-generator-response'
      - $ref: '#/components/schemas/third-party-password-generator-response'
    add_otp_delivery_mechanism_request:
      oneOf:
      - $ref: '#/components/schemas/add-twilio-otp-delivery-mechanism-request'
      - $ref: '#/components/schemas/add-email-otp-delivery-mechanism-request'
      - $ref: '#/components/schemas/add-third-party-otp-delivery-mechanism-request'
    add_otp_delivery_mechanism_200_response:
      oneOf:
      - $ref: '#/components/schemas/twilio-otp-delivery-mechanism-response'
      - $ref: '#/components/schemas/email-otp-delivery-mechanism-response'
      - $ref: '#/components/schemas/third-party-otp-delivery-mechanism-response'
    add_log_field_behavior_request:
      oneOf:
      - $ref: '#/components/schemas/add-text-access-log-field-behavior-request'
      - $ref: '#/components/schemas/add-json-formatted-access-log-field-behavior-request'
    add_log_field_behavior_200_response:
      oneOf:
      - $ref: '#/components/schemas/text-access-log-field-behavior-response'
      - $ref: '#/components/schemas/json-formatted-access-log-field-behavior-response'
    get_server_instance_200_response:
      oneOf:
      - $ref: '#/components/schemas/proxy-server-instance-response'
      - $ref: '#/components/schemas/metrics-engine-server-instance-response'
      - $ref: '#/components/schemas/authorize-server-instance-response'
      - $ref: '#/components/schemas/directory-server-instance-response'
      - $ref: '#/components/schemas/sync-server-instance-response'
    add_log_file_rotation_listener_request:
      oneOf:
      - $ref: '#/components/schemas/add-summarize-log-file-rotation-listener-request'
      - $ref: '#/components/schemas/add-copy-log-file-rotation-listener-request'
      - $ref: '#/components/schemas/add-third-party-log-file-rotation-listener-request'
    add_log_file_rotation_listener_200_response:
      oneOf:
      - $ref: '#/components/schemas/summarize-log-file-rotation-listener-response'
      - $ref: '#/components/schemas/copy-log-file-rotation-listener-response'
      - $ref: '#/components/schemas/third-party-log-file-rotation-listener-response'
    add_uncached_attribute_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-default-uncached-attribute-criteria-request'
      - $ref: '#/components/schemas/add-groovy-scripted-uncached-attribute-criteria-request'
      - $ref: '#/components/schemas/add-simple-uncached-attribute-criteria-request'
      - $ref: '#/components/schemas/add-third-party-uncached-attribute-criteria-request'
    add_uncached_attribute_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/default-uncached-attribute-criteria-response'
      - $ref: '#/components/schemas/groovy-scripted-uncached-attribute-criteria-response'
      - $ref: '#/components/schemas/simple-uncached-attribute-criteria-response'
      - $ref: '#/components/schemas/third-party-uncached-attribute-criteria-response'
    add_connection_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-simple-connection-criteria-request'
      - $ref: '#/components/schemas/add-aggregate-connection-criteria-request'
      - $ref: '#/components/schemas/add-third-party-connection-criteria-request'
    add_connection_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/simple-connection-criteria-response'
      - $ref: '#/components/schemas/aggregate-connection-criteria-response'
      - $ref: '#/components/schemas/third-party-connection-criteria-response'
    add_trust_manager_provider_request:
      oneOf:
      - $ref: '#/components/schemas/add-blind-trust-manager-provider-request'
      - $ref: '#/components/schemas/add-file-based-trust-manager-provider-request'
      - $ref: '#/components/schemas/add-jvm-default-trust-manager-provider-request'
      - $ref: '#/components/schemas/add-third-party-trust-manager-provider-request'
    add_trust_manager_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/blind-trust-manager-provider-response'
      - $ref: '#/components/schemas/file-based-trust-manager-provider-response'
      - $ref: '#/components/schemas/jvm-default-trust-manager-provider-response'
      - $ref: '#/components/schemas/third-party-trust-manager-provider-response'
    add_request_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-root-dse-request-criteria-request'
      - $ref: '#/components/schemas/add-simple-request-criteria-request'
      - $ref: '#/components/schemas/add-aggregate-request-criteria-request'
      - $ref: '#/components/schemas/add-third-party-request-criteria-request'
    add_request_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/root-dse-request-criteria-response'
      - $ref: '#/components/schemas/simple-request-criteria-response'
      - $ref: '#/components/schemas/aggregate-request-criteria-response'
      - $ref: '#/components/schemas/third-party-request-criteria-response'
    add_log_rotation_policy_request:
      oneOf:
      - $ref: '#/components/schemas/add-time-limit-log-rotation-policy-request'
      - $ref: '#/components/schemas/add-fixed-time-log-rotation-policy-request'
      - $ref: '#/components/schemas/add-never-rotate-log-rotation-policy-request'
      - $ref: '#/components/schemas/add-size-limit-log-rotation-policy-request'
    add_log_rotation_policy_200_response:
      oneOf:
      - $ref: '#/components/schemas/time-limit-log-rotation-policy-response'
      - $ref: '#/components/schemas/fixed-time-log-rotation-policy-response'
      - $ref: '#/components/schemas/never-rotate-log-rotation-policy-response'
      - $ref: '#/components/schemas/size-limit-log-rotation-policy-response'
    get_log_field_syntax_200_response:
      oneOf:
      - $ref: '#/components/schemas/json-log-field-syntax-response'
      - $ref: '#/components/schemas/attribute-based-log-field-syntax-response'
    add_extended_operation_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-validate-totp-password-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-replace-certificate-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-collect-support-data-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-export-reversible-passwords-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-single-use-tokens-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-deliver-password-reset-token-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-deliver-otp-extended-operation-handler-request'
      - $ref: '#/components/schemas/add-third-party-extended-operation-handler-request'
    add_extended_operation_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-response'
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-response'
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-response'
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-response'
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-response'
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-response'
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-response'
      - $ref: '#/components/schemas/third-party-extended-operation-handler-response'
    get_extended_operation_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/cancel-extended-operation-handler-response'
      - $ref: '#/components/schemas/validate-totp-password-extended-operation-handler-response'
      - $ref: '#/components/schemas/replace-certificate-extended-operation-handler-response'
      - $ref: '#/components/schemas/get-connection-id-extended-operation-handler-response'
      - $ref: '#/components/schemas/multi-update-extended-operation-handler-response'
      - $ref: '#/components/schemas/notification-subscription-extended-operation-handler-response'
      - $ref: '#/components/schemas/password-modify-extended-operation-handler-response'
      - $ref: '#/components/schemas/collect-support-data-extended-operation-handler-response'
      - $ref: '#/components/schemas/export-reversible-passwords-extended-operation-handler-response'
      - $ref: '#/components/schemas/batched-transactions-extended-operation-handler-response'
      - $ref: '#/components/schemas/get-changelog-batch-extended-operation-handler-response'
      - $ref: '#/components/schemas/get-supported-otp-delivery-mechanisms-extended-operation-handler-response'
      - $ref: '#/components/schemas/single-use-tokens-extended-operation-handler-response'
      - $ref: '#/components/schemas/generate-password-extended-operation-handler-response'
      - $ref: '#/components/schemas/who-am-i-extended-operation-handler-response'
      - $ref: '#/components/schemas/start-tls-extended-operation-handler-response'
      - $ref: '#/components/schemas/deliver-password-reset-token-extended-operation-handler-response'
      - $ref: '#/components/schemas/password-policy-state-extended-operation-handler-response'
      - $ref: '#/components/schemas/get-password-quality-requirements-extended-operation-handler-response'
      - $ref: '#/components/schemas/deliver-otp-extended-operation-handler-response'
      - $ref: '#/components/schemas/third-party-extended-operation-handler-response'
    add_azure_authentication_method_request:
      oneOf:
      - $ref: '#/components/schemas/add-default-azure-authentication-method-request'
      - $ref: '#/components/schemas/add-client-secret-azure-authentication-method-request'
      - $ref: '#/components/schemas/add-username-password-azure-authentication-method-request'
    add_azure_authentication_method_200_response:
      oneOf:
      - $ref: '#/components/schemas/default-azure-authentication-method-response'
      - $ref: '#/components/schemas/client-secret-azure-authentication-method-response'
      - $ref: '#/components/schemas/username-password-azure-authentication-method-response'
    add_passphrase_provider_request:
      oneOf:
      - $ref: '#/components/schemas/add-environment-variable-passphrase-provider-request'
      - $ref: '#/components/schemas/add-amazon-secrets-manager-passphrase-provider-request'
      - $ref: '#/components/schemas/add-obscured-value-passphrase-provider-request'
      - $ref: '#/components/schemas/add-azure-key-vault-passphrase-provider-request'
      - $ref: '#/components/schemas/add-file-based-passphrase-provider-request'
      - $ref: '#/components/schemas/add-conjur-passphrase-provider-request'
      - $ref: '#/components/schemas/add-vault-passphrase-provider-request'
      - $ref: '#/components/schemas/add-third-party-passphrase-provider-request'
    add_passphrase_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/environment-variable-passphrase-provider-response'
      - $ref: '#/components/schemas/amazon-secrets-manager-passphrase-provider-response'
      - $ref: '#/components/schemas/obscured-value-passphrase-provider-response'
      - $ref: '#/components/schemas/azure-key-vault-passphrase-provider-response'
      - $ref: '#/components/schemas/file-based-passphrase-provider-response'
      - $ref: '#/components/schemas/conjur-passphrase-provider-response'
      - $ref: '#/components/schemas/vault-passphrase-provider-response'
      - $ref: '#/components/schemas/third-party-passphrase-provider-response'
    add_gauge_request:
      oneOf:
      - $ref: '#/components/schemas/add-indicator-gauge-request'
      - $ref: '#/components/schemas/add-numeric-gauge-request'
    add_gauge_200_response:
      oneOf:
      - $ref: '#/components/schemas/indicator-gauge-response'
      - $ref: '#/components/schemas/numeric-gauge-response'
    add_search_reference_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-simple-search-reference-criteria-request'
      - $ref: '#/components/schemas/add-aggregate-search-reference-criteria-request'
      - $ref: '#/components/schemas/add-third-party-search-reference-criteria-request'
    add_search_reference_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/simple-search-reference-criteria-response'
      - $ref: '#/components/schemas/aggregate-search-reference-criteria-response'
      - $ref: '#/components/schemas/third-party-search-reference-criteria-response'
    add_alert_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-smtp-alert-handler-request'
      - $ref: '#/components/schemas/add-jmx-alert-handler-request'
      - $ref: '#/components/schemas/add-groovy-scripted-alert-handler-request'
      - $ref: '#/components/schemas/add-snmp-alert-handler-request'
      - $ref: '#/components/schemas/add-twilio-alert-handler-request'
      - $ref: '#/components/schemas/add-error-log-alert-handler-request'
      - $ref: '#/components/schemas/add-snmp-sub-agent-alert-handler-request'
      - $ref: '#/components/schemas/add-exec-alert-handler-request'
      - $ref: '#/components/schemas/add-third-party-alert-handler-request'
    add_alert_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/smtp-alert-handler-response'
      - $ref: '#/components/schemas/jmx-alert-handler-response'
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-response'
      - $ref: '#/components/schemas/snmp-alert-handler-response'
      - $ref: '#/components/schemas/twilio-alert-handler-response'
      - $ref: '#/components/schemas/error-log-alert-handler-response'
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-response'
      - $ref: '#/components/schemas/exec-alert-handler-response'
      - $ref: '#/components/schemas/third-party-alert-handler-response'
    get_alert_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/output-alert-handler-response'
      - $ref: '#/components/schemas/smtp-alert-handler-response'
      - $ref: '#/components/schemas/jmx-alert-handler-response'
      - $ref: '#/components/schemas/groovy-scripted-alert-handler-response'
      - $ref: '#/components/schemas/snmp-alert-handler-response'
      - $ref: '#/components/schemas/twilio-alert-handler-response'
      - $ref: '#/components/schemas/error-log-alert-handler-response'
      - $ref: '#/components/schemas/snmp-sub-agent-alert-handler-response'
      - $ref: '#/components/schemas/exec-alert-handler-response'
      - $ref: '#/components/schemas/third-party-alert-handler-response'
    add_cipher_stream_provider_request:
      oneOf:
      - $ref: '#/components/schemas/add-amazon-key-management-service-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-amazon-secrets-manager-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-azure-key-vault-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-file-based-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-wait-for-passphrase-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-conjur-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-pkcs11-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-vault-cipher-stream-provider-request'
      - $ref: '#/components/schemas/add-third-party-cipher-stream-provider-request'
    add_cipher_stream_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/amazon-key-management-service-cipher-stream-provider-response'
      - $ref: '#/components/schemas/amazon-secrets-manager-cipher-stream-provider-response'
      - $ref: '#/components/schemas/azure-key-vault-cipher-stream-provider-response'
      - $ref: '#/components/schemas/file-based-cipher-stream-provider-response'
      - $ref: '#/components/schemas/wait-for-passphrase-cipher-stream-provider-response'
      - $ref: '#/components/schemas/conjur-cipher-stream-provider-response'
      - $ref: '#/components/schemas/pkcs11-cipher-stream-provider-response'
      - $ref: '#/components/schemas/vault-cipher-stream-provider-response'
      - $ref: '#/components/schemas/third-party-cipher-stream-provider-response'
    add_vault_authentication_method_request:
      oneOf:
      - $ref: '#/components/schemas/add-static-token-vault-authentication-method-request'
      - $ref: '#/components/schemas/add-app-role-vault-authentication-method-request'
      - $ref: '#/components/schemas/add-user-pass-vault-authentication-method-request'
    add_vault_authentication_method_200_response:
      oneOf:
      - $ref: '#/components/schemas/static-token-vault-authentication-method-response'
      - $ref: '#/components/schemas/app-role-vault-authentication-method-response'
      - $ref: '#/components/schemas/user-pass-vault-authentication-method-response'
    add_account_status_notification_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-smtp-account-status-notification-handler-request'
      - $ref: '#/components/schemas/add-groovy-scripted-account-status-notification-handler-request'
      - $ref: '#/components/schemas/add-admin-alert-account-status-notification-handler-request'
      - $ref: '#/components/schemas/add-error-log-account-status-notification-handler-request'
      - $ref: '#/components/schemas/add-multi-part-email-account-status-notification-handler-request'
      - $ref: '#/components/schemas/add-third-party-account-status-notification-handler-request'
    add_account_status_notification_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/smtp-account-status-notification-handler-response'
      - $ref: '#/components/schemas/groovy-scripted-account-status-notification-handler-response'
      - $ref: '#/components/schemas/admin-alert-account-status-notification-handler-response'
      - $ref: '#/components/schemas/error-log-account-status-notification-handler-response'
      - $ref: '#/components/schemas/multi-part-email-account-status-notification-handler-response'
      - $ref: '#/components/schemas/third-party-account-status-notification-handler-response'
    add_pass_through_authentication_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-ldap-pass-through-authentication-handler-request'
      - $ref: '#/components/schemas/add-third-party-pass-through-authentication-handler-request'
    add_pass_through_authentication_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/ldap-pass-through-authentication-handler-response'
      - $ref: '#/components/schemas/third-party-pass-through-authentication-handler-response'
    add_password_validator_request:
      oneOf:
      - $ref: '#/components/schemas/add-character-set-password-validator-request'
      - $ref: '#/components/schemas/add-similarity-based-password-validator-request'
      - $ref: '#/components/schemas/add-attribute-value-password-validator-request'
      - $ref: '#/components/schemas/add-dictionary-password-validator-request'
      - $ref: '#/components/schemas/add-haystack-password-validator-request'
      - $ref: '#/components/schemas/add-groovy-scripted-password-validator-request'
      - $ref: '#/components/schemas/add-pwned-passwords-password-validator-request'
      - $ref: '#/components/schemas/add-length-based-password-validator-request'
      - $ref: '#/components/schemas/add-regular-expression-password-validator-request'
      - $ref: '#/components/schemas/add-unique-characters-password-validator-request'
      - $ref: '#/components/schemas/add-repeated-characters-password-validator-request'
      - $ref: '#/components/schemas/add-third-party-password-validator-request'
    add_password_validator_200_response:
      oneOf:
      - $ref: '#/components/schemas/character-set-password-validator-response'
      - $ref: '#/components/schemas/similarity-based-password-validator-response'
      - $ref: '#/components/schemas/attribute-value-password-validator-response'
      - $ref: '#/components/schemas/dictionary-password-validator-response'
      - $ref: '#/components/schemas/haystack-password-validator-response'
      - $ref: '#/components/schemas/groovy-scripted-password-validator-response'
      - $ref: '#/components/schemas/pwned-passwords-password-validator-response'
      - $ref: '#/components/schemas/length-based-password-validator-response'
      - $ref: '#/components/schemas/regular-expression-password-validator-response'
      - $ref: '#/components/schemas/unique-characters-password-validator-response'
      - $ref: '#/components/schemas/repeated-characters-password-validator-response'
      - $ref: '#/components/schemas/third-party-password-validator-response'
    add_connection_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-jmx-connection-handler-request'
      - $ref: '#/components/schemas/add-ldap-connection-handler-request'
      - $ref: '#/components/schemas/add-ldif-connection-handler-request'
      - $ref: '#/components/schemas/add-http-connection-handler-request'
    add_connection_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/jmx-connection-handler-response'
      - $ref: '#/components/schemas/ldap-connection-handler-response'
      - $ref: '#/components/schemas/ldif-connection-handler-response'
      - $ref: '#/components/schemas/http-connection-handler-response'
    add_search_entry_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-simple-search-entry-criteria-request'
      - $ref: '#/components/schemas/add-aggregate-search-entry-criteria-request'
      - $ref: '#/components/schemas/add-third-party-search-entry-criteria-request'
    add_search_entry_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/simple-search-entry-criteria-response'
      - $ref: '#/components/schemas/aggregate-search-entry-criteria-response'
      - $ref: '#/components/schemas/third-party-search-entry-criteria-response'
    add_failure_lockout_action_request:
      oneOf:
      - $ref: '#/components/schemas/add-delay-bind-response-failure-lockout-action-request'
      - $ref: '#/components/schemas/add-no-operation-failure-lockout-action-request'
      - $ref: '#/components/schemas/add-lock-account-failure-lockout-action-request'
    add_failure_lockout_action_200_response:
      oneOf:
      - $ref: '#/components/schemas/delay-bind-response-failure-lockout-action-response'
      - $ref: '#/components/schemas/no-operation-failure-lockout-action-response'
      - $ref: '#/components/schemas/lock-account-failure-lockout-action-response'
    add_certificate_mapper_request:
      oneOf:
      - $ref: '#/components/schemas/add-subject-equals-dn-certificate-mapper-request'
      - $ref: '#/components/schemas/add-subject-dn-to-user-attribute-certificate-mapper-request'
      - $ref: '#/components/schemas/add-groovy-scripted-certificate-mapper-request'
      - $ref: '#/components/schemas/add-subject-attribute-to-user-attribute-certificate-mapper-request'
      - $ref: '#/components/schemas/add-fingerprint-certificate-mapper-request'
      - $ref: '#/components/schemas/add-third-party-certificate-mapper-request'
    add_certificate_mapper_200_response:
      oneOf:
      - $ref: '#/components/schemas/subject-equals-dn-certificate-mapper-response'
      - $ref: '#/components/schemas/subject-dn-to-user-attribute-certificate-mapper-response'
      - $ref: '#/components/schemas/groovy-scripted-certificate-mapper-response'
      - $ref: '#/components/schemas/subject-attribute-to-user-attribute-certificate-mapper-response'
      - $ref: '#/components/schemas/fingerprint-certificate-mapper-response'
      - $ref: '#/components/schemas/third-party-certificate-mapper-response'
    add_log_publisher_request:
      oneOf:
      - $ref: '#/components/schemas/add-syslog-json-audit-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-based-error-log-publisher-request'
      - $ref: '#/components/schemas/add-third-party-file-based-access-log-publisher-request'
      - $ref: '#/components/schemas/add-operation-timing-access-log-publisher-request'
      - $ref: '#/components/schemas/add-third-party-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-admin-alert-access-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-trace-log-publisher-request'
      - $ref: '#/components/schemas/add-jdbc-based-error-log-publisher-request'
      - $ref: '#/components/schemas/add-jdbc-based-access-log-publisher-request'
      - $ref: '#/components/schemas/add-common-log-file-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-text-error-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-based-access-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-json-audit-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-debug-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-error-log-publisher-request'
      - $ref: '#/components/schemas/add-third-party-error-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-text-access-log-publisher-request'
      - $ref: '#/components/schemas/add-detailed-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-json-access-log-publisher-request'
      - $ref: '#/components/schemas/add-debug-access-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-json-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-third-party-access-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-audit-log-publisher-request'
      - $ref: '#/components/schemas/add-json-error-log-publisher-request'
      - $ref: '#/components/schemas/add-groovy-scripted-file-based-access-log-publisher-request'
      - $ref: '#/components/schemas/add-groovy-scripted-file-based-error-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-json-access-log-publisher-request'
      - $ref: '#/components/schemas/add-groovy-scripted-access-log-publisher-request'
      - $ref: '#/components/schemas/add-third-party-file-based-error-log-publisher-request'
      - $ref: '#/components/schemas/add-console-json-audit-log-publisher-request'
      - $ref: '#/components/schemas/add-console-json-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-access-log-publisher-request'
      - $ref: '#/components/schemas/add-groovy-scripted-error-log-publisher-request'
      - $ref: '#/components/schemas/add-file-based-json-http-operation-log-publisher-request'
      - $ref: '#/components/schemas/add-syslog-json-error-log-publisher-request'
      - $ref: '#/components/schemas/add-groovy-scripted-http-operation-log-publisher-request'
    add_log_publisher_200_response:
      oneOf:
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-response'
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-response'
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-trace-log-publisher-response'
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-response'
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-response'
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/file-based-debug-log-publisher-response'
      - $ref: '#/components/schemas/file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/third-party-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-response'
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/json-access-log-publisher-response'
      - $ref: '#/components/schemas/debug-access-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/third-party-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-audit-log-publisher-response'
      - $ref: '#/components/schemas/json-error-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-response'
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/console-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-response'
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-response'
    get_log_publisher_200_response:
      oneOf:
      - $ref: '#/components/schemas/syslog-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/syslog-based-error-log-publisher-response'
      - $ref: '#/components/schemas/third-party-file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/operation-timing-access-log-publisher-response'
      - $ref: '#/components/schemas/third-party-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/admin-alert-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-trace-log-publisher-response'
      - $ref: '#/components/schemas/jdbc-based-error-log-publisher-response'
      - $ref: '#/components/schemas/jdbc-based-access-log-publisher-response'
      - $ref: '#/components/schemas/common-log-file-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/console-json-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-text-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-based-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/file-based-debug-log-publisher-response'
      - $ref: '#/components/schemas/file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/third-party-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-text-access-log-publisher-response'
      - $ref: '#/components/schemas/detailed-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/json-access-log-publisher-response'
      - $ref: '#/components/schemas/debug-access-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/third-party-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-audit-log-publisher-response'
      - $ref: '#/components/schemas/json-error-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-access-log-publisher-response'
      - $ref: '#/components/schemas/third-party-file-based-error-log-publisher-response'
      - $ref: '#/components/schemas/console-json-audit-log-publisher-response'
      - $ref: '#/components/schemas/console-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/console-json-access-log-publisher-response'
      - $ref: '#/components/schemas/file-based-access-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-error-log-publisher-response'
      - $ref: '#/components/schemas/file-based-json-http-operation-log-publisher-response'
      - $ref: '#/components/schemas/syslog-json-error-log-publisher-response'
      - $ref: '#/components/schemas/groovy-scripted-http-operation-log-publisher-response'
    add_key_manager_provider_request:
      oneOf:
      - $ref: '#/components/schemas/add-file-based-key-manager-provider-request'
      - $ref: '#/components/schemas/add-pkcs11-key-manager-provider-request'
      - $ref: '#/components/schemas/add-third-party-key-manager-provider-request'
    add_key_manager_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/file-based-key-manager-provider-response'
      - $ref: '#/components/schemas/pkcs11-key-manager-provider-response'
      - $ref: '#/components/schemas/third-party-key-manager-provider-response'
    add_external_server_request:
      oneOf:
      - $ref: '#/components/schemas/add-opendj-external-server-request'
      - $ref: '#/components/schemas/add-smtp-external-server-request'
      - $ref: '#/components/schemas/add-nokia-ds-external-server-request'
      - $ref: '#/components/schemas/add-ping-one-http-external-server-request'
      - $ref: '#/components/schemas/add-active-directory-external-server-request'
      - $ref: '#/components/schemas/add-oracle-unified-directory-external-server-request'
      - $ref: '#/components/schemas/add-conjur-external-server-request'
      - $ref: '#/components/schemas/add-jdbc-external-server-request'
      - $ref: '#/components/schemas/add-amazon-aws-external-server-request'
      - $ref: '#/components/schemas/add-syslog-external-server-request'
      - $ref: '#/components/schemas/add-nokia-proxy-server-external-server-request'
      - $ref: '#/components/schemas/add-vault-external-server-request'
    add_external_server_200_response:
      oneOf:
      - $ref: '#/components/schemas/opendj-external-server-response'
      - $ref: '#/components/schemas/smtp-external-server-response'
      - $ref: '#/components/schemas/nokia-ds-external-server-response'
      - $ref: '#/components/schemas/ping-one-http-external-server-response'
      - $ref: '#/components/schemas/active-directory-external-server-response'
      - $ref: '#/components/schemas/oracle-unified-directory-external-server-response'
      - $ref: '#/components/schemas/conjur-external-server-response'
      - $ref: '#/components/schemas/jdbc-external-server-response'
      - $ref: '#/components/schemas/amazon-aws-external-server-response'
      - $ref: '#/components/schemas/syslog-external-server-response'
      - $ref: '#/components/schemas/nokia-proxy-server-external-server-response'
      - $ref: '#/components/schemas/vault-external-server-response'
    add_change_subscription_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-groovy-scripted-change-subscription-handler-request'
      - $ref: '#/components/schemas/add-logging-change-subscription-handler-request'
      - $ref: '#/components/schemas/add-third-party-change-subscription-handler-request'
    add_change_subscription_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/groovy-scripted-change-subscription-handler-response'
      - $ref: '#/components/schemas/logging-change-subscription-handler-response'
      - $ref: '#/components/schemas/third-party-change-subscription-handler-response'
    add_monitor_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/third-party-monitor-provider-response'
    get_monitor_provider_200_response:
      oneOf:
      - $ref: '#/components/schemas/general-monitor-provider-response'
      - $ref: '#/components/schemas/memory-usage-monitor-provider-response'
      - $ref: '#/components/schemas/stack-trace-monitor-provider-response'
      - $ref: '#/components/schemas/disk-space-usage-monitor-provider-response'
      - $ref: '#/components/schemas/system-info-monitor-provider-response'
      - $ref: '#/components/schemas/active-operations-monitor-provider-response'
      - $ref: '#/components/schemas/ssl-context-monitor-provider-response'
      - $ref: '#/components/schemas/client-connection-monitor-provider-response'
      - $ref: '#/components/schemas/version-monitor-provider-response'
      - $ref: '#/components/schemas/host-system-monitor-provider-response'
      - $ref: '#/components/schemas/third-party-monitor-provider-response'
    get_group_implementation_200_response:
      oneOf:
      - $ref: '#/components/schemas/static-group-implementation-response'
      - $ref: '#/components/schemas/virtual-static-group-implementation-response'
      - $ref: '#/components/schemas/dynamic-group-implementation-response'
    add_gauge_data_source_request:
      oneOf:
      - $ref: '#/components/schemas/add-indicator-gauge-data-source-request'
      - $ref: '#/components/schemas/add-numeric-gauge-data-source-request'
    add_gauge_data_source_200_response:
      oneOf:
      - $ref: '#/components/schemas/indicator-gauge-data-source-response'
      - $ref: '#/components/schemas/numeric-gauge-data-source-response'
    add_backend_200_response:
      oneOf:
      - $ref: '#/components/schemas/local-db-backend-response'
    get_backend_200_response:
      oneOf:
      - $ref: '#/components/schemas/config-file-handler-backend-response'
      - $ref: '#/components/schemas/schema-backend-response'
      - $ref: '#/components/schemas/backup-backend-response'
      - $ref: '#/components/schemas/task-backend-response'
      - $ref: '#/components/schemas/alert-backend-response'
      - $ref: '#/components/schemas/encryption-settings-backend-response'
      - $ref: '#/components/schemas/trust-store-backend-response'
      - $ref: '#/components/schemas/alarm-backend-response'
      - $ref: '#/components/schemas/changelog-backend-response'
      - $ref: '#/components/schemas/monitor-backend-response'
      - $ref: '#/components/schemas/local-db-backend-response'
      - $ref: '#/components/schemas/metrics-backend-response'
    get_attribute_syntax_200_response:
      oneOf:
      - $ref: '#/components/schemas/attribute-type-description-attribute-syntax-response'
      - $ref: '#/components/schemas/directory-string-attribute-syntax-response'
      - $ref: '#/components/schemas/telephone-number-attribute-syntax-response'
      - $ref: '#/components/schemas/distinguished-name-attribute-syntax-response'
      - $ref: '#/components/schemas/generalized-time-attribute-syntax-response'
      - $ref: '#/components/schemas/integer-attribute-syntax-response'
      - $ref: '#/components/schemas/uuid-attribute-syntax-response'
      - $ref: '#/components/schemas/json-object-attribute-syntax-response'
      - $ref: '#/components/schemas/user-password-attribute-syntax-response'
      - $ref: '#/components/schemas/boolean-attribute-syntax-response'
      - $ref: '#/components/schemas/hex-string-attribute-syntax-response'
      - $ref: '#/components/schemas/bit-string-attribute-syntax-response'
      - $ref: '#/components/schemas/ldap-url-attribute-syntax-response'
      - $ref: '#/components/schemas/name-and-optional-uid-attribute-syntax-response'
    add_uncached_entry_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-default-uncached-entry-criteria-request'
      - $ref: '#/components/schemas/add-last-access-time-uncached-entry-criteria-request'
      - $ref: '#/components/schemas/add-filter-based-uncached-entry-criteria-request'
      - $ref: '#/components/schemas/add-groovy-scripted-uncached-entry-criteria-request'
      - $ref: '#/components/schemas/add-third-party-uncached-entry-criteria-request'
    add_uncached_entry_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/default-uncached-entry-criteria-response'
      - $ref: '#/components/schemas/last-access-time-uncached-entry-criteria-response'
      - $ref: '#/components/schemas/filter-based-uncached-entry-criteria-response'
      - $ref: '#/components/schemas/groovy-scripted-uncached-entry-criteria-response'
      - $ref: '#/components/schemas/third-party-uncached-entry-criteria-response'
    add_http_servlet_extension_request:
      oneOf:
      - $ref: '#/components/schemas/add-quickstart-http-servlet-extension-request'
      - $ref: '#/components/schemas/add-groovy-scripted-http-servlet-extension-request'
      - $ref: '#/components/schemas/add-availability-state-http-servlet-extension-request'
      - $ref: '#/components/schemas/add-file-server-http-servlet-extension-request'
      - $ref: '#/components/schemas/add-ldap-mapped-scim-http-servlet-extension-request'
      - $ref: '#/components/schemas/add-third-party-http-servlet-extension-request'
    add_http_servlet_extension_200_response:
      oneOf:
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-response'
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-response'
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-response'
      - $ref: '#/components/schemas/file-server-http-servlet-extension-response'
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-response'
      - $ref: '#/components/schemas/third-party-http-servlet-extension-response'
    get_http_servlet_extension_200_response:
      oneOf:
      - $ref: '#/components/schemas/delegated-admin-http-servlet-extension-response'
      - $ref: '#/components/schemas/quickstart-http-servlet-extension-response'
      - $ref: '#/components/schemas/groovy-scripted-http-servlet-extension-response'
      - $ref: '#/components/schemas/availability-state-http-servlet-extension-response'
      - $ref: '#/components/schemas/file-server-http-servlet-extension-response'
      - $ref: '#/components/schemas/velocity-http-servlet-extension-response'
      - $ref: '#/components/schemas/consent-http-servlet-extension-response'
      - $ref: '#/components/schemas/config-http-servlet-extension-response'
      - $ref: '#/components/schemas/scim2-http-servlet-extension-response'
      - $ref: '#/components/schemas/directory-rest-api-http-servlet-extension-response'
      - $ref: '#/components/schemas/ldap-mapped-scim-http-servlet-extension-response'
      - $ref: '#/components/schemas/third-party-http-servlet-extension-response'
    get_matching_rule_200_response:
      oneOf:
      - $ref: '#/components/schemas/ordering-matching-rule-response'
      - $ref: '#/components/schemas/approximate-matching-rule-response'
      - $ref: '#/components/schemas/equality-matching-rule-response'
      - $ref: '#/components/schemas/substring-matching-rule-response'
    add_virtual_attribute_request:
      oneOf:
      - $ref: '#/components/schemas/add-mirror-virtual-attribute-request'
      - $ref: '#/components/schemas/add-constructed-virtual-attribute-request'
      - $ref: '#/components/schemas/add-is-member-of-virtual-attribute-request'
      - $ref: '#/components/schemas/add-reverse-dn-join-virtual-attribute-request'
      - $ref: '#/components/schemas/add-identify-references-virtual-attribute-request'
      - $ref: '#/components/schemas/add-user-defined-virtual-attribute-request'
      - $ref: '#/components/schemas/add-entry-dn-virtual-attribute-request'
      - $ref: '#/components/schemas/add-equality-join-virtual-attribute-request'
      - $ref: '#/components/schemas/add-groovy-scripted-virtual-attribute-request'
      - $ref: '#/components/schemas/add-member-virtual-attribute-request'
      - $ref: '#/components/schemas/add-password-policy-state-json-virtual-attribute-request'
      - $ref: '#/components/schemas/add-dn-join-virtual-attribute-request'
      - $ref: '#/components/schemas/add-third-party-virtual-attribute-request'
    add_virtual_attribute_200_response:
      oneOf:
      - $ref: '#/components/schemas/mirror-virtual-attribute-response'
      - $ref: '#/components/schemas/constructed-virtual-attribute-response'
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-response'
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-response'
      - $ref: '#/components/schemas/identify-references-virtual-attribute-response'
      - $ref: '#/components/schemas/user-defined-virtual-attribute-response'
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-response'
      - $ref: '#/components/schemas/equality-join-virtual-attribute-response'
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-response'
      - $ref: '#/components/schemas/member-virtual-attribute-response'
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-response'
      - $ref: '#/components/schemas/dn-join-virtual-attribute-response'
      - $ref: '#/components/schemas/third-party-virtual-attribute-response'
    get_virtual_attribute_200_response:
      oneOf:
      - $ref: '#/components/schemas/mirror-virtual-attribute-response'
      - $ref: '#/components/schemas/entry-checksum-virtual-attribute-response'
      - $ref: '#/components/schemas/member-of-server-group-virtual-attribute-response'
      - $ref: '#/components/schemas/constructed-virtual-attribute-response'
      - $ref: '#/components/schemas/is-member-of-virtual-attribute-response'
      - $ref: '#/components/schemas/num-subordinates-virtual-attribute-response'
      - $ref: '#/components/schemas/reverse-dn-join-virtual-attribute-response'
      - $ref: '#/components/schemas/identify-references-virtual-attribute-response'
      - $ref: '#/components/schemas/user-defined-virtual-attribute-response'
      - $ref: '#/components/schemas/current-time-virtual-attribute-response'
      - $ref: '#/components/schemas/short-unique-id-virtual-attribute-response'
      - $ref: '#/components/schemas/entry-dn-virtual-attribute-response'
      - $ref: '#/components/schemas/has-subordinates-virtual-attribute-response'
      - $ref: '#/components/schemas/equality-join-virtual-attribute-response'
      - $ref: '#/components/schemas/groovy-scripted-virtual-attribute-response'
      - $ref: '#/components/schemas/instance-name-virtual-attribute-response'
      - $ref: '#/components/schemas/replication-state-detail-virtual-attribute-response'
      - $ref: '#/components/schemas/member-virtual-attribute-response'
      - $ref: '#/components/schemas/password-policy-state-json-virtual-attribute-response'
      - $ref: '#/components/schemas/subschema-subentry-virtual-attribute-response'
      - $ref: '#/components/schemas/dn-join-virtual-attribute-response'
      - $ref: '#/components/schemas/third-party-virtual-attribute-response'
    add_result_criteria_request:
      oneOf:
      - $ref: '#/components/schemas/add-simple-result-criteria-request'
      - $ref: '#/components/schemas/add-aggregate-result-criteria-request'
      - $ref: '#/components/schemas/add-replication-assurance-result-criteria-request'
      - $ref: '#/components/schemas/add-third-party-result-criteria-request'
    add_result_criteria_200_response:
      oneOf:
      - $ref: '#/components/schemas/simple-result-criteria-response'
      - $ref: '#/components/schemas/aggregate-result-criteria-response'
      - $ref: '#/components/schemas/replication-assurance-result-criteria-response'
      - $ref: '#/components/schemas/third-party-result-criteria-response'
    add_identity_mapper_request:
      oneOf:
      - $ref: '#/components/schemas/add-exact-match-identity-mapper-request'
      - $ref: '#/components/schemas/add-groovy-scripted-identity-mapper-request'
      - $ref: '#/components/schemas/add-regular-expression-identity-mapper-request'
      - $ref: '#/components/schemas/add-aggregate-identity-mapper-request'
      - $ref: '#/components/schemas/add-third-party-identity-mapper-request'
    add_identity_mapper_200_response:
      oneOf:
      - $ref: '#/components/schemas/exact-match-identity-mapper-response'
      - $ref: '#/components/schemas/groovy-scripted-identity-mapper-response'
      - $ref: '#/components/schemas/regular-expression-identity-mapper-response'
      - $ref: '#/components/schemas/aggregate-identity-mapper-response'
      - $ref: '#/components/schemas/third-party-identity-mapper-response'
    add_recurring_task_request:
      oneOf:
      - $ref: '#/components/schemas/add-generate-server-profile-recurring-task-request'
      - $ref: '#/components/schemas/add-leave-lockdown-mode-recurring-task-request'
      - $ref: '#/components/schemas/add-backup-recurring-task-request'
      - $ref: '#/components/schemas/add-delay-recurring-task-request'
      - $ref: '#/components/schemas/add-statically-defined-recurring-task-request'
      - $ref: '#/components/schemas/add-collect-support-data-recurring-task-request'
      - $ref: '#/components/schemas/add-ldif-export-recurring-task-request'
      - $ref: '#/components/schemas/add-enter-lockdown-mode-recurring-task-request'
      - $ref: '#/components/schemas/add-exec-recurring-task-request'
      - $ref: '#/components/schemas/add-file-retention-recurring-task-request'
      - $ref: '#/components/schemas/add-third-party-recurring-task-request'
    add_recurring_task_200_response:
      oneOf:
      - $ref: '#/components/schemas/generate-server-profile-recurring-task-response'
      - $ref: '#/components/schemas/leave-lockdown-mode-recurring-task-response'
      - $ref: '#/components/schemas/backup-recurring-task-response'
      - $ref: '#/components/schemas/delay-recurring-task-response'
      - $ref: '#/components/schemas/statically-defined-recurring-task-response'
      - $ref: '#/components/schemas/collect-support-data-recurring-task-response'
      - $ref: '#/components/schemas/ldif-export-recurring-task-response'
      - $ref: '#/components/schemas/enter-lockdown-mode-recurring-task-response'
      - $ref: '#/components/schemas/exec-recurring-task-response'
      - $ref: '#/components/schemas/file-retention-recurring-task-response'
      - $ref: '#/components/schemas/third-party-recurring-task-response'
    add_rest_resource_type_request:
      oneOf:
      - $ref: '#/components/schemas/add-user-rest-resource-type-request'
      - $ref: '#/components/schemas/add-group-rest-resource-type-request'
    add_rest_resource_type_200_response:
      oneOf:
      - $ref: '#/components/schemas/user-rest-resource-type-response'
      - $ref: '#/components/schemas/group-rest-resource-type-response'
    add_sasl_mechanism_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-unboundid-ms-chap-v2-sasl-mechanism-handler-request'
      - $ref: '#/components/schemas/add-unboundid-delivered-otp-sasl-mechanism-handler-request'
      - $ref: '#/components/schemas/add-oauth-bearer-sasl-mechanism-handler-request'
      - $ref: '#/components/schemas/add-third-party-sasl-mechanism-handler-request'
    add_sasl_mechanism_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-response'
    get_sasl_mechanism_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/unboundid-ms-chap-v2-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-totp-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-yubikey-otp-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/external-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/digest-md5-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/plain-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-delivered-otp-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-external-auth-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/anonymous-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/cram-md5-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/oauth-bearer-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/unboundid-certificate-plus-password-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/gssapi-sasl-mechanism-handler-response'
      - $ref: '#/components/schemas/third-party-sasl-mechanism-handler-response'
    add_data_security_auditor_request:
      oneOf:
      - $ref: '#/components/schemas/add-expired-password-data-security-auditor-request'
      - $ref: '#/components/schemas/add-multiple-password-data-security-auditor-request'
      - $ref: '#/components/schemas/add-disabled-account-data-security-auditor-request'
      - $ref: '#/components/schemas/add-weakly-encoded-password-data-security-auditor-request'
      - $ref: '#/components/schemas/add-privilege-data-security-auditor-request'
      - $ref: '#/components/schemas/add-locked-account-data-security-auditor-request'
      - $ref: '#/components/schemas/add-access-control-data-security-auditor-request'
    add_data_security_auditor_200_response:
      oneOf:
      - $ref: '#/components/schemas/expired-password-data-security-auditor-response'
      - $ref: '#/components/schemas/multiple-password-data-security-auditor-response'
      - $ref: '#/components/schemas/disabled-account-data-security-auditor-response'
      - $ref: '#/components/schemas/weakly-encoded-password-data-security-auditor-response'
      - $ref: '#/components/schemas/privilege-data-security-auditor-response'
      - $ref: '#/components/schemas/locked-account-data-security-auditor-response'
      - $ref: '#/components/schemas/access-control-data-security-auditor-response'
    add_password_storage_scheme_request:
      oneOf:
      - $ref: '#/components/schemas/add-crypt-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-vault-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-third-party-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-argon2-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-third-party-enhanced-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-pbkdf2-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-aes-256-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-bcrypt-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-amazon-secrets-manager-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-azure-key-vault-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-conjur-password-storage-scheme-request'
      - $ref: '#/components/schemas/add-scrypt-password-storage-scheme-request'
    add_password_storage_scheme_200_response:
      oneOf:
      - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
      - $ref: '#/components/schemas/vault-password-storage-scheme-response'
      - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
      - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
      - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
    get_password_storage_scheme_200_response:
      oneOf:
      - $ref: '#/components/schemas/salted-sha256-password-storage-scheme-response'
      - $ref: '#/components/schemas/crypt-password-storage-scheme-response'
      - $ref: '#/components/schemas/base64-password-storage-scheme-response'
      - $ref: '#/components/schemas/salted-md5-password-storage-scheme-response'
      - $ref: '#/components/schemas/aes-password-storage-scheme-response'
      - $ref: '#/components/schemas/vault-password-storage-scheme-response'
      - $ref: '#/components/schemas/third-party-password-storage-scheme-response'
      - $ref: '#/components/schemas/argon2-password-storage-scheme-response'
      - $ref: '#/components/schemas/third-party-enhanced-password-storage-scheme-response'
      - $ref: '#/components/schemas/pbkdf2-password-storage-scheme-response'
      - $ref: '#/components/schemas/rc4-password-storage-scheme-response'
      - $ref: '#/components/schemas/salted-sha384-password-storage-scheme-response'
      - $ref: '#/components/schemas/triple-des-password-storage-scheme-response'
      - $ref: '#/components/schemas/clear-password-storage-scheme-response'
      - $ref: '#/components/schemas/aes-256-password-storage-scheme-response'
      - $ref: '#/components/schemas/bcrypt-password-storage-scheme-response'
      - $ref: '#/components/schemas/blowfish-password-storage-scheme-response'
      - $ref: '#/components/schemas/sha1-password-storage-scheme-response'
      - $ref: '#/components/schemas/amazon-secrets-manager-password-storage-scheme-response'
      - $ref: '#/components/schemas/azure-key-vault-password-storage-scheme-response'
      - $ref: '#/components/schemas/conjur-password-storage-scheme-response'
      - $ref: '#/components/schemas/salted-sha1-password-storage-scheme-response'
      - $ref: '#/components/schemas/salted-sha512-password-storage-scheme-response'
      - $ref: '#/components/schemas/scrypt-password-storage-scheme-response'
      - $ref: '#/components/schemas/md5-password-storage-scheme-response'
    add_log_retention_policy_request:
      oneOf:
      - $ref: '#/components/schemas/add-time-limit-log-retention-policy-request'
      - $ref: '#/components/schemas/add-never-delete-log-retention-policy-request'
      - $ref: '#/components/schemas/add-file-count-log-retention-policy-request'
      - $ref: '#/components/schemas/add-free-disk-space-log-retention-policy-request'
      - $ref: '#/components/schemas/add-size-limit-log-retention-policy-request'
    add_log_retention_policy_200_response:
      oneOf:
      - $ref: '#/components/schemas/time-limit-log-retention-policy-response'
      - $ref: '#/components/schemas/never-delete-log-retention-policy-response'
      - $ref: '#/components/schemas/file-count-log-retention-policy-response'
      - $ref: '#/components/schemas/free-disk-space-log-retention-policy-response'
      - $ref: '#/components/schemas/size-limit-log-retention-policy-response'
    add_oauth_token_handler_request:
      oneOf:
      - $ref: '#/components/schemas/add-groovy-scripted-oauth-token-handler-request'
      - $ref: '#/components/schemas/add-third-party-oauth-token-handler-request'
    add_oauth_token_handler_200_response:
      oneOf:
      - $ref: '#/components/schemas/groovy-scripted-oauth-token-handler-response'
      - $ref: '#/components/schemas/third-party-oauth-token-handler-response'
    add_ping_one_id_token_validator_request_allOf:
      properties:
        validatorName:
          description: Name of the new ID Token Validator
          type: string
      required:
      - validatorName
      type: object
      example: null
    ping_one_id_token_validator_response_allOf:
      properties:
        id:
          description: Name of the ID Token Validator
          type: string
      required:
      - id
      type: object
      example: null
    add_sensitive_attribute_request_allOf:
      properties:
        attributeName:
          description: Name of the new Sensitive Attribute
          type: string
      required:
      - attributeName
      type: object
      example: null
    sensitive_attribute_response_allOf:
      properties:
        id:
          description: Name of the Sensitive Attribute
          type: string
      required:
      - id
      type: object
      example: null
    add_ping_federate_access_token_validator_request_allOf:
      properties:
        validatorName:
          description: Name of the new Access Token Validator
          type: string
      required:
      - validatorName
      type: object
      example: null
    ping_federate_access_token_validator_response_allOf:
      properties:
        id:
          description: Name of the Access Token Validator
          type: string
      required:
      - id
      type: object
      example: null
    add_access_log_field_mapping_request_allOf:
      properties:
        mappingName:
          description: Name of the new Log Field Mapping
          type: string
      required:
      - mappingName
      type: object
      example: null
    access_log_field_mapping_response_allOf:
      properties:
        id:
          description: Name of the Log Field Mapping
          type: string
      required:
      - id
      type: object
      example: null
    add_random_password_generator_request_allOf:
      properties:
        generatorName:
          description: Name of the new Password Generator
          type: string
      required:
      - generatorName
      type: object
      example: null
    random_password_generator_response_allOf:
      properties:
        id:
          description: Name of the Password Generator
          type: string
      required:
      - id
      type: object
      example: null
    add_twilio_otp_delivery_mechanism_request_allOf:
      properties:
        mechanismName:
          description: Name of the new OTP Delivery Mechanism
          type: string
      required:
      - mechanismName
      type: object
      example: null
    twilio_otp_delivery_mechanism_response_allOf:
      properties:
        id:
          description: Name of the OTP Delivery Mechanism
          type: string
      required:
      - id
      type: object
      example: null
    add_text_access_log_field_behavior_request_allOf:
      properties:
        behaviorName:
          description: Name of the new Log Field Behavior
          type: string
      required:
      - behaviorName
      type: object
      example: null
    text_access_log_field_behavior_response_allOf:
      properties:
        id:
          description: Name of the Log Field Behavior
          type: string
      required:
      - id
      type: object
      example: null
    add_summarize_log_file_rotation_listener_request_allOf:
      properties:
        listenerName:
          description: Name of the new Log File Rotation Listener
          type: string
      required:
      - listenerName
      type: object
      example: null
    summarize_log_file_rotation_listener_response_allOf:
      properties:
        id:
          description: Name of the Log File Rotation Listener
          type: string
      required:
      - id
      type: object
      example: null
    add_password_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Password Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    password_policy_response_allOf:
      properties:
        id:
          description: Name of the Password Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_delegated_admin_rights_request_allOf:
      properties:
        rightsName:
          description: Name of the new Delegated Admin Rights
          type: string
      required:
      - rightsName
      type: object
      example: null
    delegated_admin_rights_response_allOf:
      properties:
        id:
          description: Name of the Delegated Admin Rights
          type: string
      required:
      - id
      type: object
      example: null
    add_default_uncached_attribute_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Uncached Attribute Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    default_uncached_attribute_criteria_response_allOf:
      properties:
        id:
          description: Name of the Uncached Attribute Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_result_code_map_request_allOf:
      properties:
        mapName:
          description: Name of the new Result Code Map
          type: string
      required:
      - mapName
      type: object
      example: null
    result_code_map_response_allOf:
      properties:
        id:
          description: Name of the Result Code Map
          type: string
      required:
      - id
      type: object
      example: null
    add_simple_connection_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Connection Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    simple_connection_criteria_response_allOf:
      properties:
        id:
          description: Name of the Connection Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_blind_trust_manager_provider_request_allOf:
      properties:
        providerName:
          description: Name of the new Trust Manager Provider
          type: string
      required:
      - providerName
      type: object
      example: null
    blind_trust_manager_provider_response_allOf:
      properties:
        id:
          description: Name of the Trust Manager Provider
          type: string
      required:
      - id
      type: object
      example: null
    add_key_pair_request_allOf:
      properties:
        pairName:
          description: Name of the new Key Pair
          type: string
      required:
      - pairName
      type: object
      example: null
    key_pair_response_allOf:
      properties:
        id:
          description: Name of the Key Pair
          type: string
      required:
      - id
      type: object
      example: null
    add_root_dse_request_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Request Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    root_dse_request_criteria_response_allOf:
      properties:
        id:
          description: Name of the Request Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_time_limit_log_rotation_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Log Rotation Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    time_limit_log_rotation_policy_response_allOf:
      properties:
        id:
          description: Name of the Log Rotation Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_validate_totp_password_extended_operation_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Extended Operation Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    validate_totp_password_extended_operation_handler_response_allOf:
      properties:
        id:
          description: Name of the Extended Operation Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_default_azure_authentication_method_request_allOf:
      properties:
        methodName:
          description: Name of the new Azure Authentication Method
          type: string
      required:
      - methodName
      type: object
      example: null
    default_azure_authentication_method_response_allOf:
      properties:
        id:
          description: Name of the Azure Authentication Method
          type: string
      required:
      - id
      type: object
      example: null
    add_environment_variable_passphrase_provider_request_allOf:
      properties:
        providerName:
          description: Name of the new Passphrase Provider
          type: string
      required:
      - providerName
      type: object
      example: null
    environment_variable_passphrase_provider_response_allOf:
      properties:
        id:
          description: Name of the Passphrase Provider
          type: string
      required:
      - id
      type: object
      example: null
    add_soft_delete_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Soft Delete Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    soft_delete_policy_response_allOf:
      properties:
        id:
          description: Name of the Soft Delete Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_recurring_task_chain_request_allOf:
      properties:
        chainName:
          description: Name of the new Recurring Task Chain
          type: string
      required:
      - chainName
      type: object
      example: null
    recurring_task_chain_response_allOf:
      properties:
        id:
          description: Name of the Recurring Task Chain
          type: string
      required:
      - id
      type: object
      example: null
    add_indicator_gauge_request_allOf:
      properties:
        gaugeName:
          description: Name of the new Gauge
          type: string
      required:
      - gaugeName
      type: object
      example: null
    indicator_gauge_response_allOf:
      properties:
        id:
          description: Name of the Gauge
          type: string
      required:
      - id
      type: object
      example: null
    add_simple_search_reference_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Search Reference Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    simple_search_reference_criteria_response_allOf:
      properties:
        id:
          description: Name of the Search Reference Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_fifo_entry_cache_request_allOf:
      properties:
        cacheName:
          description: Name of the new Entry Cache
          type: string
      required:
      - cacheName
      type: object
      example: null
    fifo_entry_cache_response_allOf:
      properties:
        id:
          description: Name of the Entry Cache
          type: string
      required:
      - id
      type: object
      example: null
    add_smtp_alert_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Alert Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    smtp_alert_handler_response_allOf:
      properties:
        id:
          description: Name of the Alert Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_amazon_key_management_service_cipher_stream_provider_request_allOf:
      properties:
        providerName:
          description: Name of the new Cipher Stream Provider
          type: string
      required:
      - providerName
      type: object
      example: null
    amazon_key_management_service_cipher_stream_provider_response_allOf:
      properties:
        id:
          description: Name of the Cipher Stream Provider
          type: string
      required:
      - id
      type: object
      example: null
    add_static_token_vault_authentication_method_request_allOf:
      properties:
        methodName:
          description: Name of the new Vault Authentication Method
          type: string
      required:
      - methodName
      type: object
      example: null
    static_token_vault_authentication_method_response_allOf:
      properties:
        id:
          description: Name of the Vault Authentication Method
          type: string
      required:
      - id
      type: object
      example: null
    add_smtp_account_status_notification_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Account Status Notification Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    smtp_account_status_notification_handler_response_allOf:
      properties:
        id:
          description: Name of the Account Status Notification Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_server_group_request_allOf:
      properties:
        groupName:
          description: Name of the new Server Group
          type: string
      required:
      - groupName
      type: object
      example: null
    server_group_response_allOf:
      properties:
        id:
          description: Name of the Server Group
          type: string
      required:
      - id
      type: object
      example: null
    add_ldap_pass_through_authentication_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Pass Through Authentication Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    ldap_pass_through_authentication_handler_response_allOf:
      properties:
        id:
          description: Name of the Pass Through Authentication Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_consent_definition_request_allOf:
      properties:
        definitionName:
          description: Name of the new Consent Definition
          type: string
      required:
      - definitionName
      type: object
      example: null
    consent_definition_response_allOf:
      properties:
        id:
          description: Name of the Consent Definition
          type: string
      required:
      - id
      type: object
      example: null
    add_topology_admin_user_request_allOf:
      properties:
        userName:
          description: Name of the new Topology Admin User
          type: string
      required:
      - userName
      type: object
      example: null
    topology_admin_user_response_allOf:
      properties:
        id:
          description: Name of the Topology Admin User
          type: string
      required:
      - id
      type: object
      example: null
    add_change_subscription_request_allOf:
      properties:
        subscriptionName:
          description: Name of the new Change Subscription
          type: string
      required:
      - subscriptionName
      type: object
      example: null
    change_subscription_response_allOf:
      properties:
        id:
          description: Name of the Change Subscription
          type: string
      required:
      - id
      type: object
      example: null
    add_api_key_conjur_authentication_method_request_allOf:
      properties:
        methodName:
          description: Name of the new Conjur Authentication Method
          type: string
      required:
      - methodName
      type: object
      example: null
    api_key_conjur_authentication_method_response_allOf:
      properties:
        id:
          description: Name of the Conjur Authentication Method
          type: string
      required:
      - id
      type: object
      example: null
    add_constructed_attribute_request_allOf:
      properties:
        attributeName:
          description: Name of the new Constructed Attribute
          type: string
      required:
      - attributeName
      type: object
      example: null
    constructed_attribute_response_allOf:
      properties:
        id:
          description: Name of the Constructed Attribute
          type: string
      required:
      - id
      type: object
      example: null
    add_character_set_password_validator_request_allOf:
      properties:
        validatorName:
          description: Name of the new Password Validator
          type: string
      required:
      - validatorName
      type: object
      example: null
    character_set_password_validator_response_allOf:
      properties:
        id:
          description: Name of the Password Validator
          type: string
      required:
      - id
      type: object
      example: null
    add_jmx_connection_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Connection Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    jmx_connection_handler_response_allOf:
      properties:
        id:
          description: Name of the Connection Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_trusted_certificate_request_allOf:
      properties:
        certificateName:
          description: Name of the new Trusted Certificate
          type: string
      required:
      - certificateName
      type: object
      example: null
    trusted_certificate_response_allOf:
      properties:
        id:
          description: Name of the Trusted Certificate
          type: string
      required:
      - id
      type: object
      example: null
    add_simple_search_entry_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Search Entry Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    simple_search_entry_criteria_response_allOf:
      properties:
        id:
          description: Name of the Search Entry Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_delay_bind_response_failure_lockout_action_request_allOf:
      properties:
        actionName:
          description: Name of the new Failure Lockout Action
          type: string
      required:
      - actionName
      type: object
      example: null
    delay_bind_response_failure_lockout_action_response_allOf:
      properties:
        id:
          description: Name of the Failure Lockout Action
          type: string
      required:
      - id
      type: object
      example: null
    add_subject_equals_dn_certificate_mapper_request_allOf:
      properties:
        mapperName:
          description: Name of the new Certificate Mapper
          type: string
      required:
      - mapperName
      type: object
      example: null
    subject_equals_dn_certificate_mapper_response_allOf:
      properties:
        id:
          description: Name of the Certificate Mapper
          type: string
      required:
      - id
      type: object
      example: null
    add_syslog_json_audit_log_publisher_request_allOf:
      properties:
        publisherName:
          description: Name of the new Log Publisher
          type: string
      required:
      - publisherName
      type: object
      example: null
    syslog_json_audit_log_publisher_response_allOf:
      properties:
        id:
          description: Name of the Log Publisher
          type: string
      required:
      - id
      type: object
      example: null
    add_replication_assurance_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Replication Assurance Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    replication_assurance_policy_response_allOf:
      properties:
        id:
          description: Name of the Replication Assurance Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_file_based_key_manager_provider_request_allOf:
      properties:
        providerName:
          description: Name of the new Key Manager Provider
          type: string
      required:
      - providerName
      type: object
      example: null
    file_based_key_manager_provider_response_allOf:
      properties:
        id:
          description: Name of the Key Manager Provider
          type: string
      required:
      - id
      type: object
      example: null
    add_opendj_external_server_request_allOf:
      properties:
        serverName:
          description: Name of the new External Server
          type: string
      required:
      - serverName
      type: object
      example: null
    opendj_external_server_response_allOf:
      properties:
        id:
          description: Name of the External Server
          type: string
      required:
      - id
      type: object
      example: null
    add_dn_map_request_allOf:
      properties:
        mapName:
          description: Name of the new DN Map
          type: string
      required:
      - mapName
      type: object
      example: null
    dn_map_response_allOf:
      properties:
        id:
          description: Name of the DN Map
          type: string
      required:
      - id
      type: object
      example: null
    add_groovy_scripted_change_subscription_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new Change Subscription Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    groovy_scripted_change_subscription_handler_response_allOf:
      properties:
        id:
          description: Name of the Change Subscription Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_obscured_value_request_allOf:
      properties:
        valueName:
          description: Name of the new Obscured Value
          type: string
      required:
      - valueName
      type: object
      example: null
    obscured_value_response_allOf:
      properties:
        id:
          description: Name of the Obscured Value
          type: string
      required:
      - id
      type: object
      example: null
    add_third_party_monitor_provider_request_allOf:
      properties:
        providerName:
          description: Name of the new Monitor Provider
          type: string
      required:
      - providerName
      type: object
      example: null
    third_party_monitor_provider_response_allOf:
      properties:
        id:
          description: Name of the Monitor Provider
          type: string
      required:
      - id
      type: object
      example: null
    add_indicator_gauge_data_source_request_allOf:
      properties:
        sourceName:
          description: Name of the new Gauge Data Source
          type: string
      required:
      - sourceName
      type: object
      example: null
    indicator_gauge_data_source_response_allOf:
      properties:
        id:
          description: Name of the Gauge Data Source
          type: string
      required:
      - id
      type: object
      example: null
    add_local_db_backend_request_allOf:
      properties:
        backendName:
          description: Name of the new Backend
          type: string
      required:
      - backendName
      type: object
      example: null
    local_db_backend_response_allOf:
      properties:
        id:
          description: Name of the Backend
          type: string
      required:
      - id
      type: object
      example: null
    add_default_uncached_entry_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Uncached Entry Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    default_uncached_entry_criteria_response_allOf:
      properties:
        id:
          description: Name of the Uncached Entry Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_quickstart_http_servlet_extension_request_allOf:
      properties:
        extensionName:
          description: Name of the new HTTP Servlet Extension
          type: string
      required:
      - extensionName
      type: object
      example: null
    quickstart_http_servlet_extension_response_allOf:
      properties:
        id:
          description: Name of the HTTP Servlet Extension
          type: string
      required:
      - id
      type: object
      example: null
    add_client_connection_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Client Connection Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    client_connection_policy_response_allOf:
      properties:
        id:
          description: Name of the Client Connection Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_mirror_virtual_attribute_request_allOf:
      properties:
        name:
          description: Name of the new Virtual Attribute
          type: string
      required:
      - name
      type: object
      example: null
    mirror_virtual_attribute_response_allOf:
      properties:
        id:
          description: Name of the Virtual Attribute
          type: string
      required:
      - id
      type: object
      example: null
    add_third_party_notification_manager_request_allOf:
      properties:
        managerName:
          description: Name of the new Notification Manager
          type: string
      required:
      - managerName
      type: object
      example: null
    third_party_notification_manager_response_allOf:
      properties:
        id:
          description: Name of the Notification Manager
          type: string
      required:
      - id
      type: object
      example: null
    add_simple_result_criteria_request_allOf:
      properties:
        criteriaName:
          description: Name of the new Result Criteria
          type: string
      required:
      - criteriaName
      type: object
      example: null
    simple_result_criteria_response_allOf:
      properties:
        id:
          description: Name of the Result Criteria
          type: string
      required:
      - id
      type: object
      example: null
    add_exact_match_identity_mapper_request_allOf:
      properties:
        mapperName:
          description: Name of the new Identity Mapper
          type: string
      required:
      - mapperName
      type: object
      example: null
    exact_match_identity_mapper_response_allOf:
      properties:
        id:
          description: Name of the Identity Mapper
          type: string
      required:
      - id
      type: object
      example: null
    add_generate_server_profile_recurring_task_request_allOf:
      properties:
        taskName:
          description: Name of the new Recurring Task
          type: string
      required:
      - taskName
      type: object
      example: null
    generate_server_profile_recurring_task_response_allOf:
      properties:
        id:
          description: Name of the Recurring Task
          type: string
      required:
      - id
      type: object
      example: null
    add_user_rest_resource_type_request_allOf:
      properties:
        typeName:
          description: Name of the new REST Resource Type
          type: string
      required:
      - typeName
      type: object
      example: null
    user_rest_resource_type_response_allOf:
      properties:
        id:
          description: Name of the REST Resource Type
          type: string
      required:
      - id
      type: object
      example: null
    add_unboundid_ms_chap_v2_sasl_mechanism_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new SASL Mechanism Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    unboundid_ms_chap_v2_sasl_mechanism_handler_response_allOf:
      properties:
        id:
          description: Name of the SASL Mechanism Handler
          type: string
      required:
      - id
      type: object
      example: null
    add_expired_password_data_security_auditor_request_allOf:
      properties:
        auditorName:
          description: Name of the new Data Security Auditor
          type: string
      required:
      - auditorName
      type: object
      example: null
    expired_password_data_security_auditor_response_allOf:
      properties:
        id:
          description: Name of the Data Security Auditor
          type: string
      required:
      - id
      type: object
      example: null
    add_statsd_monitoring_endpoint_request_allOf:
      properties:
        endpointName:
          description: Name of the new Monitoring Endpoint
          type: string
      required:
      - endpointName
      type: object
      example: null
    statsd_monitoring_endpoint_response_allOf:
      properties:
        id:
          description: Name of the Monitoring Endpoint
          type: string
      required:
      - id
      type: object
      example: null
    add_crypt_password_storage_scheme_request_allOf:
      properties:
        schemeName:
          description: Name of the new Password Storage Scheme
          type: string
      required:
      - schemeName
      type: object
      example: null
    crypt_password_storage_scheme_response_allOf:
      properties:
        id:
          description: Name of the Password Storage Scheme
          type: string
      required:
      - id
      type: object
      example: null
    add_json_attribute_constraints_request_allOf:
      properties:
        attributeType:
          description: Name of the new JSON Attribute Constraints
          type: string
      required:
      - attributeType
      type: object
      example: null
    json_attribute_constraints_response_allOf:
      properties:
        id:
          description: Name of the JSON Attribute Constraints
          type: string
      required:
      - id
      type: object
      example: null
    add_http_servlet_cross_origin_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new HTTP Servlet Cross Origin Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    http_servlet_cross_origin_policy_response_allOf:
      properties:
        id:
          description: Name of the HTTP Servlet Cross Origin Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_delegated_admin_attribute_category_request_allOf:
      properties:
        displayName:
          description: Name of the new Delegated Admin Attribute Category
          type: string
      required:
      - displayName
      type: object
      example: null
    delegated_admin_attribute_category_response_allOf:
      properties:
        id:
          description: Name of the Delegated Admin Attribute Category
          type: string
      required:
      - id
      type: object
      example: null
    add_scim_schema_request_allOf:
      properties:
        schemaName:
          description: Name of the new SCIM Schema
          type: string
      required:
      - schemaName
      type: object
      example: null
    scim_schema_response_allOf:
      properties:
        id:
          description: Name of the SCIM Schema
          type: string
      required:
      - id
      type: object
      example: null
    add_location_request_allOf:
      properties:
        locationName:
          description: Name of the new Location
          type: string
      required:
      - locationName
      type: object
      example: null
    location_response_allOf:
      properties:
        id:
          description: Name of the Location
          type: string
      required:
      - id
      type: object
      example: null
    add_time_limit_log_retention_policy_request_allOf:
      properties:
        policyName:
          description: Name of the new Log Retention Policy
          type: string
      required:
      - policyName
      type: object
      example: null
    time_limit_log_retention_policy_response_allOf:
      properties:
        id:
          description: Name of the Log Retention Policy
          type: string
      required:
      - id
      type: object
      example: null
    add_groovy_scripted_oauth_token_handler_request_allOf:
      properties:
        handlerName:
          description: Name of the new OAuth Token Handler
          type: string
      required:
      - handlerName
      type: object
      example: null
    groovy_scripted_oauth_token_handler_response_allOf:
      properties:
        id:
          description: Name of the OAuth Token Handler
          type: string
      required:
      - id
      type: object
      example: null
  securitySchemes:
    basicAuth:
      scheme: Basic
      type: http
