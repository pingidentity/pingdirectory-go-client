/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VelocityHttpServletExtensionResponse struct for VelocityHttpServletExtensionResponse
type VelocityHttpServletExtensionResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumvelocityHttpServletExtensionSchemaUrn        `json:"schemas"`
	// Name of the HTTP Servlet Extension
	Id string `json:"id"`
	// The context path to use to access all template-based and static content. The value must start with a forward slash and must represent a valid HTTP context path.
	BaseContextPath string `json:"baseContextPath"`
	// The path below the base context path by which static, non-template content such as images, CSS, and Javascript files are accessible.
	StaticContextPath *string `json:"staticContextPath,omitempty"`
	// Specifies the base directory in which static, non-template content such as images, CSS, and Javascript files are stored on the filesystem.
	StaticContentDirectory *string `json:"staticContentDirectory,omitempty"`
	// Specifies the base directory in which custom static, non-template content such as images, CSS, and Javascript files are stored on the filesystem. Files in this directory will override those with the same name in the directory specified by the static-content-directory property.
	StaticCustomDirectory *string `json:"staticCustomDirectory,omitempty"`
	// Specifies an ordered list of directories in which to search for the template files.
	TemplateDirectory []string `json:"templateDirectory"`
	// Specifies whether the HTTP request will be exposed to templates.
	ExposeRequestAttributes *bool `json:"exposeRequestAttributes,omitempty"`
	// Specifies whether the HTTP session will be exposed to templates.
	ExposeSessionAttributes *bool `json:"exposeSessionAttributes,omitempty"`
	// Specifies whether a server context will be exposed under context key 'ubid_server' for all template contexts.
	ExposeServerContext *bool `json:"exposeServerContext,omitempty"`
	// Indicates whether context providers may override existing context objects with new values.
	AllowContextOverride *bool `json:"allowContextOverride,omitempty"`
	// Specifies the path to a file that contains MIME type mappings that will be used to determine the appropriate value to return for the Content-Type header based on the extension of the requested static content file.
	MimeTypesFile *string `json:"mimeTypesFile,omitempty"`
	// Specifies the default value that will be used in the response's Content-Type header that indicates the type of content to return.
	DefaultMIMEType *string `json:"defaultMIMEType,omitempty"`
	// Specifies the value that will be used for all responses' Content-Type headers' charset parameter that indicates the character encoding of the document.
	CharacterEncoding *string `json:"characterEncoding,omitempty"`
	// Specifies HTTP header fields and values added to response headers for all template page requests.
	ResponseHeader []string `json:"responseHeader,omitempty"`
	// Specifies HTTP header fields and values added to response headers for static content requests such as images and scripts.
	StaticResponseHeader []string `json:"staticResponseHeader,omitempty"`
	// Require authentication when accessing Velocity templates.
	RequireAuthentication *bool `json:"requireAuthentication,omitempty"`
	// Specifies the name of the identity mapper that is to be used for associating basic authentication credentials with user entries.
	IdentityMapper *string `json:"identityMapper,omitempty"`
	// A description for this HTTP Servlet Extension
	Description *string `json:"description,omitempty"`
	// The cross-origin request policy to use for the HTTP Servlet Extension.
	CrossOriginPolicy *string `json:"crossOriginPolicy,omitempty"`
	// Specifies the name of the HTTP response header that will contain a correlation ID value. Example values are \"Correlation-Id\", \"X-Amzn-Trace-Id\", and \"X-Request-Id\".
	CorrelationIDResponseHeader *string `json:"correlationIDResponseHeader,omitempty"`
}

// NewVelocityHttpServletExtensionResponse instantiates a new VelocityHttpServletExtensionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVelocityHttpServletExtensionResponse(schemas []EnumvelocityHttpServletExtensionSchemaUrn, id string, baseContextPath string, templateDirectory []string) *VelocityHttpServletExtensionResponse {
	this := VelocityHttpServletExtensionResponse{}
	this.Schemas = schemas
	this.Id = id
	this.BaseContextPath = baseContextPath
	this.TemplateDirectory = templateDirectory
	return &this
}

// NewVelocityHttpServletExtensionResponseWithDefaults instantiates a new VelocityHttpServletExtensionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVelocityHttpServletExtensionResponseWithDefaults() *VelocityHttpServletExtensionResponse {
	this := VelocityHttpServletExtensionResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *VelocityHttpServletExtensionResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *VelocityHttpServletExtensionResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *VelocityHttpServletExtensionResponse) GetSchemas() []EnumvelocityHttpServletExtensionSchemaUrn {
	if o == nil {
		var ret []EnumvelocityHttpServletExtensionSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetSchemasOk() ([]EnumvelocityHttpServletExtensionSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *VelocityHttpServletExtensionResponse) SetSchemas(v []EnumvelocityHttpServletExtensionSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *VelocityHttpServletExtensionResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VelocityHttpServletExtensionResponse) SetId(v string) {
	o.Id = v
}

// GetBaseContextPath returns the BaseContextPath field value
func (o *VelocityHttpServletExtensionResponse) GetBaseContextPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseContextPath
}

// GetBaseContextPathOk returns a tuple with the BaseContextPath field value
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetBaseContextPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseContextPath, true
}

// SetBaseContextPath sets field value
func (o *VelocityHttpServletExtensionResponse) SetBaseContextPath(v string) {
	o.BaseContextPath = v
}

// GetStaticContextPath returns the StaticContextPath field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetStaticContextPath() string {
	if o == nil || isNil(o.StaticContextPath) {
		var ret string
		return ret
	}
	return *o.StaticContextPath
}

// GetStaticContextPathOk returns a tuple with the StaticContextPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetStaticContextPathOk() (*string, bool) {
	if o == nil || isNil(o.StaticContextPath) {
		return nil, false
	}
	return o.StaticContextPath, true
}

// HasStaticContextPath returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasStaticContextPath() bool {
	if o != nil && !isNil(o.StaticContextPath) {
		return true
	}

	return false
}

// SetStaticContextPath gets a reference to the given string and assigns it to the StaticContextPath field.
func (o *VelocityHttpServletExtensionResponse) SetStaticContextPath(v string) {
	o.StaticContextPath = &v
}

// GetStaticContentDirectory returns the StaticContentDirectory field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetStaticContentDirectory() string {
	if o == nil || isNil(o.StaticContentDirectory) {
		var ret string
		return ret
	}
	return *o.StaticContentDirectory
}

// GetStaticContentDirectoryOk returns a tuple with the StaticContentDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetStaticContentDirectoryOk() (*string, bool) {
	if o == nil || isNil(o.StaticContentDirectory) {
		return nil, false
	}
	return o.StaticContentDirectory, true
}

// HasStaticContentDirectory returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasStaticContentDirectory() bool {
	if o != nil && !isNil(o.StaticContentDirectory) {
		return true
	}

	return false
}

// SetStaticContentDirectory gets a reference to the given string and assigns it to the StaticContentDirectory field.
func (o *VelocityHttpServletExtensionResponse) SetStaticContentDirectory(v string) {
	o.StaticContentDirectory = &v
}

// GetStaticCustomDirectory returns the StaticCustomDirectory field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetStaticCustomDirectory() string {
	if o == nil || isNil(o.StaticCustomDirectory) {
		var ret string
		return ret
	}
	return *o.StaticCustomDirectory
}

// GetStaticCustomDirectoryOk returns a tuple with the StaticCustomDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetStaticCustomDirectoryOk() (*string, bool) {
	if o == nil || isNil(o.StaticCustomDirectory) {
		return nil, false
	}
	return o.StaticCustomDirectory, true
}

// HasStaticCustomDirectory returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasStaticCustomDirectory() bool {
	if o != nil && !isNil(o.StaticCustomDirectory) {
		return true
	}

	return false
}

// SetStaticCustomDirectory gets a reference to the given string and assigns it to the StaticCustomDirectory field.
func (o *VelocityHttpServletExtensionResponse) SetStaticCustomDirectory(v string) {
	o.StaticCustomDirectory = &v
}

// GetTemplateDirectory returns the TemplateDirectory field value
func (o *VelocityHttpServletExtensionResponse) GetTemplateDirectory() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TemplateDirectory
}

// GetTemplateDirectoryOk returns a tuple with the TemplateDirectory field value
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetTemplateDirectoryOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TemplateDirectory, true
}

// SetTemplateDirectory sets field value
func (o *VelocityHttpServletExtensionResponse) SetTemplateDirectory(v []string) {
	o.TemplateDirectory = v
}

// GetExposeRequestAttributes returns the ExposeRequestAttributes field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetExposeRequestAttributes() bool {
	if o == nil || isNil(o.ExposeRequestAttributes) {
		var ret bool
		return ret
	}
	return *o.ExposeRequestAttributes
}

// GetExposeRequestAttributesOk returns a tuple with the ExposeRequestAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetExposeRequestAttributesOk() (*bool, bool) {
	if o == nil || isNil(o.ExposeRequestAttributes) {
		return nil, false
	}
	return o.ExposeRequestAttributes, true
}

// HasExposeRequestAttributes returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasExposeRequestAttributes() bool {
	if o != nil && !isNil(o.ExposeRequestAttributes) {
		return true
	}

	return false
}

// SetExposeRequestAttributes gets a reference to the given bool and assigns it to the ExposeRequestAttributes field.
func (o *VelocityHttpServletExtensionResponse) SetExposeRequestAttributes(v bool) {
	o.ExposeRequestAttributes = &v
}

// GetExposeSessionAttributes returns the ExposeSessionAttributes field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetExposeSessionAttributes() bool {
	if o == nil || isNil(o.ExposeSessionAttributes) {
		var ret bool
		return ret
	}
	return *o.ExposeSessionAttributes
}

// GetExposeSessionAttributesOk returns a tuple with the ExposeSessionAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetExposeSessionAttributesOk() (*bool, bool) {
	if o == nil || isNil(o.ExposeSessionAttributes) {
		return nil, false
	}
	return o.ExposeSessionAttributes, true
}

// HasExposeSessionAttributes returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasExposeSessionAttributes() bool {
	if o != nil && !isNil(o.ExposeSessionAttributes) {
		return true
	}

	return false
}

// SetExposeSessionAttributes gets a reference to the given bool and assigns it to the ExposeSessionAttributes field.
func (o *VelocityHttpServletExtensionResponse) SetExposeSessionAttributes(v bool) {
	o.ExposeSessionAttributes = &v
}

// GetExposeServerContext returns the ExposeServerContext field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetExposeServerContext() bool {
	if o == nil || isNil(o.ExposeServerContext) {
		var ret bool
		return ret
	}
	return *o.ExposeServerContext
}

// GetExposeServerContextOk returns a tuple with the ExposeServerContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetExposeServerContextOk() (*bool, bool) {
	if o == nil || isNil(o.ExposeServerContext) {
		return nil, false
	}
	return o.ExposeServerContext, true
}

// HasExposeServerContext returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasExposeServerContext() bool {
	if o != nil && !isNil(o.ExposeServerContext) {
		return true
	}

	return false
}

// SetExposeServerContext gets a reference to the given bool and assigns it to the ExposeServerContext field.
func (o *VelocityHttpServletExtensionResponse) SetExposeServerContext(v bool) {
	o.ExposeServerContext = &v
}

// GetAllowContextOverride returns the AllowContextOverride field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetAllowContextOverride() bool {
	if o == nil || isNil(o.AllowContextOverride) {
		var ret bool
		return ret
	}
	return *o.AllowContextOverride
}

// GetAllowContextOverrideOk returns a tuple with the AllowContextOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetAllowContextOverrideOk() (*bool, bool) {
	if o == nil || isNil(o.AllowContextOverride) {
		return nil, false
	}
	return o.AllowContextOverride, true
}

// HasAllowContextOverride returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasAllowContextOverride() bool {
	if o != nil && !isNil(o.AllowContextOverride) {
		return true
	}

	return false
}

// SetAllowContextOverride gets a reference to the given bool and assigns it to the AllowContextOverride field.
func (o *VelocityHttpServletExtensionResponse) SetAllowContextOverride(v bool) {
	o.AllowContextOverride = &v
}

// GetMimeTypesFile returns the MimeTypesFile field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetMimeTypesFile() string {
	if o == nil || isNil(o.MimeTypesFile) {
		var ret string
		return ret
	}
	return *o.MimeTypesFile
}

// GetMimeTypesFileOk returns a tuple with the MimeTypesFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetMimeTypesFileOk() (*string, bool) {
	if o == nil || isNil(o.MimeTypesFile) {
		return nil, false
	}
	return o.MimeTypesFile, true
}

// HasMimeTypesFile returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasMimeTypesFile() bool {
	if o != nil && !isNil(o.MimeTypesFile) {
		return true
	}

	return false
}

// SetMimeTypesFile gets a reference to the given string and assigns it to the MimeTypesFile field.
func (o *VelocityHttpServletExtensionResponse) SetMimeTypesFile(v string) {
	o.MimeTypesFile = &v
}

// GetDefaultMIMEType returns the DefaultMIMEType field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetDefaultMIMEType() string {
	if o == nil || isNil(o.DefaultMIMEType) {
		var ret string
		return ret
	}
	return *o.DefaultMIMEType
}

// GetDefaultMIMETypeOk returns a tuple with the DefaultMIMEType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetDefaultMIMETypeOk() (*string, bool) {
	if o == nil || isNil(o.DefaultMIMEType) {
		return nil, false
	}
	return o.DefaultMIMEType, true
}

// HasDefaultMIMEType returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasDefaultMIMEType() bool {
	if o != nil && !isNil(o.DefaultMIMEType) {
		return true
	}

	return false
}

// SetDefaultMIMEType gets a reference to the given string and assigns it to the DefaultMIMEType field.
func (o *VelocityHttpServletExtensionResponse) SetDefaultMIMEType(v string) {
	o.DefaultMIMEType = &v
}

// GetCharacterEncoding returns the CharacterEncoding field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetCharacterEncoding() string {
	if o == nil || isNil(o.CharacterEncoding) {
		var ret string
		return ret
	}
	return *o.CharacterEncoding
}

// GetCharacterEncodingOk returns a tuple with the CharacterEncoding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetCharacterEncodingOk() (*string, bool) {
	if o == nil || isNil(o.CharacterEncoding) {
		return nil, false
	}
	return o.CharacterEncoding, true
}

// HasCharacterEncoding returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasCharacterEncoding() bool {
	if o != nil && !isNil(o.CharacterEncoding) {
		return true
	}

	return false
}

// SetCharacterEncoding gets a reference to the given string and assigns it to the CharacterEncoding field.
func (o *VelocityHttpServletExtensionResponse) SetCharacterEncoding(v string) {
	o.CharacterEncoding = &v
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetResponseHeader() []string {
	if o == nil || isNil(o.ResponseHeader) {
		var ret []string
		return ret
	}
	return o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetResponseHeaderOk() ([]string, bool) {
	if o == nil || isNil(o.ResponseHeader) {
		return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasResponseHeader() bool {
	if o != nil && !isNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given []string and assigns it to the ResponseHeader field.
func (o *VelocityHttpServletExtensionResponse) SetResponseHeader(v []string) {
	o.ResponseHeader = v
}

// GetStaticResponseHeader returns the StaticResponseHeader field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetStaticResponseHeader() []string {
	if o == nil || isNil(o.StaticResponseHeader) {
		var ret []string
		return ret
	}
	return o.StaticResponseHeader
}

// GetStaticResponseHeaderOk returns a tuple with the StaticResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetStaticResponseHeaderOk() ([]string, bool) {
	if o == nil || isNil(o.StaticResponseHeader) {
		return nil, false
	}
	return o.StaticResponseHeader, true
}

// HasStaticResponseHeader returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasStaticResponseHeader() bool {
	if o != nil && !isNil(o.StaticResponseHeader) {
		return true
	}

	return false
}

// SetStaticResponseHeader gets a reference to the given []string and assigns it to the StaticResponseHeader field.
func (o *VelocityHttpServletExtensionResponse) SetStaticResponseHeader(v []string) {
	o.StaticResponseHeader = v
}

// GetRequireAuthentication returns the RequireAuthentication field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetRequireAuthentication() bool {
	if o == nil || isNil(o.RequireAuthentication) {
		var ret bool
		return ret
	}
	return *o.RequireAuthentication
}

// GetRequireAuthenticationOk returns a tuple with the RequireAuthentication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetRequireAuthenticationOk() (*bool, bool) {
	if o == nil || isNil(o.RequireAuthentication) {
		return nil, false
	}
	return o.RequireAuthentication, true
}

// HasRequireAuthentication returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasRequireAuthentication() bool {
	if o != nil && !isNil(o.RequireAuthentication) {
		return true
	}

	return false
}

// SetRequireAuthentication gets a reference to the given bool and assigns it to the RequireAuthentication field.
func (o *VelocityHttpServletExtensionResponse) SetRequireAuthentication(v bool) {
	o.RequireAuthentication = &v
}

// GetIdentityMapper returns the IdentityMapper field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetIdentityMapper() string {
	if o == nil || isNil(o.IdentityMapper) {
		var ret string
		return ret
	}
	return *o.IdentityMapper
}

// GetIdentityMapperOk returns a tuple with the IdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetIdentityMapperOk() (*string, bool) {
	if o == nil || isNil(o.IdentityMapper) {
		return nil, false
	}
	return o.IdentityMapper, true
}

// HasIdentityMapper returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasIdentityMapper() bool {
	if o != nil && !isNil(o.IdentityMapper) {
		return true
	}

	return false
}

// SetIdentityMapper gets a reference to the given string and assigns it to the IdentityMapper field.
func (o *VelocityHttpServletExtensionResponse) SetIdentityMapper(v string) {
	o.IdentityMapper = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VelocityHttpServletExtensionResponse) SetDescription(v string) {
	o.Description = &v
}

// GetCrossOriginPolicy returns the CrossOriginPolicy field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetCrossOriginPolicy() string {
	if o == nil || isNil(o.CrossOriginPolicy) {
		var ret string
		return ret
	}
	return *o.CrossOriginPolicy
}

// GetCrossOriginPolicyOk returns a tuple with the CrossOriginPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetCrossOriginPolicyOk() (*string, bool) {
	if o == nil || isNil(o.CrossOriginPolicy) {
		return nil, false
	}
	return o.CrossOriginPolicy, true
}

// HasCrossOriginPolicy returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasCrossOriginPolicy() bool {
	if o != nil && !isNil(o.CrossOriginPolicy) {
		return true
	}

	return false
}

// SetCrossOriginPolicy gets a reference to the given string and assigns it to the CrossOriginPolicy field.
func (o *VelocityHttpServletExtensionResponse) SetCrossOriginPolicy(v string) {
	o.CrossOriginPolicy = &v
}

// GetCorrelationIDResponseHeader returns the CorrelationIDResponseHeader field value if set, zero value otherwise.
func (o *VelocityHttpServletExtensionResponse) GetCorrelationIDResponseHeader() string {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
		var ret string
		return ret
	}
	return *o.CorrelationIDResponseHeader
}

// GetCorrelationIDResponseHeaderOk returns a tuple with the CorrelationIDResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VelocityHttpServletExtensionResponse) GetCorrelationIDResponseHeaderOk() (*string, bool) {
	if o == nil || isNil(o.CorrelationIDResponseHeader) {
		return nil, false
	}
	return o.CorrelationIDResponseHeader, true
}

// HasCorrelationIDResponseHeader returns a boolean if a field has been set.
func (o *VelocityHttpServletExtensionResponse) HasCorrelationIDResponseHeader() bool {
	if o != nil && !isNil(o.CorrelationIDResponseHeader) {
		return true
	}

	return false
}

// SetCorrelationIDResponseHeader gets a reference to the given string and assigns it to the CorrelationIDResponseHeader field.
func (o *VelocityHttpServletExtensionResponse) SetCorrelationIDResponseHeader(v string) {
	o.CorrelationIDResponseHeader = &v
}

func (o VelocityHttpServletExtensionResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["baseContextPath"] = o.BaseContextPath
	}
	if !isNil(o.StaticContextPath) {
		toSerialize["staticContextPath"] = o.StaticContextPath
	}
	if !isNil(o.StaticContentDirectory) {
		toSerialize["staticContentDirectory"] = o.StaticContentDirectory
	}
	if !isNil(o.StaticCustomDirectory) {
		toSerialize["staticCustomDirectory"] = o.StaticCustomDirectory
	}
	if true {
		toSerialize["templateDirectory"] = o.TemplateDirectory
	}
	if !isNil(o.ExposeRequestAttributes) {
		toSerialize["exposeRequestAttributes"] = o.ExposeRequestAttributes
	}
	if !isNil(o.ExposeSessionAttributes) {
		toSerialize["exposeSessionAttributes"] = o.ExposeSessionAttributes
	}
	if !isNil(o.ExposeServerContext) {
		toSerialize["exposeServerContext"] = o.ExposeServerContext
	}
	if !isNil(o.AllowContextOverride) {
		toSerialize["allowContextOverride"] = o.AllowContextOverride
	}
	if !isNil(o.MimeTypesFile) {
		toSerialize["mimeTypesFile"] = o.MimeTypesFile
	}
	if !isNil(o.DefaultMIMEType) {
		toSerialize["defaultMIMEType"] = o.DefaultMIMEType
	}
	if !isNil(o.CharacterEncoding) {
		toSerialize["characterEncoding"] = o.CharacterEncoding
	}
	if !isNil(o.ResponseHeader) {
		toSerialize["responseHeader"] = o.ResponseHeader
	}
	if !isNil(o.StaticResponseHeader) {
		toSerialize["staticResponseHeader"] = o.StaticResponseHeader
	}
	if !isNil(o.RequireAuthentication) {
		toSerialize["requireAuthentication"] = o.RequireAuthentication
	}
	if !isNil(o.IdentityMapper) {
		toSerialize["identityMapper"] = o.IdentityMapper
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CrossOriginPolicy) {
		toSerialize["crossOriginPolicy"] = o.CrossOriginPolicy
	}
	if !isNil(o.CorrelationIDResponseHeader) {
		toSerialize["correlationIDResponseHeader"] = o.CorrelationIDResponseHeader
	}
	return json.Marshal(toSerialize)
}

type NullableVelocityHttpServletExtensionResponse struct {
	value *VelocityHttpServletExtensionResponse
	isSet bool
}

func (v NullableVelocityHttpServletExtensionResponse) Get() *VelocityHttpServletExtensionResponse {
	return v.value
}

func (v *NullableVelocityHttpServletExtensionResponse) Set(val *VelocityHttpServletExtensionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVelocityHttpServletExtensionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVelocityHttpServletExtensionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVelocityHttpServletExtensionResponse(val *VelocityHttpServletExtensionResponse) *NullableVelocityHttpServletExtensionResponse {
	return &NullableVelocityHttpServletExtensionResponse{value: val, isSet: true}
}

func (v NullableVelocityHttpServletExtensionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVelocityHttpServletExtensionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
