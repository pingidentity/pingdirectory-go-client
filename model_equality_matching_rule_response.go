/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// EqualityMatchingRuleResponse struct for EqualityMatchingRuleResponse
type EqualityMatchingRuleResponse struct {
	Schemas []EnumequalityMatchingRuleSchemaUrn `json:"schemas"`
	// Indicates whether the Matching Rule is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewEqualityMatchingRuleResponse instantiates a new EqualityMatchingRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEqualityMatchingRuleResponse(schemas []EnumequalityMatchingRuleSchemaUrn, enabled bool) *EqualityMatchingRuleResponse {
	this := EqualityMatchingRuleResponse{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewEqualityMatchingRuleResponseWithDefaults instantiates a new EqualityMatchingRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEqualityMatchingRuleResponseWithDefaults() *EqualityMatchingRuleResponse {
	this := EqualityMatchingRuleResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *EqualityMatchingRuleResponse) GetSchemas() []EnumequalityMatchingRuleSchemaUrn {
	if o == nil {
		var ret []EnumequalityMatchingRuleSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *EqualityMatchingRuleResponse) GetSchemasOk() ([]EnumequalityMatchingRuleSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *EqualityMatchingRuleResponse) SetSchemas(v []EnumequalityMatchingRuleSchemaUrn) {
	o.Schemas = v
}

// GetEnabled returns the Enabled field value
func (o *EqualityMatchingRuleResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *EqualityMatchingRuleResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *EqualityMatchingRuleResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o EqualityMatchingRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableEqualityMatchingRuleResponse struct {
	value *EqualityMatchingRuleResponse
	isSet bool
}

func (v NullableEqualityMatchingRuleResponse) Get() *EqualityMatchingRuleResponse {
	return v.value
}

func (v *NullableEqualityMatchingRuleResponse) Set(val *EqualityMatchingRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableEqualityMatchingRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableEqualityMatchingRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEqualityMatchingRuleResponse(val *EqualityMatchingRuleResponse) *NullableEqualityMatchingRuleResponse {
	return &NullableEqualityMatchingRuleResponse{value: val, isSet: true}
}

func (v NullableEqualityMatchingRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEqualityMatchingRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


