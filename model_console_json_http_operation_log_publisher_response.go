/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConsoleJsonHttpOperationLogPublisherResponse struct for ConsoleJsonHttpOperationLogPublisherResponse
type ConsoleJsonHttpOperationLogPublisherResponse struct {
	Meta *MetaMeta `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Log Publisher
	Id string `json:"id"`
	Schemas []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn `json:"schemas"`
	// Indicates whether the Console JSON HTTP Operation Log Publisher is enabled for use.
	Enabled bool `json:"enabled"`
	OutputLocation *EnumlogPublisherOutputLocationProp `json:"outputLocation,omitempty"`
	// Indicates whether to record a log message with information about requests received from the client.
	LogRequests *bool `json:"logRequests,omitempty"`
	// Indicates whether to record a log message with information about the result of processing a requested HTTP operation.
	LogResults *bool `json:"logResults,omitempty"`
	// Indicates whether log messages should include the product name for the Directory Server.
	IncludeProductName *bool `json:"includeProductName,omitempty"`
	// Indicates whether log messages should include the instance name for the Directory Server.
	IncludeInstanceName *bool `json:"includeInstanceName,omitempty"`
	// Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
	IncludeStartupID *bool `json:"includeStartupID,omitempty"`
	// Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
	IncludeThreadID *bool `json:"includeThreadID,omitempty"`
	// Indicates whether result log messages should include all of the elements of request log messages. This may be used to record a single message per operation with details about both the request and response.
	IncludeRequestDetailsInResultMessages *bool `json:"includeRequestDetailsInResultMessages,omitempty"`
	LogRequestHeaders *EnumlogPublisherLogRequestHeadersProp `json:"logRequestHeaders,omitempty"`
	// Specifies the case-insensitive names of request headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-headers property has a value of true.
	SuppressedRequestHeaderName []string `json:"suppressedRequestHeaderName,omitempty"`
	LogResponseHeaders *EnumlogPublisherLogResponseHeadersProp `json:"logResponseHeaders,omitempty"`
	// Specifies the case-insensitive names of response headers that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-response-headers property has a value of true.
	SuppressedResponseHeaderName []string `json:"suppressedResponseHeaderName,omitempty"`
	// Indicates whether to log the type of credentials given if an \"Authorization\" header was included in the request. Logging the authorization type may be useful, and is much more secure than logging the entire value of the \"Authorization\" header.
	LogRequestAuthorizationType *bool `json:"logRequestAuthorizationType,omitempty"`
	// Indicates whether to log the names of any cookies included in an HTTP request. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
	LogRequestCookieNames *bool `json:"logRequestCookieNames,omitempty"`
	// Indicates whether to log the names of any cookies set in an HTTP response. Logging cookie names may be useful and is much more secure than logging the entire content of the cookies (which may include sensitive information).
	LogResponseCookieNames *bool `json:"logResponseCookieNames,omitempty"`
	LogRequestParameters *EnumlogPublisherLogRequestParametersProp `json:"logRequestParameters,omitempty"`
	// Specifies the case-insensitive names of request parameters that should be omitted from log messages (e.g., for the purpose of brevity or security). This will only be used if the log-request-parameters property has a value of parameter-names or parameter-names-and-values.
	SuppressedRequestParameterName []string `json:"suppressedRequestParameterName,omitempty"`
	// Indicates whether request log messages should include information about the HTTP version specified in the request.
	LogRequestProtocol *bool `json:"logRequestProtocol,omitempty"`
	// Indicates whether the redirect URI (i.e., the value of the \"Location\" header from responses) should be included in response log messages.
	LogRedirectURI *bool `json:"logRedirectURI,omitempty"`
	// Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
	WriteMultiLineMessages *bool `json:"writeMultiLineMessages,omitempty"`
	// A description for this Log Publisher
	Description *string `json:"description,omitempty"`
	LoggingErrorBehavior *EnumlogPublisherLoggingErrorBehaviorProp `json:"loggingErrorBehavior,omitempty"`
}

// NewConsoleJsonHttpOperationLogPublisherResponse instantiates a new ConsoleJsonHttpOperationLogPublisherResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConsoleJsonHttpOperationLogPublisherResponse(id string, schemas []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn, enabled bool) *ConsoleJsonHttpOperationLogPublisherResponse {
	this := ConsoleJsonHttpOperationLogPublisherResponse{}
	this.Id = id
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewConsoleJsonHttpOperationLogPublisherResponseWithDefaults instantiates a new ConsoleJsonHttpOperationLogPublisherResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConsoleJsonHttpOperationLogPublisherResponseWithDefaults() *ConsoleJsonHttpOperationLogPublisherResponse {
	this := ConsoleJsonHttpOperationLogPublisherResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
    return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSchemas() []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn {
	if o == nil {
		var ret []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSchemasOk() ([]EnumconsoleJsonHttpOperationLogPublisherSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetSchemas(v []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn) {
	o.Schemas = v
}

// GetEnabled returns the Enabled field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetOutputLocation returns the OutputLocation field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetOutputLocation() EnumlogPublisherOutputLocationProp {
	if o == nil || isNil(o.OutputLocation) {
		var ret EnumlogPublisherOutputLocationProp
		return ret
	}
	return *o.OutputLocation
}

// GetOutputLocationOk returns a tuple with the OutputLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetOutputLocationOk() (*EnumlogPublisherOutputLocationProp, bool) {
	if o == nil || isNil(o.OutputLocation) {
    return nil, false
	}
	return o.OutputLocation, true
}

// HasOutputLocation returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasOutputLocation() bool {
	if o != nil && !isNil(o.OutputLocation) {
		return true
	}

	return false
}

// SetOutputLocation gets a reference to the given EnumlogPublisherOutputLocationProp and assigns it to the OutputLocation field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetOutputLocation(v EnumlogPublisherOutputLocationProp) {
	o.OutputLocation = &v
}

// GetLogRequests returns the LogRequests field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequests() bool {
	if o == nil || isNil(o.LogRequests) {
		var ret bool
		return ret
	}
	return *o.LogRequests
}

// GetLogRequestsOk returns a tuple with the LogRequests field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestsOk() (*bool, bool) {
	if o == nil || isNil(o.LogRequests) {
    return nil, false
	}
	return o.LogRequests, true
}

// HasLogRequests returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequests() bool {
	if o != nil && !isNil(o.LogRequests) {
		return true
	}

	return false
}

// SetLogRequests gets a reference to the given bool and assigns it to the LogRequests field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequests(v bool) {
	o.LogRequests = &v
}

// GetLogResults returns the LogResults field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResults() bool {
	if o == nil || isNil(o.LogResults) {
		var ret bool
		return ret
	}
	return *o.LogResults
}

// GetLogResultsOk returns a tuple with the LogResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResultsOk() (*bool, bool) {
	if o == nil || isNil(o.LogResults) {
    return nil, false
	}
	return o.LogResults, true
}

// HasLogResults returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogResults() bool {
	if o != nil && !isNil(o.LogResults) {
		return true
	}

	return false
}

// SetLogResults gets a reference to the given bool and assigns it to the LogResults field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogResults(v bool) {
	o.LogResults = &v
}

// GetIncludeProductName returns the IncludeProductName field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeProductName() bool {
	if o == nil || isNil(o.IncludeProductName) {
		var ret bool
		return ret
	}
	return *o.IncludeProductName
}

// GetIncludeProductNameOk returns a tuple with the IncludeProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeProductNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeProductName) {
    return nil, false
	}
	return o.IncludeProductName, true
}

// HasIncludeProductName returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasIncludeProductName() bool {
	if o != nil && !isNil(o.IncludeProductName) {
		return true
	}

	return false
}

// SetIncludeProductName gets a reference to the given bool and assigns it to the IncludeProductName field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetIncludeProductName(v bool) {
	o.IncludeProductName = &v
}

// GetIncludeInstanceName returns the IncludeInstanceName field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeInstanceName() bool {
	if o == nil || isNil(o.IncludeInstanceName) {
		var ret bool
		return ret
	}
	return *o.IncludeInstanceName
}

// GetIncludeInstanceNameOk returns a tuple with the IncludeInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeInstanceNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeInstanceName) {
    return nil, false
	}
	return o.IncludeInstanceName, true
}

// HasIncludeInstanceName returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasIncludeInstanceName() bool {
	if o != nil && !isNil(o.IncludeInstanceName) {
		return true
	}

	return false
}

// SetIncludeInstanceName gets a reference to the given bool and assigns it to the IncludeInstanceName field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetIncludeInstanceName(v bool) {
	o.IncludeInstanceName = &v
}

// GetIncludeStartupID returns the IncludeStartupID field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeStartupID() bool {
	if o == nil || isNil(o.IncludeStartupID) {
		var ret bool
		return ret
	}
	return *o.IncludeStartupID
}

// GetIncludeStartupIDOk returns a tuple with the IncludeStartupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeStartupIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeStartupID) {
    return nil, false
	}
	return o.IncludeStartupID, true
}

// HasIncludeStartupID returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasIncludeStartupID() bool {
	if o != nil && !isNil(o.IncludeStartupID) {
		return true
	}

	return false
}

// SetIncludeStartupID gets a reference to the given bool and assigns it to the IncludeStartupID field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetIncludeStartupID(v bool) {
	o.IncludeStartupID = &v
}

// GetIncludeThreadID returns the IncludeThreadID field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeThreadID() bool {
	if o == nil || isNil(o.IncludeThreadID) {
		var ret bool
		return ret
	}
	return *o.IncludeThreadID
}

// GetIncludeThreadIDOk returns a tuple with the IncludeThreadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeThreadIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeThreadID) {
    return nil, false
	}
	return o.IncludeThreadID, true
}

// HasIncludeThreadID returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasIncludeThreadID() bool {
	if o != nil && !isNil(o.IncludeThreadID) {
		return true
	}

	return false
}

// SetIncludeThreadID gets a reference to the given bool and assigns it to the IncludeThreadID field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetIncludeThreadID(v bool) {
	o.IncludeThreadID = &v
}

// GetIncludeRequestDetailsInResultMessages returns the IncludeRequestDetailsInResultMessages field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeRequestDetailsInResultMessages() bool {
	if o == nil || isNil(o.IncludeRequestDetailsInResultMessages) {
		var ret bool
		return ret
	}
	return *o.IncludeRequestDetailsInResultMessages
}

// GetIncludeRequestDetailsInResultMessagesOk returns a tuple with the IncludeRequestDetailsInResultMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetIncludeRequestDetailsInResultMessagesOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequestDetailsInResultMessages) {
    return nil, false
	}
	return o.IncludeRequestDetailsInResultMessages, true
}

// HasIncludeRequestDetailsInResultMessages returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasIncludeRequestDetailsInResultMessages() bool {
	if o != nil && !isNil(o.IncludeRequestDetailsInResultMessages) {
		return true
	}

	return false
}

// SetIncludeRequestDetailsInResultMessages gets a reference to the given bool and assigns it to the IncludeRequestDetailsInResultMessages field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetIncludeRequestDetailsInResultMessages(v bool) {
	o.IncludeRequestDetailsInResultMessages = &v
}

// GetLogRequestHeaders returns the LogRequestHeaders field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestHeaders() EnumlogPublisherLogRequestHeadersProp {
	if o == nil || isNil(o.LogRequestHeaders) {
		var ret EnumlogPublisherLogRequestHeadersProp
		return ret
	}
	return *o.LogRequestHeaders
}

// GetLogRequestHeadersOk returns a tuple with the LogRequestHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestHeadersOk() (*EnumlogPublisherLogRequestHeadersProp, bool) {
	if o == nil || isNil(o.LogRequestHeaders) {
    return nil, false
	}
	return o.LogRequestHeaders, true
}

// HasLogRequestHeaders returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequestHeaders() bool {
	if o != nil && !isNil(o.LogRequestHeaders) {
		return true
	}

	return false
}

// SetLogRequestHeaders gets a reference to the given EnumlogPublisherLogRequestHeadersProp and assigns it to the LogRequestHeaders field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequestHeaders(v EnumlogPublisherLogRequestHeadersProp) {
	o.LogRequestHeaders = &v
}

// GetSuppressedRequestHeaderName returns the SuppressedRequestHeaderName field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedRequestHeaderName() []string {
	if o == nil || isNil(o.SuppressedRequestHeaderName) {
		var ret []string
		return ret
	}
	return o.SuppressedRequestHeaderName
}

// GetSuppressedRequestHeaderNameOk returns a tuple with the SuppressedRequestHeaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedRequestHeaderNameOk() ([]string, bool) {
	if o == nil || isNil(o.SuppressedRequestHeaderName) {
    return nil, false
	}
	return o.SuppressedRequestHeaderName, true
}

// HasSuppressedRequestHeaderName returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasSuppressedRequestHeaderName() bool {
	if o != nil && !isNil(o.SuppressedRequestHeaderName) {
		return true
	}

	return false
}

// SetSuppressedRequestHeaderName gets a reference to the given []string and assigns it to the SuppressedRequestHeaderName field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetSuppressedRequestHeaderName(v []string) {
	o.SuppressedRequestHeaderName = v
}

// GetLogResponseHeaders returns the LogResponseHeaders field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResponseHeaders() EnumlogPublisherLogResponseHeadersProp {
	if o == nil || isNil(o.LogResponseHeaders) {
		var ret EnumlogPublisherLogResponseHeadersProp
		return ret
	}
	return *o.LogResponseHeaders
}

// GetLogResponseHeadersOk returns a tuple with the LogResponseHeaders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResponseHeadersOk() (*EnumlogPublisherLogResponseHeadersProp, bool) {
	if o == nil || isNil(o.LogResponseHeaders) {
    return nil, false
	}
	return o.LogResponseHeaders, true
}

// HasLogResponseHeaders returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogResponseHeaders() bool {
	if o != nil && !isNil(o.LogResponseHeaders) {
		return true
	}

	return false
}

// SetLogResponseHeaders gets a reference to the given EnumlogPublisherLogResponseHeadersProp and assigns it to the LogResponseHeaders field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogResponseHeaders(v EnumlogPublisherLogResponseHeadersProp) {
	o.LogResponseHeaders = &v
}

// GetSuppressedResponseHeaderName returns the SuppressedResponseHeaderName field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedResponseHeaderName() []string {
	if o == nil || isNil(o.SuppressedResponseHeaderName) {
		var ret []string
		return ret
	}
	return o.SuppressedResponseHeaderName
}

// GetSuppressedResponseHeaderNameOk returns a tuple with the SuppressedResponseHeaderName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedResponseHeaderNameOk() ([]string, bool) {
	if o == nil || isNil(o.SuppressedResponseHeaderName) {
    return nil, false
	}
	return o.SuppressedResponseHeaderName, true
}

// HasSuppressedResponseHeaderName returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasSuppressedResponseHeaderName() bool {
	if o != nil && !isNil(o.SuppressedResponseHeaderName) {
		return true
	}

	return false
}

// SetSuppressedResponseHeaderName gets a reference to the given []string and assigns it to the SuppressedResponseHeaderName field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetSuppressedResponseHeaderName(v []string) {
	o.SuppressedResponseHeaderName = v
}

// GetLogRequestAuthorizationType returns the LogRequestAuthorizationType field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestAuthorizationType() bool {
	if o == nil || isNil(o.LogRequestAuthorizationType) {
		var ret bool
		return ret
	}
	return *o.LogRequestAuthorizationType
}

// GetLogRequestAuthorizationTypeOk returns a tuple with the LogRequestAuthorizationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestAuthorizationTypeOk() (*bool, bool) {
	if o == nil || isNil(o.LogRequestAuthorizationType) {
    return nil, false
	}
	return o.LogRequestAuthorizationType, true
}

// HasLogRequestAuthorizationType returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequestAuthorizationType() bool {
	if o != nil && !isNil(o.LogRequestAuthorizationType) {
		return true
	}

	return false
}

// SetLogRequestAuthorizationType gets a reference to the given bool and assigns it to the LogRequestAuthorizationType field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequestAuthorizationType(v bool) {
	o.LogRequestAuthorizationType = &v
}

// GetLogRequestCookieNames returns the LogRequestCookieNames field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestCookieNames() bool {
	if o == nil || isNil(o.LogRequestCookieNames) {
		var ret bool
		return ret
	}
	return *o.LogRequestCookieNames
}

// GetLogRequestCookieNamesOk returns a tuple with the LogRequestCookieNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestCookieNamesOk() (*bool, bool) {
	if o == nil || isNil(o.LogRequestCookieNames) {
    return nil, false
	}
	return o.LogRequestCookieNames, true
}

// HasLogRequestCookieNames returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequestCookieNames() bool {
	if o != nil && !isNil(o.LogRequestCookieNames) {
		return true
	}

	return false
}

// SetLogRequestCookieNames gets a reference to the given bool and assigns it to the LogRequestCookieNames field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequestCookieNames(v bool) {
	o.LogRequestCookieNames = &v
}

// GetLogResponseCookieNames returns the LogResponseCookieNames field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResponseCookieNames() bool {
	if o == nil || isNil(o.LogResponseCookieNames) {
		var ret bool
		return ret
	}
	return *o.LogResponseCookieNames
}

// GetLogResponseCookieNamesOk returns a tuple with the LogResponseCookieNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogResponseCookieNamesOk() (*bool, bool) {
	if o == nil || isNil(o.LogResponseCookieNames) {
    return nil, false
	}
	return o.LogResponseCookieNames, true
}

// HasLogResponseCookieNames returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogResponseCookieNames() bool {
	if o != nil && !isNil(o.LogResponseCookieNames) {
		return true
	}

	return false
}

// SetLogResponseCookieNames gets a reference to the given bool and assigns it to the LogResponseCookieNames field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogResponseCookieNames(v bool) {
	o.LogResponseCookieNames = &v
}

// GetLogRequestParameters returns the LogRequestParameters field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestParameters() EnumlogPublisherLogRequestParametersProp {
	if o == nil || isNil(o.LogRequestParameters) {
		var ret EnumlogPublisherLogRequestParametersProp
		return ret
	}
	return *o.LogRequestParameters
}

// GetLogRequestParametersOk returns a tuple with the LogRequestParameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestParametersOk() (*EnumlogPublisherLogRequestParametersProp, bool) {
	if o == nil || isNil(o.LogRequestParameters) {
    return nil, false
	}
	return o.LogRequestParameters, true
}

// HasLogRequestParameters returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequestParameters() bool {
	if o != nil && !isNil(o.LogRequestParameters) {
		return true
	}

	return false
}

// SetLogRequestParameters gets a reference to the given EnumlogPublisherLogRequestParametersProp and assigns it to the LogRequestParameters field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequestParameters(v EnumlogPublisherLogRequestParametersProp) {
	o.LogRequestParameters = &v
}

// GetSuppressedRequestParameterName returns the SuppressedRequestParameterName field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedRequestParameterName() []string {
	if o == nil || isNil(o.SuppressedRequestParameterName) {
		var ret []string
		return ret
	}
	return o.SuppressedRequestParameterName
}

// GetSuppressedRequestParameterNameOk returns a tuple with the SuppressedRequestParameterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetSuppressedRequestParameterNameOk() ([]string, bool) {
	if o == nil || isNil(o.SuppressedRequestParameterName) {
    return nil, false
	}
	return o.SuppressedRequestParameterName, true
}

// HasSuppressedRequestParameterName returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasSuppressedRequestParameterName() bool {
	if o != nil && !isNil(o.SuppressedRequestParameterName) {
		return true
	}

	return false
}

// SetSuppressedRequestParameterName gets a reference to the given []string and assigns it to the SuppressedRequestParameterName field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetSuppressedRequestParameterName(v []string) {
	o.SuppressedRequestParameterName = v
}

// GetLogRequestProtocol returns the LogRequestProtocol field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestProtocol() bool {
	if o == nil || isNil(o.LogRequestProtocol) {
		var ret bool
		return ret
	}
	return *o.LogRequestProtocol
}

// GetLogRequestProtocolOk returns a tuple with the LogRequestProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRequestProtocolOk() (*bool, bool) {
	if o == nil || isNil(o.LogRequestProtocol) {
    return nil, false
	}
	return o.LogRequestProtocol, true
}

// HasLogRequestProtocol returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRequestProtocol() bool {
	if o != nil && !isNil(o.LogRequestProtocol) {
		return true
	}

	return false
}

// SetLogRequestProtocol gets a reference to the given bool and assigns it to the LogRequestProtocol field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRequestProtocol(v bool) {
	o.LogRequestProtocol = &v
}

// GetLogRedirectURI returns the LogRedirectURI field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRedirectURI() bool {
	if o == nil || isNil(o.LogRedirectURI) {
		var ret bool
		return ret
	}
	return *o.LogRedirectURI
}

// GetLogRedirectURIOk returns a tuple with the LogRedirectURI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLogRedirectURIOk() (*bool, bool) {
	if o == nil || isNil(o.LogRedirectURI) {
    return nil, false
	}
	return o.LogRedirectURI, true
}

// HasLogRedirectURI returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLogRedirectURI() bool {
	if o != nil && !isNil(o.LogRedirectURI) {
		return true
	}

	return false
}

// SetLogRedirectURI gets a reference to the given bool and assigns it to the LogRedirectURI field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLogRedirectURI(v bool) {
	o.LogRedirectURI = &v
}

// GetWriteMultiLineMessages returns the WriteMultiLineMessages field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetWriteMultiLineMessages() bool {
	if o == nil || isNil(o.WriteMultiLineMessages) {
		var ret bool
		return ret
	}
	return *o.WriteMultiLineMessages
}

// GetWriteMultiLineMessagesOk returns a tuple with the WriteMultiLineMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetWriteMultiLineMessagesOk() (*bool, bool) {
	if o == nil || isNil(o.WriteMultiLineMessages) {
    return nil, false
	}
	return o.WriteMultiLineMessages, true
}

// HasWriteMultiLineMessages returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasWriteMultiLineMessages() bool {
	if o != nil && !isNil(o.WriteMultiLineMessages) {
		return true
	}

	return false
}

// SetWriteMultiLineMessages gets a reference to the given bool and assigns it to the WriteMultiLineMessages field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetWriteMultiLineMessages(v bool) {
	o.WriteMultiLineMessages = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetDescription(v string) {
	o.Description = &v
}

// GetLoggingErrorBehavior returns the LoggingErrorBehavior field value if set, zero value otherwise.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLoggingErrorBehavior() EnumlogPublisherLoggingErrorBehaviorProp {
	if o == nil || isNil(o.LoggingErrorBehavior) {
		var ret EnumlogPublisherLoggingErrorBehaviorProp
		return ret
	}
	return *o.LoggingErrorBehavior
}

// GetLoggingErrorBehaviorOk returns a tuple with the LoggingErrorBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) GetLoggingErrorBehaviorOk() (*EnumlogPublisherLoggingErrorBehaviorProp, bool) {
	if o == nil || isNil(o.LoggingErrorBehavior) {
    return nil, false
	}
	return o.LoggingErrorBehavior, true
}

// HasLoggingErrorBehavior returns a boolean if a field has been set.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) HasLoggingErrorBehavior() bool {
	if o != nil && !isNil(o.LoggingErrorBehavior) {
		return true
	}

	return false
}

// SetLoggingErrorBehavior gets a reference to the given EnumlogPublisherLoggingErrorBehaviorProp and assigns it to the LoggingErrorBehavior field.
func (o *ConsoleJsonHttpOperationLogPublisherResponse) SetLoggingErrorBehavior(v EnumlogPublisherLoggingErrorBehaviorProp) {
	o.LoggingErrorBehavior = &v
}

func (o ConsoleJsonHttpOperationLogPublisherResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.OutputLocation) {
		toSerialize["outputLocation"] = o.OutputLocation
	}
	if !isNil(o.LogRequests) {
		toSerialize["logRequests"] = o.LogRequests
	}
	if !isNil(o.LogResults) {
		toSerialize["logResults"] = o.LogResults
	}
	if !isNil(o.IncludeProductName) {
		toSerialize["includeProductName"] = o.IncludeProductName
	}
	if !isNil(o.IncludeInstanceName) {
		toSerialize["includeInstanceName"] = o.IncludeInstanceName
	}
	if !isNil(o.IncludeStartupID) {
		toSerialize["includeStartupID"] = o.IncludeStartupID
	}
	if !isNil(o.IncludeThreadID) {
		toSerialize["includeThreadID"] = o.IncludeThreadID
	}
	if !isNil(o.IncludeRequestDetailsInResultMessages) {
		toSerialize["includeRequestDetailsInResultMessages"] = o.IncludeRequestDetailsInResultMessages
	}
	if !isNil(o.LogRequestHeaders) {
		toSerialize["logRequestHeaders"] = o.LogRequestHeaders
	}
	if !isNil(o.SuppressedRequestHeaderName) {
		toSerialize["suppressedRequestHeaderName"] = o.SuppressedRequestHeaderName
	}
	if !isNil(o.LogResponseHeaders) {
		toSerialize["logResponseHeaders"] = o.LogResponseHeaders
	}
	if !isNil(o.SuppressedResponseHeaderName) {
		toSerialize["suppressedResponseHeaderName"] = o.SuppressedResponseHeaderName
	}
	if !isNil(o.LogRequestAuthorizationType) {
		toSerialize["logRequestAuthorizationType"] = o.LogRequestAuthorizationType
	}
	if !isNil(o.LogRequestCookieNames) {
		toSerialize["logRequestCookieNames"] = o.LogRequestCookieNames
	}
	if !isNil(o.LogResponseCookieNames) {
		toSerialize["logResponseCookieNames"] = o.LogResponseCookieNames
	}
	if !isNil(o.LogRequestParameters) {
		toSerialize["logRequestParameters"] = o.LogRequestParameters
	}
	if !isNil(o.SuppressedRequestParameterName) {
		toSerialize["suppressedRequestParameterName"] = o.SuppressedRequestParameterName
	}
	if !isNil(o.LogRequestProtocol) {
		toSerialize["logRequestProtocol"] = o.LogRequestProtocol
	}
	if !isNil(o.LogRedirectURI) {
		toSerialize["logRedirectURI"] = o.LogRedirectURI
	}
	if !isNil(o.WriteMultiLineMessages) {
		toSerialize["writeMultiLineMessages"] = o.WriteMultiLineMessages
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.LoggingErrorBehavior) {
		toSerialize["loggingErrorBehavior"] = o.LoggingErrorBehavior
	}
	return json.Marshal(toSerialize)
}

type NullableConsoleJsonHttpOperationLogPublisherResponse struct {
	value *ConsoleJsonHttpOperationLogPublisherResponse
	isSet bool
}

func (v NullableConsoleJsonHttpOperationLogPublisherResponse) Get() *ConsoleJsonHttpOperationLogPublisherResponse {
	return v.value
}

func (v *NullableConsoleJsonHttpOperationLogPublisherResponse) Set(val *ConsoleJsonHttpOperationLogPublisherResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConsoleJsonHttpOperationLogPublisherResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConsoleJsonHttpOperationLogPublisherResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConsoleJsonHttpOperationLogPublisherResponse(val *ConsoleJsonHttpOperationLogPublisherResponse) *NullableConsoleJsonHttpOperationLogPublisherResponse {
	return &NullableConsoleJsonHttpOperationLogPublisherResponse{value: val, isSet: true}
}

func (v NullableConsoleJsonHttpOperationLogPublisherResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConsoleJsonHttpOperationLogPublisherResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


