/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumgenericDelegatedAdminAttributeSchemaUrn the model 'EnumgenericDelegatedAdminAttributeSchemaUrn'
type EnumgenericDelegatedAdminAttributeSchemaUrn string

// List of Enumgeneric-delegated-admin-attributeSchemaUrn
const (
	ENUMGENERICDELEGATEDADMINATTRIBUTESCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0DELEGATED_ADMIN_ATTRIBUTEGENERIC EnumgenericDelegatedAdminAttributeSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic"
)

// All allowed values of EnumgenericDelegatedAdminAttributeSchemaUrn enum
var AllowedEnumgenericDelegatedAdminAttributeSchemaUrnEnumValues = []EnumgenericDelegatedAdminAttributeSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:delegated-admin-attribute:generic",
}

func (v *EnumgenericDelegatedAdminAttributeSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumgenericDelegatedAdminAttributeSchemaUrn(value)
	for _, existing := range AllowedEnumgenericDelegatedAdminAttributeSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumgenericDelegatedAdminAttributeSchemaUrn", value)
}

// NewEnumgenericDelegatedAdminAttributeSchemaUrnFromValue returns a pointer to a valid EnumgenericDelegatedAdminAttributeSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumgenericDelegatedAdminAttributeSchemaUrnFromValue(v string) (*EnumgenericDelegatedAdminAttributeSchemaUrn, error) {
	ev := EnumgenericDelegatedAdminAttributeSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumgenericDelegatedAdminAttributeSchemaUrn: valid values are %v", v, AllowedEnumgenericDelegatedAdminAttributeSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumgenericDelegatedAdminAttributeSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumgenericDelegatedAdminAttributeSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumgeneric-delegated-admin-attributeSchemaUrn value
func (v EnumgenericDelegatedAdminAttributeSchemaUrn) Ptr() *EnumgenericDelegatedAdminAttributeSchemaUrn {
	return &v
}

type NullableEnumgenericDelegatedAdminAttributeSchemaUrn struct {
	value *EnumgenericDelegatedAdminAttributeSchemaUrn
	isSet bool
}

func (v NullableEnumgenericDelegatedAdminAttributeSchemaUrn) Get() *EnumgenericDelegatedAdminAttributeSchemaUrn {
	return v.value
}

func (v *NullableEnumgenericDelegatedAdminAttributeSchemaUrn) Set(val *EnumgenericDelegatedAdminAttributeSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumgenericDelegatedAdminAttributeSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumgenericDelegatedAdminAttributeSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumgenericDelegatedAdminAttributeSchemaUrn(val *EnumgenericDelegatedAdminAttributeSchemaUrn) *NullableEnumgenericDelegatedAdminAttributeSchemaUrn {
	return &NullableEnumgenericDelegatedAdminAttributeSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumgenericDelegatedAdminAttributeSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumgenericDelegatedAdminAttributeSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
