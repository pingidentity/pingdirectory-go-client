/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FreeDiskSpaceLogRetentionPolicyShared struct for FreeDiskSpaceLogRetentionPolicyShared
type FreeDiskSpaceLogRetentionPolicyShared struct {
	Schemas []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn `json:"schemas"`
	// Specifies the minimum amount of free disk space that should be available on the file system on which the archived log files are stored.
	FreeDiskSpace string `json:"freeDiskSpace"`
	// A description for this Log Retention Policy
	Description *string `json:"description,omitempty"`
}

// NewFreeDiskSpaceLogRetentionPolicyShared instantiates a new FreeDiskSpaceLogRetentionPolicyShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFreeDiskSpaceLogRetentionPolicyShared(schemas []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn, freeDiskSpace string) *FreeDiskSpaceLogRetentionPolicyShared {
	this := FreeDiskSpaceLogRetentionPolicyShared{}
	this.Schemas = schemas
	this.FreeDiskSpace = freeDiskSpace
	return &this
}

// NewFreeDiskSpaceLogRetentionPolicySharedWithDefaults instantiates a new FreeDiskSpaceLogRetentionPolicyShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFreeDiskSpaceLogRetentionPolicySharedWithDefaults() *FreeDiskSpaceLogRetentionPolicyShared {
	this := FreeDiskSpaceLogRetentionPolicyShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetSchemas() []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn {
	if o == nil {
		var ret []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetSchemasOk() ([]EnumfreeDiskSpaceLogRetentionPolicySchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *FreeDiskSpaceLogRetentionPolicyShared) SetSchemas(v []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn) {
	o.Schemas = v
}

// GetFreeDiskSpace returns the FreeDiskSpace field value
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetFreeDiskSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FreeDiskSpace
}

// GetFreeDiskSpaceOk returns a tuple with the FreeDiskSpace field value
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetFreeDiskSpaceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FreeDiskSpace, true
}

// SetFreeDiskSpace sets field value
func (o *FreeDiskSpaceLogRetentionPolicyShared) SetFreeDiskSpace(v string) {
	o.FreeDiskSpace = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FreeDiskSpaceLogRetentionPolicyShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FreeDiskSpaceLogRetentionPolicyShared) SetDescription(v string) {
	o.Description = &v
}

func (o FreeDiskSpaceLogRetentionPolicyShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["freeDiskSpace"] = o.FreeDiskSpace
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableFreeDiskSpaceLogRetentionPolicyShared struct {
	value *FreeDiskSpaceLogRetentionPolicyShared
	isSet bool
}

func (v NullableFreeDiskSpaceLogRetentionPolicyShared) Get() *FreeDiskSpaceLogRetentionPolicyShared {
	return v.value
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyShared) Set(val *FreeDiskSpaceLogRetentionPolicyShared) {
	v.value = val
	v.isSet = true
}

func (v NullableFreeDiskSpaceLogRetentionPolicyShared) IsSet() bool {
	return v.isSet
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFreeDiskSpaceLogRetentionPolicyShared(val *FreeDiskSpaceLogRetentionPolicyShared) *NullableFreeDiskSpaceLogRetentionPolicyShared {
	return &NullableFreeDiskSpaceLogRetentionPolicyShared{value: val, isSet: true}
}

func (v NullableFreeDiskSpaceLogRetentionPolicyShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


