/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddServerGroupRequest struct for AddServerGroupRequest
type AddServerGroupRequest struct {
	// Name of the new Server Group
	GroupName string `json:"groupName"`
	Schemas []EnumserverGroupSchemaUrn `json:"schemas,omitempty"`
	// A server instance that is a member of this group.
	Member []string `json:"member,omitempty"`
}

// NewAddServerGroupRequest instantiates a new AddServerGroupRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddServerGroupRequest(groupName string) *AddServerGroupRequest {
	this := AddServerGroupRequest{}
	this.GroupName = groupName
	return &this
}

// NewAddServerGroupRequestWithDefaults instantiates a new AddServerGroupRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddServerGroupRequestWithDefaults() *AddServerGroupRequest {
	this := AddServerGroupRequest{}
	return &this
}

// GetGroupName returns the GroupName field value
func (o *AddServerGroupRequest) GetGroupName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupName
}

// GetGroupNameOk returns a tuple with the GroupName field value
// and a boolean to check if the value has been set.
func (o *AddServerGroupRequest) GetGroupNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GroupName, true
}

// SetGroupName sets field value
func (o *AddServerGroupRequest) SetGroupName(v string) {
	o.GroupName = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddServerGroupRequest) GetSchemas() []EnumserverGroupSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumserverGroupSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServerGroupRequest) GetSchemasOk() ([]EnumserverGroupSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddServerGroupRequest) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumserverGroupSchemaUrn and assigns it to the Schemas field.
func (o *AddServerGroupRequest) SetSchemas(v []EnumserverGroupSchemaUrn) {
	o.Schemas = v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *AddServerGroupRequest) GetMember() []string {
	if o == nil || isNil(o.Member) {
		var ret []string
		return ret
	}
	return o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddServerGroupRequest) GetMemberOk() ([]string, bool) {
	if o == nil || isNil(o.Member) {
    return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *AddServerGroupRequest) HasMember() bool {
	if o != nil && !isNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given []string and assigns it to the Member field.
func (o *AddServerGroupRequest) SetMember(v []string) {
	o.Member = v
}

func (o AddServerGroupRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["groupName"] = o.GroupName
	}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	return json.Marshal(toSerialize)
}

type NullableAddServerGroupRequest struct {
	value *AddServerGroupRequest
	isSet bool
}

func (v NullableAddServerGroupRequest) Get() *AddServerGroupRequest {
	return v.value
}

func (v *NullableAddServerGroupRequest) Set(val *AddServerGroupRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddServerGroupRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddServerGroupRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddServerGroupRequest(val *AddServerGroupRequest) *NullableAddServerGroupRequest {
	return &NullableAddServerGroupRequest{value: val, isSet: true}
}

func (v NullableAddServerGroupRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddServerGroupRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


