/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumrecurringTaskChainScheduledMonthProp The months of the year in which instances of this Recurring Task Chain may be scheduled to start.
type EnumrecurringTaskChainScheduledMonthProp string

// List of Enumrecurring-task-chain-scheduledMonthProp
const (
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_JANUARY   EnumrecurringTaskChainScheduledMonthProp = "january"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_FEBRUARY  EnumrecurringTaskChainScheduledMonthProp = "february"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_MARCH     EnumrecurringTaskChainScheduledMonthProp = "march"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_APRIL     EnumrecurringTaskChainScheduledMonthProp = "april"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_MAY       EnumrecurringTaskChainScheduledMonthProp = "may"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_JUNE      EnumrecurringTaskChainScheduledMonthProp = "june"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_JULY      EnumrecurringTaskChainScheduledMonthProp = "july"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_AUGUST    EnumrecurringTaskChainScheduledMonthProp = "august"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_SEPTEMBER EnumrecurringTaskChainScheduledMonthProp = "september"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_OCTOBER   EnumrecurringTaskChainScheduledMonthProp = "october"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_NOVEMBER  EnumrecurringTaskChainScheduledMonthProp = "november"
	ENUMRECURRINGTASKCHAINSCHEDULEDMONTHPROP_DECEMBER  EnumrecurringTaskChainScheduledMonthProp = "december"
)

// All allowed values of EnumrecurringTaskChainScheduledMonthProp enum
var AllowedEnumrecurringTaskChainScheduledMonthPropEnumValues = []EnumrecurringTaskChainScheduledMonthProp{
	"january",
	"february",
	"march",
	"april",
	"may",
	"june",
	"july",
	"august",
	"september",
	"october",
	"november",
	"december",
}

func (v *EnumrecurringTaskChainScheduledMonthProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumrecurringTaskChainScheduledMonthProp(value)
	for _, existing := range AllowedEnumrecurringTaskChainScheduledMonthPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumrecurringTaskChainScheduledMonthProp", value)
}

// NewEnumrecurringTaskChainScheduledMonthPropFromValue returns a pointer to a valid EnumrecurringTaskChainScheduledMonthProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumrecurringTaskChainScheduledMonthPropFromValue(v string) (*EnumrecurringTaskChainScheduledMonthProp, error) {
	ev := EnumrecurringTaskChainScheduledMonthProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumrecurringTaskChainScheduledMonthProp: valid values are %v", v, AllowedEnumrecurringTaskChainScheduledMonthPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumrecurringTaskChainScheduledMonthProp) IsValid() bool {
	for _, existing := range AllowedEnumrecurringTaskChainScheduledMonthPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumrecurring-task-chain-scheduledMonthProp value
func (v EnumrecurringTaskChainScheduledMonthProp) Ptr() *EnumrecurringTaskChainScheduledMonthProp {
	return &v
}

type NullableEnumrecurringTaskChainScheduledMonthProp struct {
	value *EnumrecurringTaskChainScheduledMonthProp
	isSet bool
}

func (v NullableEnumrecurringTaskChainScheduledMonthProp) Get() *EnumrecurringTaskChainScheduledMonthProp {
	return v.value
}

func (v *NullableEnumrecurringTaskChainScheduledMonthProp) Set(val *EnumrecurringTaskChainScheduledMonthProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumrecurringTaskChainScheduledMonthProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumrecurringTaskChainScheduledMonthProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumrecurringTaskChainScheduledMonthProp(val *EnumrecurringTaskChainScheduledMonthProp) *NullableEnumrecurringTaskChainScheduledMonthProp {
	return &NullableEnumrecurringTaskChainScheduledMonthProp{value: val, isSet: true}
}

func (v NullableEnumrecurringTaskChainScheduledMonthProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumrecurringTaskChainScheduledMonthProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
