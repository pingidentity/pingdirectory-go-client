/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// VaultExternalServerResponse struct for VaultExternalServerResponse
type VaultExternalServerResponse struct {
	// Name of the External Server
	Id string `json:"id"`
	Schemas []EnumvaultExternalServerSchemaUrn `json:"schemas"`
	VaultServerBaseURI []string `json:"vaultServerBaseURI"`
	// The mechanism used to authenticate to the Vault server.
	VaultAuthenticationMethod string `json:"vaultAuthenticationMethod"`
	// The path to a file containing the information needed to trust the certificate presented by the Vault servers.
	TrustStoreFile *string `json:"trustStoreFile,omitempty"`
	// The passphrase needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
	TrustStorePin *string `json:"trustStorePin,omitempty"`
	// The store type for the specified trust store file. The value should likely be one of \"JKS\", \"PKCS12\", or \"BCFKS\".
	TrustStoreType *string `json:"trustStoreType,omitempty"`
	// A description for this External Server
	Description *string `json:"description,omitempty"`
}

// NewVaultExternalServerResponse instantiates a new VaultExternalServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultExternalServerResponse(id string, schemas []EnumvaultExternalServerSchemaUrn, vaultServerBaseURI []string, vaultAuthenticationMethod string) *VaultExternalServerResponse {
	this := VaultExternalServerResponse{}
	this.Id = id
	this.Schemas = schemas
	this.VaultServerBaseURI = vaultServerBaseURI
	this.VaultAuthenticationMethod = vaultAuthenticationMethod
	return &this
}

// NewVaultExternalServerResponseWithDefaults instantiates a new VaultExternalServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultExternalServerResponseWithDefaults() *VaultExternalServerResponse {
	this := VaultExternalServerResponse{}
	return &this
}

// GetId returns the Id field value
func (o *VaultExternalServerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VaultExternalServerResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *VaultExternalServerResponse) GetSchemas() []EnumvaultExternalServerSchemaUrn {
	if o == nil {
		var ret []EnumvaultExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetSchemasOk() ([]EnumvaultExternalServerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *VaultExternalServerResponse) SetSchemas(v []EnumvaultExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetVaultServerBaseURI returns the VaultServerBaseURI field value
func (o *VaultExternalServerResponse) GetVaultServerBaseURI() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VaultServerBaseURI
}

// GetVaultServerBaseURIOk returns a tuple with the VaultServerBaseURI field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetVaultServerBaseURIOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.VaultServerBaseURI, true
}

// SetVaultServerBaseURI sets field value
func (o *VaultExternalServerResponse) SetVaultServerBaseURI(v []string) {
	o.VaultServerBaseURI = v
}

// GetVaultAuthenticationMethod returns the VaultAuthenticationMethod field value
func (o *VaultExternalServerResponse) GetVaultAuthenticationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultAuthenticationMethod
}

// GetVaultAuthenticationMethodOk returns a tuple with the VaultAuthenticationMethod field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetVaultAuthenticationMethodOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.VaultAuthenticationMethod, true
}

// SetVaultAuthenticationMethod sets field value
func (o *VaultExternalServerResponse) SetVaultAuthenticationMethod(v string) {
	o.VaultAuthenticationMethod = v
}

// GetTrustStoreFile returns the TrustStoreFile field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStoreFile() string {
	if o == nil || isNil(o.TrustStoreFile) {
		var ret string
		return ret
	}
	return *o.TrustStoreFile
}

// GetTrustStoreFileOk returns a tuple with the TrustStoreFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStoreFileOk() (*string, bool) {
	if o == nil || isNil(o.TrustStoreFile) {
    return nil, false
	}
	return o.TrustStoreFile, true
}

// HasTrustStoreFile returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStoreFile() bool {
	if o != nil && !isNil(o.TrustStoreFile) {
		return true
	}

	return false
}

// SetTrustStoreFile gets a reference to the given string and assigns it to the TrustStoreFile field.
func (o *VaultExternalServerResponse) SetTrustStoreFile(v string) {
	o.TrustStoreFile = &v
}

// GetTrustStorePin returns the TrustStorePin field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStorePin() string {
	if o == nil || isNil(o.TrustStorePin) {
		var ret string
		return ret
	}
	return *o.TrustStorePin
}

// GetTrustStorePinOk returns a tuple with the TrustStorePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStorePinOk() (*string, bool) {
	if o == nil || isNil(o.TrustStorePin) {
    return nil, false
	}
	return o.TrustStorePin, true
}

// HasTrustStorePin returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStorePin() bool {
	if o != nil && !isNil(o.TrustStorePin) {
		return true
	}

	return false
}

// SetTrustStorePin gets a reference to the given string and assigns it to the TrustStorePin field.
func (o *VaultExternalServerResponse) SetTrustStorePin(v string) {
	o.TrustStorePin = &v
}

// GetTrustStoreType returns the TrustStoreType field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStoreType() string {
	if o == nil || isNil(o.TrustStoreType) {
		var ret string
		return ret
	}
	return *o.TrustStoreType
}

// GetTrustStoreTypeOk returns a tuple with the TrustStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStoreTypeOk() (*string, bool) {
	if o == nil || isNil(o.TrustStoreType) {
    return nil, false
	}
	return o.TrustStoreType, true
}

// HasTrustStoreType returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStoreType() bool {
	if o != nil && !isNil(o.TrustStoreType) {
		return true
	}

	return false
}

// SetTrustStoreType gets a reference to the given string and assigns it to the TrustStoreType field.
func (o *VaultExternalServerResponse) SetTrustStoreType(v string) {
	o.TrustStoreType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VaultExternalServerResponse) SetDescription(v string) {
	o.Description = &v
}

func (o VaultExternalServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["vaultServerBaseURI"] = o.VaultServerBaseURI
	}
	if true {
		toSerialize["vaultAuthenticationMethod"] = o.VaultAuthenticationMethod
	}
	if !isNil(o.TrustStoreFile) {
		toSerialize["trustStoreFile"] = o.TrustStoreFile
	}
	if !isNil(o.TrustStorePin) {
		toSerialize["trustStorePin"] = o.TrustStorePin
	}
	if !isNil(o.TrustStoreType) {
		toSerialize["trustStoreType"] = o.TrustStoreType
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableVaultExternalServerResponse struct {
	value *VaultExternalServerResponse
	isSet bool
}

func (v NullableVaultExternalServerResponse) Get() *VaultExternalServerResponse {
	return v.value
}

func (v *NullableVaultExternalServerResponse) Set(val *VaultExternalServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultExternalServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultExternalServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultExternalServerResponse(val *VaultExternalServerResponse) *NullableVaultExternalServerResponse {
	return &NullableVaultExternalServerResponse{value: val, isSet: true}
}

func (v NullableVaultExternalServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultExternalServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


