/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumresultCriteriaAssuranceTimeoutCriteriaProp The criteria to use when performing matching based on the assurance timeout.
type EnumresultCriteriaAssuranceTimeoutCriteriaProp string

// List of Enumresult-criteria-assuranceTimeoutCriteriaProp
const (
	ANY EnumresultCriteriaAssuranceTimeoutCriteriaProp = "any"
	LESS_THAN_OR_EQUAL_TO EnumresultCriteriaAssuranceTimeoutCriteriaProp = "less-than-or-equal-to"
	GREATER_THAN_OR_EQUAL_TO EnumresultCriteriaAssuranceTimeoutCriteriaProp = "greater-than-or-equal-to"
)

// All allowed values of EnumresultCriteriaAssuranceTimeoutCriteriaProp enum
var AllowedEnumresultCriteriaAssuranceTimeoutCriteriaPropEnumValues = []EnumresultCriteriaAssuranceTimeoutCriteriaProp{
	"any",
	"less-than-or-equal-to",
	"greater-than-or-equal-to",
}

func (v *EnumresultCriteriaAssuranceTimeoutCriteriaProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumresultCriteriaAssuranceTimeoutCriteriaProp(value)
	for _, existing := range AllowedEnumresultCriteriaAssuranceTimeoutCriteriaPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumresultCriteriaAssuranceTimeoutCriteriaProp", value)
}

// NewEnumresultCriteriaAssuranceTimeoutCriteriaPropFromValue returns a pointer to a valid EnumresultCriteriaAssuranceTimeoutCriteriaProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumresultCriteriaAssuranceTimeoutCriteriaPropFromValue(v string) (*EnumresultCriteriaAssuranceTimeoutCriteriaProp, error) {
	ev := EnumresultCriteriaAssuranceTimeoutCriteriaProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumresultCriteriaAssuranceTimeoutCriteriaProp: valid values are %v", v, AllowedEnumresultCriteriaAssuranceTimeoutCriteriaPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumresultCriteriaAssuranceTimeoutCriteriaProp) IsValid() bool {
	for _, existing := range AllowedEnumresultCriteriaAssuranceTimeoutCriteriaPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumresult-criteria-assuranceTimeoutCriteriaProp value
func (v EnumresultCriteriaAssuranceTimeoutCriteriaProp) Ptr() *EnumresultCriteriaAssuranceTimeoutCriteriaProp {
	return &v
}

type NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp struct {
	value *EnumresultCriteriaAssuranceTimeoutCriteriaProp
	isSet bool
}

func (v NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) Get() *EnumresultCriteriaAssuranceTimeoutCriteriaProp {
	return v.value
}

func (v *NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) Set(val *EnumresultCriteriaAssuranceTimeoutCriteriaProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumresultCriteriaAssuranceTimeoutCriteriaProp(val *EnumresultCriteriaAssuranceTimeoutCriteriaProp) *NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp {
	return &NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp{value: val, isSet: true}
}

func (v NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumresultCriteriaAssuranceTimeoutCriteriaProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

