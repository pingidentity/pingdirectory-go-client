/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumpasswordPolicyBindPasswordValidationFailureActionProp Specifies the behavior that the server should exhibit if a bind password fails validation by one or more of the configured bind password validators.
type EnumpasswordPolicyBindPasswordValidationFailureActionProp string

// List of Enumpassword-policy-bindPasswordValidationFailureActionProp
const (
	ENUMPASSWORDPOLICYBINDPASSWORDVALIDATIONFAILUREACTIONPROP_REJECT_BIND                          EnumpasswordPolicyBindPasswordValidationFailureActionProp = "reject-bind"
	ENUMPASSWORDPOLICYBINDPASSWORDVALIDATIONFAILUREACTIONPROP_FORCE_PASSWORD_CHANGE                EnumpasswordPolicyBindPasswordValidationFailureActionProp = "force-password-change"
	ENUMPASSWORDPOLICYBINDPASSWORDVALIDATIONFAILUREACTIONPROP_GENERATE_ACCOUNT_STATUS_NOTIFICATION EnumpasswordPolicyBindPasswordValidationFailureActionProp = "generate-account-status-notification"
)

// All allowed values of EnumpasswordPolicyBindPasswordValidationFailureActionProp enum
var AllowedEnumpasswordPolicyBindPasswordValidationFailureActionPropEnumValues = []EnumpasswordPolicyBindPasswordValidationFailureActionProp{
	"reject-bind",
	"force-password-change",
	"generate-account-status-notification",
}

func (v *EnumpasswordPolicyBindPasswordValidationFailureActionProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpasswordPolicyBindPasswordValidationFailureActionProp(value)
	for _, existing := range AllowedEnumpasswordPolicyBindPasswordValidationFailureActionPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpasswordPolicyBindPasswordValidationFailureActionProp", value)
}

// NewEnumpasswordPolicyBindPasswordValidationFailureActionPropFromValue returns a pointer to a valid EnumpasswordPolicyBindPasswordValidationFailureActionProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpasswordPolicyBindPasswordValidationFailureActionPropFromValue(v string) (*EnumpasswordPolicyBindPasswordValidationFailureActionProp, error) {
	ev := EnumpasswordPolicyBindPasswordValidationFailureActionProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpasswordPolicyBindPasswordValidationFailureActionProp: valid values are %v", v, AllowedEnumpasswordPolicyBindPasswordValidationFailureActionPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpasswordPolicyBindPasswordValidationFailureActionProp) IsValid() bool {
	for _, existing := range AllowedEnumpasswordPolicyBindPasswordValidationFailureActionPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumpassword-policy-bindPasswordValidationFailureActionProp value
func (v EnumpasswordPolicyBindPasswordValidationFailureActionProp) Ptr() *EnumpasswordPolicyBindPasswordValidationFailureActionProp {
	return &v
}

type NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp struct {
	value *EnumpasswordPolicyBindPasswordValidationFailureActionProp
	isSet bool
}

func (v NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) Get() *EnumpasswordPolicyBindPasswordValidationFailureActionProp {
	return v.value
}

func (v *NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) Set(val *EnumpasswordPolicyBindPasswordValidationFailureActionProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpasswordPolicyBindPasswordValidationFailureActionProp(val *EnumpasswordPolicyBindPasswordValidationFailureActionProp) *NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp {
	return &NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp{value: val, isSet: true}
}

func (v NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpasswordPolicyBindPasswordValidationFailureActionProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
