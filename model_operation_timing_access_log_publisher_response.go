/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// OperationTimingAccessLogPublisherResponse struct for OperationTimingAccessLogPublisherResponse
type OperationTimingAccessLogPublisherResponse struct {
	// Name of the Log Publisher
	Id string `json:"id"`
	Schemas []EnumoperationTimingAccessLogPublisherSchemaUrn `json:"schemas"`
	// The file name to use for the log files generated by the Operation Timing Access Log Publisher. The path to the file can be specified either as relative to the server root or as an absolute path.
	LogFile string `json:"logFile"`
	// The UNIX permissions of the log files created by this Operation Timing Access Log Publisher.
	LogFilePermissions string `json:"logFilePermissions"`
	// The rotation policy to use for the Operation Timing Access Log Publisher .
	RotationPolicy []string `json:"rotationPolicy"`
	// A listener that should be notified whenever a log file is rotated out of service.
	RotationListener []string `json:"rotationListener,omitempty"`
	// The retention policy to use for the Operation Timing Access Log Publisher .
	RetentionPolicy []string `json:"retentionPolicy"`
	CompressionMechanism *EnumlogPublisherCompressionMechanismProp `json:"compressionMechanism,omitempty"`
	// Indicates whether the log should be cryptographically signed so that the log content cannot be altered in an undetectable manner.
	SignLog *bool `json:"signLog,omitempty"`
	// Indicates whether log files should be encrypted so that their content is not available to unauthorized users.
	EncryptLog *bool `json:"encryptLog,omitempty"`
	// Specifies the ID of the encryption settings definition that should be used to encrypt the data. If this is not provided, the server's preferred encryption settings definition will be used. The \"encryption-settings list\" command can be used to obtain a list of the encryption settings definitions available in the server.
	EncryptionSettingsDefinitionID *string `json:"encryptionSettingsDefinitionID,omitempty"`
	// Specifies whether to append to existing log files.
	Append *bool `json:"append,omitempty"`
	// Indicates whether log messages should include the product name for the Directory Server.
	IncludeProductName *bool `json:"includeProductName,omitempty"`
	// Indicates whether log messages should include the instance name for the Directory Server.
	IncludeInstanceName *bool `json:"includeInstanceName,omitempty"`
	// Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
	IncludeStartupID *bool `json:"includeStartupID,omitempty"`
	// Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
	IncludeThreadID *bool `json:"includeThreadID,omitempty"`
	// Indicates whether log messages for operation requests should include the IP address of the client that requested the operation.
	IncludeRequesterIPAddress *bool `json:"includeRequesterIPAddress,omitempty"`
	// Indicates whether log messages should include the DN of the authenticated user for the client connection on which the operation was requested.
	IncludeRequesterDN *bool `json:"includeRequesterDN,omitempty"`
	// The minimum processing time (i.e., \"etime\") for operations that should be logged by this Operation Timing Access Log Publisher
	MinIncludedOperationProcessingTime *string `json:"minIncludedOperationProcessingTime,omitempty"`
	// The minimum length of time in nanoseconds that an operation phase should take before it is included in a log message.
	MinIncludedPhaseTimeNanos *int32 `json:"minIncludedPhaseTimeNanos,omitempty"`
	// Indicates whether the Operation Timing Access Log Publisher will publish records asynchronously.
	Asynchronous bool `json:"asynchronous"`
	// Specifies whether to flush the writer after every log record.
	AutoFlush *bool `json:"autoFlush,omitempty"`
	// Specifies the log file buffer size.
	BufferSize *string `json:"bufferSize,omitempty"`
	// Specifies the maximum number of characters that may be included in any string in a log message before that string is truncated and replaced with a placeholder indicating the number of characters that were omitted. This can help prevent extremely long log messages from being written.
	MaxStringLength *int32 `json:"maxStringLength,omitempty"`
	// The maximum number of log records that can be stored in the asynchronous queue.
	QueueSize *int32 `json:"queueSize,omitempty"`
	// Specifies the interval at which to check whether the log files need to be rotated.
	TimeInterval *string `json:"timeInterval,omitempty"`
	// Indicates whether to log information about the result of any security negotiation (e.g., SSL handshake) processing that has been performed.
	LogSecurityNegotiation *bool `json:"logSecurityNegotiation,omitempty"`
	// Indicates whether to log information about intermediate responses sent to the client.
	LogIntermediateResponses *bool `json:"logIntermediateResponses,omitempty"`
	// Indicates whether internal operations (for example, operations that are initiated by plugins) should be logged along with the operations that are requested by users.
	SuppressInternalOperations *bool `json:"suppressInternalOperations,omitempty"`
	// Indicates whether access messages that are generated by replication operations should be suppressed.
	SuppressReplicationOperations *bool `json:"suppressReplicationOperations,omitempty"`
	// Specifies a set of connection criteria that must match the associated client connection in order for a connect, disconnect, request, or result message to be logged.
	ConnectionCriteria *string `json:"connectionCriteria,omitempty"`
	// Specifies a set of request criteria that must match the associated operation request in order for a request or result to be logged by this Access Log Publisher.
	RequestCriteria *string `json:"requestCriteria,omitempty"`
	// Specifies a set of result criteria that must match the associated operation result in order for that result to be logged by this Access Log Publisher.
	ResultCriteria *string `json:"resultCriteria,omitempty"`
	// A description for this Log Publisher
	Description *string `json:"description,omitempty"`
	// Indicates whether the Log Publisher is enabled for use.
	Enabled bool `json:"enabled"`
	LoggingErrorBehavior *EnumlogPublisherLoggingErrorBehaviorProp `json:"loggingErrorBehavior,omitempty"`
	Meta *MetaMeta `json:"meta,omitempty"`
}

// NewOperationTimingAccessLogPublisherResponse instantiates a new OperationTimingAccessLogPublisherResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOperationTimingAccessLogPublisherResponse(id string, schemas []EnumoperationTimingAccessLogPublisherSchemaUrn, logFile string, logFilePermissions string, rotationPolicy []string, retentionPolicy []string, asynchronous bool, enabled bool) *OperationTimingAccessLogPublisherResponse {
	this := OperationTimingAccessLogPublisherResponse{}
	this.Id = id
	this.Schemas = schemas
	this.LogFile = logFile
	this.LogFilePermissions = logFilePermissions
	this.RotationPolicy = rotationPolicy
	this.RetentionPolicy = retentionPolicy
	this.Asynchronous = asynchronous
	this.Enabled = enabled
	return &this
}

// NewOperationTimingAccessLogPublisherResponseWithDefaults instantiates a new OperationTimingAccessLogPublisherResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOperationTimingAccessLogPublisherResponseWithDefaults() *OperationTimingAccessLogPublisherResponse {
	this := OperationTimingAccessLogPublisherResponse{}
	return &this
}

// GetId returns the Id field value
func (o *OperationTimingAccessLogPublisherResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *OperationTimingAccessLogPublisherResponse) GetSchemas() []EnumoperationTimingAccessLogPublisherSchemaUrn {
	if o == nil {
		var ret []EnumoperationTimingAccessLogPublisherSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetSchemasOk() ([]EnumoperationTimingAccessLogPublisherSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetSchemas(v []EnumoperationTimingAccessLogPublisherSchemaUrn) {
	o.Schemas = v
}

// GetLogFile returns the LogFile field value
func (o *OperationTimingAccessLogPublisherResponse) GetLogFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogFile
}

// GetLogFileOk returns a tuple with the LogFile field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetLogFileOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LogFile, true
}

// SetLogFile sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetLogFile(v string) {
	o.LogFile = v
}

// GetLogFilePermissions returns the LogFilePermissions field value
func (o *OperationTimingAccessLogPublisherResponse) GetLogFilePermissions() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogFilePermissions
}

// GetLogFilePermissionsOk returns a tuple with the LogFilePermissions field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetLogFilePermissionsOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.LogFilePermissions, true
}

// SetLogFilePermissions sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetLogFilePermissions(v string) {
	o.LogFilePermissions = v
}

// GetRotationPolicy returns the RotationPolicy field value
func (o *OperationTimingAccessLogPublisherResponse) GetRotationPolicy() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RotationPolicy
}

// GetRotationPolicyOk returns a tuple with the RotationPolicy field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetRotationPolicyOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RotationPolicy, true
}

// SetRotationPolicy sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetRotationPolicy(v []string) {
	o.RotationPolicy = v
}

// GetRotationListener returns the RotationListener field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetRotationListener() []string {
	if o == nil || isNil(o.RotationListener) {
		var ret []string
		return ret
	}
	return o.RotationListener
}

// GetRotationListenerOk returns a tuple with the RotationListener field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetRotationListenerOk() ([]string, bool) {
	if o == nil || isNil(o.RotationListener) {
    return nil, false
	}
	return o.RotationListener, true
}

// HasRotationListener returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasRotationListener() bool {
	if o != nil && !isNil(o.RotationListener) {
		return true
	}

	return false
}

// SetRotationListener gets a reference to the given []string and assigns it to the RotationListener field.
func (o *OperationTimingAccessLogPublisherResponse) SetRotationListener(v []string) {
	o.RotationListener = v
}

// GetRetentionPolicy returns the RetentionPolicy field value
func (o *OperationTimingAccessLogPublisherResponse) GetRetentionPolicy() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RetentionPolicy
}

// GetRetentionPolicyOk returns a tuple with the RetentionPolicy field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetRetentionPolicyOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.RetentionPolicy, true
}

// SetRetentionPolicy sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetRetentionPolicy(v []string) {
	o.RetentionPolicy = v
}

// GetCompressionMechanism returns the CompressionMechanism field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetCompressionMechanism() EnumlogPublisherCompressionMechanismProp {
	if o == nil || isNil(o.CompressionMechanism) {
		var ret EnumlogPublisherCompressionMechanismProp
		return ret
	}
	return *o.CompressionMechanism
}

// GetCompressionMechanismOk returns a tuple with the CompressionMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetCompressionMechanismOk() (*EnumlogPublisherCompressionMechanismProp, bool) {
	if o == nil || isNil(o.CompressionMechanism) {
    return nil, false
	}
	return o.CompressionMechanism, true
}

// HasCompressionMechanism returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasCompressionMechanism() bool {
	if o != nil && !isNil(o.CompressionMechanism) {
		return true
	}

	return false
}

// SetCompressionMechanism gets a reference to the given EnumlogPublisherCompressionMechanismProp and assigns it to the CompressionMechanism field.
func (o *OperationTimingAccessLogPublisherResponse) SetCompressionMechanism(v EnumlogPublisherCompressionMechanismProp) {
	o.CompressionMechanism = &v
}

// GetSignLog returns the SignLog field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetSignLog() bool {
	if o == nil || isNil(o.SignLog) {
		var ret bool
		return ret
	}
	return *o.SignLog
}

// GetSignLogOk returns a tuple with the SignLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetSignLogOk() (*bool, bool) {
	if o == nil || isNil(o.SignLog) {
    return nil, false
	}
	return o.SignLog, true
}

// HasSignLog returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasSignLog() bool {
	if o != nil && !isNil(o.SignLog) {
		return true
	}

	return false
}

// SetSignLog gets a reference to the given bool and assigns it to the SignLog field.
func (o *OperationTimingAccessLogPublisherResponse) SetSignLog(v bool) {
	o.SignLog = &v
}

// GetEncryptLog returns the EncryptLog field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetEncryptLog() bool {
	if o == nil || isNil(o.EncryptLog) {
		var ret bool
		return ret
	}
	return *o.EncryptLog
}

// GetEncryptLogOk returns a tuple with the EncryptLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetEncryptLogOk() (*bool, bool) {
	if o == nil || isNil(o.EncryptLog) {
    return nil, false
	}
	return o.EncryptLog, true
}

// HasEncryptLog returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasEncryptLog() bool {
	if o != nil && !isNil(o.EncryptLog) {
		return true
	}

	return false
}

// SetEncryptLog gets a reference to the given bool and assigns it to the EncryptLog field.
func (o *OperationTimingAccessLogPublisherResponse) SetEncryptLog(v bool) {
	o.EncryptLog = &v
}

// GetEncryptionSettingsDefinitionID returns the EncryptionSettingsDefinitionID field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetEncryptionSettingsDefinitionID() string {
	if o == nil || isNil(o.EncryptionSettingsDefinitionID) {
		var ret string
		return ret
	}
	return *o.EncryptionSettingsDefinitionID
}

// GetEncryptionSettingsDefinitionIDOk returns a tuple with the EncryptionSettingsDefinitionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetEncryptionSettingsDefinitionIDOk() (*string, bool) {
	if o == nil || isNil(o.EncryptionSettingsDefinitionID) {
    return nil, false
	}
	return o.EncryptionSettingsDefinitionID, true
}

// HasEncryptionSettingsDefinitionID returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasEncryptionSettingsDefinitionID() bool {
	if o != nil && !isNil(o.EncryptionSettingsDefinitionID) {
		return true
	}

	return false
}

// SetEncryptionSettingsDefinitionID gets a reference to the given string and assigns it to the EncryptionSettingsDefinitionID field.
func (o *OperationTimingAccessLogPublisherResponse) SetEncryptionSettingsDefinitionID(v string) {
	o.EncryptionSettingsDefinitionID = &v
}

// GetAppend returns the Append field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetAppend() bool {
	if o == nil || isNil(o.Append) {
		var ret bool
		return ret
	}
	return *o.Append
}

// GetAppendOk returns a tuple with the Append field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetAppendOk() (*bool, bool) {
	if o == nil || isNil(o.Append) {
    return nil, false
	}
	return o.Append, true
}

// HasAppend returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasAppend() bool {
	if o != nil && !isNil(o.Append) {
		return true
	}

	return false
}

// SetAppend gets a reference to the given bool and assigns it to the Append field.
func (o *OperationTimingAccessLogPublisherResponse) SetAppend(v bool) {
	o.Append = &v
}

// GetIncludeProductName returns the IncludeProductName field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeProductName() bool {
	if o == nil || isNil(o.IncludeProductName) {
		var ret bool
		return ret
	}
	return *o.IncludeProductName
}

// GetIncludeProductNameOk returns a tuple with the IncludeProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeProductNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeProductName) {
    return nil, false
	}
	return o.IncludeProductName, true
}

// HasIncludeProductName returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeProductName() bool {
	if o != nil && !isNil(o.IncludeProductName) {
		return true
	}

	return false
}

// SetIncludeProductName gets a reference to the given bool and assigns it to the IncludeProductName field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeProductName(v bool) {
	o.IncludeProductName = &v
}

// GetIncludeInstanceName returns the IncludeInstanceName field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeInstanceName() bool {
	if o == nil || isNil(o.IncludeInstanceName) {
		var ret bool
		return ret
	}
	return *o.IncludeInstanceName
}

// GetIncludeInstanceNameOk returns a tuple with the IncludeInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeInstanceNameOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeInstanceName) {
    return nil, false
	}
	return o.IncludeInstanceName, true
}

// HasIncludeInstanceName returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeInstanceName() bool {
	if o != nil && !isNil(o.IncludeInstanceName) {
		return true
	}

	return false
}

// SetIncludeInstanceName gets a reference to the given bool and assigns it to the IncludeInstanceName field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeInstanceName(v bool) {
	o.IncludeInstanceName = &v
}

// GetIncludeStartupID returns the IncludeStartupID field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeStartupID() bool {
	if o == nil || isNil(o.IncludeStartupID) {
		var ret bool
		return ret
	}
	return *o.IncludeStartupID
}

// GetIncludeStartupIDOk returns a tuple with the IncludeStartupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeStartupIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeStartupID) {
    return nil, false
	}
	return o.IncludeStartupID, true
}

// HasIncludeStartupID returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeStartupID() bool {
	if o != nil && !isNil(o.IncludeStartupID) {
		return true
	}

	return false
}

// SetIncludeStartupID gets a reference to the given bool and assigns it to the IncludeStartupID field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeStartupID(v bool) {
	o.IncludeStartupID = &v
}

// GetIncludeThreadID returns the IncludeThreadID field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeThreadID() bool {
	if o == nil || isNil(o.IncludeThreadID) {
		var ret bool
		return ret
	}
	return *o.IncludeThreadID
}

// GetIncludeThreadIDOk returns a tuple with the IncludeThreadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeThreadIDOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeThreadID) {
    return nil, false
	}
	return o.IncludeThreadID, true
}

// HasIncludeThreadID returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeThreadID() bool {
	if o != nil && !isNil(o.IncludeThreadID) {
		return true
	}

	return false
}

// SetIncludeThreadID gets a reference to the given bool and assigns it to the IncludeThreadID field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeThreadID(v bool) {
	o.IncludeThreadID = &v
}

// GetIncludeRequesterIPAddress returns the IncludeRequesterIPAddress field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeRequesterIPAddress() bool {
	if o == nil || isNil(o.IncludeRequesterIPAddress) {
		var ret bool
		return ret
	}
	return *o.IncludeRequesterIPAddress
}

// GetIncludeRequesterIPAddressOk returns a tuple with the IncludeRequesterIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeRequesterIPAddressOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequesterIPAddress) {
    return nil, false
	}
	return o.IncludeRequesterIPAddress, true
}

// HasIncludeRequesterIPAddress returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeRequesterIPAddress() bool {
	if o != nil && !isNil(o.IncludeRequesterIPAddress) {
		return true
	}

	return false
}

// SetIncludeRequesterIPAddress gets a reference to the given bool and assigns it to the IncludeRequesterIPAddress field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeRequesterIPAddress(v bool) {
	o.IncludeRequesterIPAddress = &v
}

// GetIncludeRequesterDN returns the IncludeRequesterDN field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeRequesterDN() bool {
	if o == nil || isNil(o.IncludeRequesterDN) {
		var ret bool
		return ret
	}
	return *o.IncludeRequesterDN
}

// GetIncludeRequesterDNOk returns a tuple with the IncludeRequesterDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetIncludeRequesterDNOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeRequesterDN) {
    return nil, false
	}
	return o.IncludeRequesterDN, true
}

// HasIncludeRequesterDN returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasIncludeRequesterDN() bool {
	if o != nil && !isNil(o.IncludeRequesterDN) {
		return true
	}

	return false
}

// SetIncludeRequesterDN gets a reference to the given bool and assigns it to the IncludeRequesterDN field.
func (o *OperationTimingAccessLogPublisherResponse) SetIncludeRequesterDN(v bool) {
	o.IncludeRequesterDN = &v
}

// GetMinIncludedOperationProcessingTime returns the MinIncludedOperationProcessingTime field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetMinIncludedOperationProcessingTime() string {
	if o == nil || isNil(o.MinIncludedOperationProcessingTime) {
		var ret string
		return ret
	}
	return *o.MinIncludedOperationProcessingTime
}

// GetMinIncludedOperationProcessingTimeOk returns a tuple with the MinIncludedOperationProcessingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetMinIncludedOperationProcessingTimeOk() (*string, bool) {
	if o == nil || isNil(o.MinIncludedOperationProcessingTime) {
    return nil, false
	}
	return o.MinIncludedOperationProcessingTime, true
}

// HasMinIncludedOperationProcessingTime returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasMinIncludedOperationProcessingTime() bool {
	if o != nil && !isNil(o.MinIncludedOperationProcessingTime) {
		return true
	}

	return false
}

// SetMinIncludedOperationProcessingTime gets a reference to the given string and assigns it to the MinIncludedOperationProcessingTime field.
func (o *OperationTimingAccessLogPublisherResponse) SetMinIncludedOperationProcessingTime(v string) {
	o.MinIncludedOperationProcessingTime = &v
}

// GetMinIncludedPhaseTimeNanos returns the MinIncludedPhaseTimeNanos field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetMinIncludedPhaseTimeNanos() int32 {
	if o == nil || isNil(o.MinIncludedPhaseTimeNanos) {
		var ret int32
		return ret
	}
	return *o.MinIncludedPhaseTimeNanos
}

// GetMinIncludedPhaseTimeNanosOk returns a tuple with the MinIncludedPhaseTimeNanos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetMinIncludedPhaseTimeNanosOk() (*int32, bool) {
	if o == nil || isNil(o.MinIncludedPhaseTimeNanos) {
    return nil, false
	}
	return o.MinIncludedPhaseTimeNanos, true
}

// HasMinIncludedPhaseTimeNanos returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasMinIncludedPhaseTimeNanos() bool {
	if o != nil && !isNil(o.MinIncludedPhaseTimeNanos) {
		return true
	}

	return false
}

// SetMinIncludedPhaseTimeNanos gets a reference to the given int32 and assigns it to the MinIncludedPhaseTimeNanos field.
func (o *OperationTimingAccessLogPublisherResponse) SetMinIncludedPhaseTimeNanos(v int32) {
	o.MinIncludedPhaseTimeNanos = &v
}

// GetAsynchronous returns the Asynchronous field value
func (o *OperationTimingAccessLogPublisherResponse) GetAsynchronous() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Asynchronous
}

// GetAsynchronousOk returns a tuple with the Asynchronous field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetAsynchronousOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Asynchronous, true
}

// SetAsynchronous sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetAsynchronous(v bool) {
	o.Asynchronous = v
}

// GetAutoFlush returns the AutoFlush field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetAutoFlush() bool {
	if o == nil || isNil(o.AutoFlush) {
		var ret bool
		return ret
	}
	return *o.AutoFlush
}

// GetAutoFlushOk returns a tuple with the AutoFlush field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetAutoFlushOk() (*bool, bool) {
	if o == nil || isNil(o.AutoFlush) {
    return nil, false
	}
	return o.AutoFlush, true
}

// HasAutoFlush returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasAutoFlush() bool {
	if o != nil && !isNil(o.AutoFlush) {
		return true
	}

	return false
}

// SetAutoFlush gets a reference to the given bool and assigns it to the AutoFlush field.
func (o *OperationTimingAccessLogPublisherResponse) SetAutoFlush(v bool) {
	o.AutoFlush = &v
}

// GetBufferSize returns the BufferSize field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetBufferSize() string {
	if o == nil || isNil(o.BufferSize) {
		var ret string
		return ret
	}
	return *o.BufferSize
}

// GetBufferSizeOk returns a tuple with the BufferSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetBufferSizeOk() (*string, bool) {
	if o == nil || isNil(o.BufferSize) {
    return nil, false
	}
	return o.BufferSize, true
}

// HasBufferSize returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasBufferSize() bool {
	if o != nil && !isNil(o.BufferSize) {
		return true
	}

	return false
}

// SetBufferSize gets a reference to the given string and assigns it to the BufferSize field.
func (o *OperationTimingAccessLogPublisherResponse) SetBufferSize(v string) {
	o.BufferSize = &v
}

// GetMaxStringLength returns the MaxStringLength field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetMaxStringLength() int32 {
	if o == nil || isNil(o.MaxStringLength) {
		var ret int32
		return ret
	}
	return *o.MaxStringLength
}

// GetMaxStringLengthOk returns a tuple with the MaxStringLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetMaxStringLengthOk() (*int32, bool) {
	if o == nil || isNil(o.MaxStringLength) {
    return nil, false
	}
	return o.MaxStringLength, true
}

// HasMaxStringLength returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasMaxStringLength() bool {
	if o != nil && !isNil(o.MaxStringLength) {
		return true
	}

	return false
}

// SetMaxStringLength gets a reference to the given int32 and assigns it to the MaxStringLength field.
func (o *OperationTimingAccessLogPublisherResponse) SetMaxStringLength(v int32) {
	o.MaxStringLength = &v
}

// GetQueueSize returns the QueueSize field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetQueueSize() int32 {
	if o == nil || isNil(o.QueueSize) {
		var ret int32
		return ret
	}
	return *o.QueueSize
}

// GetQueueSizeOk returns a tuple with the QueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetQueueSizeOk() (*int32, bool) {
	if o == nil || isNil(o.QueueSize) {
    return nil, false
	}
	return o.QueueSize, true
}

// HasQueueSize returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasQueueSize() bool {
	if o != nil && !isNil(o.QueueSize) {
		return true
	}

	return false
}

// SetQueueSize gets a reference to the given int32 and assigns it to the QueueSize field.
func (o *OperationTimingAccessLogPublisherResponse) SetQueueSize(v int32) {
	o.QueueSize = &v
}

// GetTimeInterval returns the TimeInterval field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetTimeInterval() string {
	if o == nil || isNil(o.TimeInterval) {
		var ret string
		return ret
	}
	return *o.TimeInterval
}

// GetTimeIntervalOk returns a tuple with the TimeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetTimeIntervalOk() (*string, bool) {
	if o == nil || isNil(o.TimeInterval) {
    return nil, false
	}
	return o.TimeInterval, true
}

// HasTimeInterval returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasTimeInterval() bool {
	if o != nil && !isNil(o.TimeInterval) {
		return true
	}

	return false
}

// SetTimeInterval gets a reference to the given string and assigns it to the TimeInterval field.
func (o *OperationTimingAccessLogPublisherResponse) SetTimeInterval(v string) {
	o.TimeInterval = &v
}

// GetLogSecurityNegotiation returns the LogSecurityNegotiation field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetLogSecurityNegotiation() bool {
	if o == nil || isNil(o.LogSecurityNegotiation) {
		var ret bool
		return ret
	}
	return *o.LogSecurityNegotiation
}

// GetLogSecurityNegotiationOk returns a tuple with the LogSecurityNegotiation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetLogSecurityNegotiationOk() (*bool, bool) {
	if o == nil || isNil(o.LogSecurityNegotiation) {
    return nil, false
	}
	return o.LogSecurityNegotiation, true
}

// HasLogSecurityNegotiation returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasLogSecurityNegotiation() bool {
	if o != nil && !isNil(o.LogSecurityNegotiation) {
		return true
	}

	return false
}

// SetLogSecurityNegotiation gets a reference to the given bool and assigns it to the LogSecurityNegotiation field.
func (o *OperationTimingAccessLogPublisherResponse) SetLogSecurityNegotiation(v bool) {
	o.LogSecurityNegotiation = &v
}

// GetLogIntermediateResponses returns the LogIntermediateResponses field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetLogIntermediateResponses() bool {
	if o == nil || isNil(o.LogIntermediateResponses) {
		var ret bool
		return ret
	}
	return *o.LogIntermediateResponses
}

// GetLogIntermediateResponsesOk returns a tuple with the LogIntermediateResponses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetLogIntermediateResponsesOk() (*bool, bool) {
	if o == nil || isNil(o.LogIntermediateResponses) {
    return nil, false
	}
	return o.LogIntermediateResponses, true
}

// HasLogIntermediateResponses returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasLogIntermediateResponses() bool {
	if o != nil && !isNil(o.LogIntermediateResponses) {
		return true
	}

	return false
}

// SetLogIntermediateResponses gets a reference to the given bool and assigns it to the LogIntermediateResponses field.
func (o *OperationTimingAccessLogPublisherResponse) SetLogIntermediateResponses(v bool) {
	o.LogIntermediateResponses = &v
}

// GetSuppressInternalOperations returns the SuppressInternalOperations field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetSuppressInternalOperations() bool {
	if o == nil || isNil(o.SuppressInternalOperations) {
		var ret bool
		return ret
	}
	return *o.SuppressInternalOperations
}

// GetSuppressInternalOperationsOk returns a tuple with the SuppressInternalOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetSuppressInternalOperationsOk() (*bool, bool) {
	if o == nil || isNil(o.SuppressInternalOperations) {
    return nil, false
	}
	return o.SuppressInternalOperations, true
}

// HasSuppressInternalOperations returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasSuppressInternalOperations() bool {
	if o != nil && !isNil(o.SuppressInternalOperations) {
		return true
	}

	return false
}

// SetSuppressInternalOperations gets a reference to the given bool and assigns it to the SuppressInternalOperations field.
func (o *OperationTimingAccessLogPublisherResponse) SetSuppressInternalOperations(v bool) {
	o.SuppressInternalOperations = &v
}

// GetSuppressReplicationOperations returns the SuppressReplicationOperations field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetSuppressReplicationOperations() bool {
	if o == nil || isNil(o.SuppressReplicationOperations) {
		var ret bool
		return ret
	}
	return *o.SuppressReplicationOperations
}

// GetSuppressReplicationOperationsOk returns a tuple with the SuppressReplicationOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetSuppressReplicationOperationsOk() (*bool, bool) {
	if o == nil || isNil(o.SuppressReplicationOperations) {
    return nil, false
	}
	return o.SuppressReplicationOperations, true
}

// HasSuppressReplicationOperations returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasSuppressReplicationOperations() bool {
	if o != nil && !isNil(o.SuppressReplicationOperations) {
		return true
	}

	return false
}

// SetSuppressReplicationOperations gets a reference to the given bool and assigns it to the SuppressReplicationOperations field.
func (o *OperationTimingAccessLogPublisherResponse) SetSuppressReplicationOperations(v bool) {
	o.SuppressReplicationOperations = &v
}

// GetConnectionCriteria returns the ConnectionCriteria field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetConnectionCriteria() string {
	if o == nil || isNil(o.ConnectionCriteria) {
		var ret string
		return ret
	}
	return *o.ConnectionCriteria
}

// GetConnectionCriteriaOk returns a tuple with the ConnectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetConnectionCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.ConnectionCriteria) {
    return nil, false
	}
	return o.ConnectionCriteria, true
}

// HasConnectionCriteria returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasConnectionCriteria() bool {
	if o != nil && !isNil(o.ConnectionCriteria) {
		return true
	}

	return false
}

// SetConnectionCriteria gets a reference to the given string and assigns it to the ConnectionCriteria field.
func (o *OperationTimingAccessLogPublisherResponse) SetConnectionCriteria(v string) {
	o.ConnectionCriteria = &v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetRequestCriteria() string {
	if o == nil || isNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.RequestCriteria) {
    return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasRequestCriteria() bool {
	if o != nil && !isNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *OperationTimingAccessLogPublisherResponse) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetResultCriteria returns the ResultCriteria field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetResultCriteria() string {
	if o == nil || isNil(o.ResultCriteria) {
		var ret string
		return ret
	}
	return *o.ResultCriteria
}

// GetResultCriteriaOk returns a tuple with the ResultCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetResultCriteriaOk() (*string, bool) {
	if o == nil || isNil(o.ResultCriteria) {
    return nil, false
	}
	return o.ResultCriteria, true
}

// HasResultCriteria returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasResultCriteria() bool {
	if o != nil && !isNil(o.ResultCriteria) {
		return true
	}

	return false
}

// SetResultCriteria gets a reference to the given string and assigns it to the ResultCriteria field.
func (o *OperationTimingAccessLogPublisherResponse) SetResultCriteria(v string) {
	o.ResultCriteria = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *OperationTimingAccessLogPublisherResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *OperationTimingAccessLogPublisherResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *OperationTimingAccessLogPublisherResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetLoggingErrorBehavior returns the LoggingErrorBehavior field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetLoggingErrorBehavior() EnumlogPublisherLoggingErrorBehaviorProp {
	if o == nil || isNil(o.LoggingErrorBehavior) {
		var ret EnumlogPublisherLoggingErrorBehaviorProp
		return ret
	}
	return *o.LoggingErrorBehavior
}

// GetLoggingErrorBehaviorOk returns a tuple with the LoggingErrorBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetLoggingErrorBehaviorOk() (*EnumlogPublisherLoggingErrorBehaviorProp, bool) {
	if o == nil || isNil(o.LoggingErrorBehavior) {
    return nil, false
	}
	return o.LoggingErrorBehavior, true
}

// HasLoggingErrorBehavior returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasLoggingErrorBehavior() bool {
	if o != nil && !isNil(o.LoggingErrorBehavior) {
		return true
	}

	return false
}

// SetLoggingErrorBehavior gets a reference to the given EnumlogPublisherLoggingErrorBehaviorProp and assigns it to the LoggingErrorBehavior field.
func (o *OperationTimingAccessLogPublisherResponse) SetLoggingErrorBehavior(v EnumlogPublisherLoggingErrorBehaviorProp) {
	o.LoggingErrorBehavior = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *OperationTimingAccessLogPublisherResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OperationTimingAccessLogPublisherResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
    return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *OperationTimingAccessLogPublisherResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *OperationTimingAccessLogPublisherResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

func (o OperationTimingAccessLogPublisherResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["logFile"] = o.LogFile
	}
	if true {
		toSerialize["logFilePermissions"] = o.LogFilePermissions
	}
	if true {
		toSerialize["rotationPolicy"] = o.RotationPolicy
	}
	if !isNil(o.RotationListener) {
		toSerialize["rotationListener"] = o.RotationListener
	}
	if true {
		toSerialize["retentionPolicy"] = o.RetentionPolicy
	}
	if !isNil(o.CompressionMechanism) {
		toSerialize["compressionMechanism"] = o.CompressionMechanism
	}
	if !isNil(o.SignLog) {
		toSerialize["signLog"] = o.SignLog
	}
	if !isNil(o.EncryptLog) {
		toSerialize["encryptLog"] = o.EncryptLog
	}
	if !isNil(o.EncryptionSettingsDefinitionID) {
		toSerialize["encryptionSettingsDefinitionID"] = o.EncryptionSettingsDefinitionID
	}
	if !isNil(o.Append) {
		toSerialize["append"] = o.Append
	}
	if !isNil(o.IncludeProductName) {
		toSerialize["includeProductName"] = o.IncludeProductName
	}
	if !isNil(o.IncludeInstanceName) {
		toSerialize["includeInstanceName"] = o.IncludeInstanceName
	}
	if !isNil(o.IncludeStartupID) {
		toSerialize["includeStartupID"] = o.IncludeStartupID
	}
	if !isNil(o.IncludeThreadID) {
		toSerialize["includeThreadID"] = o.IncludeThreadID
	}
	if !isNil(o.IncludeRequesterIPAddress) {
		toSerialize["includeRequesterIPAddress"] = o.IncludeRequesterIPAddress
	}
	if !isNil(o.IncludeRequesterDN) {
		toSerialize["includeRequesterDN"] = o.IncludeRequesterDN
	}
	if !isNil(o.MinIncludedOperationProcessingTime) {
		toSerialize["minIncludedOperationProcessingTime"] = o.MinIncludedOperationProcessingTime
	}
	if !isNil(o.MinIncludedPhaseTimeNanos) {
		toSerialize["minIncludedPhaseTimeNanos"] = o.MinIncludedPhaseTimeNanos
	}
	if true {
		toSerialize["asynchronous"] = o.Asynchronous
	}
	if !isNil(o.AutoFlush) {
		toSerialize["autoFlush"] = o.AutoFlush
	}
	if !isNil(o.BufferSize) {
		toSerialize["bufferSize"] = o.BufferSize
	}
	if !isNil(o.MaxStringLength) {
		toSerialize["maxStringLength"] = o.MaxStringLength
	}
	if !isNil(o.QueueSize) {
		toSerialize["queueSize"] = o.QueueSize
	}
	if !isNil(o.TimeInterval) {
		toSerialize["timeInterval"] = o.TimeInterval
	}
	if !isNil(o.LogSecurityNegotiation) {
		toSerialize["logSecurityNegotiation"] = o.LogSecurityNegotiation
	}
	if !isNil(o.LogIntermediateResponses) {
		toSerialize["logIntermediateResponses"] = o.LogIntermediateResponses
	}
	if !isNil(o.SuppressInternalOperations) {
		toSerialize["suppressInternalOperations"] = o.SuppressInternalOperations
	}
	if !isNil(o.SuppressReplicationOperations) {
		toSerialize["suppressReplicationOperations"] = o.SuppressReplicationOperations
	}
	if !isNil(o.ConnectionCriteria) {
		toSerialize["connectionCriteria"] = o.ConnectionCriteria
	}
	if !isNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !isNil(o.ResultCriteria) {
		toSerialize["resultCriteria"] = o.ResultCriteria
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.LoggingErrorBehavior) {
		toSerialize["loggingErrorBehavior"] = o.LoggingErrorBehavior
	}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	return json.Marshal(toSerialize)
}

type NullableOperationTimingAccessLogPublisherResponse struct {
	value *OperationTimingAccessLogPublisherResponse
	isSet bool
}

func (v NullableOperationTimingAccessLogPublisherResponse) Get() *OperationTimingAccessLogPublisherResponse {
	return v.value
}

func (v *NullableOperationTimingAccessLogPublisherResponse) Set(val *OperationTimingAccessLogPublisherResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOperationTimingAccessLogPublisherResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOperationTimingAccessLogPublisherResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOperationTimingAccessLogPublisherResponse(val *OperationTimingAccessLogPublisherResponse) *NullableOperationTimingAccessLogPublisherResponse {
	return &NullableOperationTimingAccessLogPublisherResponse{value: val, isSet: true}
}

func (v NullableOperationTimingAccessLogPublisherResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOperationTimingAccessLogPublisherResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


