/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumalertHandlerLongMessageBehaviorProp The behavior to use for alert messages that are longer than the 160-character size limit for SMS messages.
type EnumalertHandlerLongMessageBehaviorProp string

// List of Enumalert-handler-longMessageBehaviorProp
const (
	TRUNCATE EnumalertHandlerLongMessageBehaviorProp = "truncate"
	SEND_AS_MULTIPLE_MESSAGES EnumalertHandlerLongMessageBehaviorProp = "send-as-multiple-messages"
)

// All allowed values of EnumalertHandlerLongMessageBehaviorProp enum
var AllowedEnumalertHandlerLongMessageBehaviorPropEnumValues = []EnumalertHandlerLongMessageBehaviorProp{
	"truncate",
	"send-as-multiple-messages",
}

func (v *EnumalertHandlerLongMessageBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumalertHandlerLongMessageBehaviorProp(value)
	for _, existing := range AllowedEnumalertHandlerLongMessageBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumalertHandlerLongMessageBehaviorProp", value)
}

// NewEnumalertHandlerLongMessageBehaviorPropFromValue returns a pointer to a valid EnumalertHandlerLongMessageBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumalertHandlerLongMessageBehaviorPropFromValue(v string) (*EnumalertHandlerLongMessageBehaviorProp, error) {
	ev := EnumalertHandlerLongMessageBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumalertHandlerLongMessageBehaviorProp: valid values are %v", v, AllowedEnumalertHandlerLongMessageBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumalertHandlerLongMessageBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumalertHandlerLongMessageBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumalert-handler-longMessageBehaviorProp value
func (v EnumalertHandlerLongMessageBehaviorProp) Ptr() *EnumalertHandlerLongMessageBehaviorProp {
	return &v
}

type NullableEnumalertHandlerLongMessageBehaviorProp struct {
	value *EnumalertHandlerLongMessageBehaviorProp
	isSet bool
}

func (v NullableEnumalertHandlerLongMessageBehaviorProp) Get() *EnumalertHandlerLongMessageBehaviorProp {
	return v.value
}

func (v *NullableEnumalertHandlerLongMessageBehaviorProp) Set(val *EnumalertHandlerLongMessageBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumalertHandlerLongMessageBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumalertHandlerLongMessageBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumalertHandlerLongMessageBehaviorProp(val *EnumalertHandlerLongMessageBehaviorProp) *NullableEnumalertHandlerLongMessageBehaviorProp {
	return &NullableEnumalertHandlerLongMessageBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumalertHandlerLongMessageBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumalertHandlerLongMessageBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

