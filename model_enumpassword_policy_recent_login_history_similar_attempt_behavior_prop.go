/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp The behavior that the server will exhibit when multiple similar authentication attempts (with the same values for the successful, authentication-method, client-ip-address, and failure-reason fields) are processed for an account.
type EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp string

// List of Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp
const (
	ENUMPASSWORDPOLICYRECENTLOGINHISTORYSIMILARATTEMPTBEHAVIORPROP_COLLAPSE_SIMILAR_ATTEMPTS_ON_THE_SAME_DATE EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp = "collapse-similar-attempts-on-the-same-date"
	ENUMPASSWORDPOLICYRECENTLOGINHISTORYSIMILARATTEMPTBEHAVIORPROP_MAINTAIN_EVERY_ATTEMPT                     EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp = "maintain-every-attempt"
	ENUMPASSWORDPOLICYRECENTLOGINHISTORYSIMILARATTEMPTBEHAVIORPROP_UPDATE_AT_MOST_ONCE_PER_DAY                EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp = "update-at-most-once-per-day"
)

// All allowed values of EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp enum
var AllowedEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropEnumValues = []EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp{
	"collapse-similar-attempts-on-the-same-date",
	"maintain-every-attempt",
	"update-at-most-once-per-day",
}

func (v *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp(value)
	for _, existing := range AllowedEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp", value)
}

// NewEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropFromValue returns a pointer to a valid EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropFromValue(v string) (*EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp, error) {
	ev := EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp: valid values are %v", v, AllowedEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumpassword-policy-recentLoginHistorySimilarAttemptBehaviorProp value
func (v EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) Ptr() *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp {
	return &v
}

type NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp struct {
	value *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp
	isSet bool
}

func (v NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) Get() *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp {
	return v.value
}

func (v *NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) Set(val *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp(val *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) *NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp {
	return &NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
