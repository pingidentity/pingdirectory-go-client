/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumthirdPartyUncachedAttributeCriteriaSchemaUrn the model 'EnumthirdPartyUncachedAttributeCriteriaSchemaUrn'
type EnumthirdPartyUncachedAttributeCriteriaSchemaUrn string

// List of Enumthird-party-uncached-attribute-criteriaSchemaUrn
const (
	URNPINGIDENTITYSCHEMASCONFIGURATION2_0UNCACHED_ATTRIBUTE_CRITERIATHIRD_PARTY EnumthirdPartyUncachedAttributeCriteriaSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:third-party"
)

// All allowed values of EnumthirdPartyUncachedAttributeCriteriaSchemaUrn enum
var AllowedEnumthirdPartyUncachedAttributeCriteriaSchemaUrnEnumValues = []EnumthirdPartyUncachedAttributeCriteriaSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:uncached-attribute-criteria:third-party",
}

func (v *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumthirdPartyUncachedAttributeCriteriaSchemaUrn(value)
	for _, existing := range AllowedEnumthirdPartyUncachedAttributeCriteriaSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumthirdPartyUncachedAttributeCriteriaSchemaUrn", value)
}

// NewEnumthirdPartyUncachedAttributeCriteriaSchemaUrnFromValue returns a pointer to a valid EnumthirdPartyUncachedAttributeCriteriaSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumthirdPartyUncachedAttributeCriteriaSchemaUrnFromValue(v string) (*EnumthirdPartyUncachedAttributeCriteriaSchemaUrn, error) {
	ev := EnumthirdPartyUncachedAttributeCriteriaSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumthirdPartyUncachedAttributeCriteriaSchemaUrn: valid values are %v", v, AllowedEnumthirdPartyUncachedAttributeCriteriaSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumthirdPartyUncachedAttributeCriteriaSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumthird-party-uncached-attribute-criteriaSchemaUrn value
func (v EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) Ptr() *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn {
	return &v
}

type NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn struct {
	value *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn
	isSet bool
}

func (v NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) Get() *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn {
	return v.value
}

func (v *NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) Set(val *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn(val *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) *NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn {
	return &NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumthirdPartyUncachedAttributeCriteriaSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

