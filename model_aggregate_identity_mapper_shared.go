/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AggregateIdentityMapperShared struct for AggregateIdentityMapperShared
type AggregateIdentityMapperShared struct {
	Schemas []EnumaggregateIdentityMapperSchemaUrn `json:"schemas"`
	AllIncludedIdentityMapper []string `json:"allIncludedIdentityMapper,omitempty"`
	AnyIncludedIdentityMapper []string `json:"anyIncludedIdentityMapper,omitempty"`
	// A description for this Identity Mapper
	Description *string `json:"description,omitempty"`
	// Indicates whether the Identity Mapper is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewAggregateIdentityMapperShared instantiates a new AggregateIdentityMapperShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateIdentityMapperShared(schemas []EnumaggregateIdentityMapperSchemaUrn, enabled bool) *AggregateIdentityMapperShared {
	this := AggregateIdentityMapperShared{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewAggregateIdentityMapperSharedWithDefaults instantiates a new AggregateIdentityMapperShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateIdentityMapperSharedWithDefaults() *AggregateIdentityMapperShared {
	this := AggregateIdentityMapperShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AggregateIdentityMapperShared) GetSchemas() []EnumaggregateIdentityMapperSchemaUrn {
	if o == nil {
		var ret []EnumaggregateIdentityMapperSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperShared) GetSchemasOk() ([]EnumaggregateIdentityMapperSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AggregateIdentityMapperShared) SetSchemas(v []EnumaggregateIdentityMapperSchemaUrn) {
	o.Schemas = v
}

// GetAllIncludedIdentityMapper returns the AllIncludedIdentityMapper field value if set, zero value otherwise.
func (o *AggregateIdentityMapperShared) GetAllIncludedIdentityMapper() []string {
	if o == nil || isNil(o.AllIncludedIdentityMapper) {
		var ret []string
		return ret
	}
	return o.AllIncludedIdentityMapper
}

// GetAllIncludedIdentityMapperOk returns a tuple with the AllIncludedIdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperShared) GetAllIncludedIdentityMapperOk() ([]string, bool) {
	if o == nil || isNil(o.AllIncludedIdentityMapper) {
    return nil, false
	}
	return o.AllIncludedIdentityMapper, true
}

// HasAllIncludedIdentityMapper returns a boolean if a field has been set.
func (o *AggregateIdentityMapperShared) HasAllIncludedIdentityMapper() bool {
	if o != nil && !isNil(o.AllIncludedIdentityMapper) {
		return true
	}

	return false
}

// SetAllIncludedIdentityMapper gets a reference to the given []string and assigns it to the AllIncludedIdentityMapper field.
func (o *AggregateIdentityMapperShared) SetAllIncludedIdentityMapper(v []string) {
	o.AllIncludedIdentityMapper = v
}

// GetAnyIncludedIdentityMapper returns the AnyIncludedIdentityMapper field value if set, zero value otherwise.
func (o *AggregateIdentityMapperShared) GetAnyIncludedIdentityMapper() []string {
	if o == nil || isNil(o.AnyIncludedIdentityMapper) {
		var ret []string
		return ret
	}
	return o.AnyIncludedIdentityMapper
}

// GetAnyIncludedIdentityMapperOk returns a tuple with the AnyIncludedIdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperShared) GetAnyIncludedIdentityMapperOk() ([]string, bool) {
	if o == nil || isNil(o.AnyIncludedIdentityMapper) {
    return nil, false
	}
	return o.AnyIncludedIdentityMapper, true
}

// HasAnyIncludedIdentityMapper returns a boolean if a field has been set.
func (o *AggregateIdentityMapperShared) HasAnyIncludedIdentityMapper() bool {
	if o != nil && !isNil(o.AnyIncludedIdentityMapper) {
		return true
	}

	return false
}

// SetAnyIncludedIdentityMapper gets a reference to the given []string and assigns it to the AnyIncludedIdentityMapper field.
func (o *AggregateIdentityMapperShared) SetAnyIncludedIdentityMapper(v []string) {
	o.AnyIncludedIdentityMapper = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AggregateIdentityMapperShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AggregateIdentityMapperShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AggregateIdentityMapperShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AggregateIdentityMapperShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AggregateIdentityMapperShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AggregateIdentityMapperShared) SetEnabled(v bool) {
	o.Enabled = v
}

func (o AggregateIdentityMapperShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.AllIncludedIdentityMapper) {
		toSerialize["allIncludedIdentityMapper"] = o.AllIncludedIdentityMapper
	}
	if !isNil(o.AnyIncludedIdentityMapper) {
		toSerialize["anyIncludedIdentityMapper"] = o.AnyIncludedIdentityMapper
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableAggregateIdentityMapperShared struct {
	value *AggregateIdentityMapperShared
	isSet bool
}

func (v NullableAggregateIdentityMapperShared) Get() *AggregateIdentityMapperShared {
	return v.value
}

func (v *NullableAggregateIdentityMapperShared) Set(val *AggregateIdentityMapperShared) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateIdentityMapperShared) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateIdentityMapperShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateIdentityMapperShared(val *AggregateIdentityMapperShared) *NullableAggregateIdentityMapperShared {
	return &NullableAggregateIdentityMapperShared{value: val, isSet: true}
}

func (v NullableAggregateIdentityMapperShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateIdentityMapperShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


