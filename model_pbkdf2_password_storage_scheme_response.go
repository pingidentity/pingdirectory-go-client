/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pbkdf2PasswordStorageSchemeResponse struct for Pbkdf2PasswordStorageSchemeResponse
type Pbkdf2PasswordStorageSchemeResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Password Storage Scheme
	Id              string                                        `json:"id"`
	Schemas         []Enumpbkdf2PasswordStorageSchemeSchemaUrn    `json:"schemas"`
	DigestAlgorithm *EnumpasswordStorageSchemeDigestAlgorithmProp `json:"digestAlgorithm,omitempty"`
	// Specifies the number of iterations to use when encoding passwords. The value must be greater than or equal to 1000.
	IterationCount int32 `json:"iterationCount"`
	// Specifies the number of bytes to use for the generated salt. The value must be greater than or equal to 8.
	SaltLengthBytes int32 `json:"saltLengthBytes"`
	// Specifies the number of bytes to use for the derived key. The value must be greater than or equal to 8.
	DerivedKeyLengthBytes int32 `json:"derivedKeyLengthBytes"`
	// Specifies the maximum allowed length, in bytes, for passwords encoded with this scheme, which can help mitigate denial of service attacks from clients that attempt to bind with very long passwords.
	MaxPasswordLength *int32 `json:"maxPasswordLength,omitempty"`
	// A description for this Password Storage Scheme
	Description *string `json:"description,omitempty"`
	// Indicates whether the Password Storage Scheme is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewPbkdf2PasswordStorageSchemeResponse instantiates a new Pbkdf2PasswordStorageSchemeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPbkdf2PasswordStorageSchemeResponse(id string, schemas []Enumpbkdf2PasswordStorageSchemeSchemaUrn, iterationCount int32, saltLengthBytes int32, derivedKeyLengthBytes int32, enabled bool) *Pbkdf2PasswordStorageSchemeResponse {
	this := Pbkdf2PasswordStorageSchemeResponse{}
	this.Id = id
	this.Schemas = schemas
	this.IterationCount = iterationCount
	this.SaltLengthBytes = saltLengthBytes
	this.DerivedKeyLengthBytes = derivedKeyLengthBytes
	this.Enabled = enabled
	return &this
}

// NewPbkdf2PasswordStorageSchemeResponseWithDefaults instantiates a new Pbkdf2PasswordStorageSchemeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPbkdf2PasswordStorageSchemeResponseWithDefaults() *Pbkdf2PasswordStorageSchemeResponse {
	this := Pbkdf2PasswordStorageSchemeResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *Pbkdf2PasswordStorageSchemeResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *Pbkdf2PasswordStorageSchemeResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetSchemas() []Enumpbkdf2PasswordStorageSchemeSchemaUrn {
	if o == nil {
		var ret []Enumpbkdf2PasswordStorageSchemeSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetSchemasOk() ([]Enumpbkdf2PasswordStorageSchemeSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetSchemas(v []Enumpbkdf2PasswordStorageSchemeSchemaUrn) {
	o.Schemas = v
}

// GetDigestAlgorithm returns the DigestAlgorithm field value if set, zero value otherwise.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDigestAlgorithm() EnumpasswordStorageSchemeDigestAlgorithmProp {
	if o == nil || isNil(o.DigestAlgorithm) {
		var ret EnumpasswordStorageSchemeDigestAlgorithmProp
		return ret
	}
	return *o.DigestAlgorithm
}

// GetDigestAlgorithmOk returns a tuple with the DigestAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDigestAlgorithmOk() (*EnumpasswordStorageSchemeDigestAlgorithmProp, bool) {
	if o == nil || isNil(o.DigestAlgorithm) {
		return nil, false
	}
	return o.DigestAlgorithm, true
}

// HasDigestAlgorithm returns a boolean if a field has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) HasDigestAlgorithm() bool {
	if o != nil && !isNil(o.DigestAlgorithm) {
		return true
	}

	return false
}

// SetDigestAlgorithm gets a reference to the given EnumpasswordStorageSchemeDigestAlgorithmProp and assigns it to the DigestAlgorithm field.
func (o *Pbkdf2PasswordStorageSchemeResponse) SetDigestAlgorithm(v EnumpasswordStorageSchemeDigestAlgorithmProp) {
	o.DigestAlgorithm = &v
}

// GetIterationCount returns the IterationCount field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetIterationCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.IterationCount
}

// GetIterationCountOk returns a tuple with the IterationCount field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetIterationCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IterationCount, true
}

// SetIterationCount sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetIterationCount(v int32) {
	o.IterationCount = v
}

// GetSaltLengthBytes returns the SaltLengthBytes field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetSaltLengthBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SaltLengthBytes
}

// GetSaltLengthBytesOk returns a tuple with the SaltLengthBytes field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetSaltLengthBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SaltLengthBytes, true
}

// SetSaltLengthBytes sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetSaltLengthBytes(v int32) {
	o.SaltLengthBytes = v
}

// GetDerivedKeyLengthBytes returns the DerivedKeyLengthBytes field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDerivedKeyLengthBytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DerivedKeyLengthBytes
}

// GetDerivedKeyLengthBytesOk returns a tuple with the DerivedKeyLengthBytes field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDerivedKeyLengthBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DerivedKeyLengthBytes, true
}

// SetDerivedKeyLengthBytes sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetDerivedKeyLengthBytes(v int32) {
	o.DerivedKeyLengthBytes = v
}

// GetMaxPasswordLength returns the MaxPasswordLength field value if set, zero value otherwise.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetMaxPasswordLength() int32 {
	if o == nil || isNil(o.MaxPasswordLength) {
		var ret int32
		return ret
	}
	return *o.MaxPasswordLength
}

// GetMaxPasswordLengthOk returns a tuple with the MaxPasswordLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetMaxPasswordLengthOk() (*int32, bool) {
	if o == nil || isNil(o.MaxPasswordLength) {
		return nil, false
	}
	return o.MaxPasswordLength, true
}

// HasMaxPasswordLength returns a boolean if a field has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) HasMaxPasswordLength() bool {
	if o != nil && !isNil(o.MaxPasswordLength) {
		return true
	}

	return false
}

// SetMaxPasswordLength gets a reference to the given int32 and assigns it to the MaxPasswordLength field.
func (o *Pbkdf2PasswordStorageSchemeResponse) SetMaxPasswordLength(v int32) {
	o.MaxPasswordLength = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Pbkdf2PasswordStorageSchemeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *Pbkdf2PasswordStorageSchemeResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Pbkdf2PasswordStorageSchemeResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Pbkdf2PasswordStorageSchemeResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o Pbkdf2PasswordStorageSchemeResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.DigestAlgorithm) {
		toSerialize["digestAlgorithm"] = o.DigestAlgorithm
	}
	if true {
		toSerialize["iterationCount"] = o.IterationCount
	}
	if true {
		toSerialize["saltLengthBytes"] = o.SaltLengthBytes
	}
	if true {
		toSerialize["derivedKeyLengthBytes"] = o.DerivedKeyLengthBytes
	}
	if !isNil(o.MaxPasswordLength) {
		toSerialize["maxPasswordLength"] = o.MaxPasswordLength
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullablePbkdf2PasswordStorageSchemeResponse struct {
	value *Pbkdf2PasswordStorageSchemeResponse
	isSet bool
}

func (v NullablePbkdf2PasswordStorageSchemeResponse) Get() *Pbkdf2PasswordStorageSchemeResponse {
	return v.value
}

func (v *NullablePbkdf2PasswordStorageSchemeResponse) Set(val *Pbkdf2PasswordStorageSchemeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePbkdf2PasswordStorageSchemeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePbkdf2PasswordStorageSchemeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePbkdf2PasswordStorageSchemeResponse(val *Pbkdf2PasswordStorageSchemeResponse) *NullablePbkdf2PasswordStorageSchemeResponse {
	return &NullablePbkdf2PasswordStorageSchemeResponse{value: val, isSet: true}
}

func (v NullablePbkdf2PasswordStorageSchemeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePbkdf2PasswordStorageSchemeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
