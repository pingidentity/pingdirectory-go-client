/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddModifiablePasswordPolicyStatePluginRequest struct for AddModifiablePasswordPolicyStatePluginRequest
type AddModifiablePasswordPolicyStatePluginRequest struct {
	// Name of the new Plugin
	PluginName string                                             `json:"pluginName"`
	Schemas    []EnummodifiablePasswordPolicyStatePluginSchemaUrn `json:"schemas"`
	// A base DN that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
	BaseDN []string `json:"baseDN,omitempty"`
	// A filter that may be used to identify entries that should support the ds-pwp-modifiable-state-json operational attribute.
	Filter []string `json:"filter,omitempty"`
	// A description for this Plugin
	Description *string `json:"description,omitempty"`
	// Indicates whether the plug-in is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewAddModifiablePasswordPolicyStatePluginRequest instantiates a new AddModifiablePasswordPolicyStatePluginRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddModifiablePasswordPolicyStatePluginRequest(pluginName string, schemas []EnummodifiablePasswordPolicyStatePluginSchemaUrn, enabled bool) *AddModifiablePasswordPolicyStatePluginRequest {
	this := AddModifiablePasswordPolicyStatePluginRequest{}
	this.PluginName = pluginName
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewAddModifiablePasswordPolicyStatePluginRequestWithDefaults instantiates a new AddModifiablePasswordPolicyStatePluginRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddModifiablePasswordPolicyStatePluginRequestWithDefaults() *AddModifiablePasswordPolicyStatePluginRequest {
	this := AddModifiablePasswordPolicyStatePluginRequest{}
	return &this
}

// GetPluginName returns the PluginName field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetPluginName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PluginName
}

// GetPluginNameOk returns a tuple with the PluginName field value
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetPluginNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PluginName, true
}

// SetPluginName sets field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetPluginName(v string) {
	o.PluginName = v
}

// GetSchemas returns the Schemas field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetSchemas() []EnummodifiablePasswordPolicyStatePluginSchemaUrn {
	if o == nil {
		var ret []EnummodifiablePasswordPolicyStatePluginSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetSchemasOk() ([]EnummodifiablePasswordPolicyStatePluginSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetSchemas(v []EnummodifiablePasswordPolicyStatePluginSchemaUrn) {
	o.Schemas = v
}

// GetBaseDN returns the BaseDN field value if set, zero value otherwise.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetBaseDN() []string {
	if o == nil || isNil(o.BaseDN) {
		var ret []string
		return ret
	}
	return o.BaseDN
}

// GetBaseDNOk returns a tuple with the BaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetBaseDNOk() ([]string, bool) {
	if o == nil || isNil(o.BaseDN) {
		return nil, false
	}
	return o.BaseDN, true
}

// HasBaseDN returns a boolean if a field has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) HasBaseDN() bool {
	if o != nil && !isNil(o.BaseDN) {
		return true
	}

	return false
}

// SetBaseDN gets a reference to the given []string and assigns it to the BaseDN field.
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetBaseDN(v []string) {
	o.BaseDN = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetFilter() []string {
	if o == nil || isNil(o.Filter) {
		var ret []string
		return ret
	}
	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetFilterOk() ([]string, bool) {
	if o == nil || isNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) HasFilter() bool {
	if o != nil && !isNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given []string and assigns it to the Filter field.
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetFilter(v []string) {
	o.Filter = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddModifiablePasswordPolicyStatePluginRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddModifiablePasswordPolicyStatePluginRequest) SetEnabled(v bool) {
	o.Enabled = v
}

func (o AddModifiablePasswordPolicyStatePluginRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["pluginName"] = o.PluginName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.BaseDN) {
		toSerialize["baseDN"] = o.BaseDN
	}
	if !isNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableAddModifiablePasswordPolicyStatePluginRequest struct {
	value *AddModifiablePasswordPolicyStatePluginRequest
	isSet bool
}

func (v NullableAddModifiablePasswordPolicyStatePluginRequest) Get() *AddModifiablePasswordPolicyStatePluginRequest {
	return v.value
}

func (v *NullableAddModifiablePasswordPolicyStatePluginRequest) Set(val *AddModifiablePasswordPolicyStatePluginRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddModifiablePasswordPolicyStatePluginRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddModifiablePasswordPolicyStatePluginRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddModifiablePasswordPolicyStatePluginRequest(val *AddModifiablePasswordPolicyStatePluginRequest) *NullableAddModifiablePasswordPolicyStatePluginRequest {
	return &NullableAddModifiablePasswordPolicyStatePluginRequest{value: val, isSet: true}
}

func (v NullableAddModifiablePasswordPolicyStatePluginRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddModifiablePasswordPolicyStatePluginRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
