/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn the model 'EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn'
type EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn string

// List of Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn
const (
	ENUMUNBOUNDIDEXTERNALAUTHSASLMECHANISMHANDLERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERUNBOUNDID_EXTERNAL_AUTH EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth"
)

// All allowed values of EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn enum
var AllowedEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnEnumValues = []EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:unboundid-external-auth",
}

func (v *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn", value)
}

// NewEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn, error) {
	ev := EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumunboundid-external-auth-sasl-mechanism-handlerSchemaUrn value
func (v EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) Ptr() *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn struct {
	value *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) Get() *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) Set(val *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn(val *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) *NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn {
	return &NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

