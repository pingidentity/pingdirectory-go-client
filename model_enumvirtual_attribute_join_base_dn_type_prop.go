/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumvirtualAttributeJoinBaseDNTypeProp Specifies how server should determine the base DN for the internal searches used to identify joined entries.
type EnumvirtualAttributeJoinBaseDNTypeProp string

// List of Enumvirtual-attribute-joinBaseDNTypeProp
const (
	SEARCH_BASE_DN EnumvirtualAttributeJoinBaseDNTypeProp = "use-search-base-dn"
	SOURCE_ENTRY_DN EnumvirtualAttributeJoinBaseDNTypeProp = "use-source-entry-dn"
	CUSTOM_BASE_DN EnumvirtualAttributeJoinBaseDNTypeProp = "use-custom-base-dn"
)

// All allowed values of EnumvirtualAttributeJoinBaseDNTypeProp enum
var AllowedEnumvirtualAttributeJoinBaseDNTypePropEnumValues = []EnumvirtualAttributeJoinBaseDNTypeProp{
	"use-search-base-dn",
	"use-source-entry-dn",
	"use-custom-base-dn",
}

func (v *EnumvirtualAttributeJoinBaseDNTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumvirtualAttributeJoinBaseDNTypeProp(value)
	for _, existing := range AllowedEnumvirtualAttributeJoinBaseDNTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumvirtualAttributeJoinBaseDNTypeProp", value)
}

// NewEnumvirtualAttributeJoinBaseDNTypePropFromValue returns a pointer to a valid EnumvirtualAttributeJoinBaseDNTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumvirtualAttributeJoinBaseDNTypePropFromValue(v string) (*EnumvirtualAttributeJoinBaseDNTypeProp, error) {
	ev := EnumvirtualAttributeJoinBaseDNTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumvirtualAttributeJoinBaseDNTypeProp: valid values are %v", v, AllowedEnumvirtualAttributeJoinBaseDNTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumvirtualAttributeJoinBaseDNTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumvirtualAttributeJoinBaseDNTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumvirtual-attribute-joinBaseDNTypeProp value
func (v EnumvirtualAttributeJoinBaseDNTypeProp) Ptr() *EnumvirtualAttributeJoinBaseDNTypeProp {
	return &v
}

type NullableEnumvirtualAttributeJoinBaseDNTypeProp struct {
	value *EnumvirtualAttributeJoinBaseDNTypeProp
	isSet bool
}

func (v NullableEnumvirtualAttributeJoinBaseDNTypeProp) Get() *EnumvirtualAttributeJoinBaseDNTypeProp {
	return v.value
}

func (v *NullableEnumvirtualAttributeJoinBaseDNTypeProp) Set(val *EnumvirtualAttributeJoinBaseDNTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumvirtualAttributeJoinBaseDNTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumvirtualAttributeJoinBaseDNTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumvirtualAttributeJoinBaseDNTypeProp(val *EnumvirtualAttributeJoinBaseDNTypeProp) *NullableEnumvirtualAttributeJoinBaseDNTypeProp {
	return &NullableEnumvirtualAttributeJoinBaseDNTypeProp{value: val, isSet: true}
}

func (v NullableEnumvirtualAttributeJoinBaseDNTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumvirtualAttributeJoinBaseDNTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

