/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddIndicatorGaugeRequestAllOf struct for AddIndicatorGaugeRequestAllOf
type AddIndicatorGaugeRequestAllOf struct {
	// Name of the new Gauge
	GaugeName string `json:"gaugeName"`
}

// NewAddIndicatorGaugeRequestAllOf instantiates a new AddIndicatorGaugeRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddIndicatorGaugeRequestAllOf(gaugeName string) *AddIndicatorGaugeRequestAllOf {
	this := AddIndicatorGaugeRequestAllOf{}
	this.GaugeName = gaugeName
	return &this
}

// NewAddIndicatorGaugeRequestAllOfWithDefaults instantiates a new AddIndicatorGaugeRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddIndicatorGaugeRequestAllOfWithDefaults() *AddIndicatorGaugeRequestAllOf {
	this := AddIndicatorGaugeRequestAllOf{}
	return &this
}

// GetGaugeName returns the GaugeName field value
func (o *AddIndicatorGaugeRequestAllOf) GetGaugeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GaugeName
}

// GetGaugeNameOk returns a tuple with the GaugeName field value
// and a boolean to check if the value has been set.
func (o *AddIndicatorGaugeRequestAllOf) GetGaugeNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GaugeName, true
}

// SetGaugeName sets field value
func (o *AddIndicatorGaugeRequestAllOf) SetGaugeName(v string) {
	o.GaugeName = v
}

func (o AddIndicatorGaugeRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["gaugeName"] = o.GaugeName
	}
	return json.Marshal(toSerialize)
}

type NullableAddIndicatorGaugeRequestAllOf struct {
	value *AddIndicatorGaugeRequestAllOf
	isSet bool
}

func (v NullableAddIndicatorGaugeRequestAllOf) Get() *AddIndicatorGaugeRequestAllOf {
	return v.value
}

func (v *NullableAddIndicatorGaugeRequestAllOf) Set(val *AddIndicatorGaugeRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIndicatorGaugeRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIndicatorGaugeRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIndicatorGaugeRequestAllOf(val *AddIndicatorGaugeRequestAllOf) *NullableAddIndicatorGaugeRequestAllOf {
	return &NullableAddIndicatorGaugeRequestAllOf{value: val, isSet: true}
}

func (v NullableAddIndicatorGaugeRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIndicatorGaugeRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


