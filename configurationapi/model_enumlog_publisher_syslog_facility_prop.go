/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumlogPublisherSyslogFacilityProp The syslog facility to use for the messages that are logged by this Syslog JSON Audit Log Publisher.
type EnumlogPublisherSyslogFacilityProp string

// List of Enumlog-publisher-syslogFacilityProp
const (
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_USER_LEVEL_MESSAGES                    EnumlogPublisherSyslogFacilityProp = "user-level-messages"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_SYSTEM_DAEMONS                         EnumlogPublisherSyslogFacilityProp = "system-daemons"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_SECURITY_AND_AUTHORIZATION             EnumlogPublisherSyslogFacilityProp = "security-and-authorization"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_SECURITY_AND_AUTHORIZATION_ALTERNATIVE EnumlogPublisherSyslogFacilityProp = "security-and-authorization-alternative"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOG_AUDIT                              EnumlogPublisherSyslogFacilityProp = "log-audit"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOG_ALERT                              EnumlogPublisherSyslogFacilityProp = "log-alert"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_0                            EnumlogPublisherSyslogFacilityProp = "local-use-0"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_1                            EnumlogPublisherSyslogFacilityProp = "local-use-1"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_2                            EnumlogPublisherSyslogFacilityProp = "local-use-2"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_3                            EnumlogPublisherSyslogFacilityProp = "local-use-3"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_4                            EnumlogPublisherSyslogFacilityProp = "local-use-4"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_5                            EnumlogPublisherSyslogFacilityProp = "local-use-5"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_6                            EnumlogPublisherSyslogFacilityProp = "local-use-6"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LOCAL_USE_7                            EnumlogPublisherSyslogFacilityProp = "local-use-7"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_KERNEL_MESSAGES                        EnumlogPublisherSyslogFacilityProp = "kernel-messages"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_MAIL_SYSTEM                            EnumlogPublisherSyslogFacilityProp = "mail-system"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_SYSLOGD_INTERNAL_MESSAGES              EnumlogPublisherSyslogFacilityProp = "syslogd-internal-messages"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_LINE_PRINTER                           EnumlogPublisherSyslogFacilityProp = "line-printer"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_NETWORK_NEWS                           EnumlogPublisherSyslogFacilityProp = "network-news"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_UUCP                                   EnumlogPublisherSyslogFacilityProp = "uucp"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_CLOCK_DAEMON                           EnumlogPublisherSyslogFacilityProp = "clock-daemon"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_FTP_DAEMON                             EnumlogPublisherSyslogFacilityProp = "ftp-daemon"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_NTP_DAEMON                             EnumlogPublisherSyslogFacilityProp = "ntp-daemon"
	ENUMLOGPUBLISHERSYSLOGFACILITYPROP_CLOCK_DAEMON_ALTERNATIVE               EnumlogPublisherSyslogFacilityProp = "clock-daemon-alternative"
)

// All allowed values of EnumlogPublisherSyslogFacilityProp enum
var AllowedEnumlogPublisherSyslogFacilityPropEnumValues = []EnumlogPublisherSyslogFacilityProp{
	"user-level-messages",
	"system-daemons",
	"security-and-authorization",
	"security-and-authorization-alternative",
	"log-audit",
	"log-alert",
	"local-use-0",
	"local-use-1",
	"local-use-2",
	"local-use-3",
	"local-use-4",
	"local-use-5",
	"local-use-6",
	"local-use-7",
	"kernel-messages",
	"mail-system",
	"syslogd-internal-messages",
	"line-printer",
	"network-news",
	"uucp",
	"clock-daemon",
	"ftp-daemon",
	"ntp-daemon",
	"clock-daemon-alternative",
}

func (v *EnumlogPublisherSyslogFacilityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumlogPublisherSyslogFacilityProp(value)
	for _, existing := range AllowedEnumlogPublisherSyslogFacilityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumlogPublisherSyslogFacilityProp", value)
}

// NewEnumlogPublisherSyslogFacilityPropFromValue returns a pointer to a valid EnumlogPublisherSyslogFacilityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumlogPublisherSyslogFacilityPropFromValue(v string) (*EnumlogPublisherSyslogFacilityProp, error) {
	ev := EnumlogPublisherSyslogFacilityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumlogPublisherSyslogFacilityProp: valid values are %v", v, AllowedEnumlogPublisherSyslogFacilityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumlogPublisherSyslogFacilityProp) IsValid() bool {
	for _, existing := range AllowedEnumlogPublisherSyslogFacilityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumlog-publisher-syslogFacilityProp value
func (v EnumlogPublisherSyslogFacilityProp) Ptr() *EnumlogPublisherSyslogFacilityProp {
	return &v
}

type NullableEnumlogPublisherSyslogFacilityProp struct {
	value *EnumlogPublisherSyslogFacilityProp
	isSet bool
}

func (v NullableEnumlogPublisherSyslogFacilityProp) Get() *EnumlogPublisherSyslogFacilityProp {
	return v.value
}

func (v *NullableEnumlogPublisherSyslogFacilityProp) Set(val *EnumlogPublisherSyslogFacilityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumlogPublisherSyslogFacilityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumlogPublisherSyslogFacilityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumlogPublisherSyslogFacilityProp(val *EnumlogPublisherSyslogFacilityProp) *NullableEnumlogPublisherSyslogFacilityProp {
	return &NullableEnumlogPublisherSyslogFacilityProp{value: val, isSet: true}
}

func (v NullableEnumlogPublisherSyslogFacilityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumlogPublisherSyslogFacilityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
