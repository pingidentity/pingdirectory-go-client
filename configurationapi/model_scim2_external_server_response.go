/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the Scim2ExternalServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Scim2ExternalServerResponse{}

// Scim2ExternalServerResponse struct for Scim2ExternalServerResponse
type Scim2ExternalServerResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []Enumscim2ExternalServerSchemaUrn                 `json:"schemas"`
	// Name of the External Server
	Id string `json:"id"`
	// The base URL for the SCIMv2 service. It must include the hostname, port, and base path to use to make SCIMv2 calls.
	ScimServiceURL string `json:"scimServiceURL"`
	// A reference to an HTTP proxy server that should be used for requests sent to the SCIMv2 service.
	HttpProxyExternalServer *string `json:"httpProxyExternalServer,omitempty"`
	// The key manager provider to use if it is necessary to present a client certificate to the SCIMv2 server.
	KeyManagerProvider *string `json:"keyManagerProvider,omitempty"`
	// The trust manager provider to use to determine whether to trust the certificate presented by the SCIMv2 server during TLS negotiation.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	// The nickname (alias) of the entry in the associated key store that holds the client certificate chain to present to the SCIMv2 server during TLS negotiation.
	SslCertNickname            *string                                                `json:"sslCertNickname,omitempty"`
	HostnameVerificationMethod *EnumexternalServerScim2HostnameVerificationMethodProp `json:"hostnameVerificationMethod,omitempty"`
	// The method to use to authorize requests sent to the SCIMv2 server.
	HttpAuthorizationMethod string `json:"httpAuthorizationMethod"`
	// The maximum length of time to wait for a response from the SCIMv2 server when processing operations.
	ResponseTimeout *string `json:"responseTimeout,omitempty"`
	// The maximum length of time that a client instance should remain active before being recreated.
	ClientReconnectInterval *string `json:"clientReconnectInterval,omitempty"`
	// A description for this External Server
	Description *string `json:"description,omitempty"`
}

// NewScim2ExternalServerResponse instantiates a new Scim2ExternalServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScim2ExternalServerResponse(schemas []Enumscim2ExternalServerSchemaUrn, id string, scimServiceURL string, httpAuthorizationMethod string) *Scim2ExternalServerResponse {
	this := Scim2ExternalServerResponse{}
	this.Schemas = schemas
	this.Id = id
	this.ScimServiceURL = scimServiceURL
	this.HttpAuthorizationMethod = httpAuthorizationMethod
	return &this
}

// NewScim2ExternalServerResponseWithDefaults instantiates a new Scim2ExternalServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScim2ExternalServerResponseWithDefaults() *Scim2ExternalServerResponse {
	this := Scim2ExternalServerResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *Scim2ExternalServerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *Scim2ExternalServerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *Scim2ExternalServerResponse) GetSchemas() []Enumscim2ExternalServerSchemaUrn {
	if o == nil {
		var ret []Enumscim2ExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetSchemasOk() ([]Enumscim2ExternalServerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *Scim2ExternalServerResponse) SetSchemas(v []Enumscim2ExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *Scim2ExternalServerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Scim2ExternalServerResponse) SetId(v string) {
	o.Id = v
}

// GetScimServiceURL returns the ScimServiceURL field value
func (o *Scim2ExternalServerResponse) GetScimServiceURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScimServiceURL
}

// GetScimServiceURLOk returns a tuple with the ScimServiceURL field value
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetScimServiceURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScimServiceURL, true
}

// SetScimServiceURL sets field value
func (o *Scim2ExternalServerResponse) SetScimServiceURL(v string) {
	o.ScimServiceURL = v
}

// GetHttpProxyExternalServer returns the HttpProxyExternalServer field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetHttpProxyExternalServer() string {
	if o == nil || IsNil(o.HttpProxyExternalServer) {
		var ret string
		return ret
	}
	return *o.HttpProxyExternalServer
}

// GetHttpProxyExternalServerOk returns a tuple with the HttpProxyExternalServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetHttpProxyExternalServerOk() (*string, bool) {
	if o == nil || IsNil(o.HttpProxyExternalServer) {
		return nil, false
	}
	return o.HttpProxyExternalServer, true
}

// HasHttpProxyExternalServer returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasHttpProxyExternalServer() bool {
	if o != nil && !IsNil(o.HttpProxyExternalServer) {
		return true
	}

	return false
}

// SetHttpProxyExternalServer gets a reference to the given string and assigns it to the HttpProxyExternalServer field.
func (o *Scim2ExternalServerResponse) SetHttpProxyExternalServer(v string) {
	o.HttpProxyExternalServer = &v
}

// GetKeyManagerProvider returns the KeyManagerProvider field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetKeyManagerProvider() string {
	if o == nil || IsNil(o.KeyManagerProvider) {
		var ret string
		return ret
	}
	return *o.KeyManagerProvider
}

// GetKeyManagerProviderOk returns a tuple with the KeyManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetKeyManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.KeyManagerProvider) {
		return nil, false
	}
	return o.KeyManagerProvider, true
}

// HasKeyManagerProvider returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasKeyManagerProvider() bool {
	if o != nil && !IsNil(o.KeyManagerProvider) {
		return true
	}

	return false
}

// SetKeyManagerProvider gets a reference to the given string and assigns it to the KeyManagerProvider field.
func (o *Scim2ExternalServerResponse) SetKeyManagerProvider(v string) {
	o.KeyManagerProvider = &v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetTrustManagerProvider() string {
	if o == nil || IsNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustManagerProvider) {
		return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasTrustManagerProvider() bool {
	if o != nil && !IsNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *Scim2ExternalServerResponse) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetSslCertNickname returns the SslCertNickname field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetSslCertNickname() string {
	if o == nil || IsNil(o.SslCertNickname) {
		var ret string
		return ret
	}
	return *o.SslCertNickname
}

// GetSslCertNicknameOk returns a tuple with the SslCertNickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetSslCertNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.SslCertNickname) {
		return nil, false
	}
	return o.SslCertNickname, true
}

// HasSslCertNickname returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasSslCertNickname() bool {
	if o != nil && !IsNil(o.SslCertNickname) {
		return true
	}

	return false
}

// SetSslCertNickname gets a reference to the given string and assigns it to the SslCertNickname field.
func (o *Scim2ExternalServerResponse) SetSslCertNickname(v string) {
	o.SslCertNickname = &v
}

// GetHostnameVerificationMethod returns the HostnameVerificationMethod field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetHostnameVerificationMethod() EnumexternalServerScim2HostnameVerificationMethodProp {
	if o == nil || IsNil(o.HostnameVerificationMethod) {
		var ret EnumexternalServerScim2HostnameVerificationMethodProp
		return ret
	}
	return *o.HostnameVerificationMethod
}

// GetHostnameVerificationMethodOk returns a tuple with the HostnameVerificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetHostnameVerificationMethodOk() (*EnumexternalServerScim2HostnameVerificationMethodProp, bool) {
	if o == nil || IsNil(o.HostnameVerificationMethod) {
		return nil, false
	}
	return o.HostnameVerificationMethod, true
}

// HasHostnameVerificationMethod returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasHostnameVerificationMethod() bool {
	if o != nil && !IsNil(o.HostnameVerificationMethod) {
		return true
	}

	return false
}

// SetHostnameVerificationMethod gets a reference to the given EnumexternalServerScim2HostnameVerificationMethodProp and assigns it to the HostnameVerificationMethod field.
func (o *Scim2ExternalServerResponse) SetHostnameVerificationMethod(v EnumexternalServerScim2HostnameVerificationMethodProp) {
	o.HostnameVerificationMethod = &v
}

// GetHttpAuthorizationMethod returns the HttpAuthorizationMethod field value
func (o *Scim2ExternalServerResponse) GetHttpAuthorizationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HttpAuthorizationMethod
}

// GetHttpAuthorizationMethodOk returns a tuple with the HttpAuthorizationMethod field value
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetHttpAuthorizationMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HttpAuthorizationMethod, true
}

// SetHttpAuthorizationMethod sets field value
func (o *Scim2ExternalServerResponse) SetHttpAuthorizationMethod(v string) {
	o.HttpAuthorizationMethod = v
}

// GetResponseTimeout returns the ResponseTimeout field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetResponseTimeout() string {
	if o == nil || IsNil(o.ResponseTimeout) {
		var ret string
		return ret
	}
	return *o.ResponseTimeout
}

// GetResponseTimeoutOk returns a tuple with the ResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetResponseTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseTimeout) {
		return nil, false
	}
	return o.ResponseTimeout, true
}

// HasResponseTimeout returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasResponseTimeout() bool {
	if o != nil && !IsNil(o.ResponseTimeout) {
		return true
	}

	return false
}

// SetResponseTimeout gets a reference to the given string and assigns it to the ResponseTimeout field.
func (o *Scim2ExternalServerResponse) SetResponseTimeout(v string) {
	o.ResponseTimeout = &v
}

// GetClientReconnectInterval returns the ClientReconnectInterval field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetClientReconnectInterval() string {
	if o == nil || IsNil(o.ClientReconnectInterval) {
		var ret string
		return ret
	}
	return *o.ClientReconnectInterval
}

// GetClientReconnectIntervalOk returns a tuple with the ClientReconnectInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetClientReconnectIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.ClientReconnectInterval) {
		return nil, false
	}
	return o.ClientReconnectInterval, true
}

// HasClientReconnectInterval returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasClientReconnectInterval() bool {
	if o != nil && !IsNil(o.ClientReconnectInterval) {
		return true
	}

	return false
}

// SetClientReconnectInterval gets a reference to the given string and assigns it to the ClientReconnectInterval field.
func (o *Scim2ExternalServerResponse) SetClientReconnectInterval(v string) {
	o.ClientReconnectInterval = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Scim2ExternalServerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Scim2ExternalServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Scim2ExternalServerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Scim2ExternalServerResponse) SetDescription(v string) {
	o.Description = &v
}

func (o Scim2ExternalServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Scim2ExternalServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["scimServiceURL"] = o.ScimServiceURL
	if !IsNil(o.HttpProxyExternalServer) {
		toSerialize["httpProxyExternalServer"] = o.HttpProxyExternalServer
	}
	if !IsNil(o.KeyManagerProvider) {
		toSerialize["keyManagerProvider"] = o.KeyManagerProvider
	}
	if !IsNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	if !IsNil(o.SslCertNickname) {
		toSerialize["sslCertNickname"] = o.SslCertNickname
	}
	if !IsNil(o.HostnameVerificationMethod) {
		toSerialize["hostnameVerificationMethod"] = o.HostnameVerificationMethod
	}
	toSerialize["httpAuthorizationMethod"] = o.HttpAuthorizationMethod
	if !IsNil(o.ResponseTimeout) {
		toSerialize["responseTimeout"] = o.ResponseTimeout
	}
	if !IsNil(o.ClientReconnectInterval) {
		toSerialize["clientReconnectInterval"] = o.ClientReconnectInterval
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableScim2ExternalServerResponse struct {
	value *Scim2ExternalServerResponse
	isSet bool
}

func (v NullableScim2ExternalServerResponse) Get() *Scim2ExternalServerResponse {
	return v.value
}

func (v *NullableScim2ExternalServerResponse) Set(val *Scim2ExternalServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScim2ExternalServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScim2ExternalServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScim2ExternalServerResponse(val *Scim2ExternalServerResponse) *NullableScim2ExternalServerResponse {
	return &NullableScim2ExternalServerResponse{value: val, isSet: true}
}

func (v NullableScim2ExternalServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScim2ExternalServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
