/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn the model 'EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn'
type EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn string

// List of Enuminverted-static-group-referential-integrity-pluginSchemaUrn
const (
	ENUMINVERTEDSTATICGROUPREFERENTIALINTEGRITYPLUGINSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0PLUGININVERTED_STATIC_GROUP_REFERENTIAL_INTEGRITY EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:plugin:inverted-static-group-referential-integrity"
)

// All allowed values of EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn enum
var AllowedEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnEnumValues = []EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:plugin:inverted-static-group-referential-integrity",
}

func (v *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn(value)
	for _, existing := range AllowedEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn", value)
}

// NewEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnFromValue returns a pointer to a valid EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnFromValue(v string) (*EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn, error) {
	ev := EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn: valid values are %v", v, AllowedEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enuminverted-static-group-referential-integrity-pluginSchemaUrn value
func (v EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) Ptr() *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn {
	return &v
}

type NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn struct {
	value *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn
	isSet bool
}

func (v NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) Get() *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn {
	return v.value
}

func (v *NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) Set(val *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn(val *EnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) *NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn {
	return &NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn{value: val, isSet: true}
}

func (v NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnuminvertedStaticGroupReferentialIntegrityPluginSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
