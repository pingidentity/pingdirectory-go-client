/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AggregateSearchEntryCriteriaResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AggregateSearchEntryCriteriaResponse{}

// AggregateSearchEntryCriteriaResponse struct for AggregateSearchEntryCriteriaResponse
type AggregateSearchEntryCriteriaResponse struct {
	Schemas []EnumaggregateSearchEntryCriteriaSchemaUrn `json:"schemas"`
	// Specifies a search entry criteria object that must match the associated search result entry in order to match the aggregate search entry criteria. If one or more all-included search entry criteria objects are provided, then a search result entry must match all of them in order to match the aggregate search entry criteria.
	AllIncludedSearchEntryCriteria []string `json:"allIncludedSearchEntryCriteria,omitempty"`
	// Specifies a search entry criteria object that may match the associated search result entry in order to match the aggregate search entry criteria. If one or more any-included search entry criteria objects are provided, then a search result entry must match at least one of them in order to match the aggregate search entry criteria.
	AnyIncludedSearchEntryCriteria []string `json:"anyIncludedSearchEntryCriteria,omitempty"`
	// Specifies a search entry criteria object that should not match the associated search result entry in order to match the aggregate search entry criteria. If one or more not-all-included search entry criteria objects are provided, then a search result entry must not match all of them (that is, it may match zero or more of them, but it must not match all of them) in order to match the aggregate search entry criteria.
	NotAllIncludedSearchEntryCriteria []string `json:"notAllIncludedSearchEntryCriteria,omitempty"`
	// Specifies a search entry criteria object that must not match the associated search result entry in order to match the aggregate search entry criteria. If one or more none-included search entry criteria objects are provided, then a search result entry must not match any of them in order to match the aggregate search entry criteria.
	NoneIncludedSearchEntryCriteria []string `json:"noneIncludedSearchEntryCriteria,omitempty"`
	// A description for this Search Entry Criteria
	Description                                   *string                                            `json:"description,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Search Entry Criteria
	Id string `json:"id"`
}

// NewAggregateSearchEntryCriteriaResponse instantiates a new AggregateSearchEntryCriteriaResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAggregateSearchEntryCriteriaResponse(schemas []EnumaggregateSearchEntryCriteriaSchemaUrn, id string) *AggregateSearchEntryCriteriaResponse {
	this := AggregateSearchEntryCriteriaResponse{}
	this.Schemas = schemas
	this.Id = id
	return &this
}

// NewAggregateSearchEntryCriteriaResponseWithDefaults instantiates a new AggregateSearchEntryCriteriaResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAggregateSearchEntryCriteriaResponseWithDefaults() *AggregateSearchEntryCriteriaResponse {
	this := AggregateSearchEntryCriteriaResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AggregateSearchEntryCriteriaResponse) GetSchemas() []EnumaggregateSearchEntryCriteriaSchemaUrn {
	if o == nil {
		var ret []EnumaggregateSearchEntryCriteriaSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetSchemasOk() ([]EnumaggregateSearchEntryCriteriaSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AggregateSearchEntryCriteriaResponse) SetSchemas(v []EnumaggregateSearchEntryCriteriaSchemaUrn) {
	o.Schemas = v
}

// GetAllIncludedSearchEntryCriteria returns the AllIncludedSearchEntryCriteria field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetAllIncludedSearchEntryCriteria() []string {
	if o == nil || IsNil(o.AllIncludedSearchEntryCriteria) {
		var ret []string
		return ret
	}
	return o.AllIncludedSearchEntryCriteria
}

// GetAllIncludedSearchEntryCriteriaOk returns a tuple with the AllIncludedSearchEntryCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetAllIncludedSearchEntryCriteriaOk() ([]string, bool) {
	if o == nil || IsNil(o.AllIncludedSearchEntryCriteria) {
		return nil, false
	}
	return o.AllIncludedSearchEntryCriteria, true
}

// HasAllIncludedSearchEntryCriteria returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasAllIncludedSearchEntryCriteria() bool {
	if o != nil && !IsNil(o.AllIncludedSearchEntryCriteria) {
		return true
	}

	return false
}

// SetAllIncludedSearchEntryCriteria gets a reference to the given []string and assigns it to the AllIncludedSearchEntryCriteria field.
func (o *AggregateSearchEntryCriteriaResponse) SetAllIncludedSearchEntryCriteria(v []string) {
	o.AllIncludedSearchEntryCriteria = v
}

// GetAnyIncludedSearchEntryCriteria returns the AnyIncludedSearchEntryCriteria field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetAnyIncludedSearchEntryCriteria() []string {
	if o == nil || IsNil(o.AnyIncludedSearchEntryCriteria) {
		var ret []string
		return ret
	}
	return o.AnyIncludedSearchEntryCriteria
}

// GetAnyIncludedSearchEntryCriteriaOk returns a tuple with the AnyIncludedSearchEntryCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetAnyIncludedSearchEntryCriteriaOk() ([]string, bool) {
	if o == nil || IsNil(o.AnyIncludedSearchEntryCriteria) {
		return nil, false
	}
	return o.AnyIncludedSearchEntryCriteria, true
}

// HasAnyIncludedSearchEntryCriteria returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasAnyIncludedSearchEntryCriteria() bool {
	if o != nil && !IsNil(o.AnyIncludedSearchEntryCriteria) {
		return true
	}

	return false
}

// SetAnyIncludedSearchEntryCriteria gets a reference to the given []string and assigns it to the AnyIncludedSearchEntryCriteria field.
func (o *AggregateSearchEntryCriteriaResponse) SetAnyIncludedSearchEntryCriteria(v []string) {
	o.AnyIncludedSearchEntryCriteria = v
}

// GetNotAllIncludedSearchEntryCriteria returns the NotAllIncludedSearchEntryCriteria field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetNotAllIncludedSearchEntryCriteria() []string {
	if o == nil || IsNil(o.NotAllIncludedSearchEntryCriteria) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedSearchEntryCriteria
}

// GetNotAllIncludedSearchEntryCriteriaOk returns a tuple with the NotAllIncludedSearchEntryCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetNotAllIncludedSearchEntryCriteriaOk() ([]string, bool) {
	if o == nil || IsNil(o.NotAllIncludedSearchEntryCriteria) {
		return nil, false
	}
	return o.NotAllIncludedSearchEntryCriteria, true
}

// HasNotAllIncludedSearchEntryCriteria returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasNotAllIncludedSearchEntryCriteria() bool {
	if o != nil && !IsNil(o.NotAllIncludedSearchEntryCriteria) {
		return true
	}

	return false
}

// SetNotAllIncludedSearchEntryCriteria gets a reference to the given []string and assigns it to the NotAllIncludedSearchEntryCriteria field.
func (o *AggregateSearchEntryCriteriaResponse) SetNotAllIncludedSearchEntryCriteria(v []string) {
	o.NotAllIncludedSearchEntryCriteria = v
}

// GetNoneIncludedSearchEntryCriteria returns the NoneIncludedSearchEntryCriteria field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetNoneIncludedSearchEntryCriteria() []string {
	if o == nil || IsNil(o.NoneIncludedSearchEntryCriteria) {
		var ret []string
		return ret
	}
	return o.NoneIncludedSearchEntryCriteria
}

// GetNoneIncludedSearchEntryCriteriaOk returns a tuple with the NoneIncludedSearchEntryCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetNoneIncludedSearchEntryCriteriaOk() ([]string, bool) {
	if o == nil || IsNil(o.NoneIncludedSearchEntryCriteria) {
		return nil, false
	}
	return o.NoneIncludedSearchEntryCriteria, true
}

// HasNoneIncludedSearchEntryCriteria returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasNoneIncludedSearchEntryCriteria() bool {
	if o != nil && !IsNil(o.NoneIncludedSearchEntryCriteria) {
		return true
	}

	return false
}

// SetNoneIncludedSearchEntryCriteria gets a reference to the given []string and assigns it to the NoneIncludedSearchEntryCriteria field.
func (o *AggregateSearchEntryCriteriaResponse) SetNoneIncludedSearchEntryCriteria(v []string) {
	o.NoneIncludedSearchEntryCriteria = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AggregateSearchEntryCriteriaResponse) SetDescription(v string) {
	o.Description = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *AggregateSearchEntryCriteriaResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *AggregateSearchEntryCriteriaResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *AggregateSearchEntryCriteriaResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *AggregateSearchEntryCriteriaResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *AggregateSearchEntryCriteriaResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AggregateSearchEntryCriteriaResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AggregateSearchEntryCriteriaResponse) SetId(v string) {
	o.Id = v
}

func (o AggregateSearchEntryCriteriaResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AggregateSearchEntryCriteriaResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.AllIncludedSearchEntryCriteria) {
		toSerialize["allIncludedSearchEntryCriteria"] = o.AllIncludedSearchEntryCriteria
	}
	if !IsNil(o.AnyIncludedSearchEntryCriteria) {
		toSerialize["anyIncludedSearchEntryCriteria"] = o.AnyIncludedSearchEntryCriteria
	}
	if !IsNil(o.NotAllIncludedSearchEntryCriteria) {
		toSerialize["notAllIncludedSearchEntryCriteria"] = o.NotAllIncludedSearchEntryCriteria
	}
	if !IsNil(o.NoneIncludedSearchEntryCriteria) {
		toSerialize["noneIncludedSearchEntryCriteria"] = o.NoneIncludedSearchEntryCriteria
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableAggregateSearchEntryCriteriaResponse struct {
	value *AggregateSearchEntryCriteriaResponse
	isSet bool
}

func (v NullableAggregateSearchEntryCriteriaResponse) Get() *AggregateSearchEntryCriteriaResponse {
	return v.value
}

func (v *NullableAggregateSearchEntryCriteriaResponse) Set(val *AggregateSearchEntryCriteriaResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAggregateSearchEntryCriteriaResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAggregateSearchEntryCriteriaResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAggregateSearchEntryCriteriaResponse(val *AggregateSearchEntryCriteriaResponse) *NullableAggregateSearchEntryCriteriaResponse {
	return &NullableAggregateSearchEntryCriteriaResponse{value: val, isSet: true}
}

func (v NullableAggregateSearchEntryCriteriaResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAggregateSearchEntryCriteriaResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
