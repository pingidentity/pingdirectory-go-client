/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// GroupImplementationListResponseResourcesInner - struct for GroupImplementationListResponseResourcesInner
type GroupImplementationListResponseResourcesInner struct {
	DynamicGroupImplementationResponse       *DynamicGroupImplementationResponse
	StaticGroupImplementationResponse        *StaticGroupImplementationResponse
	VirtualStaticGroupImplementationResponse *VirtualStaticGroupImplementationResponse
}

// DynamicGroupImplementationResponseAsGroupImplementationListResponseResourcesInner is a convenience function that returns DynamicGroupImplementationResponse wrapped in GroupImplementationListResponseResourcesInner
func DynamicGroupImplementationResponseAsGroupImplementationListResponseResourcesInner(v *DynamicGroupImplementationResponse) GroupImplementationListResponseResourcesInner {
	return GroupImplementationListResponseResourcesInner{
		DynamicGroupImplementationResponse: v,
	}
}

// StaticGroupImplementationResponseAsGroupImplementationListResponseResourcesInner is a convenience function that returns StaticGroupImplementationResponse wrapped in GroupImplementationListResponseResourcesInner
func StaticGroupImplementationResponseAsGroupImplementationListResponseResourcesInner(v *StaticGroupImplementationResponse) GroupImplementationListResponseResourcesInner {
	return GroupImplementationListResponseResourcesInner{
		StaticGroupImplementationResponse: v,
	}
}

// VirtualStaticGroupImplementationResponseAsGroupImplementationListResponseResourcesInner is a convenience function that returns VirtualStaticGroupImplementationResponse wrapped in GroupImplementationListResponseResourcesInner
func VirtualStaticGroupImplementationResponseAsGroupImplementationListResponseResourcesInner(v *VirtualStaticGroupImplementationResponse) GroupImplementationListResponseResourcesInner {
	return GroupImplementationListResponseResourcesInner{
		VirtualStaticGroupImplementationResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GroupImplementationListResponseResourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DynamicGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.DynamicGroupImplementationResponse)
	if err == nil {
		jsonDynamicGroupImplementationResponse, _ := json.Marshal(dst.DynamicGroupImplementationResponse)
		if string(jsonDynamicGroupImplementationResponse) == "{}" { // empty struct
			dst.DynamicGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.DynamicGroupImplementationResponse = nil
	}

	// try to unmarshal data into StaticGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.StaticGroupImplementationResponse)
	if err == nil {
		jsonStaticGroupImplementationResponse, _ := json.Marshal(dst.StaticGroupImplementationResponse)
		if string(jsonStaticGroupImplementationResponse) == "{}" { // empty struct
			dst.StaticGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.StaticGroupImplementationResponse = nil
	}

	// try to unmarshal data into VirtualStaticGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.VirtualStaticGroupImplementationResponse)
	if err == nil {
		jsonVirtualStaticGroupImplementationResponse, _ := json.Marshal(dst.VirtualStaticGroupImplementationResponse)
		if string(jsonVirtualStaticGroupImplementationResponse) == "{}" { // empty struct
			dst.VirtualStaticGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.VirtualStaticGroupImplementationResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DynamicGroupImplementationResponse = nil
		dst.StaticGroupImplementationResponse = nil
		dst.VirtualStaticGroupImplementationResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GroupImplementationListResponseResourcesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GroupImplementationListResponseResourcesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GroupImplementationListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	if src.DynamicGroupImplementationResponse != nil {
		return json.Marshal(&src.DynamicGroupImplementationResponse)
	}

	if src.StaticGroupImplementationResponse != nil {
		return json.Marshal(&src.StaticGroupImplementationResponse)
	}

	if src.VirtualStaticGroupImplementationResponse != nil {
		return json.Marshal(&src.VirtualStaticGroupImplementationResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GroupImplementationListResponseResourcesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DynamicGroupImplementationResponse != nil {
		return obj.DynamicGroupImplementationResponse
	}

	if obj.StaticGroupImplementationResponse != nil {
		return obj.StaticGroupImplementationResponse
	}

	if obj.VirtualStaticGroupImplementationResponse != nil {
		return obj.VirtualStaticGroupImplementationResponse
	}

	// all schemas are nil
	return nil
}

type NullableGroupImplementationListResponseResourcesInner struct {
	value *GroupImplementationListResponseResourcesInner
	isSet bool
}

func (v NullableGroupImplementationListResponseResourcesInner) Get() *GroupImplementationListResponseResourcesInner {
	return v.value
}

func (v *NullableGroupImplementationListResponseResourcesInner) Set(val *GroupImplementationListResponseResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGroupImplementationListResponseResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGroupImplementationListResponseResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGroupImplementationListResponseResourcesInner(val *GroupImplementationListResponseResourcesInner) *NullableGroupImplementationListResponseResourcesInner {
	return &NullableGroupImplementationListResponseResourcesInner{value: val, isSet: true}
}

func (v NullableGroupImplementationListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGroupImplementationListResponseResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
