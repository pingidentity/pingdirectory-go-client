/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the PassThroughAuthenticationPluginResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PassThroughAuthenticationPluginResponse{}

// PassThroughAuthenticationPluginResponse struct for PassThroughAuthenticationPluginResponse
type PassThroughAuthenticationPluginResponse struct {
	Schemas    []EnumpassThroughAuthenticationPluginSchemaUrn `json:"schemas"`
	PluginType []EnumpluginPluginTypeProp                     `json:"pluginType"`
	// Specifies the LDAP external server(s) to which authentication attempts should be forwarded.
	Server []string `json:"server"`
	// Indicates whether the bind attempt should first be attempted against the local server. Depending on the value of the override-local-password property, the bind attempt may then be attempted against a remote server if the local bind fails.
	TryLocalBind bool `json:"tryLocalBind"`
	// Indicates whether the bind attempt should be attempted against a remote server in the event that the local bind fails but the local password is present.
	OverrideLocalPassword bool `json:"overrideLocalPassword"`
	// Indicates whether the local password value should be updated to the value used in the bind request in the event that the local bind fails but the remote bind succeeds.
	UpdateLocalPassword bool `json:"updateLocalPassword"`
	// Indicates whether updates to the local password value should accept passwords that do not meet password policy constraints.
	AllowLaxPassThroughAuthenticationPasswords *bool                          `json:"allowLaxPassThroughAuthenticationPasswords,omitempty"`
	ServerAccessMode                           EnumpluginServerAccessModeProp `json:"serverAccessMode"`
	// The base DNs for the local users whose authentication attempts may be passed through to an alternate server.
	IncludedLocalEntryBaseDN []string `json:"includedLocalEntryBaseDN,omitempty"`
	// Specifies a set of connection criteria that must match the client associated with the bind request for the bind to be passed through to an alternate server.
	ConnectionCriteria *string `json:"connectionCriteria,omitempty"`
	// Specifies a set of request criteria that must match the bind request for the bind to be passed through to an alternate server.
	RequestCriteria *string `json:"requestCriteria,omitempty"`
	// Specifies one or more DN mappings that may be used to transform bind DNs before attempting to bind to the external servers.
	DnMap []string `json:"dnMap,omitempty"`
	// A pattern to use to construct the bind DN for the simple bind request to send to the remote server. This may consist of a combination of static text and attribute values and other directives enclosed in curly braces.  For example, the value \"cn={cn},ou=People,dc=example,dc=com\" indicates that the remote bind DN should be constructed from the text \"cn=\" followed by the value of the local entry's cn attribute followed by the text \"ou=People,dc=example,dc=com\". If an attribute contains the value to use as the bind DN for pass-through authentication, then the pattern may simply be the name of that attribute in curly braces (e.g., if the seeAlso attribute contains the bind DN for the target user, then a bind DN pattern of \"{seeAlso}\" would be appropriate).  Note that a bind DN pattern can be used to construct a bind DN that is not actually a valid LDAP distinguished name. For example, if authentication is being passed through to a Microsoft Active Directory server, then a bind DN pattern could be used to construct a user principal name (UPN) as an alternative to a distinguished name.
	BindDNPattern *string `json:"bindDNPattern,omitempty"`
	// The base DN to use when searching for the user entry using a filter constructed from the pattern defined in the search-filter-pattern property. If no base DN is specified, the null DN will be used as the search base DN.
	SearchBaseDN *string `json:"searchBaseDN,omitempty"`
	// A pattern to use to construct a filter to use when searching an external server for the entry of the user as whom to bind. For example, \"(mail={uid:ldapFilterEscape}@example.com)\" would construct a search filter to search for a user whose entry in the local server contains a uid attribute whose value appears before \"@example.com\" in the mail attribute in the external server. Note that the \"ldapFilterEscape\" modifier should almost always be used with attributes specified in the pattern.
	SearchFilterPattern *string `json:"searchFilterPattern,omitempty"`
	// Specifies the initial number of connections to establish to each external server against which authentication may be attempted.
	InitialConnections int64 `json:"initialConnections"`
	// Specifies the maximum number of connections to maintain to each external server against which authentication may be attempted. This value must be greater than or equal to the value for the initial-connections property.
	MaxConnections int64 `json:"maxConnections"`
	// A description for this Plugin
	Description *string `json:"description,omitempty"`
	// Indicates whether the plug-in is enabled for use.
	Enabled bool `json:"enabled"`
	// Indicates whether the plug-in should be invoked for internal operations.
	InvokeForInternalOperations                   *bool                                              `json:"invokeForInternalOperations,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Plugin
	Id string `json:"id"`
}

// NewPassThroughAuthenticationPluginResponse instantiates a new PassThroughAuthenticationPluginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPassThroughAuthenticationPluginResponse(schemas []EnumpassThroughAuthenticationPluginSchemaUrn, pluginType []EnumpluginPluginTypeProp, server []string, tryLocalBind bool, overrideLocalPassword bool, updateLocalPassword bool, serverAccessMode EnumpluginServerAccessModeProp, initialConnections int64, maxConnections int64, enabled bool, id string) *PassThroughAuthenticationPluginResponse {
	this := PassThroughAuthenticationPluginResponse{}
	this.Schemas = schemas
	this.PluginType = pluginType
	this.Server = server
	this.TryLocalBind = tryLocalBind
	this.OverrideLocalPassword = overrideLocalPassword
	this.UpdateLocalPassword = updateLocalPassword
	this.ServerAccessMode = serverAccessMode
	this.InitialConnections = initialConnections
	this.MaxConnections = maxConnections
	this.Enabled = enabled
	this.Id = id
	return &this
}

// NewPassThroughAuthenticationPluginResponseWithDefaults instantiates a new PassThroughAuthenticationPluginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPassThroughAuthenticationPluginResponseWithDefaults() *PassThroughAuthenticationPluginResponse {
	this := PassThroughAuthenticationPluginResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *PassThroughAuthenticationPluginResponse) GetSchemas() []EnumpassThroughAuthenticationPluginSchemaUrn {
	if o == nil {
		var ret []EnumpassThroughAuthenticationPluginSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetSchemasOk() ([]EnumpassThroughAuthenticationPluginSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *PassThroughAuthenticationPluginResponse) SetSchemas(v []EnumpassThroughAuthenticationPluginSchemaUrn) {
	o.Schemas = v
}

// GetPluginType returns the PluginType field value
func (o *PassThroughAuthenticationPluginResponse) GetPluginType() []EnumpluginPluginTypeProp {
	if o == nil {
		var ret []EnumpluginPluginTypeProp
		return ret
	}

	return o.PluginType
}

// GetPluginTypeOk returns a tuple with the PluginType field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetPluginTypeOk() ([]EnumpluginPluginTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return o.PluginType, true
}

// SetPluginType sets field value
func (o *PassThroughAuthenticationPluginResponse) SetPluginType(v []EnumpluginPluginTypeProp) {
	o.PluginType = v
}

// GetServer returns the Server field value
func (o *PassThroughAuthenticationPluginResponse) GetServer() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Server
}

// GetServerOk returns a tuple with the Server field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetServerOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Server, true
}

// SetServer sets field value
func (o *PassThroughAuthenticationPluginResponse) SetServer(v []string) {
	o.Server = v
}

// GetTryLocalBind returns the TryLocalBind field value
func (o *PassThroughAuthenticationPluginResponse) GetTryLocalBind() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.TryLocalBind
}

// GetTryLocalBindOk returns a tuple with the TryLocalBind field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetTryLocalBindOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TryLocalBind, true
}

// SetTryLocalBind sets field value
func (o *PassThroughAuthenticationPluginResponse) SetTryLocalBind(v bool) {
	o.TryLocalBind = v
}

// GetOverrideLocalPassword returns the OverrideLocalPassword field value
func (o *PassThroughAuthenticationPluginResponse) GetOverrideLocalPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OverrideLocalPassword
}

// GetOverrideLocalPasswordOk returns a tuple with the OverrideLocalPassword field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetOverrideLocalPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OverrideLocalPassword, true
}

// SetOverrideLocalPassword sets field value
func (o *PassThroughAuthenticationPluginResponse) SetOverrideLocalPassword(v bool) {
	o.OverrideLocalPassword = v
}

// GetUpdateLocalPassword returns the UpdateLocalPassword field value
func (o *PassThroughAuthenticationPluginResponse) GetUpdateLocalPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UpdateLocalPassword
}

// GetUpdateLocalPasswordOk returns a tuple with the UpdateLocalPassword field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetUpdateLocalPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdateLocalPassword, true
}

// SetUpdateLocalPassword sets field value
func (o *PassThroughAuthenticationPluginResponse) SetUpdateLocalPassword(v bool) {
	o.UpdateLocalPassword = v
}

// GetAllowLaxPassThroughAuthenticationPasswords returns the AllowLaxPassThroughAuthenticationPasswords field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetAllowLaxPassThroughAuthenticationPasswords() bool {
	if o == nil || IsNil(o.AllowLaxPassThroughAuthenticationPasswords) {
		var ret bool
		return ret
	}
	return *o.AllowLaxPassThroughAuthenticationPasswords
}

// GetAllowLaxPassThroughAuthenticationPasswordsOk returns a tuple with the AllowLaxPassThroughAuthenticationPasswords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetAllowLaxPassThroughAuthenticationPasswordsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowLaxPassThroughAuthenticationPasswords) {
		return nil, false
	}
	return o.AllowLaxPassThroughAuthenticationPasswords, true
}

// HasAllowLaxPassThroughAuthenticationPasswords returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasAllowLaxPassThroughAuthenticationPasswords() bool {
	if o != nil && !IsNil(o.AllowLaxPassThroughAuthenticationPasswords) {
		return true
	}

	return false
}

// SetAllowLaxPassThroughAuthenticationPasswords gets a reference to the given bool and assigns it to the AllowLaxPassThroughAuthenticationPasswords field.
func (o *PassThroughAuthenticationPluginResponse) SetAllowLaxPassThroughAuthenticationPasswords(v bool) {
	o.AllowLaxPassThroughAuthenticationPasswords = &v
}

// GetServerAccessMode returns the ServerAccessMode field value
func (o *PassThroughAuthenticationPluginResponse) GetServerAccessMode() EnumpluginServerAccessModeProp {
	if o == nil {
		var ret EnumpluginServerAccessModeProp
		return ret
	}

	return o.ServerAccessMode
}

// GetServerAccessModeOk returns a tuple with the ServerAccessMode field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetServerAccessModeOk() (*EnumpluginServerAccessModeProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerAccessMode, true
}

// SetServerAccessMode sets field value
func (o *PassThroughAuthenticationPluginResponse) SetServerAccessMode(v EnumpluginServerAccessModeProp) {
	o.ServerAccessMode = v
}

// GetIncludedLocalEntryBaseDN returns the IncludedLocalEntryBaseDN field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetIncludedLocalEntryBaseDN() []string {
	if o == nil || IsNil(o.IncludedLocalEntryBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludedLocalEntryBaseDN
}

// GetIncludedLocalEntryBaseDNOk returns a tuple with the IncludedLocalEntryBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetIncludedLocalEntryBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedLocalEntryBaseDN) {
		return nil, false
	}
	return o.IncludedLocalEntryBaseDN, true
}

// HasIncludedLocalEntryBaseDN returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasIncludedLocalEntryBaseDN() bool {
	if o != nil && !IsNil(o.IncludedLocalEntryBaseDN) {
		return true
	}

	return false
}

// SetIncludedLocalEntryBaseDN gets a reference to the given []string and assigns it to the IncludedLocalEntryBaseDN field.
func (o *PassThroughAuthenticationPluginResponse) SetIncludedLocalEntryBaseDN(v []string) {
	o.IncludedLocalEntryBaseDN = v
}

// GetConnectionCriteria returns the ConnectionCriteria field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetConnectionCriteria() string {
	if o == nil || IsNil(o.ConnectionCriteria) {
		var ret string
		return ret
	}
	return *o.ConnectionCriteria
}

// GetConnectionCriteriaOk returns a tuple with the ConnectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetConnectionCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionCriteria) {
		return nil, false
	}
	return o.ConnectionCriteria, true
}

// HasConnectionCriteria returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasConnectionCriteria() bool {
	if o != nil && !IsNil(o.ConnectionCriteria) {
		return true
	}

	return false
}

// SetConnectionCriteria gets a reference to the given string and assigns it to the ConnectionCriteria field.
func (o *PassThroughAuthenticationPluginResponse) SetConnectionCriteria(v string) {
	o.ConnectionCriteria = &v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetRequestCriteria() string {
	if o == nil || IsNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.RequestCriteria) {
		return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasRequestCriteria() bool {
	if o != nil && !IsNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *PassThroughAuthenticationPluginResponse) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetDnMap returns the DnMap field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetDnMap() []string {
	if o == nil || IsNil(o.DnMap) {
		var ret []string
		return ret
	}
	return o.DnMap
}

// GetDnMapOk returns a tuple with the DnMap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetDnMapOk() ([]string, bool) {
	if o == nil || IsNil(o.DnMap) {
		return nil, false
	}
	return o.DnMap, true
}

// HasDnMap returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasDnMap() bool {
	if o != nil && !IsNil(o.DnMap) {
		return true
	}

	return false
}

// SetDnMap gets a reference to the given []string and assigns it to the DnMap field.
func (o *PassThroughAuthenticationPluginResponse) SetDnMap(v []string) {
	o.DnMap = v
}

// GetBindDNPattern returns the BindDNPattern field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetBindDNPattern() string {
	if o == nil || IsNil(o.BindDNPattern) {
		var ret string
		return ret
	}
	return *o.BindDNPattern
}

// GetBindDNPatternOk returns a tuple with the BindDNPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetBindDNPatternOk() (*string, bool) {
	if o == nil || IsNil(o.BindDNPattern) {
		return nil, false
	}
	return o.BindDNPattern, true
}

// HasBindDNPattern returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasBindDNPattern() bool {
	if o != nil && !IsNil(o.BindDNPattern) {
		return true
	}

	return false
}

// SetBindDNPattern gets a reference to the given string and assigns it to the BindDNPattern field.
func (o *PassThroughAuthenticationPluginResponse) SetBindDNPattern(v string) {
	o.BindDNPattern = &v
}

// GetSearchBaseDN returns the SearchBaseDN field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetSearchBaseDN() string {
	if o == nil || IsNil(o.SearchBaseDN) {
		var ret string
		return ret
	}
	return *o.SearchBaseDN
}

// GetSearchBaseDNOk returns a tuple with the SearchBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetSearchBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.SearchBaseDN) {
		return nil, false
	}
	return o.SearchBaseDN, true
}

// HasSearchBaseDN returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasSearchBaseDN() bool {
	if o != nil && !IsNil(o.SearchBaseDN) {
		return true
	}

	return false
}

// SetSearchBaseDN gets a reference to the given string and assigns it to the SearchBaseDN field.
func (o *PassThroughAuthenticationPluginResponse) SetSearchBaseDN(v string) {
	o.SearchBaseDN = &v
}

// GetSearchFilterPattern returns the SearchFilterPattern field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetSearchFilterPattern() string {
	if o == nil || IsNil(o.SearchFilterPattern) {
		var ret string
		return ret
	}
	return *o.SearchFilterPattern
}

// GetSearchFilterPatternOk returns a tuple with the SearchFilterPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetSearchFilterPatternOk() (*string, bool) {
	if o == nil || IsNil(o.SearchFilterPattern) {
		return nil, false
	}
	return o.SearchFilterPattern, true
}

// HasSearchFilterPattern returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasSearchFilterPattern() bool {
	if o != nil && !IsNil(o.SearchFilterPattern) {
		return true
	}

	return false
}

// SetSearchFilterPattern gets a reference to the given string and assigns it to the SearchFilterPattern field.
func (o *PassThroughAuthenticationPluginResponse) SetSearchFilterPattern(v string) {
	o.SearchFilterPattern = &v
}

// GetInitialConnections returns the InitialConnections field value
func (o *PassThroughAuthenticationPluginResponse) GetInitialConnections() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.InitialConnections
}

// GetInitialConnectionsOk returns a tuple with the InitialConnections field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetInitialConnectionsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InitialConnections, true
}

// SetInitialConnections sets field value
func (o *PassThroughAuthenticationPluginResponse) SetInitialConnections(v int64) {
	o.InitialConnections = v
}

// GetMaxConnections returns the MaxConnections field value
func (o *PassThroughAuthenticationPluginResponse) GetMaxConnections() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxConnections
}

// GetMaxConnectionsOk returns a tuple with the MaxConnections field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetMaxConnectionsOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxConnections, true
}

// SetMaxConnections sets field value
func (o *PassThroughAuthenticationPluginResponse) SetMaxConnections(v int64) {
	o.MaxConnections = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PassThroughAuthenticationPluginResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *PassThroughAuthenticationPluginResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *PassThroughAuthenticationPluginResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInvokeForInternalOperations returns the InvokeForInternalOperations field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetInvokeForInternalOperations() bool {
	if o == nil || IsNil(o.InvokeForInternalOperations) {
		var ret bool
		return ret
	}
	return *o.InvokeForInternalOperations
}

// GetInvokeForInternalOperationsOk returns a tuple with the InvokeForInternalOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetInvokeForInternalOperationsOk() (*bool, bool) {
	if o == nil || IsNil(o.InvokeForInternalOperations) {
		return nil, false
	}
	return o.InvokeForInternalOperations, true
}

// HasInvokeForInternalOperations returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasInvokeForInternalOperations() bool {
	if o != nil && !IsNil(o.InvokeForInternalOperations) {
		return true
	}

	return false
}

// SetInvokeForInternalOperations gets a reference to the given bool and assigns it to the InvokeForInternalOperations field.
func (o *PassThroughAuthenticationPluginResponse) SetInvokeForInternalOperations(v bool) {
	o.InvokeForInternalOperations = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *PassThroughAuthenticationPluginResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *PassThroughAuthenticationPluginResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *PassThroughAuthenticationPluginResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *PassThroughAuthenticationPluginResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *PassThroughAuthenticationPluginResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PassThroughAuthenticationPluginResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PassThroughAuthenticationPluginResponse) SetId(v string) {
	o.Id = v
}

func (o PassThroughAuthenticationPluginResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PassThroughAuthenticationPluginResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["pluginType"] = o.PluginType
	toSerialize["server"] = o.Server
	toSerialize["tryLocalBind"] = o.TryLocalBind
	toSerialize["overrideLocalPassword"] = o.OverrideLocalPassword
	toSerialize["updateLocalPassword"] = o.UpdateLocalPassword
	if !IsNil(o.AllowLaxPassThroughAuthenticationPasswords) {
		toSerialize["allowLaxPassThroughAuthenticationPasswords"] = o.AllowLaxPassThroughAuthenticationPasswords
	}
	toSerialize["serverAccessMode"] = o.ServerAccessMode
	if !IsNil(o.IncludedLocalEntryBaseDN) {
		toSerialize["includedLocalEntryBaseDN"] = o.IncludedLocalEntryBaseDN
	}
	if !IsNil(o.ConnectionCriteria) {
		toSerialize["connectionCriteria"] = o.ConnectionCriteria
	}
	if !IsNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !IsNil(o.DnMap) {
		toSerialize["dnMap"] = o.DnMap
	}
	if !IsNil(o.BindDNPattern) {
		toSerialize["bindDNPattern"] = o.BindDNPattern
	}
	if !IsNil(o.SearchBaseDN) {
		toSerialize["searchBaseDN"] = o.SearchBaseDN
	}
	if !IsNil(o.SearchFilterPattern) {
		toSerialize["searchFilterPattern"] = o.SearchFilterPattern
	}
	toSerialize["initialConnections"] = o.InitialConnections
	toSerialize["maxConnections"] = o.MaxConnections
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.InvokeForInternalOperations) {
		toSerialize["invokeForInternalOperations"] = o.InvokeForInternalOperations
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullablePassThroughAuthenticationPluginResponse struct {
	value *PassThroughAuthenticationPluginResponse
	isSet bool
}

func (v NullablePassThroughAuthenticationPluginResponse) Get() *PassThroughAuthenticationPluginResponse {
	return v.value
}

func (v *NullablePassThroughAuthenticationPluginResponse) Set(val *PassThroughAuthenticationPluginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePassThroughAuthenticationPluginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePassThroughAuthenticationPluginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePassThroughAuthenticationPluginResponse(val *PassThroughAuthenticationPluginResponse) *NullablePassThroughAuthenticationPluginResponse {
	return &NullablePassThroughAuthenticationPluginResponse{value: val, isSet: true}
}

func (v NullablePassThroughAuthenticationPluginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePassThroughAuthenticationPluginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
