/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the MappingScimResourceTypeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MappingScimResourceTypeResponse{}

// MappingScimResourceTypeResponse struct for MappingScimResourceTypeResponse
type MappingScimResourceTypeResponse struct {
	Schemas []EnummappingScimResourceTypeSchemaUrn `json:"schemas"`
	// Name of the SCIM Resource Type
	Id string `json:"id"`
	// The core schema enforced on core attributes at the top level of a SCIM resource representation exposed by thisMapping SCIM Resource Type.
	CoreSchema string `json:"coreSchema"`
	// Required additive schemas that are enforced on extension attributes in a SCIM resource representation for this Mapping SCIM Resource Type.
	RequiredSchemaExtension []string `json:"requiredSchemaExtension,omitempty"`
	// Optional additive schemas that are enforced on extension attributes in a SCIM resource representation for this Mapping SCIM Resource Type.
	OptionalSchemaExtension []string `json:"optionalSchemaExtension,omitempty"`
	// A description for this SCIM Resource Type
	Description *string `json:"description,omitempty"`
	// Indicates whether the SCIM Resource Type is enabled.
	Enabled bool `json:"enabled"`
	// The HTTP addressable endpoint of this SCIM Resource Type relative to the '/scim/v2' base URL. Do not include a leading '/'.
	Endpoint string `json:"endpoint"`
	// The maximum number of resources that the SCIM Resource Type should \"look through\" in the course of processing a search request.
	LookthroughLimit     *int64                                         `json:"lookthroughLimit,omitempty"`
	SchemaCheckingOption []EnumscimResourceTypeSchemaCheckingOptionProp `json:"schemaCheckingOption,omitempty"`
	// Specifies the LDAP structural object class that should be exposed by this SCIM Resource Type.
	StructuralLDAPObjectclass *string `json:"structuralLDAPObjectclass,omitempty"`
	// Specifies an auxiliary LDAP object class that should be exposed by this SCIM Resource Type.
	AuxiliaryLDAPObjectclass []string `json:"auxiliaryLDAPObjectclass,omitempty"`
	// Specifies the base DN of the branch of the LDAP directory that can be accessed by this SCIM Resource Type.
	IncludeBaseDN *string `json:"includeBaseDN,omitempty"`
	// The set of LDAP filters that define the LDAP entries that should be included in this SCIM Resource Type.
	IncludeFilter []string `json:"includeFilter,omitempty"`
	// Specifies the set of operational LDAP attributes to be provided by this SCIM Resource Type.
	IncludeOperationalAttribute []string `json:"includeOperationalAttribute,omitempty"`
	// Specifies the template to use for the DN when creating new entries.
	CreateDNPattern                               *string                                            `json:"createDNPattern,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewMappingScimResourceTypeResponse instantiates a new MappingScimResourceTypeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMappingScimResourceTypeResponse(schemas []EnummappingScimResourceTypeSchemaUrn, id string, coreSchema string, enabled bool, endpoint string) *MappingScimResourceTypeResponse {
	this := MappingScimResourceTypeResponse{}
	this.Schemas = schemas
	this.Id = id
	this.CoreSchema = coreSchema
	this.Enabled = enabled
	this.Endpoint = endpoint
	return &this
}

// NewMappingScimResourceTypeResponseWithDefaults instantiates a new MappingScimResourceTypeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMappingScimResourceTypeResponseWithDefaults() *MappingScimResourceTypeResponse {
	this := MappingScimResourceTypeResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *MappingScimResourceTypeResponse) GetSchemas() []EnummappingScimResourceTypeSchemaUrn {
	if o == nil {
		var ret []EnummappingScimResourceTypeSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetSchemasOk() ([]EnummappingScimResourceTypeSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *MappingScimResourceTypeResponse) SetSchemas(v []EnummappingScimResourceTypeSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *MappingScimResourceTypeResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MappingScimResourceTypeResponse) SetId(v string) {
	o.Id = v
}

// GetCoreSchema returns the CoreSchema field value
func (o *MappingScimResourceTypeResponse) GetCoreSchema() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CoreSchema
}

// GetCoreSchemaOk returns a tuple with the CoreSchema field value
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetCoreSchemaOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CoreSchema, true
}

// SetCoreSchema sets field value
func (o *MappingScimResourceTypeResponse) SetCoreSchema(v string) {
	o.CoreSchema = v
}

// GetRequiredSchemaExtension returns the RequiredSchemaExtension field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetRequiredSchemaExtension() []string {
	if o == nil || IsNil(o.RequiredSchemaExtension) {
		var ret []string
		return ret
	}
	return o.RequiredSchemaExtension
}

// GetRequiredSchemaExtensionOk returns a tuple with the RequiredSchemaExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetRequiredSchemaExtensionOk() ([]string, bool) {
	if o == nil || IsNil(o.RequiredSchemaExtension) {
		return nil, false
	}
	return o.RequiredSchemaExtension, true
}

// HasRequiredSchemaExtension returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasRequiredSchemaExtension() bool {
	if o != nil && !IsNil(o.RequiredSchemaExtension) {
		return true
	}

	return false
}

// SetRequiredSchemaExtension gets a reference to the given []string and assigns it to the RequiredSchemaExtension field.
func (o *MappingScimResourceTypeResponse) SetRequiredSchemaExtension(v []string) {
	o.RequiredSchemaExtension = v
}

// GetOptionalSchemaExtension returns the OptionalSchemaExtension field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetOptionalSchemaExtension() []string {
	if o == nil || IsNil(o.OptionalSchemaExtension) {
		var ret []string
		return ret
	}
	return o.OptionalSchemaExtension
}

// GetOptionalSchemaExtensionOk returns a tuple with the OptionalSchemaExtension field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetOptionalSchemaExtensionOk() ([]string, bool) {
	if o == nil || IsNil(o.OptionalSchemaExtension) {
		return nil, false
	}
	return o.OptionalSchemaExtension, true
}

// HasOptionalSchemaExtension returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasOptionalSchemaExtension() bool {
	if o != nil && !IsNil(o.OptionalSchemaExtension) {
		return true
	}

	return false
}

// SetOptionalSchemaExtension gets a reference to the given []string and assigns it to the OptionalSchemaExtension field.
func (o *MappingScimResourceTypeResponse) SetOptionalSchemaExtension(v []string) {
	o.OptionalSchemaExtension = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MappingScimResourceTypeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *MappingScimResourceTypeResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MappingScimResourceTypeResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetEndpoint returns the Endpoint field value
func (o *MappingScimResourceTypeResponse) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *MappingScimResourceTypeResponse) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetLookthroughLimit returns the LookthroughLimit field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetLookthroughLimit() int64 {
	if o == nil || IsNil(o.LookthroughLimit) {
		var ret int64
		return ret
	}
	return *o.LookthroughLimit
}

// GetLookthroughLimitOk returns a tuple with the LookthroughLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetLookthroughLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.LookthroughLimit) {
		return nil, false
	}
	return o.LookthroughLimit, true
}

// HasLookthroughLimit returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasLookthroughLimit() bool {
	if o != nil && !IsNil(o.LookthroughLimit) {
		return true
	}

	return false
}

// SetLookthroughLimit gets a reference to the given int64 and assigns it to the LookthroughLimit field.
func (o *MappingScimResourceTypeResponse) SetLookthroughLimit(v int64) {
	o.LookthroughLimit = &v
}

// GetSchemaCheckingOption returns the SchemaCheckingOption field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetSchemaCheckingOption() []EnumscimResourceTypeSchemaCheckingOptionProp {
	if o == nil || IsNil(o.SchemaCheckingOption) {
		var ret []EnumscimResourceTypeSchemaCheckingOptionProp
		return ret
	}
	return o.SchemaCheckingOption
}

// GetSchemaCheckingOptionOk returns a tuple with the SchemaCheckingOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetSchemaCheckingOptionOk() ([]EnumscimResourceTypeSchemaCheckingOptionProp, bool) {
	if o == nil || IsNil(o.SchemaCheckingOption) {
		return nil, false
	}
	return o.SchemaCheckingOption, true
}

// HasSchemaCheckingOption returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasSchemaCheckingOption() bool {
	if o != nil && !IsNil(o.SchemaCheckingOption) {
		return true
	}

	return false
}

// SetSchemaCheckingOption gets a reference to the given []EnumscimResourceTypeSchemaCheckingOptionProp and assigns it to the SchemaCheckingOption field.
func (o *MappingScimResourceTypeResponse) SetSchemaCheckingOption(v []EnumscimResourceTypeSchemaCheckingOptionProp) {
	o.SchemaCheckingOption = v
}

// GetStructuralLDAPObjectclass returns the StructuralLDAPObjectclass field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetStructuralLDAPObjectclass() string {
	if o == nil || IsNil(o.StructuralLDAPObjectclass) {
		var ret string
		return ret
	}
	return *o.StructuralLDAPObjectclass
}

// GetStructuralLDAPObjectclassOk returns a tuple with the StructuralLDAPObjectclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetStructuralLDAPObjectclassOk() (*string, bool) {
	if o == nil || IsNil(o.StructuralLDAPObjectclass) {
		return nil, false
	}
	return o.StructuralLDAPObjectclass, true
}

// HasStructuralLDAPObjectclass returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasStructuralLDAPObjectclass() bool {
	if o != nil && !IsNil(o.StructuralLDAPObjectclass) {
		return true
	}

	return false
}

// SetStructuralLDAPObjectclass gets a reference to the given string and assigns it to the StructuralLDAPObjectclass field.
func (o *MappingScimResourceTypeResponse) SetStructuralLDAPObjectclass(v string) {
	o.StructuralLDAPObjectclass = &v
}

// GetAuxiliaryLDAPObjectclass returns the AuxiliaryLDAPObjectclass field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetAuxiliaryLDAPObjectclass() []string {
	if o == nil || IsNil(o.AuxiliaryLDAPObjectclass) {
		var ret []string
		return ret
	}
	return o.AuxiliaryLDAPObjectclass
}

// GetAuxiliaryLDAPObjectclassOk returns a tuple with the AuxiliaryLDAPObjectclass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetAuxiliaryLDAPObjectclassOk() ([]string, bool) {
	if o == nil || IsNil(o.AuxiliaryLDAPObjectclass) {
		return nil, false
	}
	return o.AuxiliaryLDAPObjectclass, true
}

// HasAuxiliaryLDAPObjectclass returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasAuxiliaryLDAPObjectclass() bool {
	if o != nil && !IsNil(o.AuxiliaryLDAPObjectclass) {
		return true
	}

	return false
}

// SetAuxiliaryLDAPObjectclass gets a reference to the given []string and assigns it to the AuxiliaryLDAPObjectclass field.
func (o *MappingScimResourceTypeResponse) SetAuxiliaryLDAPObjectclass(v []string) {
	o.AuxiliaryLDAPObjectclass = v
}

// GetIncludeBaseDN returns the IncludeBaseDN field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetIncludeBaseDN() string {
	if o == nil || IsNil(o.IncludeBaseDN) {
		var ret string
		return ret
	}
	return *o.IncludeBaseDN
}

// GetIncludeBaseDNOk returns a tuple with the IncludeBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetIncludeBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.IncludeBaseDN) {
		return nil, false
	}
	return o.IncludeBaseDN, true
}

// HasIncludeBaseDN returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasIncludeBaseDN() bool {
	if o != nil && !IsNil(o.IncludeBaseDN) {
		return true
	}

	return false
}

// SetIncludeBaseDN gets a reference to the given string and assigns it to the IncludeBaseDN field.
func (o *MappingScimResourceTypeResponse) SetIncludeBaseDN(v string) {
	o.IncludeBaseDN = &v
}

// GetIncludeFilter returns the IncludeFilter field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetIncludeFilter() []string {
	if o == nil || IsNil(o.IncludeFilter) {
		var ret []string
		return ret
	}
	return o.IncludeFilter
}

// GetIncludeFilterOk returns a tuple with the IncludeFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetIncludeFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeFilter) {
		return nil, false
	}
	return o.IncludeFilter, true
}

// HasIncludeFilter returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasIncludeFilter() bool {
	if o != nil && !IsNil(o.IncludeFilter) {
		return true
	}

	return false
}

// SetIncludeFilter gets a reference to the given []string and assigns it to the IncludeFilter field.
func (o *MappingScimResourceTypeResponse) SetIncludeFilter(v []string) {
	o.IncludeFilter = v
}

// GetIncludeOperationalAttribute returns the IncludeOperationalAttribute field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetIncludeOperationalAttribute() []string {
	if o == nil || IsNil(o.IncludeOperationalAttribute) {
		var ret []string
		return ret
	}
	return o.IncludeOperationalAttribute
}

// GetIncludeOperationalAttributeOk returns a tuple with the IncludeOperationalAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetIncludeOperationalAttributeOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeOperationalAttribute) {
		return nil, false
	}
	return o.IncludeOperationalAttribute, true
}

// HasIncludeOperationalAttribute returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasIncludeOperationalAttribute() bool {
	if o != nil && !IsNil(o.IncludeOperationalAttribute) {
		return true
	}

	return false
}

// SetIncludeOperationalAttribute gets a reference to the given []string and assigns it to the IncludeOperationalAttribute field.
func (o *MappingScimResourceTypeResponse) SetIncludeOperationalAttribute(v []string) {
	o.IncludeOperationalAttribute = v
}

// GetCreateDNPattern returns the CreateDNPattern field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetCreateDNPattern() string {
	if o == nil || IsNil(o.CreateDNPattern) {
		var ret string
		return ret
	}
	return *o.CreateDNPattern
}

// GetCreateDNPatternOk returns a tuple with the CreateDNPattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetCreateDNPatternOk() (*string, bool) {
	if o == nil || IsNil(o.CreateDNPattern) {
		return nil, false
	}
	return o.CreateDNPattern, true
}

// HasCreateDNPattern returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasCreateDNPattern() bool {
	if o != nil && !IsNil(o.CreateDNPattern) {
		return true
	}

	return false
}

// SetCreateDNPattern gets a reference to the given string and assigns it to the CreateDNPattern field.
func (o *MappingScimResourceTypeResponse) SetCreateDNPattern(v string) {
	o.CreateDNPattern = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *MappingScimResourceTypeResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *MappingScimResourceTypeResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MappingScimResourceTypeResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *MappingScimResourceTypeResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *MappingScimResourceTypeResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o MappingScimResourceTypeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MappingScimResourceTypeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["coreSchema"] = o.CoreSchema
	if !IsNil(o.RequiredSchemaExtension) {
		toSerialize["requiredSchemaExtension"] = o.RequiredSchemaExtension
	}
	if !IsNil(o.OptionalSchemaExtension) {
		toSerialize["optionalSchemaExtension"] = o.OptionalSchemaExtension
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["endpoint"] = o.Endpoint
	if !IsNil(o.LookthroughLimit) {
		toSerialize["lookthroughLimit"] = o.LookthroughLimit
	}
	if !IsNil(o.SchemaCheckingOption) {
		toSerialize["schemaCheckingOption"] = o.SchemaCheckingOption
	}
	if !IsNil(o.StructuralLDAPObjectclass) {
		toSerialize["structuralLDAPObjectclass"] = o.StructuralLDAPObjectclass
	}
	if !IsNil(o.AuxiliaryLDAPObjectclass) {
		toSerialize["auxiliaryLDAPObjectclass"] = o.AuxiliaryLDAPObjectclass
	}
	if !IsNil(o.IncludeBaseDN) {
		toSerialize["includeBaseDN"] = o.IncludeBaseDN
	}
	if !IsNil(o.IncludeFilter) {
		toSerialize["includeFilter"] = o.IncludeFilter
	}
	if !IsNil(o.IncludeOperationalAttribute) {
		toSerialize["includeOperationalAttribute"] = o.IncludeOperationalAttribute
	}
	if !IsNil(o.CreateDNPattern) {
		toSerialize["createDNPattern"] = o.CreateDNPattern
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableMappingScimResourceTypeResponse struct {
	value *MappingScimResourceTypeResponse
	isSet bool
}

func (v NullableMappingScimResourceTypeResponse) Get() *MappingScimResourceTypeResponse {
	return v.value
}

func (v *NullableMappingScimResourceTypeResponse) Set(val *MappingScimResourceTypeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMappingScimResourceTypeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMappingScimResourceTypeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMappingScimResourceTypeResponse(val *MappingScimResourceTypeResponse) *NullableMappingScimResourceTypeResponse {
	return &NullableMappingScimResourceTypeResponse{value: val, isSet: true}
}

func (v NullableMappingScimResourceTypeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMappingScimResourceTypeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
