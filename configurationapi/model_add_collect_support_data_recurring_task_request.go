/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// AddCollectSupportDataRecurringTaskRequest struct for AddCollectSupportDataRecurringTaskRequest
type AddCollectSupportDataRecurringTaskRequest struct {
	// Name of the new Recurring Task
	TaskName string                                         `json:"taskName"`
	Schemas  []EnumcollectSupportDataRecurringTaskSchemaUrn `json:"schemas"`
	// The directory in which the support data archive files will be placed. The path must be a directory, and that directory must already exist. Relative paths will be interpreted as relative to the server root.
	OutputDirectory string `json:"outputDirectory"`
	// The path to a file that contains the passphrase to encrypt the contents of the support data archive.
	EncryptionPassphraseFile *string `json:"encryptionPassphraseFile,omitempty"`
	// Indicates whether the support data archive should include information that may be expensive to obtain, and that may temporarily affect the server's performance or responsiveness.
	IncludeExpensiveData *bool `json:"includeExpensiveData,omitempty"`
	// Indicates whether the support data archive should include a replication state dump, which may be several megabytes in size.
	IncludeReplicationStateDump *bool `json:"includeReplicationStateDump,omitempty"`
	// Indicates whether the support data archive should include binary files that may not have otherwise been included. Note that it may not be possible to obscure or redact sensitive information in binary files.
	IncludeBinaryFiles *bool `json:"includeBinaryFiles,omitempty"`
	// Indicates whether the support data archive should include the source code (if available) for any third-party extensions that may be installed in the server.
	IncludeExtensionSource *bool `json:"includeExtensionSource,omitempty"`
	// Indicates whether to capture support data information sequentially rather than in parallel. Capturing data in sequential mode may reduce the amount of memory that the tool requires to operate, at the cost of taking longer to run.
	UseSequentialMode *bool                               `json:"useSequentialMode,omitempty"`
	SecurityLevel     *EnumrecurringTaskSecurityLevelProp `json:"securityLevel,omitempty"`
	// The number of times to invoke the jstack utility to obtain a stack trace of all threads running in the JVM. A value of zero indicates that the jstack utility should not be invoked.
	JstackCount *int32 `json:"jstackCount,omitempty"`
	// The number of intervals of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat. A value of zero indicates that these kinds of tools should not be used to collect any information.
	ReportCount *int32 `json:"reportCount,omitempty"`
	// The duration (in seconds) between each interval of data to collect from tools that use sample-based reporting, like vmstat, iostat, and mpstat.
	ReportIntervalSeconds *int32 `json:"reportIntervalSeconds,omitempty"`
	// The maximum age (leading up to the time the collect-support-data tool was invoked) for log content to include in the support data archive.
	LogDuration *string `json:"logDuration,omitempty"`
	// The amount of data to collect from the beginning of each log file included in the support data archive.
	LogFileHeadCollectionSize *string `json:"logFileHeadCollectionSize,omitempty"`
	// The amount of data to collect from the end of each log file included in the support data archive.
	LogFileTailCollectionSize *string `json:"logFileTailCollectionSize,omitempty"`
	// An optional comment to include in a README file within the support data archive.
	Comment *string `json:"comment,omitempty"`
	// The minimum number of previous support data archives that should be preserved after a new archive is generated.
	RetainPreviousSupportDataArchiveCount *int32 `json:"retainPreviousSupportDataArchiveCount,omitempty"`
	// The minimum age of previous support data archives that should be preserved after a new archive is generated.
	RetainPreviousSupportDataArchiveAge *string `json:"retainPreviousSupportDataArchiveAge,omitempty"`
	// A description for this Recurring Task
	Description *string `json:"description,omitempty"`
	// Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
	CancelOnTaskDependencyFailure *bool `json:"cancelOnTaskDependencyFailure,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnStart []string `json:"emailOnStart,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnSuccess []string `json:"emailOnSuccess,omitempty"`
	// The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnFailure []string `json:"emailOnFailure,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
	AlertOnStart *bool `json:"alertOnStart,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
	AlertOnSuccess *bool `json:"alertOnSuccess,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
	AlertOnFailure *bool `json:"alertOnFailure,omitempty"`
}

// NewAddCollectSupportDataRecurringTaskRequest instantiates a new AddCollectSupportDataRecurringTaskRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCollectSupportDataRecurringTaskRequest(taskName string, schemas []EnumcollectSupportDataRecurringTaskSchemaUrn, outputDirectory string) *AddCollectSupportDataRecurringTaskRequest {
	this := AddCollectSupportDataRecurringTaskRequest{}
	this.TaskName = taskName
	this.Schemas = schemas
	this.OutputDirectory = outputDirectory
	return &this
}

// NewAddCollectSupportDataRecurringTaskRequestWithDefaults instantiates a new AddCollectSupportDataRecurringTaskRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCollectSupportDataRecurringTaskRequestWithDefaults() *AddCollectSupportDataRecurringTaskRequest {
	this := AddCollectSupportDataRecurringTaskRequest{}
	return &this
}

// GetTaskName returns the TaskName field value
func (o *AddCollectSupportDataRecurringTaskRequest) GetTaskName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TaskName
}

// GetTaskNameOk returns a tuple with the TaskName field value
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetTaskNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaskName, true
}

// SetTaskName sets field value
func (o *AddCollectSupportDataRecurringTaskRequest) SetTaskName(v string) {
	o.TaskName = v
}

// GetSchemas returns the Schemas field value
func (o *AddCollectSupportDataRecurringTaskRequest) GetSchemas() []EnumcollectSupportDataRecurringTaskSchemaUrn {
	if o == nil {
		var ret []EnumcollectSupportDataRecurringTaskSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetSchemasOk() ([]EnumcollectSupportDataRecurringTaskSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddCollectSupportDataRecurringTaskRequest) SetSchemas(v []EnumcollectSupportDataRecurringTaskSchemaUrn) {
	o.Schemas = v
}

// GetOutputDirectory returns the OutputDirectory field value
func (o *AddCollectSupportDataRecurringTaskRequest) GetOutputDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OutputDirectory
}

// GetOutputDirectoryOk returns a tuple with the OutputDirectory field value
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetOutputDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputDirectory, true
}

// SetOutputDirectory sets field value
func (o *AddCollectSupportDataRecurringTaskRequest) SetOutputDirectory(v string) {
	o.OutputDirectory = v
}

// GetEncryptionPassphraseFile returns the EncryptionPassphraseFile field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEncryptionPassphraseFile() string {
	if o == nil || isNil(o.EncryptionPassphraseFile) {
		var ret string
		return ret
	}
	return *o.EncryptionPassphraseFile
}

// GetEncryptionPassphraseFileOk returns a tuple with the EncryptionPassphraseFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEncryptionPassphraseFileOk() (*string, bool) {
	if o == nil || isNil(o.EncryptionPassphraseFile) {
		return nil, false
	}
	return o.EncryptionPassphraseFile, true
}

// HasEncryptionPassphraseFile returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasEncryptionPassphraseFile() bool {
	if o != nil && !isNil(o.EncryptionPassphraseFile) {
		return true
	}

	return false
}

// SetEncryptionPassphraseFile gets a reference to the given string and assigns it to the EncryptionPassphraseFile field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetEncryptionPassphraseFile(v string) {
	o.EncryptionPassphraseFile = &v
}

// GetIncludeExpensiveData returns the IncludeExpensiveData field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeExpensiveData() bool {
	if o == nil || isNil(o.IncludeExpensiveData) {
		var ret bool
		return ret
	}
	return *o.IncludeExpensiveData
}

// GetIncludeExpensiveDataOk returns a tuple with the IncludeExpensiveData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeExpensiveDataOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeExpensiveData) {
		return nil, false
	}
	return o.IncludeExpensiveData, true
}

// HasIncludeExpensiveData returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasIncludeExpensiveData() bool {
	if o != nil && !isNil(o.IncludeExpensiveData) {
		return true
	}

	return false
}

// SetIncludeExpensiveData gets a reference to the given bool and assigns it to the IncludeExpensiveData field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetIncludeExpensiveData(v bool) {
	o.IncludeExpensiveData = &v
}

// GetIncludeReplicationStateDump returns the IncludeReplicationStateDump field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeReplicationStateDump() bool {
	if o == nil || isNil(o.IncludeReplicationStateDump) {
		var ret bool
		return ret
	}
	return *o.IncludeReplicationStateDump
}

// GetIncludeReplicationStateDumpOk returns a tuple with the IncludeReplicationStateDump field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeReplicationStateDumpOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeReplicationStateDump) {
		return nil, false
	}
	return o.IncludeReplicationStateDump, true
}

// HasIncludeReplicationStateDump returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasIncludeReplicationStateDump() bool {
	if o != nil && !isNil(o.IncludeReplicationStateDump) {
		return true
	}

	return false
}

// SetIncludeReplicationStateDump gets a reference to the given bool and assigns it to the IncludeReplicationStateDump field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetIncludeReplicationStateDump(v bool) {
	o.IncludeReplicationStateDump = &v
}

// GetIncludeBinaryFiles returns the IncludeBinaryFiles field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeBinaryFiles() bool {
	if o == nil || isNil(o.IncludeBinaryFiles) {
		var ret bool
		return ret
	}
	return *o.IncludeBinaryFiles
}

// GetIncludeBinaryFilesOk returns a tuple with the IncludeBinaryFiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeBinaryFilesOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeBinaryFiles) {
		return nil, false
	}
	return o.IncludeBinaryFiles, true
}

// HasIncludeBinaryFiles returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasIncludeBinaryFiles() bool {
	if o != nil && !isNil(o.IncludeBinaryFiles) {
		return true
	}

	return false
}

// SetIncludeBinaryFiles gets a reference to the given bool and assigns it to the IncludeBinaryFiles field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetIncludeBinaryFiles(v bool) {
	o.IncludeBinaryFiles = &v
}

// GetIncludeExtensionSource returns the IncludeExtensionSource field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeExtensionSource() bool {
	if o == nil || isNil(o.IncludeExtensionSource) {
		var ret bool
		return ret
	}
	return *o.IncludeExtensionSource
}

// GetIncludeExtensionSourceOk returns a tuple with the IncludeExtensionSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetIncludeExtensionSourceOk() (*bool, bool) {
	if o == nil || isNil(o.IncludeExtensionSource) {
		return nil, false
	}
	return o.IncludeExtensionSource, true
}

// HasIncludeExtensionSource returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasIncludeExtensionSource() bool {
	if o != nil && !isNil(o.IncludeExtensionSource) {
		return true
	}

	return false
}

// SetIncludeExtensionSource gets a reference to the given bool and assigns it to the IncludeExtensionSource field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetIncludeExtensionSource(v bool) {
	o.IncludeExtensionSource = &v
}

// GetUseSequentialMode returns the UseSequentialMode field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetUseSequentialMode() bool {
	if o == nil || isNil(o.UseSequentialMode) {
		var ret bool
		return ret
	}
	return *o.UseSequentialMode
}

// GetUseSequentialModeOk returns a tuple with the UseSequentialMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetUseSequentialModeOk() (*bool, bool) {
	if o == nil || isNil(o.UseSequentialMode) {
		return nil, false
	}
	return o.UseSequentialMode, true
}

// HasUseSequentialMode returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasUseSequentialMode() bool {
	if o != nil && !isNil(o.UseSequentialMode) {
		return true
	}

	return false
}

// SetUseSequentialMode gets a reference to the given bool and assigns it to the UseSequentialMode field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetUseSequentialMode(v bool) {
	o.UseSequentialMode = &v
}

// GetSecurityLevel returns the SecurityLevel field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetSecurityLevel() EnumrecurringTaskSecurityLevelProp {
	if o == nil || isNil(o.SecurityLevel) {
		var ret EnumrecurringTaskSecurityLevelProp
		return ret
	}
	return *o.SecurityLevel
}

// GetSecurityLevelOk returns a tuple with the SecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetSecurityLevelOk() (*EnumrecurringTaskSecurityLevelProp, bool) {
	if o == nil || isNil(o.SecurityLevel) {
		return nil, false
	}
	return o.SecurityLevel, true
}

// HasSecurityLevel returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasSecurityLevel() bool {
	if o != nil && !isNil(o.SecurityLevel) {
		return true
	}

	return false
}

// SetSecurityLevel gets a reference to the given EnumrecurringTaskSecurityLevelProp and assigns it to the SecurityLevel field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetSecurityLevel(v EnumrecurringTaskSecurityLevelProp) {
	o.SecurityLevel = &v
}

// GetJstackCount returns the JstackCount field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetJstackCount() int32 {
	if o == nil || isNil(o.JstackCount) {
		var ret int32
		return ret
	}
	return *o.JstackCount
}

// GetJstackCountOk returns a tuple with the JstackCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetJstackCountOk() (*int32, bool) {
	if o == nil || isNil(o.JstackCount) {
		return nil, false
	}
	return o.JstackCount, true
}

// HasJstackCount returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasJstackCount() bool {
	if o != nil && !isNil(o.JstackCount) {
		return true
	}

	return false
}

// SetJstackCount gets a reference to the given int32 and assigns it to the JstackCount field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetJstackCount(v int32) {
	o.JstackCount = &v
}

// GetReportCount returns the ReportCount field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetReportCount() int32 {
	if o == nil || isNil(o.ReportCount) {
		var ret int32
		return ret
	}
	return *o.ReportCount
}

// GetReportCountOk returns a tuple with the ReportCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetReportCountOk() (*int32, bool) {
	if o == nil || isNil(o.ReportCount) {
		return nil, false
	}
	return o.ReportCount, true
}

// HasReportCount returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasReportCount() bool {
	if o != nil && !isNil(o.ReportCount) {
		return true
	}

	return false
}

// SetReportCount gets a reference to the given int32 and assigns it to the ReportCount field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetReportCount(v int32) {
	o.ReportCount = &v
}

// GetReportIntervalSeconds returns the ReportIntervalSeconds field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetReportIntervalSeconds() int32 {
	if o == nil || isNil(o.ReportIntervalSeconds) {
		var ret int32
		return ret
	}
	return *o.ReportIntervalSeconds
}

// GetReportIntervalSecondsOk returns a tuple with the ReportIntervalSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetReportIntervalSecondsOk() (*int32, bool) {
	if o == nil || isNil(o.ReportIntervalSeconds) {
		return nil, false
	}
	return o.ReportIntervalSeconds, true
}

// HasReportIntervalSeconds returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasReportIntervalSeconds() bool {
	if o != nil && !isNil(o.ReportIntervalSeconds) {
		return true
	}

	return false
}

// SetReportIntervalSeconds gets a reference to the given int32 and assigns it to the ReportIntervalSeconds field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetReportIntervalSeconds(v int32) {
	o.ReportIntervalSeconds = &v
}

// GetLogDuration returns the LogDuration field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogDuration() string {
	if o == nil || isNil(o.LogDuration) {
		var ret string
		return ret
	}
	return *o.LogDuration
}

// GetLogDurationOk returns a tuple with the LogDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogDurationOk() (*string, bool) {
	if o == nil || isNil(o.LogDuration) {
		return nil, false
	}
	return o.LogDuration, true
}

// HasLogDuration returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasLogDuration() bool {
	if o != nil && !isNil(o.LogDuration) {
		return true
	}

	return false
}

// SetLogDuration gets a reference to the given string and assigns it to the LogDuration field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetLogDuration(v string) {
	o.LogDuration = &v
}

// GetLogFileHeadCollectionSize returns the LogFileHeadCollectionSize field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogFileHeadCollectionSize() string {
	if o == nil || isNil(o.LogFileHeadCollectionSize) {
		var ret string
		return ret
	}
	return *o.LogFileHeadCollectionSize
}

// GetLogFileHeadCollectionSizeOk returns a tuple with the LogFileHeadCollectionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogFileHeadCollectionSizeOk() (*string, bool) {
	if o == nil || isNil(o.LogFileHeadCollectionSize) {
		return nil, false
	}
	return o.LogFileHeadCollectionSize, true
}

// HasLogFileHeadCollectionSize returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasLogFileHeadCollectionSize() bool {
	if o != nil && !isNil(o.LogFileHeadCollectionSize) {
		return true
	}

	return false
}

// SetLogFileHeadCollectionSize gets a reference to the given string and assigns it to the LogFileHeadCollectionSize field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetLogFileHeadCollectionSize(v string) {
	o.LogFileHeadCollectionSize = &v
}

// GetLogFileTailCollectionSize returns the LogFileTailCollectionSize field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogFileTailCollectionSize() string {
	if o == nil || isNil(o.LogFileTailCollectionSize) {
		var ret string
		return ret
	}
	return *o.LogFileTailCollectionSize
}

// GetLogFileTailCollectionSizeOk returns a tuple with the LogFileTailCollectionSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetLogFileTailCollectionSizeOk() (*string, bool) {
	if o == nil || isNil(o.LogFileTailCollectionSize) {
		return nil, false
	}
	return o.LogFileTailCollectionSize, true
}

// HasLogFileTailCollectionSize returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasLogFileTailCollectionSize() bool {
	if o != nil && !isNil(o.LogFileTailCollectionSize) {
		return true
	}

	return false
}

// SetLogFileTailCollectionSize gets a reference to the given string and assigns it to the LogFileTailCollectionSize field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetLogFileTailCollectionSize(v string) {
	o.LogFileTailCollectionSize = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetComment() string {
	if o == nil || isNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetCommentOk() (*string, bool) {
	if o == nil || isNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasComment() bool {
	if o != nil && !isNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetComment(v string) {
	o.Comment = &v
}

// GetRetainPreviousSupportDataArchiveCount returns the RetainPreviousSupportDataArchiveCount field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetRetainPreviousSupportDataArchiveCount() int32 {
	if o == nil || isNil(o.RetainPreviousSupportDataArchiveCount) {
		var ret int32
		return ret
	}
	return *o.RetainPreviousSupportDataArchiveCount
}

// GetRetainPreviousSupportDataArchiveCountOk returns a tuple with the RetainPreviousSupportDataArchiveCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetRetainPreviousSupportDataArchiveCountOk() (*int32, bool) {
	if o == nil || isNil(o.RetainPreviousSupportDataArchiveCount) {
		return nil, false
	}
	return o.RetainPreviousSupportDataArchiveCount, true
}

// HasRetainPreviousSupportDataArchiveCount returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasRetainPreviousSupportDataArchiveCount() bool {
	if o != nil && !isNil(o.RetainPreviousSupportDataArchiveCount) {
		return true
	}

	return false
}

// SetRetainPreviousSupportDataArchiveCount gets a reference to the given int32 and assigns it to the RetainPreviousSupportDataArchiveCount field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetRetainPreviousSupportDataArchiveCount(v int32) {
	o.RetainPreviousSupportDataArchiveCount = &v
}

// GetRetainPreviousSupportDataArchiveAge returns the RetainPreviousSupportDataArchiveAge field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetRetainPreviousSupportDataArchiveAge() string {
	if o == nil || isNil(o.RetainPreviousSupportDataArchiveAge) {
		var ret string
		return ret
	}
	return *o.RetainPreviousSupportDataArchiveAge
}

// GetRetainPreviousSupportDataArchiveAgeOk returns a tuple with the RetainPreviousSupportDataArchiveAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetRetainPreviousSupportDataArchiveAgeOk() (*string, bool) {
	if o == nil || isNil(o.RetainPreviousSupportDataArchiveAge) {
		return nil, false
	}
	return o.RetainPreviousSupportDataArchiveAge, true
}

// HasRetainPreviousSupportDataArchiveAge returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasRetainPreviousSupportDataArchiveAge() bool {
	if o != nil && !isNil(o.RetainPreviousSupportDataArchiveAge) {
		return true
	}

	return false
}

// SetRetainPreviousSupportDataArchiveAge gets a reference to the given string and assigns it to the RetainPreviousSupportDataArchiveAge field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetRetainPreviousSupportDataArchiveAge(v string) {
	o.RetainPreviousSupportDataArchiveAge = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetDescription(v string) {
	o.Description = &v
}

// GetCancelOnTaskDependencyFailure returns the CancelOnTaskDependencyFailure field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetCancelOnTaskDependencyFailure() bool {
	if o == nil || isNil(o.CancelOnTaskDependencyFailure) {
		var ret bool
		return ret
	}
	return *o.CancelOnTaskDependencyFailure
}

// GetCancelOnTaskDependencyFailureOk returns a tuple with the CancelOnTaskDependencyFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetCancelOnTaskDependencyFailureOk() (*bool, bool) {
	if o == nil || isNil(o.CancelOnTaskDependencyFailure) {
		return nil, false
	}
	return o.CancelOnTaskDependencyFailure, true
}

// HasCancelOnTaskDependencyFailure returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasCancelOnTaskDependencyFailure() bool {
	if o != nil && !isNil(o.CancelOnTaskDependencyFailure) {
		return true
	}

	return false
}

// SetCancelOnTaskDependencyFailure gets a reference to the given bool and assigns it to the CancelOnTaskDependencyFailure field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetCancelOnTaskDependencyFailure(v bool) {
	o.CancelOnTaskDependencyFailure = &v
}

// GetEmailOnStart returns the EmailOnStart field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnStart() []string {
	if o == nil || isNil(o.EmailOnStart) {
		var ret []string
		return ret
	}
	return o.EmailOnStart
}

// GetEmailOnStartOk returns a tuple with the EmailOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnStartOk() ([]string, bool) {
	if o == nil || isNil(o.EmailOnStart) {
		return nil, false
	}
	return o.EmailOnStart, true
}

// HasEmailOnStart returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasEmailOnStart() bool {
	if o != nil && !isNil(o.EmailOnStart) {
		return true
	}

	return false
}

// SetEmailOnStart gets a reference to the given []string and assigns it to the EmailOnStart field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetEmailOnStart(v []string) {
	o.EmailOnStart = v
}

// GetEmailOnSuccess returns the EmailOnSuccess field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnSuccess() []string {
	if o == nil || isNil(o.EmailOnSuccess) {
		var ret []string
		return ret
	}
	return o.EmailOnSuccess
}

// GetEmailOnSuccessOk returns a tuple with the EmailOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnSuccessOk() ([]string, bool) {
	if o == nil || isNil(o.EmailOnSuccess) {
		return nil, false
	}
	return o.EmailOnSuccess, true
}

// HasEmailOnSuccess returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasEmailOnSuccess() bool {
	if o != nil && !isNil(o.EmailOnSuccess) {
		return true
	}

	return false
}

// SetEmailOnSuccess gets a reference to the given []string and assigns it to the EmailOnSuccess field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetEmailOnSuccess(v []string) {
	o.EmailOnSuccess = v
}

// GetEmailOnFailure returns the EmailOnFailure field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnFailure() []string {
	if o == nil || isNil(o.EmailOnFailure) {
		var ret []string
		return ret
	}
	return o.EmailOnFailure
}

// GetEmailOnFailureOk returns a tuple with the EmailOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetEmailOnFailureOk() ([]string, bool) {
	if o == nil || isNil(o.EmailOnFailure) {
		return nil, false
	}
	return o.EmailOnFailure, true
}

// HasEmailOnFailure returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasEmailOnFailure() bool {
	if o != nil && !isNil(o.EmailOnFailure) {
		return true
	}

	return false
}

// SetEmailOnFailure gets a reference to the given []string and assigns it to the EmailOnFailure field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetEmailOnFailure(v []string) {
	o.EmailOnFailure = v
}

// GetAlertOnStart returns the AlertOnStart field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnStart() bool {
	if o == nil || isNil(o.AlertOnStart) {
		var ret bool
		return ret
	}
	return *o.AlertOnStart
}

// GetAlertOnStartOk returns a tuple with the AlertOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnStartOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnStart) {
		return nil, false
	}
	return o.AlertOnStart, true
}

// HasAlertOnStart returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasAlertOnStart() bool {
	if o != nil && !isNil(o.AlertOnStart) {
		return true
	}

	return false
}

// SetAlertOnStart gets a reference to the given bool and assigns it to the AlertOnStart field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetAlertOnStart(v bool) {
	o.AlertOnStart = &v
}

// GetAlertOnSuccess returns the AlertOnSuccess field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnSuccess() bool {
	if o == nil || isNil(o.AlertOnSuccess) {
		var ret bool
		return ret
	}
	return *o.AlertOnSuccess
}

// GetAlertOnSuccessOk returns a tuple with the AlertOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnSuccessOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnSuccess) {
		return nil, false
	}
	return o.AlertOnSuccess, true
}

// HasAlertOnSuccess returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasAlertOnSuccess() bool {
	if o != nil && !isNil(o.AlertOnSuccess) {
		return true
	}

	return false
}

// SetAlertOnSuccess gets a reference to the given bool and assigns it to the AlertOnSuccess field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetAlertOnSuccess(v bool) {
	o.AlertOnSuccess = &v
}

// GetAlertOnFailure returns the AlertOnFailure field value if set, zero value otherwise.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnFailure() bool {
	if o == nil || isNil(o.AlertOnFailure) {
		var ret bool
		return ret
	}
	return *o.AlertOnFailure
}

// GetAlertOnFailureOk returns a tuple with the AlertOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) GetAlertOnFailureOk() (*bool, bool) {
	if o == nil || isNil(o.AlertOnFailure) {
		return nil, false
	}
	return o.AlertOnFailure, true
}

// HasAlertOnFailure returns a boolean if a field has been set.
func (o *AddCollectSupportDataRecurringTaskRequest) HasAlertOnFailure() bool {
	if o != nil && !isNil(o.AlertOnFailure) {
		return true
	}

	return false
}

// SetAlertOnFailure gets a reference to the given bool and assigns it to the AlertOnFailure field.
func (o *AddCollectSupportDataRecurringTaskRequest) SetAlertOnFailure(v bool) {
	o.AlertOnFailure = &v
}

func (o AddCollectSupportDataRecurringTaskRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["taskName"] = o.TaskName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["outputDirectory"] = o.OutputDirectory
	}
	if !isNil(o.EncryptionPassphraseFile) {
		toSerialize["encryptionPassphraseFile"] = o.EncryptionPassphraseFile
	}
	if !isNil(o.IncludeExpensiveData) {
		toSerialize["includeExpensiveData"] = o.IncludeExpensiveData
	}
	if !isNil(o.IncludeReplicationStateDump) {
		toSerialize["includeReplicationStateDump"] = o.IncludeReplicationStateDump
	}
	if !isNil(o.IncludeBinaryFiles) {
		toSerialize["includeBinaryFiles"] = o.IncludeBinaryFiles
	}
	if !isNil(o.IncludeExtensionSource) {
		toSerialize["includeExtensionSource"] = o.IncludeExtensionSource
	}
	if !isNil(o.UseSequentialMode) {
		toSerialize["useSequentialMode"] = o.UseSequentialMode
	}
	if !isNil(o.SecurityLevel) {
		toSerialize["securityLevel"] = o.SecurityLevel
	}
	if !isNil(o.JstackCount) {
		toSerialize["jstackCount"] = o.JstackCount
	}
	if !isNil(o.ReportCount) {
		toSerialize["reportCount"] = o.ReportCount
	}
	if !isNil(o.ReportIntervalSeconds) {
		toSerialize["reportIntervalSeconds"] = o.ReportIntervalSeconds
	}
	if !isNil(o.LogDuration) {
		toSerialize["logDuration"] = o.LogDuration
	}
	if !isNil(o.LogFileHeadCollectionSize) {
		toSerialize["logFileHeadCollectionSize"] = o.LogFileHeadCollectionSize
	}
	if !isNil(o.LogFileTailCollectionSize) {
		toSerialize["logFileTailCollectionSize"] = o.LogFileTailCollectionSize
	}
	if !isNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !isNil(o.RetainPreviousSupportDataArchiveCount) {
		toSerialize["retainPreviousSupportDataArchiveCount"] = o.RetainPreviousSupportDataArchiveCount
	}
	if !isNil(o.RetainPreviousSupportDataArchiveAge) {
		toSerialize["retainPreviousSupportDataArchiveAge"] = o.RetainPreviousSupportDataArchiveAge
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.CancelOnTaskDependencyFailure) {
		toSerialize["cancelOnTaskDependencyFailure"] = o.CancelOnTaskDependencyFailure
	}
	if !isNil(o.EmailOnStart) {
		toSerialize["emailOnStart"] = o.EmailOnStart
	}
	if !isNil(o.EmailOnSuccess) {
		toSerialize["emailOnSuccess"] = o.EmailOnSuccess
	}
	if !isNil(o.EmailOnFailure) {
		toSerialize["emailOnFailure"] = o.EmailOnFailure
	}
	if !isNil(o.AlertOnStart) {
		toSerialize["alertOnStart"] = o.AlertOnStart
	}
	if !isNil(o.AlertOnSuccess) {
		toSerialize["alertOnSuccess"] = o.AlertOnSuccess
	}
	if !isNil(o.AlertOnFailure) {
		toSerialize["alertOnFailure"] = o.AlertOnFailure
	}
	return json.Marshal(toSerialize)
}

type NullableAddCollectSupportDataRecurringTaskRequest struct {
	value *AddCollectSupportDataRecurringTaskRequest
	isSet bool
}

func (v NullableAddCollectSupportDataRecurringTaskRequest) Get() *AddCollectSupportDataRecurringTaskRequest {
	return v.value
}

func (v *NullableAddCollectSupportDataRecurringTaskRequest) Set(val *AddCollectSupportDataRecurringTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCollectSupportDataRecurringTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCollectSupportDataRecurringTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCollectSupportDataRecurringTaskRequest(val *AddCollectSupportDataRecurringTaskRequest) *NullableAddCollectSupportDataRecurringTaskRequest {
	return &NullableAddCollectSupportDataRecurringTaskRequest{value: val, isSet: true}
}

func (v NullableAddCollectSupportDataRecurringTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCollectSupportDataRecurringTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
