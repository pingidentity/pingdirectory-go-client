/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the PolicyExternalServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PolicyExternalServerResponse{}

// PolicyExternalServerResponse struct for PolicyExternalServerResponse
type PolicyExternalServerResponse struct {
	Schemas []EnumpolicyExternalServerSchemaUrn `json:"schemas"`
	// Name of the External Server
	Id string `json:"id"`
	// Specifies the user ID to authenticate calls to the policy server's governance engine API.
	UserID string `json:"userID"`
	// Specifies the shared secret to authenticate calls to the policy server's governance engine API.
	SharedSecret string `json:"sharedSecret"`
	// Specifies the ID of the policy tree node that will act as the root node for policy evaluation.
	DecisionNode *string `json:"decisionNode,omitempty"`
	// Specifies the name of the policy branch to use for policy evaluation.
	Branch *string `json:"branch,omitempty"`
	// Specifies the ID of a specific commit to use for policy evaluation.
	Snapshot                   *string                                                 `json:"snapshot,omitempty"`
	HostnameVerificationMethod *EnumexternalServerPolicyHostnameVerificationMethodProp `json:"hostnameVerificationMethod,omitempty"`
	// The key manager provider to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property (except when using the Null key manager provider) you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
	KeyManagerProvider *string `json:"keyManagerProvider,omitempty"`
	// The trust manager provider to use if SSL (HTTPS) is to be used for connection-level security.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	// The base URL of the external server, optionally including port number, for example \"https://externalService:9031\".
	BaseURL string `json:"baseURL"`
	// The certificate alias within the keystore to use if SSL (HTTPS) is to be used for connection-level security. When specifying a value for this property you must ensure that the external server trusts this server's public certificate by adding this server's public certificate to the external server's trust store.
	SslCertNickname *string `json:"sslCertNickname,omitempty"`
	// Specifies the maximum length of time to wait for a connection to be established before aborting a request to the server.
	ConnectTimeout *string `json:"connectTimeout,omitempty"`
	// Specifies the maximum length of time to wait for response data to be read from an established connection before aborting a request to the server.
	ResponseTimeout *string `json:"responseTimeout,omitempty"`
	// A description for this External Server
	Description                                   *string                                            `json:"description,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewPolicyExternalServerResponse instantiates a new PolicyExternalServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPolicyExternalServerResponse(schemas []EnumpolicyExternalServerSchemaUrn, id string, userID string, sharedSecret string, baseURL string) *PolicyExternalServerResponse {
	this := PolicyExternalServerResponse{}
	this.Schemas = schemas
	this.Id = id
	this.UserID = userID
	this.SharedSecret = sharedSecret
	this.BaseURL = baseURL
	return &this
}

// NewPolicyExternalServerResponseWithDefaults instantiates a new PolicyExternalServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPolicyExternalServerResponseWithDefaults() *PolicyExternalServerResponse {
	this := PolicyExternalServerResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *PolicyExternalServerResponse) GetSchemas() []EnumpolicyExternalServerSchemaUrn {
	if o == nil {
		var ret []EnumpolicyExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetSchemasOk() ([]EnumpolicyExternalServerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *PolicyExternalServerResponse) SetSchemas(v []EnumpolicyExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *PolicyExternalServerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PolicyExternalServerResponse) SetId(v string) {
	o.Id = v
}

// GetUserID returns the UserID field value
func (o *PolicyExternalServerResponse) GetUserID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UserID
}

// GetUserIDOk returns a tuple with the UserID field value
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetUserIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UserID, true
}

// SetUserID sets field value
func (o *PolicyExternalServerResponse) SetUserID(v string) {
	o.UserID = v
}

// GetSharedSecret returns the SharedSecret field value
func (o *PolicyExternalServerResponse) GetSharedSecret() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SharedSecret
}

// GetSharedSecretOk returns a tuple with the SharedSecret field value
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetSharedSecretOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SharedSecret, true
}

// SetSharedSecret sets field value
func (o *PolicyExternalServerResponse) SetSharedSecret(v string) {
	o.SharedSecret = v
}

// GetDecisionNode returns the DecisionNode field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetDecisionNode() string {
	if o == nil || IsNil(o.DecisionNode) {
		var ret string
		return ret
	}
	return *o.DecisionNode
}

// GetDecisionNodeOk returns a tuple with the DecisionNode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetDecisionNodeOk() (*string, bool) {
	if o == nil || IsNil(o.DecisionNode) {
		return nil, false
	}
	return o.DecisionNode, true
}

// HasDecisionNode returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasDecisionNode() bool {
	if o != nil && !IsNil(o.DecisionNode) {
		return true
	}

	return false
}

// SetDecisionNode gets a reference to the given string and assigns it to the DecisionNode field.
func (o *PolicyExternalServerResponse) SetDecisionNode(v string) {
	o.DecisionNode = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetBranch() string {
	if o == nil || IsNil(o.Branch) {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetBranchOk() (*string, bool) {
	if o == nil || IsNil(o.Branch) {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasBranch() bool {
	if o != nil && !IsNil(o.Branch) {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *PolicyExternalServerResponse) SetBranch(v string) {
	o.Branch = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetSnapshot() string {
	if o == nil || IsNil(o.Snapshot) {
		var ret string
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetSnapshotOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given string and assigns it to the Snapshot field.
func (o *PolicyExternalServerResponse) SetSnapshot(v string) {
	o.Snapshot = &v
}

// GetHostnameVerificationMethod returns the HostnameVerificationMethod field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetHostnameVerificationMethod() EnumexternalServerPolicyHostnameVerificationMethodProp {
	if o == nil || IsNil(o.HostnameVerificationMethod) {
		var ret EnumexternalServerPolicyHostnameVerificationMethodProp
		return ret
	}
	return *o.HostnameVerificationMethod
}

// GetHostnameVerificationMethodOk returns a tuple with the HostnameVerificationMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetHostnameVerificationMethodOk() (*EnumexternalServerPolicyHostnameVerificationMethodProp, bool) {
	if o == nil || IsNil(o.HostnameVerificationMethod) {
		return nil, false
	}
	return o.HostnameVerificationMethod, true
}

// HasHostnameVerificationMethod returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasHostnameVerificationMethod() bool {
	if o != nil && !IsNil(o.HostnameVerificationMethod) {
		return true
	}

	return false
}

// SetHostnameVerificationMethod gets a reference to the given EnumexternalServerPolicyHostnameVerificationMethodProp and assigns it to the HostnameVerificationMethod field.
func (o *PolicyExternalServerResponse) SetHostnameVerificationMethod(v EnumexternalServerPolicyHostnameVerificationMethodProp) {
	o.HostnameVerificationMethod = &v
}

// GetKeyManagerProvider returns the KeyManagerProvider field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetKeyManagerProvider() string {
	if o == nil || IsNil(o.KeyManagerProvider) {
		var ret string
		return ret
	}
	return *o.KeyManagerProvider
}

// GetKeyManagerProviderOk returns a tuple with the KeyManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetKeyManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.KeyManagerProvider) {
		return nil, false
	}
	return o.KeyManagerProvider, true
}

// HasKeyManagerProvider returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasKeyManagerProvider() bool {
	if o != nil && !IsNil(o.KeyManagerProvider) {
		return true
	}

	return false
}

// SetKeyManagerProvider gets a reference to the given string and assigns it to the KeyManagerProvider field.
func (o *PolicyExternalServerResponse) SetKeyManagerProvider(v string) {
	o.KeyManagerProvider = &v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetTrustManagerProvider() string {
	if o == nil || IsNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustManagerProvider) {
		return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasTrustManagerProvider() bool {
	if o != nil && !IsNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *PolicyExternalServerResponse) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetBaseURL returns the BaseURL field value
func (o *PolicyExternalServerResponse) GetBaseURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseURL
}

// GetBaseURLOk returns a tuple with the BaseURL field value
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetBaseURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseURL, true
}

// SetBaseURL sets field value
func (o *PolicyExternalServerResponse) SetBaseURL(v string) {
	o.BaseURL = v
}

// GetSslCertNickname returns the SslCertNickname field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetSslCertNickname() string {
	if o == nil || IsNil(o.SslCertNickname) {
		var ret string
		return ret
	}
	return *o.SslCertNickname
}

// GetSslCertNicknameOk returns a tuple with the SslCertNickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetSslCertNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.SslCertNickname) {
		return nil, false
	}
	return o.SslCertNickname, true
}

// HasSslCertNickname returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasSslCertNickname() bool {
	if o != nil && !IsNil(o.SslCertNickname) {
		return true
	}

	return false
}

// SetSslCertNickname gets a reference to the given string and assigns it to the SslCertNickname field.
func (o *PolicyExternalServerResponse) SetSslCertNickname(v string) {
	o.SslCertNickname = &v
}

// GetConnectTimeout returns the ConnectTimeout field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetConnectTimeout() string {
	if o == nil || IsNil(o.ConnectTimeout) {
		var ret string
		return ret
	}
	return *o.ConnectTimeout
}

// GetConnectTimeoutOk returns a tuple with the ConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetConnectTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectTimeout) {
		return nil, false
	}
	return o.ConnectTimeout, true
}

// HasConnectTimeout returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasConnectTimeout() bool {
	if o != nil && !IsNil(o.ConnectTimeout) {
		return true
	}

	return false
}

// SetConnectTimeout gets a reference to the given string and assigns it to the ConnectTimeout field.
func (o *PolicyExternalServerResponse) SetConnectTimeout(v string) {
	o.ConnectTimeout = &v
}

// GetResponseTimeout returns the ResponseTimeout field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetResponseTimeout() string {
	if o == nil || IsNil(o.ResponseTimeout) {
		var ret string
		return ret
	}
	return *o.ResponseTimeout
}

// GetResponseTimeoutOk returns a tuple with the ResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetResponseTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.ResponseTimeout) {
		return nil, false
	}
	return o.ResponseTimeout, true
}

// HasResponseTimeout returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasResponseTimeout() bool {
	if o != nil && !IsNil(o.ResponseTimeout) {
		return true
	}

	return false
}

// SetResponseTimeout gets a reference to the given string and assigns it to the ResponseTimeout field.
func (o *PolicyExternalServerResponse) SetResponseTimeout(v string) {
	o.ResponseTimeout = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PolicyExternalServerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *PolicyExternalServerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *PolicyExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PolicyExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *PolicyExternalServerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *PolicyExternalServerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o PolicyExternalServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PolicyExternalServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["userID"] = o.UserID
	toSerialize["sharedSecret"] = o.SharedSecret
	if !IsNil(o.DecisionNode) {
		toSerialize["decisionNode"] = o.DecisionNode
	}
	if !IsNil(o.Branch) {
		toSerialize["branch"] = o.Branch
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	if !IsNil(o.HostnameVerificationMethod) {
		toSerialize["hostnameVerificationMethod"] = o.HostnameVerificationMethod
	}
	if !IsNil(o.KeyManagerProvider) {
		toSerialize["keyManagerProvider"] = o.KeyManagerProvider
	}
	if !IsNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	toSerialize["baseURL"] = o.BaseURL
	if !IsNil(o.SslCertNickname) {
		toSerialize["sslCertNickname"] = o.SslCertNickname
	}
	if !IsNil(o.ConnectTimeout) {
		toSerialize["connectTimeout"] = o.ConnectTimeout
	}
	if !IsNil(o.ResponseTimeout) {
		toSerialize["responseTimeout"] = o.ResponseTimeout
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullablePolicyExternalServerResponse struct {
	value *PolicyExternalServerResponse
	isSet bool
}

func (v NullablePolicyExternalServerResponse) Get() *PolicyExternalServerResponse {
	return v.value
}

func (v *NullablePolicyExternalServerResponse) Set(val *PolicyExternalServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyExternalServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyExternalServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyExternalServerResponse(val *PolicyExternalServerResponse) *NullablePolicyExternalServerResponse {
	return &NullablePolicyExternalServerResponse{value: val, isSet: true}
}

func (v NullablePolicyExternalServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyExternalServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
