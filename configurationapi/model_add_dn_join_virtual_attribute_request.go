/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddDnJoinVirtualAttributeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDnJoinVirtualAttributeRequest{}

// AddDnJoinVirtualAttributeRequest struct for AddDnJoinVirtualAttributeRequest
type AddDnJoinVirtualAttributeRequest struct {
	// Name of the new Virtual Attribute
	Name    string                                `json:"name"`
	Schemas []EnumdnJoinVirtualAttributeSchemaUrn `json:"schemas"`
	// The attribute whose values are the DNs of the entries to be joined with the search result entry.
	JoinDNAttribute string                                 `json:"joinDNAttribute"`
	JoinBaseDNType  EnumvirtualAttributeJoinBaseDNTypeProp `json:"joinBaseDNType"`
	// The fixed, administrator-specified base DN for the internal searches used to identify joined entries.
	JoinCustomBaseDN *string                            `json:"joinCustomBaseDN,omitempty"`
	JoinScope        *EnumvirtualAttributeJoinScopeProp `json:"joinScope,omitempty"`
	// The maximum number of entries that may be joined with the source entry, which also corresponds to the maximum number of values that the virtual attribute provider will generate for an entry.
	JoinSizeLimit *int32 `json:"joinSizeLimit,omitempty"`
	// An optional filter that specifies additional criteria for identifying joined entries. If a join-filter value is specified, then only entries matching that filter (in addition to satisfying the other join criteria) will be joined with the search result entry.
	JoinFilter *string `json:"joinFilter,omitempty"`
	// An optional set of the names of the attributes to include with joined entries.
	JoinAttribute []string `json:"joinAttribute,omitempty"`
	// A description for this Virtual Attribute
	Description *string `json:"description,omitempty"`
	// Indicates whether the Virtual Attribute is enabled for use.
	Enabled bool `json:"enabled"`
	// Specifies the attribute type for the attribute whose values are to be dynamically assigned by the virtual attribute.
	AttributeType string `json:"attributeType"`
	// Specifies the base DNs for the branches containing entries that are eligible to use this virtual attribute.
	BaseDN []string `json:"baseDN,omitempty"`
	// Specifies the DNs of the groups whose members can be eligible to use this virtual attribute.
	GroupDN []string `json:"groupDN,omitempty"`
	// Specifies the search filters to be applied against entries to determine if the virtual attribute is to be generated for those entries.
	Filter []string `json:"filter,omitempty"`
	// Specifies a set of client connection policies for which this Virtual Attribute should be generated. If this is undefined, then this Virtual Attribute will always be generated. If it is associated with one or more client connection policies, then this Virtual Attribute will be generated only for operations requested by clients assigned to one of those client connection policies.
	ClientConnectionPolicy []string                                  `json:"clientConnectionPolicy,omitempty"`
	ConflictBehavior       *EnumvirtualAttributeConflictBehaviorProp `json:"conflictBehavior,omitempty"`
	// Indicates whether attributes of this type must be explicitly included by name in the list of requested attributes. Note that this will only apply to virtual attributes which are associated with an attribute type that is operational. It will be ignored for virtual attributes associated with a non-operational attribute type.
	RequireExplicitRequestByName *bool `json:"requireExplicitRequestByName,omitempty"`
	// Specifies the order in which virtual attribute definitions for the same attribute type will be evaluated when generating values for an entry.
	MultipleVirtualAttributeEvaluationOrderIndex *int32                                                         `json:"multipleVirtualAttributeEvaluationOrderIndex,omitempty"`
	MultipleVirtualAttributeMergeBehavior        *EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp `json:"multipleVirtualAttributeMergeBehavior,omitempty"`
	// Indicates whether the server should allow creating or altering this virtual attribute definition even if it conflicts with one or more indexes defined in the server.
	AllowIndexConflicts *bool `json:"allowIndexConflicts,omitempty"`
}

// NewAddDnJoinVirtualAttributeRequest instantiates a new AddDnJoinVirtualAttributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDnJoinVirtualAttributeRequest(name string, schemas []EnumdnJoinVirtualAttributeSchemaUrn, joinDNAttribute string, joinBaseDNType EnumvirtualAttributeJoinBaseDNTypeProp, enabled bool, attributeType string) *AddDnJoinVirtualAttributeRequest {
	this := AddDnJoinVirtualAttributeRequest{}
	this.Name = name
	this.Schemas = schemas
	this.JoinDNAttribute = joinDNAttribute
	this.JoinBaseDNType = joinBaseDNType
	this.Enabled = enabled
	this.AttributeType = attributeType
	return &this
}

// NewAddDnJoinVirtualAttributeRequestWithDefaults instantiates a new AddDnJoinVirtualAttributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDnJoinVirtualAttributeRequestWithDefaults() *AddDnJoinVirtualAttributeRequest {
	this := AddDnJoinVirtualAttributeRequest{}
	return &this
}

// GetName returns the Name field value
func (o *AddDnJoinVirtualAttributeRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetName(v string) {
	o.Name = v
}

// GetSchemas returns the Schemas field value
func (o *AddDnJoinVirtualAttributeRequest) GetSchemas() []EnumdnJoinVirtualAttributeSchemaUrn {
	if o == nil {
		var ret []EnumdnJoinVirtualAttributeSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetSchemasOk() ([]EnumdnJoinVirtualAttributeSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetSchemas(v []EnumdnJoinVirtualAttributeSchemaUrn) {
	o.Schemas = v
}

// GetJoinDNAttribute returns the JoinDNAttribute field value
func (o *AddDnJoinVirtualAttributeRequest) GetJoinDNAttribute() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.JoinDNAttribute
}

// GetJoinDNAttributeOk returns a tuple with the JoinDNAttribute field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinDNAttributeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JoinDNAttribute, true
}

// SetJoinDNAttribute sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetJoinDNAttribute(v string) {
	o.JoinDNAttribute = v
}

// GetJoinBaseDNType returns the JoinBaseDNType field value
func (o *AddDnJoinVirtualAttributeRequest) GetJoinBaseDNType() EnumvirtualAttributeJoinBaseDNTypeProp {
	if o == nil {
		var ret EnumvirtualAttributeJoinBaseDNTypeProp
		return ret
	}

	return o.JoinBaseDNType
}

// GetJoinBaseDNTypeOk returns a tuple with the JoinBaseDNType field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinBaseDNTypeOk() (*EnumvirtualAttributeJoinBaseDNTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JoinBaseDNType, true
}

// SetJoinBaseDNType sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetJoinBaseDNType(v EnumvirtualAttributeJoinBaseDNTypeProp) {
	o.JoinBaseDNType = v
}

// GetJoinCustomBaseDN returns the JoinCustomBaseDN field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinCustomBaseDN() string {
	if o == nil || IsNil(o.JoinCustomBaseDN) {
		var ret string
		return ret
	}
	return *o.JoinCustomBaseDN
}

// GetJoinCustomBaseDNOk returns a tuple with the JoinCustomBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinCustomBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.JoinCustomBaseDN) {
		return nil, false
	}
	return o.JoinCustomBaseDN, true
}

// HasJoinCustomBaseDN returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasJoinCustomBaseDN() bool {
	if o != nil && !IsNil(o.JoinCustomBaseDN) {
		return true
	}

	return false
}

// SetJoinCustomBaseDN gets a reference to the given string and assigns it to the JoinCustomBaseDN field.
func (o *AddDnJoinVirtualAttributeRequest) SetJoinCustomBaseDN(v string) {
	o.JoinCustomBaseDN = &v
}

// GetJoinScope returns the JoinScope field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinScope() EnumvirtualAttributeJoinScopeProp {
	if o == nil || IsNil(o.JoinScope) {
		var ret EnumvirtualAttributeJoinScopeProp
		return ret
	}
	return *o.JoinScope
}

// GetJoinScopeOk returns a tuple with the JoinScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinScopeOk() (*EnumvirtualAttributeJoinScopeProp, bool) {
	if o == nil || IsNil(o.JoinScope) {
		return nil, false
	}
	return o.JoinScope, true
}

// HasJoinScope returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasJoinScope() bool {
	if o != nil && !IsNil(o.JoinScope) {
		return true
	}

	return false
}

// SetJoinScope gets a reference to the given EnumvirtualAttributeJoinScopeProp and assigns it to the JoinScope field.
func (o *AddDnJoinVirtualAttributeRequest) SetJoinScope(v EnumvirtualAttributeJoinScopeProp) {
	o.JoinScope = &v
}

// GetJoinSizeLimit returns the JoinSizeLimit field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinSizeLimit() int32 {
	if o == nil || IsNil(o.JoinSizeLimit) {
		var ret int32
		return ret
	}
	return *o.JoinSizeLimit
}

// GetJoinSizeLimitOk returns a tuple with the JoinSizeLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinSizeLimitOk() (*int32, bool) {
	if o == nil || IsNil(o.JoinSizeLimit) {
		return nil, false
	}
	return o.JoinSizeLimit, true
}

// HasJoinSizeLimit returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasJoinSizeLimit() bool {
	if o != nil && !IsNil(o.JoinSizeLimit) {
		return true
	}

	return false
}

// SetJoinSizeLimit gets a reference to the given int32 and assigns it to the JoinSizeLimit field.
func (o *AddDnJoinVirtualAttributeRequest) SetJoinSizeLimit(v int32) {
	o.JoinSizeLimit = &v
}

// GetJoinFilter returns the JoinFilter field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinFilter() string {
	if o == nil || IsNil(o.JoinFilter) {
		var ret string
		return ret
	}
	return *o.JoinFilter
}

// GetJoinFilterOk returns a tuple with the JoinFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinFilterOk() (*string, bool) {
	if o == nil || IsNil(o.JoinFilter) {
		return nil, false
	}
	return o.JoinFilter, true
}

// HasJoinFilter returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasJoinFilter() bool {
	if o != nil && !IsNil(o.JoinFilter) {
		return true
	}

	return false
}

// SetJoinFilter gets a reference to the given string and assigns it to the JoinFilter field.
func (o *AddDnJoinVirtualAttributeRequest) SetJoinFilter(v string) {
	o.JoinFilter = &v
}

// GetJoinAttribute returns the JoinAttribute field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinAttribute() []string {
	if o == nil || IsNil(o.JoinAttribute) {
		var ret []string
		return ret
	}
	return o.JoinAttribute
}

// GetJoinAttributeOk returns a tuple with the JoinAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetJoinAttributeOk() ([]string, bool) {
	if o == nil || IsNil(o.JoinAttribute) {
		return nil, false
	}
	return o.JoinAttribute, true
}

// HasJoinAttribute returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasJoinAttribute() bool {
	if o != nil && !IsNil(o.JoinAttribute) {
		return true
	}

	return false
}

// SetJoinAttribute gets a reference to the given []string and assigns it to the JoinAttribute field.
func (o *AddDnJoinVirtualAttributeRequest) SetJoinAttribute(v []string) {
	o.JoinAttribute = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddDnJoinVirtualAttributeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddDnJoinVirtualAttributeRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAttributeType returns the AttributeType field value
func (o *AddDnJoinVirtualAttributeRequest) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *AddDnJoinVirtualAttributeRequest) SetAttributeType(v string) {
	o.AttributeType = v
}

// GetBaseDN returns the BaseDN field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetBaseDN() []string {
	if o == nil || IsNil(o.BaseDN) {
		var ret []string
		return ret
	}
	return o.BaseDN
}

// GetBaseDNOk returns a tuple with the BaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.BaseDN) {
		return nil, false
	}
	return o.BaseDN, true
}

// HasBaseDN returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasBaseDN() bool {
	if o != nil && !IsNil(o.BaseDN) {
		return true
	}

	return false
}

// SetBaseDN gets a reference to the given []string and assigns it to the BaseDN field.
func (o *AddDnJoinVirtualAttributeRequest) SetBaseDN(v []string) {
	o.BaseDN = v
}

// GetGroupDN returns the GroupDN field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetGroupDN() []string {
	if o == nil || IsNil(o.GroupDN) {
		var ret []string
		return ret
	}
	return o.GroupDN
}

// GetGroupDNOk returns a tuple with the GroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.GroupDN) {
		return nil, false
	}
	return o.GroupDN, true
}

// HasGroupDN returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasGroupDN() bool {
	if o != nil && !IsNil(o.GroupDN) {
		return true
	}

	return false
}

// SetGroupDN gets a reference to the given []string and assigns it to the GroupDN field.
func (o *AddDnJoinVirtualAttributeRequest) SetGroupDN(v []string) {
	o.GroupDN = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetFilter() []string {
	if o == nil || IsNil(o.Filter) {
		var ret []string
		return ret
	}
	return o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given []string and assigns it to the Filter field.
func (o *AddDnJoinVirtualAttributeRequest) SetFilter(v []string) {
	o.Filter = v
}

// GetClientConnectionPolicy returns the ClientConnectionPolicy field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetClientConnectionPolicy() []string {
	if o == nil || IsNil(o.ClientConnectionPolicy) {
		var ret []string
		return ret
	}
	return o.ClientConnectionPolicy
}

// GetClientConnectionPolicyOk returns a tuple with the ClientConnectionPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetClientConnectionPolicyOk() ([]string, bool) {
	if o == nil || IsNil(o.ClientConnectionPolicy) {
		return nil, false
	}
	return o.ClientConnectionPolicy, true
}

// HasClientConnectionPolicy returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasClientConnectionPolicy() bool {
	if o != nil && !IsNil(o.ClientConnectionPolicy) {
		return true
	}

	return false
}

// SetClientConnectionPolicy gets a reference to the given []string and assigns it to the ClientConnectionPolicy field.
func (o *AddDnJoinVirtualAttributeRequest) SetClientConnectionPolicy(v []string) {
	o.ClientConnectionPolicy = v
}

// GetConflictBehavior returns the ConflictBehavior field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetConflictBehavior() EnumvirtualAttributeConflictBehaviorProp {
	if o == nil || IsNil(o.ConflictBehavior) {
		var ret EnumvirtualAttributeConflictBehaviorProp
		return ret
	}
	return *o.ConflictBehavior
}

// GetConflictBehaviorOk returns a tuple with the ConflictBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetConflictBehaviorOk() (*EnumvirtualAttributeConflictBehaviorProp, bool) {
	if o == nil || IsNil(o.ConflictBehavior) {
		return nil, false
	}
	return o.ConflictBehavior, true
}

// HasConflictBehavior returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasConflictBehavior() bool {
	if o != nil && !IsNil(o.ConflictBehavior) {
		return true
	}

	return false
}

// SetConflictBehavior gets a reference to the given EnumvirtualAttributeConflictBehaviorProp and assigns it to the ConflictBehavior field.
func (o *AddDnJoinVirtualAttributeRequest) SetConflictBehavior(v EnumvirtualAttributeConflictBehaviorProp) {
	o.ConflictBehavior = &v
}

// GetRequireExplicitRequestByName returns the RequireExplicitRequestByName field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetRequireExplicitRequestByName() bool {
	if o == nil || IsNil(o.RequireExplicitRequestByName) {
		var ret bool
		return ret
	}
	return *o.RequireExplicitRequestByName
}

// GetRequireExplicitRequestByNameOk returns a tuple with the RequireExplicitRequestByName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetRequireExplicitRequestByNameOk() (*bool, bool) {
	if o == nil || IsNil(o.RequireExplicitRequestByName) {
		return nil, false
	}
	return o.RequireExplicitRequestByName, true
}

// HasRequireExplicitRequestByName returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasRequireExplicitRequestByName() bool {
	if o != nil && !IsNil(o.RequireExplicitRequestByName) {
		return true
	}

	return false
}

// SetRequireExplicitRequestByName gets a reference to the given bool and assigns it to the RequireExplicitRequestByName field.
func (o *AddDnJoinVirtualAttributeRequest) SetRequireExplicitRequestByName(v bool) {
	o.RequireExplicitRequestByName = &v
}

// GetMultipleVirtualAttributeEvaluationOrderIndex returns the MultipleVirtualAttributeEvaluationOrderIndex field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetMultipleVirtualAttributeEvaluationOrderIndex() int32 {
	if o == nil || IsNil(o.MultipleVirtualAttributeEvaluationOrderIndex) {
		var ret int32
		return ret
	}
	return *o.MultipleVirtualAttributeEvaluationOrderIndex
}

// GetMultipleVirtualAttributeEvaluationOrderIndexOk returns a tuple with the MultipleVirtualAttributeEvaluationOrderIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetMultipleVirtualAttributeEvaluationOrderIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.MultipleVirtualAttributeEvaluationOrderIndex) {
		return nil, false
	}
	return o.MultipleVirtualAttributeEvaluationOrderIndex, true
}

// HasMultipleVirtualAttributeEvaluationOrderIndex returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasMultipleVirtualAttributeEvaluationOrderIndex() bool {
	if o != nil && !IsNil(o.MultipleVirtualAttributeEvaluationOrderIndex) {
		return true
	}

	return false
}

// SetMultipleVirtualAttributeEvaluationOrderIndex gets a reference to the given int32 and assigns it to the MultipleVirtualAttributeEvaluationOrderIndex field.
func (o *AddDnJoinVirtualAttributeRequest) SetMultipleVirtualAttributeEvaluationOrderIndex(v int32) {
	o.MultipleVirtualAttributeEvaluationOrderIndex = &v
}

// GetMultipleVirtualAttributeMergeBehavior returns the MultipleVirtualAttributeMergeBehavior field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetMultipleVirtualAttributeMergeBehavior() EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp {
	if o == nil || IsNil(o.MultipleVirtualAttributeMergeBehavior) {
		var ret EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp
		return ret
	}
	return *o.MultipleVirtualAttributeMergeBehavior
}

// GetMultipleVirtualAttributeMergeBehaviorOk returns a tuple with the MultipleVirtualAttributeMergeBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetMultipleVirtualAttributeMergeBehaviorOk() (*EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp, bool) {
	if o == nil || IsNil(o.MultipleVirtualAttributeMergeBehavior) {
		return nil, false
	}
	return o.MultipleVirtualAttributeMergeBehavior, true
}

// HasMultipleVirtualAttributeMergeBehavior returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasMultipleVirtualAttributeMergeBehavior() bool {
	if o != nil && !IsNil(o.MultipleVirtualAttributeMergeBehavior) {
		return true
	}

	return false
}

// SetMultipleVirtualAttributeMergeBehavior gets a reference to the given EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp and assigns it to the MultipleVirtualAttributeMergeBehavior field.
func (o *AddDnJoinVirtualAttributeRequest) SetMultipleVirtualAttributeMergeBehavior(v EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp) {
	o.MultipleVirtualAttributeMergeBehavior = &v
}

// GetAllowIndexConflicts returns the AllowIndexConflicts field value if set, zero value otherwise.
func (o *AddDnJoinVirtualAttributeRequest) GetAllowIndexConflicts() bool {
	if o == nil || IsNil(o.AllowIndexConflicts) {
		var ret bool
		return ret
	}
	return *o.AllowIndexConflicts
}

// GetAllowIndexConflictsOk returns a tuple with the AllowIndexConflicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDnJoinVirtualAttributeRequest) GetAllowIndexConflictsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowIndexConflicts) {
		return nil, false
	}
	return o.AllowIndexConflicts, true
}

// HasAllowIndexConflicts returns a boolean if a field has been set.
func (o *AddDnJoinVirtualAttributeRequest) HasAllowIndexConflicts() bool {
	if o != nil && !IsNil(o.AllowIndexConflicts) {
		return true
	}

	return false
}

// SetAllowIndexConflicts gets a reference to the given bool and assigns it to the AllowIndexConflicts field.
func (o *AddDnJoinVirtualAttributeRequest) SetAllowIndexConflicts(v bool) {
	o.AllowIndexConflicts = &v
}

func (o AddDnJoinVirtualAttributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDnJoinVirtualAttributeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["schemas"] = o.Schemas
	toSerialize["joinDNAttribute"] = o.JoinDNAttribute
	toSerialize["joinBaseDNType"] = o.JoinBaseDNType
	if !IsNil(o.JoinCustomBaseDN) {
		toSerialize["joinCustomBaseDN"] = o.JoinCustomBaseDN
	}
	if !IsNil(o.JoinScope) {
		toSerialize["joinScope"] = o.JoinScope
	}
	if !IsNil(o.JoinSizeLimit) {
		toSerialize["joinSizeLimit"] = o.JoinSizeLimit
	}
	if !IsNil(o.JoinFilter) {
		toSerialize["joinFilter"] = o.JoinFilter
	}
	if !IsNil(o.JoinAttribute) {
		toSerialize["joinAttribute"] = o.JoinAttribute
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["attributeType"] = o.AttributeType
	if !IsNil(o.BaseDN) {
		toSerialize["baseDN"] = o.BaseDN
	}
	if !IsNil(o.GroupDN) {
		toSerialize["groupDN"] = o.GroupDN
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.ClientConnectionPolicy) {
		toSerialize["clientConnectionPolicy"] = o.ClientConnectionPolicy
	}
	if !IsNil(o.ConflictBehavior) {
		toSerialize["conflictBehavior"] = o.ConflictBehavior
	}
	if !IsNil(o.RequireExplicitRequestByName) {
		toSerialize["requireExplicitRequestByName"] = o.RequireExplicitRequestByName
	}
	if !IsNil(o.MultipleVirtualAttributeEvaluationOrderIndex) {
		toSerialize["multipleVirtualAttributeEvaluationOrderIndex"] = o.MultipleVirtualAttributeEvaluationOrderIndex
	}
	if !IsNil(o.MultipleVirtualAttributeMergeBehavior) {
		toSerialize["multipleVirtualAttributeMergeBehavior"] = o.MultipleVirtualAttributeMergeBehavior
	}
	if !IsNil(o.AllowIndexConflicts) {
		toSerialize["allowIndexConflicts"] = o.AllowIndexConflicts
	}
	return toSerialize, nil
}

type NullableAddDnJoinVirtualAttributeRequest struct {
	value *AddDnJoinVirtualAttributeRequest
	isSet bool
}

func (v NullableAddDnJoinVirtualAttributeRequest) Get() *AddDnJoinVirtualAttributeRequest {
	return v.value
}

func (v *NullableAddDnJoinVirtualAttributeRequest) Set(val *AddDnJoinVirtualAttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDnJoinVirtualAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDnJoinVirtualAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDnJoinVirtualAttributeRequest(val *AddDnJoinVirtualAttributeRequest) *NullableAddDnJoinVirtualAttributeRequest {
	return &NullableAddDnJoinVirtualAttributeRequest{value: val, isSet: true}
}

func (v NullableAddDnJoinVirtualAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDnJoinVirtualAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
