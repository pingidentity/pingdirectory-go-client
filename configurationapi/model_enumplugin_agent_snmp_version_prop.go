/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginAgentSNMPVersionProp The SNMP protocol version(s) to support.
type EnumpluginAgentSNMPVersionProp string

// List of Enumplugin-agentSNMPVersionProp
const (
	ENUMPLUGINAGENTSNMPVERSIONPROP_SNMPV2C EnumpluginAgentSNMPVersionProp = "snmpv2c"
	ENUMPLUGINAGENTSNMPVERSIONPROP_SNMPV3  EnumpluginAgentSNMPVersionProp = "snmpv3"
)

// All allowed values of EnumpluginAgentSNMPVersionProp enum
var AllowedEnumpluginAgentSNMPVersionPropEnumValues = []EnumpluginAgentSNMPVersionProp{
	"snmpv2c",
	"snmpv3",
}

func (v *EnumpluginAgentSNMPVersionProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginAgentSNMPVersionProp(value)
	for _, existing := range AllowedEnumpluginAgentSNMPVersionPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginAgentSNMPVersionProp", value)
}

// NewEnumpluginAgentSNMPVersionPropFromValue returns a pointer to a valid EnumpluginAgentSNMPVersionProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginAgentSNMPVersionPropFromValue(v string) (*EnumpluginAgentSNMPVersionProp, error) {
	ev := EnumpluginAgentSNMPVersionProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginAgentSNMPVersionProp: valid values are %v", v, AllowedEnumpluginAgentSNMPVersionPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginAgentSNMPVersionProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginAgentSNMPVersionPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-agentSNMPVersionProp value
func (v EnumpluginAgentSNMPVersionProp) Ptr() *EnumpluginAgentSNMPVersionProp {
	return &v
}

type NullableEnumpluginAgentSNMPVersionProp struct {
	value *EnumpluginAgentSNMPVersionProp
	isSet bool
}

func (v NullableEnumpluginAgentSNMPVersionProp) Get() *EnumpluginAgentSNMPVersionProp {
	return v.value
}

func (v *NullableEnumpluginAgentSNMPVersionProp) Set(val *EnumpluginAgentSNMPVersionProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginAgentSNMPVersionProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginAgentSNMPVersionProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginAgentSNMPVersionProp(val *EnumpluginAgentSNMPVersionProp) *NullableEnumpluginAgentSNMPVersionProp {
	return &NullableEnumpluginAgentSNMPVersionProp{value: val, isSet: true}
}

func (v NullableEnumpluginAgentSNMPVersionProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginAgentSNMPVersionProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
