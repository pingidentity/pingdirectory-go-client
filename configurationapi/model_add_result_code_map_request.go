/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// AddResultCodeMapRequest struct for AddResultCodeMapRequest
type AddResultCodeMapRequest struct {
	// Name of the new Result Code Map
	MapName string                       `json:"mapName"`
	Schemas []EnumresultCodeMapSchemaUrn `json:"schemas,omitempty"`
	// A description for this Result Code Map
	Description *string `json:"description,omitempty"`
	// Specifies the result code that should be returned if a bind attempt fails because the user's account is locked as a result of too many failed authentication attempts.
	BindAccountLockedResultCode *int32 `json:"bindAccountLockedResultCode,omitempty"`
	// Specifies the result code that should be returned if a bind attempt fails because the target user entry does not exist in the server.
	BindMissingUserResultCode *int32 `json:"bindMissingUserResultCode,omitempty"`
	// Specifies the result code that should be returned if a password-based bind attempt fails because the target user entry does not have a password.
	BindMissingPasswordResultCode *int32 `json:"bindMissingPasswordResultCode,omitempty"`
	// Specifies the result code that should be returned if a generic error occurs within the server.
	ServerErrorResultCode *int32 `json:"serverErrorResultCode,omitempty"`
}

// NewAddResultCodeMapRequest instantiates a new AddResultCodeMapRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddResultCodeMapRequest(mapName string) *AddResultCodeMapRequest {
	this := AddResultCodeMapRequest{}
	this.MapName = mapName
	return &this
}

// NewAddResultCodeMapRequestWithDefaults instantiates a new AddResultCodeMapRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddResultCodeMapRequestWithDefaults() *AddResultCodeMapRequest {
	this := AddResultCodeMapRequest{}
	return &this
}

// GetMapName returns the MapName field value
func (o *AddResultCodeMapRequest) GetMapName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapName
}

// GetMapNameOk returns a tuple with the MapName field value
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetMapNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapName, true
}

// SetMapName sets field value
func (o *AddResultCodeMapRequest) SetMapName(v string) {
	o.MapName = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetSchemas() []EnumresultCodeMapSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumresultCodeMapSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetSchemasOk() ([]EnumresultCodeMapSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumresultCodeMapSchemaUrn and assigns it to the Schemas field.
func (o *AddResultCodeMapRequest) SetSchemas(v []EnumresultCodeMapSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddResultCodeMapRequest) SetDescription(v string) {
	o.Description = &v
}

// GetBindAccountLockedResultCode returns the BindAccountLockedResultCode field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetBindAccountLockedResultCode() int32 {
	if o == nil || isNil(o.BindAccountLockedResultCode) {
		var ret int32
		return ret
	}
	return *o.BindAccountLockedResultCode
}

// GetBindAccountLockedResultCodeOk returns a tuple with the BindAccountLockedResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetBindAccountLockedResultCodeOk() (*int32, bool) {
	if o == nil || isNil(o.BindAccountLockedResultCode) {
		return nil, false
	}
	return o.BindAccountLockedResultCode, true
}

// HasBindAccountLockedResultCode returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasBindAccountLockedResultCode() bool {
	if o != nil && !isNil(o.BindAccountLockedResultCode) {
		return true
	}

	return false
}

// SetBindAccountLockedResultCode gets a reference to the given int32 and assigns it to the BindAccountLockedResultCode field.
func (o *AddResultCodeMapRequest) SetBindAccountLockedResultCode(v int32) {
	o.BindAccountLockedResultCode = &v
}

// GetBindMissingUserResultCode returns the BindMissingUserResultCode field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetBindMissingUserResultCode() int32 {
	if o == nil || isNil(o.BindMissingUserResultCode) {
		var ret int32
		return ret
	}
	return *o.BindMissingUserResultCode
}

// GetBindMissingUserResultCodeOk returns a tuple with the BindMissingUserResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetBindMissingUserResultCodeOk() (*int32, bool) {
	if o == nil || isNil(o.BindMissingUserResultCode) {
		return nil, false
	}
	return o.BindMissingUserResultCode, true
}

// HasBindMissingUserResultCode returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasBindMissingUserResultCode() bool {
	if o != nil && !isNil(o.BindMissingUserResultCode) {
		return true
	}

	return false
}

// SetBindMissingUserResultCode gets a reference to the given int32 and assigns it to the BindMissingUserResultCode field.
func (o *AddResultCodeMapRequest) SetBindMissingUserResultCode(v int32) {
	o.BindMissingUserResultCode = &v
}

// GetBindMissingPasswordResultCode returns the BindMissingPasswordResultCode field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetBindMissingPasswordResultCode() int32 {
	if o == nil || isNil(o.BindMissingPasswordResultCode) {
		var ret int32
		return ret
	}
	return *o.BindMissingPasswordResultCode
}

// GetBindMissingPasswordResultCodeOk returns a tuple with the BindMissingPasswordResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetBindMissingPasswordResultCodeOk() (*int32, bool) {
	if o == nil || isNil(o.BindMissingPasswordResultCode) {
		return nil, false
	}
	return o.BindMissingPasswordResultCode, true
}

// HasBindMissingPasswordResultCode returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasBindMissingPasswordResultCode() bool {
	if o != nil && !isNil(o.BindMissingPasswordResultCode) {
		return true
	}

	return false
}

// SetBindMissingPasswordResultCode gets a reference to the given int32 and assigns it to the BindMissingPasswordResultCode field.
func (o *AddResultCodeMapRequest) SetBindMissingPasswordResultCode(v int32) {
	o.BindMissingPasswordResultCode = &v
}

// GetServerErrorResultCode returns the ServerErrorResultCode field value if set, zero value otherwise.
func (o *AddResultCodeMapRequest) GetServerErrorResultCode() int32 {
	if o == nil || isNil(o.ServerErrorResultCode) {
		var ret int32
		return ret
	}
	return *o.ServerErrorResultCode
}

// GetServerErrorResultCodeOk returns a tuple with the ServerErrorResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddResultCodeMapRequest) GetServerErrorResultCodeOk() (*int32, bool) {
	if o == nil || isNil(o.ServerErrorResultCode) {
		return nil, false
	}
	return o.ServerErrorResultCode, true
}

// HasServerErrorResultCode returns a boolean if a field has been set.
func (o *AddResultCodeMapRequest) HasServerErrorResultCode() bool {
	if o != nil && !isNil(o.ServerErrorResultCode) {
		return true
	}

	return false
}

// SetServerErrorResultCode gets a reference to the given int32 and assigns it to the ServerErrorResultCode field.
func (o *AddResultCodeMapRequest) SetServerErrorResultCode(v int32) {
	o.ServerErrorResultCode = &v
}

func (o AddResultCodeMapRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mapName"] = o.MapName
	}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.BindAccountLockedResultCode) {
		toSerialize["bindAccountLockedResultCode"] = o.BindAccountLockedResultCode
	}
	if !isNil(o.BindMissingUserResultCode) {
		toSerialize["bindMissingUserResultCode"] = o.BindMissingUserResultCode
	}
	if !isNil(o.BindMissingPasswordResultCode) {
		toSerialize["bindMissingPasswordResultCode"] = o.BindMissingPasswordResultCode
	}
	if !isNil(o.ServerErrorResultCode) {
		toSerialize["serverErrorResultCode"] = o.ServerErrorResultCode
	}
	return json.Marshal(toSerialize)
}

type NullableAddResultCodeMapRequest struct {
	value *AddResultCodeMapRequest
	isSet bool
}

func (v NullableAddResultCodeMapRequest) Get() *AddResultCodeMapRequest {
	return v.value
}

func (v *NullableAddResultCodeMapRequest) Set(val *AddResultCodeMapRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddResultCodeMapRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddResultCodeMapRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddResultCodeMapRequest(val *AddResultCodeMapRequest) *NullableAddResultCodeMapRequest {
	return &NullableAddResultCodeMapRequest{value: val, isSet: true}
}

func (v NullableAddResultCodeMapRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddResultCodeMapRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
