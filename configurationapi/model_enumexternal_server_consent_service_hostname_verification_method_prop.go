/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerConsentServiceHostnameVerificationMethodProp The mechanism for checking if the hostname of the HTTP External Server matches the name(s) stored inside the server's X.509 certificate. This is only applicable if SSL is being used for connection security.
type EnumexternalServerConsentServiceHostnameVerificationMethodProp string

// List of Enumexternal-server-consent-service-hostnameVerificationMethodProp
const (
	ENUMEXTERNALSERVERCONSENTSERVICEHOSTNAMEVERIFICATIONMETHODPROP_ALLOW_ALL EnumexternalServerConsentServiceHostnameVerificationMethodProp = "allow-all"
	ENUMEXTERNALSERVERCONSENTSERVICEHOSTNAMEVERIFICATIONMETHODPROP_STRICT    EnumexternalServerConsentServiceHostnameVerificationMethodProp = "strict"
)

// All allowed values of EnumexternalServerConsentServiceHostnameVerificationMethodProp enum
var AllowedEnumexternalServerConsentServiceHostnameVerificationMethodPropEnumValues = []EnumexternalServerConsentServiceHostnameVerificationMethodProp{
	"allow-all",
	"strict",
}

func (v *EnumexternalServerConsentServiceHostnameVerificationMethodProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerConsentServiceHostnameVerificationMethodProp(value)
	for _, existing := range AllowedEnumexternalServerConsentServiceHostnameVerificationMethodPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerConsentServiceHostnameVerificationMethodProp", value)
}

// NewEnumexternalServerConsentServiceHostnameVerificationMethodPropFromValue returns a pointer to a valid EnumexternalServerConsentServiceHostnameVerificationMethodProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerConsentServiceHostnameVerificationMethodPropFromValue(v string) (*EnumexternalServerConsentServiceHostnameVerificationMethodProp, error) {
	ev := EnumexternalServerConsentServiceHostnameVerificationMethodProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerConsentServiceHostnameVerificationMethodProp: valid values are %v", v, AllowedEnumexternalServerConsentServiceHostnameVerificationMethodPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerConsentServiceHostnameVerificationMethodProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerConsentServiceHostnameVerificationMethodPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-consent-service-hostnameVerificationMethodProp value
func (v EnumexternalServerConsentServiceHostnameVerificationMethodProp) Ptr() *EnumexternalServerConsentServiceHostnameVerificationMethodProp {
	return &v
}

type NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp struct {
	value *EnumexternalServerConsentServiceHostnameVerificationMethodProp
	isSet bool
}

func (v NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) Get() *EnumexternalServerConsentServiceHostnameVerificationMethodProp {
	return v.value
}

func (v *NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) Set(val *EnumexternalServerConsentServiceHostnameVerificationMethodProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerConsentServiceHostnameVerificationMethodProp(val *EnumexternalServerConsentServiceHostnameVerificationMethodProp) *NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp {
	return &NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerConsentServiceHostnameVerificationMethodProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
