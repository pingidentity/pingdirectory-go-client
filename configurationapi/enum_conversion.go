package configurationapi

// Generated by scripts/generateEnumConversionFunctions.py. Implements Stringer interface for each enum in the client,
// and implements functions to convert a slice of a given enum to a slice of strings.
func (e EnumOperation) String() string {
	return string(e)
}

func StringSliceEnumOperation(values []EnumOperation) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumOperation(value *EnumOperation) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessControlDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaccessControlDataSecurityAuditorSchemaUrn(values []EnumaccessControlDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessControlDataSecurityAuditorSchemaUrn(value *EnumaccessControlDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessControlHandlerAllowedBindControlProp) String() string {
	return string(e)
}

func StringSliceEnumaccessControlHandlerAllowedBindControlProp(values []EnumaccessControlHandlerAllowedBindControlProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessControlHandlerAllowedBindControlProp(value *EnumaccessControlHandlerAllowedBindControlProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessLogFieldMappingSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaccessLogFieldMappingSchemaUrn(values []EnumaccessLogFieldMappingSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessLogFieldMappingSchemaUrn(value *EnumaccessLogFieldMappingSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp(values []EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp(value *EnumaccessTokenValidatorAllowedContentEncryptionAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessTokenValidatorAllowedKeyEncryptionAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumaccessTokenValidatorAllowedKeyEncryptionAlgorithmProp(values []EnumaccessTokenValidatorAllowedKeyEncryptionAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessTokenValidatorAllowedKeyEncryptionAlgorithmProp(value *EnumaccessTokenValidatorAllowedKeyEncryptionAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccessTokenValidatorAllowedSigningAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumaccessTokenValidatorAllowedSigningAlgorithmProp(values []EnumaccessTokenValidatorAllowedSigningAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccessTokenValidatorAllowedSigningAlgorithmProp(value *EnumaccessTokenValidatorAllowedSigningAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp) String() string {
	return string(e)
}

func StringSliceEnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp(values []EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp(value *EnumaccountStatusNotificationHandlerAccountStatusNotificationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccountUsabilityIssuesDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaccountUsabilityIssuesDataSecurityAuditorSchemaUrn(values []EnumaccountUsabilityIssuesDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccountUsabilityIssuesDataSecurityAuditorSchemaUrn(value *EnumaccountUsabilityIssuesDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaccountValidityWindowDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaccountValidityWindowDataSecurityAuditorSchemaUrn(values []EnumaccountValidityWindowDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaccountValidityWindowDataSecurityAuditorSchemaUrn(value *EnumaccountValidityWindowDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumactiveDirectoryExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumactiveDirectoryExternalServerSchemaUrn(values []EnumactiveDirectoryExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumactiveDirectoryExternalServerSchemaUrn(value *EnumactiveDirectoryExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumactiveOperationsMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumactiveOperationsMonitorProviderSchemaUrn(values []EnumactiveOperationsMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumactiveOperationsMonitorProviderSchemaUrn(value *EnumactiveOperationsMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumadminAlertAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumadminAlertAccessLogPublisherSchemaUrn(values []EnumadminAlertAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumadminAlertAccessLogPublisherSchemaUrn(value *EnumadminAlertAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumadminAlertAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumadminAlertAccountStatusNotificationHandlerSchemaUrn(values []EnumadminAlertAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumadminAlertAccountStatusNotificationHandlerSchemaUrn(value *EnumadminAlertAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumaes256PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaes256PasswordStorageSchemeSchemaUrn(values []Enumaes256PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaes256PasswordStorageSchemeSchemaUrn(value *Enumaes256PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaesPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaesPasswordStorageSchemeSchemaUrn(values []EnumaesPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaesPasswordStorageSchemeSchemaUrn(value *EnumaesPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateConnectionCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateConnectionCriteriaSchemaUrn(values []EnumaggregateConnectionCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateConnectionCriteriaSchemaUrn(value *EnumaggregateConnectionCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateIdentityMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateIdentityMapperSchemaUrn(values []EnumaggregateIdentityMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateIdentityMapperSchemaUrn(value *EnumaggregateIdentityMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateRequestCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateRequestCriteriaSchemaUrn(values []EnumaggregateRequestCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateRequestCriteriaSchemaUrn(value *EnumaggregateRequestCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateResultCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateResultCriteriaSchemaUrn(values []EnumaggregateResultCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateResultCriteriaSchemaUrn(value *EnumaggregateResultCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateSearchEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateSearchEntryCriteriaSchemaUrn(values []EnumaggregateSearchEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateSearchEntryCriteriaSchemaUrn(value *EnumaggregateSearchEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumaggregateSearchReferenceCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumaggregateSearchReferenceCriteriaSchemaUrn(values []EnumaggregateSearchReferenceCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumaggregateSearchReferenceCriteriaSchemaUrn(value *EnumaggregateSearchReferenceCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalarmBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumalarmBackendSchemaUrn(values []EnumalarmBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalarmBackendSchemaUrn(value *EnumalarmBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalarmManagerDefaultGaugeAlertLevelProp) String() string {
	return string(e)
}

func StringSliceEnumalarmManagerDefaultGaugeAlertLevelProp(values []EnumalarmManagerDefaultGaugeAlertLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalarmManagerDefaultGaugeAlertLevelProp(value *EnumalarmManagerDefaultGaugeAlertLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalarmManagerGeneratedAlertTypesProp) String() string {
	return string(e)
}

func StringSliceEnumalarmManagerGeneratedAlertTypesProp(values []EnumalarmManagerGeneratedAlertTypesProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalarmManagerGeneratedAlertTypesProp(value *EnumalarmManagerGeneratedAlertTypesProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalarmManagerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumalarmManagerSchemaUrn(values []EnumalarmManagerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalarmManagerSchemaUrn(value *EnumalarmManagerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalarmManagerSuppressedAlarmProp) String() string {
	return string(e)
}

func StringSliceEnumalarmManagerSuppressedAlarmProp(values []EnumalarmManagerSuppressedAlarmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalarmManagerSuppressedAlarmProp(value *EnumalarmManagerSuppressedAlarmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumalertBackendSchemaUrn(values []EnumalertBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertBackendSchemaUrn(value *EnumalertBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerDisabledAlertTypeProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerDisabledAlertTypeProp(values []EnumalertHandlerDisabledAlertTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerDisabledAlertTypeProp(value *EnumalertHandlerDisabledAlertTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerEnabledAlertSeverityProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerEnabledAlertSeverityProp(values []EnumalertHandlerEnabledAlertSeverityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerEnabledAlertSeverityProp(value *EnumalertHandlerEnabledAlertSeverityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerEnabledAlertTypeProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerEnabledAlertTypeProp(values []EnumalertHandlerEnabledAlertTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerEnabledAlertTypeProp(value *EnumalertHandlerEnabledAlertTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerLongMessageBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerLongMessageBehaviorProp(values []EnumalertHandlerLongMessageBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerLongMessageBehaviorProp(value *EnumalertHandlerLongMessageBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerOutputFormatProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerOutputFormatProp(values []EnumalertHandlerOutputFormatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerOutputFormatProp(value *EnumalertHandlerOutputFormatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumalertHandlerOutputLocationProp) String() string {
	return string(e)
}

func StringSliceEnumalertHandlerOutputLocationProp(values []EnumalertHandlerOutputLocationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumalertHandlerOutputLocationProp(value *EnumalertHandlerOutputLocationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumamazonAwsExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumamazonAwsExternalServerSchemaUrn(values []EnumamazonAwsExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumamazonAwsExternalServerSchemaUrn(value *EnumamazonAwsExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumamazonKeyManagementServiceCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumamazonKeyManagementServiceCipherStreamProviderSchemaUrn(values []EnumamazonKeyManagementServiceCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumamazonKeyManagementServiceCipherStreamProviderSchemaUrn(value *EnumamazonKeyManagementServiceCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumamazonSecretsManagerCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumamazonSecretsManagerCipherStreamProviderSchemaUrn(values []EnumamazonSecretsManagerCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumamazonSecretsManagerCipherStreamProviderSchemaUrn(value *EnumamazonSecretsManagerCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumamazonSecretsManagerPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumamazonSecretsManagerPassphraseProviderSchemaUrn(values []EnumamazonSecretsManagerPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumamazonSecretsManagerPassphraseProviderSchemaUrn(value *EnumamazonSecretsManagerPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumamazonSecretsManagerPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumamazonSecretsManagerPasswordStorageSchemeSchemaUrn(values []EnumamazonSecretsManagerPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumamazonSecretsManagerPasswordStorageSchemeSchemaUrn(value *EnumamazonSecretsManagerPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumanonymousSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumanonymousSaslMechanismHandlerSchemaUrn(values []EnumanonymousSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumanonymousSaslMechanismHandlerSchemaUrn(value *EnumanonymousSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumapiKeyConjurAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumapiKeyConjurAuthenticationMethodSchemaUrn(values []EnumapiKeyConjurAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumapiKeyConjurAuthenticationMethodSchemaUrn(value *EnumapiKeyConjurAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumappRoleVaultAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumappRoleVaultAuthenticationMethodSchemaUrn(values []EnumappRoleVaultAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumappRoleVaultAuthenticationMethodSchemaUrn(value *EnumappRoleVaultAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumapproximateMatchingRuleSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumapproximateMatchingRuleSchemaUrn(values []EnumapproximateMatchingRuleSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumapproximateMatchingRuleSchemaUrn(value *EnumapproximateMatchingRuleSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumargon2PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumargon2PasswordStorageSchemeSchemaUrn(values []Enumargon2PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumargon2PasswordStorageSchemeSchemaUrn(value *Enumargon2PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumargon2dPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumargon2dPasswordStorageSchemeSchemaUrn(values []Enumargon2dPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumargon2dPasswordStorageSchemeSchemaUrn(value *Enumargon2dPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumargon2iPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumargon2iPasswordStorageSchemeSchemaUrn(values []Enumargon2iPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumargon2iPasswordStorageSchemeSchemaUrn(value *Enumargon2iPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumargon2idPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumargon2idPasswordStorageSchemeSchemaUrn(values []Enumargon2idPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumargon2idPasswordStorageSchemeSchemaUrn(value *Enumargon2idPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumattributeBasedLogFieldSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumattributeBasedLogFieldSyntaxSchemaUrn(values []EnumattributeBasedLogFieldSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumattributeBasedLogFieldSyntaxSchemaUrn(value *EnumattributeBasedLogFieldSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumattributeMapperPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumattributeMapperPluginSchemaUrn(values []EnumattributeMapperPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumattributeMapperPluginSchemaUrn(value *EnumattributeMapperPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumattributeTypeDescriptionAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumattributeTypeDescriptionAttributeSyntaxSchemaUrn(values []EnumattributeTypeDescriptionAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumattributeTypeDescriptionAttributeSyntaxSchemaUrn(value *EnumattributeTypeDescriptionAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumattributeValuePasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumattributeValuePasswordValidatorSchemaUrn(values []EnumattributeValuePasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumattributeValuePasswordValidatorSchemaUrn(value *EnumattributeValuePasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumauditDataSecurityRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumauditDataSecurityRecurringTaskSchemaUrn(values []EnumauditDataSecurityRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumauditDataSecurityRecurringTaskSchemaUrn(value *EnumauditDataSecurityRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumauthorizeServerInstanceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumauthorizeServerInstanceSchemaUrn(values []EnumauthorizeServerInstanceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumauthorizeServerInstanceSchemaUrn(value *EnumauthorizeServerInstanceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumavailabilityStateHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumavailabilityStateHttpServletExtensionSchemaUrn(values []EnumavailabilityStateHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumavailabilityStateHttpServletExtensionSchemaUrn(value *EnumavailabilityStateHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumazureKeyVaultCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumazureKeyVaultCipherStreamProviderSchemaUrn(values []EnumazureKeyVaultCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumazureKeyVaultCipherStreamProviderSchemaUrn(value *EnumazureKeyVaultCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumazureKeyVaultPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumazureKeyVaultPassphraseProviderSchemaUrn(values []EnumazureKeyVaultPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumazureKeyVaultPassphraseProviderSchemaUrn(value *EnumazureKeyVaultPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumazureKeyVaultPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumazureKeyVaultPasswordStorageSchemeSchemaUrn(values []EnumazureKeyVaultPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumazureKeyVaultPasswordStorageSchemeSchemaUrn(value *EnumazureKeyVaultPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendDefaultCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendDefaultCacheModeProp(values []EnumbackendDefaultCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendDefaultCacheModeProp(value *EnumbackendDefaultCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendDisabledAlertTypeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendDisabledAlertTypeProp(values []EnumbackendDisabledAlertTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendDisabledAlertTypeProp(value *EnumbackendDisabledAlertTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendDn2idCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendDn2idCacheModeProp(values []EnumbackendDn2idCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendDn2idCacheModeProp(value *EnumbackendDn2idCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendDn2uriCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendDn2uriCacheModeProp(values []EnumbackendDn2uriCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendDn2uriCacheModeProp(value *EnumbackendDn2uriCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendExternalTxnDefaultBackendLockBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumbackendExternalTxnDefaultBackendLockBehaviorProp(values []EnumbackendExternalTxnDefaultBackendLockBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendExternalTxnDefaultBackendLockBehaviorProp(value *EnumbackendExternalTxnDefaultBackendLockBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendId2childrenCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendId2childrenCacheModeProp(values []EnumbackendId2childrenCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendId2childrenCacheModeProp(value *EnumbackendId2childrenCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendId2entryCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendId2entryCacheModeProp(values []EnumbackendId2entryCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendId2entryCacheModeProp(value *EnumbackendId2entryCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendId2subtreeCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendId2subtreeCacheModeProp(values []EnumbackendId2subtreeCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendId2subtreeCacheModeProp(value *EnumbackendId2subtreeCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendIncludeVirtualAttributesProp) String() string {
	return string(e)
}

func StringSliceEnumbackendIncludeVirtualAttributesProp(values []EnumbackendIncludeVirtualAttributesProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendIncludeVirtualAttributesProp(value *EnumbackendIncludeVirtualAttributesProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendPrimeMethodProp) String() string {
	return string(e)
}

func StringSliceEnumbackendPrimeMethodProp(values []EnumbackendPrimeMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendPrimeMethodProp(value *EnumbackendPrimeMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendReportExcludedChangelogAttributesProp) String() string {
	return string(e)
}

func StringSliceEnumbackendReportExcludedChangelogAttributesProp(values []EnumbackendReportExcludedChangelogAttributesProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendReportExcludedChangelogAttributesProp(value *EnumbackendReportExcludedChangelogAttributesProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendSingleWriterLockBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumbackendSingleWriterLockBehaviorProp(values []EnumbackendSingleWriterLockBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendSingleWriterLockBehaviorProp(value *EnumbackendSingleWriterLockBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendSoftDeleteEntryIncludedOperationProp) String() string {
	return string(e)
}

func StringSliceEnumbackendSoftDeleteEntryIncludedOperationProp(values []EnumbackendSoftDeleteEntryIncludedOperationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendSoftDeleteEntryIncludedOperationProp(value *EnumbackendSoftDeleteEntryIncludedOperationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) String() string {
	return string(e)
}

func StringSliceEnumbackendSystemIndexToPrimeInternalNodesOnlyProp(values []EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendSystemIndexToPrimeInternalNodesOnlyProp(value *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendSystemIndexToPrimeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendSystemIndexToPrimeProp(values []EnumbackendSystemIndexToPrimeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendSystemIndexToPrimeProp(value *EnumbackendSystemIndexToPrimeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendUncachedId2entryCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendUncachedId2entryCacheModeProp(values []EnumbackendUncachedId2entryCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendUncachedId2entryCacheModeProp(value *EnumbackendUncachedId2entryCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackendWritabilityModeProp) String() string {
	return string(e)
}

func StringSliceEnumbackendWritabilityModeProp(values []EnumbackendWritabilityModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackendWritabilityModeProp(value *EnumbackendWritabilityModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackupBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbackupBackendSchemaUrn(values []EnumbackupBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackupBackendSchemaUrn(value *EnumbackupBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbackupRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbackupRecurringTaskSchemaUrn(values []EnumbackupRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbackupRecurringTaskSchemaUrn(value *EnumbackupRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumbase64PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbase64PasswordStorageSchemeSchemaUrn(values []Enumbase64PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbase64PasswordStorageSchemeSchemaUrn(value *Enumbase64PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbatchedTransactionsExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbatchedTransactionsExtendedOperationHandlerSchemaUrn(values []EnumbatchedTransactionsExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbatchedTransactionsExtendedOperationHandlerSchemaUrn(value *EnumbatchedTransactionsExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbcryptPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbcryptPasswordStorageSchemeSchemaUrn(values []EnumbcryptPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbcryptPasswordStorageSchemeSchemaUrn(value *EnumbcryptPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbitStringAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbitStringAttributeSyntaxSchemaUrn(values []EnumbitStringAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbitStringAttributeSyntaxSchemaUrn(value *EnumbitStringAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumblindTrustManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumblindTrustManagerProviderSchemaUrn(values []EnumblindTrustManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumblindTrustManagerProviderSchemaUrn(value *EnumblindTrustManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumblowfishPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumblowfishPasswordStorageSchemeSchemaUrn(values []EnumblowfishPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumblowfishPasswordStorageSchemeSchemaUrn(value *EnumblowfishPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbooleanAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbooleanAttributeSyntaxSchemaUrn(values []EnumbooleanAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbooleanAttributeSyntaxSchemaUrn(value *EnumbooleanAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumbooleanTokenClaimValidationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumbooleanTokenClaimValidationSchemaUrn(values []EnumbooleanTokenClaimValidationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumbooleanTokenClaimValidationSchemaUrn(value *EnumbooleanTokenClaimValidationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcancelExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcancelExtendedOperationHandlerSchemaUrn(values []EnumcancelExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcancelExtendedOperationHandlerSchemaUrn(value *EnumcancelExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcertificateDelegatedAdminAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcertificateDelegatedAdminAttributeSchemaUrn(values []EnumcertificateDelegatedAdminAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcertificateDelegatedAdminAttributeSchemaUrn(value *EnumcertificateDelegatedAdminAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcertificateInterServerAuthenticationInfoSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcertificateInterServerAuthenticationInfoSchemaUrn(values []EnumcertificateInterServerAuthenticationInfoSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcertificateInterServerAuthenticationInfoSchemaUrn(value *EnumcertificateInterServerAuthenticationInfoSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcertificateMapperFingerprintAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumcertificateMapperFingerprintAlgorithmProp(values []EnumcertificateMapperFingerprintAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcertificateMapperFingerprintAlgorithmProp(value *EnumcertificateMapperFingerprintAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumchangeSubscriptionNotificationPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumchangeSubscriptionNotificationPluginSchemaUrn(values []EnumchangeSubscriptionNotificationPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumchangeSubscriptionNotificationPluginSchemaUrn(value *EnumchangeSubscriptionNotificationPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumchangeSubscriptionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumchangeSubscriptionSchemaUrn(values []EnumchangeSubscriptionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumchangeSubscriptionSchemaUrn(value *EnumchangeSubscriptionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumchangelogBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumchangelogBackendSchemaUrn(values []EnumchangelogBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumchangelogBackendSchemaUrn(value *EnumchangelogBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumchangelogPasswordEncryptionPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumchangelogPasswordEncryptionPluginSchemaUrn(values []EnumchangelogPasswordEncryptionPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumchangelogPasswordEncryptionPluginSchemaUrn(value *EnumchangelogPasswordEncryptionPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcharacterSetPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcharacterSetPasswordValidatorSchemaUrn(values []EnumcharacterSetPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcharacterSetPasswordValidatorSchemaUrn(value *EnumcharacterSetPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcipherSecretKeySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcipherSecretKeySchemaUrn(values []EnumcipherSecretKeySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcipherSecretKeySchemaUrn(value *EnumcipherSecretKeySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcleanUpExpiredPingfederatePersistentAccessGrantsPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcleanUpExpiredPingfederatePersistentAccessGrantsPluginSchemaUrn(values []EnumcleanUpExpiredPingfederatePersistentAccessGrantsPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcleanUpExpiredPingfederatePersistentAccessGrantsPluginSchemaUrn(value *EnumcleanUpExpiredPingfederatePersistentAccessGrantsPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcleanUpExpiredPingfederatePersistentSessionsPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcleanUpExpiredPingfederatePersistentSessionsPluginSchemaUrn(values []EnumcleanUpExpiredPingfederatePersistentSessionsPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcleanUpExpiredPingfederatePersistentSessionsPluginSchemaUrn(value *EnumcleanUpExpiredPingfederatePersistentSessionsPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcleanUpInactivePingfederatePersistentSessionsPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcleanUpInactivePingfederatePersistentSessionsPluginSchemaUrn(values []EnumcleanUpInactivePingfederatePersistentSessionsPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcleanUpInactivePingfederatePersistentSessionsPluginSchemaUrn(value *EnumcleanUpInactivePingfederatePersistentSessionsPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclearPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumclearPasswordStorageSchemeSchemaUrn(values []EnumclearPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclearPasswordStorageSchemeSchemaUrn(value *EnumclearPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionMonitorProviderSchemaUrn(values []EnumclientConnectionMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionMonitorProviderSchemaUrn(value *EnumclientConnectionMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyAllowedAuthTypeProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyAllowedAuthTypeProp(values []EnumclientConnectionPolicyAllowedAuthTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyAllowedAuthTypeProp(value *EnumclientConnectionPolicyAllowedAuthTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyAllowedFilterTypeProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyAllowedFilterTypeProp(values []EnumclientConnectionPolicyAllowedFilterTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyAllowedFilterTypeProp(value *EnumclientConnectionPolicyAllowedFilterTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyAllowedOperationProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyAllowedOperationProp(values []EnumclientConnectionPolicyAllowedOperationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyAllowedOperationProp(value *EnumclientConnectionPolicyAllowedOperationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp(values []EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp(value *EnumclientConnectionPolicyConnectionOperationRateExceededBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp(values []EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp(value *EnumclientConnectionPolicyMaximumConcurrentOperationsPerConnectionExceededBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp(values []EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp(value *EnumclientConnectionPolicyPolicyOperationRateExceededBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientConnectionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumclientConnectionPolicySchemaUrn(values []EnumclientConnectionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientConnectionPolicySchemaUrn(value *EnumclientConnectionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumclientSecretAzureAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumclientSecretAzureAuthenticationMethodSchemaUrn(values []EnumclientSecretAzureAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumclientSecretAzureAuthenticationMethodSchemaUrn(value *EnumclientSecretAzureAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcollectSupportDataExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcollectSupportDataExtendedOperationHandlerSchemaUrn(values []EnumcollectSupportDataExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcollectSupportDataExtendedOperationHandlerSchemaUrn(value *EnumcollectSupportDataExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcollectSupportDataRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcollectSupportDataRecurringTaskSchemaUrn(values []EnumcollectSupportDataRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcollectSupportDataRecurringTaskSchemaUrn(value *EnumcollectSupportDataRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcommonLogFileHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcommonLogFileHttpOperationLogPublisherSchemaUrn(values []EnumcommonLogFileHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcommonLogFileHttpOperationLogPublisherSchemaUrn(value *EnumcommonLogFileHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcomposedAttributePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcomposedAttributePluginSchemaUrn(values []EnumcomposedAttributePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcomposedAttributePluginSchemaUrn(value *EnumcomposedAttributePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconfigFileHandlerBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconfigFileHandlerBackendSchemaUrn(values []EnumconfigFileHandlerBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconfigFileHandlerBackendSchemaUrn(value *EnumconfigFileHandlerBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconfigHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconfigHttpServletExtensionSchemaUrn(values []EnumconfigHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconfigHttpServletExtensionSchemaUrn(value *EnumconfigHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconjurCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconjurCipherStreamProviderSchemaUrn(values []EnumconjurCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconjurCipherStreamProviderSchemaUrn(value *EnumconjurCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconjurExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconjurExternalServerSchemaUrn(values []EnumconjurExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconjurExternalServerSchemaUrn(value *EnumconjurExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconjurPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconjurPassphraseProviderSchemaUrn(values []EnumconjurPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconjurPassphraseProviderSchemaUrn(value *EnumconjurPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconjurPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconjurPasswordStorageSchemeSchemaUrn(values []EnumconjurPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconjurPasswordStorageSchemeSchemaUrn(value *EnumconjurPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaAllIncludedUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaAllIncludedUserPrivilegeProp(values []EnumconnectionCriteriaAllIncludedUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaAllIncludedUserPrivilegeProp(value *EnumconnectionCriteriaAllIncludedUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaAnyIncludedUserPrivilegeProp(values []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaAnyIncludedUserPrivilegeProp(value *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaAuthenticationSecurityLevelProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaAuthenticationSecurityLevelProp(values []EnumconnectionCriteriaAuthenticationSecurityLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaAuthenticationSecurityLevelProp(value *EnumconnectionCriteriaAuthenticationSecurityLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaCommunicationSecurityLevelProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaCommunicationSecurityLevelProp(values []EnumconnectionCriteriaCommunicationSecurityLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaCommunicationSecurityLevelProp(value *EnumconnectionCriteriaCommunicationSecurityLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaNoneIncludedUserPrivilegeProp(values []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaNoneIncludedUserPrivilegeProp(value *EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(values []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(value *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionCriteriaUserAuthTypeProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionCriteriaUserAuthTypeProp(values []EnumconnectionCriteriaUserAuthTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionCriteriaUserAuthTypeProp(value *EnumconnectionCriteriaUserAuthTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconnectionHandlerSslClientAuthPolicyProp) String() string {
	return string(e)
}

func StringSliceEnumconnectionHandlerSslClientAuthPolicyProp(values []EnumconnectionHandlerSslClientAuthPolicyProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconnectionHandlerSslClientAuthPolicyProp(value *EnumconnectionHandlerSslClientAuthPolicyProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsentDefinitionLocalizationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsentDefinitionLocalizationSchemaUrn(values []EnumconsentDefinitionLocalizationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsentDefinitionLocalizationSchemaUrn(value *EnumconsentDefinitionLocalizationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsentDefinitionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsentDefinitionSchemaUrn(values []EnumconsentDefinitionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsentDefinitionSchemaUrn(value *EnumconsentDefinitionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsentHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsentHttpServletExtensionSchemaUrn(values []EnumconsentHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsentHttpServletExtensionSchemaUrn(value *EnumconsentHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsentServiceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsentServiceSchemaUrn(values []EnumconsentServiceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsentServiceSchemaUrn(value *EnumconsentServiceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsoleJsonAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsoleJsonAccessLogPublisherSchemaUrn(values []EnumconsoleJsonAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsoleJsonAccessLogPublisherSchemaUrn(value *EnumconsoleJsonAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsoleJsonAuditLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsoleJsonAuditLogPublisherSchemaUrn(values []EnumconsoleJsonAuditLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsoleJsonAuditLogPublisherSchemaUrn(value *EnumconsoleJsonAuditLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsoleJsonErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsoleJsonErrorLogPublisherSchemaUrn(values []EnumconsoleJsonErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsoleJsonErrorLogPublisherSchemaUrn(value *EnumconsoleJsonErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsoleJsonHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsoleJsonHttpOperationLogPublisherSchemaUrn(values []EnumconsoleJsonHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsoleJsonHttpOperationLogPublisherSchemaUrn(value *EnumconsoleJsonHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconsoleWebApplicationExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconsoleWebApplicationExtensionSchemaUrn(values []EnumconsoleWebApplicationExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconsoleWebApplicationExtensionSchemaUrn(value *EnumconsoleWebApplicationExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconstructedAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconstructedAttributeSchemaUrn(values []EnumconstructedAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconstructedAttributeSchemaUrn(value *EnumconstructedAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumconstructedVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumconstructedVirtualAttributeSchemaUrn(values []EnumconstructedVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumconstructedVirtualAttributeSchemaUrn(value *EnumconstructedVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcopyLogFileRotationListenerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcopyLogFileRotationListenerSchemaUrn(values []EnumcopyLogFileRotationListenerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcopyLogFileRotationListenerSchemaUrn(value *EnumcopyLogFileRotationListenerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcramMd5SaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcramMd5SaslMechanismHandlerSchemaUrn(values []EnumcramMd5SaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcramMd5SaslMechanismHandlerSchemaUrn(value *EnumcramMd5SaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcryptPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcryptPasswordStorageSchemeSchemaUrn(values []EnumcryptPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcryptPasswordStorageSchemeSchemaUrn(value *EnumcryptPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcryptoManagerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcryptoManagerSchemaUrn(values []EnumcryptoManagerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcryptoManagerSchemaUrn(value *EnumcryptoManagerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcurrentTimeVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcurrentTimeVirtualAttributeSchemaUrn(values []EnumcurrentTimeVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcurrentTimeVirtualAttributeSchemaUrn(value *EnumcurrentTimeVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomAlertHandlerSchemaUrn(values []EnumcustomAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomAlertHandlerSchemaUrn(value *EnumcustomAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomBackendSchemaUrn(values []EnumcustomBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomBackendSchemaUrn(value *EnumcustomBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomExtendedOperationHandlerSchemaUrn(values []EnumcustomExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomExtendedOperationHandlerSchemaUrn(value *EnumcustomExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomKeyManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomKeyManagerProviderSchemaUrn(values []EnumcustomKeyManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomKeyManagerProviderSchemaUrn(value *EnumcustomKeyManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomLoggedStatsSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomLoggedStatsSchemaUrn(values []EnumcustomLoggedStatsSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomLoggedStatsSchemaUrn(value *EnumcustomLoggedStatsSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomLoggedStatsStatisticTypeProp) String() string {
	return string(e)
}

func StringSliceEnumcustomLoggedStatsStatisticTypeProp(values []EnumcustomLoggedStatsStatisticTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomLoggedStatsStatisticTypeProp(value *EnumcustomLoggedStatsStatisticTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomMonitorProviderSchemaUrn(values []EnumcustomMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomMonitorProviderSchemaUrn(value *EnumcustomMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomPasswordValidatorSchemaUrn(values []EnumcustomPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomPasswordValidatorSchemaUrn(value *EnumcustomPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomPluginSchemaUrn(values []EnumcustomPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomPluginSchemaUrn(value *EnumcustomPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomSynchronizationProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomSynchronizationProviderSchemaUrn(values []EnumcustomSynchronizationProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomSynchronizationProviderSchemaUrn(value *EnumcustomSynchronizationProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomVelocityContextProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomVelocityContextProviderSchemaUrn(values []EnumcustomVelocityContextProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomVelocityContextProviderSchemaUrn(value *EnumcustomVelocityContextProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumcustomVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumcustomVirtualAttributeSchemaUrn(values []EnumcustomVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumcustomVirtualAttributeSchemaUrn(value *EnumcustomVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdataSecurityAuditorAuditSeverityProp) String() string {
	return string(e)
}

func StringSliceEnumdataSecurityAuditorAuditSeverityProp(values []EnumdataSecurityAuditorAuditSeverityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdataSecurityAuditorAuditSeverityProp(value *EnumdataSecurityAuditorAuditSeverityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdataSecurityAuditorIncludePrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumdataSecurityAuditorIncludePrivilegeProp(values []EnumdataSecurityAuditorIncludePrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdataSecurityAuditorIncludePrivilegeProp(value *EnumdataSecurityAuditorIncludePrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdataSecurityAuditorWeakCryptEncodingProp) String() string {
	return string(e)
}

func StringSliceEnumdataSecurityAuditorWeakCryptEncodingProp(values []EnumdataSecurityAuditorWeakCryptEncodingProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdataSecurityAuditorWeakCryptEncodingProp(value *EnumdataSecurityAuditorWeakCryptEncodingProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdebugAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdebugAccessLogPublisherSchemaUrn(values []EnumdebugAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdebugAccessLogPublisherSchemaUrn(value *EnumdebugAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdebugTargetDebugCategoryProp) String() string {
	return string(e)
}

func StringSliceEnumdebugTargetDebugCategoryProp(values []EnumdebugTargetDebugCategoryProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdebugTargetDebugCategoryProp(value *EnumdebugTargetDebugCategoryProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdebugTargetDebugLevelProp) String() string {
	return string(e)
}

func StringSliceEnumdebugTargetDebugLevelProp(values []EnumdebugTargetDebugLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdebugTargetDebugLevelProp(value *EnumdebugTargetDebugLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdebugTargetSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdebugTargetSchemaUrn(values []EnumdebugTargetSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdebugTargetSchemaUrn(value *EnumdebugTargetSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdefaultAzureAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdefaultAzureAuthenticationMethodSchemaUrn(values []EnumdefaultAzureAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdefaultAzureAuthenticationMethodSchemaUrn(value *EnumdefaultAzureAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdefaultUncachedAttributeCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdefaultUncachedAttributeCriteriaSchemaUrn(values []EnumdefaultUncachedAttributeCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdefaultUncachedAttributeCriteriaSchemaUrn(value *EnumdefaultUncachedAttributeCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdefaultUncachedEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdefaultUncachedEntryCriteriaSchemaUrn(values []EnumdefaultUncachedEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdefaultUncachedEntryCriteriaSchemaUrn(value *EnumdefaultUncachedEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelayBindResponseFailureLockoutActionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelayBindResponseFailureLockoutActionSchemaUrn(values []EnumdelayBindResponseFailureLockoutActionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelayBindResponseFailureLockoutActionSchemaUrn(value *EnumdelayBindResponseFailureLockoutActionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelayPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelayPluginSchemaUrn(values []EnumdelayPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelayPluginSchemaUrn(value *EnumdelayPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelayRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelayRecurringTaskSchemaUrn(values []EnumdelayRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelayRecurringTaskSchemaUrn(value *EnumdelayRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminAttributeAttributePresentationProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminAttributeAttributePresentationProp(values []EnumdelegatedAdminAttributeAttributePresentationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminAttributeAttributePresentationProp(value *EnumdelegatedAdminAttributeAttributePresentationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminAttributeCategorySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminAttributeCategorySchemaUrn(values []EnumdelegatedAdminAttributeCategorySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminAttributeCategorySchemaUrn(value *EnumdelegatedAdminAttributeCategorySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp(values []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp(value *EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminAttributeMutabilityProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminAttributeMutabilityProp(values []EnumdelegatedAdminAttributeMutabilityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminAttributeMutabilityProp(value *EnumdelegatedAdminAttributeMutabilityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp(values []EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp(value *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminCorrelatedRestResourceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminCorrelatedRestResourceSchemaUrn(values []EnumdelegatedAdminCorrelatedRestResourceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminCorrelatedRestResourceSchemaUrn(value *EnumdelegatedAdminCorrelatedRestResourceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminHttpServletExtensionSchemaUrn(values []EnumdelegatedAdminHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminHttpServletExtensionSchemaUrn(value *EnumdelegatedAdminHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminResourceRightsAdminPermissionProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminResourceRightsAdminPermissionProp(values []EnumdelegatedAdminResourceRightsAdminPermissionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminResourceRightsAdminPermissionProp(value *EnumdelegatedAdminResourceRightsAdminPermissionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminResourceRightsAdminScopeProp) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminResourceRightsAdminScopeProp(values []EnumdelegatedAdminResourceRightsAdminScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminResourceRightsAdminScopeProp(value *EnumdelegatedAdminResourceRightsAdminScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminResourceRightsSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminResourceRightsSchemaUrn(values []EnumdelegatedAdminResourceRightsSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminResourceRightsSchemaUrn(value *EnumdelegatedAdminResourceRightsSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdelegatedAdminRightsSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdelegatedAdminRightsSchemaUrn(values []EnumdelegatedAdminRightsSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdelegatedAdminRightsSchemaUrn(value *EnumdelegatedAdminRightsSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdeliverOtpExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdeliverOtpExtendedOperationHandlerSchemaUrn(values []EnumdeliverOtpExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdeliverOtpExtendedOperationHandlerSchemaUrn(value *EnumdeliverOtpExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdeliverPasswordResetTokenExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdeliverPasswordResetTokenExtendedOperationHandlerSchemaUrn(values []EnumdeliverPasswordResetTokenExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdeliverPasswordResetTokenExtendedOperationHandlerSchemaUrn(value *EnumdeliverPasswordResetTokenExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdeprecatedPasswordStorageSchemeDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdeprecatedPasswordStorageSchemeDataSecurityAuditorSchemaUrn(values []EnumdeprecatedPasswordStorageSchemeDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdeprecatedPasswordStorageSchemeDataSecurityAuditorSchemaUrn(value *EnumdeprecatedPasswordStorageSchemeDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdetailedHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdetailedHttpOperationLogPublisherSchemaUrn(values []EnumdetailedHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdetailedHttpOperationLogPublisherSchemaUrn(value *EnumdetailedHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdictionaryPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdictionaryPasswordValidatorSchemaUrn(values []EnumdictionaryPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdictionaryPasswordValidatorSchemaUrn(value *EnumdictionaryPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdigestMd5SaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdigestMd5SaslMechanismHandlerSchemaUrn(values []EnumdigestMd5SaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdigestMd5SaslMechanismHandlerSchemaUrn(value *EnumdigestMd5SaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdirectoryRestApiHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdirectoryRestApiHttpServletExtensionSchemaUrn(values []EnumdirectoryRestApiHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdirectoryRestApiHttpServletExtensionSchemaUrn(value *EnumdirectoryRestApiHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdirectoryServerInstanceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdirectoryServerInstanceSchemaUrn(values []EnumdirectoryServerInstanceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdirectoryServerInstanceSchemaUrn(value *EnumdirectoryServerInstanceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdirectoryStringAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdirectoryStringAttributeSyntaxSchemaUrn(values []EnumdirectoryStringAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdirectoryStringAttributeSyntaxSchemaUrn(value *EnumdirectoryStringAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdisabledAccountDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdisabledAccountDataSecurityAuditorSchemaUrn(values []EnumdisabledAccountDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdisabledAccountDataSecurityAuditorSchemaUrn(value *EnumdisabledAccountDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdiskSpaceUsageMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdiskSpaceUsageMonitorProviderSchemaUrn(values []EnumdiskSpaceUsageMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdiskSpaceUsageMonitorProviderSchemaUrn(value *EnumdiskSpaceUsageMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdistinguishedNameAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdistinguishedNameAttributeSyntaxSchemaUrn(values []EnumdistinguishedNameAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdistinguishedNameAttributeSyntaxSchemaUrn(value *EnumdistinguishedNameAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdnJoinVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdnJoinVirtualAttributeSchemaUrn(values []EnumdnJoinVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdnJoinVirtualAttributeSchemaUrn(value *EnumdnJoinVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdnMapSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdnMapSchemaUrn(values []EnumdnMapSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdnMapSchemaUrn(value *EnumdnMapSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdnMapperPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdnMapperPluginSchemaUrn(values []EnumdnMapperPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdnMapperPluginSchemaUrn(value *EnumdnMapperPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdseeCompatAccessControlHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdseeCompatAccessControlHandlerSchemaUrn(values []EnumdseeCompatAccessControlHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdseeCompatAccessControlHandlerSchemaUrn(value *EnumdseeCompatAccessControlHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumdynamicGroupImplementationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumdynamicGroupImplementationSchemaUrn(values []EnumdynamicGroupImplementationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumdynamicGroupImplementationSchemaUrn(value *EnumdynamicGroupImplementationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumemailOtpDeliveryMechanismSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumemailOtpDeliveryMechanismSchemaUrn(values []EnumemailOtpDeliveryMechanismSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumemailOtpDeliveryMechanismSchemaUrn(value *EnumemailOtpDeliveryMechanismSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumencryptAttributeValuesPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumencryptAttributeValuesPluginSchemaUrn(values []EnumencryptAttributeValuesPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumencryptAttributeValuesPluginSchemaUrn(value *EnumencryptAttributeValuesPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumencryptionSettingsBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumencryptionSettingsBackendSchemaUrn(values []EnumencryptionSettingsBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumencryptionSettingsBackendSchemaUrn(value *EnumencryptionSettingsBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumenterLockdownModeRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumenterLockdownModeRecurringTaskSchemaUrn(values []EnumenterLockdownModeRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumenterLockdownModeRecurringTaskSchemaUrn(value *EnumenterLockdownModeRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumentryChecksumVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumentryChecksumVirtualAttributeSchemaUrn(values []EnumentryChecksumVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumentryChecksumVirtualAttributeSchemaUrn(value *EnumentryChecksumVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumentryDnVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumentryDnVirtualAttributeSchemaUrn(values []EnumentryDnVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumentryDnVirtualAttributeSchemaUrn(value *EnumentryDnVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumenvironmentVariablePassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumenvironmentVariablePassphraseProviderSchemaUrn(values []EnumenvironmentVariablePassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumenvironmentVariablePassphraseProviderSchemaUrn(value *EnumenvironmentVariablePassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumequalityJoinVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumequalityJoinVirtualAttributeSchemaUrn(values []EnumequalityJoinVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumequalityJoinVirtualAttributeSchemaUrn(value *EnumequalityJoinVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumequalityMatchingRuleSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumequalityMatchingRuleSchemaUrn(values []EnumequalityMatchingRuleSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumequalityMatchingRuleSchemaUrn(value *EnumequalityMatchingRuleSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumerrorLogAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumerrorLogAccountStatusNotificationHandlerSchemaUrn(values []EnumerrorLogAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumerrorLogAccountStatusNotificationHandlerSchemaUrn(value *EnumerrorLogAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumerrorLogAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumerrorLogAlertHandlerSchemaUrn(values []EnumerrorLogAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumerrorLogAlertHandlerSchemaUrn(value *EnumerrorLogAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumerrorLogFieldMappingSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumerrorLogFieldMappingSchemaUrn(values []EnumerrorLogFieldMappingSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumerrorLogFieldMappingSchemaUrn(value *EnumerrorLogFieldMappingSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexactMatchIdentityMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexactMatchIdentityMapperSchemaUrn(values []EnumexactMatchIdentityMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexactMatchIdentityMapperSchemaUrn(value *EnumexactMatchIdentityMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexecAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexecAlertHandlerSchemaUrn(values []EnumexecAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexecAlertHandlerSchemaUrn(value *EnumexecAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexecRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexecRecurringTaskSchemaUrn(values []EnumexecRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexecRecurringTaskSchemaUrn(value *EnumexecRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexpiredPasswordDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexpiredPasswordDataSecurityAuditorSchemaUrn(values []EnumexpiredPasswordDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexpiredPasswordDataSecurityAuditorSchemaUrn(value *EnumexpiredPasswordDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexportReversiblePasswordsExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexportReversiblePasswordsExtendedOperationHandlerSchemaUrn(values []EnumexportReversiblePasswordsExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexportReversiblePasswordsExtendedOperationHandlerSchemaUrn(value *EnumexportReversiblePasswordsExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumextendedOperationHandlerAllowedOperationProp) String() string {
	return string(e)
}

func StringSliceEnumextendedOperationHandlerAllowedOperationProp(values []EnumextendedOperationHandlerAllowedOperationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumextendedOperationHandlerAllowedOperationProp(value *EnumextendedOperationHandlerAllowedOperationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumexternalSaslMechanismHandlerSchemaUrn(values []EnumexternalSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalSaslMechanismHandlerSchemaUrn(value *EnumexternalSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerActiveDirectoryAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerActiveDirectoryAuthenticationMethodProp(values []EnumexternalServerActiveDirectoryAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerActiveDirectoryAuthenticationMethodProp(value *EnumexternalServerActiveDirectoryAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerAmazonAwsAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerAmazonAwsAuthenticationMethodProp(values []EnumexternalServerAmazonAwsAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerAmazonAwsAuthenticationMethodProp(value *EnumexternalServerAmazonAwsAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerAuthenticationMethodProp(values []EnumexternalServerAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerAuthenticationMethodProp(value *EnumexternalServerAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerConnectionSecurityProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerConnectionSecurityProp(values []EnumexternalServerConnectionSecurityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerConnectionSecurityProp(value *EnumexternalServerConnectionSecurityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerDefunctConnectionResultCodeProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerDefunctConnectionResultCodeProp(values []EnumexternalServerDefunctConnectionResultCodeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerDefunctConnectionResultCodeProp(value *EnumexternalServerDefunctConnectionResultCodeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerHostnameVerificationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerHostnameVerificationMethodProp(values []EnumexternalServerHostnameVerificationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerHostnameVerificationMethodProp(value *EnumexternalServerHostnameVerificationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerJdbcDriverTypeProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerJdbcDriverTypeProp(values []EnumexternalServerJdbcDriverTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerJdbcDriverTypeProp(value *EnumexternalServerJdbcDriverTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerLdapAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerLdapAuthenticationMethodProp(values []EnumexternalServerLdapAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerLdapAuthenticationMethodProp(value *EnumexternalServerLdapAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerNokiaDsAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerNokiaDsAuthenticationMethodProp(values []EnumexternalServerNokiaDsAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerNokiaDsAuthenticationMethodProp(value *EnumexternalServerNokiaDsAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerNokiaProxyServerAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerNokiaProxyServerAuthenticationMethodProp(values []EnumexternalServerNokiaProxyServerAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerNokiaProxyServerAuthenticationMethodProp(value *EnumexternalServerNokiaProxyServerAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerOpendjAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerOpendjAuthenticationMethodProp(values []EnumexternalServerOpendjAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerOpendjAuthenticationMethodProp(value *EnumexternalServerOpendjAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerOracleUnifiedDirectoryAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerOracleUnifiedDirectoryAuthenticationMethodProp(values []EnumexternalServerOracleUnifiedDirectoryAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerOracleUnifiedDirectoryAuthenticationMethodProp(value *EnumexternalServerOracleUnifiedDirectoryAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerPingIdentityDsAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerPingIdentityDsAuthenticationMethodProp(values []EnumexternalServerPingIdentityDsAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerPingIdentityDsAuthenticationMethodProp(value *EnumexternalServerPingIdentityDsAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerPingIdentityProxyServerAuthenticationMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerPingIdentityProxyServerAuthenticationMethodProp(values []EnumexternalServerPingIdentityProxyServerAuthenticationMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerPingIdentityProxyServerAuthenticationMethodProp(value *EnumexternalServerPingIdentityProxyServerAuthenticationMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerSmtpSecurityProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerSmtpSecurityProp(values []EnumexternalServerSmtpSecurityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerSmtpSecurityProp(value *EnumexternalServerSmtpSecurityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerTransactionIsolationLevelProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerTransactionIsolationLevelProp(values []EnumexternalServerTransactionIsolationLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerTransactionIsolationLevelProp(value *EnumexternalServerTransactionIsolationLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerTransportMechanismProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerTransportMechanismProp(values []EnumexternalServerTransportMechanismProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerTransportMechanismProp(value *EnumexternalServerTransportMechanismProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumexternalServerVerifyCredentialsMethodProp) String() string {
	return string(e)
}

func StringSliceEnumexternalServerVerifyCredentialsMethodProp(values []EnumexternalServerVerifyCredentialsMethodProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumexternalServerVerifyCredentialsMethodProp(value *EnumexternalServerVerifyCredentialsMethodProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfifoEntryCacheSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfifoEntryCacheSchemaUrn(values []EnumfifoEntryCacheSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfifoEntryCacheSchemaUrn(value *EnumfifoEntryCacheSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedAccessLogPublisherSchemaUrn(values []EnumfileBasedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedAccessLogPublisherSchemaUrn(value *EnumfileBasedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedAuditLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedAuditLogPublisherSchemaUrn(values []EnumfileBasedAuditLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedAuditLogPublisherSchemaUrn(value *EnumfileBasedAuditLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedCipherStreamProviderSchemaUrn(values []EnumfileBasedCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedCipherStreamProviderSchemaUrn(value *EnumfileBasedCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedDebugLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedDebugLogPublisherSchemaUrn(values []EnumfileBasedDebugLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedDebugLogPublisherSchemaUrn(value *EnumfileBasedDebugLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedErrorLogPublisherSchemaUrn(values []EnumfileBasedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedErrorLogPublisherSchemaUrn(value *EnumfileBasedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedJsonAuditLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedJsonAuditLogPublisherSchemaUrn(values []EnumfileBasedJsonAuditLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedJsonAuditLogPublisherSchemaUrn(value *EnumfileBasedJsonAuditLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedJsonHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedJsonHttpOperationLogPublisherSchemaUrn(values []EnumfileBasedJsonHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedJsonHttpOperationLogPublisherSchemaUrn(value *EnumfileBasedJsonHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedKeyManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedKeyManagerProviderSchemaUrn(values []EnumfileBasedKeyManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedKeyManagerProviderSchemaUrn(value *EnumfileBasedKeyManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedPassphraseProviderSchemaUrn(values []EnumfileBasedPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedPassphraseProviderSchemaUrn(value *EnumfileBasedPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedTraceLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedTraceLogPublisherSchemaUrn(values []EnumfileBasedTraceLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedTraceLogPublisherSchemaUrn(value *EnumfileBasedTraceLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileBasedTrustManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileBasedTrustManagerProviderSchemaUrn(values []EnumfileBasedTrustManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileBasedTrustManagerProviderSchemaUrn(value *EnumfileBasedTrustManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileCountLogRetentionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileCountLogRetentionPolicySchemaUrn(values []EnumfileCountLogRetentionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileCountLogRetentionPolicySchemaUrn(value *EnumfileCountLogRetentionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileRetentionRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileRetentionRecurringTaskSchemaUrn(values []EnumfileRetentionRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileRetentionRecurringTaskSchemaUrn(value *EnumfileRetentionRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfileServerHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfileServerHttpServletExtensionSchemaUrn(values []EnumfileServerHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfileServerHttpServletExtensionSchemaUrn(value *EnumfileServerHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfilterBasedUncachedEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfilterBasedUncachedEntryCriteriaSchemaUrn(values []EnumfilterBasedUncachedEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfilterBasedUncachedEntryCriteriaSchemaUrn(value *EnumfilterBasedUncachedEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfilterDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfilterDataSecurityAuditorSchemaUrn(values []EnumfilterDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfilterDataSecurityAuditorSchemaUrn(value *EnumfilterDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfingerprintCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfingerprintCertificateMapperSchemaUrn(values []EnumfingerprintCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfingerprintCertificateMapperSchemaUrn(value *EnumfingerprintCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfixedTimeLogRotationPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfixedTimeLogRotationPolicySchemaUrn(values []EnumfixedTimeLogRotationPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfixedTimeLogRotationPolicySchemaUrn(value *EnumfixedTimeLogRotationPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumfreeDiskSpaceLogRetentionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumfreeDiskSpaceLogRetentionPolicySchemaUrn(values []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumfreeDiskSpaceLogRetentionPolicySchemaUrn(value *EnumfreeDiskSpaceLogRetentionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeAlertLevelProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeAlertLevelProp(values []EnumgaugeAlertLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeAlertLevelProp(value *EnumgaugeAlertLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeDataSourceDataOrientationProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeDataSourceDataOrientationProp(values []EnumgaugeDataSourceDataOrientationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeDataSourceDataOrientationProp(value *EnumgaugeDataSourceDataOrientationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeDataSourceStatisticTypeProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeDataSourceStatisticTypeProp(values []EnumgaugeDataSourceStatisticTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeDataSourceStatisticTypeProp(value *EnumgaugeDataSourceStatisticTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeOverrideSeverityProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeOverrideSeverityProp(values []EnumgaugeOverrideSeverityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeOverrideSeverityProp(value *EnumgaugeOverrideSeverityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeServerDegradedSeverityLevelProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeServerDegradedSeverityLevelProp(values []EnumgaugeServerDegradedSeverityLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeServerDegradedSeverityLevelProp(value *EnumgaugeServerDegradedSeverityLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgaugeServerUnavailableSeverityLevelProp) String() string {
	return string(e)
}

func StringSliceEnumgaugeServerUnavailableSeverityLevelProp(values []EnumgaugeServerUnavailableSeverityLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgaugeServerUnavailableSeverityLevelProp(value *EnumgaugeServerUnavailableSeverityLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgeneralMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgeneralMonitorProviderSchemaUrn(values []EnumgeneralMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgeneralMonitorProviderSchemaUrn(value *EnumgeneralMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgeneralizedTimeAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgeneralizedTimeAttributeSyntaxSchemaUrn(values []EnumgeneralizedTimeAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgeneralizedTimeAttributeSyntaxSchemaUrn(value *EnumgeneralizedTimeAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgeneratePasswordExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgeneratePasswordExtendedOperationHandlerSchemaUrn(values []EnumgeneratePasswordExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgeneratePasswordExtendedOperationHandlerSchemaUrn(value *EnumgeneratePasswordExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenerateServerProfileRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenerateServerProfileRecurringTaskSchemaUrn(values []EnumgenerateServerProfileRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenerateServerProfileRecurringTaskSchemaUrn(value *EnumgenerateServerProfileRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericAttributeSyntaxSchemaUrn(values []EnumgenericAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericAttributeSyntaxSchemaUrn(value *EnumgenericAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericDelegatedAdminAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericDelegatedAdminAttributeSchemaUrn(values []EnumgenericDelegatedAdminAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericDelegatedAdminAttributeSchemaUrn(value *EnumgenericDelegatedAdminAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericLogFieldSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericLogFieldSyntaxSchemaUrn(values []EnumgenericLogFieldSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericLogFieldSyntaxSchemaUrn(value *EnumgenericLogFieldSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericMatchingRuleSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericMatchingRuleSchemaUrn(values []EnumgenericMatchingRuleSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericMatchingRuleSchemaUrn(value *EnumgenericMatchingRuleSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericRestResourceTypeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericRestResourceTypeSchemaUrn(values []EnumgenericRestResourceTypeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericRestResourceTypeSchemaUrn(value *EnumgenericRestResourceTypeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgenericWebApplicationExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgenericWebApplicationExtensionSchemaUrn(values []EnumgenericWebApplicationExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgenericWebApplicationExtensionSchemaUrn(value *EnumgenericWebApplicationExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgetChangelogBatchExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgetChangelogBatchExtendedOperationHandlerSchemaUrn(values []EnumgetChangelogBatchExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgetChangelogBatchExtendedOperationHandlerSchemaUrn(value *EnumgetChangelogBatchExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgetConnectionIdExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgetConnectionIdExtendedOperationHandlerSchemaUrn(values []EnumgetConnectionIdExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgetConnectionIdExtendedOperationHandlerSchemaUrn(value *EnumgetConnectionIdExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgetPasswordQualityRequirementsExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgetPasswordQualityRequirementsExtendedOperationHandlerSchemaUrn(values []EnumgetPasswordQualityRequirementsExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgetPasswordQualityRequirementsExtendedOperationHandlerSchemaUrn(value *EnumgetPasswordQualityRequirementsExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgetSupportedOtpDeliveryMechanismsExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgetSupportedOtpDeliveryMechanismsExtendedOperationHandlerSchemaUrn(values []EnumgetSupportedOtpDeliveryMechanismsExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgetSupportedOtpDeliveryMechanismsExtendedOperationHandlerSchemaUrn(value *EnumgetSupportedOtpDeliveryMechanismsExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationAllowedInsecureTLSProtocolProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationAllowedInsecureTLSProtocolProp(values []EnumglobalConfigurationAllowedInsecureTLSProtocolProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationAllowedInsecureTLSProtocolProp(value *EnumglobalConfigurationAllowedInsecureTLSProtocolProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationAttributesModifiableWithIgnoreNoUserModificationRequestControlProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationAttributesModifiableWithIgnoreNoUserModificationRequestControlProp(values []EnumglobalConfigurationAttributesModifiableWithIgnoreNoUserModificationRequestControlProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationAttributesModifiableWithIgnoreNoUserModificationRequestControlProp(value *EnumglobalConfigurationAttributesModifiableWithIgnoreNoUserModificationRequestControlProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationDisabledPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationDisabledPrivilegeProp(values []EnumglobalConfigurationDisabledPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationDisabledPrivilegeProp(value *EnumglobalConfigurationDisabledPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationInvalidAttributeSyntaxBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationInvalidAttributeSyntaxBehaviorProp(values []EnumglobalConfigurationInvalidAttributeSyntaxBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationInvalidAttributeSyntaxBehaviorProp(value *EnumglobalConfigurationInvalidAttributeSyntaxBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationJmxValueBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationJmxValueBehaviorProp(values []EnumglobalConfigurationJmxValueBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationJmxValueBehaviorProp(value *EnumglobalConfigurationJmxValueBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationSchemaUrn(values []EnumglobalConfigurationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationSchemaUrn(value *EnumglobalConfigurationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationSingleStructuralObjectclassBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationSingleStructuralObjectclassBehaviorProp(values []EnumglobalConfigurationSingleStructuralObjectclassBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationSingleStructuralObjectclassBehaviorProp(value *EnumglobalConfigurationSingleStructuralObjectclassBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationStartupErrorLoggerOutputLocationProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationStartupErrorLoggerOutputLocationProp(values []EnumglobalConfigurationStartupErrorLoggerOutputLocationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationStartupErrorLoggerOutputLocationProp(value *EnumglobalConfigurationStartupErrorLoggerOutputLocationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationUnrecoverableDatabaseErrorModeProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationUnrecoverableDatabaseErrorModeProp(values []EnumglobalConfigurationUnrecoverableDatabaseErrorModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationUnrecoverableDatabaseErrorModeProp(value *EnumglobalConfigurationUnrecoverableDatabaseErrorModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumglobalConfigurationWritabilityModeProp) String() string {
	return string(e)
}

func StringSliceEnumglobalConfigurationWritabilityModeProp(values []EnumglobalConfigurationWritabilityModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumglobalConfigurationWritabilityModeProp(value *EnumglobalConfigurationWritabilityModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedAccessLogPublisherSchemaUrn(values []EnumgroovyScriptedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedAccessLogPublisherSchemaUrn(value *EnumgroovyScriptedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedAccountStatusNotificationHandlerSchemaUrn(values []EnumgroovyScriptedAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedAccountStatusNotificationHandlerSchemaUrn(value *EnumgroovyScriptedAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedAlertHandlerSchemaUrn(values []EnumgroovyScriptedAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedAlertHandlerSchemaUrn(value *EnumgroovyScriptedAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedCertificateMapperSchemaUrn(values []EnumgroovyScriptedCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedCertificateMapperSchemaUrn(value *EnumgroovyScriptedCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedChangeSubscriptionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedChangeSubscriptionHandlerSchemaUrn(values []EnumgroovyScriptedChangeSubscriptionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedChangeSubscriptionHandlerSchemaUrn(value *EnumgroovyScriptedChangeSubscriptionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedErrorLogPublisherSchemaUrn(values []EnumgroovyScriptedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedErrorLogPublisherSchemaUrn(value *EnumgroovyScriptedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedFileBasedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedFileBasedAccessLogPublisherSchemaUrn(values []EnumgroovyScriptedFileBasedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedFileBasedAccessLogPublisherSchemaUrn(value *EnumgroovyScriptedFileBasedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedFileBasedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedFileBasedErrorLogPublisherSchemaUrn(values []EnumgroovyScriptedFileBasedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedFileBasedErrorLogPublisherSchemaUrn(value *EnumgroovyScriptedFileBasedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedHttpOperationLogPublisherSchemaUrn(values []EnumgroovyScriptedHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedHttpOperationLogPublisherSchemaUrn(value *EnumgroovyScriptedHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedHttpServletExtensionSchemaUrn(values []EnumgroovyScriptedHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedHttpServletExtensionSchemaUrn(value *EnumgroovyScriptedHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedIdentityMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedIdentityMapperSchemaUrn(values []EnumgroovyScriptedIdentityMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedIdentityMapperSchemaUrn(value *EnumgroovyScriptedIdentityMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedOauthTokenHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedOauthTokenHandlerSchemaUrn(values []EnumgroovyScriptedOauthTokenHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedOauthTokenHandlerSchemaUrn(value *EnumgroovyScriptedOauthTokenHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedPasswordGeneratorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedPasswordGeneratorSchemaUrn(values []EnumgroovyScriptedPasswordGeneratorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedPasswordGeneratorSchemaUrn(value *EnumgroovyScriptedPasswordGeneratorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedPasswordValidatorSchemaUrn(values []EnumgroovyScriptedPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedPasswordValidatorSchemaUrn(value *EnumgroovyScriptedPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedPluginSchemaUrn(values []EnumgroovyScriptedPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedPluginSchemaUrn(value *EnumgroovyScriptedPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedUncachedAttributeCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedUncachedAttributeCriteriaSchemaUrn(values []EnumgroovyScriptedUncachedAttributeCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedUncachedAttributeCriteriaSchemaUrn(value *EnumgroovyScriptedUncachedAttributeCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedUncachedEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedUncachedEntryCriteriaSchemaUrn(values []EnumgroovyScriptedUncachedEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedUncachedEntryCriteriaSchemaUrn(value *EnumgroovyScriptedUncachedEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroovyScriptedVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroovyScriptedVirtualAttributeSchemaUrn(values []EnumgroovyScriptedVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroovyScriptedVirtualAttributeSchemaUrn(value *EnumgroovyScriptedVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgroupRestResourceTypeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgroupRestResourceTypeSchemaUrn(values []EnumgroupRestResourceTypeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgroupRestResourceTypeSchemaUrn(value *EnumgroupRestResourceTypeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumgssapiSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumgssapiSaslMechanismHandlerSchemaUrn(values []EnumgssapiSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumgssapiSaslMechanismHandlerSchemaUrn(value *EnumgssapiSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhasSubordinatesVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhasSubordinatesVirtualAttributeSchemaUrn(values []EnumhasSubordinatesVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhasSubordinatesVirtualAttributeSchemaUrn(value *EnumhasSubordinatesVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhaystackPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhaystackPasswordValidatorSchemaUrn(values []EnumhaystackPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhaystackPasswordValidatorSchemaUrn(value *EnumhaystackPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhexStringAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhexStringAttributeSyntaxSchemaUrn(values []EnumhexStringAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhexStringAttributeSyntaxSchemaUrn(value *EnumhexStringAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhighThroughputWorkQueueSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhighThroughputWorkQueueSchemaUrn(values []EnumhighThroughputWorkQueueSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhighThroughputWorkQueueSchemaUrn(value *EnumhighThroughputWorkQueueSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhostSystemMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhostSystemMonitorProviderSchemaUrn(values []EnumhostSystemMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhostSystemMonitorProviderSchemaUrn(value *EnumhostSystemMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpConfigurationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpConfigurationSchemaUrn(values []EnumhttpConfigurationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpConfigurationSchemaUrn(value *EnumhttpConfigurationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpConnectionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpConnectionHandlerSchemaUrn(values []EnumhttpConnectionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpConnectionHandlerSchemaUrn(value *EnumhttpConnectionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpExternalServerSchemaUrn(values []EnumhttpExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpExternalServerSchemaUrn(value *EnumhttpExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpProxyExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpProxyExternalServerSchemaUrn(values []EnumhttpProxyExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpProxyExternalServerSchemaUrn(value *EnumhttpProxyExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServerInstanceListenerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpServerInstanceListenerSchemaUrn(values []EnumhttpServerInstanceListenerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServerInstanceListenerSchemaUrn(value *EnumhttpServerInstanceListenerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletCrossOriginPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumhttpServletCrossOriginPolicySchemaUrn(values []EnumhttpServletCrossOriginPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletCrossOriginPolicySchemaUrn(value *EnumhttpServletCrossOriginPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletExtensionAllowedAuthenticationTypeProp) String() string {
	return string(e)
}

func StringSliceEnumhttpServletExtensionAllowedAuthenticationTypeProp(values []EnumhttpServletExtensionAllowedAuthenticationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletExtensionAllowedAuthenticationTypeProp(value *EnumhttpServletExtensionAllowedAuthenticationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletExtensionAllowedControlProp) String() string {
	return string(e)
}

func StringSliceEnumhttpServletExtensionAllowedControlProp(values []EnumhttpServletExtensionAllowedControlProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletExtensionAllowedControlProp(value *EnumhttpServletExtensionAllowedControlProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletExtensionDebugLevelProp) String() string {
	return string(e)
}

func StringSliceEnumhttpServletExtensionDebugLevelProp(values []EnumhttpServletExtensionDebugLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletExtensionDebugLevelProp(value *EnumhttpServletExtensionDebugLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletExtensionDebugTypeProp) String() string {
	return string(e)
}

func StringSliceEnumhttpServletExtensionDebugTypeProp(values []EnumhttpServletExtensionDebugTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletExtensionDebugTypeProp(value *EnumhttpServletExtensionDebugTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumhttpServletExtensionMapAccessTokensToLocalUsersProp) String() string {
	return string(e)
}

func StringSliceEnumhttpServletExtensionMapAccessTokensToLocalUsersProp(values []EnumhttpServletExtensionMapAccessTokensToLocalUsersProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumhttpServletExtensionMapAccessTokensToLocalUsersProp(value *EnumhttpServletExtensionMapAccessTokensToLocalUsersProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumidTokenValidatorAllowedSigningAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumidTokenValidatorAllowedSigningAlgorithmProp(values []EnumidTokenValidatorAllowedSigningAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumidTokenValidatorAllowedSigningAlgorithmProp(value *EnumidTokenValidatorAllowedSigningAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumidentifyReferencesVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumidentifyReferencesVirtualAttributeSchemaUrn(values []EnumidentifyReferencesVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumidentifyReferencesVirtualAttributeSchemaUrn(value *EnumidentifyReferencesVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumidleAccountDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumidleAccountDataSecurityAuditorSchemaUrn(values []EnumidleAccountDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumidleAccountDataSecurityAuditorSchemaUrn(value *EnumidleAccountDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumindicatorGaugeDataSourceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumindicatorGaugeDataSourceSchemaUrn(values []EnumindicatorGaugeDataSourceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumindicatorGaugeDataSourceSchemaUrn(value *EnumindicatorGaugeDataSourceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumindicatorGaugeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumindicatorGaugeSchemaUrn(values []EnumindicatorGaugeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumindicatorGaugeSchemaUrn(value *EnumindicatorGaugeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnuminstanceNameVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnuminstanceNameVirtualAttributeSchemaUrn(values []EnuminstanceNameVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnuminstanceNameVirtualAttributeSchemaUrn(value *EnuminstanceNameVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumintegerAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumintegerAttributeSyntaxSchemaUrn(values []EnumintegerAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumintegerAttributeSyntaxSchemaUrn(value *EnumintegerAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnuminterServerAuthenticationInfoAuthenticationTypeProp) String() string {
	return string(e)
}

func StringSliceEnuminterServerAuthenticationInfoAuthenticationTypeProp(values []EnuminterServerAuthenticationInfoAuthenticationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnuminterServerAuthenticationInfoAuthenticationTypeProp(value *EnuminterServerAuthenticationInfoAuthenticationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnuminterServerAuthenticationInfoPurposeProp) String() string {
	return string(e)
}

func StringSliceEnuminterServerAuthenticationInfoPurposeProp(values []EnuminterServerAuthenticationInfoPurposeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnuminterServerAuthenticationInfoPurposeProp(value *EnuminterServerAuthenticationInfoPurposeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnuminternalSearchRatePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnuminternalSearchRatePluginSchemaUrn(values []EnuminternalSearchRatePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnuminternalSearchRatePluginSchemaUrn(value *EnuminternalSearchRatePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumisMemberOfVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumisMemberOfVirtualAttributeSchemaUrn(values []EnumisMemberOfVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumisMemberOfVirtualAttributeSchemaUrn(value *EnumisMemberOfVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjdbcBasedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjdbcBasedAccessLogPublisherSchemaUrn(values []EnumjdbcBasedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjdbcBasedAccessLogPublisherSchemaUrn(value *EnumjdbcBasedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjdbcBasedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjdbcBasedErrorLogPublisherSchemaUrn(values []EnumjdbcBasedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjdbcBasedErrorLogPublisherSchemaUrn(value *EnumjdbcBasedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjdbcExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjdbcExternalServerSchemaUrn(values []EnumjdbcExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjdbcExternalServerSchemaUrn(value *EnumjdbcExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjmxAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjmxAlertHandlerSchemaUrn(values []EnumjmxAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjmxAlertHandlerSchemaUrn(value *EnumjmxAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjmxConnectionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjmxConnectionHandlerSchemaUrn(values []EnumjmxConnectionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjmxConnectionHandlerSchemaUrn(value *EnumjmxConnectionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonAccessLogPublisherSchemaUrn(values []EnumjsonAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonAccessLogPublisherSchemaUrn(value *EnumjsonAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonAttributeConstraintsSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonAttributeConstraintsSchemaUrn(values []EnumjsonAttributeConstraintsSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonAttributeConstraintsSchemaUrn(value *EnumjsonAttributeConstraintsSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonErrorLogPublisherSchemaUrn(values []EnumjsonErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonErrorLogPublisherSchemaUrn(value *EnumjsonErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonFieldConstraintsCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumjsonFieldConstraintsCacheModeProp(values []EnumjsonFieldConstraintsCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonFieldConstraintsCacheModeProp(value *EnumjsonFieldConstraintsCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonFieldConstraintsIsArrayProp) String() string {
	return string(e)
}

func StringSliceEnumjsonFieldConstraintsIsArrayProp(values []EnumjsonFieldConstraintsIsArrayProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonFieldConstraintsIsArrayProp(value *EnumjsonFieldConstraintsIsArrayProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonFieldConstraintsSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonFieldConstraintsSchemaUrn(values []EnumjsonFieldConstraintsSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonFieldConstraintsSchemaUrn(value *EnumjsonFieldConstraintsSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonFieldConstraintsValueTypeProp) String() string {
	return string(e)
}

func StringSliceEnumjsonFieldConstraintsValueTypeProp(values []EnumjsonFieldConstraintsValueTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonFieldConstraintsValueTypeProp(value *EnumjsonFieldConstraintsValueTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonFormattedAccessLogFieldBehaviorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonFormattedAccessLogFieldBehaviorSchemaUrn(values []EnumjsonFormattedAccessLogFieldBehaviorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonFormattedAccessLogFieldBehaviorSchemaUrn(value *EnumjsonFormattedAccessLogFieldBehaviorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonLogFieldSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonLogFieldSyntaxSchemaUrn(values []EnumjsonLogFieldSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonLogFieldSyntaxSchemaUrn(value *EnumjsonLogFieldSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjsonObjectAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjsonObjectAttributeSyntaxSchemaUrn(values []EnumjsonObjectAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjsonObjectAttributeSyntaxSchemaUrn(value *EnumjsonObjectAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjvmDefaultTrustManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjvmDefaultTrustManagerProviderSchemaUrn(values []EnumjvmDefaultTrustManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjvmDefaultTrustManagerProviderSchemaUrn(value *EnumjvmDefaultTrustManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumjwtAccessTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumjwtAccessTokenValidatorSchemaUrn(values []EnumjwtAccessTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumjwtAccessTokenValidatorSchemaUrn(value *EnumjwtAccessTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumkeyPairKeyAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumkeyPairKeyAlgorithmProp(values []EnumkeyPairKeyAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumkeyPairKeyAlgorithmProp(value *EnumkeyPairKeyAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumkeyPairSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumkeyPairSchemaUrn(values []EnumkeyPairSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumkeyPairSchemaUrn(value *EnumkeyPairSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlastAccessTimePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlastAccessTimePluginSchemaUrn(values []EnumlastAccessTimePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlastAccessTimePluginSchemaUrn(value *EnumlastAccessTimePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlastAccessTimeUncachedEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlastAccessTimeUncachedEntryCriteriaSchemaUrn(values []EnumlastAccessTimeUncachedEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlastAccessTimeUncachedEntryCriteriaSchemaUrn(value *EnumlastAccessTimeUncachedEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlastModPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlastModPluginSchemaUrn(values []EnumlastModPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlastModPluginSchemaUrn(value *EnumlastModPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapConnectionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapConnectionHandlerSchemaUrn(values []EnumldapConnectionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapConnectionHandlerSchemaUrn(value *EnumldapConnectionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapExternalServerSchemaUrn(values []EnumldapExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapExternalServerSchemaUrn(value *EnumldapExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapMappedScimHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapMappedScimHttpServletExtensionSchemaUrn(values []EnumldapMappedScimHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapMappedScimHttpServletExtensionSchemaUrn(value *EnumldapMappedScimHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapPassThroughAuthenticationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapPassThroughAuthenticationHandlerSchemaUrn(values []EnumldapPassThroughAuthenticationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapPassThroughAuthenticationHandlerSchemaUrn(value *EnumldapPassThroughAuthenticationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapResultCodeTrackerPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapResultCodeTrackerPluginSchemaUrn(values []EnumldapResultCodeTrackerPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapResultCodeTrackerPluginSchemaUrn(value *EnumldapResultCodeTrackerPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerCompressionMechanismProp) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerCompressionMechanismProp(values []EnumldapSdkDebugLoggerCompressionMechanismProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerCompressionMechanismProp(value *EnumldapSdkDebugLoggerCompressionMechanismProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerDebugLevelProp) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerDebugLevelProp(values []EnumldapSdkDebugLoggerDebugLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerDebugLevelProp(value *EnumldapSdkDebugLoggerDebugLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerDebugTypeProp) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerDebugTypeProp(values []EnumldapSdkDebugLoggerDebugTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerDebugTypeProp(value *EnumldapSdkDebugLoggerDebugTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerLoggingErrorBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerLoggingErrorBehaviorProp(values []EnumldapSdkDebugLoggerLoggingErrorBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerLoggingErrorBehaviorProp(value *EnumldapSdkDebugLoggerLoggingErrorBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerSchemaUrn(values []EnumldapSdkDebugLoggerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerSchemaUrn(value *EnumldapSdkDebugLoggerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapSdkDebugLoggerTimestampPrecisionProp) String() string {
	return string(e)
}

func StringSliceEnumldapSdkDebugLoggerTimestampPrecisionProp(values []EnumldapSdkDebugLoggerTimestampPrecisionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapSdkDebugLoggerTimestampPrecisionProp(value *EnumldapSdkDebugLoggerTimestampPrecisionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapServerInstanceListenerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapServerInstanceListenerSchemaUrn(values []EnumldapServerInstanceListenerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapServerInstanceListenerSchemaUrn(value *EnumldapServerInstanceListenerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldapUrlAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldapUrlAttributeSyntaxSchemaUrn(values []EnumldapUrlAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldapUrlAttributeSyntaxSchemaUrn(value *EnumldapUrlAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldifBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldifBackendSchemaUrn(values []EnumldifBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldifBackendSchemaUrn(value *EnumldifBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldifConnectionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldifConnectionHandlerSchemaUrn(values []EnumldifConnectionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldifConnectionHandlerSchemaUrn(value *EnumldifConnectionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumldifExportRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumldifExportRecurringTaskSchemaUrn(values []EnumldifExportRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumldifExportRecurringTaskSchemaUrn(value *EnumldifExportRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumleaveLockdownModeRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumleaveLockdownModeRecurringTaskSchemaUrn(values []EnumleaveLockdownModeRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumleaveLockdownModeRecurringTaskSchemaUrn(value *EnumleaveLockdownModeRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlengthBasedPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlengthBasedPasswordValidatorSchemaUrn(values []EnumlengthBasedPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlengthBasedPasswordValidatorSchemaUrn(value *EnumlengthBasedPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlicenseSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlicenseSchemaUrn(values []EnumlicenseSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlicenseSchemaUrn(value *EnumlicenseSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlocalDbBackendSchemaUrn(values []EnumlocalDbBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbBackendSchemaUrn(value *EnumlocalDbBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbCompositeIndexCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumlocalDbCompositeIndexCacheModeProp(values []EnumlocalDbCompositeIndexCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbCompositeIndexCacheModeProp(value *EnumlocalDbCompositeIndexCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbCompositeIndexSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlocalDbCompositeIndexSchemaUrn(values []EnumlocalDbCompositeIndexSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbCompositeIndexSchemaUrn(value *EnumlocalDbCompositeIndexSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbIndexCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumlocalDbIndexCacheModeProp(values []EnumlocalDbIndexCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbIndexCacheModeProp(value *EnumlocalDbIndexCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbIndexIndexTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlocalDbIndexIndexTypeProp(values []EnumlocalDbIndexIndexTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbIndexIndexTypeProp(value *EnumlocalDbIndexIndexTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbIndexSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlocalDbIndexSchemaUrn(values []EnumlocalDbIndexSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbIndexSchemaUrn(value *EnumlocalDbIndexSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbVlvIndexCacheModeProp) String() string {
	return string(e)
}

func StringSliceEnumlocalDbVlvIndexCacheModeProp(values []EnumlocalDbVlvIndexCacheModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbVlvIndexCacheModeProp(value *EnumlocalDbVlvIndexCacheModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbVlvIndexSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlocalDbVlvIndexSchemaUrn(values []EnumlocalDbVlvIndexSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbVlvIndexSchemaUrn(value *EnumlocalDbVlvIndexSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocalDbVlvIndexScopeProp) String() string {
	return string(e)
}

func StringSliceEnumlocalDbVlvIndexScopeProp(values []EnumlocalDbVlvIndexScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocalDbVlvIndexScopeProp(value *EnumlocalDbVlvIndexScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlocationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlocationSchemaUrn(values []EnumlocationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlocationSchemaUrn(value *EnumlocationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlockAccountFailureLockoutActionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlockAccountFailureLockoutActionSchemaUrn(values []EnumlockAccountFailureLockoutActionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlockAccountFailureLockoutActionSchemaUrn(value *EnumlockAccountFailureLockoutActionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlockedAccountDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumlockedAccountDataSecurityAuditorSchemaUrn(values []EnumlockedAccountDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlockedAccountDataSecurityAuditorSchemaUrn(value *EnumlockedAccountDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorDefaultBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorDefaultBehaviorProp(values []EnumlogFieldBehaviorDefaultBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorDefaultBehaviorProp(value *EnumlogFieldBehaviorDefaultBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessOmitFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessOmitFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessOmitFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessOmitFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessOmitFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessPreserveFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessPreserveFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessPreserveFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessPreserveFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessPreserveFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessRedactEntireValueFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessRedactEntireValueFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessRedactEntireValueFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessRedactEntireValueFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessRedactEntireValueFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessRedactValueComponentsFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessRedactValueComponentsFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessRedactValueComponentsFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessRedactValueComponentsFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessRedactValueComponentsFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessTokenizeEntireValueFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessTokenizeEntireValueFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessTokenizeEntireValueFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessTokenizeEntireValueFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessTokenizeEntireValueFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorJsonFormattedAccessTokenizeValueComponentsFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorJsonFormattedAccessTokenizeValueComponentsFieldProp(values []EnumlogFieldBehaviorJsonFormattedAccessTokenizeValueComponentsFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorJsonFormattedAccessTokenizeValueComponentsFieldProp(value *EnumlogFieldBehaviorJsonFormattedAccessTokenizeValueComponentsFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessOmitFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessOmitFieldProp(values []EnumlogFieldBehaviorTextAccessOmitFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessOmitFieldProp(value *EnumlogFieldBehaviorTextAccessOmitFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessPreserveFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessPreserveFieldProp(values []EnumlogFieldBehaviorTextAccessPreserveFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessPreserveFieldProp(value *EnumlogFieldBehaviorTextAccessPreserveFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp(values []EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp(value *EnumlogFieldBehaviorTextAccessRedactEntireValueFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp(values []EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp(value *EnumlogFieldBehaviorTextAccessRedactValueComponentsFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp(values []EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp(value *EnumlogFieldBehaviorTextAccessTokenizeEntireValueFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp(values []EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp(value *EnumlogFieldBehaviorTextAccessTokenizeValueComponentsFieldProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogFieldSyntaxDefaultBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogFieldSyntaxDefaultBehaviorProp(values []EnumlogFieldSyntaxDefaultBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogFieldSyntaxDefaultBehaviorProp(value *EnumlogFieldSyntaxDefaultBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherAccessTokenValidatorMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherAccessTokenValidatorMessageTypeProp(values []EnumlogPublisherAccessTokenValidatorMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherAccessTokenValidatorMessageTypeProp(value *EnumlogPublisherAccessTokenValidatorMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherCompressionMechanismProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherCompressionMechanismProp(values []EnumlogPublisherCompressionMechanismProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherCompressionMechanismProp(value *EnumlogPublisherCompressionMechanismProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherConsentMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherConsentMessageTypeProp(values []EnumlogPublisherConsentMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherConsentMessageTypeProp(value *EnumlogPublisherConsentMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherConsoleJsonAuditSoftDeleteEntryAuditBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherConsoleJsonAuditSoftDeleteEntryAuditBehaviorProp(values []EnumlogPublisherConsoleJsonAuditSoftDeleteEntryAuditBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherConsoleJsonAuditSoftDeleteEntryAuditBehaviorProp(value *EnumlogPublisherConsoleJsonAuditSoftDeleteEntryAuditBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherDebugMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherDebugMessageTypeProp(values []EnumlogPublisherDebugMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherDebugMessageTypeProp(value *EnumlogPublisherDebugMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherDefaultDebugCategoryProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherDefaultDebugCategoryProp(values []EnumlogPublisherDefaultDebugCategoryProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherDefaultDebugCategoryProp(value *EnumlogPublisherDefaultDebugCategoryProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherDefaultDebugLevelProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherDefaultDebugLevelProp(values []EnumlogPublisherDefaultDebugLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherDefaultDebugLevelProp(value *EnumlogPublisherDefaultDebugLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherDefaultSeverityProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherDefaultSeverityProp(values []EnumlogPublisherDefaultSeverityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherDefaultSeverityProp(value *EnumlogPublisherDefaultSeverityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherDirectoryRESTAPIMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherDirectoryRESTAPIMessageTypeProp(values []EnumlogPublisherDirectoryRESTAPIMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherDirectoryRESTAPIMessageTypeProp(value *EnumlogPublisherDirectoryRESTAPIMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherExtensionMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherExtensionMessageTypeProp(values []EnumlogPublisherExtensionMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherExtensionMessageTypeProp(value *EnumlogPublisherExtensionMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherFileBasedAuditSoftDeleteEntryAuditBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherFileBasedAuditSoftDeleteEntryAuditBehaviorProp(values []EnumlogPublisherFileBasedAuditSoftDeleteEntryAuditBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherFileBasedAuditSoftDeleteEntryAuditBehaviorProp(value *EnumlogPublisherFileBasedAuditSoftDeleteEntryAuditBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp(values []EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp(value *EnumlogPublisherFileBasedJsonAuditSoftDeleteEntryAuditBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherHttpMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherHttpMessageTypeProp(values []EnumlogPublisherHttpMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherHttpMessageTypeProp(value *EnumlogPublisherHttpMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherIdTokenValidatorMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherIdTokenValidatorMessageTypeProp(values []EnumlogPublisherIdTokenValidatorMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherIdTokenValidatorMessageTypeProp(value *EnumlogPublisherIdTokenValidatorMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherLogRequestHeadersProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherLogRequestHeadersProp(values []EnumlogPublisherLogRequestHeadersProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherLogRequestHeadersProp(value *EnumlogPublisherLogRequestHeadersProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherLogRequestParametersProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherLogRequestParametersProp(values []EnumlogPublisherLogRequestParametersProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherLogRequestParametersProp(value *EnumlogPublisherLogRequestParametersProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherLogResponseHeadersProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherLogResponseHeadersProp(values []EnumlogPublisherLogResponseHeadersProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherLogResponseHeadersProp(value *EnumlogPublisherLogResponseHeadersProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherLoggingErrorBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherLoggingErrorBehaviorProp(values []EnumlogPublisherLoggingErrorBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherLoggingErrorBehaviorProp(value *EnumlogPublisherLoggingErrorBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherOutputLocationProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherOutputLocationProp(values []EnumlogPublisherOutputLocationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherOutputLocationProp(value *EnumlogPublisherOutputLocationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherScimMessageTypeProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherScimMessageTypeProp(values []EnumlogPublisherScimMessageTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherScimMessageTypeProp(value *EnumlogPublisherScimMessageTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherSyslogFacilityProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherSyslogFacilityProp(values []EnumlogPublisherSyslogFacilityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherSyslogFacilityProp(value *EnumlogPublisherSyslogFacilityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp(values []EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp(value *EnumlogPublisherSyslogJsonAuditSoftDeleteEntryAuditBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherSyslogSeverityProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherSyslogSeverityProp(values []EnumlogPublisherSyslogSeverityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherSyslogSeverityProp(value *EnumlogPublisherSyslogSeverityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumlogPublisherTimestampPrecisionProp) String() string {
	return string(e)
}

func StringSliceEnumlogPublisherTimestampPrecisionProp(values []EnumlogPublisherTimestampPrecisionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumlogPublisherTimestampPrecisionProp(value *EnumlogPublisherTimestampPrecisionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumloggingChangeSubscriptionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumloggingChangeSubscriptionHandlerSchemaUrn(values []EnumloggingChangeSubscriptionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumloggingChangeSubscriptionHandlerSchemaUrn(value *EnumloggingChangeSubscriptionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummacSecretKeySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummacSecretKeySchemaUrn(values []EnummacSecretKeySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummacSecretKeySchemaUrn(value *EnummacSecretKeySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enummd5PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummd5PasswordStorageSchemeSchemaUrn(values []Enummd5PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummd5PasswordStorageSchemeSchemaUrn(value *Enummd5PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummemberOfServerGroupVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummemberOfServerGroupVirtualAttributeSchemaUrn(values []EnummemberOfServerGroupVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummemberOfServerGroupVirtualAttributeSchemaUrn(value *EnummemberOfServerGroupVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummemberVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummemberVirtualAttributeSchemaUrn(values []EnummemberVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummemberVirtualAttributeSchemaUrn(value *EnummemberVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummemoryUsageMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummemoryUsageMonitorProviderSchemaUrn(values []EnummemoryUsageMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummemoryUsageMonitorProviderSchemaUrn(value *EnummemoryUsageMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummetricsBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummetricsBackendSchemaUrn(values []EnummetricsBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummetricsBackendSchemaUrn(value *EnummetricsBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummetricsEngineServerInstanceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummetricsEngineServerInstanceSchemaUrn(values []EnummetricsEngineServerInstanceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummetricsEngineServerInstanceSchemaUrn(value *EnummetricsEngineServerInstanceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummirrorVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummirrorVirtualAttributeSchemaUrn(values []EnummirrorVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummirrorVirtualAttributeSchemaUrn(value *EnummirrorVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummockAccessTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummockAccessTokenValidatorSchemaUrn(values []EnummockAccessTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummockAccessTokenValidatorSchemaUrn(value *EnummockAccessTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummodifiablePasswordPolicyStatePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummodifiablePasswordPolicyStatePluginSchemaUrn(values []EnummodifiablePasswordPolicyStatePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummodifiablePasswordPolicyStatePluginSchemaUrn(value *EnummodifiablePasswordPolicyStatePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummonitorBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummonitorBackendSchemaUrn(values []EnummonitorBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummonitorBackendSchemaUrn(value *EnummonitorBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummonitorHistoryPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummonitorHistoryPluginSchemaUrn(values []EnummonitorHistoryPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummonitorHistoryPluginSchemaUrn(value *EnummonitorHistoryPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummonitoringEndpointConnectionTypeProp) String() string {
	return string(e)
}

func StringSliceEnummonitoringEndpointConnectionTypeProp(values []EnummonitoringEndpointConnectionTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummonitoringEndpointConnectionTypeProp(value *EnummonitoringEndpointConnectionTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn(values []EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn(value *EnummultiPartEmailAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummultiUpdateExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummultiUpdateExtendedOperationHandlerSchemaUrn(values []EnummultiUpdateExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummultiUpdateExtendedOperationHandlerSchemaUrn(value *EnummultiUpdateExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnummultiplePasswordDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnummultiplePasswordDataSecurityAuditorSchemaUrn(values []EnummultiplePasswordDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnummultiplePasswordDataSecurityAuditorSchemaUrn(value *EnummultiplePasswordDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnameAndOptionalUidAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnameAndOptionalUidAttributeSyntaxSchemaUrn(values []EnumnameAndOptionalUidAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnameAndOptionalUidAttributeSyntaxSchemaUrn(value *EnumnameAndOptionalUidAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumneverDeleteLogRetentionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumneverDeleteLogRetentionPolicySchemaUrn(values []EnumneverDeleteLogRetentionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumneverDeleteLogRetentionPolicySchemaUrn(value *EnumneverDeleteLogRetentionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumneverRotateLogRotationPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumneverRotateLogRotationPolicySchemaUrn(values []EnumneverRotateLogRotationPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumneverRotateLogRotationPolicySchemaUrn(value *EnumneverRotateLogRotationPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnoOperationFailureLockoutActionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnoOperationFailureLockoutActionSchemaUrn(values []EnumnoOperationFailureLockoutActionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnoOperationFailureLockoutActionSchemaUrn(value *EnumnoOperationFailureLockoutActionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnokiaDsExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnokiaDsExternalServerSchemaUrn(values []EnumnokiaDsExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnokiaDsExternalServerSchemaUrn(value *EnumnokiaDsExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnokiaProxyServerExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnokiaProxyServerExternalServerSchemaUrn(values []EnumnokiaProxyServerExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnokiaProxyServerExternalServerSchemaUrn(value *EnumnokiaProxyServerExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnonexistentPasswordPolicyDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnonexistentPasswordPolicyDataSecurityAuditorSchemaUrn(values []EnumnonexistentPasswordPolicyDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnonexistentPasswordPolicyDataSecurityAuditorSchemaUrn(value *EnumnonexistentPasswordPolicyDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnotificationManagerTransactionNotificationProp) String() string {
	return string(e)
}

func StringSliceEnumnotificationManagerTransactionNotificationProp(values []EnumnotificationManagerTransactionNotificationProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnotificationManagerTransactionNotificationProp(value *EnumnotificationManagerTransactionNotificationProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnotificationSubscriptionExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnotificationSubscriptionExtendedOperationHandlerSchemaUrn(values []EnumnotificationSubscriptionExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnotificationSubscriptionExtendedOperationHandlerSchemaUrn(value *EnumnotificationSubscriptionExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnumSubordinatesVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnumSubordinatesVirtualAttributeSchemaUrn(values []EnumnumSubordinatesVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnumSubordinatesVirtualAttributeSchemaUrn(value *EnumnumSubordinatesVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnumericGaugeDataSourceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnumericGaugeDataSourceSchemaUrn(values []EnumnumericGaugeDataSourceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnumericGaugeDataSourceSchemaUrn(value *EnumnumericGaugeDataSourceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumnumericGaugeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumnumericGaugeSchemaUrn(values []EnumnumericGaugeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumnumericGaugeSchemaUrn(value *EnumnumericGaugeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumoauthBearerSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumoauthBearerSaslMechanismHandlerSchemaUrn(values []EnumoauthBearerSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumoauthBearerSaslMechanismHandlerSchemaUrn(value *EnumoauthBearerSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumobscuredValuePassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumobscuredValuePassphraseProviderSchemaUrn(values []EnumobscuredValuePassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumobscuredValuePassphraseProviderSchemaUrn(value *EnumobscuredValuePassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumobscuredValueSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumobscuredValueSchemaUrn(values []EnumobscuredValueSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumobscuredValueSchemaUrn(value *EnumobscuredValueSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumopendjExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumopendjExternalServerSchemaUrn(values []EnumopendjExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumopendjExternalServerSchemaUrn(value *EnumopendjExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumopenidConnectIdTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumopenidConnectIdTokenValidatorSchemaUrn(values []EnumopenidConnectIdTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumopenidConnectIdTokenValidatorSchemaUrn(value *EnumopenidConnectIdTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumoperationTimingAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumoperationTimingAccessLogPublisherSchemaUrn(values []EnumoperationTimingAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumoperationTimingAccessLogPublisherSchemaUrn(value *EnumoperationTimingAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumoracleUnifiedDirectoryExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumoracleUnifiedDirectoryExternalServerSchemaUrn(values []EnumoracleUnifiedDirectoryExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumoracleUnifiedDirectoryExternalServerSchemaUrn(value *EnumoracleUnifiedDirectoryExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumorderingMatchingRuleSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumorderingMatchingRuleSchemaUrn(values []EnumorderingMatchingRuleSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumorderingMatchingRuleSchemaUrn(value *EnumorderingMatchingRuleSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumoutputAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumoutputAlertHandlerSchemaUrn(values []EnumoutputAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumoutputAlertHandlerSchemaUrn(value *EnumoutputAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpassThroughAuthenticationHandlerServerAccessModeProp) String() string {
	return string(e)
}

func StringSliceEnumpassThroughAuthenticationHandlerServerAccessModeProp(values []EnumpassThroughAuthenticationHandlerServerAccessModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpassThroughAuthenticationHandlerServerAccessModeProp(value *EnumpassThroughAuthenticationHandlerServerAccessModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpassThroughAuthenticationPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpassThroughAuthenticationPluginSchemaUrn(values []EnumpassThroughAuthenticationPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpassThroughAuthenticationPluginSchemaUrn(value *EnumpassThroughAuthenticationPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpassphrasePasswordGeneratorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpassphrasePasswordGeneratorSchemaUrn(values []EnumpassphrasePasswordGeneratorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpassphrasePasswordGeneratorSchemaUrn(value *EnumpassphrasePasswordGeneratorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordInterServerAuthenticationInfoSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordInterServerAuthenticationInfoSchemaUrn(values []EnumpasswordInterServerAuthenticationInfoSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordInterServerAuthenticationInfoSchemaUrn(value *EnumpasswordInterServerAuthenticationInfoSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordModifyExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordModifyExtendedOperationHandlerSchemaUrn(values []EnumpasswordModifyExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordModifyExtendedOperationHandlerSchemaUrn(value *EnumpasswordModifyExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp(values []EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp(value *EnumpasswordPolicyAllowedPasswordResetTokenUseConditionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyBindPasswordValidationFailureActionProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyBindPasswordValidationFailureActionProp(values []EnumpasswordPolicyBindPasswordValidationFailureActionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyBindPasswordValidationFailureActionProp(value *EnumpasswordPolicyBindPasswordValidationFailureActionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyImportPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyImportPluginSchemaUrn(values []EnumpasswordPolicyImportPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyImportPluginSchemaUrn(value *EnumpasswordPolicyImportPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyPasswordRetirementBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyPasswordRetirementBehaviorProp(values []EnumpasswordPolicyPasswordRetirementBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyPasswordRetirementBehaviorProp(value *EnumpasswordPolicyPasswordRetirementBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp(values []EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp(value *EnumpasswordPolicyRecentLoginHistorySimilarAttemptBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyReturnPasswordExpirationControlsProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyReturnPasswordExpirationControlsProp(values []EnumpasswordPolicyReturnPasswordExpirationControlsProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyReturnPasswordExpirationControlsProp(value *EnumpasswordPolicyReturnPasswordExpirationControlsProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicySchemaUrn(values []EnumpasswordPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicySchemaUrn(value *EnumpasswordPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyStateExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyStateExtendedOperationHandlerSchemaUrn(values []EnumpasswordPolicyStateExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyStateExtendedOperationHandlerSchemaUrn(value *EnumpasswordPolicyStateExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyStateJsonVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyStateJsonVirtualAttributeSchemaUrn(values []EnumpasswordPolicyStateJsonVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyStateJsonVirtualAttributeSchemaUrn(value *EnumpasswordPolicyStateJsonVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordPolicyStateUpdateFailurePolicyProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordPolicyStateUpdateFailurePolicyProp(values []EnumpasswordPolicyStateUpdateFailurePolicyProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordPolicyStateUpdateFailurePolicyProp(value *EnumpasswordPolicyStateUpdateFailurePolicyProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordStorageSchemeDigestAlgorithmProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordStorageSchemeDigestAlgorithmProp(values []EnumpasswordStorageSchemeDigestAlgorithmProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordStorageSchemeDigestAlgorithmProp(value *EnumpasswordStorageSchemeDigestAlgorithmProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordStorageSchemePasswordEncodingMechanismProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordStorageSchemePasswordEncodingMechanismProp(values []EnumpasswordStorageSchemePasswordEncodingMechanismProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordStorageSchemePasswordEncodingMechanismProp(value *EnumpasswordStorageSchemePasswordEncodingMechanismProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpasswordValidatorMatchBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpasswordValidatorMatchBehaviorProp(values []EnumpasswordValidatorMatchBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpasswordValidatorMatchBehaviorProp(value *EnumpasswordValidatorMatchBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumpbkdf2PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpbkdf2PasswordStorageSchemeSchemaUrn(values []Enumpbkdf2PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpbkdf2PasswordStorageSchemeSchemaUrn(value *Enumpbkdf2PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumperiodicGcPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumperiodicGcPluginSchemaUrn(values []EnumperiodicGcPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumperiodicGcPluginSchemaUrn(value *EnumperiodicGcPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumperiodicStatsLoggerPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumperiodicStatsLoggerPluginSchemaUrn(values []EnumperiodicStatsLoggerPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumperiodicStatsLoggerPluginSchemaUrn(value *EnumperiodicStatsLoggerPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumphotoDelegatedAdminAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumphotoDelegatedAdminAttributeSchemaUrn(values []EnumphotoDelegatedAdminAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumphotoDelegatedAdminAttributeSchemaUrn(value *EnumphotoDelegatedAdminAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingFederateAccessTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingFederateAccessTokenValidatorSchemaUrn(values []EnumpingFederateAccessTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingFederateAccessTokenValidatorSchemaUrn(value *EnumpingFederateAccessTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingIdentityDsExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingIdentityDsExternalServerSchemaUrn(values []EnumpingIdentityDsExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingIdentityDsExternalServerSchemaUrn(value *EnumpingIdentityDsExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingIdentityProxyServerExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingIdentityProxyServerExternalServerSchemaUrn(values []EnumpingIdentityProxyServerExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingIdentityProxyServerExternalServerSchemaUrn(value *EnumpingIdentityProxyServerExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingOneHttpExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingOneHttpExternalServerSchemaUrn(values []EnumpingOneHttpExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingOneHttpExternalServerSchemaUrn(value *EnumpingOneHttpExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingOneIdTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingOneIdTokenValidatorSchemaUrn(values []EnumpingOneIdTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingOneIdTokenValidatorSchemaUrn(value *EnumpingOneIdTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpingOnePassThroughAuthenticationPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpingOnePassThroughAuthenticationPluginSchemaUrn(values []EnumpingOnePassThroughAuthenticationPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpingOnePassThroughAuthenticationPluginSchemaUrn(value *EnumpingOnePassThroughAuthenticationPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumpkcs11CipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpkcs11CipherStreamProviderSchemaUrn(values []Enumpkcs11CipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpkcs11CipherStreamProviderSchemaUrn(value *Enumpkcs11CipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumpkcs11KeyManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpkcs11KeyManagerProviderSchemaUrn(values []Enumpkcs11KeyManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpkcs11KeyManagerProviderSchemaUrn(value *Enumpkcs11KeyManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumplainSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumplainSaslMechanismHandlerSchemaUrn(values []EnumplainSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumplainSaslMechanismHandlerSchemaUrn(value *EnumplainSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluggablePassThroughAuthenticationPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpluggablePassThroughAuthenticationPluginSchemaUrn(values []EnumpluggablePassThroughAuthenticationPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluggablePassThroughAuthenticationPluginSchemaUrn(value *EnumpluggablePassThroughAuthenticationPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginAttributeTypeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginAttributeTypeProp(values []EnumpluginAttributeTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginAttributeTypeProp(value *EnumpluginAttributeTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginDatetimeFormatProp) String() string {
	return string(e)
}

func StringSliceEnumpluginDatetimeFormatProp(values []EnumpluginDatetimeFormatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginDatetimeFormatProp(value *EnumpluginDatetimeFormatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginEntryCacheInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginEntryCacheInfoProp(values []EnumpluginEntryCacheInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginEntryCacheInfoProp(value *EnumpluginEntryCacheInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginGaugeInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginGaugeInfoProp(values []EnumpluginGaugeInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginGaugeInfoProp(value *EnumpluginGaugeInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginHistogramFormatProp) String() string {
	return string(e)
}

func StringSliceEnumpluginHistogramFormatProp(values []EnumpluginHistogramFormatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginHistogramFormatProp(value *EnumpluginHistogramFormatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginHistogramOpTypeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginHistogramOpTypeProp(values []EnumpluginHistogramOpTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginHistogramOpTypeProp(value *EnumpluginHistogramOpTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginHostInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginHostInfoProp(values []EnumpluginHostInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginHostInfoProp(value *EnumpluginHostInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginIgnoredPasswordPolicyStateErrorConditionProp) String() string {
	return string(e)
}

func StringSliceEnumpluginIgnoredPasswordPolicyStateErrorConditionProp(values []EnumpluginIgnoredPasswordPolicyStateErrorConditionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginIgnoredPasswordPolicyStateErrorConditionProp(value *EnumpluginIgnoredPasswordPolicyStateErrorConditionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginIncludedLDAPStatProp) String() string {
	return string(e)
}

func StringSliceEnumpluginIncludedLDAPStatProp(values []EnumpluginIncludedLDAPStatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginIncludedLDAPStatProp(value *EnumpluginIncludedLDAPStatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginIncludedResourceStatProp) String() string {
	return string(e)
}

func StringSliceEnumpluginIncludedResourceStatProp(values []EnumpluginIncludedResourceStatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginIncludedResourceStatProp(value *EnumpluginIncludedResourceStatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginInvokeGCDayOfWeekProp) String() string {
	return string(e)
}

func StringSliceEnumpluginInvokeGCDayOfWeekProp(values []EnumpluginInvokeGCDayOfWeekProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginInvokeGCDayOfWeekProp(value *EnumpluginInvokeGCDayOfWeekProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginLdapChangelogInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginLdapChangelogInfoProp(values []EnumpluginLdapChangelogInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginLdapChangelogInfoProp(value *EnumpluginLdapChangelogInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginLdapInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginLdapInfoProp(values []EnumpluginLdapInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginLdapInfoProp(value *EnumpluginLdapInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginLocalDBBackendInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginLocalDBBackendInfoProp(values []EnumpluginLocalDBBackendInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginLocalDBBackendInfoProp(value *EnumpluginLocalDBBackendInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginLogFileFormatProp) String() string {
	return string(e)
}

func StringSliceEnumpluginLogFileFormatProp(values []EnumpluginLogFileFormatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginLogFileFormatProp(value *EnumpluginLogFileFormatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginLoggingErrorBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginLoggingErrorBehaviorProp(values []EnumpluginLoggingErrorBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginLoggingErrorBehaviorProp(value *EnumpluginLoggingErrorBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginMultiValuedAttributeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginMultiValuedAttributeBehaviorProp(values []EnumpluginMultiValuedAttributeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginMultiValuedAttributeBehaviorProp(value *EnumpluginMultiValuedAttributeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginMultipleAttributeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginMultipleAttributeBehaviorProp(values []EnumpluginMultipleAttributeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginMultipleAttributeBehaviorProp(value *EnumpluginMultipleAttributeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginMultipleValuePatternBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginMultipleValuePatternBehaviorProp(values []EnumpluginMultipleValuePatternBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginMultipleValuePatternBehaviorProp(value *EnumpluginMultipleValuePatternBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginOperationTypeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginOperationTypeProp(values []EnumpluginOperationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginOperationTypeProp(value *EnumpluginOperationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginPeriodicStatsLoggerPerApplicationLDAPStatsProp) String() string {
	return string(e)
}

func StringSliceEnumpluginPeriodicStatsLoggerPerApplicationLDAPStatsProp(values []EnumpluginPeriodicStatsLoggerPerApplicationLDAPStatsProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginPeriodicStatsLoggerPerApplicationLDAPStatsProp(value *EnumpluginPeriodicStatsLoggerPerApplicationLDAPStatsProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginPluginTypeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginPluginTypeProp(values []EnumpluginPluginTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginPluginTypeProp(value *EnumpluginPluginTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginProfileActionProp) String() string {
	return string(e)
}

func StringSliceEnumpluginProfileActionProp(values []EnumpluginProfileActionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginProfileActionProp(value *EnumpluginProfileActionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginPurgeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginPurgeBehaviorProp(values []EnumpluginPurgeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginPurgeBehaviorProp(value *EnumpluginPurgeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginReplicationInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginReplicationInfoProp(values []EnumpluginReplicationInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginReplicationInfoProp(value *EnumpluginReplicationInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginRootSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpluginRootSchemaUrn(values []EnumpluginRootSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginRootSchemaUrn(value *EnumpluginRootSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginScopeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginScopeProp(values []EnumpluginScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginScopeProp(value *EnumpluginScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginServerAccessModeProp) String() string {
	return string(e)
}

func StringSliceEnumpluginServerAccessModeProp(values []EnumpluginServerAccessModeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginServerAccessModeProp(value *EnumpluginServerAccessModeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginServerInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginServerInfoProp(values []EnumpluginServerInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginServerInfoProp(value *EnumpluginServerInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginSourceAttributeRemovalBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginSourceAttributeRemovalBehaviorProp(values []EnumpluginSourceAttributeRemovalBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginSourceAttributeRemovalBehaviorProp(value *EnumpluginSourceAttributeRemovalBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginStatsCollectorPerApplicationLDAPStatsProp) String() string {
	return string(e)
}

func StringSliceEnumpluginStatsCollectorPerApplicationLDAPStatsProp(values []EnumpluginStatsCollectorPerApplicationLDAPStatsProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginStatsCollectorPerApplicationLDAPStatsProp(value *EnumpluginStatsCollectorPerApplicationLDAPStatsProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginStatusSummaryInfoProp) String() string {
	return string(e)
}

func StringSliceEnumpluginStatusSummaryInfoProp(values []EnumpluginStatusSummaryInfoProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginStatusSummaryInfoProp(value *EnumpluginStatusSummaryInfoProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp(values []EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp(value *EnumpluginTargetAttributeExistsDuringInitialPopulationBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginUpdateSourceAttributeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginUpdateSourceAttributeBehaviorProp(values []EnumpluginUpdateSourceAttributeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginUpdateSourceAttributeBehaviorProp(value *EnumpluginUpdateSourceAttributeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginUpdateTargetAttributeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginUpdateTargetAttributeBehaviorProp(values []EnumpluginUpdateTargetAttributeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginUpdateTargetAttributeBehaviorProp(value *EnumpluginUpdateTargetAttributeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp(values []EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp(value *EnumpluginUpdatedEntryNewlyMatchesCriteriaBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp(values []EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp(value *EnumpluginUpdatedEntryNoLongerMatchesCriteriaBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprivilegeDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumprivilegeDataSecurityAuditorSchemaUrn(values []EnumprivilegeDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprivilegeDataSecurityAuditorSchemaUrn(value *EnumprivilegeDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprocessingTimeHistogramPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumprocessingTimeHistogramPluginSchemaUrn(values []EnumprocessingTimeHistogramPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprocessingTimeHistogramPluginSchemaUrn(value *EnumprocessingTimeHistogramPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprofilerPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumprofilerPluginSchemaUrn(values []EnumprofilerPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprofilerPluginSchemaUrn(value *EnumprofilerPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprometheusMonitorAttributeMetricMetricTypeProp) String() string {
	return string(e)
}

func StringSliceEnumprometheusMonitorAttributeMetricMetricTypeProp(values []EnumprometheusMonitorAttributeMetricMetricTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprometheusMonitorAttributeMetricMetricTypeProp(value *EnumprometheusMonitorAttributeMetricMetricTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprometheusMonitorAttributeMetricSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumprometheusMonitorAttributeMetricSchemaUrn(values []EnumprometheusMonitorAttributeMetricSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprometheusMonitorAttributeMetricSchemaUrn(value *EnumprometheusMonitorAttributeMetricSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumprometheusMonitoringHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumprometheusMonitoringHttpServletExtensionSchemaUrn(values []EnumprometheusMonitoringHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumprometheusMonitoringHttpServletExtensionSchemaUrn(value *EnumprometheusMonitoringHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumproxyServerInstanceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumproxyServerInstanceSchemaUrn(values []EnumproxyServerInstanceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumproxyServerInstanceSchemaUrn(value *EnumproxyServerInstanceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpurgeExpiredDataPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpurgeExpiredDataPluginSchemaUrn(values []EnumpurgeExpiredDataPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpurgeExpiredDataPluginSchemaUrn(value *EnumpurgeExpiredDataPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumpwnedPasswordsPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumpwnedPasswordsPasswordValidatorSchemaUrn(values []EnumpwnedPasswordsPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumpwnedPasswordsPasswordValidatorSchemaUrn(value *EnumpwnedPasswordsPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumquickstartHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumquickstartHttpServletExtensionSchemaUrn(values []EnumquickstartHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumquickstartHttpServletExtensionSchemaUrn(value *EnumquickstartHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrandomPasswordGeneratorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrandomPasswordGeneratorSchemaUrn(values []EnumrandomPasswordGeneratorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrandomPasswordGeneratorSchemaUrn(value *EnumrandomPasswordGeneratorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumrc4PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrc4PasswordStorageSchemeSchemaUrn(values []Enumrc4PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrc4PasswordStorageSchemeSchemaUrn(value *Enumrc4PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainInterruptedByShutdownBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainInterruptedByShutdownBehaviorProp(values []EnumrecurringTaskChainInterruptedByShutdownBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainInterruptedByShutdownBehaviorProp(value *EnumrecurringTaskChainInterruptedByShutdownBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainScheduledDateSelectionTypeProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainScheduledDateSelectionTypeProp(values []EnumrecurringTaskChainScheduledDateSelectionTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainScheduledDateSelectionTypeProp(value *EnumrecurringTaskChainScheduledDateSelectionTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainScheduledDayOfTheMonthProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainScheduledDayOfTheMonthProp(values []EnumrecurringTaskChainScheduledDayOfTheMonthProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainScheduledDayOfTheMonthProp(value *EnumrecurringTaskChainScheduledDayOfTheMonthProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainScheduledDayOfTheWeekProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainScheduledDayOfTheWeekProp(values []EnumrecurringTaskChainScheduledDayOfTheWeekProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainScheduledDayOfTheWeekProp(value *EnumrecurringTaskChainScheduledDayOfTheWeekProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainScheduledMonthProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainScheduledMonthProp(values []EnumrecurringTaskChainScheduledMonthProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainScheduledMonthProp(value *EnumrecurringTaskChainScheduledMonthProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainSchemaUrn(values []EnumrecurringTaskChainSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainSchemaUrn(value *EnumrecurringTaskChainSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp(values []EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp(value *EnumrecurringTaskChainServerOfflineAtStartTimeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskSecurityLevelProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskSecurityLevelProp(values []EnumrecurringTaskSecurityLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskSecurityLevelProp(value *EnumrecurringTaskSecurityLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskTaskCompletionStateForNonzeroExitCodeProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskTaskCompletionStateForNonzeroExitCodeProp(values []EnumrecurringTaskTaskCompletionStateForNonzeroExitCodeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskTaskCompletionStateForNonzeroExitCodeProp(value *EnumrecurringTaskTaskCompletionStateForNonzeroExitCodeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskTaskReturnStateIfTimeoutIsEncounteredProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskTaskReturnStateIfTimeoutIsEncounteredProp(values []EnumrecurringTaskTaskReturnStateIfTimeoutIsEncounteredProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskTaskReturnStateIfTimeoutIsEncounteredProp(value *EnumrecurringTaskTaskReturnStateIfTimeoutIsEncounteredProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrecurringTaskTimestampFormatProp) String() string {
	return string(e)
}

func StringSliceEnumrecurringTaskTimestampFormatProp(values []EnumrecurringTaskTimestampFormatProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrecurringTaskTimestampFormatProp(value *EnumrecurringTaskTimestampFormatProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreferentialIntegrityPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreferentialIntegrityPluginSchemaUrn(values []EnumreferentialIntegrityPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreferentialIntegrityPluginSchemaUrn(value *EnumreferentialIntegrityPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreferralOnUpdatePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreferralOnUpdatePluginSchemaUrn(values []EnumreferralOnUpdatePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreferralOnUpdatePluginSchemaUrn(value *EnumreferralOnUpdatePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumregularExpressionIdentityMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumregularExpressionIdentityMapperSchemaUrn(values []EnumregularExpressionIdentityMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumregularExpressionIdentityMapperSchemaUrn(value *EnumregularExpressionIdentityMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumregularExpressionPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumregularExpressionPasswordValidatorSchemaUrn(values []EnumregularExpressionPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumregularExpressionPasswordValidatorSchemaUrn(value *EnumregularExpressionPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrepeatedCharactersPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrepeatedCharactersPasswordValidatorSchemaUrn(values []EnumrepeatedCharactersPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrepeatedCharactersPasswordValidatorSchemaUrn(value *EnumrepeatedCharactersPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplaceCertificateExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplaceCertificateExtendedOperationHandlerSchemaUrn(values []EnumreplaceCertificateExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplaceCertificateExtendedOperationHandlerSchemaUrn(value *EnumreplaceCertificateExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationAssurancePolicyLocalLevelProp) String() string {
	return string(e)
}

func StringSliceEnumreplicationAssurancePolicyLocalLevelProp(values []EnumreplicationAssurancePolicyLocalLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationAssurancePolicyLocalLevelProp(value *EnumreplicationAssurancePolicyLocalLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationAssurancePolicyRemoteLevelProp) String() string {
	return string(e)
}

func StringSliceEnumreplicationAssurancePolicyRemoteLevelProp(values []EnumreplicationAssurancePolicyRemoteLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationAssurancePolicyRemoteLevelProp(value *EnumreplicationAssurancePolicyRemoteLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationAssurancePolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplicationAssurancePolicySchemaUrn(values []EnumreplicationAssurancePolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationAssurancePolicySchemaUrn(value *EnumreplicationAssurancePolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationAssuranceResultCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplicationAssuranceResultCriteriaSchemaUrn(values []EnumreplicationAssuranceResultCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationAssuranceResultCriteriaSchemaUrn(value *EnumreplicationAssuranceResultCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationDomainSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplicationDomainSchemaUrn(values []EnumreplicationDomainSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationDomainSchemaUrn(value *EnumreplicationDomainSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationStateDetailVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplicationStateDetailVirtualAttributeSchemaUrn(values []EnumreplicationStateDetailVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationStateDetailVirtualAttributeSchemaUrn(value *EnumreplicationStateDetailVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreplicationSynchronizationProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreplicationSynchronizationProviderSchemaUrn(values []EnumreplicationSynchronizationProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreplicationSynchronizationProviderSchemaUrn(value *EnumreplicationSynchronizationProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaIncludedSearchScopeProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaIncludedSearchScopeProp(values []EnumrequestCriteriaIncludedSearchScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaIncludedSearchScopeProp(value *EnumrequestCriteriaIncludedSearchScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaOperationOriginProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaOperationOriginProp(values []EnumrequestCriteriaOperationOriginProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaOperationOriginProp(value *EnumrequestCriteriaOperationOriginProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaRootDseOperationTypeProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaRootDseOperationTypeProp(values []EnumrequestCriteriaRootDseOperationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaRootDseOperationTypeProp(value *EnumrequestCriteriaRootDseOperationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaSimpleOperationTypeProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaSimpleOperationTypeProp(values []EnumrequestCriteriaSimpleOperationTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaSimpleOperationTypeProp(value *EnumrequestCriteriaSimpleOperationTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaTargetBindTypeProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaTargetBindTypeProp(values []EnumrequestCriteriaTargetBindTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaTargetBindTypeProp(value *EnumrequestCriteriaTargetBindTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrequestCriteriaUsingAdministrativeSessionWorkerThreadProp) String() string {
	return string(e)
}

func StringSliceEnumrequestCriteriaUsingAdministrativeSessionWorkerThreadProp(values []EnumrequestCriteriaUsingAdministrativeSessionWorkerThreadProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrequestCriteriaUsingAdministrativeSessionWorkerThreadProp(value *EnumrequestCriteriaUsingAdministrativeSessionWorkerThreadProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCodeMapSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumresultCodeMapSchemaUrn(values []EnumresultCodeMapSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCodeMapSchemaUrn(value *EnumresultCodeMapSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaAssuranceBehaviorAlteredByControlProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaAssuranceBehaviorAlteredByControlProp(values []EnumresultCriteriaAssuranceBehaviorAlteredByControlProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaAssuranceBehaviorAlteredByControlProp(value *EnumresultCriteriaAssuranceBehaviorAlteredByControlProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaAssuranceSatisfiedProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaAssuranceSatisfiedProp(values []EnumresultCriteriaAssuranceSatisfiedProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaAssuranceSatisfiedProp(value *EnumresultCriteriaAssuranceSatisfiedProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaAssuranceTimeoutCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaAssuranceTimeoutCriteriaProp(values []EnumresultCriteriaAssuranceTimeoutCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaAssuranceTimeoutCriteriaProp(value *EnumresultCriteriaAssuranceTimeoutCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaLocalAssuranceLevelProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaLocalAssuranceLevelProp(values []EnumresultCriteriaLocalAssuranceLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaLocalAssuranceLevelProp(value *EnumresultCriteriaLocalAssuranceLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaMissingAnyPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaMissingAnyPrivilegeProp(values []EnumresultCriteriaMissingAnyPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaMissingAnyPrivilegeProp(value *EnumresultCriteriaMissingAnyPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaMissingPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaMissingPrivilegeProp(values []EnumresultCriteriaMissingPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaMissingPrivilegeProp(value *EnumresultCriteriaMissingPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaProcessingTimeCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaProcessingTimeCriteriaProp(values []EnumresultCriteriaProcessingTimeCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaProcessingTimeCriteriaProp(value *EnumresultCriteriaProcessingTimeCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaQueueTimeCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaQueueTimeCriteriaProp(values []EnumresultCriteriaQueueTimeCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaQueueTimeCriteriaProp(value *EnumresultCriteriaQueueTimeCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaReferralReturnedProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaReferralReturnedProp(values []EnumresultCriteriaReferralReturnedProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaReferralReturnedProp(value *EnumresultCriteriaReferralReturnedProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaRemoteAssuranceLevelProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaRemoteAssuranceLevelProp(values []EnumresultCriteriaRemoteAssuranceLevelProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaRemoteAssuranceLevelProp(value *EnumresultCriteriaRemoteAssuranceLevelProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaResponseDelayedByAssuranceProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaResponseDelayedByAssuranceProp(values []EnumresultCriteriaResponseDelayedByAssuranceProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaResponseDelayedByAssuranceProp(value *EnumresultCriteriaResponseDelayedByAssuranceProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaResultCodeCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaResultCodeCriteriaProp(values []EnumresultCriteriaResultCodeCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaResultCodeCriteriaProp(value *EnumresultCriteriaResultCodeCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaResultCodeValueProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaResultCodeValueProp(values []EnumresultCriteriaResultCodeValueProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaResultCodeValueProp(value *EnumresultCriteriaResultCodeValueProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaRetiredPasswordUsedForBindProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaRetiredPasswordUsedForBindProp(values []EnumresultCriteriaRetiredPasswordUsedForBindProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaRetiredPasswordUsedForBindProp(value *EnumresultCriteriaRetiredPasswordUsedForBindProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaSearchEntryReturnedCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaSearchEntryReturnedCriteriaProp(values []EnumresultCriteriaSearchEntryReturnedCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaSearchEntryReturnedCriteriaProp(value *EnumresultCriteriaSearchEntryReturnedCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaSearchIndexedCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaSearchIndexedCriteriaProp(values []EnumresultCriteriaSearchIndexedCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaSearchIndexedCriteriaProp(value *EnumresultCriteriaSearchIndexedCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaSearchReferenceReturnedCriteriaProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaSearchReferenceReturnedCriteriaProp(values []EnumresultCriteriaSearchReferenceReturnedCriteriaProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaSearchReferenceReturnedCriteriaProp(value *EnumresultCriteriaSearchReferenceReturnedCriteriaProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaUsedAlternateAuthzidProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaUsedAlternateAuthzidProp(values []EnumresultCriteriaUsedAlternateAuthzidProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaUsedAlternateAuthzidProp(value *EnumresultCriteriaUsedAlternateAuthzidProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaUsedAnyPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaUsedAnyPrivilegeProp(values []EnumresultCriteriaUsedAnyPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaUsedAnyPrivilegeProp(value *EnumresultCriteriaUsedAnyPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumresultCriteriaUsedPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumresultCriteriaUsedPrivilegeProp(values []EnumresultCriteriaUsedPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumresultCriteriaUsedPrivilegeProp(value *EnumresultCriteriaUsedPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumreverseDnJoinVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumreverseDnJoinVirtualAttributeSchemaUrn(values []EnumreverseDnJoinVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumreverseDnJoinVirtualAttributeSchemaUrn(value *EnumreverseDnJoinVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDnDefaultRootPrivilegeNameProp) String() string {
	return string(e)
}

func StringSliceEnumrootDnDefaultRootPrivilegeNameProp(values []EnumrootDnDefaultRootPrivilegeNameProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDnDefaultRootPrivilegeNameProp(value *EnumrootDnDefaultRootPrivilegeNameProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDnSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrootDnSchemaUrn(values []EnumrootDnSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDnSchemaUrn(value *EnumrootDnSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDnUserIsProxyableProp) String() string {
	return string(e)
}

func StringSliceEnumrootDnUserIsProxyableProp(values []EnumrootDnUserIsProxyableProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDnUserIsProxyableProp(value *EnumrootDnUserIsProxyableProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDnUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumrootDnUserPrivilegeProp(values []EnumrootDnUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDnUserPrivilegeProp(value *EnumrootDnUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDnUserSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrootDnUserSchemaUrn(values []EnumrootDnUserSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDnUserSchemaUrn(value *EnumrootDnUserSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDseBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrootDseBackendSchemaUrn(values []EnumrootDseBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDseBackendSchemaUrn(value *EnumrootDseBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumrootDseRequestCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumrootDseRequestCriteriaSchemaUrn(values []EnumrootDseRequestCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumrootDseRequestCriteriaSchemaUrn(value *EnumrootDseRequestCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaltedMd5PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsaltedMd5PasswordStorageSchemeSchemaUrn(values []EnumsaltedMd5PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaltedMd5PasswordStorageSchemeSchemaUrn(value *EnumsaltedMd5PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaltedSha1PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsaltedSha1PasswordStorageSchemeSchemaUrn(values []EnumsaltedSha1PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaltedSha1PasswordStorageSchemeSchemaUrn(value *EnumsaltedSha1PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaltedSha256PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsaltedSha256PasswordStorageSchemeSchemaUrn(values []EnumsaltedSha256PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaltedSha256PasswordStorageSchemeSchemaUrn(value *EnumsaltedSha256PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaltedSha384PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsaltedSha384PasswordStorageSchemeSchemaUrn(values []EnumsaltedSha384PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaltedSha384PasswordStorageSchemeSchemaUrn(value *EnumsaltedSha384PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaltedSha512PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsaltedSha512PasswordStorageSchemeSchemaUrn(values []EnumsaltedSha512PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaltedSha512PasswordStorageSchemeSchemaUrn(value *EnumsaltedSha512PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaslMechanismHandlerAllowedQualityOfProtectionProp) String() string {
	return string(e)
}

func StringSliceEnumsaslMechanismHandlerAllowedQualityOfProtectionProp(values []EnumsaslMechanismHandlerAllowedQualityOfProtectionProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaslMechanismHandlerAllowedQualityOfProtectionProp(value *EnumsaslMechanismHandlerAllowedQualityOfProtectionProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaslMechanismHandlerCertificateValidationPolicyProp) String() string {
	return string(e)
}

func StringSliceEnumsaslMechanismHandlerCertificateValidationPolicyProp(values []EnumsaslMechanismHandlerCertificateValidationPolicyProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaslMechanismHandlerCertificateValidationPolicyProp(value *EnumsaslMechanismHandlerCertificateValidationPolicyProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaslMechanismHandlerGssapiRoleProp) String() string {
	return string(e)
}

func StringSliceEnumsaslMechanismHandlerGssapiRoleProp(values []EnumsaslMechanismHandlerGssapiRoleProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaslMechanismHandlerGssapiRoleProp(value *EnumsaslMechanismHandlerGssapiRoleProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp) String() string {
	return string(e)
}

func StringSliceEnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp(values []EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp(value *EnumsaslMechanismHandlerValidateAccessTokenWhenIDTokenIsAlsoProvidedProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumschemaBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumschemaBackendSchemaUrn(values []EnumschemaBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumschemaBackendSchemaUrn(value *EnumschemaBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumscim2HttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumscim2HttpServletExtensionSchemaUrn(values []Enumscim2HttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscim2HttpServletExtensionSchemaUrn(value *Enumscim2HttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimAttributeMutabilityProp) String() string {
	return string(e)
}

func StringSliceEnumscimAttributeMutabilityProp(values []EnumscimAttributeMutabilityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimAttributeMutabilityProp(value *EnumscimAttributeMutabilityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimAttributeReturnedProp) String() string {
	return string(e)
}

func StringSliceEnumscimAttributeReturnedProp(values []EnumscimAttributeReturnedProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimAttributeReturnedProp(value *EnumscimAttributeReturnedProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumscimAttributeSchemaUrn(values []EnumscimAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimAttributeSchemaUrn(value *EnumscimAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimAttributeTypeProp) String() string {
	return string(e)
}

func StringSliceEnumscimAttributeTypeProp(values []EnumscimAttributeTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimAttributeTypeProp(value *EnumscimAttributeTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimSchemaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumscimSchemaSchemaUrn(values []EnumscimSchemaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimSchemaSchemaUrn(value *EnumscimSchemaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimSubattributeMutabilityProp) String() string {
	return string(e)
}

func StringSliceEnumscimSubattributeMutabilityProp(values []EnumscimSubattributeMutabilityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimSubattributeMutabilityProp(value *EnumscimSubattributeMutabilityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimSubattributeReturnedProp) String() string {
	return string(e)
}

func StringSliceEnumscimSubattributeReturnedProp(values []EnumscimSubattributeReturnedProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimSubattributeReturnedProp(value *EnumscimSubattributeReturnedProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimSubattributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumscimSubattributeSchemaUrn(values []EnumscimSubattributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimSubattributeSchemaUrn(value *EnumscimSubattributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscimSubattributeTypeProp) String() string {
	return string(e)
}

func StringSliceEnumscimSubattributeTypeProp(values []EnumscimSubattributeTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscimSubattributeTypeProp(value *EnumscimSubattributeTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumscryptPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumscryptPasswordStorageSchemeSchemaUrn(values []EnumscryptPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumscryptPasswordStorageSchemeSchemaUrn(value *EnumscryptPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsearchShutdownPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsearchShutdownPluginSchemaUrn(values []EnumsearchShutdownPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsearchShutdownPluginSchemaUrn(value *EnumsearchShutdownPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeAllowInAddProp) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeAllowInAddProp(values []EnumsensitiveAttributeAllowInAddProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeAllowInAddProp(value *EnumsensitiveAttributeAllowInAddProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeAllowInCompareProp) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeAllowInCompareProp(values []EnumsensitiveAttributeAllowInCompareProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeAllowInCompareProp(value *EnumsensitiveAttributeAllowInCompareProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeAllowInFilterProp) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeAllowInFilterProp(values []EnumsensitiveAttributeAllowInFilterProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeAllowInFilterProp(value *EnumsensitiveAttributeAllowInFilterProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeAllowInModifyProp) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeAllowInModifyProp(values []EnumsensitiveAttributeAllowInModifyProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeAllowInModifyProp(value *EnumsensitiveAttributeAllowInModifyProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeAllowInReturnedEntriesProp) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeAllowInReturnedEntriesProp(values []EnumsensitiveAttributeAllowInReturnedEntriesProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeAllowInReturnedEntriesProp(value *EnumsensitiveAttributeAllowInReturnedEntriesProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsensitiveAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsensitiveAttributeSchemaUrn(values []EnumsensitiveAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsensitiveAttributeSchemaUrn(value *EnumsensitiveAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverGroupSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumserverGroupSchemaUrn(values []EnumserverGroupSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverGroupSchemaUrn(value *EnumserverGroupSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverInstanceListenerHttpConnectionSecurityProp) String() string {
	return string(e)
}

func StringSliceEnumserverInstanceListenerHttpConnectionSecurityProp(values []EnumserverInstanceListenerHttpConnectionSecurityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverInstanceListenerHttpConnectionSecurityProp(value *EnumserverInstanceListenerHttpConnectionSecurityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverInstanceListenerLdapConnectionSecurityProp) String() string {
	return string(e)
}

func StringSliceEnumserverInstanceListenerLdapConnectionSecurityProp(values []EnumserverInstanceListenerLdapConnectionSecurityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverInstanceListenerLdapConnectionSecurityProp(value *EnumserverInstanceListenerLdapConnectionSecurityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverInstanceListenerPurposeProp) String() string {
	return string(e)
}

func StringSliceEnumserverInstanceListenerPurposeProp(values []EnumserverInstanceListenerPurposeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverInstanceListenerPurposeProp(value *EnumserverInstanceListenerPurposeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverInstancePreferredSecurityProp) String() string {
	return string(e)
}

func StringSliceEnumserverInstancePreferredSecurityProp(values []EnumserverInstancePreferredSecurityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverInstancePreferredSecurityProp(value *EnumserverInstancePreferredSecurityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumserverInstanceServerInstanceTypeProp) String() string {
	return string(e)
}

func StringSliceEnumserverInstanceServerInstanceTypeProp(values []EnumserverInstanceServerInstanceTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumserverInstanceServerInstanceTypeProp(value *EnumserverInstanceServerInstanceTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsevenBitCleanPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsevenBitCleanPluginSchemaUrn(values []EnumsevenBitCleanPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsevenBitCleanPluginSchemaUrn(value *EnumsevenBitCleanPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e Enumsha1PasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsha1PasswordStorageSchemeSchemaUrn(values []Enumsha1PasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsha1PasswordStorageSchemeSchemaUrn(value *Enumsha1PasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumshortUniqueIdVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumshortUniqueIdVirtualAttributeSchemaUrn(values []EnumshortUniqueIdVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumshortUniqueIdVirtualAttributeSchemaUrn(value *EnumshortUniqueIdVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimilarityBasedPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimilarityBasedPasswordValidatorSchemaUrn(values []EnumsimilarityBasedPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimilarityBasedPasswordValidatorSchemaUrn(value *EnumsimilarityBasedPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleConnectionCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleConnectionCriteriaSchemaUrn(values []EnumsimpleConnectionCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleConnectionCriteriaSchemaUrn(value *EnumsimpleConnectionCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleRequestCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleRequestCriteriaSchemaUrn(values []EnumsimpleRequestCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleRequestCriteriaSchemaUrn(value *EnumsimpleRequestCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleResultCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleResultCriteriaSchemaUrn(values []EnumsimpleResultCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleResultCriteriaSchemaUrn(value *EnumsimpleResultCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleSearchEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleSearchEntryCriteriaSchemaUrn(values []EnumsimpleSearchEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleSearchEntryCriteriaSchemaUrn(value *EnumsimpleSearchEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleSearchReferenceCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleSearchReferenceCriteriaSchemaUrn(values []EnumsimpleSearchReferenceCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleSearchReferenceCriteriaSchemaUrn(value *EnumsimpleSearchReferenceCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleToExternalBindPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleToExternalBindPluginSchemaUrn(values []EnumsimpleToExternalBindPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleToExternalBindPluginSchemaUrn(value *EnumsimpleToExternalBindPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsimpleUncachedAttributeCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsimpleUncachedAttributeCriteriaSchemaUrn(values []EnumsimpleUncachedAttributeCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsimpleUncachedAttributeCriteriaSchemaUrn(value *EnumsimpleUncachedAttributeCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsingleUseTokensExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsingleUseTokensExtendedOperationHandlerSchemaUrn(values []EnumsingleUseTokensExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsingleUseTokensExtendedOperationHandlerSchemaUrn(value *EnumsingleUseTokensExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsizeLimitLogRetentionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsizeLimitLogRetentionPolicySchemaUrn(values []EnumsizeLimitLogRetentionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsizeLimitLogRetentionPolicySchemaUrn(value *EnumsizeLimitLogRetentionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsizeLimitLogRotationPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsizeLimitLogRotationPolicySchemaUrn(values []EnumsizeLimitLogRotationPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsizeLimitLogRotationPolicySchemaUrn(value *EnumsizeLimitLogRotationPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsmtpAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsmtpAccountStatusNotificationHandlerSchemaUrn(values []EnumsmtpAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsmtpAccountStatusNotificationHandlerSchemaUrn(value *EnumsmtpAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsmtpAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsmtpAlertHandlerSchemaUrn(values []EnumsmtpAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsmtpAlertHandlerSchemaUrn(value *EnumsmtpAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsmtpExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsmtpExternalServerSchemaUrn(values []EnumsmtpExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsmtpExternalServerSchemaUrn(value *EnumsmtpExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsnmpAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsnmpAlertHandlerSchemaUrn(values []EnumsnmpAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsnmpAlertHandlerSchemaUrn(value *EnumsnmpAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsnmpSubAgentAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsnmpSubAgentAlertHandlerSchemaUrn(values []EnumsnmpSubAgentAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsnmpSubAgentAlertHandlerSchemaUrn(value *EnumsnmpSubAgentAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsnmpSubagentPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsnmpSubagentPluginSchemaUrn(values []EnumsnmpSubagentPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsnmpSubagentPluginSchemaUrn(value *EnumsnmpSubagentPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsoftDeletePolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsoftDeletePolicySchemaUrn(values []EnumsoftDeletePolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsoftDeletePolicySchemaUrn(value *EnumsoftDeletePolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsslContextMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsslContextMonitorProviderSchemaUrn(values []EnumsslContextMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsslContextMonitorProviderSchemaUrn(value *EnumsslContextMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstackTraceMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstackTraceMonitorProviderSchemaUrn(values []EnumstackTraceMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstackTraceMonitorProviderSchemaUrn(value *EnumstackTraceMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstartTlsExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstartTlsExtendedOperationHandlerSchemaUrn(values []EnumstartTlsExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstartTlsExtendedOperationHandlerSchemaUrn(value *EnumstartTlsExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstaticGroupImplementationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstaticGroupImplementationSchemaUrn(values []EnumstaticGroupImplementationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstaticGroupImplementationSchemaUrn(value *EnumstaticGroupImplementationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstaticTokenVaultAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstaticTokenVaultAuthenticationMethodSchemaUrn(values []EnumstaticTokenVaultAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstaticTokenVaultAuthenticationMethodSchemaUrn(value *EnumstaticTokenVaultAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstaticallyDefinedRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstaticallyDefinedRecurringTaskSchemaUrn(values []EnumstaticallyDefinedRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstaticallyDefinedRecurringTaskSchemaUrn(value *EnumstaticallyDefinedRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstatsCollectorPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstatsCollectorPluginSchemaUrn(values []EnumstatsCollectorPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstatsCollectorPluginSchemaUrn(value *EnumstatsCollectorPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstatsdMonitoringEndpointSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstatsdMonitoringEndpointSchemaUrn(values []EnumstatsdMonitoringEndpointSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstatsdMonitoringEndpointSchemaUrn(value *EnumstatsdMonitoringEndpointSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstringArrayTokenClaimValidationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstringArrayTokenClaimValidationSchemaUrn(values []EnumstringArrayTokenClaimValidationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstringArrayTokenClaimValidationSchemaUrn(value *EnumstringArrayTokenClaimValidationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumstringTokenClaimValidationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumstringTokenClaimValidationSchemaUrn(values []EnumstringTokenClaimValidationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumstringTokenClaimValidationSchemaUrn(value *EnumstringTokenClaimValidationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubOperationTimingPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubOperationTimingPluginSchemaUrn(values []EnumsubOperationTimingPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubOperationTimingPluginSchemaUrn(value *EnumsubOperationTimingPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubjectAttributeToUserAttributeCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubjectAttributeToUserAttributeCertificateMapperSchemaUrn(values []EnumsubjectAttributeToUserAttributeCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubjectAttributeToUserAttributeCertificateMapperSchemaUrn(value *EnumsubjectAttributeToUserAttributeCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubjectDnToUserAttributeCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubjectDnToUserAttributeCertificateMapperSchemaUrn(values []EnumsubjectDnToUserAttributeCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubjectDnToUserAttributeCertificateMapperSchemaUrn(value *EnumsubjectDnToUserAttributeCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubjectEqualsDnCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubjectEqualsDnCertificateMapperSchemaUrn(values []EnumsubjectEqualsDnCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubjectEqualsDnCertificateMapperSchemaUrn(value *EnumsubjectEqualsDnCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubschemaSubentryVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubschemaSubentryVirtualAttributeSchemaUrn(values []EnumsubschemaSubentryVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubschemaSubentryVirtualAttributeSchemaUrn(value *EnumsubschemaSubentryVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsubstringMatchingRuleSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsubstringMatchingRuleSchemaUrn(values []EnumsubstringMatchingRuleSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsubstringMatchingRuleSchemaUrn(value *EnumsubstringMatchingRuleSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsummarizeLogFileRotationListenerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsummarizeLogFileRotationListenerSchemaUrn(values []EnumsummarizeLogFileRotationListenerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsummarizeLogFileRotationListenerSchemaUrn(value *EnumsummarizeLogFileRotationListenerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyncServerInstanceSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyncServerInstanceSchemaUrn(values []EnumsyncServerInstanceSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyncServerInstanceSchemaUrn(value *EnumsyncServerInstanceSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogBasedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogBasedAccessLogPublisherSchemaUrn(values []EnumsyslogBasedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogBasedAccessLogPublisherSchemaUrn(value *EnumsyslogBasedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogBasedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogBasedErrorLogPublisherSchemaUrn(values []EnumsyslogBasedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogBasedErrorLogPublisherSchemaUrn(value *EnumsyslogBasedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogExternalServerSchemaUrn(values []EnumsyslogExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogExternalServerSchemaUrn(value *EnumsyslogExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogJsonAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogJsonAccessLogPublisherSchemaUrn(values []EnumsyslogJsonAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogJsonAccessLogPublisherSchemaUrn(value *EnumsyslogJsonAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogJsonAuditLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogJsonAuditLogPublisherSchemaUrn(values []EnumsyslogJsonAuditLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogJsonAuditLogPublisherSchemaUrn(value *EnumsyslogJsonAuditLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogJsonErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogJsonErrorLogPublisherSchemaUrn(values []EnumsyslogJsonErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogJsonErrorLogPublisherSchemaUrn(value *EnumsyslogJsonErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogJsonHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogJsonHttpOperationLogPublisherSchemaUrn(values []EnumsyslogJsonHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogJsonHttpOperationLogPublisherSchemaUrn(value *EnumsyslogJsonHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogTextAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogTextAccessLogPublisherSchemaUrn(values []EnumsyslogTextAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogTextAccessLogPublisherSchemaUrn(value *EnumsyslogTextAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsyslogTextErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsyslogTextErrorLogPublisherSchemaUrn(values []EnumsyslogTextErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsyslogTextErrorLogPublisherSchemaUrn(value *EnumsyslogTextErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumsystemInfoMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumsystemInfoMonitorProviderSchemaUrn(values []EnumsystemInfoMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumsystemInfoMonitorProviderSchemaUrn(value *EnumsystemInfoMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtaskBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtaskBackendSchemaUrn(values []EnumtaskBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtaskBackendSchemaUrn(value *EnumtaskBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtelephoneNumberAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtelephoneNumberAttributeSyntaxSchemaUrn(values []EnumtelephoneNumberAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtelephoneNumberAttributeSyntaxSchemaUrn(value *EnumtelephoneNumberAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtextAccessLogFieldBehaviorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtextAccessLogFieldBehaviorSchemaUrn(values []EnumtextAccessLogFieldBehaviorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtextAccessLogFieldBehaviorSchemaUrn(value *EnumtextAccessLogFieldBehaviorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyAccessLogPublisherSchemaUrn(values []EnumthirdPartyAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyAccessLogPublisherSchemaUrn(value *EnumthirdPartyAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyAccessTokenValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyAccessTokenValidatorSchemaUrn(values []EnumthirdPartyAccessTokenValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyAccessTokenValidatorSchemaUrn(value *EnumthirdPartyAccessTokenValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyAccountStatusNotificationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyAccountStatusNotificationHandlerSchemaUrn(values []EnumthirdPartyAccountStatusNotificationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyAccountStatusNotificationHandlerSchemaUrn(value *EnumthirdPartyAccountStatusNotificationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyAlertHandlerSchemaUrn(values []EnumthirdPartyAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyAlertHandlerSchemaUrn(value *EnumthirdPartyAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyCertificateMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyCertificateMapperSchemaUrn(values []EnumthirdPartyCertificateMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyCertificateMapperSchemaUrn(value *EnumthirdPartyCertificateMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyChangeSubscriptionHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyChangeSubscriptionHandlerSchemaUrn(values []EnumthirdPartyChangeSubscriptionHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyChangeSubscriptionHandlerSchemaUrn(value *EnumthirdPartyChangeSubscriptionHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyCipherStreamProviderSchemaUrn(values []EnumthirdPartyCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyCipherStreamProviderSchemaUrn(value *EnumthirdPartyCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyConnectionCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyConnectionCriteriaSchemaUrn(values []EnumthirdPartyConnectionCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyConnectionCriteriaSchemaUrn(value *EnumthirdPartyConnectionCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyDataSecurityAuditorSchemaUrn(values []EnumthirdPartyDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyDataSecurityAuditorSchemaUrn(value *EnumthirdPartyDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn(values []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn(value *EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyErrorLogPublisherSchemaUrn(values []EnumthirdPartyErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyErrorLogPublisherSchemaUrn(value *EnumthirdPartyErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyExtendedOperationHandlerSchemaUrn(values []EnumthirdPartyExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyExtendedOperationHandlerSchemaUrn(value *EnumthirdPartyExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyFileBasedAccessLogPublisherSchemaUrn(values []EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyFileBasedAccessLogPublisherSchemaUrn(value *EnumthirdPartyFileBasedAccessLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyFileBasedErrorLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyFileBasedErrorLogPublisherSchemaUrn(values []EnumthirdPartyFileBasedErrorLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyFileBasedErrorLogPublisherSchemaUrn(value *EnumthirdPartyFileBasedErrorLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyHttpOperationLogPublisherSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyHttpOperationLogPublisherSchemaUrn(values []EnumthirdPartyHttpOperationLogPublisherSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyHttpOperationLogPublisherSchemaUrn(value *EnumthirdPartyHttpOperationLogPublisherSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyHttpServletExtensionSchemaUrn(values []EnumthirdPartyHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyHttpServletExtensionSchemaUrn(value *EnumthirdPartyHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyIdentityMapperSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyIdentityMapperSchemaUrn(values []EnumthirdPartyIdentityMapperSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyIdentityMapperSchemaUrn(value *EnumthirdPartyIdentityMapperSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyKeyManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyKeyManagerProviderSchemaUrn(values []EnumthirdPartyKeyManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyKeyManagerProviderSchemaUrn(value *EnumthirdPartyKeyManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyLogFileRotationListenerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyLogFileRotationListenerSchemaUrn(values []EnumthirdPartyLogFileRotationListenerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyLogFileRotationListenerSchemaUrn(value *EnumthirdPartyLogFileRotationListenerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyMonitorProviderSchemaUrn(values []EnumthirdPartyMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyMonitorProviderSchemaUrn(value *EnumthirdPartyMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyNotificationManagerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyNotificationManagerSchemaUrn(values []EnumthirdPartyNotificationManagerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyNotificationManagerSchemaUrn(value *EnumthirdPartyNotificationManagerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyOauthTokenHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyOauthTokenHandlerSchemaUrn(values []EnumthirdPartyOauthTokenHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyOauthTokenHandlerSchemaUrn(value *EnumthirdPartyOauthTokenHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyOtpDeliveryMechanismSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyOtpDeliveryMechanismSchemaUrn(values []EnumthirdPartyOtpDeliveryMechanismSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyOtpDeliveryMechanismSchemaUrn(value *EnumthirdPartyOtpDeliveryMechanismSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPassThroughAuthenticationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPassThroughAuthenticationHandlerSchemaUrn(values []EnumthirdPartyPassThroughAuthenticationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPassThroughAuthenticationHandlerSchemaUrn(value *EnumthirdPartyPassThroughAuthenticationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPassphraseProviderSchemaUrn(values []EnumthirdPartyPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPassphraseProviderSchemaUrn(value *EnumthirdPartyPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPasswordGeneratorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPasswordGeneratorSchemaUrn(values []EnumthirdPartyPasswordGeneratorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPasswordGeneratorSchemaUrn(value *EnumthirdPartyPasswordGeneratorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPasswordStorageSchemeSchemaUrn(values []EnumthirdPartyPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPasswordStorageSchemeSchemaUrn(value *EnumthirdPartyPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPasswordValidatorSchemaUrn(values []EnumthirdPartyPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPasswordValidatorSchemaUrn(value *EnumthirdPartyPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyPluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyPluginSchemaUrn(values []EnumthirdPartyPluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyPluginSchemaUrn(value *EnumthirdPartyPluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyRecurringTaskSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyRecurringTaskSchemaUrn(values []EnumthirdPartyRecurringTaskSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyRecurringTaskSchemaUrn(value *EnumthirdPartyRecurringTaskSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyRequestCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyRequestCriteriaSchemaUrn(values []EnumthirdPartyRequestCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyRequestCriteriaSchemaUrn(value *EnumthirdPartyRequestCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyResultCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyResultCriteriaSchemaUrn(values []EnumthirdPartyResultCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyResultCriteriaSchemaUrn(value *EnumthirdPartyResultCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartySaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartySaslMechanismHandlerSchemaUrn(values []EnumthirdPartySaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartySaslMechanismHandlerSchemaUrn(value *EnumthirdPartySaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartySearchEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartySearchEntryCriteriaSchemaUrn(values []EnumthirdPartySearchEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartySearchEntryCriteriaSchemaUrn(value *EnumthirdPartySearchEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartySearchReferenceCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartySearchReferenceCriteriaSchemaUrn(values []EnumthirdPartySearchReferenceCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartySearchReferenceCriteriaSchemaUrn(value *EnumthirdPartySearchReferenceCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyTrustManagerProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyTrustManagerProviderSchemaUrn(values []EnumthirdPartyTrustManagerProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyTrustManagerProviderSchemaUrn(value *EnumthirdPartyTrustManagerProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyUncachedAttributeCriteriaSchemaUrn(values []EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyUncachedAttributeCriteriaSchemaUrn(value *EnumthirdPartyUncachedAttributeCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyUncachedEntryCriteriaSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyUncachedEntryCriteriaSchemaUrn(values []EnumthirdPartyUncachedEntryCriteriaSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyUncachedEntryCriteriaSchemaUrn(value *EnumthirdPartyUncachedEntryCriteriaSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyVelocityContextProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyVelocityContextProviderSchemaUrn(values []EnumthirdPartyVelocityContextProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyVelocityContextProviderSchemaUrn(value *EnumthirdPartyVelocityContextProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumthirdPartyVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumthirdPartyVirtualAttributeSchemaUrn(values []EnumthirdPartyVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumthirdPartyVirtualAttributeSchemaUrn(value *EnumthirdPartyVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtimeLimitLogRetentionPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtimeLimitLogRetentionPolicySchemaUrn(values []EnumtimeLimitLogRetentionPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtimeLimitLogRetentionPolicySchemaUrn(value *EnumtimeLimitLogRetentionPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtimeLimitLogRotationPolicySchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtimeLimitLogRotationPolicySchemaUrn(values []EnumtimeLimitLogRotationPolicySchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtimeLimitLogRotationPolicySchemaUrn(value *EnumtimeLimitLogRotationPolicySchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtokenClaimValidationRequiredValueProp) String() string {
	return string(e)
}

func StringSliceEnumtokenClaimValidationRequiredValueProp(values []EnumtokenClaimValidationRequiredValueProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtokenClaimValidationRequiredValueProp(value *EnumtokenClaimValidationRequiredValueProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtopologyAdminUserIsProxyableProp) String() string {
	return string(e)
}

func StringSliceEnumtopologyAdminUserIsProxyableProp(values []EnumtopologyAdminUserIsProxyableProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtopologyAdminUserIsProxyableProp(value *EnumtopologyAdminUserIsProxyableProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtopologyAdminUserPrivilegeProp) String() string {
	return string(e)
}

func StringSliceEnumtopologyAdminUserPrivilegeProp(values []EnumtopologyAdminUserPrivilegeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtopologyAdminUserPrivilegeProp(value *EnumtopologyAdminUserPrivilegeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtopologyAdminUserSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtopologyAdminUserSchemaUrn(values []EnumtopologyAdminUserSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtopologyAdminUserSchemaUrn(value *EnumtopologyAdminUserSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtripleDesPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtripleDesPasswordStorageSchemeSchemaUrn(values []EnumtripleDesPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtripleDesPasswordStorageSchemeSchemaUrn(value *EnumtripleDesPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtrustStoreBackendSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtrustStoreBackendSchemaUrn(values []EnumtrustStoreBackendSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtrustStoreBackendSchemaUrn(value *EnumtrustStoreBackendSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtrustedCertificateSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtrustedCertificateSchemaUrn(values []EnumtrustedCertificateSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtrustedCertificateSchemaUrn(value *EnumtrustedCertificateSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtwilioAlertHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtwilioAlertHandlerSchemaUrn(values []EnumtwilioAlertHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtwilioAlertHandlerSchemaUrn(value *EnumtwilioAlertHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumtwilioOtpDeliveryMechanismSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumtwilioOtpDeliveryMechanismSchemaUrn(values []EnumtwilioOtpDeliveryMechanismSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumtwilioOtpDeliveryMechanismSchemaUrn(value *EnumtwilioOtpDeliveryMechanismSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidCertificatePlusPasswordSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidCertificatePlusPasswordSaslMechanismHandlerSchemaUrn(values []EnumunboundidCertificatePlusPasswordSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidCertificatePlusPasswordSaslMechanismHandlerSchemaUrn(value *EnumunboundidCertificatePlusPasswordSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidDeliveredOtpSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidDeliveredOtpSaslMechanismHandlerSchemaUrn(values []EnumunboundidDeliveredOtpSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidDeliveredOtpSaslMechanismHandlerSchemaUrn(value *EnumunboundidDeliveredOtpSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn(values []EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn(value *EnumunboundidExternalAuthSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidMsChapV2SaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidMsChapV2SaslMechanismHandlerSchemaUrn(values []EnumunboundidMsChapV2SaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidMsChapV2SaslMechanismHandlerSchemaUrn(value *EnumunboundidMsChapV2SaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidTotpSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidTotpSaslMechanismHandlerSchemaUrn(values []EnumunboundidTotpSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidTotpSaslMechanismHandlerSchemaUrn(value *EnumunboundidTotpSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumunboundidYubikeyOtpSaslMechanismHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumunboundidYubikeyOtpSaslMechanismHandlerSchemaUrn(values []EnumunboundidYubikeyOtpSaslMechanismHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumunboundidYubikeyOtpSaslMechanismHandlerSchemaUrn(value *EnumunboundidYubikeyOtpSaslMechanismHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuniqueAttributePluginSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuniqueAttributePluginSchemaUrn(values []EnumuniqueAttributePluginSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuniqueAttributePluginSchemaUrn(value *EnumuniqueAttributePluginSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuniqueCharactersPasswordValidatorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuniqueCharactersPasswordValidatorSchemaUrn(values []EnumuniqueCharactersPasswordValidatorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuniqueCharactersPasswordValidatorSchemaUrn(value *EnumuniqueCharactersPasswordValidatorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuserDefinedVirtualAttributeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuserDefinedVirtualAttributeSchemaUrn(values []EnumuserDefinedVirtualAttributeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuserDefinedVirtualAttributeSchemaUrn(value *EnumuserDefinedVirtualAttributeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuserPassVaultAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuserPassVaultAuthenticationMethodSchemaUrn(values []EnumuserPassVaultAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuserPassVaultAuthenticationMethodSchemaUrn(value *EnumuserPassVaultAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuserPasswordAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuserPasswordAttributeSyntaxSchemaUrn(values []EnumuserPasswordAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuserPasswordAttributeSyntaxSchemaUrn(value *EnumuserPasswordAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuserRestResourceTypeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuserRestResourceTypeSchemaUrn(values []EnumuserRestResourceTypeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuserRestResourceTypeSchemaUrn(value *EnumuserRestResourceTypeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumusernamePasswordAzureAuthenticationMethodSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumusernamePasswordAzureAuthenticationMethodSchemaUrn(values []EnumusernamePasswordAzureAuthenticationMethodSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumusernamePasswordAzureAuthenticationMethodSchemaUrn(value *EnumusernamePasswordAzureAuthenticationMethodSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumuuidAttributeSyntaxSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumuuidAttributeSyntaxSchemaUrn(values []EnumuuidAttributeSyntaxSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumuuidAttributeSyntaxSchemaUrn(value *EnumuuidAttributeSyntaxSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvalidateTotpPasswordExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvalidateTotpPasswordExtendedOperationHandlerSchemaUrn(values []EnumvalidateTotpPasswordExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvalidateTotpPasswordExtendedOperationHandlerSchemaUrn(value *EnumvalidateTotpPasswordExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvaultCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvaultCipherStreamProviderSchemaUrn(values []EnumvaultCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvaultCipherStreamProviderSchemaUrn(value *EnumvaultCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvaultExternalServerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvaultExternalServerSchemaUrn(values []EnumvaultExternalServerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvaultExternalServerSchemaUrn(value *EnumvaultExternalServerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvaultPassphraseProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvaultPassphraseProviderSchemaUrn(values []EnumvaultPassphraseProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvaultPassphraseProviderSchemaUrn(value *EnumvaultPassphraseProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvaultPasswordStorageSchemeSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvaultPasswordStorageSchemeSchemaUrn(values []EnumvaultPasswordStorageSchemeSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvaultPasswordStorageSchemeSchemaUrn(value *EnumvaultPasswordStorageSchemeSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvelocityContextProviderObjectScopeProp) String() string {
	return string(e)
}

func StringSliceEnumvelocityContextProviderObjectScopeProp(values []EnumvelocityContextProviderObjectScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvelocityContextProviderObjectScopeProp(value *EnumvelocityContextProviderObjectScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvelocityHttpServletExtensionSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvelocityHttpServletExtensionSchemaUrn(values []EnumvelocityHttpServletExtensionSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvelocityHttpServletExtensionSchemaUrn(value *EnumvelocityHttpServletExtensionSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvelocityTemplateLoaderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvelocityTemplateLoaderSchemaUrn(values []EnumvelocityTemplateLoaderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvelocityTemplateLoaderSchemaUrn(value *EnumvelocityTemplateLoaderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvelocityToolsVelocityContextProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvelocityToolsVelocityContextProviderSchemaUrn(values []EnumvelocityToolsVelocityContextProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvelocityToolsVelocityContextProviderSchemaUrn(value *EnumvelocityToolsVelocityContextProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumversionMonitorProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumversionMonitorProviderSchemaUrn(values []EnumversionMonitorProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumversionMonitorProviderSchemaUrn(value *EnumversionMonitorProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualAttributeConflictBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumvirtualAttributeConflictBehaviorProp(values []EnumvirtualAttributeConflictBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualAttributeConflictBehaviorProp(value *EnumvirtualAttributeConflictBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualAttributeJoinBaseDNTypeProp) String() string {
	return string(e)
}

func StringSliceEnumvirtualAttributeJoinBaseDNTypeProp(values []EnumvirtualAttributeJoinBaseDNTypeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualAttributeJoinBaseDNTypeProp(value *EnumvirtualAttributeJoinBaseDNTypeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualAttributeJoinScopeProp) String() string {
	return string(e)
}

func StringSliceEnumvirtualAttributeJoinScopeProp(values []EnumvirtualAttributeJoinScopeProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualAttributeJoinScopeProp(value *EnumvirtualAttributeJoinScopeProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp) String() string {
	return string(e)
}

func StringSliceEnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp(values []EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp(value *EnumvirtualAttributeMultipleVirtualAttributeMergeBehaviorProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualAttributeRewriteSearchFiltersProp) String() string {
	return string(e)
}

func StringSliceEnumvirtualAttributeRewriteSearchFiltersProp(values []EnumvirtualAttributeRewriteSearchFiltersProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualAttributeRewriteSearchFiltersProp(value *EnumvirtualAttributeRewriteSearchFiltersProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumvirtualStaticGroupImplementationSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumvirtualStaticGroupImplementationSchemaUrn(values []EnumvirtualStaticGroupImplementationSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumvirtualStaticGroupImplementationSchemaUrn(value *EnumvirtualStaticGroupImplementationSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumwaitForPassphraseCipherStreamProviderSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumwaitForPassphraseCipherStreamProviderSchemaUrn(values []EnumwaitForPassphraseCipherStreamProviderSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumwaitForPassphraseCipherStreamProviderSchemaUrn(value *EnumwaitForPassphraseCipherStreamProviderSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn(values []EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn(value *EnumweaklyEncodedPasswordDataSecurityAuditorSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumwebApplicationExtensionComplexityProp) String() string {
	return string(e)
}

func StringSliceEnumwebApplicationExtensionComplexityProp(values []EnumwebApplicationExtensionComplexityProp) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumwebApplicationExtensionComplexityProp(value *EnumwebApplicationExtensionComplexityProp) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}

func (e EnumwhoAmIExtendedOperationHandlerSchemaUrn) String() string {
	return string(e)
}

func StringSliceEnumwhoAmIExtendedOperationHandlerSchemaUrn(values []EnumwhoAmIExtendedOperationHandlerSchemaUrn) []string {
	stringSlice := make([]string, len(values))
	for i := 0; i < len(values); i++ {
		stringSlice[i] = string(values[i])
	}
	return stringSlice
}

func StringPointerEnumwhoAmIExtendedOperationHandlerSchemaUrn(value *EnumwhoAmIExtendedOperationHandlerSchemaUrn) *string {
	if value == nil {
		return nil
	}
	s := value.String()
	return &s
}
