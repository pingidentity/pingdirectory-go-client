/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddFileCountLogRetentionPolicyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddFileCountLogRetentionPolicyRequest{}

// AddFileCountLogRetentionPolicyRequest struct for AddFileCountLogRetentionPolicyRequest
type AddFileCountLogRetentionPolicyRequest struct {
	// Name of the new Log Retention Policy
	PolicyName string                                     `json:"policyName"`
	Schemas    []EnumfileCountLogRetentionPolicySchemaUrn `json:"schemas"`
	// Specifies the number of archived log files to retain before the oldest ones are cleaned.
	NumberOfFiles int64 `json:"numberOfFiles"`
	// A description for this Log Retention Policy
	Description *string `json:"description,omitempty"`
}

// NewAddFileCountLogRetentionPolicyRequest instantiates a new AddFileCountLogRetentionPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFileCountLogRetentionPolicyRequest(policyName string, schemas []EnumfileCountLogRetentionPolicySchemaUrn, numberOfFiles int64) *AddFileCountLogRetentionPolicyRequest {
	this := AddFileCountLogRetentionPolicyRequest{}
	this.PolicyName = policyName
	this.Schemas = schemas
	this.NumberOfFiles = numberOfFiles
	return &this
}

// NewAddFileCountLogRetentionPolicyRequestWithDefaults instantiates a new AddFileCountLogRetentionPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFileCountLogRetentionPolicyRequestWithDefaults() *AddFileCountLogRetentionPolicyRequest {
	this := AddFileCountLogRetentionPolicyRequest{}
	return &this
}

// GetPolicyName returns the PolicyName field value
func (o *AddFileCountLogRetentionPolicyRequest) GetPolicyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *AddFileCountLogRetentionPolicyRequest) GetPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *AddFileCountLogRetentionPolicyRequest) SetPolicyName(v string) {
	o.PolicyName = v
}

// GetSchemas returns the Schemas field value
func (o *AddFileCountLogRetentionPolicyRequest) GetSchemas() []EnumfileCountLogRetentionPolicySchemaUrn {
	if o == nil {
		var ret []EnumfileCountLogRetentionPolicySchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddFileCountLogRetentionPolicyRequest) GetSchemasOk() ([]EnumfileCountLogRetentionPolicySchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddFileCountLogRetentionPolicyRequest) SetSchemas(v []EnumfileCountLogRetentionPolicySchemaUrn) {
	o.Schemas = v
}

// GetNumberOfFiles returns the NumberOfFiles field value
func (o *AddFileCountLogRetentionPolicyRequest) GetNumberOfFiles() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.NumberOfFiles
}

// GetNumberOfFilesOk returns a tuple with the NumberOfFiles field value
// and a boolean to check if the value has been set.
func (o *AddFileCountLogRetentionPolicyRequest) GetNumberOfFilesOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumberOfFiles, true
}

// SetNumberOfFiles sets field value
func (o *AddFileCountLogRetentionPolicyRequest) SetNumberOfFiles(v int64) {
	o.NumberOfFiles = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddFileCountLogRetentionPolicyRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddFileCountLogRetentionPolicyRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddFileCountLogRetentionPolicyRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddFileCountLogRetentionPolicyRequest) SetDescription(v string) {
	o.Description = &v
}

func (o AddFileCountLogRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddFileCountLogRetentionPolicyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["policyName"] = o.PolicyName
	toSerialize["schemas"] = o.Schemas
	toSerialize["numberOfFiles"] = o.NumberOfFiles
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableAddFileCountLogRetentionPolicyRequest struct {
	value *AddFileCountLogRetentionPolicyRequest
	isSet bool
}

func (v NullableAddFileCountLogRetentionPolicyRequest) Get() *AddFileCountLogRetentionPolicyRequest {
	return v.value
}

func (v *NullableAddFileCountLogRetentionPolicyRequest) Set(val *AddFileCountLogRetentionPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFileCountLogRetentionPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFileCountLogRetentionPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFileCountLogRetentionPolicyRequest(val *AddFileCountLogRetentionPolicyRequest) *NullableAddFileCountLogRetentionPolicyRequest {
	return &NullableAddFileCountLogRetentionPolicyRequest{value: val, isSet: true}
}

func (v NullableAddFileCountLogRetentionPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFileCountLogRetentionPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
