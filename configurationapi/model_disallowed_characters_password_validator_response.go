/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the DisallowedCharactersPasswordValidatorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DisallowedCharactersPasswordValidatorResponse{}

// DisallowedCharactersPasswordValidatorResponse struct for DisallowedCharactersPasswordValidatorResponse
type DisallowedCharactersPasswordValidatorResponse struct {
	// Name of the Password Validator
	Id      string                                               `json:"id"`
	Schemas []EnumdisallowedCharactersPasswordValidatorSchemaUrn `json:"schemas"`
	// A set of characters that will not be allowed anywhere in a password.
	DisallowedCharacters *string `json:"disallowedCharacters,omitempty"`
	// A set of characters that will not be allowed as the first character of the password.
	DisallowedLeadingCharacters *string `json:"disallowedLeadingCharacters,omitempty"`
	// A set of characters that will not be allowed as the last character of the password.
	DisallowedTrailingCharacters *string `json:"disallowedTrailingCharacters,omitempty"`
	// A description for this Password Validator
	Description *string `json:"description,omitempty"`
	// Indicates whether the password validator is enabled for use.
	Enabled bool `json:"enabled"`
	// Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
	ValidatorRequirementDescription *string `json:"validatorRequirementDescription,omitempty"`
	// Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
	ValidatorFailureMessage                       *string                                            `json:"validatorFailureMessage,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewDisallowedCharactersPasswordValidatorResponse instantiates a new DisallowedCharactersPasswordValidatorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDisallowedCharactersPasswordValidatorResponse(id string, schemas []EnumdisallowedCharactersPasswordValidatorSchemaUrn, enabled bool) *DisallowedCharactersPasswordValidatorResponse {
	this := DisallowedCharactersPasswordValidatorResponse{}
	this.Id = id
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewDisallowedCharactersPasswordValidatorResponseWithDefaults instantiates a new DisallowedCharactersPasswordValidatorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDisallowedCharactersPasswordValidatorResponseWithDefaults() *DisallowedCharactersPasswordValidatorResponse {
	this := DisallowedCharactersPasswordValidatorResponse{}
	return &this
}

// GetId returns the Id field value
func (o *DisallowedCharactersPasswordValidatorResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *DisallowedCharactersPasswordValidatorResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *DisallowedCharactersPasswordValidatorResponse) GetSchemas() []EnumdisallowedCharactersPasswordValidatorSchemaUrn {
	if o == nil {
		var ret []EnumdisallowedCharactersPasswordValidatorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetSchemasOk() ([]EnumdisallowedCharactersPasswordValidatorSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *DisallowedCharactersPasswordValidatorResponse) SetSchemas(v []EnumdisallowedCharactersPasswordValidatorSchemaUrn) {
	o.Schemas = v
}

// GetDisallowedCharacters returns the DisallowedCharacters field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedCharacters() string {
	if o == nil || IsNil(o.DisallowedCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedCharacters
}

// GetDisallowedCharactersOk returns a tuple with the DisallowedCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedCharacters) {
		return nil, false
	}
	return o.DisallowedCharacters, true
}

// HasDisallowedCharacters returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasDisallowedCharacters() bool {
	if o != nil && !IsNil(o.DisallowedCharacters) {
		return true
	}

	return false
}

// SetDisallowedCharacters gets a reference to the given string and assigns it to the DisallowedCharacters field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetDisallowedCharacters(v string) {
	o.DisallowedCharacters = &v
}

// GetDisallowedLeadingCharacters returns the DisallowedLeadingCharacters field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedLeadingCharacters() string {
	if o == nil || IsNil(o.DisallowedLeadingCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedLeadingCharacters
}

// GetDisallowedLeadingCharactersOk returns a tuple with the DisallowedLeadingCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedLeadingCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedLeadingCharacters) {
		return nil, false
	}
	return o.DisallowedLeadingCharacters, true
}

// HasDisallowedLeadingCharacters returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasDisallowedLeadingCharacters() bool {
	if o != nil && !IsNil(o.DisallowedLeadingCharacters) {
		return true
	}

	return false
}

// SetDisallowedLeadingCharacters gets a reference to the given string and assigns it to the DisallowedLeadingCharacters field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetDisallowedLeadingCharacters(v string) {
	o.DisallowedLeadingCharacters = &v
}

// GetDisallowedTrailingCharacters returns the DisallowedTrailingCharacters field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedTrailingCharacters() string {
	if o == nil || IsNil(o.DisallowedTrailingCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedTrailingCharacters
}

// GetDisallowedTrailingCharactersOk returns a tuple with the DisallowedTrailingCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDisallowedTrailingCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedTrailingCharacters) {
		return nil, false
	}
	return o.DisallowedTrailingCharacters, true
}

// HasDisallowedTrailingCharacters returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasDisallowedTrailingCharacters() bool {
	if o != nil && !IsNil(o.DisallowedTrailingCharacters) {
		return true
	}

	return false
}

// SetDisallowedTrailingCharacters gets a reference to the given string and assigns it to the DisallowedTrailingCharacters field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetDisallowedTrailingCharacters(v string) {
	o.DisallowedTrailingCharacters = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *DisallowedCharactersPasswordValidatorResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *DisallowedCharactersPasswordValidatorResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetValidatorRequirementDescription returns the ValidatorRequirementDescription field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetValidatorRequirementDescription() string {
	if o == nil || IsNil(o.ValidatorRequirementDescription) {
		var ret string
		return ret
	}
	return *o.ValidatorRequirementDescription
}

// GetValidatorRequirementDescriptionOk returns a tuple with the ValidatorRequirementDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetValidatorRequirementDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ValidatorRequirementDescription) {
		return nil, false
	}
	return o.ValidatorRequirementDescription, true
}

// HasValidatorRequirementDescription returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasValidatorRequirementDescription() bool {
	if o != nil && !IsNil(o.ValidatorRequirementDescription) {
		return true
	}

	return false
}

// SetValidatorRequirementDescription gets a reference to the given string and assigns it to the ValidatorRequirementDescription field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetValidatorRequirementDescription(v string) {
	o.ValidatorRequirementDescription = &v
}

// GetValidatorFailureMessage returns the ValidatorFailureMessage field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetValidatorFailureMessage() string {
	if o == nil || IsNil(o.ValidatorFailureMessage) {
		var ret string
		return ret
	}
	return *o.ValidatorFailureMessage
}

// GetValidatorFailureMessageOk returns a tuple with the ValidatorFailureMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetValidatorFailureMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ValidatorFailureMessage) {
		return nil, false
	}
	return o.ValidatorFailureMessage, true
}

// HasValidatorFailureMessage returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasValidatorFailureMessage() bool {
	if o != nil && !IsNil(o.ValidatorFailureMessage) {
		return true
	}

	return false
}

// SetValidatorFailureMessage gets a reference to the given string and assigns it to the ValidatorFailureMessage field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetValidatorFailureMessage(v string) {
	o.ValidatorFailureMessage = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *DisallowedCharactersPasswordValidatorResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *DisallowedCharactersPasswordValidatorResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *DisallowedCharactersPasswordValidatorResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o DisallowedCharactersPasswordValidatorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DisallowedCharactersPasswordValidatorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.DisallowedCharacters) {
		toSerialize["disallowedCharacters"] = o.DisallowedCharacters
	}
	if !IsNil(o.DisallowedLeadingCharacters) {
		toSerialize["disallowedLeadingCharacters"] = o.DisallowedLeadingCharacters
	}
	if !IsNil(o.DisallowedTrailingCharacters) {
		toSerialize["disallowedTrailingCharacters"] = o.DisallowedTrailingCharacters
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.ValidatorRequirementDescription) {
		toSerialize["validatorRequirementDescription"] = o.ValidatorRequirementDescription
	}
	if !IsNil(o.ValidatorFailureMessage) {
		toSerialize["validatorFailureMessage"] = o.ValidatorFailureMessage
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableDisallowedCharactersPasswordValidatorResponse struct {
	value *DisallowedCharactersPasswordValidatorResponse
	isSet bool
}

func (v NullableDisallowedCharactersPasswordValidatorResponse) Get() *DisallowedCharactersPasswordValidatorResponse {
	return v.value
}

func (v *NullableDisallowedCharactersPasswordValidatorResponse) Set(val *DisallowedCharactersPasswordValidatorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableDisallowedCharactersPasswordValidatorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableDisallowedCharactersPasswordValidatorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDisallowedCharactersPasswordValidatorResponse(val *DisallowedCharactersPasswordValidatorResponse) *NullableDisallowedCharactersPasswordValidatorResponse {
	return &NullableDisallowedCharactersPasswordValidatorResponse{value: val, isSet: true}
}

func (v NullableDisallowedCharactersPasswordValidatorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDisallowedCharactersPasswordValidatorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
