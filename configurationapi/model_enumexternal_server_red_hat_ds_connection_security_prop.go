/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerRedHatDsConnectionSecurityProp The mechanism to use to secure communication with the directory server.
type EnumexternalServerRedHatDsConnectionSecurityProp string

// List of Enumexternal-server-red-hat-ds-connectionSecurityProp
const (
	ENUMEXTERNALSERVERREDHATDSCONNECTIONSECURITYPROP_NONE     EnumexternalServerRedHatDsConnectionSecurityProp = "none"
	ENUMEXTERNALSERVERREDHATDSCONNECTIONSECURITYPROP_SSL      EnumexternalServerRedHatDsConnectionSecurityProp = "ssl"
	ENUMEXTERNALSERVERREDHATDSCONNECTIONSECURITYPROP_STARTTLS EnumexternalServerRedHatDsConnectionSecurityProp = "starttls"
)

// All allowed values of EnumexternalServerRedHatDsConnectionSecurityProp enum
var AllowedEnumexternalServerRedHatDsConnectionSecurityPropEnumValues = []EnumexternalServerRedHatDsConnectionSecurityProp{
	"none",
	"ssl",
	"starttls",
}

func (v *EnumexternalServerRedHatDsConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerRedHatDsConnectionSecurityProp(value)
	for _, existing := range AllowedEnumexternalServerRedHatDsConnectionSecurityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerRedHatDsConnectionSecurityProp", value)
}

// NewEnumexternalServerRedHatDsConnectionSecurityPropFromValue returns a pointer to a valid EnumexternalServerRedHatDsConnectionSecurityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerRedHatDsConnectionSecurityPropFromValue(v string) (*EnumexternalServerRedHatDsConnectionSecurityProp, error) {
	ev := EnumexternalServerRedHatDsConnectionSecurityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerRedHatDsConnectionSecurityProp: valid values are %v", v, AllowedEnumexternalServerRedHatDsConnectionSecurityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerRedHatDsConnectionSecurityProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerRedHatDsConnectionSecurityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-red-hat-ds-connectionSecurityProp value
func (v EnumexternalServerRedHatDsConnectionSecurityProp) Ptr() *EnumexternalServerRedHatDsConnectionSecurityProp {
	return &v
}

type NullableEnumexternalServerRedHatDsConnectionSecurityProp struct {
	value *EnumexternalServerRedHatDsConnectionSecurityProp
	isSet bool
}

func (v NullableEnumexternalServerRedHatDsConnectionSecurityProp) Get() *EnumexternalServerRedHatDsConnectionSecurityProp {
	return v.value
}

func (v *NullableEnumexternalServerRedHatDsConnectionSecurityProp) Set(val *EnumexternalServerRedHatDsConnectionSecurityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerRedHatDsConnectionSecurityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerRedHatDsConnectionSecurityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerRedHatDsConnectionSecurityProp(val *EnumexternalServerRedHatDsConnectionSecurityProp) *NullableEnumexternalServerRedHatDsConnectionSecurityProp {
	return &NullableEnumexternalServerRedHatDsConnectionSecurityProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerRedHatDsConnectionSecurityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerRedHatDsConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
