/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AuditDataSecurityRecurringTaskResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuditDataSecurityRecurringTaskResponse{}

// AuditDataSecurityRecurringTaskResponse struct for AuditDataSecurityRecurringTaskResponse
type AuditDataSecurityRecurringTaskResponse struct {
	Schemas []EnumauditDataSecurityRecurringTaskSchemaUrn `json:"schemas"`
	// The base directory below which generated reports will be written. Each invocation of the audit-data-security task will create a new subdirectory below this base directory whose name is a timestamp indicating when the report was generated.
	BaseOutputDirectory string `json:"baseOutputDirectory"`
	// The set of data security auditors that should be invoked. If no auditors are specified, then all auditors defined in the configuration will be used.
	DataSecurityAuditor []string `json:"dataSecurityAuditor,omitempty"`
	// The set of backends that should be examined. If no backends are specified, then all backends that support this functionality will be included.
	Backend []string `json:"backend,omitempty"`
	// A filter that will be used to identify entries that may be included in the generated report. If multiple filters are specified, then any entry that matches at least one of the filters will be included. If no filters are specified, then all entries will be included.
	IncludeFilter []string `json:"includeFilter,omitempty"`
	// The minimum number of previous reports that should be preserved after a new report is generated.
	RetainPreviousReportCount *int64 `json:"retainPreviousReportCount,omitempty"`
	// The minimum age of previous reports that should be preserved after a new report completes successfully.
	RetainPreviousReportAge *string `json:"retainPreviousReportAge,omitempty"`
	// A description for this Recurring Task
	Description *string `json:"description,omitempty"`
	// Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
	CancelOnTaskDependencyFailure *bool `json:"cancelOnTaskDependencyFailure,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnStart []string `json:"emailOnStart,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnSuccess []string `json:"emailOnSuccess,omitempty"`
	// The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnFailure []string `json:"emailOnFailure,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
	AlertOnStart *bool `json:"alertOnStart,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
	AlertOnSuccess *bool `json:"alertOnSuccess,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
	AlertOnFailure                                *bool                                              `json:"alertOnFailure,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Recurring Task
	Id string `json:"id"`
}

// NewAuditDataSecurityRecurringTaskResponse instantiates a new AuditDataSecurityRecurringTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuditDataSecurityRecurringTaskResponse(schemas []EnumauditDataSecurityRecurringTaskSchemaUrn, baseOutputDirectory string, id string) *AuditDataSecurityRecurringTaskResponse {
	this := AuditDataSecurityRecurringTaskResponse{}
	this.Schemas = schemas
	this.BaseOutputDirectory = baseOutputDirectory
	this.Id = id
	return &this
}

// NewAuditDataSecurityRecurringTaskResponseWithDefaults instantiates a new AuditDataSecurityRecurringTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuditDataSecurityRecurringTaskResponseWithDefaults() *AuditDataSecurityRecurringTaskResponse {
	this := AuditDataSecurityRecurringTaskResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AuditDataSecurityRecurringTaskResponse) GetSchemas() []EnumauditDataSecurityRecurringTaskSchemaUrn {
	if o == nil {
		var ret []EnumauditDataSecurityRecurringTaskSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetSchemasOk() ([]EnumauditDataSecurityRecurringTaskSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AuditDataSecurityRecurringTaskResponse) SetSchemas(v []EnumauditDataSecurityRecurringTaskSchemaUrn) {
	o.Schemas = v
}

// GetBaseOutputDirectory returns the BaseOutputDirectory field value
func (o *AuditDataSecurityRecurringTaskResponse) GetBaseOutputDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseOutputDirectory
}

// GetBaseOutputDirectoryOk returns a tuple with the BaseOutputDirectory field value
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetBaseOutputDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseOutputDirectory, true
}

// SetBaseOutputDirectory sets field value
func (o *AuditDataSecurityRecurringTaskResponse) SetBaseOutputDirectory(v string) {
	o.BaseOutputDirectory = v
}

// GetDataSecurityAuditor returns the DataSecurityAuditor field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetDataSecurityAuditor() []string {
	if o == nil || IsNil(o.DataSecurityAuditor) {
		var ret []string
		return ret
	}
	return o.DataSecurityAuditor
}

// GetDataSecurityAuditorOk returns a tuple with the DataSecurityAuditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetDataSecurityAuditorOk() ([]string, bool) {
	if o == nil || IsNil(o.DataSecurityAuditor) {
		return nil, false
	}
	return o.DataSecurityAuditor, true
}

// HasDataSecurityAuditor returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasDataSecurityAuditor() bool {
	if o != nil && !IsNil(o.DataSecurityAuditor) {
		return true
	}

	return false
}

// SetDataSecurityAuditor gets a reference to the given []string and assigns it to the DataSecurityAuditor field.
func (o *AuditDataSecurityRecurringTaskResponse) SetDataSecurityAuditor(v []string) {
	o.DataSecurityAuditor = v
}

// GetBackend returns the Backend field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetBackend() []string {
	if o == nil || IsNil(o.Backend) {
		var ret []string
		return ret
	}
	return o.Backend
}

// GetBackendOk returns a tuple with the Backend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetBackendOk() ([]string, bool) {
	if o == nil || IsNil(o.Backend) {
		return nil, false
	}
	return o.Backend, true
}

// HasBackend returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasBackend() bool {
	if o != nil && !IsNil(o.Backend) {
		return true
	}

	return false
}

// SetBackend gets a reference to the given []string and assigns it to the Backend field.
func (o *AuditDataSecurityRecurringTaskResponse) SetBackend(v []string) {
	o.Backend = v
}

// GetIncludeFilter returns the IncludeFilter field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetIncludeFilter() []string {
	if o == nil || IsNil(o.IncludeFilter) {
		var ret []string
		return ret
	}
	return o.IncludeFilter
}

// GetIncludeFilterOk returns a tuple with the IncludeFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetIncludeFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeFilter) {
		return nil, false
	}
	return o.IncludeFilter, true
}

// HasIncludeFilter returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasIncludeFilter() bool {
	if o != nil && !IsNil(o.IncludeFilter) {
		return true
	}

	return false
}

// SetIncludeFilter gets a reference to the given []string and assigns it to the IncludeFilter field.
func (o *AuditDataSecurityRecurringTaskResponse) SetIncludeFilter(v []string) {
	o.IncludeFilter = v
}

// GetRetainPreviousReportCount returns the RetainPreviousReportCount field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetRetainPreviousReportCount() int64 {
	if o == nil || IsNil(o.RetainPreviousReportCount) {
		var ret int64
		return ret
	}
	return *o.RetainPreviousReportCount
}

// GetRetainPreviousReportCountOk returns a tuple with the RetainPreviousReportCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetRetainPreviousReportCountOk() (*int64, bool) {
	if o == nil || IsNil(o.RetainPreviousReportCount) {
		return nil, false
	}
	return o.RetainPreviousReportCount, true
}

// HasRetainPreviousReportCount returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasRetainPreviousReportCount() bool {
	if o != nil && !IsNil(o.RetainPreviousReportCount) {
		return true
	}

	return false
}

// SetRetainPreviousReportCount gets a reference to the given int64 and assigns it to the RetainPreviousReportCount field.
func (o *AuditDataSecurityRecurringTaskResponse) SetRetainPreviousReportCount(v int64) {
	o.RetainPreviousReportCount = &v
}

// GetRetainPreviousReportAge returns the RetainPreviousReportAge field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetRetainPreviousReportAge() string {
	if o == nil || IsNil(o.RetainPreviousReportAge) {
		var ret string
		return ret
	}
	return *o.RetainPreviousReportAge
}

// GetRetainPreviousReportAgeOk returns a tuple with the RetainPreviousReportAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetRetainPreviousReportAgeOk() (*string, bool) {
	if o == nil || IsNil(o.RetainPreviousReportAge) {
		return nil, false
	}
	return o.RetainPreviousReportAge, true
}

// HasRetainPreviousReportAge returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasRetainPreviousReportAge() bool {
	if o != nil && !IsNil(o.RetainPreviousReportAge) {
		return true
	}

	return false
}

// SetRetainPreviousReportAge gets a reference to the given string and assigns it to the RetainPreviousReportAge field.
func (o *AuditDataSecurityRecurringTaskResponse) SetRetainPreviousReportAge(v string) {
	o.RetainPreviousReportAge = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AuditDataSecurityRecurringTaskResponse) SetDescription(v string) {
	o.Description = &v
}

// GetCancelOnTaskDependencyFailure returns the CancelOnTaskDependencyFailure field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetCancelOnTaskDependencyFailure() bool {
	if o == nil || IsNil(o.CancelOnTaskDependencyFailure) {
		var ret bool
		return ret
	}
	return *o.CancelOnTaskDependencyFailure
}

// GetCancelOnTaskDependencyFailureOk returns a tuple with the CancelOnTaskDependencyFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetCancelOnTaskDependencyFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelOnTaskDependencyFailure) {
		return nil, false
	}
	return o.CancelOnTaskDependencyFailure, true
}

// HasCancelOnTaskDependencyFailure returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasCancelOnTaskDependencyFailure() bool {
	if o != nil && !IsNil(o.CancelOnTaskDependencyFailure) {
		return true
	}

	return false
}

// SetCancelOnTaskDependencyFailure gets a reference to the given bool and assigns it to the CancelOnTaskDependencyFailure field.
func (o *AuditDataSecurityRecurringTaskResponse) SetCancelOnTaskDependencyFailure(v bool) {
	o.CancelOnTaskDependencyFailure = &v
}

// GetEmailOnStart returns the EmailOnStart field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnStart() []string {
	if o == nil || IsNil(o.EmailOnStart) {
		var ret []string
		return ret
	}
	return o.EmailOnStart
}

// GetEmailOnStartOk returns a tuple with the EmailOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnStartOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnStart) {
		return nil, false
	}
	return o.EmailOnStart, true
}

// HasEmailOnStart returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasEmailOnStart() bool {
	if o != nil && !IsNil(o.EmailOnStart) {
		return true
	}

	return false
}

// SetEmailOnStart gets a reference to the given []string and assigns it to the EmailOnStart field.
func (o *AuditDataSecurityRecurringTaskResponse) SetEmailOnStart(v []string) {
	o.EmailOnStart = v
}

// GetEmailOnSuccess returns the EmailOnSuccess field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnSuccess() []string {
	if o == nil || IsNil(o.EmailOnSuccess) {
		var ret []string
		return ret
	}
	return o.EmailOnSuccess
}

// GetEmailOnSuccessOk returns a tuple with the EmailOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnSuccessOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnSuccess) {
		return nil, false
	}
	return o.EmailOnSuccess, true
}

// HasEmailOnSuccess returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasEmailOnSuccess() bool {
	if o != nil && !IsNil(o.EmailOnSuccess) {
		return true
	}

	return false
}

// SetEmailOnSuccess gets a reference to the given []string and assigns it to the EmailOnSuccess field.
func (o *AuditDataSecurityRecurringTaskResponse) SetEmailOnSuccess(v []string) {
	o.EmailOnSuccess = v
}

// GetEmailOnFailure returns the EmailOnFailure field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnFailure() []string {
	if o == nil || IsNil(o.EmailOnFailure) {
		var ret []string
		return ret
	}
	return o.EmailOnFailure
}

// GetEmailOnFailureOk returns a tuple with the EmailOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetEmailOnFailureOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnFailure) {
		return nil, false
	}
	return o.EmailOnFailure, true
}

// HasEmailOnFailure returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasEmailOnFailure() bool {
	if o != nil && !IsNil(o.EmailOnFailure) {
		return true
	}

	return false
}

// SetEmailOnFailure gets a reference to the given []string and assigns it to the EmailOnFailure field.
func (o *AuditDataSecurityRecurringTaskResponse) SetEmailOnFailure(v []string) {
	o.EmailOnFailure = v
}

// GetAlertOnStart returns the AlertOnStart field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnStart() bool {
	if o == nil || IsNil(o.AlertOnStart) {
		var ret bool
		return ret
	}
	return *o.AlertOnStart
}

// GetAlertOnStartOk returns a tuple with the AlertOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnStartOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnStart) {
		return nil, false
	}
	return o.AlertOnStart, true
}

// HasAlertOnStart returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasAlertOnStart() bool {
	if o != nil && !IsNil(o.AlertOnStart) {
		return true
	}

	return false
}

// SetAlertOnStart gets a reference to the given bool and assigns it to the AlertOnStart field.
func (o *AuditDataSecurityRecurringTaskResponse) SetAlertOnStart(v bool) {
	o.AlertOnStart = &v
}

// GetAlertOnSuccess returns the AlertOnSuccess field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnSuccess() bool {
	if o == nil || IsNil(o.AlertOnSuccess) {
		var ret bool
		return ret
	}
	return *o.AlertOnSuccess
}

// GetAlertOnSuccessOk returns a tuple with the AlertOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnSuccess) {
		return nil, false
	}
	return o.AlertOnSuccess, true
}

// HasAlertOnSuccess returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasAlertOnSuccess() bool {
	if o != nil && !IsNil(o.AlertOnSuccess) {
		return true
	}

	return false
}

// SetAlertOnSuccess gets a reference to the given bool and assigns it to the AlertOnSuccess field.
func (o *AuditDataSecurityRecurringTaskResponse) SetAlertOnSuccess(v bool) {
	o.AlertOnSuccess = &v
}

// GetAlertOnFailure returns the AlertOnFailure field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnFailure() bool {
	if o == nil || IsNil(o.AlertOnFailure) {
		var ret bool
		return ret
	}
	return *o.AlertOnFailure
}

// GetAlertOnFailureOk returns a tuple with the AlertOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetAlertOnFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnFailure) {
		return nil, false
	}
	return o.AlertOnFailure, true
}

// HasAlertOnFailure returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasAlertOnFailure() bool {
	if o != nil && !IsNil(o.AlertOnFailure) {
		return true
	}

	return false
}

// SetAlertOnFailure gets a reference to the given bool and assigns it to the AlertOnFailure field.
func (o *AuditDataSecurityRecurringTaskResponse) SetAlertOnFailure(v bool) {
	o.AlertOnFailure = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *AuditDataSecurityRecurringTaskResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *AuditDataSecurityRecurringTaskResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *AuditDataSecurityRecurringTaskResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *AuditDataSecurityRecurringTaskResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *AuditDataSecurityRecurringTaskResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *AuditDataSecurityRecurringTaskResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *AuditDataSecurityRecurringTaskResponse) SetId(v string) {
	o.Id = v
}

func (o AuditDataSecurityRecurringTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuditDataSecurityRecurringTaskResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["baseOutputDirectory"] = o.BaseOutputDirectory
	if !IsNil(o.DataSecurityAuditor) {
		toSerialize["dataSecurityAuditor"] = o.DataSecurityAuditor
	}
	if !IsNil(o.Backend) {
		toSerialize["backend"] = o.Backend
	}
	if !IsNil(o.IncludeFilter) {
		toSerialize["includeFilter"] = o.IncludeFilter
	}
	if !IsNil(o.RetainPreviousReportCount) {
		toSerialize["retainPreviousReportCount"] = o.RetainPreviousReportCount
	}
	if !IsNil(o.RetainPreviousReportAge) {
		toSerialize["retainPreviousReportAge"] = o.RetainPreviousReportAge
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CancelOnTaskDependencyFailure) {
		toSerialize["cancelOnTaskDependencyFailure"] = o.CancelOnTaskDependencyFailure
	}
	if !IsNil(o.EmailOnStart) {
		toSerialize["emailOnStart"] = o.EmailOnStart
	}
	if !IsNil(o.EmailOnSuccess) {
		toSerialize["emailOnSuccess"] = o.EmailOnSuccess
	}
	if !IsNil(o.EmailOnFailure) {
		toSerialize["emailOnFailure"] = o.EmailOnFailure
	}
	if !IsNil(o.AlertOnStart) {
		toSerialize["alertOnStart"] = o.AlertOnStart
	}
	if !IsNil(o.AlertOnSuccess) {
		toSerialize["alertOnSuccess"] = o.AlertOnSuccess
	}
	if !IsNil(o.AlertOnFailure) {
		toSerialize["alertOnFailure"] = o.AlertOnFailure
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableAuditDataSecurityRecurringTaskResponse struct {
	value *AuditDataSecurityRecurringTaskResponse
	isSet bool
}

func (v NullableAuditDataSecurityRecurringTaskResponse) Get() *AuditDataSecurityRecurringTaskResponse {
	return v.value
}

func (v *NullableAuditDataSecurityRecurringTaskResponse) Set(val *AuditDataSecurityRecurringTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAuditDataSecurityRecurringTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAuditDataSecurityRecurringTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuditDataSecurityRecurringTaskResponse(val *AuditDataSecurityRecurringTaskResponse) *NullableAuditDataSecurityRecurringTaskResponse {
	return &NullableAuditDataSecurityRecurringTaskResponse{value: val, isSet: true}
}

func (v NullableAuditDataSecurityRecurringTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuditDataSecurityRecurringTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
