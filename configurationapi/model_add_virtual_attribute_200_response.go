/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddVirtualAttribute200Response - struct for AddVirtualAttribute200Response
type AddVirtualAttribute200Response struct {
	ConstructedVirtualAttributeResponse             *ConstructedVirtualAttributeResponse
	DnJoinVirtualAttributeResponse                  *DnJoinVirtualAttributeResponse
	EntryDnVirtualAttributeResponse                 *EntryDnVirtualAttributeResponse
	EqualityJoinVirtualAttributeResponse            *EqualityJoinVirtualAttributeResponse
	GroovyScriptedVirtualAttributeResponse          *GroovyScriptedVirtualAttributeResponse
	IdentifyReferencesVirtualAttributeResponse      *IdentifyReferencesVirtualAttributeResponse
	IsMemberOfVirtualAttributeResponse              *IsMemberOfVirtualAttributeResponse
	MemberVirtualAttributeResponse                  *MemberVirtualAttributeResponse
	MirrorVirtualAttributeResponse                  *MirrorVirtualAttributeResponse
	PasswordPolicyStateJsonVirtualAttributeResponse *PasswordPolicyStateJsonVirtualAttributeResponse
	ReverseDnJoinVirtualAttributeResponse           *ReverseDnJoinVirtualAttributeResponse
	ThirdPartyVirtualAttributeResponse              *ThirdPartyVirtualAttributeResponse
	UserDefinedVirtualAttributeResponse             *UserDefinedVirtualAttributeResponse
}

// ConstructedVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns ConstructedVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func ConstructedVirtualAttributeResponseAsAddVirtualAttribute200Response(v *ConstructedVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		ConstructedVirtualAttributeResponse: v,
	}
}

// DnJoinVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns DnJoinVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func DnJoinVirtualAttributeResponseAsAddVirtualAttribute200Response(v *DnJoinVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		DnJoinVirtualAttributeResponse: v,
	}
}

// EntryDnVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns EntryDnVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func EntryDnVirtualAttributeResponseAsAddVirtualAttribute200Response(v *EntryDnVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		EntryDnVirtualAttributeResponse: v,
	}
}

// EqualityJoinVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns EqualityJoinVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func EqualityJoinVirtualAttributeResponseAsAddVirtualAttribute200Response(v *EqualityJoinVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		EqualityJoinVirtualAttributeResponse: v,
	}
}

// GroovyScriptedVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns GroovyScriptedVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func GroovyScriptedVirtualAttributeResponseAsAddVirtualAttribute200Response(v *GroovyScriptedVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		GroovyScriptedVirtualAttributeResponse: v,
	}
}

// IdentifyReferencesVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns IdentifyReferencesVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func IdentifyReferencesVirtualAttributeResponseAsAddVirtualAttribute200Response(v *IdentifyReferencesVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		IdentifyReferencesVirtualAttributeResponse: v,
	}
}

// IsMemberOfVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns IsMemberOfVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func IsMemberOfVirtualAttributeResponseAsAddVirtualAttribute200Response(v *IsMemberOfVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		IsMemberOfVirtualAttributeResponse: v,
	}
}

// MemberVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns MemberVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func MemberVirtualAttributeResponseAsAddVirtualAttribute200Response(v *MemberVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		MemberVirtualAttributeResponse: v,
	}
}

// MirrorVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns MirrorVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func MirrorVirtualAttributeResponseAsAddVirtualAttribute200Response(v *MirrorVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		MirrorVirtualAttributeResponse: v,
	}
}

// PasswordPolicyStateJsonVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns PasswordPolicyStateJsonVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func PasswordPolicyStateJsonVirtualAttributeResponseAsAddVirtualAttribute200Response(v *PasswordPolicyStateJsonVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		PasswordPolicyStateJsonVirtualAttributeResponse: v,
	}
}

// ReverseDnJoinVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns ReverseDnJoinVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func ReverseDnJoinVirtualAttributeResponseAsAddVirtualAttribute200Response(v *ReverseDnJoinVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		ReverseDnJoinVirtualAttributeResponse: v,
	}
}

// ThirdPartyVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns ThirdPartyVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func ThirdPartyVirtualAttributeResponseAsAddVirtualAttribute200Response(v *ThirdPartyVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		ThirdPartyVirtualAttributeResponse: v,
	}
}

// UserDefinedVirtualAttributeResponseAsAddVirtualAttribute200Response is a convenience function that returns UserDefinedVirtualAttributeResponse wrapped in AddVirtualAttribute200Response
func UserDefinedVirtualAttributeResponseAsAddVirtualAttribute200Response(v *UserDefinedVirtualAttributeResponse) AddVirtualAttribute200Response {
	return AddVirtualAttribute200Response{
		UserDefinedVirtualAttributeResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddVirtualAttribute200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ConstructedVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.ConstructedVirtualAttributeResponse)
	if err == nil {
		jsonConstructedVirtualAttributeResponse, _ := json.Marshal(dst.ConstructedVirtualAttributeResponse)
		if string(jsonConstructedVirtualAttributeResponse) == "{}" { // empty struct
			dst.ConstructedVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.ConstructedVirtualAttributeResponse = nil
	}

	// try to unmarshal data into DnJoinVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.DnJoinVirtualAttributeResponse)
	if err == nil {
		jsonDnJoinVirtualAttributeResponse, _ := json.Marshal(dst.DnJoinVirtualAttributeResponse)
		if string(jsonDnJoinVirtualAttributeResponse) == "{}" { // empty struct
			dst.DnJoinVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.DnJoinVirtualAttributeResponse = nil
	}

	// try to unmarshal data into EntryDnVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.EntryDnVirtualAttributeResponse)
	if err == nil {
		jsonEntryDnVirtualAttributeResponse, _ := json.Marshal(dst.EntryDnVirtualAttributeResponse)
		if string(jsonEntryDnVirtualAttributeResponse) == "{}" { // empty struct
			dst.EntryDnVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.EntryDnVirtualAttributeResponse = nil
	}

	// try to unmarshal data into EqualityJoinVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.EqualityJoinVirtualAttributeResponse)
	if err == nil {
		jsonEqualityJoinVirtualAttributeResponse, _ := json.Marshal(dst.EqualityJoinVirtualAttributeResponse)
		if string(jsonEqualityJoinVirtualAttributeResponse) == "{}" { // empty struct
			dst.EqualityJoinVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.EqualityJoinVirtualAttributeResponse = nil
	}

	// try to unmarshal data into GroovyScriptedVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedVirtualAttributeResponse)
	if err == nil {
		jsonGroovyScriptedVirtualAttributeResponse, _ := json.Marshal(dst.GroovyScriptedVirtualAttributeResponse)
		if string(jsonGroovyScriptedVirtualAttributeResponse) == "{}" { // empty struct
			dst.GroovyScriptedVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedVirtualAttributeResponse = nil
	}

	// try to unmarshal data into IdentifyReferencesVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.IdentifyReferencesVirtualAttributeResponse)
	if err == nil {
		jsonIdentifyReferencesVirtualAttributeResponse, _ := json.Marshal(dst.IdentifyReferencesVirtualAttributeResponse)
		if string(jsonIdentifyReferencesVirtualAttributeResponse) == "{}" { // empty struct
			dst.IdentifyReferencesVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.IdentifyReferencesVirtualAttributeResponse = nil
	}

	// try to unmarshal data into IsMemberOfVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.IsMemberOfVirtualAttributeResponse)
	if err == nil {
		jsonIsMemberOfVirtualAttributeResponse, _ := json.Marshal(dst.IsMemberOfVirtualAttributeResponse)
		if string(jsonIsMemberOfVirtualAttributeResponse) == "{}" { // empty struct
			dst.IsMemberOfVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.IsMemberOfVirtualAttributeResponse = nil
	}

	// try to unmarshal data into MemberVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.MemberVirtualAttributeResponse)
	if err == nil {
		jsonMemberVirtualAttributeResponse, _ := json.Marshal(dst.MemberVirtualAttributeResponse)
		if string(jsonMemberVirtualAttributeResponse) == "{}" { // empty struct
			dst.MemberVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.MemberVirtualAttributeResponse = nil
	}

	// try to unmarshal data into MirrorVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.MirrorVirtualAttributeResponse)
	if err == nil {
		jsonMirrorVirtualAttributeResponse, _ := json.Marshal(dst.MirrorVirtualAttributeResponse)
		if string(jsonMirrorVirtualAttributeResponse) == "{}" { // empty struct
			dst.MirrorVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.MirrorVirtualAttributeResponse = nil
	}

	// try to unmarshal data into PasswordPolicyStateJsonVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.PasswordPolicyStateJsonVirtualAttributeResponse)
	if err == nil {
		jsonPasswordPolicyStateJsonVirtualAttributeResponse, _ := json.Marshal(dst.PasswordPolicyStateJsonVirtualAttributeResponse)
		if string(jsonPasswordPolicyStateJsonVirtualAttributeResponse) == "{}" { // empty struct
			dst.PasswordPolicyStateJsonVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.PasswordPolicyStateJsonVirtualAttributeResponse = nil
	}

	// try to unmarshal data into ReverseDnJoinVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.ReverseDnJoinVirtualAttributeResponse)
	if err == nil {
		jsonReverseDnJoinVirtualAttributeResponse, _ := json.Marshal(dst.ReverseDnJoinVirtualAttributeResponse)
		if string(jsonReverseDnJoinVirtualAttributeResponse) == "{}" { // empty struct
			dst.ReverseDnJoinVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.ReverseDnJoinVirtualAttributeResponse = nil
	}

	// try to unmarshal data into ThirdPartyVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyVirtualAttributeResponse)
	if err == nil {
		jsonThirdPartyVirtualAttributeResponse, _ := json.Marshal(dst.ThirdPartyVirtualAttributeResponse)
		if string(jsonThirdPartyVirtualAttributeResponse) == "{}" { // empty struct
			dst.ThirdPartyVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyVirtualAttributeResponse = nil
	}

	// try to unmarshal data into UserDefinedVirtualAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.UserDefinedVirtualAttributeResponse)
	if err == nil {
		jsonUserDefinedVirtualAttributeResponse, _ := json.Marshal(dst.UserDefinedVirtualAttributeResponse)
		if string(jsonUserDefinedVirtualAttributeResponse) == "{}" { // empty struct
			dst.UserDefinedVirtualAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.UserDefinedVirtualAttributeResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ConstructedVirtualAttributeResponse = nil
		dst.DnJoinVirtualAttributeResponse = nil
		dst.EntryDnVirtualAttributeResponse = nil
		dst.EqualityJoinVirtualAttributeResponse = nil
		dst.GroovyScriptedVirtualAttributeResponse = nil
		dst.IdentifyReferencesVirtualAttributeResponse = nil
		dst.IsMemberOfVirtualAttributeResponse = nil
		dst.MemberVirtualAttributeResponse = nil
		dst.MirrorVirtualAttributeResponse = nil
		dst.PasswordPolicyStateJsonVirtualAttributeResponse = nil
		dst.ReverseDnJoinVirtualAttributeResponse = nil
		dst.ThirdPartyVirtualAttributeResponse = nil
		dst.UserDefinedVirtualAttributeResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddVirtualAttribute200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddVirtualAttribute200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddVirtualAttribute200Response) MarshalJSON() ([]byte, error) {
	if src.ConstructedVirtualAttributeResponse != nil {
		return json.Marshal(&src.ConstructedVirtualAttributeResponse)
	}

	if src.DnJoinVirtualAttributeResponse != nil {
		return json.Marshal(&src.DnJoinVirtualAttributeResponse)
	}

	if src.EntryDnVirtualAttributeResponse != nil {
		return json.Marshal(&src.EntryDnVirtualAttributeResponse)
	}

	if src.EqualityJoinVirtualAttributeResponse != nil {
		return json.Marshal(&src.EqualityJoinVirtualAttributeResponse)
	}

	if src.GroovyScriptedVirtualAttributeResponse != nil {
		return json.Marshal(&src.GroovyScriptedVirtualAttributeResponse)
	}

	if src.IdentifyReferencesVirtualAttributeResponse != nil {
		return json.Marshal(&src.IdentifyReferencesVirtualAttributeResponse)
	}

	if src.IsMemberOfVirtualAttributeResponse != nil {
		return json.Marshal(&src.IsMemberOfVirtualAttributeResponse)
	}

	if src.MemberVirtualAttributeResponse != nil {
		return json.Marshal(&src.MemberVirtualAttributeResponse)
	}

	if src.MirrorVirtualAttributeResponse != nil {
		return json.Marshal(&src.MirrorVirtualAttributeResponse)
	}

	if src.PasswordPolicyStateJsonVirtualAttributeResponse != nil {
		return json.Marshal(&src.PasswordPolicyStateJsonVirtualAttributeResponse)
	}

	if src.ReverseDnJoinVirtualAttributeResponse != nil {
		return json.Marshal(&src.ReverseDnJoinVirtualAttributeResponse)
	}

	if src.ThirdPartyVirtualAttributeResponse != nil {
		return json.Marshal(&src.ThirdPartyVirtualAttributeResponse)
	}

	if src.UserDefinedVirtualAttributeResponse != nil {
		return json.Marshal(&src.UserDefinedVirtualAttributeResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddVirtualAttribute200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ConstructedVirtualAttributeResponse != nil {
		return obj.ConstructedVirtualAttributeResponse
	}

	if obj.DnJoinVirtualAttributeResponse != nil {
		return obj.DnJoinVirtualAttributeResponse
	}

	if obj.EntryDnVirtualAttributeResponse != nil {
		return obj.EntryDnVirtualAttributeResponse
	}

	if obj.EqualityJoinVirtualAttributeResponse != nil {
		return obj.EqualityJoinVirtualAttributeResponse
	}

	if obj.GroovyScriptedVirtualAttributeResponse != nil {
		return obj.GroovyScriptedVirtualAttributeResponse
	}

	if obj.IdentifyReferencesVirtualAttributeResponse != nil {
		return obj.IdentifyReferencesVirtualAttributeResponse
	}

	if obj.IsMemberOfVirtualAttributeResponse != nil {
		return obj.IsMemberOfVirtualAttributeResponse
	}

	if obj.MemberVirtualAttributeResponse != nil {
		return obj.MemberVirtualAttributeResponse
	}

	if obj.MirrorVirtualAttributeResponse != nil {
		return obj.MirrorVirtualAttributeResponse
	}

	if obj.PasswordPolicyStateJsonVirtualAttributeResponse != nil {
		return obj.PasswordPolicyStateJsonVirtualAttributeResponse
	}

	if obj.ReverseDnJoinVirtualAttributeResponse != nil {
		return obj.ReverseDnJoinVirtualAttributeResponse
	}

	if obj.ThirdPartyVirtualAttributeResponse != nil {
		return obj.ThirdPartyVirtualAttributeResponse
	}

	if obj.UserDefinedVirtualAttributeResponse != nil {
		return obj.UserDefinedVirtualAttributeResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddVirtualAttribute200Response struct {
	value *AddVirtualAttribute200Response
	isSet bool
}

func (v NullableAddVirtualAttribute200Response) Get() *AddVirtualAttribute200Response {
	return v.value
}

func (v *NullableAddVirtualAttribute200Response) Set(val *AddVirtualAttribute200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVirtualAttribute200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVirtualAttribute200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVirtualAttribute200Response(val *AddVirtualAttribute200Response) *NullableAddVirtualAttribute200Response {
	return &NullableAddVirtualAttribute200Response{value: val, isSet: true}
}

func (v NullableAddVirtualAttribute200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVirtualAttribute200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
