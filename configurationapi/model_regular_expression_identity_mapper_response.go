/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the RegularExpressionIdentityMapperResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegularExpressionIdentityMapperResponse{}

// RegularExpressionIdentityMapperResponse struct for RegularExpressionIdentityMapperResponse
type RegularExpressionIdentityMapperResponse struct {
	// Name of the Identity Mapper
	Id      string                                         `json:"id"`
	Schemas []EnumregularExpressionIdentityMapperSchemaUrn `json:"schemas"`
	// Specifies the name or OID of the attribute whose value should match the provided identifier string after it has been processed by the associated regular expression.
	MatchAttribute []string `json:"matchAttribute"`
	// Specifies the base DN(s) that should be used when performing searches to map the provided ID string to a user entry. If multiple values are given, searches are performed below all the specified base DNs.
	MatchBaseDN []string `json:"matchBaseDN,omitempty"`
	// An optional filter that mapped users must match.
	MatchFilter *string `json:"matchFilter,omitempty"`
	// Specifies the regular expression pattern that is used to identify portions of the ID string that will be replaced.
	MatchPattern string `json:"matchPattern"`
	// Specifies the replacement pattern that should be used for substrings in the ID string that match the provided regular expression pattern.
	ReplacePattern *string `json:"replacePattern,omitempty"`
	// A description for this Identity Mapper
	Description *string `json:"description,omitempty"`
	// Indicates whether the Identity Mapper is enabled for use.
	Enabled                                       bool                                               `json:"enabled"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewRegularExpressionIdentityMapperResponse instantiates a new RegularExpressionIdentityMapperResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegularExpressionIdentityMapperResponse(id string, schemas []EnumregularExpressionIdentityMapperSchemaUrn, matchAttribute []string, matchPattern string, enabled bool) *RegularExpressionIdentityMapperResponse {
	this := RegularExpressionIdentityMapperResponse{}
	this.Id = id
	this.Schemas = schemas
	this.MatchAttribute = matchAttribute
	this.MatchPattern = matchPattern
	this.Enabled = enabled
	return &this
}

// NewRegularExpressionIdentityMapperResponseWithDefaults instantiates a new RegularExpressionIdentityMapperResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegularExpressionIdentityMapperResponseWithDefaults() *RegularExpressionIdentityMapperResponse {
	this := RegularExpressionIdentityMapperResponse{}
	return &this
}

// GetId returns the Id field value
func (o *RegularExpressionIdentityMapperResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *RegularExpressionIdentityMapperResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *RegularExpressionIdentityMapperResponse) GetSchemas() []EnumregularExpressionIdentityMapperSchemaUrn {
	if o == nil {
		var ret []EnumregularExpressionIdentityMapperSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetSchemasOk() ([]EnumregularExpressionIdentityMapperSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *RegularExpressionIdentityMapperResponse) SetSchemas(v []EnumregularExpressionIdentityMapperSchemaUrn) {
	o.Schemas = v
}

// GetMatchAttribute returns the MatchAttribute field value
func (o *RegularExpressionIdentityMapperResponse) GetMatchAttribute() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MatchAttribute
}

// GetMatchAttributeOk returns a tuple with the MatchAttribute field value
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetMatchAttributeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MatchAttribute, true
}

// SetMatchAttribute sets field value
func (o *RegularExpressionIdentityMapperResponse) SetMatchAttribute(v []string) {
	o.MatchAttribute = v
}

// GetMatchBaseDN returns the MatchBaseDN field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetMatchBaseDN() []string {
	if o == nil || IsNil(o.MatchBaseDN) {
		var ret []string
		return ret
	}
	return o.MatchBaseDN
}

// GetMatchBaseDNOk returns a tuple with the MatchBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetMatchBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.MatchBaseDN) {
		return nil, false
	}
	return o.MatchBaseDN, true
}

// HasMatchBaseDN returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasMatchBaseDN() bool {
	if o != nil && !IsNil(o.MatchBaseDN) {
		return true
	}

	return false
}

// SetMatchBaseDN gets a reference to the given []string and assigns it to the MatchBaseDN field.
func (o *RegularExpressionIdentityMapperResponse) SetMatchBaseDN(v []string) {
	o.MatchBaseDN = v
}

// GetMatchFilter returns the MatchFilter field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetMatchFilter() string {
	if o == nil || IsNil(o.MatchFilter) {
		var ret string
		return ret
	}
	return *o.MatchFilter
}

// GetMatchFilterOk returns a tuple with the MatchFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetMatchFilterOk() (*string, bool) {
	if o == nil || IsNil(o.MatchFilter) {
		return nil, false
	}
	return o.MatchFilter, true
}

// HasMatchFilter returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasMatchFilter() bool {
	if o != nil && !IsNil(o.MatchFilter) {
		return true
	}

	return false
}

// SetMatchFilter gets a reference to the given string and assigns it to the MatchFilter field.
func (o *RegularExpressionIdentityMapperResponse) SetMatchFilter(v string) {
	o.MatchFilter = &v
}

// GetMatchPattern returns the MatchPattern field value
func (o *RegularExpressionIdentityMapperResponse) GetMatchPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MatchPattern
}

// GetMatchPatternOk returns a tuple with the MatchPattern field value
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetMatchPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MatchPattern, true
}

// SetMatchPattern sets field value
func (o *RegularExpressionIdentityMapperResponse) SetMatchPattern(v string) {
	o.MatchPattern = v
}

// GetReplacePattern returns the ReplacePattern field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetReplacePattern() string {
	if o == nil || IsNil(o.ReplacePattern) {
		var ret string
		return ret
	}
	return *o.ReplacePattern
}

// GetReplacePatternOk returns a tuple with the ReplacePattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetReplacePatternOk() (*string, bool) {
	if o == nil || IsNil(o.ReplacePattern) {
		return nil, false
	}
	return o.ReplacePattern, true
}

// HasReplacePattern returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasReplacePattern() bool {
	if o != nil && !IsNil(o.ReplacePattern) {
		return true
	}

	return false
}

// SetReplacePattern gets a reference to the given string and assigns it to the ReplacePattern field.
func (o *RegularExpressionIdentityMapperResponse) SetReplacePattern(v string) {
	o.ReplacePattern = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *RegularExpressionIdentityMapperResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *RegularExpressionIdentityMapperResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *RegularExpressionIdentityMapperResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *RegularExpressionIdentityMapperResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *RegularExpressionIdentityMapperResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegularExpressionIdentityMapperResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *RegularExpressionIdentityMapperResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *RegularExpressionIdentityMapperResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o RegularExpressionIdentityMapperResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegularExpressionIdentityMapperResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	toSerialize["matchAttribute"] = o.MatchAttribute
	if !IsNil(o.MatchBaseDN) {
		toSerialize["matchBaseDN"] = o.MatchBaseDN
	}
	if !IsNil(o.MatchFilter) {
		toSerialize["matchFilter"] = o.MatchFilter
	}
	toSerialize["matchPattern"] = o.MatchPattern
	if !IsNil(o.ReplacePattern) {
		toSerialize["replacePattern"] = o.ReplacePattern
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableRegularExpressionIdentityMapperResponse struct {
	value *RegularExpressionIdentityMapperResponse
	isSet bool
}

func (v NullableRegularExpressionIdentityMapperResponse) Get() *RegularExpressionIdentityMapperResponse {
	return v.value
}

func (v *NullableRegularExpressionIdentityMapperResponse) Set(val *RegularExpressionIdentityMapperResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRegularExpressionIdentityMapperResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRegularExpressionIdentityMapperResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegularExpressionIdentityMapperResponse(val *RegularExpressionIdentityMapperResponse) *NullableRegularExpressionIdentityMapperResponse {
	return &NullableRegularExpressionIdentityMapperResponse{value: val, isSet: true}
}

func (v NullableRegularExpressionIdentityMapperResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegularExpressionIdentityMapperResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
