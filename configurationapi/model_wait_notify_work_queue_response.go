/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the WaitNotifyWorkQueueResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WaitNotifyWorkQueueResponse{}

// WaitNotifyWorkQueueResponse struct for WaitNotifyWorkQueueResponse
type WaitNotifyWorkQueueResponse struct {
	Schemas []EnumwaitNotifyWorkQueueSchemaUrn `json:"schemas"`
	// Specifies the number of worker threads that should be used within the server in order to process requested operations.
	NumWorkerThreads *int64 `json:"numWorkerThreads,omitempty"`
	// Specifies the maximum number of pending operations that may be held in the work queue at any given time.
	MaxWorkQueueCapacity                          *int64                                             `json:"maxWorkQueueCapacity,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewWaitNotifyWorkQueueResponse instantiates a new WaitNotifyWorkQueueResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWaitNotifyWorkQueueResponse(schemas []EnumwaitNotifyWorkQueueSchemaUrn) *WaitNotifyWorkQueueResponse {
	this := WaitNotifyWorkQueueResponse{}
	this.Schemas = schemas
	return &this
}

// NewWaitNotifyWorkQueueResponseWithDefaults instantiates a new WaitNotifyWorkQueueResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWaitNotifyWorkQueueResponseWithDefaults() *WaitNotifyWorkQueueResponse {
	this := WaitNotifyWorkQueueResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *WaitNotifyWorkQueueResponse) GetSchemas() []EnumwaitNotifyWorkQueueSchemaUrn {
	if o == nil {
		var ret []EnumwaitNotifyWorkQueueSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *WaitNotifyWorkQueueResponse) GetSchemasOk() ([]EnumwaitNotifyWorkQueueSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *WaitNotifyWorkQueueResponse) SetSchemas(v []EnumwaitNotifyWorkQueueSchemaUrn) {
	o.Schemas = v
}

// GetNumWorkerThreads returns the NumWorkerThreads field value if set, zero value otherwise.
func (o *WaitNotifyWorkQueueResponse) GetNumWorkerThreads() int64 {
	if o == nil || IsNil(o.NumWorkerThreads) {
		var ret int64
		return ret
	}
	return *o.NumWorkerThreads
}

// GetNumWorkerThreadsOk returns a tuple with the NumWorkerThreads field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitNotifyWorkQueueResponse) GetNumWorkerThreadsOk() (*int64, bool) {
	if o == nil || IsNil(o.NumWorkerThreads) {
		return nil, false
	}
	return o.NumWorkerThreads, true
}

// HasNumWorkerThreads returns a boolean if a field has been set.
func (o *WaitNotifyWorkQueueResponse) HasNumWorkerThreads() bool {
	if o != nil && !IsNil(o.NumWorkerThreads) {
		return true
	}

	return false
}

// SetNumWorkerThreads gets a reference to the given int64 and assigns it to the NumWorkerThreads field.
func (o *WaitNotifyWorkQueueResponse) SetNumWorkerThreads(v int64) {
	o.NumWorkerThreads = &v
}

// GetMaxWorkQueueCapacity returns the MaxWorkQueueCapacity field value if set, zero value otherwise.
func (o *WaitNotifyWorkQueueResponse) GetMaxWorkQueueCapacity() int64 {
	if o == nil || IsNil(o.MaxWorkQueueCapacity) {
		var ret int64
		return ret
	}
	return *o.MaxWorkQueueCapacity
}

// GetMaxWorkQueueCapacityOk returns a tuple with the MaxWorkQueueCapacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitNotifyWorkQueueResponse) GetMaxWorkQueueCapacityOk() (*int64, bool) {
	if o == nil || IsNil(o.MaxWorkQueueCapacity) {
		return nil, false
	}
	return o.MaxWorkQueueCapacity, true
}

// HasMaxWorkQueueCapacity returns a boolean if a field has been set.
func (o *WaitNotifyWorkQueueResponse) HasMaxWorkQueueCapacity() bool {
	if o != nil && !IsNil(o.MaxWorkQueueCapacity) {
		return true
	}

	return false
}

// SetMaxWorkQueueCapacity gets a reference to the given int64 and assigns it to the MaxWorkQueueCapacity field.
func (o *WaitNotifyWorkQueueResponse) SetMaxWorkQueueCapacity(v int64) {
	o.MaxWorkQueueCapacity = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *WaitNotifyWorkQueueResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitNotifyWorkQueueResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *WaitNotifyWorkQueueResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *WaitNotifyWorkQueueResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *WaitNotifyWorkQueueResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WaitNotifyWorkQueueResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *WaitNotifyWorkQueueResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *WaitNotifyWorkQueueResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o WaitNotifyWorkQueueResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WaitNotifyWorkQueueResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.NumWorkerThreads) {
		toSerialize["numWorkerThreads"] = o.NumWorkerThreads
	}
	if !IsNil(o.MaxWorkQueueCapacity) {
		toSerialize["maxWorkQueueCapacity"] = o.MaxWorkQueueCapacity
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableWaitNotifyWorkQueueResponse struct {
	value *WaitNotifyWorkQueueResponse
	isSet bool
}

func (v NullableWaitNotifyWorkQueueResponse) Get() *WaitNotifyWorkQueueResponse {
	return v.value
}

func (v *NullableWaitNotifyWorkQueueResponse) Set(val *WaitNotifyWorkQueueResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWaitNotifyWorkQueueResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWaitNotifyWorkQueueResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWaitNotifyWorkQueueResponse(val *WaitNotifyWorkQueueResponse) *NullableWaitNotifyWorkQueueResponse {
	return &NullableWaitNotifyWorkQueueResponse{value: val, isSet: true}
}

func (v NullableWaitNotifyWorkQueueResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWaitNotifyWorkQueueResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
