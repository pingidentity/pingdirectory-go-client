/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ScimSubattributeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScimSubattributeResponse{}

// ScimSubattributeResponse struct for ScimSubattributeResponse
type ScimSubattributeResponse struct {
	// Name of the SCIM Subattribute
	Id      string                          `json:"id"`
	Schemas []EnumscimSubattributeSchemaUrn `json:"schemas,omitempty"`
	// A description for this SCIM Subattribute
	Description *string                      `json:"description,omitempty"`
	Type        EnumscimSubattributeTypeProp `json:"type"`
	// Specifies whether this sub-attribute is required.
	Required bool `json:"required"`
	// Specifies whether the sub-attribute values are case sensitive.
	CaseExact bool `json:"caseExact"`
	// Specifies whether this attribute may have multiple values.
	MultiValued bool `json:"multiValued"`
	// Specifies the suggested canonical type values for the sub-attribute.
	CanonicalValue []string                           `json:"canonicalValue,omitempty"`
	Mutability     EnumscimSubattributeMutabilityProp `json:"mutability"`
	Returned       EnumscimSubattributeReturnedProp   `json:"returned"`
	// Specifies the SCIM resource types that may be referenced. This property is only applicable for sub-attributes that are of type 'reference'. Valid values are: A SCIM resource type (e.g., 'User' or 'Group'), 'external' - indicating the resource is an external resource (e.g., such as a photo), or 'uri' - indicating that the reference is to a service endpoint or an identifier (such as a schema urn).
	ReferenceType                                 []string                                           `json:"referenceType,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewScimSubattributeResponse instantiates a new ScimSubattributeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScimSubattributeResponse(id string, type_ EnumscimSubattributeTypeProp, required bool, caseExact bool, multiValued bool, mutability EnumscimSubattributeMutabilityProp, returned EnumscimSubattributeReturnedProp) *ScimSubattributeResponse {
	this := ScimSubattributeResponse{}
	this.Id = id
	this.Type = type_
	this.Required = required
	this.CaseExact = caseExact
	this.MultiValued = multiValued
	this.Mutability = mutability
	this.Returned = returned
	return &this
}

// NewScimSubattributeResponseWithDefaults instantiates a new ScimSubattributeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScimSubattributeResponseWithDefaults() *ScimSubattributeResponse {
	this := ScimSubattributeResponse{}
	return &this
}

// GetId returns the Id field value
func (o *ScimSubattributeResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ScimSubattributeResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetSchemas() []EnumscimSubattributeSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumscimSubattributeSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetSchemasOk() ([]EnumscimSubattributeSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumscimSubattributeSchemaUrn and assigns it to the Schemas field.
func (o *ScimSubattributeResponse) SetSchemas(v []EnumscimSubattributeSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ScimSubattributeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetType returns the Type field value
func (o *ScimSubattributeResponse) GetType() EnumscimSubattributeTypeProp {
	if o == nil {
		var ret EnumscimSubattributeTypeProp
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetTypeOk() (*EnumscimSubattributeTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ScimSubattributeResponse) SetType(v EnumscimSubattributeTypeProp) {
	o.Type = v
}

// GetRequired returns the Required field value
func (o *ScimSubattributeResponse) GetRequired() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Required
}

// GetRequiredOk returns a tuple with the Required field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetRequiredOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Required, true
}

// SetRequired sets field value
func (o *ScimSubattributeResponse) SetRequired(v bool) {
	o.Required = v
}

// GetCaseExact returns the CaseExact field value
func (o *ScimSubattributeResponse) GetCaseExact() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.CaseExact
}

// GetCaseExactOk returns a tuple with the CaseExact field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetCaseExactOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CaseExact, true
}

// SetCaseExact sets field value
func (o *ScimSubattributeResponse) SetCaseExact(v bool) {
	o.CaseExact = v
}

// GetMultiValued returns the MultiValued field value
func (o *ScimSubattributeResponse) GetMultiValued() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.MultiValued
}

// GetMultiValuedOk returns a tuple with the MultiValued field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetMultiValuedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MultiValued, true
}

// SetMultiValued sets field value
func (o *ScimSubattributeResponse) SetMultiValued(v bool) {
	o.MultiValued = v
}

// GetCanonicalValue returns the CanonicalValue field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetCanonicalValue() []string {
	if o == nil || IsNil(o.CanonicalValue) {
		var ret []string
		return ret
	}
	return o.CanonicalValue
}

// GetCanonicalValueOk returns a tuple with the CanonicalValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetCanonicalValueOk() ([]string, bool) {
	if o == nil || IsNil(o.CanonicalValue) {
		return nil, false
	}
	return o.CanonicalValue, true
}

// HasCanonicalValue returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasCanonicalValue() bool {
	if o != nil && !IsNil(o.CanonicalValue) {
		return true
	}

	return false
}

// SetCanonicalValue gets a reference to the given []string and assigns it to the CanonicalValue field.
func (o *ScimSubattributeResponse) SetCanonicalValue(v []string) {
	o.CanonicalValue = v
}

// GetMutability returns the Mutability field value
func (o *ScimSubattributeResponse) GetMutability() EnumscimSubattributeMutabilityProp {
	if o == nil {
		var ret EnumscimSubattributeMutabilityProp
		return ret
	}

	return o.Mutability
}

// GetMutabilityOk returns a tuple with the Mutability field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetMutabilityOk() (*EnumscimSubattributeMutabilityProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Mutability, true
}

// SetMutability sets field value
func (o *ScimSubattributeResponse) SetMutability(v EnumscimSubattributeMutabilityProp) {
	o.Mutability = v
}

// GetReturned returns the Returned field value
func (o *ScimSubattributeResponse) GetReturned() EnumscimSubattributeReturnedProp {
	if o == nil {
		var ret EnumscimSubattributeReturnedProp
		return ret
	}

	return o.Returned
}

// GetReturnedOk returns a tuple with the Returned field value
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetReturnedOk() (*EnumscimSubattributeReturnedProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Returned, true
}

// SetReturned sets field value
func (o *ScimSubattributeResponse) SetReturned(v EnumscimSubattributeReturnedProp) {
	o.Returned = v
}

// GetReferenceType returns the ReferenceType field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetReferenceType() []string {
	if o == nil || IsNil(o.ReferenceType) {
		var ret []string
		return ret
	}
	return o.ReferenceType
}

// GetReferenceTypeOk returns a tuple with the ReferenceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetReferenceTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.ReferenceType) {
		return nil, false
	}
	return o.ReferenceType, true
}

// HasReferenceType returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasReferenceType() bool {
	if o != nil && !IsNil(o.ReferenceType) {
		return true
	}

	return false
}

// SetReferenceType gets a reference to the given []string and assigns it to the ReferenceType field.
func (o *ScimSubattributeResponse) SetReferenceType(v []string) {
	o.ReferenceType = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ScimSubattributeResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *ScimSubattributeResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScimSubattributeResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *ScimSubattributeResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *ScimSubattributeResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o ScimSubattributeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScimSubattributeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["type"] = o.Type
	toSerialize["required"] = o.Required
	toSerialize["caseExact"] = o.CaseExact
	toSerialize["multiValued"] = o.MultiValued
	if !IsNil(o.CanonicalValue) {
		toSerialize["canonicalValue"] = o.CanonicalValue
	}
	toSerialize["mutability"] = o.Mutability
	toSerialize["returned"] = o.Returned
	if !IsNil(o.ReferenceType) {
		toSerialize["referenceType"] = o.ReferenceType
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableScimSubattributeResponse struct {
	value *ScimSubattributeResponse
	isSet bool
}

func (v NullableScimSubattributeResponse) Get() *ScimSubattributeResponse {
	return v.value
}

func (v *NullableScimSubattributeResponse) Set(val *ScimSubattributeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableScimSubattributeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableScimSubattributeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScimSubattributeResponse(val *ScimSubattributeResponse) *NullableScimSubattributeResponse {
	return &NullableScimSubattributeResponse{value: val, isSet: true}
}

func (v NullableScimSubattributeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScimSubattributeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
