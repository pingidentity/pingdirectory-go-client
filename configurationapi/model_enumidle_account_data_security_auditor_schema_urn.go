/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumidleAccountDataSecurityAuditorSchemaUrn the model 'EnumidleAccountDataSecurityAuditorSchemaUrn'
type EnumidleAccountDataSecurityAuditorSchemaUrn string

// List of Enumidle-account-data-security-auditorSchemaUrn
const (
	ENUMIDLEACCOUNTDATASECURITYAUDITORSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0DATA_SECURITY_AUDITORIDLE_ACCOUNT EnumidleAccountDataSecurityAuditorSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:data-security-auditor:idle-account"
)

// All allowed values of EnumidleAccountDataSecurityAuditorSchemaUrn enum
var AllowedEnumidleAccountDataSecurityAuditorSchemaUrnEnumValues = []EnumidleAccountDataSecurityAuditorSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:data-security-auditor:idle-account",
}

func (v *EnumidleAccountDataSecurityAuditorSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumidleAccountDataSecurityAuditorSchemaUrn(value)
	for _, existing := range AllowedEnumidleAccountDataSecurityAuditorSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumidleAccountDataSecurityAuditorSchemaUrn", value)
}

// NewEnumidleAccountDataSecurityAuditorSchemaUrnFromValue returns a pointer to a valid EnumidleAccountDataSecurityAuditorSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumidleAccountDataSecurityAuditorSchemaUrnFromValue(v string) (*EnumidleAccountDataSecurityAuditorSchemaUrn, error) {
	ev := EnumidleAccountDataSecurityAuditorSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumidleAccountDataSecurityAuditorSchemaUrn: valid values are %v", v, AllowedEnumidleAccountDataSecurityAuditorSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumidleAccountDataSecurityAuditorSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumidleAccountDataSecurityAuditorSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumidle-account-data-security-auditorSchemaUrn value
func (v EnumidleAccountDataSecurityAuditorSchemaUrn) Ptr() *EnumidleAccountDataSecurityAuditorSchemaUrn {
	return &v
}

type NullableEnumidleAccountDataSecurityAuditorSchemaUrn struct {
	value *EnumidleAccountDataSecurityAuditorSchemaUrn
	isSet bool
}

func (v NullableEnumidleAccountDataSecurityAuditorSchemaUrn) Get() *EnumidleAccountDataSecurityAuditorSchemaUrn {
	return v.value
}

func (v *NullableEnumidleAccountDataSecurityAuditorSchemaUrn) Set(val *EnumidleAccountDataSecurityAuditorSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumidleAccountDataSecurityAuditorSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumidleAccountDataSecurityAuditorSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumidleAccountDataSecurityAuditorSchemaUrn(val *EnumidleAccountDataSecurityAuditorSchemaUrn) *NullableEnumidleAccountDataSecurityAuditorSchemaUrn {
	return &NullableEnumidleAccountDataSecurityAuditorSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumidleAccountDataSecurityAuditorSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumidleAccountDataSecurityAuditorSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
