/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginAgentAuthenticationProtocolProp The authentication protocol to use for SNMPv3 if authentication is to be performed.
type EnumpluginAgentAuthenticationProtocolProp string

// List of Enumplugin-agentAuthenticationProtocolProp
const (
	ENUMPLUGINAGENTAUTHENTICATIONPROTOCOLPROP_MD5 EnumpluginAgentAuthenticationProtocolProp = "md5"
	ENUMPLUGINAGENTAUTHENTICATIONPROTOCOLPROP_SHA EnumpluginAgentAuthenticationProtocolProp = "sha"
)

// All allowed values of EnumpluginAgentAuthenticationProtocolProp enum
var AllowedEnumpluginAgentAuthenticationProtocolPropEnumValues = []EnumpluginAgentAuthenticationProtocolProp{
	"md5",
	"sha",
}

func (v *EnumpluginAgentAuthenticationProtocolProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginAgentAuthenticationProtocolProp(value)
	for _, existing := range AllowedEnumpluginAgentAuthenticationProtocolPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginAgentAuthenticationProtocolProp", value)
}

// NewEnumpluginAgentAuthenticationProtocolPropFromValue returns a pointer to a valid EnumpluginAgentAuthenticationProtocolProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginAgentAuthenticationProtocolPropFromValue(v string) (*EnumpluginAgentAuthenticationProtocolProp, error) {
	ev := EnumpluginAgentAuthenticationProtocolProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginAgentAuthenticationProtocolProp: valid values are %v", v, AllowedEnumpluginAgentAuthenticationProtocolPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginAgentAuthenticationProtocolProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginAgentAuthenticationProtocolPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-agentAuthenticationProtocolProp value
func (v EnumpluginAgentAuthenticationProtocolProp) Ptr() *EnumpluginAgentAuthenticationProtocolProp {
	return &v
}

type NullableEnumpluginAgentAuthenticationProtocolProp struct {
	value *EnumpluginAgentAuthenticationProtocolProp
	isSet bool
}

func (v NullableEnumpluginAgentAuthenticationProtocolProp) Get() *EnumpluginAgentAuthenticationProtocolProp {
	return v.value
}

func (v *NullableEnumpluginAgentAuthenticationProtocolProp) Set(val *EnumpluginAgentAuthenticationProtocolProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginAgentAuthenticationProtocolProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginAgentAuthenticationProtocolProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginAgentAuthenticationProtocolProp(val *EnumpluginAgentAuthenticationProtocolProp) *NullableEnumpluginAgentAuthenticationProtocolProp {
	return &NullableEnumpluginAgentAuthenticationProtocolProp{value: val, isSet: true}
}

func (v NullableEnumpluginAgentAuthenticationProtocolProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginAgentAuthenticationProtocolProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
