/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddAzureAuthenticationMethod200Response - struct for AddAzureAuthenticationMethod200Response
type AddAzureAuthenticationMethod200Response struct {
	ClientSecretAzureAuthenticationMethodResponse     *ClientSecretAzureAuthenticationMethodResponse
	DefaultAzureAuthenticationMethodResponse          *DefaultAzureAuthenticationMethodResponse
	UsernamePasswordAzureAuthenticationMethodResponse *UsernamePasswordAzureAuthenticationMethodResponse
}

// ClientSecretAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response is a convenience function that returns ClientSecretAzureAuthenticationMethodResponse wrapped in AddAzureAuthenticationMethod200Response
func ClientSecretAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response(v *ClientSecretAzureAuthenticationMethodResponse) AddAzureAuthenticationMethod200Response {
	return AddAzureAuthenticationMethod200Response{
		ClientSecretAzureAuthenticationMethodResponse: v,
	}
}

// DefaultAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response is a convenience function that returns DefaultAzureAuthenticationMethodResponse wrapped in AddAzureAuthenticationMethod200Response
func DefaultAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response(v *DefaultAzureAuthenticationMethodResponse) AddAzureAuthenticationMethod200Response {
	return AddAzureAuthenticationMethod200Response{
		DefaultAzureAuthenticationMethodResponse: v,
	}
}

// UsernamePasswordAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response is a convenience function that returns UsernamePasswordAzureAuthenticationMethodResponse wrapped in AddAzureAuthenticationMethod200Response
func UsernamePasswordAzureAuthenticationMethodResponseAsAddAzureAuthenticationMethod200Response(v *UsernamePasswordAzureAuthenticationMethodResponse) AddAzureAuthenticationMethod200Response {
	return AddAzureAuthenticationMethod200Response{
		UsernamePasswordAzureAuthenticationMethodResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddAzureAuthenticationMethod200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into ClientSecretAzureAuthenticationMethodResponse
	err = newStrictDecoder(data).Decode(&dst.ClientSecretAzureAuthenticationMethodResponse)
	if err == nil {
		jsonClientSecretAzureAuthenticationMethodResponse, _ := json.Marshal(dst.ClientSecretAzureAuthenticationMethodResponse)
		if string(jsonClientSecretAzureAuthenticationMethodResponse) == "{}" { // empty struct
			dst.ClientSecretAzureAuthenticationMethodResponse = nil
		} else {
			match++
		}
	} else {
		dst.ClientSecretAzureAuthenticationMethodResponse = nil
	}

	// try to unmarshal data into DefaultAzureAuthenticationMethodResponse
	err = newStrictDecoder(data).Decode(&dst.DefaultAzureAuthenticationMethodResponse)
	if err == nil {
		jsonDefaultAzureAuthenticationMethodResponse, _ := json.Marshal(dst.DefaultAzureAuthenticationMethodResponse)
		if string(jsonDefaultAzureAuthenticationMethodResponse) == "{}" { // empty struct
			dst.DefaultAzureAuthenticationMethodResponse = nil
		} else {
			match++
		}
	} else {
		dst.DefaultAzureAuthenticationMethodResponse = nil
	}

	// try to unmarshal data into UsernamePasswordAzureAuthenticationMethodResponse
	err = newStrictDecoder(data).Decode(&dst.UsernamePasswordAzureAuthenticationMethodResponse)
	if err == nil {
		jsonUsernamePasswordAzureAuthenticationMethodResponse, _ := json.Marshal(dst.UsernamePasswordAzureAuthenticationMethodResponse)
		if string(jsonUsernamePasswordAzureAuthenticationMethodResponse) == "{}" { // empty struct
			dst.UsernamePasswordAzureAuthenticationMethodResponse = nil
		} else {
			match++
		}
	} else {
		dst.UsernamePasswordAzureAuthenticationMethodResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.ClientSecretAzureAuthenticationMethodResponse = nil
		dst.DefaultAzureAuthenticationMethodResponse = nil
		dst.UsernamePasswordAzureAuthenticationMethodResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddAzureAuthenticationMethod200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddAzureAuthenticationMethod200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddAzureAuthenticationMethod200Response) MarshalJSON() ([]byte, error) {
	if src.ClientSecretAzureAuthenticationMethodResponse != nil {
		return json.Marshal(&src.ClientSecretAzureAuthenticationMethodResponse)
	}

	if src.DefaultAzureAuthenticationMethodResponse != nil {
		return json.Marshal(&src.DefaultAzureAuthenticationMethodResponse)
	}

	if src.UsernamePasswordAzureAuthenticationMethodResponse != nil {
		return json.Marshal(&src.UsernamePasswordAzureAuthenticationMethodResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddAzureAuthenticationMethod200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.ClientSecretAzureAuthenticationMethodResponse != nil {
		return obj.ClientSecretAzureAuthenticationMethodResponse
	}

	if obj.DefaultAzureAuthenticationMethodResponse != nil {
		return obj.DefaultAzureAuthenticationMethodResponse
	}

	if obj.UsernamePasswordAzureAuthenticationMethodResponse != nil {
		return obj.UsernamePasswordAzureAuthenticationMethodResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddAzureAuthenticationMethod200Response struct {
	value *AddAzureAuthenticationMethod200Response
	isSet bool
}

func (v NullableAddAzureAuthenticationMethod200Response) Get() *AddAzureAuthenticationMethod200Response {
	return v.value
}

func (v *NullableAddAzureAuthenticationMethod200Response) Set(val *AddAzureAuthenticationMethod200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAzureAuthenticationMethod200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAzureAuthenticationMethod200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAzureAuthenticationMethod200Response(val *AddAzureAuthenticationMethod200Response) *NullableAddAzureAuthenticationMethod200Response {
	return &NullableAddAzureAuthenticationMethod200Response{value: val, isSet: true}
}

func (v NullableAddAzureAuthenticationMethod200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAzureAuthenticationMethod200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
