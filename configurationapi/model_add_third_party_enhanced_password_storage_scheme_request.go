/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddThirdPartyEnhancedPasswordStorageSchemeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddThirdPartyEnhancedPasswordStorageSchemeRequest{}

// AddThirdPartyEnhancedPasswordStorageSchemeRequest struct for AddThirdPartyEnhancedPasswordStorageSchemeRequest
type AddThirdPartyEnhancedPasswordStorageSchemeRequest struct {
	Schemas []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn `json:"schemas"`
	// The fully-qualified name of the Java class providing the logic for the Third Party Enhanced Password Storage Scheme.
	ExtensionClass string `json:"extensionClass"`
	// The set of arguments used to customize the behavior for the Third Party Enhanced Password Storage Scheme. Each configuration property should be given in the form 'name=value'.
	ExtensionArgument []string `json:"extensionArgument,omitempty"`
	// A description for this Password Storage Scheme
	Description *string `json:"description,omitempty"`
	// Indicates whether the Password Storage Scheme is enabled for use.
	Enabled bool `json:"enabled"`
	// Name of the new Password Storage Scheme
	SchemeName string `json:"schemeName"`
}

// NewAddThirdPartyEnhancedPasswordStorageSchemeRequest instantiates a new AddThirdPartyEnhancedPasswordStorageSchemeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddThirdPartyEnhancedPasswordStorageSchemeRequest(schemas []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn, extensionClass string, enabled bool, schemeName string) *AddThirdPartyEnhancedPasswordStorageSchemeRequest {
	this := AddThirdPartyEnhancedPasswordStorageSchemeRequest{}
	this.Schemas = schemas
	this.ExtensionClass = extensionClass
	this.Enabled = enabled
	this.SchemeName = schemeName
	return &this
}

// NewAddThirdPartyEnhancedPasswordStorageSchemeRequestWithDefaults instantiates a new AddThirdPartyEnhancedPasswordStorageSchemeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddThirdPartyEnhancedPasswordStorageSchemeRequestWithDefaults() *AddThirdPartyEnhancedPasswordStorageSchemeRequest {
	this := AddThirdPartyEnhancedPasswordStorageSchemeRequest{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetSchemas() []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn {
	if o == nil {
		var ret []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetSchemasOk() ([]EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetSchemas(v []EnumthirdPartyEnhancedPasswordStorageSchemeSchemaUrn) {
	o.Schemas = v
}

// GetExtensionClass returns the ExtensionClass field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetExtensionClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtensionClass
}

// GetExtensionClassOk returns a tuple with the ExtensionClass field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetExtensionClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionClass, true
}

// SetExtensionClass sets field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetExtensionClass(v string) {
	o.ExtensionClass = v
}

// GetExtensionArgument returns the ExtensionArgument field value if set, zero value otherwise.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetExtensionArgument() []string {
	if o == nil || IsNil(o.ExtensionArgument) {
		var ret []string
		return ret
	}
	return o.ExtensionArgument
}

// GetExtensionArgumentOk returns a tuple with the ExtensionArgument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetExtensionArgumentOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtensionArgument) {
		return nil, false
	}
	return o.ExtensionArgument, true
}

// HasExtensionArgument returns a boolean if a field has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) HasExtensionArgument() bool {
	if o != nil && !IsNil(o.ExtensionArgument) {
		return true
	}

	return false
}

// SetExtensionArgument gets a reference to the given []string and assigns it to the ExtensionArgument field.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetExtensionArgument(v []string) {
	o.ExtensionArgument = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSchemeName returns the SchemeName field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetSchemeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SchemeName
}

// GetSchemeNameOk returns a tuple with the SchemeName field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) GetSchemeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SchemeName, true
}

// SetSchemeName sets field value
func (o *AddThirdPartyEnhancedPasswordStorageSchemeRequest) SetSchemeName(v string) {
	o.SchemeName = v
}

func (o AddThirdPartyEnhancedPasswordStorageSchemeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddThirdPartyEnhancedPasswordStorageSchemeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["extensionClass"] = o.ExtensionClass
	if !IsNil(o.ExtensionArgument) {
		toSerialize["extensionArgument"] = o.ExtensionArgument
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["schemeName"] = o.SchemeName
	return toSerialize, nil
}

type NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest struct {
	value *AddThirdPartyEnhancedPasswordStorageSchemeRequest
	isSet bool
}

func (v NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) Get() *AddThirdPartyEnhancedPasswordStorageSchemeRequest {
	return v.value
}

func (v *NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) Set(val *AddThirdPartyEnhancedPasswordStorageSchemeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddThirdPartyEnhancedPasswordStorageSchemeRequest(val *AddThirdPartyEnhancedPasswordStorageSchemeRequest) *NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest {
	return &NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest{value: val, isSet: true}
}

func (v NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddThirdPartyEnhancedPasswordStorageSchemeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
