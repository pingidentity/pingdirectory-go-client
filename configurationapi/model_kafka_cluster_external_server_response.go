/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the KafkaClusterExternalServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &KafkaClusterExternalServerResponse{}

// KafkaClusterExternalServerResponse struct for KafkaClusterExternalServerResponse
type KafkaClusterExternalServerResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumkafkaClusterExternalServerSchemaUrn          `json:"schemas"`
	// Name of the External Server
	Id string `json:"id"`
	// List of Kafka brokers to use for this Kafka Cluster External Server, following the host:port format.
	BootstrapServer []string `json:"bootstrapServer"`
	// Specifies extra properties to use when constructing the KafkaProducer for sending messages.
	ProducerProperty []string `json:"producerProperty,omitempty"`
	// If enabled, the Kafka Cluster External Server will use SSL to encrypt communication with the Kafka brokers.
	UseSSL *bool `json:"useSSL,omitempty"`
	// Specifies the file-based trust manager that should be used with the Kafka Cluster External Server for connecting to the Kafka cluster over SSL.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	// Specifies the file-based key manager that should be used with the Kafka Cluster External Server for connecting to the Kafka cluster over SSL.
	KeyManagerProvider *string `json:"keyManagerProvider,omitempty"`
	// A description for this External Server
	Description *string `json:"description,omitempty"`
}

// NewKafkaClusterExternalServerResponse instantiates a new KafkaClusterExternalServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewKafkaClusterExternalServerResponse(schemas []EnumkafkaClusterExternalServerSchemaUrn, id string, bootstrapServer []string) *KafkaClusterExternalServerResponse {
	this := KafkaClusterExternalServerResponse{}
	this.Schemas = schemas
	this.Id = id
	this.BootstrapServer = bootstrapServer
	return &this
}

// NewKafkaClusterExternalServerResponseWithDefaults instantiates a new KafkaClusterExternalServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewKafkaClusterExternalServerResponseWithDefaults() *KafkaClusterExternalServerResponse {
	this := KafkaClusterExternalServerResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *KafkaClusterExternalServerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *KafkaClusterExternalServerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *KafkaClusterExternalServerResponse) GetSchemas() []EnumkafkaClusterExternalServerSchemaUrn {
	if o == nil {
		var ret []EnumkafkaClusterExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetSchemasOk() ([]EnumkafkaClusterExternalServerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *KafkaClusterExternalServerResponse) SetSchemas(v []EnumkafkaClusterExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *KafkaClusterExternalServerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *KafkaClusterExternalServerResponse) SetId(v string) {
	o.Id = v
}

// GetBootstrapServer returns the BootstrapServer field value
func (o *KafkaClusterExternalServerResponse) GetBootstrapServer() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BootstrapServer
}

// GetBootstrapServerOk returns a tuple with the BootstrapServer field value
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetBootstrapServerOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BootstrapServer, true
}

// SetBootstrapServer sets field value
func (o *KafkaClusterExternalServerResponse) SetBootstrapServer(v []string) {
	o.BootstrapServer = v
}

// GetProducerProperty returns the ProducerProperty field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetProducerProperty() []string {
	if o == nil || IsNil(o.ProducerProperty) {
		var ret []string
		return ret
	}
	return o.ProducerProperty
}

// GetProducerPropertyOk returns a tuple with the ProducerProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetProducerPropertyOk() ([]string, bool) {
	if o == nil || IsNil(o.ProducerProperty) {
		return nil, false
	}
	return o.ProducerProperty, true
}

// HasProducerProperty returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasProducerProperty() bool {
	if o != nil && !IsNil(o.ProducerProperty) {
		return true
	}

	return false
}

// SetProducerProperty gets a reference to the given []string and assigns it to the ProducerProperty field.
func (o *KafkaClusterExternalServerResponse) SetProducerProperty(v []string) {
	o.ProducerProperty = v
}

// GetUseSSL returns the UseSSL field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetUseSSL() bool {
	if o == nil || IsNil(o.UseSSL) {
		var ret bool
		return ret
	}
	return *o.UseSSL
}

// GetUseSSLOk returns a tuple with the UseSSL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetUseSSLOk() (*bool, bool) {
	if o == nil || IsNil(o.UseSSL) {
		return nil, false
	}
	return o.UseSSL, true
}

// HasUseSSL returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasUseSSL() bool {
	if o != nil && !IsNil(o.UseSSL) {
		return true
	}

	return false
}

// SetUseSSL gets a reference to the given bool and assigns it to the UseSSL field.
func (o *KafkaClusterExternalServerResponse) SetUseSSL(v bool) {
	o.UseSSL = &v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetTrustManagerProvider() string {
	if o == nil || IsNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustManagerProvider) {
		return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasTrustManagerProvider() bool {
	if o != nil && !IsNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *KafkaClusterExternalServerResponse) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetKeyManagerProvider returns the KeyManagerProvider field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetKeyManagerProvider() string {
	if o == nil || IsNil(o.KeyManagerProvider) {
		var ret string
		return ret
	}
	return *o.KeyManagerProvider
}

// GetKeyManagerProviderOk returns a tuple with the KeyManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetKeyManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.KeyManagerProvider) {
		return nil, false
	}
	return o.KeyManagerProvider, true
}

// HasKeyManagerProvider returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasKeyManagerProvider() bool {
	if o != nil && !IsNil(o.KeyManagerProvider) {
		return true
	}

	return false
}

// SetKeyManagerProvider gets a reference to the given string and assigns it to the KeyManagerProvider field.
func (o *KafkaClusterExternalServerResponse) SetKeyManagerProvider(v string) {
	o.KeyManagerProvider = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *KafkaClusterExternalServerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *KafkaClusterExternalServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *KafkaClusterExternalServerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *KafkaClusterExternalServerResponse) SetDescription(v string) {
	o.Description = &v
}

func (o KafkaClusterExternalServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o KafkaClusterExternalServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["bootstrapServer"] = o.BootstrapServer
	if !IsNil(o.ProducerProperty) {
		toSerialize["producerProperty"] = o.ProducerProperty
	}
	if !IsNil(o.UseSSL) {
		toSerialize["useSSL"] = o.UseSSL
	}
	if !IsNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	if !IsNil(o.KeyManagerProvider) {
		toSerialize["keyManagerProvider"] = o.KeyManagerProvider
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableKafkaClusterExternalServerResponse struct {
	value *KafkaClusterExternalServerResponse
	isSet bool
}

func (v NullableKafkaClusterExternalServerResponse) Get() *KafkaClusterExternalServerResponse {
	return v.value
}

func (v *NullableKafkaClusterExternalServerResponse) Set(val *KafkaClusterExternalServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableKafkaClusterExternalServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableKafkaClusterExternalServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKafkaClusterExternalServerResponse(val *KafkaClusterExternalServerResponse) *NullableKafkaClusterExternalServerResponse {
	return &NullableKafkaClusterExternalServerResponse{value: val, isSet: true}
}

func (v NullableKafkaClusterExternalServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKafkaClusterExternalServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
