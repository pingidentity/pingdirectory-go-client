/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerSyncServerConnectionSecurityProp The mechanism to use to secure communication with the directory server.
type EnumexternalServerSyncServerConnectionSecurityProp string

// List of Enumexternal-server-sync-server-connectionSecurityProp
const (
	ENUMEXTERNALSERVERSYNCSERVERCONNECTIONSECURITYPROP_NONE     EnumexternalServerSyncServerConnectionSecurityProp = "none"
	ENUMEXTERNALSERVERSYNCSERVERCONNECTIONSECURITYPROP_SSL      EnumexternalServerSyncServerConnectionSecurityProp = "ssl"
	ENUMEXTERNALSERVERSYNCSERVERCONNECTIONSECURITYPROP_STARTTLS EnumexternalServerSyncServerConnectionSecurityProp = "starttls"
)

// All allowed values of EnumexternalServerSyncServerConnectionSecurityProp enum
var AllowedEnumexternalServerSyncServerConnectionSecurityPropEnumValues = []EnumexternalServerSyncServerConnectionSecurityProp{
	"none",
	"ssl",
	"starttls",
}

func (v *EnumexternalServerSyncServerConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerSyncServerConnectionSecurityProp(value)
	for _, existing := range AllowedEnumexternalServerSyncServerConnectionSecurityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerSyncServerConnectionSecurityProp", value)
}

// NewEnumexternalServerSyncServerConnectionSecurityPropFromValue returns a pointer to a valid EnumexternalServerSyncServerConnectionSecurityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerSyncServerConnectionSecurityPropFromValue(v string) (*EnumexternalServerSyncServerConnectionSecurityProp, error) {
	ev := EnumexternalServerSyncServerConnectionSecurityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerSyncServerConnectionSecurityProp: valid values are %v", v, AllowedEnumexternalServerSyncServerConnectionSecurityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerSyncServerConnectionSecurityProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerSyncServerConnectionSecurityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-sync-server-connectionSecurityProp value
func (v EnumexternalServerSyncServerConnectionSecurityProp) Ptr() *EnumexternalServerSyncServerConnectionSecurityProp {
	return &v
}

type NullableEnumexternalServerSyncServerConnectionSecurityProp struct {
	value *EnumexternalServerSyncServerConnectionSecurityProp
	isSet bool
}

func (v NullableEnumexternalServerSyncServerConnectionSecurityProp) Get() *EnumexternalServerSyncServerConnectionSecurityProp {
	return v.value
}

func (v *NullableEnumexternalServerSyncServerConnectionSecurityProp) Set(val *EnumexternalServerSyncServerConnectionSecurityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerSyncServerConnectionSecurityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerSyncServerConnectionSecurityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerSyncServerConnectionSecurityProp(val *EnumexternalServerSyncServerConnectionSecurityProp) *NullableEnumexternalServerSyncServerConnectionSecurityProp {
	return &NullableEnumexternalServerSyncServerConnectionSecurityProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerSyncServerConnectionSecurityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerSyncServerConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
