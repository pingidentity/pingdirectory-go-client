/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddDisallowedCharactersPasswordValidatorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDisallowedCharactersPasswordValidatorRequest{}

// AddDisallowedCharactersPasswordValidatorRequest struct for AddDisallowedCharactersPasswordValidatorRequest
type AddDisallowedCharactersPasswordValidatorRequest struct {
	// Name of the new Password Validator
	ValidatorName string                                               `json:"validatorName"`
	Schemas       []EnumdisallowedCharactersPasswordValidatorSchemaUrn `json:"schemas"`
	// A set of characters that will not be allowed anywhere in a password.
	DisallowedCharacters *string `json:"disallowedCharacters,omitempty"`
	// A set of characters that will not be allowed as the first character of the password.
	DisallowedLeadingCharacters *string `json:"disallowedLeadingCharacters,omitempty"`
	// A set of characters that will not be allowed as the last character of the password.
	DisallowedTrailingCharacters *string `json:"disallowedTrailingCharacters,omitempty"`
	// A description for this Password Validator
	Description *string `json:"description,omitempty"`
	// Indicates whether the password validator is enabled for use.
	Enabled bool `json:"enabled"`
	// Specifies a message that can be used to describe the requirements imposed by this password validator to end users. If a value is provided for this property, then it will override any description that may have otherwise been generated by the validator.
	ValidatorRequirementDescription *string `json:"validatorRequirementDescription,omitempty"`
	// Specifies a message that may be provided to the end user in the event that a proposed password is rejected by this validator. If a value is provided for this property, then it will override any failure message that may have otherwise been generated by the validator.
	ValidatorFailureMessage *string `json:"validatorFailureMessage,omitempty"`
}

// NewAddDisallowedCharactersPasswordValidatorRequest instantiates a new AddDisallowedCharactersPasswordValidatorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDisallowedCharactersPasswordValidatorRequest(validatorName string, schemas []EnumdisallowedCharactersPasswordValidatorSchemaUrn, enabled bool) *AddDisallowedCharactersPasswordValidatorRequest {
	this := AddDisallowedCharactersPasswordValidatorRequest{}
	this.ValidatorName = validatorName
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewAddDisallowedCharactersPasswordValidatorRequestWithDefaults instantiates a new AddDisallowedCharactersPasswordValidatorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDisallowedCharactersPasswordValidatorRequestWithDefaults() *AddDisallowedCharactersPasswordValidatorRequest {
	this := AddDisallowedCharactersPasswordValidatorRequest{}
	return &this
}

// GetValidatorName returns the ValidatorName field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValidatorName
}

// GetValidatorNameOk returns a tuple with the ValidatorName field value
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidatorName, true
}

// SetValidatorName sets field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetValidatorName(v string) {
	o.ValidatorName = v
}

// GetSchemas returns the Schemas field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetSchemas() []EnumdisallowedCharactersPasswordValidatorSchemaUrn {
	if o == nil {
		var ret []EnumdisallowedCharactersPasswordValidatorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetSchemasOk() ([]EnumdisallowedCharactersPasswordValidatorSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetSchemas(v []EnumdisallowedCharactersPasswordValidatorSchemaUrn) {
	o.Schemas = v
}

// GetDisallowedCharacters returns the DisallowedCharacters field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedCharacters() string {
	if o == nil || IsNil(o.DisallowedCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedCharacters
}

// GetDisallowedCharactersOk returns a tuple with the DisallowedCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedCharacters) {
		return nil, false
	}
	return o.DisallowedCharacters, true
}

// HasDisallowedCharacters returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasDisallowedCharacters() bool {
	if o != nil && !IsNil(o.DisallowedCharacters) {
		return true
	}

	return false
}

// SetDisallowedCharacters gets a reference to the given string and assigns it to the DisallowedCharacters field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetDisallowedCharacters(v string) {
	o.DisallowedCharacters = &v
}

// GetDisallowedLeadingCharacters returns the DisallowedLeadingCharacters field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedLeadingCharacters() string {
	if o == nil || IsNil(o.DisallowedLeadingCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedLeadingCharacters
}

// GetDisallowedLeadingCharactersOk returns a tuple with the DisallowedLeadingCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedLeadingCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedLeadingCharacters) {
		return nil, false
	}
	return o.DisallowedLeadingCharacters, true
}

// HasDisallowedLeadingCharacters returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasDisallowedLeadingCharacters() bool {
	if o != nil && !IsNil(o.DisallowedLeadingCharacters) {
		return true
	}

	return false
}

// SetDisallowedLeadingCharacters gets a reference to the given string and assigns it to the DisallowedLeadingCharacters field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetDisallowedLeadingCharacters(v string) {
	o.DisallowedLeadingCharacters = &v
}

// GetDisallowedTrailingCharacters returns the DisallowedTrailingCharacters field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedTrailingCharacters() string {
	if o == nil || IsNil(o.DisallowedTrailingCharacters) {
		var ret string
		return ret
	}
	return *o.DisallowedTrailingCharacters
}

// GetDisallowedTrailingCharactersOk returns a tuple with the DisallowedTrailingCharacters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDisallowedTrailingCharactersOk() (*string, bool) {
	if o == nil || IsNil(o.DisallowedTrailingCharacters) {
		return nil, false
	}
	return o.DisallowedTrailingCharacters, true
}

// HasDisallowedTrailingCharacters returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasDisallowedTrailingCharacters() bool {
	if o != nil && !IsNil(o.DisallowedTrailingCharacters) {
		return true
	}

	return false
}

// SetDisallowedTrailingCharacters gets a reference to the given string and assigns it to the DisallowedTrailingCharacters field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetDisallowedTrailingCharacters(v string) {
	o.DisallowedTrailingCharacters = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetValidatorRequirementDescription returns the ValidatorRequirementDescription field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorRequirementDescription() string {
	if o == nil || IsNil(o.ValidatorRequirementDescription) {
		var ret string
		return ret
	}
	return *o.ValidatorRequirementDescription
}

// GetValidatorRequirementDescriptionOk returns a tuple with the ValidatorRequirementDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorRequirementDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ValidatorRequirementDescription) {
		return nil, false
	}
	return o.ValidatorRequirementDescription, true
}

// HasValidatorRequirementDescription returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasValidatorRequirementDescription() bool {
	if o != nil && !IsNil(o.ValidatorRequirementDescription) {
		return true
	}

	return false
}

// SetValidatorRequirementDescription gets a reference to the given string and assigns it to the ValidatorRequirementDescription field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetValidatorRequirementDescription(v string) {
	o.ValidatorRequirementDescription = &v
}

// GetValidatorFailureMessage returns the ValidatorFailureMessage field value if set, zero value otherwise.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorFailureMessage() string {
	if o == nil || IsNil(o.ValidatorFailureMessage) {
		var ret string
		return ret
	}
	return *o.ValidatorFailureMessage
}

// GetValidatorFailureMessageOk returns a tuple with the ValidatorFailureMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) GetValidatorFailureMessageOk() (*string, bool) {
	if o == nil || IsNil(o.ValidatorFailureMessage) {
		return nil, false
	}
	return o.ValidatorFailureMessage, true
}

// HasValidatorFailureMessage returns a boolean if a field has been set.
func (o *AddDisallowedCharactersPasswordValidatorRequest) HasValidatorFailureMessage() bool {
	if o != nil && !IsNil(o.ValidatorFailureMessage) {
		return true
	}

	return false
}

// SetValidatorFailureMessage gets a reference to the given string and assigns it to the ValidatorFailureMessage field.
func (o *AddDisallowedCharactersPasswordValidatorRequest) SetValidatorFailureMessage(v string) {
	o.ValidatorFailureMessage = &v
}

func (o AddDisallowedCharactersPasswordValidatorRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDisallowedCharactersPasswordValidatorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["validatorName"] = o.ValidatorName
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.DisallowedCharacters) {
		toSerialize["disallowedCharacters"] = o.DisallowedCharacters
	}
	if !IsNil(o.DisallowedLeadingCharacters) {
		toSerialize["disallowedLeadingCharacters"] = o.DisallowedLeadingCharacters
	}
	if !IsNil(o.DisallowedTrailingCharacters) {
		toSerialize["disallowedTrailingCharacters"] = o.DisallowedTrailingCharacters
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.ValidatorRequirementDescription) {
		toSerialize["validatorRequirementDescription"] = o.ValidatorRequirementDescription
	}
	if !IsNil(o.ValidatorFailureMessage) {
		toSerialize["validatorFailureMessage"] = o.ValidatorFailureMessage
	}
	return toSerialize, nil
}

type NullableAddDisallowedCharactersPasswordValidatorRequest struct {
	value *AddDisallowedCharactersPasswordValidatorRequest
	isSet bool
}

func (v NullableAddDisallowedCharactersPasswordValidatorRequest) Get() *AddDisallowedCharactersPasswordValidatorRequest {
	return v.value
}

func (v *NullableAddDisallowedCharactersPasswordValidatorRequest) Set(val *AddDisallowedCharactersPasswordValidatorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDisallowedCharactersPasswordValidatorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDisallowedCharactersPasswordValidatorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDisallowedCharactersPasswordValidatorRequest(val *AddDisallowedCharactersPasswordValidatorRequest) *NullableAddDisallowedCharactersPasswordValidatorRequest {
	return &NullableAddDisallowedCharactersPasswordValidatorRequest{value: val, isSet: true}
}

func (v NullableAddDisallowedCharactersPasswordValidatorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDisallowedCharactersPasswordValidatorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
