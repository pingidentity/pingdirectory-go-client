/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerOpendjConnectionSecurityProp The mechanism to use to secure communication with the directory server.
type EnumexternalServerOpendjConnectionSecurityProp string

// List of Enumexternal-server-opendj-connectionSecurityProp
const (
	ENUMEXTERNALSERVEROPENDJCONNECTIONSECURITYPROP_NONE     EnumexternalServerOpendjConnectionSecurityProp = "none"
	ENUMEXTERNALSERVEROPENDJCONNECTIONSECURITYPROP_SSL      EnumexternalServerOpendjConnectionSecurityProp = "ssl"
	ENUMEXTERNALSERVEROPENDJCONNECTIONSECURITYPROP_STARTTLS EnumexternalServerOpendjConnectionSecurityProp = "starttls"
)

// All allowed values of EnumexternalServerOpendjConnectionSecurityProp enum
var AllowedEnumexternalServerOpendjConnectionSecurityPropEnumValues = []EnumexternalServerOpendjConnectionSecurityProp{
	"none",
	"ssl",
	"starttls",
}

func (v *EnumexternalServerOpendjConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerOpendjConnectionSecurityProp(value)
	for _, existing := range AllowedEnumexternalServerOpendjConnectionSecurityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerOpendjConnectionSecurityProp", value)
}

// NewEnumexternalServerOpendjConnectionSecurityPropFromValue returns a pointer to a valid EnumexternalServerOpendjConnectionSecurityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerOpendjConnectionSecurityPropFromValue(v string) (*EnumexternalServerOpendjConnectionSecurityProp, error) {
	ev := EnumexternalServerOpendjConnectionSecurityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerOpendjConnectionSecurityProp: valid values are %v", v, AllowedEnumexternalServerOpendjConnectionSecurityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerOpendjConnectionSecurityProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerOpendjConnectionSecurityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-opendj-connectionSecurityProp value
func (v EnumexternalServerOpendjConnectionSecurityProp) Ptr() *EnumexternalServerOpendjConnectionSecurityProp {
	return &v
}

type NullableEnumexternalServerOpendjConnectionSecurityProp struct {
	value *EnumexternalServerOpendjConnectionSecurityProp
	isSet bool
}

func (v NullableEnumexternalServerOpendjConnectionSecurityProp) Get() *EnumexternalServerOpendjConnectionSecurityProp {
	return v.value
}

func (v *NullableEnumexternalServerOpendjConnectionSecurityProp) Set(val *EnumexternalServerOpendjConnectionSecurityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerOpendjConnectionSecurityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerOpendjConnectionSecurityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerOpendjConnectionSecurityProp(val *EnumexternalServerOpendjConnectionSecurityProp) *NullableEnumexternalServerOpendjConnectionSecurityProp {
	return &NullableEnumexternalServerOpendjConnectionSecurityProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerOpendjConnectionSecurityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerOpendjConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
