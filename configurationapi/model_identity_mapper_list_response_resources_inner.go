/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// IdentityMapperListResponseResourcesInner - struct for IdentityMapperListResponseResourcesInner
type IdentityMapperListResponseResourcesInner struct {
	AggregateIdentityMapperResponse         *AggregateIdentityMapperResponse
	ExactMatchIdentityMapperResponse        *ExactMatchIdentityMapperResponse
	GroovyScriptedIdentityMapperResponse    *GroovyScriptedIdentityMapperResponse
	RegularExpressionIdentityMapperResponse *RegularExpressionIdentityMapperResponse
	ThirdPartyIdentityMapperResponse        *ThirdPartyIdentityMapperResponse
}

// AggregateIdentityMapperResponseAsIdentityMapperListResponseResourcesInner is a convenience function that returns AggregateIdentityMapperResponse wrapped in IdentityMapperListResponseResourcesInner
func AggregateIdentityMapperResponseAsIdentityMapperListResponseResourcesInner(v *AggregateIdentityMapperResponse) IdentityMapperListResponseResourcesInner {
	return IdentityMapperListResponseResourcesInner{
		AggregateIdentityMapperResponse: v,
	}
}

// ExactMatchIdentityMapperResponseAsIdentityMapperListResponseResourcesInner is a convenience function that returns ExactMatchIdentityMapperResponse wrapped in IdentityMapperListResponseResourcesInner
func ExactMatchIdentityMapperResponseAsIdentityMapperListResponseResourcesInner(v *ExactMatchIdentityMapperResponse) IdentityMapperListResponseResourcesInner {
	return IdentityMapperListResponseResourcesInner{
		ExactMatchIdentityMapperResponse: v,
	}
}

// GroovyScriptedIdentityMapperResponseAsIdentityMapperListResponseResourcesInner is a convenience function that returns GroovyScriptedIdentityMapperResponse wrapped in IdentityMapperListResponseResourcesInner
func GroovyScriptedIdentityMapperResponseAsIdentityMapperListResponseResourcesInner(v *GroovyScriptedIdentityMapperResponse) IdentityMapperListResponseResourcesInner {
	return IdentityMapperListResponseResourcesInner{
		GroovyScriptedIdentityMapperResponse: v,
	}
}

// RegularExpressionIdentityMapperResponseAsIdentityMapperListResponseResourcesInner is a convenience function that returns RegularExpressionIdentityMapperResponse wrapped in IdentityMapperListResponseResourcesInner
func RegularExpressionIdentityMapperResponseAsIdentityMapperListResponseResourcesInner(v *RegularExpressionIdentityMapperResponse) IdentityMapperListResponseResourcesInner {
	return IdentityMapperListResponseResourcesInner{
		RegularExpressionIdentityMapperResponse: v,
	}
}

// ThirdPartyIdentityMapperResponseAsIdentityMapperListResponseResourcesInner is a convenience function that returns ThirdPartyIdentityMapperResponse wrapped in IdentityMapperListResponseResourcesInner
func ThirdPartyIdentityMapperResponseAsIdentityMapperListResponseResourcesInner(v *ThirdPartyIdentityMapperResponse) IdentityMapperListResponseResourcesInner {
	return IdentityMapperListResponseResourcesInner{
		ThirdPartyIdentityMapperResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *IdentityMapperListResponseResourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AggregateIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.AggregateIdentityMapperResponse)
	if err == nil {
		jsonAggregateIdentityMapperResponse, _ := json.Marshal(dst.AggregateIdentityMapperResponse)
		if string(jsonAggregateIdentityMapperResponse) == "{}" { // empty struct
			dst.AggregateIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.AggregateIdentityMapperResponse = nil
	}

	// try to unmarshal data into ExactMatchIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.ExactMatchIdentityMapperResponse)
	if err == nil {
		jsonExactMatchIdentityMapperResponse, _ := json.Marshal(dst.ExactMatchIdentityMapperResponse)
		if string(jsonExactMatchIdentityMapperResponse) == "{}" { // empty struct
			dst.ExactMatchIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.ExactMatchIdentityMapperResponse = nil
	}

	// try to unmarshal data into GroovyScriptedIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedIdentityMapperResponse)
	if err == nil {
		jsonGroovyScriptedIdentityMapperResponse, _ := json.Marshal(dst.GroovyScriptedIdentityMapperResponse)
		if string(jsonGroovyScriptedIdentityMapperResponse) == "{}" { // empty struct
			dst.GroovyScriptedIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedIdentityMapperResponse = nil
	}

	// try to unmarshal data into RegularExpressionIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.RegularExpressionIdentityMapperResponse)
	if err == nil {
		jsonRegularExpressionIdentityMapperResponse, _ := json.Marshal(dst.RegularExpressionIdentityMapperResponse)
		if string(jsonRegularExpressionIdentityMapperResponse) == "{}" { // empty struct
			dst.RegularExpressionIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.RegularExpressionIdentityMapperResponse = nil
	}

	// try to unmarshal data into ThirdPartyIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyIdentityMapperResponse)
	if err == nil {
		jsonThirdPartyIdentityMapperResponse, _ := json.Marshal(dst.ThirdPartyIdentityMapperResponse)
		if string(jsonThirdPartyIdentityMapperResponse) == "{}" { // empty struct
			dst.ThirdPartyIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyIdentityMapperResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AggregateIdentityMapperResponse = nil
		dst.ExactMatchIdentityMapperResponse = nil
		dst.GroovyScriptedIdentityMapperResponse = nil
		dst.RegularExpressionIdentityMapperResponse = nil
		dst.ThirdPartyIdentityMapperResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IdentityMapperListResponseResourcesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IdentityMapperListResponseResourcesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IdentityMapperListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	if src.AggregateIdentityMapperResponse != nil {
		return json.Marshal(&src.AggregateIdentityMapperResponse)
	}

	if src.ExactMatchIdentityMapperResponse != nil {
		return json.Marshal(&src.ExactMatchIdentityMapperResponse)
	}

	if src.GroovyScriptedIdentityMapperResponse != nil {
		return json.Marshal(&src.GroovyScriptedIdentityMapperResponse)
	}

	if src.RegularExpressionIdentityMapperResponse != nil {
		return json.Marshal(&src.RegularExpressionIdentityMapperResponse)
	}

	if src.ThirdPartyIdentityMapperResponse != nil {
		return json.Marshal(&src.ThirdPartyIdentityMapperResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IdentityMapperListResponseResourcesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AggregateIdentityMapperResponse != nil {
		return obj.AggregateIdentityMapperResponse
	}

	if obj.ExactMatchIdentityMapperResponse != nil {
		return obj.ExactMatchIdentityMapperResponse
	}

	if obj.GroovyScriptedIdentityMapperResponse != nil {
		return obj.GroovyScriptedIdentityMapperResponse
	}

	if obj.RegularExpressionIdentityMapperResponse != nil {
		return obj.RegularExpressionIdentityMapperResponse
	}

	if obj.ThirdPartyIdentityMapperResponse != nil {
		return obj.ThirdPartyIdentityMapperResponse
	}

	// all schemas are nil
	return nil
}

type NullableIdentityMapperListResponseResourcesInner struct {
	value *IdentityMapperListResponseResourcesInner
	isSet bool
}

func (v NullableIdentityMapperListResponseResourcesInner) Get() *IdentityMapperListResponseResourcesInner {
	return v.value
}

func (v *NullableIdentityMapperListResponseResourcesInner) Set(val *IdentityMapperListResponseResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityMapperListResponseResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityMapperListResponseResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityMapperListResponseResourcesInner(val *IdentityMapperListResponseResourcesInner) *NullableIdentityMapperListResponseResourcesInner {
	return &NullableIdentityMapperListResponseResourcesInner{value: val, isSet: true}
}

func (v NullableIdentityMapperListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityMapperListResponseResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
