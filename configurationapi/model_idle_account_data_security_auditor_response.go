/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the IdleAccountDataSecurityAuditorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdleAccountDataSecurityAuditorResponse{}

// IdleAccountDataSecurityAuditorResponse struct for IdleAccountDataSecurityAuditorResponse
type IdleAccountDataSecurityAuditorResponse struct {
	// Name of the Data Security Auditor
	Id      string                                        `json:"id"`
	Schemas []EnumidleAccountDataSecurityAuditorSchemaUrn `json:"schemas"`
	// Specifies the name of the detailed report file.
	ReportFile string `json:"reportFile"`
	// The length of time to use as the warning interval for idle accounts. If the length of time since a user last authenticated is greater than the warning interval but less than the error interval (or if it is greater than the warning interval and no error interval is defined), then a warning will be generated for that account.
	IdleAccountWarningInterval string `json:"idleAccountWarningInterval"`
	// The length of time to use as the error interval for idle accounts. If the length of time since a user last authenticated is greater than the error interval, then an error will be generated for that account. If no error interval is defined, then only the warning interval will be used.
	IdleAccountErrorInterval *string `json:"idleAccountErrorInterval,omitempty"`
	// The length of time to use as the warning interval for accounts that do not appear to have authenticated. If this is not specified, then the idle account warning interval will be used.
	NeverLoggedInAccountWarningInterval *string `json:"neverLoggedInAccountWarningInterval,omitempty"`
	// The length of time to use as the error interval for accounts that do not appear to have authenticated. If this is not specified, then the never-logged-in warning interval will be used. The idle account warning and error intervals will be used if no never-logged-in interval is configured.
	NeverLoggedInAccountErrorInterval *string `json:"neverLoggedInAccountErrorInterval,omitempty"`
	// Indicates whether the Data Security Auditor is enabled for use.
	Enabled bool `json:"enabled"`
	// Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
	IncludeAttribute []string `json:"includeAttribute,omitempty"`
	// Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
	AuditBackend                                  []string                                           `json:"auditBackend,omitempty"`
	AuditSeverity                                 *EnumdataSecurityAuditorAuditSeverityProp          `json:"auditSeverity,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewIdleAccountDataSecurityAuditorResponse instantiates a new IdleAccountDataSecurityAuditorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdleAccountDataSecurityAuditorResponse(id string, schemas []EnumidleAccountDataSecurityAuditorSchemaUrn, reportFile string, idleAccountWarningInterval string, enabled bool) *IdleAccountDataSecurityAuditorResponse {
	this := IdleAccountDataSecurityAuditorResponse{}
	this.Id = id
	this.Schemas = schemas
	this.ReportFile = reportFile
	this.IdleAccountWarningInterval = idleAccountWarningInterval
	this.Enabled = enabled
	return &this
}

// NewIdleAccountDataSecurityAuditorResponseWithDefaults instantiates a new IdleAccountDataSecurityAuditorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdleAccountDataSecurityAuditorResponseWithDefaults() *IdleAccountDataSecurityAuditorResponse {
	this := IdleAccountDataSecurityAuditorResponse{}
	return &this
}

// GetId returns the Id field value
func (o *IdleAccountDataSecurityAuditorResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *IdleAccountDataSecurityAuditorResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *IdleAccountDataSecurityAuditorResponse) GetSchemas() []EnumidleAccountDataSecurityAuditorSchemaUrn {
	if o == nil {
		var ret []EnumidleAccountDataSecurityAuditorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetSchemasOk() ([]EnumidleAccountDataSecurityAuditorSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *IdleAccountDataSecurityAuditorResponse) SetSchemas(v []EnumidleAccountDataSecurityAuditorSchemaUrn) {
	o.Schemas = v
}

// GetReportFile returns the ReportFile field value
func (o *IdleAccountDataSecurityAuditorResponse) GetReportFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportFile
}

// GetReportFileOk returns a tuple with the ReportFile field value
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetReportFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportFile, true
}

// SetReportFile sets field value
func (o *IdleAccountDataSecurityAuditorResponse) SetReportFile(v string) {
	o.ReportFile = v
}

// GetIdleAccountWarningInterval returns the IdleAccountWarningInterval field value
func (o *IdleAccountDataSecurityAuditorResponse) GetIdleAccountWarningInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IdleAccountWarningInterval
}

// GetIdleAccountWarningIntervalOk returns a tuple with the IdleAccountWarningInterval field value
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetIdleAccountWarningIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IdleAccountWarningInterval, true
}

// SetIdleAccountWarningInterval sets field value
func (o *IdleAccountDataSecurityAuditorResponse) SetIdleAccountWarningInterval(v string) {
	o.IdleAccountWarningInterval = v
}

// GetIdleAccountErrorInterval returns the IdleAccountErrorInterval field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetIdleAccountErrorInterval() string {
	if o == nil || IsNil(o.IdleAccountErrorInterval) {
		var ret string
		return ret
	}
	return *o.IdleAccountErrorInterval
}

// GetIdleAccountErrorIntervalOk returns a tuple with the IdleAccountErrorInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetIdleAccountErrorIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.IdleAccountErrorInterval) {
		return nil, false
	}
	return o.IdleAccountErrorInterval, true
}

// HasIdleAccountErrorInterval returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasIdleAccountErrorInterval() bool {
	if o != nil && !IsNil(o.IdleAccountErrorInterval) {
		return true
	}

	return false
}

// SetIdleAccountErrorInterval gets a reference to the given string and assigns it to the IdleAccountErrorInterval field.
func (o *IdleAccountDataSecurityAuditorResponse) SetIdleAccountErrorInterval(v string) {
	o.IdleAccountErrorInterval = &v
}

// GetNeverLoggedInAccountWarningInterval returns the NeverLoggedInAccountWarningInterval field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetNeverLoggedInAccountWarningInterval() string {
	if o == nil || IsNil(o.NeverLoggedInAccountWarningInterval) {
		var ret string
		return ret
	}
	return *o.NeverLoggedInAccountWarningInterval
}

// GetNeverLoggedInAccountWarningIntervalOk returns a tuple with the NeverLoggedInAccountWarningInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetNeverLoggedInAccountWarningIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.NeverLoggedInAccountWarningInterval) {
		return nil, false
	}
	return o.NeverLoggedInAccountWarningInterval, true
}

// HasNeverLoggedInAccountWarningInterval returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasNeverLoggedInAccountWarningInterval() bool {
	if o != nil && !IsNil(o.NeverLoggedInAccountWarningInterval) {
		return true
	}

	return false
}

// SetNeverLoggedInAccountWarningInterval gets a reference to the given string and assigns it to the NeverLoggedInAccountWarningInterval field.
func (o *IdleAccountDataSecurityAuditorResponse) SetNeverLoggedInAccountWarningInterval(v string) {
	o.NeverLoggedInAccountWarningInterval = &v
}

// GetNeverLoggedInAccountErrorInterval returns the NeverLoggedInAccountErrorInterval field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetNeverLoggedInAccountErrorInterval() string {
	if o == nil || IsNil(o.NeverLoggedInAccountErrorInterval) {
		var ret string
		return ret
	}
	return *o.NeverLoggedInAccountErrorInterval
}

// GetNeverLoggedInAccountErrorIntervalOk returns a tuple with the NeverLoggedInAccountErrorInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetNeverLoggedInAccountErrorIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.NeverLoggedInAccountErrorInterval) {
		return nil, false
	}
	return o.NeverLoggedInAccountErrorInterval, true
}

// HasNeverLoggedInAccountErrorInterval returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasNeverLoggedInAccountErrorInterval() bool {
	if o != nil && !IsNil(o.NeverLoggedInAccountErrorInterval) {
		return true
	}

	return false
}

// SetNeverLoggedInAccountErrorInterval gets a reference to the given string and assigns it to the NeverLoggedInAccountErrorInterval field.
func (o *IdleAccountDataSecurityAuditorResponse) SetNeverLoggedInAccountErrorInterval(v string) {
	o.NeverLoggedInAccountErrorInterval = &v
}

// GetEnabled returns the Enabled field value
func (o *IdleAccountDataSecurityAuditorResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *IdleAccountDataSecurityAuditorResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetIncludeAttribute returns the IncludeAttribute field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetIncludeAttribute() []string {
	if o == nil || IsNil(o.IncludeAttribute) {
		var ret []string
		return ret
	}
	return o.IncludeAttribute
}

// GetIncludeAttributeOk returns a tuple with the IncludeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetIncludeAttributeOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeAttribute) {
		return nil, false
	}
	return o.IncludeAttribute, true
}

// HasIncludeAttribute returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasIncludeAttribute() bool {
	if o != nil && !IsNil(o.IncludeAttribute) {
		return true
	}

	return false
}

// SetIncludeAttribute gets a reference to the given []string and assigns it to the IncludeAttribute field.
func (o *IdleAccountDataSecurityAuditorResponse) SetIncludeAttribute(v []string) {
	o.IncludeAttribute = v
}

// GetAuditBackend returns the AuditBackend field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetAuditBackend() []string {
	if o == nil || IsNil(o.AuditBackend) {
		var ret []string
		return ret
	}
	return o.AuditBackend
}

// GetAuditBackendOk returns a tuple with the AuditBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetAuditBackendOk() ([]string, bool) {
	if o == nil || IsNil(o.AuditBackend) {
		return nil, false
	}
	return o.AuditBackend, true
}

// HasAuditBackend returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasAuditBackend() bool {
	if o != nil && !IsNil(o.AuditBackend) {
		return true
	}

	return false
}

// SetAuditBackend gets a reference to the given []string and assigns it to the AuditBackend field.
func (o *IdleAccountDataSecurityAuditorResponse) SetAuditBackend(v []string) {
	o.AuditBackend = v
}

// GetAuditSeverity returns the AuditSeverity field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetAuditSeverity() EnumdataSecurityAuditorAuditSeverityProp {
	if o == nil || IsNil(o.AuditSeverity) {
		var ret EnumdataSecurityAuditorAuditSeverityProp
		return ret
	}
	return *o.AuditSeverity
}

// GetAuditSeverityOk returns a tuple with the AuditSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetAuditSeverityOk() (*EnumdataSecurityAuditorAuditSeverityProp, bool) {
	if o == nil || IsNil(o.AuditSeverity) {
		return nil, false
	}
	return o.AuditSeverity, true
}

// HasAuditSeverity returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasAuditSeverity() bool {
	if o != nil && !IsNil(o.AuditSeverity) {
		return true
	}

	return false
}

// SetAuditSeverity gets a reference to the given EnumdataSecurityAuditorAuditSeverityProp and assigns it to the AuditSeverity field.
func (o *IdleAccountDataSecurityAuditorResponse) SetAuditSeverity(v EnumdataSecurityAuditorAuditSeverityProp) {
	o.AuditSeverity = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *IdleAccountDataSecurityAuditorResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *IdleAccountDataSecurityAuditorResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleAccountDataSecurityAuditorResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *IdleAccountDataSecurityAuditorResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *IdleAccountDataSecurityAuditorResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o IdleAccountDataSecurityAuditorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdleAccountDataSecurityAuditorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	toSerialize["reportFile"] = o.ReportFile
	toSerialize["idleAccountWarningInterval"] = o.IdleAccountWarningInterval
	if !IsNil(o.IdleAccountErrorInterval) {
		toSerialize["idleAccountErrorInterval"] = o.IdleAccountErrorInterval
	}
	if !IsNil(o.NeverLoggedInAccountWarningInterval) {
		toSerialize["neverLoggedInAccountWarningInterval"] = o.NeverLoggedInAccountWarningInterval
	}
	if !IsNil(o.NeverLoggedInAccountErrorInterval) {
		toSerialize["neverLoggedInAccountErrorInterval"] = o.NeverLoggedInAccountErrorInterval
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.IncludeAttribute) {
		toSerialize["includeAttribute"] = o.IncludeAttribute
	}
	if !IsNil(o.AuditBackend) {
		toSerialize["auditBackend"] = o.AuditBackend
	}
	if !IsNil(o.AuditSeverity) {
		toSerialize["auditSeverity"] = o.AuditSeverity
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableIdleAccountDataSecurityAuditorResponse struct {
	value *IdleAccountDataSecurityAuditorResponse
	isSet bool
}

func (v NullableIdleAccountDataSecurityAuditorResponse) Get() *IdleAccountDataSecurityAuditorResponse {
	return v.value
}

func (v *NullableIdleAccountDataSecurityAuditorResponse) Set(val *IdleAccountDataSecurityAuditorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIdleAccountDataSecurityAuditorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIdleAccountDataSecurityAuditorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdleAccountDataSecurityAuditorResponse(val *IdleAccountDataSecurityAuditorResponse) *NullableIdleAccountDataSecurityAuditorResponse {
	return &NullableIdleAccountDataSecurityAuditorResponse{value: val, isSet: true}
}

func (v NullableIdleAccountDataSecurityAuditorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdleAccountDataSecurityAuditorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
