/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn the model 'EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn'
type EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn string

// List of Enumping-identity-inter-server-sasl-mechanism-handlerSchemaUrn
const (
	ENUMPINGIDENTITYINTERSERVERSASLMECHANISMHANDLERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERPING_IDENTITY_INTER_SERVER EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:ping-identity-inter-server"
)

// All allowed values of EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn enum
var AllowedEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnEnumValues = []EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:ping-identity-inter-server",
}

func (v *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn", value)
}

// NewEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn, error) {
	ev := EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumping-identity-inter-server-sasl-mechanism-handlerSchemaUrn value
func (v EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) Ptr() *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn struct {
	value *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) Get() *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) Set(val *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn(val *EnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) *NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn {
	return &NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpingIdentityInterServerSaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
