/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddCertificateDelegatedAdminAttributeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddCertificateDelegatedAdminAttributeRequest{}

// AddCertificateDelegatedAdminAttributeRequest struct for AddCertificateDelegatedAdminAttributeRequest
type AddCertificateDelegatedAdminAttributeRequest struct {
	// Specifies the name or OID of the LDAP attribute type.
	AttributeType string                                            `json:"attributeType"`
	Schemas       []EnumcertificateDelegatedAdminAttributeSchemaUrn `json:"schemas"`
	// The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
	AllowedMIMEType []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp `json:"allowedMIMEType,omitempty"`
	// A description for this Delegated Admin Attribute
	Description *string `json:"description,omitempty"`
	// A human readable display name for this Delegated Admin Attribute.
	DisplayName string                                     `json:"displayName"`
	Mutability  *EnumdelegatedAdminAttributeMutabilityProp `json:"mutability,omitempty"`
	// Indicates whether this Delegated Admin Attribute may have multiple values.
	MultiValued *bool `json:"multiValued,omitempty"`
	// Specifies which attribute category this attribute belongs to.
	AttributeCategory *string `json:"attributeCategory,omitempty"`
	// This property determines a display order for attributes within a given attribute category. Attributes are ordered within their category based on this index from least to greatest.
	DisplayOrderIndex *int32 `json:"displayOrderIndex,omitempty"`
	// For LDAP attributes with DN syntax, specifies what kind of resource is referenced.
	ReferenceResourceType *string                                               `json:"referenceResourceType,omitempty"`
	AttributePresentation *EnumdelegatedAdminAttributeAttributePresentationProp `json:"attributePresentation,omitempty"`
	// Specifies the format string that is used to present a date and/or time value to the user of the app. This property only applies to LDAP attribute types whose LDAP syntax is GeneralizedTime and is ignored if the attribute type has any other syntax.
	DateTimeFormat *string `json:"dateTimeFormat,omitempty"`
}

// NewAddCertificateDelegatedAdminAttributeRequest instantiates a new AddCertificateDelegatedAdminAttributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddCertificateDelegatedAdminAttributeRequest(attributeType string, schemas []EnumcertificateDelegatedAdminAttributeSchemaUrn, displayName string) *AddCertificateDelegatedAdminAttributeRequest {
	this := AddCertificateDelegatedAdminAttributeRequest{}
	this.AttributeType = attributeType
	this.Schemas = schemas
	this.DisplayName = displayName
	return &this
}

// NewAddCertificateDelegatedAdminAttributeRequestWithDefaults instantiates a new AddCertificateDelegatedAdminAttributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddCertificateDelegatedAdminAttributeRequestWithDefaults() *AddCertificateDelegatedAdminAttributeRequest {
	this := AddCertificateDelegatedAdminAttributeRequest{}
	return &this
}

// GetAttributeType returns the AttributeType field value
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *AddCertificateDelegatedAdminAttributeRequest) SetAttributeType(v string) {
	o.AttributeType = v
}

// GetSchemas returns the Schemas field value
func (o *AddCertificateDelegatedAdminAttributeRequest) GetSchemas() []EnumcertificateDelegatedAdminAttributeSchemaUrn {
	if o == nil {
		var ret []EnumcertificateDelegatedAdminAttributeSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetSchemasOk() ([]EnumcertificateDelegatedAdminAttributeSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddCertificateDelegatedAdminAttributeRequest) SetSchemas(v []EnumcertificateDelegatedAdminAttributeSchemaUrn) {
	o.Schemas = v
}

// GetAllowedMIMEType returns the AllowedMIMEType field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAllowedMIMEType() []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp {
	if o == nil || IsNil(o.AllowedMIMEType) {
		var ret []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp
		return ret
	}
	return o.AllowedMIMEType
}

// GetAllowedMIMETypeOk returns a tuple with the AllowedMIMEType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAllowedMIMETypeOk() ([]EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp, bool) {
	if o == nil || IsNil(o.AllowedMIMEType) {
		return nil, false
	}
	return o.AllowedMIMEType, true
}

// HasAllowedMIMEType returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasAllowedMIMEType() bool {
	if o != nil && !IsNil(o.AllowedMIMEType) {
		return true
	}

	return false
}

// SetAllowedMIMEType gets a reference to the given []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp and assigns it to the AllowedMIMEType field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetAllowedMIMEType(v []EnumdelegatedAdminAttributeCertificateAllowedMIMETypeProp) {
	o.AllowedMIMEType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetDisplayName returns the DisplayName field value
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisplayName, true
}

// SetDisplayName sets field value
func (o *AddCertificateDelegatedAdminAttributeRequest) SetDisplayName(v string) {
	o.DisplayName = v
}

// GetMutability returns the Mutability field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetMutability() EnumdelegatedAdminAttributeMutabilityProp {
	if o == nil || IsNil(o.Mutability) {
		var ret EnumdelegatedAdminAttributeMutabilityProp
		return ret
	}
	return *o.Mutability
}

// GetMutabilityOk returns a tuple with the Mutability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetMutabilityOk() (*EnumdelegatedAdminAttributeMutabilityProp, bool) {
	if o == nil || IsNil(o.Mutability) {
		return nil, false
	}
	return o.Mutability, true
}

// HasMutability returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasMutability() bool {
	if o != nil && !IsNil(o.Mutability) {
		return true
	}

	return false
}

// SetMutability gets a reference to the given EnumdelegatedAdminAttributeMutabilityProp and assigns it to the Mutability field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetMutability(v EnumdelegatedAdminAttributeMutabilityProp) {
	o.Mutability = &v
}

// GetMultiValued returns the MultiValued field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetMultiValued() bool {
	if o == nil || IsNil(o.MultiValued) {
		var ret bool
		return ret
	}
	return *o.MultiValued
}

// GetMultiValuedOk returns a tuple with the MultiValued field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetMultiValuedOk() (*bool, bool) {
	if o == nil || IsNil(o.MultiValued) {
		return nil, false
	}
	return o.MultiValued, true
}

// HasMultiValued returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasMultiValued() bool {
	if o != nil && !IsNil(o.MultiValued) {
		return true
	}

	return false
}

// SetMultiValued gets a reference to the given bool and assigns it to the MultiValued field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetMultiValued(v bool) {
	o.MultiValued = &v
}

// GetAttributeCategory returns the AttributeCategory field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributeCategory() string {
	if o == nil || IsNil(o.AttributeCategory) {
		var ret string
		return ret
	}
	return *o.AttributeCategory
}

// GetAttributeCategoryOk returns a tuple with the AttributeCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributeCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.AttributeCategory) {
		return nil, false
	}
	return o.AttributeCategory, true
}

// HasAttributeCategory returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasAttributeCategory() bool {
	if o != nil && !IsNil(o.AttributeCategory) {
		return true
	}

	return false
}

// SetAttributeCategory gets a reference to the given string and assigns it to the AttributeCategory field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetAttributeCategory(v string) {
	o.AttributeCategory = &v
}

// GetDisplayOrderIndex returns the DisplayOrderIndex field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDisplayOrderIndex() int32 {
	if o == nil || IsNil(o.DisplayOrderIndex) {
		var ret int32
		return ret
	}
	return *o.DisplayOrderIndex
}

// GetDisplayOrderIndexOk returns a tuple with the DisplayOrderIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDisplayOrderIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.DisplayOrderIndex) {
		return nil, false
	}
	return o.DisplayOrderIndex, true
}

// HasDisplayOrderIndex returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasDisplayOrderIndex() bool {
	if o != nil && !IsNil(o.DisplayOrderIndex) {
		return true
	}

	return false
}

// SetDisplayOrderIndex gets a reference to the given int32 and assigns it to the DisplayOrderIndex field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetDisplayOrderIndex(v int32) {
	o.DisplayOrderIndex = &v
}

// GetReferenceResourceType returns the ReferenceResourceType field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetReferenceResourceType() string {
	if o == nil || IsNil(o.ReferenceResourceType) {
		var ret string
		return ret
	}
	return *o.ReferenceResourceType
}

// GetReferenceResourceTypeOk returns a tuple with the ReferenceResourceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetReferenceResourceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ReferenceResourceType) {
		return nil, false
	}
	return o.ReferenceResourceType, true
}

// HasReferenceResourceType returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasReferenceResourceType() bool {
	if o != nil && !IsNil(o.ReferenceResourceType) {
		return true
	}

	return false
}

// SetReferenceResourceType gets a reference to the given string and assigns it to the ReferenceResourceType field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetReferenceResourceType(v string) {
	o.ReferenceResourceType = &v
}

// GetAttributePresentation returns the AttributePresentation field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributePresentation() EnumdelegatedAdminAttributeAttributePresentationProp {
	if o == nil || IsNil(o.AttributePresentation) {
		var ret EnumdelegatedAdminAttributeAttributePresentationProp
		return ret
	}
	return *o.AttributePresentation
}

// GetAttributePresentationOk returns a tuple with the AttributePresentation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetAttributePresentationOk() (*EnumdelegatedAdminAttributeAttributePresentationProp, bool) {
	if o == nil || IsNil(o.AttributePresentation) {
		return nil, false
	}
	return o.AttributePresentation, true
}

// HasAttributePresentation returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasAttributePresentation() bool {
	if o != nil && !IsNil(o.AttributePresentation) {
		return true
	}

	return false
}

// SetAttributePresentation gets a reference to the given EnumdelegatedAdminAttributeAttributePresentationProp and assigns it to the AttributePresentation field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetAttributePresentation(v EnumdelegatedAdminAttributeAttributePresentationProp) {
	o.AttributePresentation = &v
}

// GetDateTimeFormat returns the DateTimeFormat field value if set, zero value otherwise.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDateTimeFormat() string {
	if o == nil || IsNil(o.DateTimeFormat) {
		var ret string
		return ret
	}
	return *o.DateTimeFormat
}

// GetDateTimeFormatOk returns a tuple with the DateTimeFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) GetDateTimeFormatOk() (*string, bool) {
	if o == nil || IsNil(o.DateTimeFormat) {
		return nil, false
	}
	return o.DateTimeFormat, true
}

// HasDateTimeFormat returns a boolean if a field has been set.
func (o *AddCertificateDelegatedAdminAttributeRequest) HasDateTimeFormat() bool {
	if o != nil && !IsNil(o.DateTimeFormat) {
		return true
	}

	return false
}

// SetDateTimeFormat gets a reference to the given string and assigns it to the DateTimeFormat field.
func (o *AddCertificateDelegatedAdminAttributeRequest) SetDateTimeFormat(v string) {
	o.DateTimeFormat = &v
}

func (o AddCertificateDelegatedAdminAttributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddCertificateDelegatedAdminAttributeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeType"] = o.AttributeType
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.AllowedMIMEType) {
		toSerialize["allowedMIMEType"] = o.AllowedMIMEType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["displayName"] = o.DisplayName
	if !IsNil(o.Mutability) {
		toSerialize["mutability"] = o.Mutability
	}
	if !IsNil(o.MultiValued) {
		toSerialize["multiValued"] = o.MultiValued
	}
	if !IsNil(o.AttributeCategory) {
		toSerialize["attributeCategory"] = o.AttributeCategory
	}
	if !IsNil(o.DisplayOrderIndex) {
		toSerialize["displayOrderIndex"] = o.DisplayOrderIndex
	}
	if !IsNil(o.ReferenceResourceType) {
		toSerialize["referenceResourceType"] = o.ReferenceResourceType
	}
	if !IsNil(o.AttributePresentation) {
		toSerialize["attributePresentation"] = o.AttributePresentation
	}
	if !IsNil(o.DateTimeFormat) {
		toSerialize["dateTimeFormat"] = o.DateTimeFormat
	}
	return toSerialize, nil
}

type NullableAddCertificateDelegatedAdminAttributeRequest struct {
	value *AddCertificateDelegatedAdminAttributeRequest
	isSet bool
}

func (v NullableAddCertificateDelegatedAdminAttributeRequest) Get() *AddCertificateDelegatedAdminAttributeRequest {
	return v.value
}

func (v *NullableAddCertificateDelegatedAdminAttributeRequest) Set(val *AddCertificateDelegatedAdminAttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddCertificateDelegatedAdminAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddCertificateDelegatedAdminAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddCertificateDelegatedAdminAttributeRequest(val *AddCertificateDelegatedAdminAttributeRequest) *NullableAddCertificateDelegatedAdminAttributeRequest {
	return &NullableAddCertificateDelegatedAdminAttributeRequest{value: val, isSet: true}
}

func (v NullableAddCertificateDelegatedAdminAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddCertificateDelegatedAdminAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
