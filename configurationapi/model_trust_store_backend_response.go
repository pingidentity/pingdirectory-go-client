/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the TrustStoreBackendResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrustStoreBackendResponse{}

// TrustStoreBackendResponse struct for TrustStoreBackendResponse
type TrustStoreBackendResponse struct {
	Schemas []EnumtrustStoreBackendSchemaUrn `json:"schemas"`
	// Name of the Backend
	Id string `json:"id"`
	// Specifies a name to identify the associated backend.
	BackendID string `json:"backendID"`
	// Specifies the base DN(s) for the data that the backend handles.
	BaseDN          []string                       `json:"baseDN"`
	WritabilityMode EnumbackendWritabilityModeProp `json:"writabilityMode"`
	// Specifies the path to the file that stores the trust information.
	TrustStoreFile string `json:"trustStoreFile"`
	// Specifies the format for the data in the key store file.
	TrustStoreType *string `json:"trustStoreType,omitempty"`
	// Specifies the clear-text PIN needed to access the Trust Store Backend.
	TrustStorePin *string `json:"trustStorePin,omitempty"`
	// Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the Trust Store Backend.
	TrustStorePinFile *string `json:"trustStorePinFile,omitempty"`
	// The passphrase provider to use to obtain the clear-text PIN needed to access the Trust Store Backend.
	TrustStorePinPassphraseProvider *string `json:"trustStorePinPassphraseProvider,omitempty"`
	// A description for this Backend
	Description *string `json:"description,omitempty"`
	// Indicates whether the backend is enabled in the server.
	Enabled bool `json:"enabled"`
	// Determines whether the Directory Server enters a DEGRADED state (and sends a corresponding alert) when this Backend is disabled.
	SetDegradedAlertWhenDisabled *bool `json:"setDegradedAlertWhenDisabled,omitempty"`
	// Determines whether any LDAP operation that would use this Backend is to return UNAVAILABLE when this Backend is disabled.
	ReturnUnavailableWhenDisabled *bool `json:"returnUnavailableWhenDisabled,omitempty"`
	// Specifies the permissions that should be applied to files and directories created by a backup of the backend.
	BackupFilePermissions *string `json:"backupFilePermissions,omitempty"`
	// Specifies a notification manager for changes resulting from operations processed through this Backend
	NotificationManager                           *string                                            `json:"notificationManager,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewTrustStoreBackendResponse instantiates a new TrustStoreBackendResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrustStoreBackendResponse(schemas []EnumtrustStoreBackendSchemaUrn, id string, backendID string, baseDN []string, writabilityMode EnumbackendWritabilityModeProp, trustStoreFile string, enabled bool) *TrustStoreBackendResponse {
	this := TrustStoreBackendResponse{}
	this.Schemas = schemas
	this.Id = id
	this.BackendID = backendID
	this.BaseDN = baseDN
	this.WritabilityMode = writabilityMode
	this.TrustStoreFile = trustStoreFile
	this.Enabled = enabled
	return &this
}

// NewTrustStoreBackendResponseWithDefaults instantiates a new TrustStoreBackendResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrustStoreBackendResponseWithDefaults() *TrustStoreBackendResponse {
	this := TrustStoreBackendResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *TrustStoreBackendResponse) GetSchemas() []EnumtrustStoreBackendSchemaUrn {
	if o == nil {
		var ret []EnumtrustStoreBackendSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetSchemasOk() ([]EnumtrustStoreBackendSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *TrustStoreBackendResponse) SetSchemas(v []EnumtrustStoreBackendSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *TrustStoreBackendResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *TrustStoreBackendResponse) SetId(v string) {
	o.Id = v
}

// GetBackendID returns the BackendID field value
func (o *TrustStoreBackendResponse) GetBackendID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BackendID
}

// GetBackendIDOk returns a tuple with the BackendID field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetBackendIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BackendID, true
}

// SetBackendID sets field value
func (o *TrustStoreBackendResponse) SetBackendID(v string) {
	o.BackendID = v
}

// GetBaseDN returns the BaseDN field value
func (o *TrustStoreBackendResponse) GetBaseDN() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.BaseDN
}

// GetBaseDNOk returns a tuple with the BaseDN field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetBaseDNOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaseDN, true
}

// SetBaseDN sets field value
func (o *TrustStoreBackendResponse) SetBaseDN(v []string) {
	o.BaseDN = v
}

// GetWritabilityMode returns the WritabilityMode field value
func (o *TrustStoreBackendResponse) GetWritabilityMode() EnumbackendWritabilityModeProp {
	if o == nil {
		var ret EnumbackendWritabilityModeProp
		return ret
	}

	return o.WritabilityMode
}

// GetWritabilityModeOk returns a tuple with the WritabilityMode field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetWritabilityModeOk() (*EnumbackendWritabilityModeProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.WritabilityMode, true
}

// SetWritabilityMode sets field value
func (o *TrustStoreBackendResponse) SetWritabilityMode(v EnumbackendWritabilityModeProp) {
	o.WritabilityMode = v
}

// GetTrustStoreFile returns the TrustStoreFile field value
func (o *TrustStoreBackendResponse) GetTrustStoreFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrustStoreFile
}

// GetTrustStoreFileOk returns a tuple with the TrustStoreFile field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetTrustStoreFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrustStoreFile, true
}

// SetTrustStoreFile sets field value
func (o *TrustStoreBackendResponse) SetTrustStoreFile(v string) {
	o.TrustStoreFile = v
}

// GetTrustStoreType returns the TrustStoreType field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetTrustStoreType() string {
	if o == nil || IsNil(o.TrustStoreType) {
		var ret string
		return ret
	}
	return *o.TrustStoreType
}

// GetTrustStoreTypeOk returns a tuple with the TrustStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetTrustStoreTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStoreType) {
		return nil, false
	}
	return o.TrustStoreType, true
}

// HasTrustStoreType returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasTrustStoreType() bool {
	if o != nil && !IsNil(o.TrustStoreType) {
		return true
	}

	return false
}

// SetTrustStoreType gets a reference to the given string and assigns it to the TrustStoreType field.
func (o *TrustStoreBackendResponse) SetTrustStoreType(v string) {
	o.TrustStoreType = &v
}

// GetTrustStorePin returns the TrustStorePin field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetTrustStorePin() string {
	if o == nil || IsNil(o.TrustStorePin) {
		var ret string
		return ret
	}
	return *o.TrustStorePin
}

// GetTrustStorePinOk returns a tuple with the TrustStorePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetTrustStorePinOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStorePin) {
		return nil, false
	}
	return o.TrustStorePin, true
}

// HasTrustStorePin returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasTrustStorePin() bool {
	if o != nil && !IsNil(o.TrustStorePin) {
		return true
	}

	return false
}

// SetTrustStorePin gets a reference to the given string and assigns it to the TrustStorePin field.
func (o *TrustStoreBackendResponse) SetTrustStorePin(v string) {
	o.TrustStorePin = &v
}

// GetTrustStorePinFile returns the TrustStorePinFile field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetTrustStorePinFile() string {
	if o == nil || IsNil(o.TrustStorePinFile) {
		var ret string
		return ret
	}
	return *o.TrustStorePinFile
}

// GetTrustStorePinFileOk returns a tuple with the TrustStorePinFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetTrustStorePinFileOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStorePinFile) {
		return nil, false
	}
	return o.TrustStorePinFile, true
}

// HasTrustStorePinFile returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasTrustStorePinFile() bool {
	if o != nil && !IsNil(o.TrustStorePinFile) {
		return true
	}

	return false
}

// SetTrustStorePinFile gets a reference to the given string and assigns it to the TrustStorePinFile field.
func (o *TrustStoreBackendResponse) SetTrustStorePinFile(v string) {
	o.TrustStorePinFile = &v
}

// GetTrustStorePinPassphraseProvider returns the TrustStorePinPassphraseProvider field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetTrustStorePinPassphraseProvider() string {
	if o == nil || IsNil(o.TrustStorePinPassphraseProvider) {
		var ret string
		return ret
	}
	return *o.TrustStorePinPassphraseProvider
}

// GetTrustStorePinPassphraseProviderOk returns a tuple with the TrustStorePinPassphraseProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetTrustStorePinPassphraseProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStorePinPassphraseProvider) {
		return nil, false
	}
	return o.TrustStorePinPassphraseProvider, true
}

// HasTrustStorePinPassphraseProvider returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasTrustStorePinPassphraseProvider() bool {
	if o != nil && !IsNil(o.TrustStorePinPassphraseProvider) {
		return true
	}

	return false
}

// SetTrustStorePinPassphraseProvider gets a reference to the given string and assigns it to the TrustStorePinPassphraseProvider field.
func (o *TrustStoreBackendResponse) SetTrustStorePinPassphraseProvider(v string) {
	o.TrustStorePinPassphraseProvider = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *TrustStoreBackendResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *TrustStoreBackendResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *TrustStoreBackendResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetSetDegradedAlertWhenDisabled returns the SetDegradedAlertWhenDisabled field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetSetDegradedAlertWhenDisabled() bool {
	if o == nil || IsNil(o.SetDegradedAlertWhenDisabled) {
		var ret bool
		return ret
	}
	return *o.SetDegradedAlertWhenDisabled
}

// GetSetDegradedAlertWhenDisabledOk returns a tuple with the SetDegradedAlertWhenDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetSetDegradedAlertWhenDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SetDegradedAlertWhenDisabled) {
		return nil, false
	}
	return o.SetDegradedAlertWhenDisabled, true
}

// HasSetDegradedAlertWhenDisabled returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasSetDegradedAlertWhenDisabled() bool {
	if o != nil && !IsNil(o.SetDegradedAlertWhenDisabled) {
		return true
	}

	return false
}

// SetSetDegradedAlertWhenDisabled gets a reference to the given bool and assigns it to the SetDegradedAlertWhenDisabled field.
func (o *TrustStoreBackendResponse) SetSetDegradedAlertWhenDisabled(v bool) {
	o.SetDegradedAlertWhenDisabled = &v
}

// GetReturnUnavailableWhenDisabled returns the ReturnUnavailableWhenDisabled field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetReturnUnavailableWhenDisabled() bool {
	if o == nil || IsNil(o.ReturnUnavailableWhenDisabled) {
		var ret bool
		return ret
	}
	return *o.ReturnUnavailableWhenDisabled
}

// GetReturnUnavailableWhenDisabledOk returns a tuple with the ReturnUnavailableWhenDisabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetReturnUnavailableWhenDisabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ReturnUnavailableWhenDisabled) {
		return nil, false
	}
	return o.ReturnUnavailableWhenDisabled, true
}

// HasReturnUnavailableWhenDisabled returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasReturnUnavailableWhenDisabled() bool {
	if o != nil && !IsNil(o.ReturnUnavailableWhenDisabled) {
		return true
	}

	return false
}

// SetReturnUnavailableWhenDisabled gets a reference to the given bool and assigns it to the ReturnUnavailableWhenDisabled field.
func (o *TrustStoreBackendResponse) SetReturnUnavailableWhenDisabled(v bool) {
	o.ReturnUnavailableWhenDisabled = &v
}

// GetBackupFilePermissions returns the BackupFilePermissions field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetBackupFilePermissions() string {
	if o == nil || IsNil(o.BackupFilePermissions) {
		var ret string
		return ret
	}
	return *o.BackupFilePermissions
}

// GetBackupFilePermissionsOk returns a tuple with the BackupFilePermissions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetBackupFilePermissionsOk() (*string, bool) {
	if o == nil || IsNil(o.BackupFilePermissions) {
		return nil, false
	}
	return o.BackupFilePermissions, true
}

// HasBackupFilePermissions returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasBackupFilePermissions() bool {
	if o != nil && !IsNil(o.BackupFilePermissions) {
		return true
	}

	return false
}

// SetBackupFilePermissions gets a reference to the given string and assigns it to the BackupFilePermissions field.
func (o *TrustStoreBackendResponse) SetBackupFilePermissions(v string) {
	o.BackupFilePermissions = &v
}

// GetNotificationManager returns the NotificationManager field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetNotificationManager() string {
	if o == nil || IsNil(o.NotificationManager) {
		var ret string
		return ret
	}
	return *o.NotificationManager
}

// GetNotificationManagerOk returns a tuple with the NotificationManager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetNotificationManagerOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationManager) {
		return nil, false
	}
	return o.NotificationManager, true
}

// HasNotificationManager returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasNotificationManager() bool {
	if o != nil && !IsNil(o.NotificationManager) {
		return true
	}

	return false
}

// SetNotificationManager gets a reference to the given string and assigns it to the NotificationManager field.
func (o *TrustStoreBackendResponse) SetNotificationManager(v string) {
	o.NotificationManager = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *TrustStoreBackendResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *TrustStoreBackendResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrustStoreBackendResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *TrustStoreBackendResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *TrustStoreBackendResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o TrustStoreBackendResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrustStoreBackendResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["backendID"] = o.BackendID
	toSerialize["baseDN"] = o.BaseDN
	toSerialize["writabilityMode"] = o.WritabilityMode
	toSerialize["trustStoreFile"] = o.TrustStoreFile
	if !IsNil(o.TrustStoreType) {
		toSerialize["trustStoreType"] = o.TrustStoreType
	}
	if !IsNil(o.TrustStorePin) {
		toSerialize["trustStorePin"] = o.TrustStorePin
	}
	if !IsNil(o.TrustStorePinFile) {
		toSerialize["trustStorePinFile"] = o.TrustStorePinFile
	}
	if !IsNil(o.TrustStorePinPassphraseProvider) {
		toSerialize["trustStorePinPassphraseProvider"] = o.TrustStorePinPassphraseProvider
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.SetDegradedAlertWhenDisabled) {
		toSerialize["setDegradedAlertWhenDisabled"] = o.SetDegradedAlertWhenDisabled
	}
	if !IsNil(o.ReturnUnavailableWhenDisabled) {
		toSerialize["returnUnavailableWhenDisabled"] = o.ReturnUnavailableWhenDisabled
	}
	if !IsNil(o.BackupFilePermissions) {
		toSerialize["backupFilePermissions"] = o.BackupFilePermissions
	}
	if !IsNil(o.NotificationManager) {
		toSerialize["notificationManager"] = o.NotificationManager
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableTrustStoreBackendResponse struct {
	value *TrustStoreBackendResponse
	isSet bool
}

func (v NullableTrustStoreBackendResponse) Get() *TrustStoreBackendResponse {
	return v.value
}

func (v *NullableTrustStoreBackendResponse) Set(val *TrustStoreBackendResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustStoreBackendResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustStoreBackendResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustStoreBackendResponse(val *TrustStoreBackendResponse) *NullableTrustStoreBackendResponse {
	return &NullableTrustStoreBackendResponse{value: val, isSet: true}
}

func (v NullableTrustStoreBackendResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustStoreBackendResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
