/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// PasswordGeneratorListResponseResourcesInner - struct for PasswordGeneratorListResponseResourcesInner
type PasswordGeneratorListResponseResourcesInner struct {
	GroovyScriptedPasswordGeneratorResponse *GroovyScriptedPasswordGeneratorResponse
	PassphrasePasswordGeneratorResponse     *PassphrasePasswordGeneratorResponse
	RandomPasswordGeneratorResponse         *RandomPasswordGeneratorResponse
	ThirdPartyPasswordGeneratorResponse     *ThirdPartyPasswordGeneratorResponse
}

// GroovyScriptedPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner is a convenience function that returns GroovyScriptedPasswordGeneratorResponse wrapped in PasswordGeneratorListResponseResourcesInner
func GroovyScriptedPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner(v *GroovyScriptedPasswordGeneratorResponse) PasswordGeneratorListResponseResourcesInner {
	return PasswordGeneratorListResponseResourcesInner{
		GroovyScriptedPasswordGeneratorResponse: v,
	}
}

// PassphrasePasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner is a convenience function that returns PassphrasePasswordGeneratorResponse wrapped in PasswordGeneratorListResponseResourcesInner
func PassphrasePasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner(v *PassphrasePasswordGeneratorResponse) PasswordGeneratorListResponseResourcesInner {
	return PasswordGeneratorListResponseResourcesInner{
		PassphrasePasswordGeneratorResponse: v,
	}
}

// RandomPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner is a convenience function that returns RandomPasswordGeneratorResponse wrapped in PasswordGeneratorListResponseResourcesInner
func RandomPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner(v *RandomPasswordGeneratorResponse) PasswordGeneratorListResponseResourcesInner {
	return PasswordGeneratorListResponseResourcesInner{
		RandomPasswordGeneratorResponse: v,
	}
}

// ThirdPartyPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner is a convenience function that returns ThirdPartyPasswordGeneratorResponse wrapped in PasswordGeneratorListResponseResourcesInner
func ThirdPartyPasswordGeneratorResponseAsPasswordGeneratorListResponseResourcesInner(v *ThirdPartyPasswordGeneratorResponse) PasswordGeneratorListResponseResourcesInner {
	return PasswordGeneratorListResponseResourcesInner{
		ThirdPartyPasswordGeneratorResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *PasswordGeneratorListResponseResourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into GroovyScriptedPasswordGeneratorResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedPasswordGeneratorResponse)
	if err == nil {
		jsonGroovyScriptedPasswordGeneratorResponse, _ := json.Marshal(dst.GroovyScriptedPasswordGeneratorResponse)
		if string(jsonGroovyScriptedPasswordGeneratorResponse) == "{}" { // empty struct
			dst.GroovyScriptedPasswordGeneratorResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedPasswordGeneratorResponse = nil
	}

	// try to unmarshal data into PassphrasePasswordGeneratorResponse
	err = newStrictDecoder(data).Decode(&dst.PassphrasePasswordGeneratorResponse)
	if err == nil {
		jsonPassphrasePasswordGeneratorResponse, _ := json.Marshal(dst.PassphrasePasswordGeneratorResponse)
		if string(jsonPassphrasePasswordGeneratorResponse) == "{}" { // empty struct
			dst.PassphrasePasswordGeneratorResponse = nil
		} else {
			match++
		}
	} else {
		dst.PassphrasePasswordGeneratorResponse = nil
	}

	// try to unmarshal data into RandomPasswordGeneratorResponse
	err = newStrictDecoder(data).Decode(&dst.RandomPasswordGeneratorResponse)
	if err == nil {
		jsonRandomPasswordGeneratorResponse, _ := json.Marshal(dst.RandomPasswordGeneratorResponse)
		if string(jsonRandomPasswordGeneratorResponse) == "{}" { // empty struct
			dst.RandomPasswordGeneratorResponse = nil
		} else {
			match++
		}
	} else {
		dst.RandomPasswordGeneratorResponse = nil
	}

	// try to unmarshal data into ThirdPartyPasswordGeneratorResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyPasswordGeneratorResponse)
	if err == nil {
		jsonThirdPartyPasswordGeneratorResponse, _ := json.Marshal(dst.ThirdPartyPasswordGeneratorResponse)
		if string(jsonThirdPartyPasswordGeneratorResponse) == "{}" { // empty struct
			dst.ThirdPartyPasswordGeneratorResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyPasswordGeneratorResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.GroovyScriptedPasswordGeneratorResponse = nil
		dst.PassphrasePasswordGeneratorResponse = nil
		dst.RandomPasswordGeneratorResponse = nil
		dst.ThirdPartyPasswordGeneratorResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(PasswordGeneratorListResponseResourcesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(PasswordGeneratorListResponseResourcesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src PasswordGeneratorListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	if src.GroovyScriptedPasswordGeneratorResponse != nil {
		return json.Marshal(&src.GroovyScriptedPasswordGeneratorResponse)
	}

	if src.PassphrasePasswordGeneratorResponse != nil {
		return json.Marshal(&src.PassphrasePasswordGeneratorResponse)
	}

	if src.RandomPasswordGeneratorResponse != nil {
		return json.Marshal(&src.RandomPasswordGeneratorResponse)
	}

	if src.ThirdPartyPasswordGeneratorResponse != nil {
		return json.Marshal(&src.ThirdPartyPasswordGeneratorResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *PasswordGeneratorListResponseResourcesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.GroovyScriptedPasswordGeneratorResponse != nil {
		return obj.GroovyScriptedPasswordGeneratorResponse
	}

	if obj.PassphrasePasswordGeneratorResponse != nil {
		return obj.PassphrasePasswordGeneratorResponse
	}

	if obj.RandomPasswordGeneratorResponse != nil {
		return obj.RandomPasswordGeneratorResponse
	}

	if obj.ThirdPartyPasswordGeneratorResponse != nil {
		return obj.ThirdPartyPasswordGeneratorResponse
	}

	// all schemas are nil
	return nil
}

type NullablePasswordGeneratorListResponseResourcesInner struct {
	value *PasswordGeneratorListResponseResourcesInner
	isSet bool
}

func (v NullablePasswordGeneratorListResponseResourcesInner) Get() *PasswordGeneratorListResponseResourcesInner {
	return v.value
}

func (v *NullablePasswordGeneratorListResponseResourcesInner) Set(val *PasswordGeneratorListResponseResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullablePasswordGeneratorListResponseResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullablePasswordGeneratorListResponseResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePasswordGeneratorListResponseResourcesInner(val *PasswordGeneratorListResponseResourcesInner) *NullablePasswordGeneratorListResponseResourcesInner {
	return &NullablePasswordGeneratorListResponseResourcesInner{value: val, isSet: true}
}

func (v NullablePasswordGeneratorListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePasswordGeneratorListResponseResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
