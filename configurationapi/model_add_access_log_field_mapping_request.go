/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddAccessLogFieldMappingRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddAccessLogFieldMappingRequest{}

// AddAccessLogFieldMappingRequest struct for AddAccessLogFieldMappingRequest
type AddAccessLogFieldMappingRequest struct {
	Schemas []EnumaccessLogFieldMappingSchemaUrn `json:"schemas"`
	// The time that the operation was processed.
	LogFieldTimestamp *string `json:"logFieldTimestamp,omitempty"`
	// The connection ID assigned to the client connection.
	LogFieldConnectionID *string `json:"logFieldConnectionID,omitempty"`
	// The startup ID for the Directory Server. A different value will be generated each time the server is started, and it may be used to distinguish between operations with the same connection ID and operation ID across server restarts.
	LogFieldStartupid *string `json:"logFieldStartupid,omitempty"`
	// The name for this Directory Server product, which may be used to identify which product was used to log the message if multiple products log to the same database table.
	LogFieldProductName *string `json:"logFieldProductName,omitempty"`
	// A name that uniquely identifies this Directory Server instance, which may be used to identify which instance was used to log the message if multiple server instances log to the same database table.
	LogFieldInstanceName *string `json:"logFieldInstanceName,omitempty"`
	// The operation ID for the operation processed by the server.
	LogFieldOperationID *string `json:"logFieldOperationID,omitempty"`
	// The type of log message. Message types may include \"CONNECT\", \"DISCONNECT\", \"FORWARD\", \"RESULT\", \"ENTRY\", or \"REFERENCE\".
	LogFieldMessageType *string `json:"logFieldMessageType,omitempty"`
	// The type of operation that was processed.
	LogFieldOperationType *string `json:"logFieldOperationType,omitempty"`
	// The message ID included in the client request.
	LogFieldMessageID *string `json:"logFieldMessageID,omitempty"`
	// The numeric result code for the operation.
	LogFieldResultCode *string `json:"logFieldResultCode,omitempty"`
	// The diagnostic message for the operation.
	LogFieldMessage *string `json:"logFieldMessage,omitempty"`
	// The origin for the operation. Values may include \"replication\" (if the operation was received via replication), \"internal\" (if it was an internal operation processed by a server component), or \"external\" (if it was a request from a client).
	LogFieldOrigin *string `json:"logFieldOrigin,omitempty"`
	// The DN of the user that requested the operation.
	LogFieldRequesterDN *string `json:"logFieldRequesterDN,omitempty"`
	// The reason that the client connection was closed.
	LogFieldDisconnectReason *string `json:"logFieldDisconnectReason,omitempty"`
	// Indicates whether the old RDN values should be removed from an entry while processing a modify DN operation.
	LogFieldDeleteOldRDN *string `json:"logFieldDeleteOldRDN,omitempty"`
	// The DN of the user that authenticated to the server.
	LogFieldAuthenticatedUserDN *string `json:"logFieldAuthenticatedUserDN,omitempty"`
	// The length of time (in milliseconds with microsecond accuracy) required to process the operation.
	LogFieldProcessingTime *string `json:"logFieldProcessingTime,omitempty"`
	// The set of requested attributes for the search operation.
	LogFieldRequestedAttributes *string `json:"logFieldRequestedAttributes,omitempty"`
	// The name of the SASL mechanism used to authenticate.
	LogFieldSASLMechanismName *string `json:"logFieldSASLMechanismName,omitempty"`
	// The new RDN to use for a modify DN operation.
	LogFieldNewRDN *string `json:"logFieldNewRDN,omitempty"`
	// The base DN for a search operation.
	LogFieldBaseDN *string `json:"logFieldBaseDN,omitempty"`
	// The bind DN for a bind operation.
	LogFieldBindDN *string `json:"logFieldBindDN,omitempty"`
	// The DN of the superior entry closest to the DN specified by the client.
	LogFieldMatchedDN *string `json:"logFieldMatchedDN,omitempty"`
	// The IP address of the client that requested the operation.
	LogFieldRequesterIPAddress *string `json:"logFieldRequesterIPAddress,omitempty"`
	// The type of authentication requested by the client.
	LogFieldAuthenticationType *string `json:"logFieldAuthenticationType,omitempty"`
	// The new superior DN from a modify DN operation.
	LogFieldNewSuperiorDN *string `json:"logFieldNewSuperiorDN,omitempty"`
	// The filter from a search operation.
	LogFieldFilter *string `json:"logFieldFilter,omitempty"`
	// The DN of the alternate authorization identity used when processing the operation.
	LogFieldAlternateAuthorizationDN *string `json:"logFieldAlternateAuthorizationDN,omitempty"`
	// The DN of the entry targeted by the operation.
	LogFieldEntryDN *string `json:"logFieldEntryDN,omitempty"`
	// The number of search result entries returned to the client.
	LogFieldEntriesReturned *string `json:"logFieldEntriesReturned,omitempty"`
	// The numeric identifier for the authentication failure reason.
	LogFieldAuthenticationFailureID *string `json:"logFieldAuthenticationFailureID,omitempty"`
	// The OID of an extended request.
	LogFieldRequestOID *string `json:"logFieldRequestOID,omitempty"`
	// The OID of an extended response.
	LogFieldResponseOID *string `json:"logFieldResponseOID,omitempty"`
	// The protocol used when forwarding the request to a backend server.
	LogFieldTargetProtocol *string `json:"logFieldTargetProtocol,omitempty"`
	// The network port of the Directory Server to which the client connection has been established, or of the backend server to which the request has been forwarded.
	LogFieldTargetPort *string `json:"logFieldTargetPort,omitempty"`
	// The network address of the Directory Server to which the client connection has been established.
	LogFieldTargetAddress *string `json:"logFieldTargetAddress,omitempty"`
	// The name of the attribute targeted by a compare operation.
	LogFieldTargetAttribute *string `json:"logFieldTargetAttribute,omitempty"`
	// The address of the server to which the request has been forwarded.
	LogFieldTargetHost *string `json:"logFieldTargetHost,omitempty"`
	// The protocol version used by the client when communicating with the Directory Server.
	LogFieldProtocolVersion *string `json:"logFieldProtocolVersion,omitempty"`
	// The name of the protocol the client is using to communicate with the Directory Server.
	LogFieldProtocolName *string `json:"logFieldProtocolName,omitempty"`
	// A message explaining the reason that the authentication attempt failed.
	LogFieldAuthenticationFailureReason *string `json:"logFieldAuthenticationFailureReason,omitempty"`
	// Additional information about the operation that was processed which was not returned to the client.
	LogFieldAdditionalInformation *string `json:"logFieldAdditionalInformation,omitempty"`
	// Indicates whether the requested search operation was unindexed.
	LogFieldUnindexed *string `json:"logFieldUnindexed,omitempty"`
	// The scope for the search operation.
	LogFieldScope *string `json:"logFieldScope,omitempty"`
	// The referral URLs returned to the client.
	LogFieldReferralUrls *string `json:"logFieldReferralUrls,omitempty"`
	// The address of the client from which the connection was established.
	LogFieldSourceAddress *string `json:"logFieldSourceAddress,omitempty"`
	// The message ID of the operation to be abandoned.
	LogFieldMessageIDToAbandon *string `json:"logFieldMessageIDToAbandon,omitempty"`
	// The OIDs of the response controls returned to the client.
	LogFieldResponseControls *string `json:"logFieldResponseControls,omitempty"`
	// The OIDs of the request controls returned to the client.
	LogFieldRequestControls *string `json:"logFieldRequestControls,omitempty"`
	// The contents of the intermediate client response control returned to the client.
	LogFieldIntermediateClientResult *string `json:"logFieldIntermediateClientResult,omitempty"`
	// The contents of the intermediate client request control provided by the client.
	LogFieldIntermediateClientRequest *string `json:"logFieldIntermediateClientRequest,omitempty"`
	// The replication change ID.
	LogFieldReplicationChangeID *string `json:"logFieldReplicationChangeID,omitempty"`
	// A description for this Log Field Mapping
	Description *string `json:"description,omitempty"`
	// Name of the new Log Field Mapping
	MappingName string `json:"mappingName"`
}

// NewAddAccessLogFieldMappingRequest instantiates a new AddAccessLogFieldMappingRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAccessLogFieldMappingRequest(schemas []EnumaccessLogFieldMappingSchemaUrn, mappingName string) *AddAccessLogFieldMappingRequest {
	this := AddAccessLogFieldMappingRequest{}
	this.Schemas = schemas
	this.MappingName = mappingName
	return &this
}

// NewAddAccessLogFieldMappingRequestWithDefaults instantiates a new AddAccessLogFieldMappingRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAccessLogFieldMappingRequestWithDefaults() *AddAccessLogFieldMappingRequest {
	this := AddAccessLogFieldMappingRequest{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AddAccessLogFieldMappingRequest) GetSchemas() []EnumaccessLogFieldMappingSchemaUrn {
	if o == nil {
		var ret []EnumaccessLogFieldMappingSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetSchemasOk() ([]EnumaccessLogFieldMappingSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddAccessLogFieldMappingRequest) SetSchemas(v []EnumaccessLogFieldMappingSchemaUrn) {
	o.Schemas = v
}

// GetLogFieldTimestamp returns the LogFieldTimestamp field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTimestamp() string {
	if o == nil || IsNil(o.LogFieldTimestamp) {
		var ret string
		return ret
	}
	return *o.LogFieldTimestamp
}

// GetLogFieldTimestampOk returns a tuple with the LogFieldTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTimestampOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTimestamp) {
		return nil, false
	}
	return o.LogFieldTimestamp, true
}

// HasLogFieldTimestamp returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTimestamp() bool {
	if o != nil && !IsNil(o.LogFieldTimestamp) {
		return true
	}

	return false
}

// SetLogFieldTimestamp gets a reference to the given string and assigns it to the LogFieldTimestamp field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTimestamp(v string) {
	o.LogFieldTimestamp = &v
}

// GetLogFieldConnectionID returns the LogFieldConnectionID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldConnectionID() string {
	if o == nil || IsNil(o.LogFieldConnectionID) {
		var ret string
		return ret
	}
	return *o.LogFieldConnectionID
}

// GetLogFieldConnectionIDOk returns a tuple with the LogFieldConnectionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldConnectionIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldConnectionID) {
		return nil, false
	}
	return o.LogFieldConnectionID, true
}

// HasLogFieldConnectionID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldConnectionID() bool {
	if o != nil && !IsNil(o.LogFieldConnectionID) {
		return true
	}

	return false
}

// SetLogFieldConnectionID gets a reference to the given string and assigns it to the LogFieldConnectionID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldConnectionID(v string) {
	o.LogFieldConnectionID = &v
}

// GetLogFieldStartupid returns the LogFieldStartupid field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldStartupid() string {
	if o == nil || IsNil(o.LogFieldStartupid) {
		var ret string
		return ret
	}
	return *o.LogFieldStartupid
}

// GetLogFieldStartupidOk returns a tuple with the LogFieldStartupid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldStartupidOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldStartupid) {
		return nil, false
	}
	return o.LogFieldStartupid, true
}

// HasLogFieldStartupid returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldStartupid() bool {
	if o != nil && !IsNil(o.LogFieldStartupid) {
		return true
	}

	return false
}

// SetLogFieldStartupid gets a reference to the given string and assigns it to the LogFieldStartupid field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldStartupid(v string) {
	o.LogFieldStartupid = &v
}

// GetLogFieldProductName returns the LogFieldProductName field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProductName() string {
	if o == nil || IsNil(o.LogFieldProductName) {
		var ret string
		return ret
	}
	return *o.LogFieldProductName
}

// GetLogFieldProductNameOk returns a tuple with the LogFieldProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProductNameOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldProductName) {
		return nil, false
	}
	return o.LogFieldProductName, true
}

// HasLogFieldProductName returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldProductName() bool {
	if o != nil && !IsNil(o.LogFieldProductName) {
		return true
	}

	return false
}

// SetLogFieldProductName gets a reference to the given string and assigns it to the LogFieldProductName field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldProductName(v string) {
	o.LogFieldProductName = &v
}

// GetLogFieldInstanceName returns the LogFieldInstanceName field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldInstanceName() string {
	if o == nil || IsNil(o.LogFieldInstanceName) {
		var ret string
		return ret
	}
	return *o.LogFieldInstanceName
}

// GetLogFieldInstanceNameOk returns a tuple with the LogFieldInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldInstanceNameOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldInstanceName) {
		return nil, false
	}
	return o.LogFieldInstanceName, true
}

// HasLogFieldInstanceName returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldInstanceName() bool {
	if o != nil && !IsNil(o.LogFieldInstanceName) {
		return true
	}

	return false
}

// SetLogFieldInstanceName gets a reference to the given string and assigns it to the LogFieldInstanceName field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldInstanceName(v string) {
	o.LogFieldInstanceName = &v
}

// GetLogFieldOperationID returns the LogFieldOperationID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOperationID() string {
	if o == nil || IsNil(o.LogFieldOperationID) {
		var ret string
		return ret
	}
	return *o.LogFieldOperationID
}

// GetLogFieldOperationIDOk returns a tuple with the LogFieldOperationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOperationIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldOperationID) {
		return nil, false
	}
	return o.LogFieldOperationID, true
}

// HasLogFieldOperationID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldOperationID() bool {
	if o != nil && !IsNil(o.LogFieldOperationID) {
		return true
	}

	return false
}

// SetLogFieldOperationID gets a reference to the given string and assigns it to the LogFieldOperationID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldOperationID(v string) {
	o.LogFieldOperationID = &v
}

// GetLogFieldMessageType returns the LogFieldMessageType field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageType() string {
	if o == nil || IsNil(o.LogFieldMessageType) {
		var ret string
		return ret
	}
	return *o.LogFieldMessageType
}

// GetLogFieldMessageTypeOk returns a tuple with the LogFieldMessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldMessageType) {
		return nil, false
	}
	return o.LogFieldMessageType, true
}

// HasLogFieldMessageType returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldMessageType() bool {
	if o != nil && !IsNil(o.LogFieldMessageType) {
		return true
	}

	return false
}

// SetLogFieldMessageType gets a reference to the given string and assigns it to the LogFieldMessageType field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldMessageType(v string) {
	o.LogFieldMessageType = &v
}

// GetLogFieldOperationType returns the LogFieldOperationType field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOperationType() string {
	if o == nil || IsNil(o.LogFieldOperationType) {
		var ret string
		return ret
	}
	return *o.LogFieldOperationType
}

// GetLogFieldOperationTypeOk returns a tuple with the LogFieldOperationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOperationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldOperationType) {
		return nil, false
	}
	return o.LogFieldOperationType, true
}

// HasLogFieldOperationType returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldOperationType() bool {
	if o != nil && !IsNil(o.LogFieldOperationType) {
		return true
	}

	return false
}

// SetLogFieldOperationType gets a reference to the given string and assigns it to the LogFieldOperationType field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldOperationType(v string) {
	o.LogFieldOperationType = &v
}

// GetLogFieldMessageID returns the LogFieldMessageID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageID() string {
	if o == nil || IsNil(o.LogFieldMessageID) {
		var ret string
		return ret
	}
	return *o.LogFieldMessageID
}

// GetLogFieldMessageIDOk returns a tuple with the LogFieldMessageID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldMessageID) {
		return nil, false
	}
	return o.LogFieldMessageID, true
}

// HasLogFieldMessageID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldMessageID() bool {
	if o != nil && !IsNil(o.LogFieldMessageID) {
		return true
	}

	return false
}

// SetLogFieldMessageID gets a reference to the given string and assigns it to the LogFieldMessageID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldMessageID(v string) {
	o.LogFieldMessageID = &v
}

// GetLogFieldResultCode returns the LogFieldResultCode field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResultCode() string {
	if o == nil || IsNil(o.LogFieldResultCode) {
		var ret string
		return ret
	}
	return *o.LogFieldResultCode
}

// GetLogFieldResultCodeOk returns a tuple with the LogFieldResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResultCodeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldResultCode) {
		return nil, false
	}
	return o.LogFieldResultCode, true
}

// HasLogFieldResultCode returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldResultCode() bool {
	if o != nil && !IsNil(o.LogFieldResultCode) {
		return true
	}

	return false
}

// SetLogFieldResultCode gets a reference to the given string and assigns it to the LogFieldResultCode field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldResultCode(v string) {
	o.LogFieldResultCode = &v
}

// GetLogFieldMessage returns the LogFieldMessage field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessage() string {
	if o == nil || IsNil(o.LogFieldMessage) {
		var ret string
		return ret
	}
	return *o.LogFieldMessage
}

// GetLogFieldMessageOk returns a tuple with the LogFieldMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldMessage) {
		return nil, false
	}
	return o.LogFieldMessage, true
}

// HasLogFieldMessage returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldMessage() bool {
	if o != nil && !IsNil(o.LogFieldMessage) {
		return true
	}

	return false
}

// SetLogFieldMessage gets a reference to the given string and assigns it to the LogFieldMessage field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldMessage(v string) {
	o.LogFieldMessage = &v
}

// GetLogFieldOrigin returns the LogFieldOrigin field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOrigin() string {
	if o == nil || IsNil(o.LogFieldOrigin) {
		var ret string
		return ret
	}
	return *o.LogFieldOrigin
}

// GetLogFieldOriginOk returns a tuple with the LogFieldOrigin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldOriginOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldOrigin) {
		return nil, false
	}
	return o.LogFieldOrigin, true
}

// HasLogFieldOrigin returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldOrigin() bool {
	if o != nil && !IsNil(o.LogFieldOrigin) {
		return true
	}

	return false
}

// SetLogFieldOrigin gets a reference to the given string and assigns it to the LogFieldOrigin field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldOrigin(v string) {
	o.LogFieldOrigin = &v
}

// GetLogFieldRequesterDN returns the LogFieldRequesterDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequesterDN() string {
	if o == nil || IsNil(o.LogFieldRequesterDN) {
		var ret string
		return ret
	}
	return *o.LogFieldRequesterDN
}

// GetLogFieldRequesterDNOk returns a tuple with the LogFieldRequesterDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequesterDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldRequesterDN) {
		return nil, false
	}
	return o.LogFieldRequesterDN, true
}

// HasLogFieldRequesterDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldRequesterDN() bool {
	if o != nil && !IsNil(o.LogFieldRequesterDN) {
		return true
	}

	return false
}

// SetLogFieldRequesterDN gets a reference to the given string and assigns it to the LogFieldRequesterDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldRequesterDN(v string) {
	o.LogFieldRequesterDN = &v
}

// GetLogFieldDisconnectReason returns the LogFieldDisconnectReason field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldDisconnectReason() string {
	if o == nil || IsNil(o.LogFieldDisconnectReason) {
		var ret string
		return ret
	}
	return *o.LogFieldDisconnectReason
}

// GetLogFieldDisconnectReasonOk returns a tuple with the LogFieldDisconnectReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldDisconnectReasonOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldDisconnectReason) {
		return nil, false
	}
	return o.LogFieldDisconnectReason, true
}

// HasLogFieldDisconnectReason returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldDisconnectReason() bool {
	if o != nil && !IsNil(o.LogFieldDisconnectReason) {
		return true
	}

	return false
}

// SetLogFieldDisconnectReason gets a reference to the given string and assigns it to the LogFieldDisconnectReason field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldDisconnectReason(v string) {
	o.LogFieldDisconnectReason = &v
}

// GetLogFieldDeleteOldRDN returns the LogFieldDeleteOldRDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldDeleteOldRDN() string {
	if o == nil || IsNil(o.LogFieldDeleteOldRDN) {
		var ret string
		return ret
	}
	return *o.LogFieldDeleteOldRDN
}

// GetLogFieldDeleteOldRDNOk returns a tuple with the LogFieldDeleteOldRDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldDeleteOldRDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldDeleteOldRDN) {
		return nil, false
	}
	return o.LogFieldDeleteOldRDN, true
}

// HasLogFieldDeleteOldRDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldDeleteOldRDN() bool {
	if o != nil && !IsNil(o.LogFieldDeleteOldRDN) {
		return true
	}

	return false
}

// SetLogFieldDeleteOldRDN gets a reference to the given string and assigns it to the LogFieldDeleteOldRDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldDeleteOldRDN(v string) {
	o.LogFieldDeleteOldRDN = &v
}

// GetLogFieldAuthenticatedUserDN returns the LogFieldAuthenticatedUserDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticatedUserDN() string {
	if o == nil || IsNil(o.LogFieldAuthenticatedUserDN) {
		var ret string
		return ret
	}
	return *o.LogFieldAuthenticatedUserDN
}

// GetLogFieldAuthenticatedUserDNOk returns a tuple with the LogFieldAuthenticatedUserDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticatedUserDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAuthenticatedUserDN) {
		return nil, false
	}
	return o.LogFieldAuthenticatedUserDN, true
}

// HasLogFieldAuthenticatedUserDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAuthenticatedUserDN() bool {
	if o != nil && !IsNil(o.LogFieldAuthenticatedUserDN) {
		return true
	}

	return false
}

// SetLogFieldAuthenticatedUserDN gets a reference to the given string and assigns it to the LogFieldAuthenticatedUserDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAuthenticatedUserDN(v string) {
	o.LogFieldAuthenticatedUserDN = &v
}

// GetLogFieldProcessingTime returns the LogFieldProcessingTime field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProcessingTime() string {
	if o == nil || IsNil(o.LogFieldProcessingTime) {
		var ret string
		return ret
	}
	return *o.LogFieldProcessingTime
}

// GetLogFieldProcessingTimeOk returns a tuple with the LogFieldProcessingTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProcessingTimeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldProcessingTime) {
		return nil, false
	}
	return o.LogFieldProcessingTime, true
}

// HasLogFieldProcessingTime returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldProcessingTime() bool {
	if o != nil && !IsNil(o.LogFieldProcessingTime) {
		return true
	}

	return false
}

// SetLogFieldProcessingTime gets a reference to the given string and assigns it to the LogFieldProcessingTime field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldProcessingTime(v string) {
	o.LogFieldProcessingTime = &v
}

// GetLogFieldRequestedAttributes returns the LogFieldRequestedAttributes field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestedAttributes() string {
	if o == nil || IsNil(o.LogFieldRequestedAttributes) {
		var ret string
		return ret
	}
	return *o.LogFieldRequestedAttributes
}

// GetLogFieldRequestedAttributesOk returns a tuple with the LogFieldRequestedAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestedAttributesOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldRequestedAttributes) {
		return nil, false
	}
	return o.LogFieldRequestedAttributes, true
}

// HasLogFieldRequestedAttributes returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldRequestedAttributes() bool {
	if o != nil && !IsNil(o.LogFieldRequestedAttributes) {
		return true
	}

	return false
}

// SetLogFieldRequestedAttributes gets a reference to the given string and assigns it to the LogFieldRequestedAttributes field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldRequestedAttributes(v string) {
	o.LogFieldRequestedAttributes = &v
}

// GetLogFieldSASLMechanismName returns the LogFieldSASLMechanismName field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldSASLMechanismName() string {
	if o == nil || IsNil(o.LogFieldSASLMechanismName) {
		var ret string
		return ret
	}
	return *o.LogFieldSASLMechanismName
}

// GetLogFieldSASLMechanismNameOk returns a tuple with the LogFieldSASLMechanismName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldSASLMechanismNameOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldSASLMechanismName) {
		return nil, false
	}
	return o.LogFieldSASLMechanismName, true
}

// HasLogFieldSASLMechanismName returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldSASLMechanismName() bool {
	if o != nil && !IsNil(o.LogFieldSASLMechanismName) {
		return true
	}

	return false
}

// SetLogFieldSASLMechanismName gets a reference to the given string and assigns it to the LogFieldSASLMechanismName field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldSASLMechanismName(v string) {
	o.LogFieldSASLMechanismName = &v
}

// GetLogFieldNewRDN returns the LogFieldNewRDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldNewRDN() string {
	if o == nil || IsNil(o.LogFieldNewRDN) {
		var ret string
		return ret
	}
	return *o.LogFieldNewRDN
}

// GetLogFieldNewRDNOk returns a tuple with the LogFieldNewRDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldNewRDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldNewRDN) {
		return nil, false
	}
	return o.LogFieldNewRDN, true
}

// HasLogFieldNewRDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldNewRDN() bool {
	if o != nil && !IsNil(o.LogFieldNewRDN) {
		return true
	}

	return false
}

// SetLogFieldNewRDN gets a reference to the given string and assigns it to the LogFieldNewRDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldNewRDN(v string) {
	o.LogFieldNewRDN = &v
}

// GetLogFieldBaseDN returns the LogFieldBaseDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldBaseDN() string {
	if o == nil || IsNil(o.LogFieldBaseDN) {
		var ret string
		return ret
	}
	return *o.LogFieldBaseDN
}

// GetLogFieldBaseDNOk returns a tuple with the LogFieldBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldBaseDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldBaseDN) {
		return nil, false
	}
	return o.LogFieldBaseDN, true
}

// HasLogFieldBaseDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldBaseDN() bool {
	if o != nil && !IsNil(o.LogFieldBaseDN) {
		return true
	}

	return false
}

// SetLogFieldBaseDN gets a reference to the given string and assigns it to the LogFieldBaseDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldBaseDN(v string) {
	o.LogFieldBaseDN = &v
}

// GetLogFieldBindDN returns the LogFieldBindDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldBindDN() string {
	if o == nil || IsNil(o.LogFieldBindDN) {
		var ret string
		return ret
	}
	return *o.LogFieldBindDN
}

// GetLogFieldBindDNOk returns a tuple with the LogFieldBindDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldBindDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldBindDN) {
		return nil, false
	}
	return o.LogFieldBindDN, true
}

// HasLogFieldBindDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldBindDN() bool {
	if o != nil && !IsNil(o.LogFieldBindDN) {
		return true
	}

	return false
}

// SetLogFieldBindDN gets a reference to the given string and assigns it to the LogFieldBindDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldBindDN(v string) {
	o.LogFieldBindDN = &v
}

// GetLogFieldMatchedDN returns the LogFieldMatchedDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMatchedDN() string {
	if o == nil || IsNil(o.LogFieldMatchedDN) {
		var ret string
		return ret
	}
	return *o.LogFieldMatchedDN
}

// GetLogFieldMatchedDNOk returns a tuple with the LogFieldMatchedDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMatchedDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldMatchedDN) {
		return nil, false
	}
	return o.LogFieldMatchedDN, true
}

// HasLogFieldMatchedDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldMatchedDN() bool {
	if o != nil && !IsNil(o.LogFieldMatchedDN) {
		return true
	}

	return false
}

// SetLogFieldMatchedDN gets a reference to the given string and assigns it to the LogFieldMatchedDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldMatchedDN(v string) {
	o.LogFieldMatchedDN = &v
}

// GetLogFieldRequesterIPAddress returns the LogFieldRequesterIPAddress field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequesterIPAddress() string {
	if o == nil || IsNil(o.LogFieldRequesterIPAddress) {
		var ret string
		return ret
	}
	return *o.LogFieldRequesterIPAddress
}

// GetLogFieldRequesterIPAddressOk returns a tuple with the LogFieldRequesterIPAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequesterIPAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldRequesterIPAddress) {
		return nil, false
	}
	return o.LogFieldRequesterIPAddress, true
}

// HasLogFieldRequesterIPAddress returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldRequesterIPAddress() bool {
	if o != nil && !IsNil(o.LogFieldRequesterIPAddress) {
		return true
	}

	return false
}

// SetLogFieldRequesterIPAddress gets a reference to the given string and assigns it to the LogFieldRequesterIPAddress field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldRequesterIPAddress(v string) {
	o.LogFieldRequesterIPAddress = &v
}

// GetLogFieldAuthenticationType returns the LogFieldAuthenticationType field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationType() string {
	if o == nil || IsNil(o.LogFieldAuthenticationType) {
		var ret string
		return ret
	}
	return *o.LogFieldAuthenticationType
}

// GetLogFieldAuthenticationTypeOk returns a tuple with the LogFieldAuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAuthenticationType) {
		return nil, false
	}
	return o.LogFieldAuthenticationType, true
}

// HasLogFieldAuthenticationType returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAuthenticationType() bool {
	if o != nil && !IsNil(o.LogFieldAuthenticationType) {
		return true
	}

	return false
}

// SetLogFieldAuthenticationType gets a reference to the given string and assigns it to the LogFieldAuthenticationType field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAuthenticationType(v string) {
	o.LogFieldAuthenticationType = &v
}

// GetLogFieldNewSuperiorDN returns the LogFieldNewSuperiorDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldNewSuperiorDN() string {
	if o == nil || IsNil(o.LogFieldNewSuperiorDN) {
		var ret string
		return ret
	}
	return *o.LogFieldNewSuperiorDN
}

// GetLogFieldNewSuperiorDNOk returns a tuple with the LogFieldNewSuperiorDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldNewSuperiorDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldNewSuperiorDN) {
		return nil, false
	}
	return o.LogFieldNewSuperiorDN, true
}

// HasLogFieldNewSuperiorDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldNewSuperiorDN() bool {
	if o != nil && !IsNil(o.LogFieldNewSuperiorDN) {
		return true
	}

	return false
}

// SetLogFieldNewSuperiorDN gets a reference to the given string and assigns it to the LogFieldNewSuperiorDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldNewSuperiorDN(v string) {
	o.LogFieldNewSuperiorDN = &v
}

// GetLogFieldFilter returns the LogFieldFilter field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldFilter() string {
	if o == nil || IsNil(o.LogFieldFilter) {
		var ret string
		return ret
	}
	return *o.LogFieldFilter
}

// GetLogFieldFilterOk returns a tuple with the LogFieldFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldFilterOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldFilter) {
		return nil, false
	}
	return o.LogFieldFilter, true
}

// HasLogFieldFilter returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldFilter() bool {
	if o != nil && !IsNil(o.LogFieldFilter) {
		return true
	}

	return false
}

// SetLogFieldFilter gets a reference to the given string and assigns it to the LogFieldFilter field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldFilter(v string) {
	o.LogFieldFilter = &v
}

// GetLogFieldAlternateAuthorizationDN returns the LogFieldAlternateAuthorizationDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAlternateAuthorizationDN() string {
	if o == nil || IsNil(o.LogFieldAlternateAuthorizationDN) {
		var ret string
		return ret
	}
	return *o.LogFieldAlternateAuthorizationDN
}

// GetLogFieldAlternateAuthorizationDNOk returns a tuple with the LogFieldAlternateAuthorizationDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAlternateAuthorizationDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAlternateAuthorizationDN) {
		return nil, false
	}
	return o.LogFieldAlternateAuthorizationDN, true
}

// HasLogFieldAlternateAuthorizationDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAlternateAuthorizationDN() bool {
	if o != nil && !IsNil(o.LogFieldAlternateAuthorizationDN) {
		return true
	}

	return false
}

// SetLogFieldAlternateAuthorizationDN gets a reference to the given string and assigns it to the LogFieldAlternateAuthorizationDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAlternateAuthorizationDN(v string) {
	o.LogFieldAlternateAuthorizationDN = &v
}

// GetLogFieldEntryDN returns the LogFieldEntryDN field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldEntryDN() string {
	if o == nil || IsNil(o.LogFieldEntryDN) {
		var ret string
		return ret
	}
	return *o.LogFieldEntryDN
}

// GetLogFieldEntryDNOk returns a tuple with the LogFieldEntryDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldEntryDNOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldEntryDN) {
		return nil, false
	}
	return o.LogFieldEntryDN, true
}

// HasLogFieldEntryDN returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldEntryDN() bool {
	if o != nil && !IsNil(o.LogFieldEntryDN) {
		return true
	}

	return false
}

// SetLogFieldEntryDN gets a reference to the given string and assigns it to the LogFieldEntryDN field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldEntryDN(v string) {
	o.LogFieldEntryDN = &v
}

// GetLogFieldEntriesReturned returns the LogFieldEntriesReturned field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldEntriesReturned() string {
	if o == nil || IsNil(o.LogFieldEntriesReturned) {
		var ret string
		return ret
	}
	return *o.LogFieldEntriesReturned
}

// GetLogFieldEntriesReturnedOk returns a tuple with the LogFieldEntriesReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldEntriesReturnedOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldEntriesReturned) {
		return nil, false
	}
	return o.LogFieldEntriesReturned, true
}

// HasLogFieldEntriesReturned returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldEntriesReturned() bool {
	if o != nil && !IsNil(o.LogFieldEntriesReturned) {
		return true
	}

	return false
}

// SetLogFieldEntriesReturned gets a reference to the given string and assigns it to the LogFieldEntriesReturned field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldEntriesReturned(v string) {
	o.LogFieldEntriesReturned = &v
}

// GetLogFieldAuthenticationFailureID returns the LogFieldAuthenticationFailureID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationFailureID() string {
	if o == nil || IsNil(o.LogFieldAuthenticationFailureID) {
		var ret string
		return ret
	}
	return *o.LogFieldAuthenticationFailureID
}

// GetLogFieldAuthenticationFailureIDOk returns a tuple with the LogFieldAuthenticationFailureID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationFailureIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAuthenticationFailureID) {
		return nil, false
	}
	return o.LogFieldAuthenticationFailureID, true
}

// HasLogFieldAuthenticationFailureID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAuthenticationFailureID() bool {
	if o != nil && !IsNil(o.LogFieldAuthenticationFailureID) {
		return true
	}

	return false
}

// SetLogFieldAuthenticationFailureID gets a reference to the given string and assigns it to the LogFieldAuthenticationFailureID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAuthenticationFailureID(v string) {
	o.LogFieldAuthenticationFailureID = &v
}

// GetLogFieldRequestOID returns the LogFieldRequestOID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestOID() string {
	if o == nil || IsNil(o.LogFieldRequestOID) {
		var ret string
		return ret
	}
	return *o.LogFieldRequestOID
}

// GetLogFieldRequestOIDOk returns a tuple with the LogFieldRequestOID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestOIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldRequestOID) {
		return nil, false
	}
	return o.LogFieldRequestOID, true
}

// HasLogFieldRequestOID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldRequestOID() bool {
	if o != nil && !IsNil(o.LogFieldRequestOID) {
		return true
	}

	return false
}

// SetLogFieldRequestOID gets a reference to the given string and assigns it to the LogFieldRequestOID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldRequestOID(v string) {
	o.LogFieldRequestOID = &v
}

// GetLogFieldResponseOID returns the LogFieldResponseOID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResponseOID() string {
	if o == nil || IsNil(o.LogFieldResponseOID) {
		var ret string
		return ret
	}
	return *o.LogFieldResponseOID
}

// GetLogFieldResponseOIDOk returns a tuple with the LogFieldResponseOID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResponseOIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldResponseOID) {
		return nil, false
	}
	return o.LogFieldResponseOID, true
}

// HasLogFieldResponseOID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldResponseOID() bool {
	if o != nil && !IsNil(o.LogFieldResponseOID) {
		return true
	}

	return false
}

// SetLogFieldResponseOID gets a reference to the given string and assigns it to the LogFieldResponseOID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldResponseOID(v string) {
	o.LogFieldResponseOID = &v
}

// GetLogFieldTargetProtocol returns the LogFieldTargetProtocol field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetProtocol() string {
	if o == nil || IsNil(o.LogFieldTargetProtocol) {
		var ret string
		return ret
	}
	return *o.LogFieldTargetProtocol
}

// GetLogFieldTargetProtocolOk returns a tuple with the LogFieldTargetProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetProtocolOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTargetProtocol) {
		return nil, false
	}
	return o.LogFieldTargetProtocol, true
}

// HasLogFieldTargetProtocol returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTargetProtocol() bool {
	if o != nil && !IsNil(o.LogFieldTargetProtocol) {
		return true
	}

	return false
}

// SetLogFieldTargetProtocol gets a reference to the given string and assigns it to the LogFieldTargetProtocol field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTargetProtocol(v string) {
	o.LogFieldTargetProtocol = &v
}

// GetLogFieldTargetPort returns the LogFieldTargetPort field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetPort() string {
	if o == nil || IsNil(o.LogFieldTargetPort) {
		var ret string
		return ret
	}
	return *o.LogFieldTargetPort
}

// GetLogFieldTargetPortOk returns a tuple with the LogFieldTargetPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetPortOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTargetPort) {
		return nil, false
	}
	return o.LogFieldTargetPort, true
}

// HasLogFieldTargetPort returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTargetPort() bool {
	if o != nil && !IsNil(o.LogFieldTargetPort) {
		return true
	}

	return false
}

// SetLogFieldTargetPort gets a reference to the given string and assigns it to the LogFieldTargetPort field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTargetPort(v string) {
	o.LogFieldTargetPort = &v
}

// GetLogFieldTargetAddress returns the LogFieldTargetAddress field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetAddress() string {
	if o == nil || IsNil(o.LogFieldTargetAddress) {
		var ret string
		return ret
	}
	return *o.LogFieldTargetAddress
}

// GetLogFieldTargetAddressOk returns a tuple with the LogFieldTargetAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTargetAddress) {
		return nil, false
	}
	return o.LogFieldTargetAddress, true
}

// HasLogFieldTargetAddress returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTargetAddress() bool {
	if o != nil && !IsNil(o.LogFieldTargetAddress) {
		return true
	}

	return false
}

// SetLogFieldTargetAddress gets a reference to the given string and assigns it to the LogFieldTargetAddress field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTargetAddress(v string) {
	o.LogFieldTargetAddress = &v
}

// GetLogFieldTargetAttribute returns the LogFieldTargetAttribute field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetAttribute() string {
	if o == nil || IsNil(o.LogFieldTargetAttribute) {
		var ret string
		return ret
	}
	return *o.LogFieldTargetAttribute
}

// GetLogFieldTargetAttributeOk returns a tuple with the LogFieldTargetAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetAttributeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTargetAttribute) {
		return nil, false
	}
	return o.LogFieldTargetAttribute, true
}

// HasLogFieldTargetAttribute returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTargetAttribute() bool {
	if o != nil && !IsNil(o.LogFieldTargetAttribute) {
		return true
	}

	return false
}

// SetLogFieldTargetAttribute gets a reference to the given string and assigns it to the LogFieldTargetAttribute field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTargetAttribute(v string) {
	o.LogFieldTargetAttribute = &v
}

// GetLogFieldTargetHost returns the LogFieldTargetHost field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetHost() string {
	if o == nil || IsNil(o.LogFieldTargetHost) {
		var ret string
		return ret
	}
	return *o.LogFieldTargetHost
}

// GetLogFieldTargetHostOk returns a tuple with the LogFieldTargetHost field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldTargetHostOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldTargetHost) {
		return nil, false
	}
	return o.LogFieldTargetHost, true
}

// HasLogFieldTargetHost returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldTargetHost() bool {
	if o != nil && !IsNil(o.LogFieldTargetHost) {
		return true
	}

	return false
}

// SetLogFieldTargetHost gets a reference to the given string and assigns it to the LogFieldTargetHost field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldTargetHost(v string) {
	o.LogFieldTargetHost = &v
}

// GetLogFieldProtocolVersion returns the LogFieldProtocolVersion field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProtocolVersion() string {
	if o == nil || IsNil(o.LogFieldProtocolVersion) {
		var ret string
		return ret
	}
	return *o.LogFieldProtocolVersion
}

// GetLogFieldProtocolVersionOk returns a tuple with the LogFieldProtocolVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProtocolVersionOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldProtocolVersion) {
		return nil, false
	}
	return o.LogFieldProtocolVersion, true
}

// HasLogFieldProtocolVersion returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldProtocolVersion() bool {
	if o != nil && !IsNil(o.LogFieldProtocolVersion) {
		return true
	}

	return false
}

// SetLogFieldProtocolVersion gets a reference to the given string and assigns it to the LogFieldProtocolVersion field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldProtocolVersion(v string) {
	o.LogFieldProtocolVersion = &v
}

// GetLogFieldProtocolName returns the LogFieldProtocolName field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProtocolName() string {
	if o == nil || IsNil(o.LogFieldProtocolName) {
		var ret string
		return ret
	}
	return *o.LogFieldProtocolName
}

// GetLogFieldProtocolNameOk returns a tuple with the LogFieldProtocolName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldProtocolNameOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldProtocolName) {
		return nil, false
	}
	return o.LogFieldProtocolName, true
}

// HasLogFieldProtocolName returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldProtocolName() bool {
	if o != nil && !IsNil(o.LogFieldProtocolName) {
		return true
	}

	return false
}

// SetLogFieldProtocolName gets a reference to the given string and assigns it to the LogFieldProtocolName field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldProtocolName(v string) {
	o.LogFieldProtocolName = &v
}

// GetLogFieldAuthenticationFailureReason returns the LogFieldAuthenticationFailureReason field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationFailureReason() string {
	if o == nil || IsNil(o.LogFieldAuthenticationFailureReason) {
		var ret string
		return ret
	}
	return *o.LogFieldAuthenticationFailureReason
}

// GetLogFieldAuthenticationFailureReasonOk returns a tuple with the LogFieldAuthenticationFailureReason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAuthenticationFailureReasonOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAuthenticationFailureReason) {
		return nil, false
	}
	return o.LogFieldAuthenticationFailureReason, true
}

// HasLogFieldAuthenticationFailureReason returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAuthenticationFailureReason() bool {
	if o != nil && !IsNil(o.LogFieldAuthenticationFailureReason) {
		return true
	}

	return false
}

// SetLogFieldAuthenticationFailureReason gets a reference to the given string and assigns it to the LogFieldAuthenticationFailureReason field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAuthenticationFailureReason(v string) {
	o.LogFieldAuthenticationFailureReason = &v
}

// GetLogFieldAdditionalInformation returns the LogFieldAdditionalInformation field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAdditionalInformation() string {
	if o == nil || IsNil(o.LogFieldAdditionalInformation) {
		var ret string
		return ret
	}
	return *o.LogFieldAdditionalInformation
}

// GetLogFieldAdditionalInformationOk returns a tuple with the LogFieldAdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldAdditionalInformationOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldAdditionalInformation) {
		return nil, false
	}
	return o.LogFieldAdditionalInformation, true
}

// HasLogFieldAdditionalInformation returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldAdditionalInformation() bool {
	if o != nil && !IsNil(o.LogFieldAdditionalInformation) {
		return true
	}

	return false
}

// SetLogFieldAdditionalInformation gets a reference to the given string and assigns it to the LogFieldAdditionalInformation field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldAdditionalInformation(v string) {
	o.LogFieldAdditionalInformation = &v
}

// GetLogFieldUnindexed returns the LogFieldUnindexed field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldUnindexed() string {
	if o == nil || IsNil(o.LogFieldUnindexed) {
		var ret string
		return ret
	}
	return *o.LogFieldUnindexed
}

// GetLogFieldUnindexedOk returns a tuple with the LogFieldUnindexed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldUnindexedOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldUnindexed) {
		return nil, false
	}
	return o.LogFieldUnindexed, true
}

// HasLogFieldUnindexed returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldUnindexed() bool {
	if o != nil && !IsNil(o.LogFieldUnindexed) {
		return true
	}

	return false
}

// SetLogFieldUnindexed gets a reference to the given string and assigns it to the LogFieldUnindexed field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldUnindexed(v string) {
	o.LogFieldUnindexed = &v
}

// GetLogFieldScope returns the LogFieldScope field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldScope() string {
	if o == nil || IsNil(o.LogFieldScope) {
		var ret string
		return ret
	}
	return *o.LogFieldScope
}

// GetLogFieldScopeOk returns a tuple with the LogFieldScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldScopeOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldScope) {
		return nil, false
	}
	return o.LogFieldScope, true
}

// HasLogFieldScope returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldScope() bool {
	if o != nil && !IsNil(o.LogFieldScope) {
		return true
	}

	return false
}

// SetLogFieldScope gets a reference to the given string and assigns it to the LogFieldScope field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldScope(v string) {
	o.LogFieldScope = &v
}

// GetLogFieldReferralUrls returns the LogFieldReferralUrls field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldReferralUrls() string {
	if o == nil || IsNil(o.LogFieldReferralUrls) {
		var ret string
		return ret
	}
	return *o.LogFieldReferralUrls
}

// GetLogFieldReferralUrlsOk returns a tuple with the LogFieldReferralUrls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldReferralUrlsOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldReferralUrls) {
		return nil, false
	}
	return o.LogFieldReferralUrls, true
}

// HasLogFieldReferralUrls returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldReferralUrls() bool {
	if o != nil && !IsNil(o.LogFieldReferralUrls) {
		return true
	}

	return false
}

// SetLogFieldReferralUrls gets a reference to the given string and assigns it to the LogFieldReferralUrls field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldReferralUrls(v string) {
	o.LogFieldReferralUrls = &v
}

// GetLogFieldSourceAddress returns the LogFieldSourceAddress field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldSourceAddress() string {
	if o == nil || IsNil(o.LogFieldSourceAddress) {
		var ret string
		return ret
	}
	return *o.LogFieldSourceAddress
}

// GetLogFieldSourceAddressOk returns a tuple with the LogFieldSourceAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldSourceAddressOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldSourceAddress) {
		return nil, false
	}
	return o.LogFieldSourceAddress, true
}

// HasLogFieldSourceAddress returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldSourceAddress() bool {
	if o != nil && !IsNil(o.LogFieldSourceAddress) {
		return true
	}

	return false
}

// SetLogFieldSourceAddress gets a reference to the given string and assigns it to the LogFieldSourceAddress field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldSourceAddress(v string) {
	o.LogFieldSourceAddress = &v
}

// GetLogFieldMessageIDToAbandon returns the LogFieldMessageIDToAbandon field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageIDToAbandon() string {
	if o == nil || IsNil(o.LogFieldMessageIDToAbandon) {
		var ret string
		return ret
	}
	return *o.LogFieldMessageIDToAbandon
}

// GetLogFieldMessageIDToAbandonOk returns a tuple with the LogFieldMessageIDToAbandon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldMessageIDToAbandonOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldMessageIDToAbandon) {
		return nil, false
	}
	return o.LogFieldMessageIDToAbandon, true
}

// HasLogFieldMessageIDToAbandon returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldMessageIDToAbandon() bool {
	if o != nil && !IsNil(o.LogFieldMessageIDToAbandon) {
		return true
	}

	return false
}

// SetLogFieldMessageIDToAbandon gets a reference to the given string and assigns it to the LogFieldMessageIDToAbandon field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldMessageIDToAbandon(v string) {
	o.LogFieldMessageIDToAbandon = &v
}

// GetLogFieldResponseControls returns the LogFieldResponseControls field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResponseControls() string {
	if o == nil || IsNil(o.LogFieldResponseControls) {
		var ret string
		return ret
	}
	return *o.LogFieldResponseControls
}

// GetLogFieldResponseControlsOk returns a tuple with the LogFieldResponseControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldResponseControlsOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldResponseControls) {
		return nil, false
	}
	return o.LogFieldResponseControls, true
}

// HasLogFieldResponseControls returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldResponseControls() bool {
	if o != nil && !IsNil(o.LogFieldResponseControls) {
		return true
	}

	return false
}

// SetLogFieldResponseControls gets a reference to the given string and assigns it to the LogFieldResponseControls field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldResponseControls(v string) {
	o.LogFieldResponseControls = &v
}

// GetLogFieldRequestControls returns the LogFieldRequestControls field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestControls() string {
	if o == nil || IsNil(o.LogFieldRequestControls) {
		var ret string
		return ret
	}
	return *o.LogFieldRequestControls
}

// GetLogFieldRequestControlsOk returns a tuple with the LogFieldRequestControls field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldRequestControlsOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldRequestControls) {
		return nil, false
	}
	return o.LogFieldRequestControls, true
}

// HasLogFieldRequestControls returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldRequestControls() bool {
	if o != nil && !IsNil(o.LogFieldRequestControls) {
		return true
	}

	return false
}

// SetLogFieldRequestControls gets a reference to the given string and assigns it to the LogFieldRequestControls field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldRequestControls(v string) {
	o.LogFieldRequestControls = &v
}

// GetLogFieldIntermediateClientResult returns the LogFieldIntermediateClientResult field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldIntermediateClientResult() string {
	if o == nil || IsNil(o.LogFieldIntermediateClientResult) {
		var ret string
		return ret
	}
	return *o.LogFieldIntermediateClientResult
}

// GetLogFieldIntermediateClientResultOk returns a tuple with the LogFieldIntermediateClientResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldIntermediateClientResultOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldIntermediateClientResult) {
		return nil, false
	}
	return o.LogFieldIntermediateClientResult, true
}

// HasLogFieldIntermediateClientResult returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldIntermediateClientResult() bool {
	if o != nil && !IsNil(o.LogFieldIntermediateClientResult) {
		return true
	}

	return false
}

// SetLogFieldIntermediateClientResult gets a reference to the given string and assigns it to the LogFieldIntermediateClientResult field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldIntermediateClientResult(v string) {
	o.LogFieldIntermediateClientResult = &v
}

// GetLogFieldIntermediateClientRequest returns the LogFieldIntermediateClientRequest field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldIntermediateClientRequest() string {
	if o == nil || IsNil(o.LogFieldIntermediateClientRequest) {
		var ret string
		return ret
	}
	return *o.LogFieldIntermediateClientRequest
}

// GetLogFieldIntermediateClientRequestOk returns a tuple with the LogFieldIntermediateClientRequest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldIntermediateClientRequestOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldIntermediateClientRequest) {
		return nil, false
	}
	return o.LogFieldIntermediateClientRequest, true
}

// HasLogFieldIntermediateClientRequest returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldIntermediateClientRequest() bool {
	if o != nil && !IsNil(o.LogFieldIntermediateClientRequest) {
		return true
	}

	return false
}

// SetLogFieldIntermediateClientRequest gets a reference to the given string and assigns it to the LogFieldIntermediateClientRequest field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldIntermediateClientRequest(v string) {
	o.LogFieldIntermediateClientRequest = &v
}

// GetLogFieldReplicationChangeID returns the LogFieldReplicationChangeID field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldReplicationChangeID() string {
	if o == nil || IsNil(o.LogFieldReplicationChangeID) {
		var ret string
		return ret
	}
	return *o.LogFieldReplicationChangeID
}

// GetLogFieldReplicationChangeIDOk returns a tuple with the LogFieldReplicationChangeID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetLogFieldReplicationChangeIDOk() (*string, bool) {
	if o == nil || IsNil(o.LogFieldReplicationChangeID) {
		return nil, false
	}
	return o.LogFieldReplicationChangeID, true
}

// HasLogFieldReplicationChangeID returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasLogFieldReplicationChangeID() bool {
	if o != nil && !IsNil(o.LogFieldReplicationChangeID) {
		return true
	}

	return false
}

// SetLogFieldReplicationChangeID gets a reference to the given string and assigns it to the LogFieldReplicationChangeID field.
func (o *AddAccessLogFieldMappingRequest) SetLogFieldReplicationChangeID(v string) {
	o.LogFieldReplicationChangeID = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddAccessLogFieldMappingRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddAccessLogFieldMappingRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddAccessLogFieldMappingRequest) SetDescription(v string) {
	o.Description = &v
}

// GetMappingName returns the MappingName field value
func (o *AddAccessLogFieldMappingRequest) GetMappingName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MappingName
}

// GetMappingNameOk returns a tuple with the MappingName field value
// and a boolean to check if the value has been set.
func (o *AddAccessLogFieldMappingRequest) GetMappingNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MappingName, true
}

// SetMappingName sets field value
func (o *AddAccessLogFieldMappingRequest) SetMappingName(v string) {
	o.MappingName = v
}

func (o AddAccessLogFieldMappingRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddAccessLogFieldMappingRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.LogFieldTimestamp) {
		toSerialize["logFieldTimestamp"] = o.LogFieldTimestamp
	}
	if !IsNil(o.LogFieldConnectionID) {
		toSerialize["logFieldConnectionID"] = o.LogFieldConnectionID
	}
	if !IsNil(o.LogFieldStartupid) {
		toSerialize["logFieldStartupid"] = o.LogFieldStartupid
	}
	if !IsNil(o.LogFieldProductName) {
		toSerialize["logFieldProductName"] = o.LogFieldProductName
	}
	if !IsNil(o.LogFieldInstanceName) {
		toSerialize["logFieldInstanceName"] = o.LogFieldInstanceName
	}
	if !IsNil(o.LogFieldOperationID) {
		toSerialize["logFieldOperationID"] = o.LogFieldOperationID
	}
	if !IsNil(o.LogFieldMessageType) {
		toSerialize["logFieldMessageType"] = o.LogFieldMessageType
	}
	if !IsNil(o.LogFieldOperationType) {
		toSerialize["logFieldOperationType"] = o.LogFieldOperationType
	}
	if !IsNil(o.LogFieldMessageID) {
		toSerialize["logFieldMessageID"] = o.LogFieldMessageID
	}
	if !IsNil(o.LogFieldResultCode) {
		toSerialize["logFieldResultCode"] = o.LogFieldResultCode
	}
	if !IsNil(o.LogFieldMessage) {
		toSerialize["logFieldMessage"] = o.LogFieldMessage
	}
	if !IsNil(o.LogFieldOrigin) {
		toSerialize["logFieldOrigin"] = o.LogFieldOrigin
	}
	if !IsNil(o.LogFieldRequesterDN) {
		toSerialize["logFieldRequesterDN"] = o.LogFieldRequesterDN
	}
	if !IsNil(o.LogFieldDisconnectReason) {
		toSerialize["logFieldDisconnectReason"] = o.LogFieldDisconnectReason
	}
	if !IsNil(o.LogFieldDeleteOldRDN) {
		toSerialize["logFieldDeleteOldRDN"] = o.LogFieldDeleteOldRDN
	}
	if !IsNil(o.LogFieldAuthenticatedUserDN) {
		toSerialize["logFieldAuthenticatedUserDN"] = o.LogFieldAuthenticatedUserDN
	}
	if !IsNil(o.LogFieldProcessingTime) {
		toSerialize["logFieldProcessingTime"] = o.LogFieldProcessingTime
	}
	if !IsNil(o.LogFieldRequestedAttributes) {
		toSerialize["logFieldRequestedAttributes"] = o.LogFieldRequestedAttributes
	}
	if !IsNil(o.LogFieldSASLMechanismName) {
		toSerialize["logFieldSASLMechanismName"] = o.LogFieldSASLMechanismName
	}
	if !IsNil(o.LogFieldNewRDN) {
		toSerialize["logFieldNewRDN"] = o.LogFieldNewRDN
	}
	if !IsNil(o.LogFieldBaseDN) {
		toSerialize["logFieldBaseDN"] = o.LogFieldBaseDN
	}
	if !IsNil(o.LogFieldBindDN) {
		toSerialize["logFieldBindDN"] = o.LogFieldBindDN
	}
	if !IsNil(o.LogFieldMatchedDN) {
		toSerialize["logFieldMatchedDN"] = o.LogFieldMatchedDN
	}
	if !IsNil(o.LogFieldRequesterIPAddress) {
		toSerialize["logFieldRequesterIPAddress"] = o.LogFieldRequesterIPAddress
	}
	if !IsNil(o.LogFieldAuthenticationType) {
		toSerialize["logFieldAuthenticationType"] = o.LogFieldAuthenticationType
	}
	if !IsNil(o.LogFieldNewSuperiorDN) {
		toSerialize["logFieldNewSuperiorDN"] = o.LogFieldNewSuperiorDN
	}
	if !IsNil(o.LogFieldFilter) {
		toSerialize["logFieldFilter"] = o.LogFieldFilter
	}
	if !IsNil(o.LogFieldAlternateAuthorizationDN) {
		toSerialize["logFieldAlternateAuthorizationDN"] = o.LogFieldAlternateAuthorizationDN
	}
	if !IsNil(o.LogFieldEntryDN) {
		toSerialize["logFieldEntryDN"] = o.LogFieldEntryDN
	}
	if !IsNil(o.LogFieldEntriesReturned) {
		toSerialize["logFieldEntriesReturned"] = o.LogFieldEntriesReturned
	}
	if !IsNil(o.LogFieldAuthenticationFailureID) {
		toSerialize["logFieldAuthenticationFailureID"] = o.LogFieldAuthenticationFailureID
	}
	if !IsNil(o.LogFieldRequestOID) {
		toSerialize["logFieldRequestOID"] = o.LogFieldRequestOID
	}
	if !IsNil(o.LogFieldResponseOID) {
		toSerialize["logFieldResponseOID"] = o.LogFieldResponseOID
	}
	if !IsNil(o.LogFieldTargetProtocol) {
		toSerialize["logFieldTargetProtocol"] = o.LogFieldTargetProtocol
	}
	if !IsNil(o.LogFieldTargetPort) {
		toSerialize["logFieldTargetPort"] = o.LogFieldTargetPort
	}
	if !IsNil(o.LogFieldTargetAddress) {
		toSerialize["logFieldTargetAddress"] = o.LogFieldTargetAddress
	}
	if !IsNil(o.LogFieldTargetAttribute) {
		toSerialize["logFieldTargetAttribute"] = o.LogFieldTargetAttribute
	}
	if !IsNil(o.LogFieldTargetHost) {
		toSerialize["logFieldTargetHost"] = o.LogFieldTargetHost
	}
	if !IsNil(o.LogFieldProtocolVersion) {
		toSerialize["logFieldProtocolVersion"] = o.LogFieldProtocolVersion
	}
	if !IsNil(o.LogFieldProtocolName) {
		toSerialize["logFieldProtocolName"] = o.LogFieldProtocolName
	}
	if !IsNil(o.LogFieldAuthenticationFailureReason) {
		toSerialize["logFieldAuthenticationFailureReason"] = o.LogFieldAuthenticationFailureReason
	}
	if !IsNil(o.LogFieldAdditionalInformation) {
		toSerialize["logFieldAdditionalInformation"] = o.LogFieldAdditionalInformation
	}
	if !IsNil(o.LogFieldUnindexed) {
		toSerialize["logFieldUnindexed"] = o.LogFieldUnindexed
	}
	if !IsNil(o.LogFieldScope) {
		toSerialize["logFieldScope"] = o.LogFieldScope
	}
	if !IsNil(o.LogFieldReferralUrls) {
		toSerialize["logFieldReferralUrls"] = o.LogFieldReferralUrls
	}
	if !IsNil(o.LogFieldSourceAddress) {
		toSerialize["logFieldSourceAddress"] = o.LogFieldSourceAddress
	}
	if !IsNil(o.LogFieldMessageIDToAbandon) {
		toSerialize["logFieldMessageIDToAbandon"] = o.LogFieldMessageIDToAbandon
	}
	if !IsNil(o.LogFieldResponseControls) {
		toSerialize["logFieldResponseControls"] = o.LogFieldResponseControls
	}
	if !IsNil(o.LogFieldRequestControls) {
		toSerialize["logFieldRequestControls"] = o.LogFieldRequestControls
	}
	if !IsNil(o.LogFieldIntermediateClientResult) {
		toSerialize["logFieldIntermediateClientResult"] = o.LogFieldIntermediateClientResult
	}
	if !IsNil(o.LogFieldIntermediateClientRequest) {
		toSerialize["logFieldIntermediateClientRequest"] = o.LogFieldIntermediateClientRequest
	}
	if !IsNil(o.LogFieldReplicationChangeID) {
		toSerialize["logFieldReplicationChangeID"] = o.LogFieldReplicationChangeID
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["mappingName"] = o.MappingName
	return toSerialize, nil
}

type NullableAddAccessLogFieldMappingRequest struct {
	value *AddAccessLogFieldMappingRequest
	isSet bool
}

func (v NullableAddAccessLogFieldMappingRequest) Get() *AddAccessLogFieldMappingRequest {
	return v.value
}

func (v *NullableAddAccessLogFieldMappingRequest) Set(val *AddAccessLogFieldMappingRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAccessLogFieldMappingRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAccessLogFieldMappingRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAccessLogFieldMappingRequest(val *AddAccessLogFieldMappingRequest) *NullableAddAccessLogFieldMappingRequest {
	return &NullableAddAccessLogFieldMappingRequest{value: val, isSet: true}
}

func (v NullableAddAccessLogFieldMappingRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAccessLogFieldMappingRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
