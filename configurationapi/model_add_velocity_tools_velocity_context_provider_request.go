/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddVelocityToolsVelocityContextProviderRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddVelocityToolsVelocityContextProviderRequest{}

// AddVelocityToolsVelocityContextProviderRequest struct for AddVelocityToolsVelocityContextProviderRequest
type AddVelocityToolsVelocityContextProviderRequest struct {
	// Name of the new Velocity Context Provider
	ProviderName string                                              `json:"providerName"`
	Schemas      []EnumvelocityToolsVelocityContextProviderSchemaUrn `json:"schemas"`
	// The fully-qualified name of a Velocity Tool class that will be initialized for each request. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
	RequestTool []string `json:"requestTool,omitempty"`
	// The fully-qualified name of a Velocity Tool class that will be initialized for each session. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
	SessionTool []string `json:"sessionTool,omitempty"`
	// The fully-qualified name of a Velocity Tool class that will be initialized once for the life of the server. May optionally include a path to a properties file used to configure this tool separated from the class name by a semi-colon (;). The path may absolute or relative to the server root.
	ApplicationTool []string `json:"applicationTool,omitempty"`
	// Indicates whether this Velocity Context Provider is enabled. If set to 'false' this Velocity Context Provider will not contribute context content for any requests.
	Enabled     *bool                                       `json:"enabled,omitempty"`
	ObjectScope *EnumvelocityContextProviderObjectScopeProp `json:"objectScope,omitempty"`
	// The name of a view for which this Velocity Context Provider will contribute content.
	IncludedView []string `json:"includedView,omitempty"`
	// The name of a view for which this Velocity Context Provider will not contribute content.
	ExcludedView []string `json:"excludedView,omitempty"`
	// Specifies HTTP header fields and values added to response headers for template page requests to which this Velocity Context Provider contributes content.
	ResponseHeader []string `json:"responseHeader,omitempty"`
}

// NewAddVelocityToolsVelocityContextProviderRequest instantiates a new AddVelocityToolsVelocityContextProviderRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddVelocityToolsVelocityContextProviderRequest(providerName string, schemas []EnumvelocityToolsVelocityContextProviderSchemaUrn) *AddVelocityToolsVelocityContextProviderRequest {
	this := AddVelocityToolsVelocityContextProviderRequest{}
	this.ProviderName = providerName
	this.Schemas = schemas
	return &this
}

// NewAddVelocityToolsVelocityContextProviderRequestWithDefaults instantiates a new AddVelocityToolsVelocityContextProviderRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddVelocityToolsVelocityContextProviderRequestWithDefaults() *AddVelocityToolsVelocityContextProviderRequest {
	this := AddVelocityToolsVelocityContextProviderRequest{}
	return &this
}

// GetProviderName returns the ProviderName field value
func (o *AddVelocityToolsVelocityContextProviderRequest) GetProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderName, true
}

// SetProviderName sets field value
func (o *AddVelocityToolsVelocityContextProviderRequest) SetProviderName(v string) {
	o.ProviderName = v
}

// GetSchemas returns the Schemas field value
func (o *AddVelocityToolsVelocityContextProviderRequest) GetSchemas() []EnumvelocityToolsVelocityContextProviderSchemaUrn {
	if o == nil {
		var ret []EnumvelocityToolsVelocityContextProviderSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetSchemasOk() ([]EnumvelocityToolsVelocityContextProviderSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddVelocityToolsVelocityContextProviderRequest) SetSchemas(v []EnumvelocityToolsVelocityContextProviderSchemaUrn) {
	o.Schemas = v
}

// GetRequestTool returns the RequestTool field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetRequestTool() []string {
	if o == nil || IsNil(o.RequestTool) {
		var ret []string
		return ret
	}
	return o.RequestTool
}

// GetRequestToolOk returns a tuple with the RequestTool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetRequestToolOk() ([]string, bool) {
	if o == nil || IsNil(o.RequestTool) {
		return nil, false
	}
	return o.RequestTool, true
}

// HasRequestTool returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasRequestTool() bool {
	if o != nil && !IsNil(o.RequestTool) {
		return true
	}

	return false
}

// SetRequestTool gets a reference to the given []string and assigns it to the RequestTool field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetRequestTool(v []string) {
	o.RequestTool = v
}

// GetSessionTool returns the SessionTool field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetSessionTool() []string {
	if o == nil || IsNil(o.SessionTool) {
		var ret []string
		return ret
	}
	return o.SessionTool
}

// GetSessionToolOk returns a tuple with the SessionTool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetSessionToolOk() ([]string, bool) {
	if o == nil || IsNil(o.SessionTool) {
		return nil, false
	}
	return o.SessionTool, true
}

// HasSessionTool returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasSessionTool() bool {
	if o != nil && !IsNil(o.SessionTool) {
		return true
	}

	return false
}

// SetSessionTool gets a reference to the given []string and assigns it to the SessionTool field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetSessionTool(v []string) {
	o.SessionTool = v
}

// GetApplicationTool returns the ApplicationTool field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetApplicationTool() []string {
	if o == nil || IsNil(o.ApplicationTool) {
		var ret []string
		return ret
	}
	return o.ApplicationTool
}

// GetApplicationToolOk returns a tuple with the ApplicationTool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetApplicationToolOk() ([]string, bool) {
	if o == nil || IsNil(o.ApplicationTool) {
		return nil, false
	}
	return o.ApplicationTool, true
}

// HasApplicationTool returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasApplicationTool() bool {
	if o != nil && !IsNil(o.ApplicationTool) {
		return true
	}

	return false
}

// SetApplicationTool gets a reference to the given []string and assigns it to the ApplicationTool field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetApplicationTool(v []string) {
	o.ApplicationTool = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetObjectScope returns the ObjectScope field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetObjectScope() EnumvelocityContextProviderObjectScopeProp {
	if o == nil || IsNil(o.ObjectScope) {
		var ret EnumvelocityContextProviderObjectScopeProp
		return ret
	}
	return *o.ObjectScope
}

// GetObjectScopeOk returns a tuple with the ObjectScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetObjectScopeOk() (*EnumvelocityContextProviderObjectScopeProp, bool) {
	if o == nil || IsNil(o.ObjectScope) {
		return nil, false
	}
	return o.ObjectScope, true
}

// HasObjectScope returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasObjectScope() bool {
	if o != nil && !IsNil(o.ObjectScope) {
		return true
	}

	return false
}

// SetObjectScope gets a reference to the given EnumvelocityContextProviderObjectScopeProp and assigns it to the ObjectScope field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetObjectScope(v EnumvelocityContextProviderObjectScopeProp) {
	o.ObjectScope = &v
}

// GetIncludedView returns the IncludedView field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetIncludedView() []string {
	if o == nil || IsNil(o.IncludedView) {
		var ret []string
		return ret
	}
	return o.IncludedView
}

// GetIncludedViewOk returns a tuple with the IncludedView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetIncludedViewOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedView) {
		return nil, false
	}
	return o.IncludedView, true
}

// HasIncludedView returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasIncludedView() bool {
	if o != nil && !IsNil(o.IncludedView) {
		return true
	}

	return false
}

// SetIncludedView gets a reference to the given []string and assigns it to the IncludedView field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetIncludedView(v []string) {
	o.IncludedView = v
}

// GetExcludedView returns the ExcludedView field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetExcludedView() []string {
	if o == nil || IsNil(o.ExcludedView) {
		var ret []string
		return ret
	}
	return o.ExcludedView
}

// GetExcludedViewOk returns a tuple with the ExcludedView field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetExcludedViewOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedView) {
		return nil, false
	}
	return o.ExcludedView, true
}

// HasExcludedView returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasExcludedView() bool {
	if o != nil && !IsNil(o.ExcludedView) {
		return true
	}

	return false
}

// SetExcludedView gets a reference to the given []string and assigns it to the ExcludedView field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetExcludedView(v []string) {
	o.ExcludedView = v
}

// GetResponseHeader returns the ResponseHeader field value if set, zero value otherwise.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetResponseHeader() []string {
	if o == nil || IsNil(o.ResponseHeader) {
		var ret []string
		return ret
	}
	return o.ResponseHeader
}

// GetResponseHeaderOk returns a tuple with the ResponseHeader field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) GetResponseHeaderOk() ([]string, bool) {
	if o == nil || IsNil(o.ResponseHeader) {
		return nil, false
	}
	return o.ResponseHeader, true
}

// HasResponseHeader returns a boolean if a field has been set.
func (o *AddVelocityToolsVelocityContextProviderRequest) HasResponseHeader() bool {
	if o != nil && !IsNil(o.ResponseHeader) {
		return true
	}

	return false
}

// SetResponseHeader gets a reference to the given []string and assigns it to the ResponseHeader field.
func (o *AddVelocityToolsVelocityContextProviderRequest) SetResponseHeader(v []string) {
	o.ResponseHeader = v
}

func (o AddVelocityToolsVelocityContextProviderRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddVelocityToolsVelocityContextProviderRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["providerName"] = o.ProviderName
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.RequestTool) {
		toSerialize["requestTool"] = o.RequestTool
	}
	if !IsNil(o.SessionTool) {
		toSerialize["sessionTool"] = o.SessionTool
	}
	if !IsNil(o.ApplicationTool) {
		toSerialize["applicationTool"] = o.ApplicationTool
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.ObjectScope) {
		toSerialize["objectScope"] = o.ObjectScope
	}
	if !IsNil(o.IncludedView) {
		toSerialize["includedView"] = o.IncludedView
	}
	if !IsNil(o.ExcludedView) {
		toSerialize["excludedView"] = o.ExcludedView
	}
	if !IsNil(o.ResponseHeader) {
		toSerialize["responseHeader"] = o.ResponseHeader
	}
	return toSerialize, nil
}

type NullableAddVelocityToolsVelocityContextProviderRequest struct {
	value *AddVelocityToolsVelocityContextProviderRequest
	isSet bool
}

func (v NullableAddVelocityToolsVelocityContextProviderRequest) Get() *AddVelocityToolsVelocityContextProviderRequest {
	return v.value
}

func (v *NullableAddVelocityToolsVelocityContextProviderRequest) Set(val *AddVelocityToolsVelocityContextProviderRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddVelocityToolsVelocityContextProviderRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddVelocityToolsVelocityContextProviderRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddVelocityToolsVelocityContextProviderRequest(val *AddVelocityToolsVelocityContextProviderRequest) *NullableAddVelocityToolsVelocityContextProviderRequest {
	return &NullableAddVelocityToolsVelocityContextProviderRequest{value: val, isSet: true}
}

func (v NullableAddVelocityToolsVelocityContextProviderRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddVelocityToolsVelocityContextProviderRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
