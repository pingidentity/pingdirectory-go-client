/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the UniqueAttributePluginResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniqueAttributePluginResponse{}

// UniqueAttributePluginResponse struct for UniqueAttributePluginResponse
type UniqueAttributePluginResponse struct {
	// Name of the Plugin Root
	Id      string                               `json:"id"`
	Schemas []EnumuniqueAttributePluginSchemaUrn `json:"schemas"`
	// Specifies the set of plug-in types for the plug-in, which specifies the times at which the plug-in is invoked.
	PluginType []EnumpluginPluginTypeProp `json:"pluginType"`
	// Specifies the type of attributes to check for value uniqueness.
	Type                      []string                                 `json:"type"`
	MultipleAttributeBehavior *EnumpluginMultipleAttributeBehaviorProp `json:"multipleAttributeBehavior,omitempty"`
	// Specifies a base DN within which the attribute must be unique.
	BaseDN []string `json:"baseDN,omitempty"`
	// Indicates whether this Unique Attribute Plugin should reject a change that would result in one or more conflicts, even if those conflicts only exist in soft-deleted entries.
	PreventConflictsWithSoftDeletedEntries *bool `json:"preventConflictsWithSoftDeletedEntries,omitempty"`
	// Specifies the search filter to apply to determine if attribute uniqueness is enforced for the matching entries.
	Filter *string `json:"filter,omitempty"`
	// A description for this Plugin
	Description *string `json:"description,omitempty"`
	// Indicates whether the plug-in is enabled for use.
	Enabled bool `json:"enabled"`
	// Indicates whether the plug-in should be invoked for internal operations.
	InvokeForInternalOperations                   *bool                                              `json:"invokeForInternalOperations,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewUniqueAttributePluginResponse instantiates a new UniqueAttributePluginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniqueAttributePluginResponse(id string, schemas []EnumuniqueAttributePluginSchemaUrn, pluginType []EnumpluginPluginTypeProp, type_ []string, enabled bool) *UniqueAttributePluginResponse {
	this := UniqueAttributePluginResponse{}
	this.Id = id
	this.Schemas = schemas
	this.PluginType = pluginType
	this.Type = type_
	this.Enabled = enabled
	return &this
}

// NewUniqueAttributePluginResponseWithDefaults instantiates a new UniqueAttributePluginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniqueAttributePluginResponseWithDefaults() *UniqueAttributePluginResponse {
	this := UniqueAttributePluginResponse{}
	return &this
}

// GetId returns the Id field value
func (o *UniqueAttributePluginResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UniqueAttributePluginResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *UniqueAttributePluginResponse) GetSchemas() []EnumuniqueAttributePluginSchemaUrn {
	if o == nil {
		var ret []EnumuniqueAttributePluginSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetSchemasOk() ([]EnumuniqueAttributePluginSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *UniqueAttributePluginResponse) SetSchemas(v []EnumuniqueAttributePluginSchemaUrn) {
	o.Schemas = v
}

// GetPluginType returns the PluginType field value
func (o *UniqueAttributePluginResponse) GetPluginType() []EnumpluginPluginTypeProp {
	if o == nil {
		var ret []EnumpluginPluginTypeProp
		return ret
	}

	return o.PluginType
}

// GetPluginTypeOk returns a tuple with the PluginType field value
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetPluginTypeOk() ([]EnumpluginPluginTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return o.PluginType, true
}

// SetPluginType sets field value
func (o *UniqueAttributePluginResponse) SetPluginType(v []EnumpluginPluginTypeProp) {
	o.PluginType = v
}

// GetType returns the Type field value
func (o *UniqueAttributePluginResponse) GetType() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetTypeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Type, true
}

// SetType sets field value
func (o *UniqueAttributePluginResponse) SetType(v []string) {
	o.Type = v
}

// GetMultipleAttributeBehavior returns the MultipleAttributeBehavior field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetMultipleAttributeBehavior() EnumpluginMultipleAttributeBehaviorProp {
	if o == nil || IsNil(o.MultipleAttributeBehavior) {
		var ret EnumpluginMultipleAttributeBehaviorProp
		return ret
	}
	return *o.MultipleAttributeBehavior
}

// GetMultipleAttributeBehaviorOk returns a tuple with the MultipleAttributeBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetMultipleAttributeBehaviorOk() (*EnumpluginMultipleAttributeBehaviorProp, bool) {
	if o == nil || IsNil(o.MultipleAttributeBehavior) {
		return nil, false
	}
	return o.MultipleAttributeBehavior, true
}

// HasMultipleAttributeBehavior returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasMultipleAttributeBehavior() bool {
	if o != nil && !IsNil(o.MultipleAttributeBehavior) {
		return true
	}

	return false
}

// SetMultipleAttributeBehavior gets a reference to the given EnumpluginMultipleAttributeBehaviorProp and assigns it to the MultipleAttributeBehavior field.
func (o *UniqueAttributePluginResponse) SetMultipleAttributeBehavior(v EnumpluginMultipleAttributeBehaviorProp) {
	o.MultipleAttributeBehavior = &v
}

// GetBaseDN returns the BaseDN field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetBaseDN() []string {
	if o == nil || IsNil(o.BaseDN) {
		var ret []string
		return ret
	}
	return o.BaseDN
}

// GetBaseDNOk returns a tuple with the BaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.BaseDN) {
		return nil, false
	}
	return o.BaseDN, true
}

// HasBaseDN returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasBaseDN() bool {
	if o != nil && !IsNil(o.BaseDN) {
		return true
	}

	return false
}

// SetBaseDN gets a reference to the given []string and assigns it to the BaseDN field.
func (o *UniqueAttributePluginResponse) SetBaseDN(v []string) {
	o.BaseDN = v
}

// GetPreventConflictsWithSoftDeletedEntries returns the PreventConflictsWithSoftDeletedEntries field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetPreventConflictsWithSoftDeletedEntries() bool {
	if o == nil || IsNil(o.PreventConflictsWithSoftDeletedEntries) {
		var ret bool
		return ret
	}
	return *o.PreventConflictsWithSoftDeletedEntries
}

// GetPreventConflictsWithSoftDeletedEntriesOk returns a tuple with the PreventConflictsWithSoftDeletedEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetPreventConflictsWithSoftDeletedEntriesOk() (*bool, bool) {
	if o == nil || IsNil(o.PreventConflictsWithSoftDeletedEntries) {
		return nil, false
	}
	return o.PreventConflictsWithSoftDeletedEntries, true
}

// HasPreventConflictsWithSoftDeletedEntries returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasPreventConflictsWithSoftDeletedEntries() bool {
	if o != nil && !IsNil(o.PreventConflictsWithSoftDeletedEntries) {
		return true
	}

	return false
}

// SetPreventConflictsWithSoftDeletedEntries gets a reference to the given bool and assigns it to the PreventConflictsWithSoftDeletedEntries field.
func (o *UniqueAttributePluginResponse) SetPreventConflictsWithSoftDeletedEntries(v bool) {
	o.PreventConflictsWithSoftDeletedEntries = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetFilter() string {
	if o == nil || IsNil(o.Filter) {
		var ret string
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetFilterOk() (*string, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given string and assigns it to the Filter field.
func (o *UniqueAttributePluginResponse) SetFilter(v string) {
	o.Filter = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UniqueAttributePluginResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *UniqueAttributePluginResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *UniqueAttributePluginResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetInvokeForInternalOperations returns the InvokeForInternalOperations field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetInvokeForInternalOperations() bool {
	if o == nil || IsNil(o.InvokeForInternalOperations) {
		var ret bool
		return ret
	}
	return *o.InvokeForInternalOperations
}

// GetInvokeForInternalOperationsOk returns a tuple with the InvokeForInternalOperations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetInvokeForInternalOperationsOk() (*bool, bool) {
	if o == nil || IsNil(o.InvokeForInternalOperations) {
		return nil, false
	}
	return o.InvokeForInternalOperations, true
}

// HasInvokeForInternalOperations returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasInvokeForInternalOperations() bool {
	if o != nil && !IsNil(o.InvokeForInternalOperations) {
		return true
	}

	return false
}

// SetInvokeForInternalOperations gets a reference to the given bool and assigns it to the InvokeForInternalOperations field.
func (o *UniqueAttributePluginResponse) SetInvokeForInternalOperations(v bool) {
	o.InvokeForInternalOperations = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *UniqueAttributePluginResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *UniqueAttributePluginResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniqueAttributePluginResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *UniqueAttributePluginResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *UniqueAttributePluginResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o UniqueAttributePluginResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniqueAttributePluginResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	toSerialize["pluginType"] = o.PluginType
	toSerialize["type"] = o.Type
	if !IsNil(o.MultipleAttributeBehavior) {
		toSerialize["multipleAttributeBehavior"] = o.MultipleAttributeBehavior
	}
	if !IsNil(o.BaseDN) {
		toSerialize["baseDN"] = o.BaseDN
	}
	if !IsNil(o.PreventConflictsWithSoftDeletedEntries) {
		toSerialize["preventConflictsWithSoftDeletedEntries"] = o.PreventConflictsWithSoftDeletedEntries
	}
	if !IsNil(o.Filter) {
		toSerialize["filter"] = o.Filter
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.InvokeForInternalOperations) {
		toSerialize["invokeForInternalOperations"] = o.InvokeForInternalOperations
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableUniqueAttributePluginResponse struct {
	value *UniqueAttributePluginResponse
	isSet bool
}

func (v NullableUniqueAttributePluginResponse) Get() *UniqueAttributePluginResponse {
	return v.value
}

func (v *NullableUniqueAttributePluginResponse) Set(val *UniqueAttributePluginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableUniqueAttributePluginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableUniqueAttributePluginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniqueAttributePluginResponse(val *UniqueAttributePluginResponse) *NullableUniqueAttributePluginResponse {
	return &NullableUniqueAttributePluginResponse{value: val, isSet: true}
}

func (v NullableUniqueAttributePluginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniqueAttributePluginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
