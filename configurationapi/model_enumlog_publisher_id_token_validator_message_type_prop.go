/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumlogPublisherIdTokenValidatorMessageTypeProp Specifies the ID token validator message types that can be logged.
type EnumlogPublisherIdTokenValidatorMessageTypeProp string

// List of Enumlog-publisher-idTokenValidatorMessageTypeProp
const (
	ENUMLOGPUBLISHERIDTOKENVALIDATORMESSAGETYPEPROP_EXTERNAL_SERVER_REQUEST  EnumlogPublisherIdTokenValidatorMessageTypeProp = "external-server-request"
	ENUMLOGPUBLISHERIDTOKENVALIDATORMESSAGETYPEPROP_EXTERNAL_SERVER_RESPONSE EnumlogPublisherIdTokenValidatorMessageTypeProp = "external-server-response"
	ENUMLOGPUBLISHERIDTOKENVALIDATORMESSAGETYPEPROP_VALIDATION               EnumlogPublisherIdTokenValidatorMessageTypeProp = "validation"
	ENUMLOGPUBLISHERIDTOKENVALIDATORMESSAGETYPEPROP_WARNING                  EnumlogPublisherIdTokenValidatorMessageTypeProp = "warning"
	ENUMLOGPUBLISHERIDTOKENVALIDATORMESSAGETYPEPROP_ERROR                    EnumlogPublisherIdTokenValidatorMessageTypeProp = "error"
)

// All allowed values of EnumlogPublisherIdTokenValidatorMessageTypeProp enum
var AllowedEnumlogPublisherIdTokenValidatorMessageTypePropEnumValues = []EnumlogPublisherIdTokenValidatorMessageTypeProp{
	"external-server-request",
	"external-server-response",
	"validation",
	"warning",
	"error",
}

func (v *EnumlogPublisherIdTokenValidatorMessageTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumlogPublisherIdTokenValidatorMessageTypeProp(value)
	for _, existing := range AllowedEnumlogPublisherIdTokenValidatorMessageTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumlogPublisherIdTokenValidatorMessageTypeProp", value)
}

// NewEnumlogPublisherIdTokenValidatorMessageTypePropFromValue returns a pointer to a valid EnumlogPublisherIdTokenValidatorMessageTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumlogPublisherIdTokenValidatorMessageTypePropFromValue(v string) (*EnumlogPublisherIdTokenValidatorMessageTypeProp, error) {
	ev := EnumlogPublisherIdTokenValidatorMessageTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumlogPublisherIdTokenValidatorMessageTypeProp: valid values are %v", v, AllowedEnumlogPublisherIdTokenValidatorMessageTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumlogPublisherIdTokenValidatorMessageTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumlogPublisherIdTokenValidatorMessageTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumlog-publisher-idTokenValidatorMessageTypeProp value
func (v EnumlogPublisherIdTokenValidatorMessageTypeProp) Ptr() *EnumlogPublisherIdTokenValidatorMessageTypeProp {
	return &v
}

type NullableEnumlogPublisherIdTokenValidatorMessageTypeProp struct {
	value *EnumlogPublisherIdTokenValidatorMessageTypeProp
	isSet bool
}

func (v NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) Get() *EnumlogPublisherIdTokenValidatorMessageTypeProp {
	return v.value
}

func (v *NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) Set(val *EnumlogPublisherIdTokenValidatorMessageTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumlogPublisherIdTokenValidatorMessageTypeProp(val *EnumlogPublisherIdTokenValidatorMessageTypeProp) *NullableEnumlogPublisherIdTokenValidatorMessageTypeProp {
	return &NullableEnumlogPublisherIdTokenValidatorMessageTypeProp{value: val, isSet: true}
}

func (v NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumlogPublisherIdTokenValidatorMessageTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
