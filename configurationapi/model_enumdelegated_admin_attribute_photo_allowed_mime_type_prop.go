/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
type EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp string

// List of Enumdelegated-admin-attribute-photo-allowedMIMETypeProp
const (
	ENUMDELEGATEDADMINATTRIBUTEPHOTOALLOWEDMIMETYPEPROP_GIF  EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp = "gif"
	ENUMDELEGATEDADMINATTRIBUTEPHOTOALLOWEDMIMETYPEPROP_JPEG EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp = "jpeg"
	ENUMDELEGATEDADMINATTRIBUTEPHOTOALLOWEDMIMETYPEPROP_JPG  EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp = "jpg"
	ENUMDELEGATEDADMINATTRIBUTEPHOTOALLOWEDMIMETYPEPROP_PNG  EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp = "png"
)

// All allowed values of EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp enum
var AllowedEnumdelegatedAdminAttributePhotoAllowedMIMETypePropEnumValues = []EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp{
	"gif",
	"jpeg",
	"jpg",
	"png",
}

func (v *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp(value)
	for _, existing := range AllowedEnumdelegatedAdminAttributePhotoAllowedMIMETypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp", value)
}

// NewEnumdelegatedAdminAttributePhotoAllowedMIMETypePropFromValue returns a pointer to a valid EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumdelegatedAdminAttributePhotoAllowedMIMETypePropFromValue(v string) (*EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp, error) {
	ev := EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp: valid values are %v", v, AllowedEnumdelegatedAdminAttributePhotoAllowedMIMETypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) IsValid() bool {
	for _, existing := range AllowedEnumdelegatedAdminAttributePhotoAllowedMIMETypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumdelegated-admin-attribute-photo-allowedMIMETypeProp value
func (v EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) Ptr() *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp {
	return &v
}

type NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp struct {
	value *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp
	isSet bool
}

func (v NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) Get() *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp {
	return v.value
}

func (v *NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) Set(val *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp(val *EnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) *NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp {
	return &NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp{value: val, isSet: true}
}

func (v NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumdelegatedAdminAttributePhotoAllowedMIMETypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
