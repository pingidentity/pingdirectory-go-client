/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginUniqueAttributeMultipleAttributeBehaviorProp The behavior to exhibit if multiple attribute types are specified.
type EnumpluginUniqueAttributeMultipleAttributeBehaviorProp string

// List of Enumplugin-unique-attribute-multipleAttributeBehaviorProp
const (
	ENUMPLUGINUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_WITHIN_EACH_ATTRIBUTE                         EnumpluginUniqueAttributeMultipleAttributeBehaviorProp = "unique-within-each-attribute"
	ENUMPLUGINUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_ACROSS_ALL_ATTRIBUTES_INCLUDING_IN_SAME_ENTRY EnumpluginUniqueAttributeMultipleAttributeBehaviorProp = "unique-across-all-attributes-including-in-same-entry"
	ENUMPLUGINUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_ACROSS_ALL_ATTRIBUTES_EXCEPT_IN_SAME_ENTRY    EnumpluginUniqueAttributeMultipleAttributeBehaviorProp = "unique-across-all-attributes-except-in-same-entry"
)

// All allowed values of EnumpluginUniqueAttributeMultipleAttributeBehaviorProp enum
var AllowedEnumpluginUniqueAttributeMultipleAttributeBehaviorPropEnumValues = []EnumpluginUniqueAttributeMultipleAttributeBehaviorProp{
	"unique-within-each-attribute",
	"unique-across-all-attributes-including-in-same-entry",
	"unique-across-all-attributes-except-in-same-entry",
}

func (v *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginUniqueAttributeMultipleAttributeBehaviorProp(value)
	for _, existing := range AllowedEnumpluginUniqueAttributeMultipleAttributeBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginUniqueAttributeMultipleAttributeBehaviorProp", value)
}

// NewEnumpluginUniqueAttributeMultipleAttributeBehaviorPropFromValue returns a pointer to a valid EnumpluginUniqueAttributeMultipleAttributeBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginUniqueAttributeMultipleAttributeBehaviorPropFromValue(v string) (*EnumpluginUniqueAttributeMultipleAttributeBehaviorProp, error) {
	ev := EnumpluginUniqueAttributeMultipleAttributeBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginUniqueAttributeMultipleAttributeBehaviorProp: valid values are %v", v, AllowedEnumpluginUniqueAttributeMultipleAttributeBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginUniqueAttributeMultipleAttributeBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginUniqueAttributeMultipleAttributeBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-unique-attribute-multipleAttributeBehaviorProp value
func (v EnumpluginUniqueAttributeMultipleAttributeBehaviorProp) Ptr() *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp {
	return &v
}

type NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp struct {
	value *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp
	isSet bool
}

func (v NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) Get() *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp {
	return v.value
}

func (v *NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) Set(val *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp(val *EnumpluginUniqueAttributeMultipleAttributeBehaviorProp) *NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp {
	return &NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginUniqueAttributeMultipleAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
