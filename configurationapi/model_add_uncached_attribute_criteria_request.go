/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddUncachedAttributeCriteriaRequest - struct for AddUncachedAttributeCriteriaRequest
type AddUncachedAttributeCriteriaRequest struct {
	AddDefaultUncachedAttributeCriteriaRequest        *AddDefaultUncachedAttributeCriteriaRequest
	AddGroovyScriptedUncachedAttributeCriteriaRequest *AddGroovyScriptedUncachedAttributeCriteriaRequest
	AddSimpleUncachedAttributeCriteriaRequest         *AddSimpleUncachedAttributeCriteriaRequest
	AddThirdPartyUncachedAttributeCriteriaRequest     *AddThirdPartyUncachedAttributeCriteriaRequest
}

// AddDefaultUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest is a convenience function that returns AddDefaultUncachedAttributeCriteriaRequest wrapped in AddUncachedAttributeCriteriaRequest
func AddDefaultUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest(v *AddDefaultUncachedAttributeCriteriaRequest) AddUncachedAttributeCriteriaRequest {
	return AddUncachedAttributeCriteriaRequest{
		AddDefaultUncachedAttributeCriteriaRequest: v,
	}
}

// AddGroovyScriptedUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest is a convenience function that returns AddGroovyScriptedUncachedAttributeCriteriaRequest wrapped in AddUncachedAttributeCriteriaRequest
func AddGroovyScriptedUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest(v *AddGroovyScriptedUncachedAttributeCriteriaRequest) AddUncachedAttributeCriteriaRequest {
	return AddUncachedAttributeCriteriaRequest{
		AddGroovyScriptedUncachedAttributeCriteriaRequest: v,
	}
}

// AddSimpleUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest is a convenience function that returns AddSimpleUncachedAttributeCriteriaRequest wrapped in AddUncachedAttributeCriteriaRequest
func AddSimpleUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest(v *AddSimpleUncachedAttributeCriteriaRequest) AddUncachedAttributeCriteriaRequest {
	return AddUncachedAttributeCriteriaRequest{
		AddSimpleUncachedAttributeCriteriaRequest: v,
	}
}

// AddThirdPartyUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest is a convenience function that returns AddThirdPartyUncachedAttributeCriteriaRequest wrapped in AddUncachedAttributeCriteriaRequest
func AddThirdPartyUncachedAttributeCriteriaRequestAsAddUncachedAttributeCriteriaRequest(v *AddThirdPartyUncachedAttributeCriteriaRequest) AddUncachedAttributeCriteriaRequest {
	return AddUncachedAttributeCriteriaRequest{
		AddThirdPartyUncachedAttributeCriteriaRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddUncachedAttributeCriteriaRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddDefaultUncachedAttributeCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddDefaultUncachedAttributeCriteriaRequest)
	if err == nil {
		jsonAddDefaultUncachedAttributeCriteriaRequest, _ := json.Marshal(dst.AddDefaultUncachedAttributeCriteriaRequest)
		if string(jsonAddDefaultUncachedAttributeCriteriaRequest) == "{}" { // empty struct
			dst.AddDefaultUncachedAttributeCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddDefaultUncachedAttributeCriteriaRequest = nil
	}

	// try to unmarshal data into AddGroovyScriptedUncachedAttributeCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddGroovyScriptedUncachedAttributeCriteriaRequest)
	if err == nil {
		jsonAddGroovyScriptedUncachedAttributeCriteriaRequest, _ := json.Marshal(dst.AddGroovyScriptedUncachedAttributeCriteriaRequest)
		if string(jsonAddGroovyScriptedUncachedAttributeCriteriaRequest) == "{}" { // empty struct
			dst.AddGroovyScriptedUncachedAttributeCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGroovyScriptedUncachedAttributeCriteriaRequest = nil
	}

	// try to unmarshal data into AddSimpleUncachedAttributeCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddSimpleUncachedAttributeCriteriaRequest)
	if err == nil {
		jsonAddSimpleUncachedAttributeCriteriaRequest, _ := json.Marshal(dst.AddSimpleUncachedAttributeCriteriaRequest)
		if string(jsonAddSimpleUncachedAttributeCriteriaRequest) == "{}" { // empty struct
			dst.AddSimpleUncachedAttributeCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSimpleUncachedAttributeCriteriaRequest = nil
	}

	// try to unmarshal data into AddThirdPartyUncachedAttributeCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyUncachedAttributeCriteriaRequest)
	if err == nil {
		jsonAddThirdPartyUncachedAttributeCriteriaRequest, _ := json.Marshal(dst.AddThirdPartyUncachedAttributeCriteriaRequest)
		if string(jsonAddThirdPartyUncachedAttributeCriteriaRequest) == "{}" { // empty struct
			dst.AddThirdPartyUncachedAttributeCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyUncachedAttributeCriteriaRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddDefaultUncachedAttributeCriteriaRequest = nil
		dst.AddGroovyScriptedUncachedAttributeCriteriaRequest = nil
		dst.AddSimpleUncachedAttributeCriteriaRequest = nil
		dst.AddThirdPartyUncachedAttributeCriteriaRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddUncachedAttributeCriteriaRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddUncachedAttributeCriteriaRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddUncachedAttributeCriteriaRequest) MarshalJSON() ([]byte, error) {
	if src.AddDefaultUncachedAttributeCriteriaRequest != nil {
		return json.Marshal(&src.AddDefaultUncachedAttributeCriteriaRequest)
	}

	if src.AddGroovyScriptedUncachedAttributeCriteriaRequest != nil {
		return json.Marshal(&src.AddGroovyScriptedUncachedAttributeCriteriaRequest)
	}

	if src.AddSimpleUncachedAttributeCriteriaRequest != nil {
		return json.Marshal(&src.AddSimpleUncachedAttributeCriteriaRequest)
	}

	if src.AddThirdPartyUncachedAttributeCriteriaRequest != nil {
		return json.Marshal(&src.AddThirdPartyUncachedAttributeCriteriaRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddUncachedAttributeCriteriaRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddDefaultUncachedAttributeCriteriaRequest != nil {
		return obj.AddDefaultUncachedAttributeCriteriaRequest
	}

	if obj.AddGroovyScriptedUncachedAttributeCriteriaRequest != nil {
		return obj.AddGroovyScriptedUncachedAttributeCriteriaRequest
	}

	if obj.AddSimpleUncachedAttributeCriteriaRequest != nil {
		return obj.AddSimpleUncachedAttributeCriteriaRequest
	}

	if obj.AddThirdPartyUncachedAttributeCriteriaRequest != nil {
		return obj.AddThirdPartyUncachedAttributeCriteriaRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddUncachedAttributeCriteriaRequest struct {
	value *AddUncachedAttributeCriteriaRequest
	isSet bool
}

func (v NullableAddUncachedAttributeCriteriaRequest) Get() *AddUncachedAttributeCriteriaRequest {
	return v.value
}

func (v *NullableAddUncachedAttributeCriteriaRequest) Set(val *AddUncachedAttributeCriteriaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUncachedAttributeCriteriaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUncachedAttributeCriteriaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUncachedAttributeCriteriaRequest(val *AddUncachedAttributeCriteriaRequest) *NullableAddUncachedAttributeCriteriaRequest {
	return &NullableAddUncachedAttributeCriteriaRequest{value: val, isSet: true}
}

func (v NullableAddUncachedAttributeCriteriaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUncachedAttributeCriteriaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
