/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumdigestMd5SaslMechanismHandlerSchemaUrn the model 'EnumdigestMd5SaslMechanismHandlerSchemaUrn'
type EnumdigestMd5SaslMechanismHandlerSchemaUrn string

// List of Enumdigest-md5-sasl-mechanism-handlerSchemaUrn
const (
	ENUMDIGESTMD5SASLMECHANISMHANDLERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0SASL_MECHANISM_HANDLERDIGEST_MD5 EnumdigestMd5SaslMechanismHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5"
)

// All allowed values of EnumdigestMd5SaslMechanismHandlerSchemaUrn enum
var AllowedEnumdigestMd5SaslMechanismHandlerSchemaUrnEnumValues = []EnumdigestMd5SaslMechanismHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:sasl-mechanism-handler:digest-md5",
}

func (v *EnumdigestMd5SaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumdigestMd5SaslMechanismHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumdigestMd5SaslMechanismHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumdigestMd5SaslMechanismHandlerSchemaUrn", value)
}

// NewEnumdigestMd5SaslMechanismHandlerSchemaUrnFromValue returns a pointer to a valid EnumdigestMd5SaslMechanismHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumdigestMd5SaslMechanismHandlerSchemaUrnFromValue(v string) (*EnumdigestMd5SaslMechanismHandlerSchemaUrn, error) {
	ev := EnumdigestMd5SaslMechanismHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumdigestMd5SaslMechanismHandlerSchemaUrn: valid values are %v", v, AllowedEnumdigestMd5SaslMechanismHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumdigestMd5SaslMechanismHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumdigestMd5SaslMechanismHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumdigest-md5-sasl-mechanism-handlerSchemaUrn value
func (v EnumdigestMd5SaslMechanismHandlerSchemaUrn) Ptr() *EnumdigestMd5SaslMechanismHandlerSchemaUrn {
	return &v
}

type NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn struct {
	value *EnumdigestMd5SaslMechanismHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) Get() *EnumdigestMd5SaslMechanismHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) Set(val *EnumdigestMd5SaslMechanismHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumdigestMd5SaslMechanismHandlerSchemaUrn(val *EnumdigestMd5SaslMechanismHandlerSchemaUrn) *NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn {
	return &NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumdigestMd5SaslMechanismHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
