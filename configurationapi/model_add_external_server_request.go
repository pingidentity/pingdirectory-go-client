/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddExternalServerRequest - struct for AddExternalServerRequest
type AddExternalServerRequest struct {
	AddActiveDirectoryExternalServerRequest         *AddActiveDirectoryExternalServerRequest
	AddAmazonAwsExternalServerRequest               *AddAmazonAwsExternalServerRequest
	AddConjurExternalServerRequest                  *AddConjurExternalServerRequest
	AddHttpExternalServerRequest                    *AddHttpExternalServerRequest
	AddHttpProxyExternalServerRequest               *AddHttpProxyExternalServerRequest
	AddJdbcExternalServerRequest                    *AddJdbcExternalServerRequest
	AddLdapExternalServerRequest                    *AddLdapExternalServerRequest
	AddNokiaDsExternalServerRequest                 *AddNokiaDsExternalServerRequest
	AddNokiaProxyServerExternalServerRequest        *AddNokiaProxyServerExternalServerRequest
	AddOpendjExternalServerRequest                  *AddOpendjExternalServerRequest
	AddOracleUnifiedDirectoryExternalServerRequest  *AddOracleUnifiedDirectoryExternalServerRequest
	AddPingIdentityDsExternalServerRequest          *AddPingIdentityDsExternalServerRequest
	AddPingIdentityProxyServerExternalServerRequest *AddPingIdentityProxyServerExternalServerRequest
	AddPingOneHttpExternalServerRequest             *AddPingOneHttpExternalServerRequest
	AddSmtpExternalServerRequest                    *AddSmtpExternalServerRequest
	AddSyslogExternalServerRequest                  *AddSyslogExternalServerRequest
	AddVaultExternalServerRequest                   *AddVaultExternalServerRequest
}

// AddActiveDirectoryExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddActiveDirectoryExternalServerRequest wrapped in AddExternalServerRequest
func AddActiveDirectoryExternalServerRequestAsAddExternalServerRequest(v *AddActiveDirectoryExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddActiveDirectoryExternalServerRequest: v,
	}
}

// AddAmazonAwsExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddAmazonAwsExternalServerRequest wrapped in AddExternalServerRequest
func AddAmazonAwsExternalServerRequestAsAddExternalServerRequest(v *AddAmazonAwsExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddAmazonAwsExternalServerRequest: v,
	}
}

// AddConjurExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddConjurExternalServerRequest wrapped in AddExternalServerRequest
func AddConjurExternalServerRequestAsAddExternalServerRequest(v *AddConjurExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddConjurExternalServerRequest: v,
	}
}

// AddHttpExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddHttpExternalServerRequest wrapped in AddExternalServerRequest
func AddHttpExternalServerRequestAsAddExternalServerRequest(v *AddHttpExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddHttpExternalServerRequest: v,
	}
}

// AddHttpProxyExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddHttpProxyExternalServerRequest wrapped in AddExternalServerRequest
func AddHttpProxyExternalServerRequestAsAddExternalServerRequest(v *AddHttpProxyExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddHttpProxyExternalServerRequest: v,
	}
}

// AddJdbcExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddJdbcExternalServerRequest wrapped in AddExternalServerRequest
func AddJdbcExternalServerRequestAsAddExternalServerRequest(v *AddJdbcExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddJdbcExternalServerRequest: v,
	}
}

// AddLdapExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddLdapExternalServerRequest wrapped in AddExternalServerRequest
func AddLdapExternalServerRequestAsAddExternalServerRequest(v *AddLdapExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddLdapExternalServerRequest: v,
	}
}

// AddNokiaDsExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddNokiaDsExternalServerRequest wrapped in AddExternalServerRequest
func AddNokiaDsExternalServerRequestAsAddExternalServerRequest(v *AddNokiaDsExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddNokiaDsExternalServerRequest: v,
	}
}

// AddNokiaProxyServerExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddNokiaProxyServerExternalServerRequest wrapped in AddExternalServerRequest
func AddNokiaProxyServerExternalServerRequestAsAddExternalServerRequest(v *AddNokiaProxyServerExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddNokiaProxyServerExternalServerRequest: v,
	}
}

// AddOpendjExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddOpendjExternalServerRequest wrapped in AddExternalServerRequest
func AddOpendjExternalServerRequestAsAddExternalServerRequest(v *AddOpendjExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddOpendjExternalServerRequest: v,
	}
}

// AddOracleUnifiedDirectoryExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddOracleUnifiedDirectoryExternalServerRequest wrapped in AddExternalServerRequest
func AddOracleUnifiedDirectoryExternalServerRequestAsAddExternalServerRequest(v *AddOracleUnifiedDirectoryExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddOracleUnifiedDirectoryExternalServerRequest: v,
	}
}

// AddPingIdentityDsExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddPingIdentityDsExternalServerRequest wrapped in AddExternalServerRequest
func AddPingIdentityDsExternalServerRequestAsAddExternalServerRequest(v *AddPingIdentityDsExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddPingIdentityDsExternalServerRequest: v,
	}
}

// AddPingIdentityProxyServerExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddPingIdentityProxyServerExternalServerRequest wrapped in AddExternalServerRequest
func AddPingIdentityProxyServerExternalServerRequestAsAddExternalServerRequest(v *AddPingIdentityProxyServerExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddPingIdentityProxyServerExternalServerRequest: v,
	}
}

// AddPingOneHttpExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddPingOneHttpExternalServerRequest wrapped in AddExternalServerRequest
func AddPingOneHttpExternalServerRequestAsAddExternalServerRequest(v *AddPingOneHttpExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddPingOneHttpExternalServerRequest: v,
	}
}

// AddSmtpExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddSmtpExternalServerRequest wrapped in AddExternalServerRequest
func AddSmtpExternalServerRequestAsAddExternalServerRequest(v *AddSmtpExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddSmtpExternalServerRequest: v,
	}
}

// AddSyslogExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddSyslogExternalServerRequest wrapped in AddExternalServerRequest
func AddSyslogExternalServerRequestAsAddExternalServerRequest(v *AddSyslogExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddSyslogExternalServerRequest: v,
	}
}

// AddVaultExternalServerRequestAsAddExternalServerRequest is a convenience function that returns AddVaultExternalServerRequest wrapped in AddExternalServerRequest
func AddVaultExternalServerRequestAsAddExternalServerRequest(v *AddVaultExternalServerRequest) AddExternalServerRequest {
	return AddExternalServerRequest{
		AddVaultExternalServerRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddExternalServerRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddActiveDirectoryExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddActiveDirectoryExternalServerRequest)
	if err == nil {
		jsonAddActiveDirectoryExternalServerRequest, _ := json.Marshal(dst.AddActiveDirectoryExternalServerRequest)
		if string(jsonAddActiveDirectoryExternalServerRequest) == "{}" { // empty struct
			dst.AddActiveDirectoryExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddActiveDirectoryExternalServerRequest = nil
	}

	// try to unmarshal data into AddAmazonAwsExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddAmazonAwsExternalServerRequest)
	if err == nil {
		jsonAddAmazonAwsExternalServerRequest, _ := json.Marshal(dst.AddAmazonAwsExternalServerRequest)
		if string(jsonAddAmazonAwsExternalServerRequest) == "{}" { // empty struct
			dst.AddAmazonAwsExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddAmazonAwsExternalServerRequest = nil
	}

	// try to unmarshal data into AddConjurExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddConjurExternalServerRequest)
	if err == nil {
		jsonAddConjurExternalServerRequest, _ := json.Marshal(dst.AddConjurExternalServerRequest)
		if string(jsonAddConjurExternalServerRequest) == "{}" { // empty struct
			dst.AddConjurExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddConjurExternalServerRequest = nil
	}

	// try to unmarshal data into AddHttpExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddHttpExternalServerRequest)
	if err == nil {
		jsonAddHttpExternalServerRequest, _ := json.Marshal(dst.AddHttpExternalServerRequest)
		if string(jsonAddHttpExternalServerRequest) == "{}" { // empty struct
			dst.AddHttpExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddHttpExternalServerRequest = nil
	}

	// try to unmarshal data into AddHttpProxyExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddHttpProxyExternalServerRequest)
	if err == nil {
		jsonAddHttpProxyExternalServerRequest, _ := json.Marshal(dst.AddHttpProxyExternalServerRequest)
		if string(jsonAddHttpProxyExternalServerRequest) == "{}" { // empty struct
			dst.AddHttpProxyExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddHttpProxyExternalServerRequest = nil
	}

	// try to unmarshal data into AddJdbcExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddJdbcExternalServerRequest)
	if err == nil {
		jsonAddJdbcExternalServerRequest, _ := json.Marshal(dst.AddJdbcExternalServerRequest)
		if string(jsonAddJdbcExternalServerRequest) == "{}" { // empty struct
			dst.AddJdbcExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddJdbcExternalServerRequest = nil
	}

	// try to unmarshal data into AddLdapExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddLdapExternalServerRequest)
	if err == nil {
		jsonAddLdapExternalServerRequest, _ := json.Marshal(dst.AddLdapExternalServerRequest)
		if string(jsonAddLdapExternalServerRequest) == "{}" { // empty struct
			dst.AddLdapExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddLdapExternalServerRequest = nil
	}

	// try to unmarshal data into AddNokiaDsExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddNokiaDsExternalServerRequest)
	if err == nil {
		jsonAddNokiaDsExternalServerRequest, _ := json.Marshal(dst.AddNokiaDsExternalServerRequest)
		if string(jsonAddNokiaDsExternalServerRequest) == "{}" { // empty struct
			dst.AddNokiaDsExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddNokiaDsExternalServerRequest = nil
	}

	// try to unmarshal data into AddNokiaProxyServerExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddNokiaProxyServerExternalServerRequest)
	if err == nil {
		jsonAddNokiaProxyServerExternalServerRequest, _ := json.Marshal(dst.AddNokiaProxyServerExternalServerRequest)
		if string(jsonAddNokiaProxyServerExternalServerRequest) == "{}" { // empty struct
			dst.AddNokiaProxyServerExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddNokiaProxyServerExternalServerRequest = nil
	}

	// try to unmarshal data into AddOpendjExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddOpendjExternalServerRequest)
	if err == nil {
		jsonAddOpendjExternalServerRequest, _ := json.Marshal(dst.AddOpendjExternalServerRequest)
		if string(jsonAddOpendjExternalServerRequest) == "{}" { // empty struct
			dst.AddOpendjExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddOpendjExternalServerRequest = nil
	}

	// try to unmarshal data into AddOracleUnifiedDirectoryExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddOracleUnifiedDirectoryExternalServerRequest)
	if err == nil {
		jsonAddOracleUnifiedDirectoryExternalServerRequest, _ := json.Marshal(dst.AddOracleUnifiedDirectoryExternalServerRequest)
		if string(jsonAddOracleUnifiedDirectoryExternalServerRequest) == "{}" { // empty struct
			dst.AddOracleUnifiedDirectoryExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddOracleUnifiedDirectoryExternalServerRequest = nil
	}

	// try to unmarshal data into AddPingIdentityDsExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddPingIdentityDsExternalServerRequest)
	if err == nil {
		jsonAddPingIdentityDsExternalServerRequest, _ := json.Marshal(dst.AddPingIdentityDsExternalServerRequest)
		if string(jsonAddPingIdentityDsExternalServerRequest) == "{}" { // empty struct
			dst.AddPingIdentityDsExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddPingIdentityDsExternalServerRequest = nil
	}

	// try to unmarshal data into AddPingIdentityProxyServerExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddPingIdentityProxyServerExternalServerRequest)
	if err == nil {
		jsonAddPingIdentityProxyServerExternalServerRequest, _ := json.Marshal(dst.AddPingIdentityProxyServerExternalServerRequest)
		if string(jsonAddPingIdentityProxyServerExternalServerRequest) == "{}" { // empty struct
			dst.AddPingIdentityProxyServerExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddPingIdentityProxyServerExternalServerRequest = nil
	}

	// try to unmarshal data into AddPingOneHttpExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddPingOneHttpExternalServerRequest)
	if err == nil {
		jsonAddPingOneHttpExternalServerRequest, _ := json.Marshal(dst.AddPingOneHttpExternalServerRequest)
		if string(jsonAddPingOneHttpExternalServerRequest) == "{}" { // empty struct
			dst.AddPingOneHttpExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddPingOneHttpExternalServerRequest = nil
	}

	// try to unmarshal data into AddSmtpExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSmtpExternalServerRequest)
	if err == nil {
		jsonAddSmtpExternalServerRequest, _ := json.Marshal(dst.AddSmtpExternalServerRequest)
		if string(jsonAddSmtpExternalServerRequest) == "{}" { // empty struct
			dst.AddSmtpExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSmtpExternalServerRequest = nil
	}

	// try to unmarshal data into AddSyslogExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSyslogExternalServerRequest)
	if err == nil {
		jsonAddSyslogExternalServerRequest, _ := json.Marshal(dst.AddSyslogExternalServerRequest)
		if string(jsonAddSyslogExternalServerRequest) == "{}" { // empty struct
			dst.AddSyslogExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSyslogExternalServerRequest = nil
	}

	// try to unmarshal data into AddVaultExternalServerRequest
	err = newStrictDecoder(data).Decode(&dst.AddVaultExternalServerRequest)
	if err == nil {
		jsonAddVaultExternalServerRequest, _ := json.Marshal(dst.AddVaultExternalServerRequest)
		if string(jsonAddVaultExternalServerRequest) == "{}" { // empty struct
			dst.AddVaultExternalServerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddVaultExternalServerRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddActiveDirectoryExternalServerRequest = nil
		dst.AddAmazonAwsExternalServerRequest = nil
		dst.AddConjurExternalServerRequest = nil
		dst.AddHttpExternalServerRequest = nil
		dst.AddHttpProxyExternalServerRequest = nil
		dst.AddJdbcExternalServerRequest = nil
		dst.AddLdapExternalServerRequest = nil
		dst.AddNokiaDsExternalServerRequest = nil
		dst.AddNokiaProxyServerExternalServerRequest = nil
		dst.AddOpendjExternalServerRequest = nil
		dst.AddOracleUnifiedDirectoryExternalServerRequest = nil
		dst.AddPingIdentityDsExternalServerRequest = nil
		dst.AddPingIdentityProxyServerExternalServerRequest = nil
		dst.AddPingOneHttpExternalServerRequest = nil
		dst.AddSmtpExternalServerRequest = nil
		dst.AddSyslogExternalServerRequest = nil
		dst.AddVaultExternalServerRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddExternalServerRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddExternalServerRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddExternalServerRequest) MarshalJSON() ([]byte, error) {
	if src.AddActiveDirectoryExternalServerRequest != nil {
		return json.Marshal(&src.AddActiveDirectoryExternalServerRequest)
	}

	if src.AddAmazonAwsExternalServerRequest != nil {
		return json.Marshal(&src.AddAmazonAwsExternalServerRequest)
	}

	if src.AddConjurExternalServerRequest != nil {
		return json.Marshal(&src.AddConjurExternalServerRequest)
	}

	if src.AddHttpExternalServerRequest != nil {
		return json.Marshal(&src.AddHttpExternalServerRequest)
	}

	if src.AddHttpProxyExternalServerRequest != nil {
		return json.Marshal(&src.AddHttpProxyExternalServerRequest)
	}

	if src.AddJdbcExternalServerRequest != nil {
		return json.Marshal(&src.AddJdbcExternalServerRequest)
	}

	if src.AddLdapExternalServerRequest != nil {
		return json.Marshal(&src.AddLdapExternalServerRequest)
	}

	if src.AddNokiaDsExternalServerRequest != nil {
		return json.Marshal(&src.AddNokiaDsExternalServerRequest)
	}

	if src.AddNokiaProxyServerExternalServerRequest != nil {
		return json.Marshal(&src.AddNokiaProxyServerExternalServerRequest)
	}

	if src.AddOpendjExternalServerRequest != nil {
		return json.Marshal(&src.AddOpendjExternalServerRequest)
	}

	if src.AddOracleUnifiedDirectoryExternalServerRequest != nil {
		return json.Marshal(&src.AddOracleUnifiedDirectoryExternalServerRequest)
	}

	if src.AddPingIdentityDsExternalServerRequest != nil {
		return json.Marshal(&src.AddPingIdentityDsExternalServerRequest)
	}

	if src.AddPingIdentityProxyServerExternalServerRequest != nil {
		return json.Marshal(&src.AddPingIdentityProxyServerExternalServerRequest)
	}

	if src.AddPingOneHttpExternalServerRequest != nil {
		return json.Marshal(&src.AddPingOneHttpExternalServerRequest)
	}

	if src.AddSmtpExternalServerRequest != nil {
		return json.Marshal(&src.AddSmtpExternalServerRequest)
	}

	if src.AddSyslogExternalServerRequest != nil {
		return json.Marshal(&src.AddSyslogExternalServerRequest)
	}

	if src.AddVaultExternalServerRequest != nil {
		return json.Marshal(&src.AddVaultExternalServerRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddExternalServerRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddActiveDirectoryExternalServerRequest != nil {
		return obj.AddActiveDirectoryExternalServerRequest
	}

	if obj.AddAmazonAwsExternalServerRequest != nil {
		return obj.AddAmazonAwsExternalServerRequest
	}

	if obj.AddConjurExternalServerRequest != nil {
		return obj.AddConjurExternalServerRequest
	}

	if obj.AddHttpExternalServerRequest != nil {
		return obj.AddHttpExternalServerRequest
	}

	if obj.AddHttpProxyExternalServerRequest != nil {
		return obj.AddHttpProxyExternalServerRequest
	}

	if obj.AddJdbcExternalServerRequest != nil {
		return obj.AddJdbcExternalServerRequest
	}

	if obj.AddLdapExternalServerRequest != nil {
		return obj.AddLdapExternalServerRequest
	}

	if obj.AddNokiaDsExternalServerRequest != nil {
		return obj.AddNokiaDsExternalServerRequest
	}

	if obj.AddNokiaProxyServerExternalServerRequest != nil {
		return obj.AddNokiaProxyServerExternalServerRequest
	}

	if obj.AddOpendjExternalServerRequest != nil {
		return obj.AddOpendjExternalServerRequest
	}

	if obj.AddOracleUnifiedDirectoryExternalServerRequest != nil {
		return obj.AddOracleUnifiedDirectoryExternalServerRequest
	}

	if obj.AddPingIdentityDsExternalServerRequest != nil {
		return obj.AddPingIdentityDsExternalServerRequest
	}

	if obj.AddPingIdentityProxyServerExternalServerRequest != nil {
		return obj.AddPingIdentityProxyServerExternalServerRequest
	}

	if obj.AddPingOneHttpExternalServerRequest != nil {
		return obj.AddPingOneHttpExternalServerRequest
	}

	if obj.AddSmtpExternalServerRequest != nil {
		return obj.AddSmtpExternalServerRequest
	}

	if obj.AddSyslogExternalServerRequest != nil {
		return obj.AddSyslogExternalServerRequest
	}

	if obj.AddVaultExternalServerRequest != nil {
		return obj.AddVaultExternalServerRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddExternalServerRequest struct {
	value *AddExternalServerRequest
	isSet bool
}

func (v NullableAddExternalServerRequest) Get() *AddExternalServerRequest {
	return v.value
}

func (v *NullableAddExternalServerRequest) Set(val *AddExternalServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddExternalServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddExternalServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddExternalServerRequest(val *AddExternalServerRequest) *NullableAddExternalServerRequest {
	return &NullableAddExternalServerRequest{value: val, isSet: true}
}

func (v NullableAddExternalServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddExternalServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
