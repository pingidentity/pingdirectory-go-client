/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginUpdateTargetAttributeBehaviorProp The behavior to exhibit for modify and modify DN operations that attempt to update the set of values for the target attribute.
type EnumpluginUpdateTargetAttributeBehaviorProp string

// List of Enumplugin-updateTargetAttributeBehaviorProp
const (
	ENUMPLUGINUPDATETARGETATTRIBUTEBEHAVIORPROP_ALWAYS_ALLOW                       EnumpluginUpdateTargetAttributeBehaviorProp = "always-allow"
	ENUMPLUGINUPDATETARGETATTRIBUTEBEHAVIORPROP_ALLOW_ONLY_FOR_NON_COMPOSED_VALUES EnumpluginUpdateTargetAttributeBehaviorProp = "allow-only-for-non-composed-values"
	ENUMPLUGINUPDATETARGETATTRIBUTEBEHAVIORPROP_NEVER_ALLOW                        EnumpluginUpdateTargetAttributeBehaviorProp = "never-allow"
)

// All allowed values of EnumpluginUpdateTargetAttributeBehaviorProp enum
var AllowedEnumpluginUpdateTargetAttributeBehaviorPropEnumValues = []EnumpluginUpdateTargetAttributeBehaviorProp{
	"always-allow",
	"allow-only-for-non-composed-values",
	"never-allow",
}

func (v *EnumpluginUpdateTargetAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginUpdateTargetAttributeBehaviorProp(value)
	for _, existing := range AllowedEnumpluginUpdateTargetAttributeBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginUpdateTargetAttributeBehaviorProp", value)
}

// NewEnumpluginUpdateTargetAttributeBehaviorPropFromValue returns a pointer to a valid EnumpluginUpdateTargetAttributeBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginUpdateTargetAttributeBehaviorPropFromValue(v string) (*EnumpluginUpdateTargetAttributeBehaviorProp, error) {
	ev := EnumpluginUpdateTargetAttributeBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginUpdateTargetAttributeBehaviorProp: valid values are %v", v, AllowedEnumpluginUpdateTargetAttributeBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginUpdateTargetAttributeBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginUpdateTargetAttributeBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-updateTargetAttributeBehaviorProp value
func (v EnumpluginUpdateTargetAttributeBehaviorProp) Ptr() *EnumpluginUpdateTargetAttributeBehaviorProp {
	return &v
}

type NullableEnumpluginUpdateTargetAttributeBehaviorProp struct {
	value *EnumpluginUpdateTargetAttributeBehaviorProp
	isSet bool
}

func (v NullableEnumpluginUpdateTargetAttributeBehaviorProp) Get() *EnumpluginUpdateTargetAttributeBehaviorProp {
	return v.value
}

func (v *NullableEnumpluginUpdateTargetAttributeBehaviorProp) Set(val *EnumpluginUpdateTargetAttributeBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginUpdateTargetAttributeBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginUpdateTargetAttributeBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginUpdateTargetAttributeBehaviorProp(val *EnumpluginUpdateTargetAttributeBehaviorProp) *NullableEnumpluginUpdateTargetAttributeBehaviorProp {
	return &NullableEnumpluginUpdateTargetAttributeBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumpluginUpdateTargetAttributeBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginUpdateTargetAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
