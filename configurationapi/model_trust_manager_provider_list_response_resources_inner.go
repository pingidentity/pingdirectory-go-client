/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// TrustManagerProviderListResponseResourcesInner - struct for TrustManagerProviderListResponseResourcesInner
type TrustManagerProviderListResponseResourcesInner struct {
	BlindTrustManagerProviderResponse      *BlindTrustManagerProviderResponse
	FileBasedTrustManagerProviderResponse  *FileBasedTrustManagerProviderResponse
	JvmDefaultTrustManagerProviderResponse *JvmDefaultTrustManagerProviderResponse
	ThirdPartyTrustManagerProviderResponse *ThirdPartyTrustManagerProviderResponse
}

// BlindTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner is a convenience function that returns BlindTrustManagerProviderResponse wrapped in TrustManagerProviderListResponseResourcesInner
func BlindTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner(v *BlindTrustManagerProviderResponse) TrustManagerProviderListResponseResourcesInner {
	return TrustManagerProviderListResponseResourcesInner{
		BlindTrustManagerProviderResponse: v,
	}
}

// FileBasedTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner is a convenience function that returns FileBasedTrustManagerProviderResponse wrapped in TrustManagerProviderListResponseResourcesInner
func FileBasedTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner(v *FileBasedTrustManagerProviderResponse) TrustManagerProviderListResponseResourcesInner {
	return TrustManagerProviderListResponseResourcesInner{
		FileBasedTrustManagerProviderResponse: v,
	}
}

// JvmDefaultTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner is a convenience function that returns JvmDefaultTrustManagerProviderResponse wrapped in TrustManagerProviderListResponseResourcesInner
func JvmDefaultTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner(v *JvmDefaultTrustManagerProviderResponse) TrustManagerProviderListResponseResourcesInner {
	return TrustManagerProviderListResponseResourcesInner{
		JvmDefaultTrustManagerProviderResponse: v,
	}
}

// ThirdPartyTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner is a convenience function that returns ThirdPartyTrustManagerProviderResponse wrapped in TrustManagerProviderListResponseResourcesInner
func ThirdPartyTrustManagerProviderResponseAsTrustManagerProviderListResponseResourcesInner(v *ThirdPartyTrustManagerProviderResponse) TrustManagerProviderListResponseResourcesInner {
	return TrustManagerProviderListResponseResourcesInner{
		ThirdPartyTrustManagerProviderResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *TrustManagerProviderListResponseResourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into BlindTrustManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.BlindTrustManagerProviderResponse)
	if err == nil {
		jsonBlindTrustManagerProviderResponse, _ := json.Marshal(dst.BlindTrustManagerProviderResponse)
		if string(jsonBlindTrustManagerProviderResponse) == "{}" { // empty struct
			dst.BlindTrustManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.BlindTrustManagerProviderResponse = nil
	}

	// try to unmarshal data into FileBasedTrustManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedTrustManagerProviderResponse)
	if err == nil {
		jsonFileBasedTrustManagerProviderResponse, _ := json.Marshal(dst.FileBasedTrustManagerProviderResponse)
		if string(jsonFileBasedTrustManagerProviderResponse) == "{}" { // empty struct
			dst.FileBasedTrustManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedTrustManagerProviderResponse = nil
	}

	// try to unmarshal data into JvmDefaultTrustManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.JvmDefaultTrustManagerProviderResponse)
	if err == nil {
		jsonJvmDefaultTrustManagerProviderResponse, _ := json.Marshal(dst.JvmDefaultTrustManagerProviderResponse)
		if string(jsonJvmDefaultTrustManagerProviderResponse) == "{}" { // empty struct
			dst.JvmDefaultTrustManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.JvmDefaultTrustManagerProviderResponse = nil
	}

	// try to unmarshal data into ThirdPartyTrustManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyTrustManagerProviderResponse)
	if err == nil {
		jsonThirdPartyTrustManagerProviderResponse, _ := json.Marshal(dst.ThirdPartyTrustManagerProviderResponse)
		if string(jsonThirdPartyTrustManagerProviderResponse) == "{}" { // empty struct
			dst.ThirdPartyTrustManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyTrustManagerProviderResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.BlindTrustManagerProviderResponse = nil
		dst.FileBasedTrustManagerProviderResponse = nil
		dst.JvmDefaultTrustManagerProviderResponse = nil
		dst.ThirdPartyTrustManagerProviderResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(TrustManagerProviderListResponseResourcesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(TrustManagerProviderListResponseResourcesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src TrustManagerProviderListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	if src.BlindTrustManagerProviderResponse != nil {
		return json.Marshal(&src.BlindTrustManagerProviderResponse)
	}

	if src.FileBasedTrustManagerProviderResponse != nil {
		return json.Marshal(&src.FileBasedTrustManagerProviderResponse)
	}

	if src.JvmDefaultTrustManagerProviderResponse != nil {
		return json.Marshal(&src.JvmDefaultTrustManagerProviderResponse)
	}

	if src.ThirdPartyTrustManagerProviderResponse != nil {
		return json.Marshal(&src.ThirdPartyTrustManagerProviderResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *TrustManagerProviderListResponseResourcesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.BlindTrustManagerProviderResponse != nil {
		return obj.BlindTrustManagerProviderResponse
	}

	if obj.FileBasedTrustManagerProviderResponse != nil {
		return obj.FileBasedTrustManagerProviderResponse
	}

	if obj.JvmDefaultTrustManagerProviderResponse != nil {
		return obj.JvmDefaultTrustManagerProviderResponse
	}

	if obj.ThirdPartyTrustManagerProviderResponse != nil {
		return obj.ThirdPartyTrustManagerProviderResponse
	}

	// all schemas are nil
	return nil
}

type NullableTrustManagerProviderListResponseResourcesInner struct {
	value *TrustManagerProviderListResponseResourcesInner
	isSet bool
}

func (v NullableTrustManagerProviderListResponseResourcesInner) Get() *TrustManagerProviderListResponseResourcesInner {
	return v.value
}

func (v *NullableTrustManagerProviderListResponseResourcesInner) Set(val *TrustManagerProviderListResponseResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableTrustManagerProviderListResponseResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableTrustManagerProviderListResponseResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrustManagerProviderListResponseResourcesInner(val *TrustManagerProviderListResponseResourcesInner) *NullableTrustManagerProviderListResponseResourcesInner {
	return &NullableTrustManagerProviderListResponseResourcesInner{value: val, isSet: true}
}

func (v NullableTrustManagerProviderListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrustManagerProviderListResponseResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
