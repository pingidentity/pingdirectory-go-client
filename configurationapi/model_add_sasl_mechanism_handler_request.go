/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddSaslMechanismHandlerRequest - struct for AddSaslMechanismHandlerRequest
type AddSaslMechanismHandlerRequest struct {
	AddOauthBearerSaslMechanismHandlerRequest           *AddOauthBearerSaslMechanismHandlerRequest
	AddThirdPartySaslMechanismHandlerRequest            *AddThirdPartySaslMechanismHandlerRequest
	AddUnboundidDeliveredOtpSaslMechanismHandlerRequest *AddUnboundidDeliveredOtpSaslMechanismHandlerRequest
	AddUnboundidMsChapV2SaslMechanismHandlerRequest     *AddUnboundidMsChapV2SaslMechanismHandlerRequest
}

// AddOauthBearerSaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest is a convenience function that returns AddOauthBearerSaslMechanismHandlerRequest wrapped in AddSaslMechanismHandlerRequest
func AddOauthBearerSaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest(v *AddOauthBearerSaslMechanismHandlerRequest) AddSaslMechanismHandlerRequest {
	return AddSaslMechanismHandlerRequest{
		AddOauthBearerSaslMechanismHandlerRequest: v,
	}
}

// AddThirdPartySaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest is a convenience function that returns AddThirdPartySaslMechanismHandlerRequest wrapped in AddSaslMechanismHandlerRequest
func AddThirdPartySaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest(v *AddThirdPartySaslMechanismHandlerRequest) AddSaslMechanismHandlerRequest {
	return AddSaslMechanismHandlerRequest{
		AddThirdPartySaslMechanismHandlerRequest: v,
	}
}

// AddUnboundidDeliveredOtpSaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest is a convenience function that returns AddUnboundidDeliveredOtpSaslMechanismHandlerRequest wrapped in AddSaslMechanismHandlerRequest
func AddUnboundidDeliveredOtpSaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest(v *AddUnboundidDeliveredOtpSaslMechanismHandlerRequest) AddSaslMechanismHandlerRequest {
	return AddSaslMechanismHandlerRequest{
		AddUnboundidDeliveredOtpSaslMechanismHandlerRequest: v,
	}
}

// AddUnboundidMsChapV2SaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest is a convenience function that returns AddUnboundidMsChapV2SaslMechanismHandlerRequest wrapped in AddSaslMechanismHandlerRequest
func AddUnboundidMsChapV2SaslMechanismHandlerRequestAsAddSaslMechanismHandlerRequest(v *AddUnboundidMsChapV2SaslMechanismHandlerRequest) AddSaslMechanismHandlerRequest {
	return AddSaslMechanismHandlerRequest{
		AddUnboundidMsChapV2SaslMechanismHandlerRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddSaslMechanismHandlerRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddOauthBearerSaslMechanismHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddOauthBearerSaslMechanismHandlerRequest)
	if err == nil {
		jsonAddOauthBearerSaslMechanismHandlerRequest, _ := json.Marshal(dst.AddOauthBearerSaslMechanismHandlerRequest)
		if string(jsonAddOauthBearerSaslMechanismHandlerRequest) == "{}" { // empty struct
			dst.AddOauthBearerSaslMechanismHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddOauthBearerSaslMechanismHandlerRequest = nil
	}

	// try to unmarshal data into AddThirdPartySaslMechanismHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartySaslMechanismHandlerRequest)
	if err == nil {
		jsonAddThirdPartySaslMechanismHandlerRequest, _ := json.Marshal(dst.AddThirdPartySaslMechanismHandlerRequest)
		if string(jsonAddThirdPartySaslMechanismHandlerRequest) == "{}" { // empty struct
			dst.AddThirdPartySaslMechanismHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartySaslMechanismHandlerRequest = nil
	}

	// try to unmarshal data into AddUnboundidDeliveredOtpSaslMechanismHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest)
	if err == nil {
		jsonAddUnboundidDeliveredOtpSaslMechanismHandlerRequest, _ := json.Marshal(dst.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest)
		if string(jsonAddUnboundidDeliveredOtpSaslMechanismHandlerRequest) == "{}" { // empty struct
			dst.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest = nil
	}

	// try to unmarshal data into AddUnboundidMsChapV2SaslMechanismHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddUnboundidMsChapV2SaslMechanismHandlerRequest)
	if err == nil {
		jsonAddUnboundidMsChapV2SaslMechanismHandlerRequest, _ := json.Marshal(dst.AddUnboundidMsChapV2SaslMechanismHandlerRequest)
		if string(jsonAddUnboundidMsChapV2SaslMechanismHandlerRequest) == "{}" { // empty struct
			dst.AddUnboundidMsChapV2SaslMechanismHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddUnboundidMsChapV2SaslMechanismHandlerRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddOauthBearerSaslMechanismHandlerRequest = nil
		dst.AddThirdPartySaslMechanismHandlerRequest = nil
		dst.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest = nil
		dst.AddUnboundidMsChapV2SaslMechanismHandlerRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddSaslMechanismHandlerRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddSaslMechanismHandlerRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddSaslMechanismHandlerRequest) MarshalJSON() ([]byte, error) {
	if src.AddOauthBearerSaslMechanismHandlerRequest != nil {
		return json.Marshal(&src.AddOauthBearerSaslMechanismHandlerRequest)
	}

	if src.AddThirdPartySaslMechanismHandlerRequest != nil {
		return json.Marshal(&src.AddThirdPartySaslMechanismHandlerRequest)
	}

	if src.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest != nil {
		return json.Marshal(&src.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest)
	}

	if src.AddUnboundidMsChapV2SaslMechanismHandlerRequest != nil {
		return json.Marshal(&src.AddUnboundidMsChapV2SaslMechanismHandlerRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddSaslMechanismHandlerRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddOauthBearerSaslMechanismHandlerRequest != nil {
		return obj.AddOauthBearerSaslMechanismHandlerRequest
	}

	if obj.AddThirdPartySaslMechanismHandlerRequest != nil {
		return obj.AddThirdPartySaslMechanismHandlerRequest
	}

	if obj.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest != nil {
		return obj.AddUnboundidDeliveredOtpSaslMechanismHandlerRequest
	}

	if obj.AddUnboundidMsChapV2SaslMechanismHandlerRequest != nil {
		return obj.AddUnboundidMsChapV2SaslMechanismHandlerRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddSaslMechanismHandlerRequest struct {
	value *AddSaslMechanismHandlerRequest
	isSet bool
}

func (v NullableAddSaslMechanismHandlerRequest) Get() *AddSaslMechanismHandlerRequest {
	return v.value
}

func (v *NullableAddSaslMechanismHandlerRequest) Set(val *AddSaslMechanismHandlerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSaslMechanismHandlerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSaslMechanismHandlerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSaslMechanismHandlerRequest(val *AddSaslMechanismHandlerRequest) *NullableAddSaslMechanismHandlerRequest {
	return &NullableAddSaslMechanismHandlerRequest{value: val, isSet: true}
}

func (v NullableAddSaslMechanismHandlerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSaslMechanismHandlerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
