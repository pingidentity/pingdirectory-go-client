/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddConstructedAttributeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddConstructedAttributeRequest{}

// AddConstructedAttributeRequest struct for AddConstructedAttributeRequest
type AddConstructedAttributeRequest struct {
	// Name of the new Constructed Attribute
	AttributeName string                              `json:"attributeName"`
	Schemas       []EnumconstructedAttributeSchemaUrn `json:"schemas,omitempty"`
	// A description for this Constructed Attribute
	Description *string `json:"description,omitempty"`
	// Specifies the attribute type for the attribute whose values are to be constructed.
	AttributeType string `json:"attributeType"`
	// Specifies a pattern for constructing the attribute value using fixed text and attribute values from the entry.
	ValuePattern []string `json:"valuePattern"`
}

// NewAddConstructedAttributeRequest instantiates a new AddConstructedAttributeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddConstructedAttributeRequest(attributeName string, attributeType string, valuePattern []string) *AddConstructedAttributeRequest {
	this := AddConstructedAttributeRequest{}
	this.AttributeName = attributeName
	this.AttributeType = attributeType
	this.ValuePattern = valuePattern
	return &this
}

// NewAddConstructedAttributeRequestWithDefaults instantiates a new AddConstructedAttributeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddConstructedAttributeRequestWithDefaults() *AddConstructedAttributeRequest {
	this := AddConstructedAttributeRequest{}
	return &this
}

// GetAttributeName returns the AttributeName field value
func (o *AddConstructedAttributeRequest) GetAttributeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeName
}

// GetAttributeNameOk returns a tuple with the AttributeName field value
// and a boolean to check if the value has been set.
func (o *AddConstructedAttributeRequest) GetAttributeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeName, true
}

// SetAttributeName sets field value
func (o *AddConstructedAttributeRequest) SetAttributeName(v string) {
	o.AttributeName = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddConstructedAttributeRequest) GetSchemas() []EnumconstructedAttributeSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumconstructedAttributeSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConstructedAttributeRequest) GetSchemasOk() ([]EnumconstructedAttributeSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddConstructedAttributeRequest) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumconstructedAttributeSchemaUrn and assigns it to the Schemas field.
func (o *AddConstructedAttributeRequest) SetSchemas(v []EnumconstructedAttributeSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddConstructedAttributeRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddConstructedAttributeRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddConstructedAttributeRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddConstructedAttributeRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAttributeType returns the AttributeType field value
func (o *AddConstructedAttributeRequest) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *AddConstructedAttributeRequest) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *AddConstructedAttributeRequest) SetAttributeType(v string) {
	o.AttributeType = v
}

// GetValuePattern returns the ValuePattern field value
func (o *AddConstructedAttributeRequest) GetValuePattern() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ValuePattern
}

// GetValuePatternOk returns a tuple with the ValuePattern field value
// and a boolean to check if the value has been set.
func (o *AddConstructedAttributeRequest) GetValuePatternOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValuePattern, true
}

// SetValuePattern sets field value
func (o *AddConstructedAttributeRequest) SetValuePattern(v []string) {
	o.ValuePattern = v
}

func (o AddConstructedAttributeRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddConstructedAttributeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeName"] = o.AttributeName
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["attributeType"] = o.AttributeType
	toSerialize["valuePattern"] = o.ValuePattern
	return toSerialize, nil
}

type NullableAddConstructedAttributeRequest struct {
	value *AddConstructedAttributeRequest
	isSet bool
}

func (v NullableAddConstructedAttributeRequest) Get() *AddConstructedAttributeRequest {
	return v.value
}

func (v *NullableAddConstructedAttributeRequest) Set(val *AddConstructedAttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddConstructedAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddConstructedAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddConstructedAttributeRequest(val *AddConstructedAttributeRequest) *NullableAddConstructedAttributeRequest {
	return &NullableAddConstructedAttributeRequest{value: val, isSet: true}
}

func (v NullableAddConstructedAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddConstructedAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
