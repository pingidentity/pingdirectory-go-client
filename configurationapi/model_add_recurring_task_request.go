/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddRecurringTaskRequest - struct for AddRecurringTaskRequest
type AddRecurringTaskRequest struct {
	AddBackupRecurringTaskRequest                *AddBackupRecurringTaskRequest
	AddCollectSupportDataRecurringTaskRequest    *AddCollectSupportDataRecurringTaskRequest
	AddDelayRecurringTaskRequest                 *AddDelayRecurringTaskRequest
	AddEnterLockdownModeRecurringTaskRequest     *AddEnterLockdownModeRecurringTaskRequest
	AddExecRecurringTaskRequest                  *AddExecRecurringTaskRequest
	AddFileRetentionRecurringTaskRequest         *AddFileRetentionRecurringTaskRequest
	AddGenerateServerProfileRecurringTaskRequest *AddGenerateServerProfileRecurringTaskRequest
	AddLdifExportRecurringTaskRequest            *AddLdifExportRecurringTaskRequest
	AddLeaveLockdownModeRecurringTaskRequest     *AddLeaveLockdownModeRecurringTaskRequest
	AddStaticallyDefinedRecurringTaskRequest     *AddStaticallyDefinedRecurringTaskRequest
	AddThirdPartyRecurringTaskRequest            *AddThirdPartyRecurringTaskRequest
}

// AddBackupRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddBackupRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddBackupRecurringTaskRequestAsAddRecurringTaskRequest(v *AddBackupRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddBackupRecurringTaskRequest: v,
	}
}

// AddCollectSupportDataRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddCollectSupportDataRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddCollectSupportDataRecurringTaskRequestAsAddRecurringTaskRequest(v *AddCollectSupportDataRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddCollectSupportDataRecurringTaskRequest: v,
	}
}

// AddDelayRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddDelayRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddDelayRecurringTaskRequestAsAddRecurringTaskRequest(v *AddDelayRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddDelayRecurringTaskRequest: v,
	}
}

// AddEnterLockdownModeRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddEnterLockdownModeRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddEnterLockdownModeRecurringTaskRequestAsAddRecurringTaskRequest(v *AddEnterLockdownModeRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddEnterLockdownModeRecurringTaskRequest: v,
	}
}

// AddExecRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddExecRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddExecRecurringTaskRequestAsAddRecurringTaskRequest(v *AddExecRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddExecRecurringTaskRequest: v,
	}
}

// AddFileRetentionRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddFileRetentionRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddFileRetentionRecurringTaskRequestAsAddRecurringTaskRequest(v *AddFileRetentionRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddFileRetentionRecurringTaskRequest: v,
	}
}

// AddGenerateServerProfileRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddGenerateServerProfileRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddGenerateServerProfileRecurringTaskRequestAsAddRecurringTaskRequest(v *AddGenerateServerProfileRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddGenerateServerProfileRecurringTaskRequest: v,
	}
}

// AddLdifExportRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddLdifExportRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddLdifExportRecurringTaskRequestAsAddRecurringTaskRequest(v *AddLdifExportRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddLdifExportRecurringTaskRequest: v,
	}
}

// AddLeaveLockdownModeRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddLeaveLockdownModeRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddLeaveLockdownModeRecurringTaskRequestAsAddRecurringTaskRequest(v *AddLeaveLockdownModeRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddLeaveLockdownModeRecurringTaskRequest: v,
	}
}

// AddStaticallyDefinedRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddStaticallyDefinedRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddStaticallyDefinedRecurringTaskRequestAsAddRecurringTaskRequest(v *AddStaticallyDefinedRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddStaticallyDefinedRecurringTaskRequest: v,
	}
}

// AddThirdPartyRecurringTaskRequestAsAddRecurringTaskRequest is a convenience function that returns AddThirdPartyRecurringTaskRequest wrapped in AddRecurringTaskRequest
func AddThirdPartyRecurringTaskRequestAsAddRecurringTaskRequest(v *AddThirdPartyRecurringTaskRequest) AddRecurringTaskRequest {
	return AddRecurringTaskRequest{
		AddThirdPartyRecurringTaskRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddRecurringTaskRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddBackupRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddBackupRecurringTaskRequest)
	if err == nil {
		jsonAddBackupRecurringTaskRequest, _ := json.Marshal(dst.AddBackupRecurringTaskRequest)
		if string(jsonAddBackupRecurringTaskRequest) == "{}" { // empty struct
			dst.AddBackupRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddBackupRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddCollectSupportDataRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddCollectSupportDataRecurringTaskRequest)
	if err == nil {
		jsonAddCollectSupportDataRecurringTaskRequest, _ := json.Marshal(dst.AddCollectSupportDataRecurringTaskRequest)
		if string(jsonAddCollectSupportDataRecurringTaskRequest) == "{}" { // empty struct
			dst.AddCollectSupportDataRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddCollectSupportDataRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddDelayRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddDelayRecurringTaskRequest)
	if err == nil {
		jsonAddDelayRecurringTaskRequest, _ := json.Marshal(dst.AddDelayRecurringTaskRequest)
		if string(jsonAddDelayRecurringTaskRequest) == "{}" { // empty struct
			dst.AddDelayRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddDelayRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddEnterLockdownModeRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddEnterLockdownModeRecurringTaskRequest)
	if err == nil {
		jsonAddEnterLockdownModeRecurringTaskRequest, _ := json.Marshal(dst.AddEnterLockdownModeRecurringTaskRequest)
		if string(jsonAddEnterLockdownModeRecurringTaskRequest) == "{}" { // empty struct
			dst.AddEnterLockdownModeRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddEnterLockdownModeRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddExecRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddExecRecurringTaskRequest)
	if err == nil {
		jsonAddExecRecurringTaskRequest, _ := json.Marshal(dst.AddExecRecurringTaskRequest)
		if string(jsonAddExecRecurringTaskRequest) == "{}" { // empty struct
			dst.AddExecRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddExecRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddFileRetentionRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddFileRetentionRecurringTaskRequest)
	if err == nil {
		jsonAddFileRetentionRecurringTaskRequest, _ := json.Marshal(dst.AddFileRetentionRecurringTaskRequest)
		if string(jsonAddFileRetentionRecurringTaskRequest) == "{}" { // empty struct
			dst.AddFileRetentionRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddFileRetentionRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddGenerateServerProfileRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddGenerateServerProfileRecurringTaskRequest)
	if err == nil {
		jsonAddGenerateServerProfileRecurringTaskRequest, _ := json.Marshal(dst.AddGenerateServerProfileRecurringTaskRequest)
		if string(jsonAddGenerateServerProfileRecurringTaskRequest) == "{}" { // empty struct
			dst.AddGenerateServerProfileRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGenerateServerProfileRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddLdifExportRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddLdifExportRecurringTaskRequest)
	if err == nil {
		jsonAddLdifExportRecurringTaskRequest, _ := json.Marshal(dst.AddLdifExportRecurringTaskRequest)
		if string(jsonAddLdifExportRecurringTaskRequest) == "{}" { // empty struct
			dst.AddLdifExportRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddLdifExportRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddLeaveLockdownModeRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddLeaveLockdownModeRecurringTaskRequest)
	if err == nil {
		jsonAddLeaveLockdownModeRecurringTaskRequest, _ := json.Marshal(dst.AddLeaveLockdownModeRecurringTaskRequest)
		if string(jsonAddLeaveLockdownModeRecurringTaskRequest) == "{}" { // empty struct
			dst.AddLeaveLockdownModeRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddLeaveLockdownModeRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddStaticallyDefinedRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddStaticallyDefinedRecurringTaskRequest)
	if err == nil {
		jsonAddStaticallyDefinedRecurringTaskRequest, _ := json.Marshal(dst.AddStaticallyDefinedRecurringTaskRequest)
		if string(jsonAddStaticallyDefinedRecurringTaskRequest) == "{}" { // empty struct
			dst.AddStaticallyDefinedRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddStaticallyDefinedRecurringTaskRequest = nil
	}

	// try to unmarshal data into AddThirdPartyRecurringTaskRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyRecurringTaskRequest)
	if err == nil {
		jsonAddThirdPartyRecurringTaskRequest, _ := json.Marshal(dst.AddThirdPartyRecurringTaskRequest)
		if string(jsonAddThirdPartyRecurringTaskRequest) == "{}" { // empty struct
			dst.AddThirdPartyRecurringTaskRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyRecurringTaskRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddBackupRecurringTaskRequest = nil
		dst.AddCollectSupportDataRecurringTaskRequest = nil
		dst.AddDelayRecurringTaskRequest = nil
		dst.AddEnterLockdownModeRecurringTaskRequest = nil
		dst.AddExecRecurringTaskRequest = nil
		dst.AddFileRetentionRecurringTaskRequest = nil
		dst.AddGenerateServerProfileRecurringTaskRequest = nil
		dst.AddLdifExportRecurringTaskRequest = nil
		dst.AddLeaveLockdownModeRecurringTaskRequest = nil
		dst.AddStaticallyDefinedRecurringTaskRequest = nil
		dst.AddThirdPartyRecurringTaskRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddRecurringTaskRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddRecurringTaskRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddRecurringTaskRequest) MarshalJSON() ([]byte, error) {
	if src.AddBackupRecurringTaskRequest != nil {
		return json.Marshal(&src.AddBackupRecurringTaskRequest)
	}

	if src.AddCollectSupportDataRecurringTaskRequest != nil {
		return json.Marshal(&src.AddCollectSupportDataRecurringTaskRequest)
	}

	if src.AddDelayRecurringTaskRequest != nil {
		return json.Marshal(&src.AddDelayRecurringTaskRequest)
	}

	if src.AddEnterLockdownModeRecurringTaskRequest != nil {
		return json.Marshal(&src.AddEnterLockdownModeRecurringTaskRequest)
	}

	if src.AddExecRecurringTaskRequest != nil {
		return json.Marshal(&src.AddExecRecurringTaskRequest)
	}

	if src.AddFileRetentionRecurringTaskRequest != nil {
		return json.Marshal(&src.AddFileRetentionRecurringTaskRequest)
	}

	if src.AddGenerateServerProfileRecurringTaskRequest != nil {
		return json.Marshal(&src.AddGenerateServerProfileRecurringTaskRequest)
	}

	if src.AddLdifExportRecurringTaskRequest != nil {
		return json.Marshal(&src.AddLdifExportRecurringTaskRequest)
	}

	if src.AddLeaveLockdownModeRecurringTaskRequest != nil {
		return json.Marshal(&src.AddLeaveLockdownModeRecurringTaskRequest)
	}

	if src.AddStaticallyDefinedRecurringTaskRequest != nil {
		return json.Marshal(&src.AddStaticallyDefinedRecurringTaskRequest)
	}

	if src.AddThirdPartyRecurringTaskRequest != nil {
		return json.Marshal(&src.AddThirdPartyRecurringTaskRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddRecurringTaskRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddBackupRecurringTaskRequest != nil {
		return obj.AddBackupRecurringTaskRequest
	}

	if obj.AddCollectSupportDataRecurringTaskRequest != nil {
		return obj.AddCollectSupportDataRecurringTaskRequest
	}

	if obj.AddDelayRecurringTaskRequest != nil {
		return obj.AddDelayRecurringTaskRequest
	}

	if obj.AddEnterLockdownModeRecurringTaskRequest != nil {
		return obj.AddEnterLockdownModeRecurringTaskRequest
	}

	if obj.AddExecRecurringTaskRequest != nil {
		return obj.AddExecRecurringTaskRequest
	}

	if obj.AddFileRetentionRecurringTaskRequest != nil {
		return obj.AddFileRetentionRecurringTaskRequest
	}

	if obj.AddGenerateServerProfileRecurringTaskRequest != nil {
		return obj.AddGenerateServerProfileRecurringTaskRequest
	}

	if obj.AddLdifExportRecurringTaskRequest != nil {
		return obj.AddLdifExportRecurringTaskRequest
	}

	if obj.AddLeaveLockdownModeRecurringTaskRequest != nil {
		return obj.AddLeaveLockdownModeRecurringTaskRequest
	}

	if obj.AddStaticallyDefinedRecurringTaskRequest != nil {
		return obj.AddStaticallyDefinedRecurringTaskRequest
	}

	if obj.AddThirdPartyRecurringTaskRequest != nil {
		return obj.AddThirdPartyRecurringTaskRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddRecurringTaskRequest struct {
	value *AddRecurringTaskRequest
	isSet bool
}

func (v NullableAddRecurringTaskRequest) Get() *AddRecurringTaskRequest {
	return v.value
}

func (v *NullableAddRecurringTaskRequest) Set(val *AddRecurringTaskRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRecurringTaskRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRecurringTaskRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRecurringTaskRequest(val *AddRecurringTaskRequest) *NullableAddRecurringTaskRequest {
	return &NullableAddRecurringTaskRequest{value: val, isSet: true}
}

func (v NullableAddRecurringTaskRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRecurringTaskRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
