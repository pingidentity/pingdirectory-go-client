/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddStatsdMonitoringEndpointRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddStatsdMonitoringEndpointRequest{}

// AddStatsdMonitoringEndpointRequest struct for AddStatsdMonitoringEndpointRequest
type AddStatsdMonitoringEndpointRequest struct {
	// Name of the new Monitoring Endpoint
	EndpointName string                                  `json:"endpointName"`
	Schemas      []EnumstatsdMonitoringEndpointSchemaUrn `json:"schemas"`
	// The name of the host where this StatsD Monitoring Endpoint should send metric data.
	Hostname string `json:"hostname"`
	// Specifies the port number of the endpoint where metric data should be sent.
	ServerPort     *int64                                    `json:"serverPort,omitempty"`
	ConnectionType *EnummonitoringEndpointConnectionTypeProp `json:"connectionType,omitempty"`
	// The trust manager provider to use if SSL over TCP is to be used for connection-level security.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	// Specifies any optional additional tags to include in StatsD messages. Any additional tags will be appended to the end of each StatsD message, separated by commas. Tags should be written in a [key]:[value] format (\"host:server1\", for example).
	AdditionalTags []string `json:"additionalTags,omitempty"`
	// Indicates whether this Monitoring Endpoint is enabled for use in the Directory Server.
	Enabled bool `json:"enabled"`
}

// NewAddStatsdMonitoringEndpointRequest instantiates a new AddStatsdMonitoringEndpointRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddStatsdMonitoringEndpointRequest(endpointName string, schemas []EnumstatsdMonitoringEndpointSchemaUrn, hostname string, enabled bool) *AddStatsdMonitoringEndpointRequest {
	this := AddStatsdMonitoringEndpointRequest{}
	this.EndpointName = endpointName
	this.Schemas = schemas
	this.Hostname = hostname
	this.Enabled = enabled
	return &this
}

// NewAddStatsdMonitoringEndpointRequestWithDefaults instantiates a new AddStatsdMonitoringEndpointRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddStatsdMonitoringEndpointRequestWithDefaults() *AddStatsdMonitoringEndpointRequest {
	this := AddStatsdMonitoringEndpointRequest{}
	return &this
}

// GetEndpointName returns the EndpointName field value
func (o *AddStatsdMonitoringEndpointRequest) GetEndpointName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndpointName
}

// GetEndpointNameOk returns a tuple with the EndpointName field value
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetEndpointNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndpointName, true
}

// SetEndpointName sets field value
func (o *AddStatsdMonitoringEndpointRequest) SetEndpointName(v string) {
	o.EndpointName = v
}

// GetSchemas returns the Schemas field value
func (o *AddStatsdMonitoringEndpointRequest) GetSchemas() []EnumstatsdMonitoringEndpointSchemaUrn {
	if o == nil {
		var ret []EnumstatsdMonitoringEndpointSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetSchemasOk() ([]EnumstatsdMonitoringEndpointSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddStatsdMonitoringEndpointRequest) SetSchemas(v []EnumstatsdMonitoringEndpointSchemaUrn) {
	o.Schemas = v
}

// GetHostname returns the Hostname field value
func (o *AddStatsdMonitoringEndpointRequest) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *AddStatsdMonitoringEndpointRequest) SetHostname(v string) {
	o.Hostname = v
}

// GetServerPort returns the ServerPort field value if set, zero value otherwise.
func (o *AddStatsdMonitoringEndpointRequest) GetServerPort() int64 {
	if o == nil || IsNil(o.ServerPort) {
		var ret int64
		return ret
	}
	return *o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetServerPortOk() (*int64, bool) {
	if o == nil || IsNil(o.ServerPort) {
		return nil, false
	}
	return o.ServerPort, true
}

// HasServerPort returns a boolean if a field has been set.
func (o *AddStatsdMonitoringEndpointRequest) HasServerPort() bool {
	if o != nil && !IsNil(o.ServerPort) {
		return true
	}

	return false
}

// SetServerPort gets a reference to the given int64 and assigns it to the ServerPort field.
func (o *AddStatsdMonitoringEndpointRequest) SetServerPort(v int64) {
	o.ServerPort = &v
}

// GetConnectionType returns the ConnectionType field value if set, zero value otherwise.
func (o *AddStatsdMonitoringEndpointRequest) GetConnectionType() EnummonitoringEndpointConnectionTypeProp {
	if o == nil || IsNil(o.ConnectionType) {
		var ret EnummonitoringEndpointConnectionTypeProp
		return ret
	}
	return *o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetConnectionTypeOk() (*EnummonitoringEndpointConnectionTypeProp, bool) {
	if o == nil || IsNil(o.ConnectionType) {
		return nil, false
	}
	return o.ConnectionType, true
}

// HasConnectionType returns a boolean if a field has been set.
func (o *AddStatsdMonitoringEndpointRequest) HasConnectionType() bool {
	if o != nil && !IsNil(o.ConnectionType) {
		return true
	}

	return false
}

// SetConnectionType gets a reference to the given EnummonitoringEndpointConnectionTypeProp and assigns it to the ConnectionType field.
func (o *AddStatsdMonitoringEndpointRequest) SetConnectionType(v EnummonitoringEndpointConnectionTypeProp) {
	o.ConnectionType = &v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *AddStatsdMonitoringEndpointRequest) GetTrustManagerProvider() string {
	if o == nil || IsNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustManagerProvider) {
		return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *AddStatsdMonitoringEndpointRequest) HasTrustManagerProvider() bool {
	if o != nil && !IsNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *AddStatsdMonitoringEndpointRequest) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *AddStatsdMonitoringEndpointRequest) GetAdditionalTags() []string {
	if o == nil || IsNil(o.AdditionalTags) {
		var ret []string
		return ret
	}
	return o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetAdditionalTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalTags) {
		return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *AddStatsdMonitoringEndpointRequest) HasAdditionalTags() bool {
	if o != nil && !IsNil(o.AdditionalTags) {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []string and assigns it to the AdditionalTags field.
func (o *AddStatsdMonitoringEndpointRequest) SetAdditionalTags(v []string) {
	o.AdditionalTags = v
}

// GetEnabled returns the Enabled field value
func (o *AddStatsdMonitoringEndpointRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddStatsdMonitoringEndpointRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddStatsdMonitoringEndpointRequest) SetEnabled(v bool) {
	o.Enabled = v
}

func (o AddStatsdMonitoringEndpointRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddStatsdMonitoringEndpointRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpointName"] = o.EndpointName
	toSerialize["schemas"] = o.Schemas
	toSerialize["hostname"] = o.Hostname
	if !IsNil(o.ServerPort) {
		toSerialize["serverPort"] = o.ServerPort
	}
	if !IsNil(o.ConnectionType) {
		toSerialize["connectionType"] = o.ConnectionType
	}
	if !IsNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	if !IsNil(o.AdditionalTags) {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableAddStatsdMonitoringEndpointRequest struct {
	value *AddStatsdMonitoringEndpointRequest
	isSet bool
}

func (v NullableAddStatsdMonitoringEndpointRequest) Get() *AddStatsdMonitoringEndpointRequest {
	return v.value
}

func (v *NullableAddStatsdMonitoringEndpointRequest) Set(val *AddStatsdMonitoringEndpointRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddStatsdMonitoringEndpointRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddStatsdMonitoringEndpointRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddStatsdMonitoringEndpointRequest(val *AddStatsdMonitoringEndpointRequest) *NullableAddStatsdMonitoringEndpointRequest {
	return &NullableAddStatsdMonitoringEndpointRequest{value: val, isSet: true}
}

func (v NullableAddStatsdMonitoringEndpointRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddStatsdMonitoringEndpointRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
