/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the VaultExternalServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VaultExternalServerResponse{}

// VaultExternalServerResponse struct for VaultExternalServerResponse
type VaultExternalServerResponse struct {
	Schemas []EnumvaultExternalServerSchemaUrn `json:"schemas"`
	// The base URL needed to access the Vault server. The base URL should consist of the protocol (\"http\" or \"https\"), the server address (resolvable name or IP address), and the port number. For example, \"https://vault.example.com:8200/\".
	VaultServerBaseURI []string `json:"vaultServerBaseURI"`
	// The mechanism used to authenticate to the Vault server.
	VaultAuthenticationMethod string `json:"vaultAuthenticationMethod"`
	// The maximum length of time to wait to obtain an HTTP connection.
	HttpConnectTimeout *string `json:"httpConnectTimeout,omitempty"`
	// The maximum length of time to wait for a response to an HTTP request.
	HttpResponseTimeout *string `json:"httpResponseTimeout,omitempty"`
	// The path to a file containing the information needed to trust the certificate presented by the Vault servers.
	TrustStoreFile *string `json:"trustStoreFile,omitempty"`
	// The passphrase needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
	TrustStorePin *string `json:"trustStorePin,omitempty"`
	// The store type for the specified trust store file. The value should likely be one of \"JKS\", \"PKCS12\", or \"BCFKS\".
	TrustStoreType *string `json:"trustStoreType,omitempty"`
	// A description for this External Server
	Description                                   *string                                            `json:"description,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the External Server
	Id string `json:"id"`
}

// NewVaultExternalServerResponse instantiates a new VaultExternalServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVaultExternalServerResponse(schemas []EnumvaultExternalServerSchemaUrn, vaultServerBaseURI []string, vaultAuthenticationMethod string, id string) *VaultExternalServerResponse {
	this := VaultExternalServerResponse{}
	this.Schemas = schemas
	this.VaultServerBaseURI = vaultServerBaseURI
	this.VaultAuthenticationMethod = vaultAuthenticationMethod
	this.Id = id
	return &this
}

// NewVaultExternalServerResponseWithDefaults instantiates a new VaultExternalServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVaultExternalServerResponseWithDefaults() *VaultExternalServerResponse {
	this := VaultExternalServerResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *VaultExternalServerResponse) GetSchemas() []EnumvaultExternalServerSchemaUrn {
	if o == nil {
		var ret []EnumvaultExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetSchemasOk() ([]EnumvaultExternalServerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *VaultExternalServerResponse) SetSchemas(v []EnumvaultExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetVaultServerBaseURI returns the VaultServerBaseURI field value
func (o *VaultExternalServerResponse) GetVaultServerBaseURI() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.VaultServerBaseURI
}

// GetVaultServerBaseURIOk returns a tuple with the VaultServerBaseURI field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetVaultServerBaseURIOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.VaultServerBaseURI, true
}

// SetVaultServerBaseURI sets field value
func (o *VaultExternalServerResponse) SetVaultServerBaseURI(v []string) {
	o.VaultServerBaseURI = v
}

// GetVaultAuthenticationMethod returns the VaultAuthenticationMethod field value
func (o *VaultExternalServerResponse) GetVaultAuthenticationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VaultAuthenticationMethod
}

// GetVaultAuthenticationMethodOk returns a tuple with the VaultAuthenticationMethod field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetVaultAuthenticationMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VaultAuthenticationMethod, true
}

// SetVaultAuthenticationMethod sets field value
func (o *VaultExternalServerResponse) SetVaultAuthenticationMethod(v string) {
	o.VaultAuthenticationMethod = v
}

// GetHttpConnectTimeout returns the HttpConnectTimeout field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetHttpConnectTimeout() string {
	if o == nil || IsNil(o.HttpConnectTimeout) {
		var ret string
		return ret
	}
	return *o.HttpConnectTimeout
}

// GetHttpConnectTimeoutOk returns a tuple with the HttpConnectTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetHttpConnectTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.HttpConnectTimeout) {
		return nil, false
	}
	return o.HttpConnectTimeout, true
}

// HasHttpConnectTimeout returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasHttpConnectTimeout() bool {
	if o != nil && !IsNil(o.HttpConnectTimeout) {
		return true
	}

	return false
}

// SetHttpConnectTimeout gets a reference to the given string and assigns it to the HttpConnectTimeout field.
func (o *VaultExternalServerResponse) SetHttpConnectTimeout(v string) {
	o.HttpConnectTimeout = &v
}

// GetHttpResponseTimeout returns the HttpResponseTimeout field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetHttpResponseTimeout() string {
	if o == nil || IsNil(o.HttpResponseTimeout) {
		var ret string
		return ret
	}
	return *o.HttpResponseTimeout
}

// GetHttpResponseTimeoutOk returns a tuple with the HttpResponseTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetHttpResponseTimeoutOk() (*string, bool) {
	if o == nil || IsNil(o.HttpResponseTimeout) {
		return nil, false
	}
	return o.HttpResponseTimeout, true
}

// HasHttpResponseTimeout returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasHttpResponseTimeout() bool {
	if o != nil && !IsNil(o.HttpResponseTimeout) {
		return true
	}

	return false
}

// SetHttpResponseTimeout gets a reference to the given string and assigns it to the HttpResponseTimeout field.
func (o *VaultExternalServerResponse) SetHttpResponseTimeout(v string) {
	o.HttpResponseTimeout = &v
}

// GetTrustStoreFile returns the TrustStoreFile field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStoreFile() string {
	if o == nil || IsNil(o.TrustStoreFile) {
		var ret string
		return ret
	}
	return *o.TrustStoreFile
}

// GetTrustStoreFileOk returns a tuple with the TrustStoreFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStoreFileOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStoreFile) {
		return nil, false
	}
	return o.TrustStoreFile, true
}

// HasTrustStoreFile returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStoreFile() bool {
	if o != nil && !IsNil(o.TrustStoreFile) {
		return true
	}

	return false
}

// SetTrustStoreFile gets a reference to the given string and assigns it to the TrustStoreFile field.
func (o *VaultExternalServerResponse) SetTrustStoreFile(v string) {
	o.TrustStoreFile = &v
}

// GetTrustStorePin returns the TrustStorePin field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStorePin() string {
	if o == nil || IsNil(o.TrustStorePin) {
		var ret string
		return ret
	}
	return *o.TrustStorePin
}

// GetTrustStorePinOk returns a tuple with the TrustStorePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStorePinOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStorePin) {
		return nil, false
	}
	return o.TrustStorePin, true
}

// HasTrustStorePin returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStorePin() bool {
	if o != nil && !IsNil(o.TrustStorePin) {
		return true
	}

	return false
}

// SetTrustStorePin gets a reference to the given string and assigns it to the TrustStorePin field.
func (o *VaultExternalServerResponse) SetTrustStorePin(v string) {
	o.TrustStorePin = &v
}

// GetTrustStoreType returns the TrustStoreType field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetTrustStoreType() string {
	if o == nil || IsNil(o.TrustStoreType) {
		var ret string
		return ret
	}
	return *o.TrustStoreType
}

// GetTrustStoreTypeOk returns a tuple with the TrustStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetTrustStoreTypeOk() (*string, bool) {
	if o == nil || IsNil(o.TrustStoreType) {
		return nil, false
	}
	return o.TrustStoreType, true
}

// HasTrustStoreType returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasTrustStoreType() bool {
	if o != nil && !IsNil(o.TrustStoreType) {
		return true
	}

	return false
}

// SetTrustStoreType gets a reference to the given string and assigns it to the TrustStoreType field.
func (o *VaultExternalServerResponse) SetTrustStoreType(v string) {
	o.TrustStoreType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VaultExternalServerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *VaultExternalServerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *VaultExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *VaultExternalServerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *VaultExternalServerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *VaultExternalServerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VaultExternalServerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VaultExternalServerResponse) SetId(v string) {
	o.Id = v
}

func (o VaultExternalServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VaultExternalServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["vaultServerBaseURI"] = o.VaultServerBaseURI
	toSerialize["vaultAuthenticationMethod"] = o.VaultAuthenticationMethod
	if !IsNil(o.HttpConnectTimeout) {
		toSerialize["httpConnectTimeout"] = o.HttpConnectTimeout
	}
	if !IsNil(o.HttpResponseTimeout) {
		toSerialize["httpResponseTimeout"] = o.HttpResponseTimeout
	}
	if !IsNil(o.TrustStoreFile) {
		toSerialize["trustStoreFile"] = o.TrustStoreFile
	}
	if !IsNil(o.TrustStorePin) {
		toSerialize["trustStorePin"] = o.TrustStorePin
	}
	if !IsNil(o.TrustStoreType) {
		toSerialize["trustStoreType"] = o.TrustStoreType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableVaultExternalServerResponse struct {
	value *VaultExternalServerResponse
	isSet bool
}

func (v NullableVaultExternalServerResponse) Get() *VaultExternalServerResponse {
	return v.value
}

func (v *NullableVaultExternalServerResponse) Set(val *VaultExternalServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableVaultExternalServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableVaultExternalServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVaultExternalServerResponse(val *VaultExternalServerResponse) *NullableVaultExternalServerResponse {
	return &NullableVaultExternalServerResponse{value: val, isSet: true}
}

func (v NullableVaultExternalServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVaultExternalServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
