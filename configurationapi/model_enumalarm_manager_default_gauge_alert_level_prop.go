/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumalarmManagerDefaultGaugeAlertLevelProp Specifies the level at which alerts are sent for alarms raised by the Alarm Manager.
type EnumalarmManagerDefaultGaugeAlertLevelProp string

// List of Enumalarm-manager-defaultGaugeAlertLevelProp
const (
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_ALWAYS            EnumalarmManagerDefaultGaugeAlertLevelProp = "always"
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_WARNING_AND_ABOVE EnumalarmManagerDefaultGaugeAlertLevelProp = "warning-and-above"
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_MINOR_AND_ABOVE   EnumalarmManagerDefaultGaugeAlertLevelProp = "minor-and-above"
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_MAJOR_AND_ABOVE   EnumalarmManagerDefaultGaugeAlertLevelProp = "major-and-above"
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_CRITICAL_ONLY     EnumalarmManagerDefaultGaugeAlertLevelProp = "critical-only"
	ENUMALARMMANAGERDEFAULTGAUGEALERTLEVELPROP_NEVER             EnumalarmManagerDefaultGaugeAlertLevelProp = "never"
)

// All allowed values of EnumalarmManagerDefaultGaugeAlertLevelProp enum
var AllowedEnumalarmManagerDefaultGaugeAlertLevelPropEnumValues = []EnumalarmManagerDefaultGaugeAlertLevelProp{
	"always",
	"warning-and-above",
	"minor-and-above",
	"major-and-above",
	"critical-only",
	"never",
}

func (v *EnumalarmManagerDefaultGaugeAlertLevelProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumalarmManagerDefaultGaugeAlertLevelProp(value)
	for _, existing := range AllowedEnumalarmManagerDefaultGaugeAlertLevelPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumalarmManagerDefaultGaugeAlertLevelProp", value)
}

// NewEnumalarmManagerDefaultGaugeAlertLevelPropFromValue returns a pointer to a valid EnumalarmManagerDefaultGaugeAlertLevelProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumalarmManagerDefaultGaugeAlertLevelPropFromValue(v string) (*EnumalarmManagerDefaultGaugeAlertLevelProp, error) {
	ev := EnumalarmManagerDefaultGaugeAlertLevelProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumalarmManagerDefaultGaugeAlertLevelProp: valid values are %v", v, AllowedEnumalarmManagerDefaultGaugeAlertLevelPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumalarmManagerDefaultGaugeAlertLevelProp) IsValid() bool {
	for _, existing := range AllowedEnumalarmManagerDefaultGaugeAlertLevelPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumalarm-manager-defaultGaugeAlertLevelProp value
func (v EnumalarmManagerDefaultGaugeAlertLevelProp) Ptr() *EnumalarmManagerDefaultGaugeAlertLevelProp {
	return &v
}

type NullableEnumalarmManagerDefaultGaugeAlertLevelProp struct {
	value *EnumalarmManagerDefaultGaugeAlertLevelProp
	isSet bool
}

func (v NullableEnumalarmManagerDefaultGaugeAlertLevelProp) Get() *EnumalarmManagerDefaultGaugeAlertLevelProp {
	return v.value
}

func (v *NullableEnumalarmManagerDefaultGaugeAlertLevelProp) Set(val *EnumalarmManagerDefaultGaugeAlertLevelProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumalarmManagerDefaultGaugeAlertLevelProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumalarmManagerDefaultGaugeAlertLevelProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumalarmManagerDefaultGaugeAlertLevelProp(val *EnumalarmManagerDefaultGaugeAlertLevelProp) *NullableEnumalarmManagerDefaultGaugeAlertLevelProp {
	return &NullableEnumalarmManagerDefaultGaugeAlertLevelProp{value: val, isSet: true}
}

func (v NullableEnumalarmManagerDefaultGaugeAlertLevelProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumalarmManagerDefaultGaugeAlertLevelProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
