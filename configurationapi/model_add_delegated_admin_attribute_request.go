/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddDelegatedAdminAttributeRequest - struct for AddDelegatedAdminAttributeRequest
type AddDelegatedAdminAttributeRequest struct {
	AddCertificateDelegatedAdminAttributeRequest *AddCertificateDelegatedAdminAttributeRequest
	AddGenericDelegatedAdminAttributeRequest     *AddGenericDelegatedAdminAttributeRequest
	AddPhotoDelegatedAdminAttributeRequest       *AddPhotoDelegatedAdminAttributeRequest
}

// AddCertificateDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest is a convenience function that returns AddCertificateDelegatedAdminAttributeRequest wrapped in AddDelegatedAdminAttributeRequest
func AddCertificateDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest(v *AddCertificateDelegatedAdminAttributeRequest) AddDelegatedAdminAttributeRequest {
	return AddDelegatedAdminAttributeRequest{
		AddCertificateDelegatedAdminAttributeRequest: v,
	}
}

// AddGenericDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest is a convenience function that returns AddGenericDelegatedAdminAttributeRequest wrapped in AddDelegatedAdminAttributeRequest
func AddGenericDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest(v *AddGenericDelegatedAdminAttributeRequest) AddDelegatedAdminAttributeRequest {
	return AddDelegatedAdminAttributeRequest{
		AddGenericDelegatedAdminAttributeRequest: v,
	}
}

// AddPhotoDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest is a convenience function that returns AddPhotoDelegatedAdminAttributeRequest wrapped in AddDelegatedAdminAttributeRequest
func AddPhotoDelegatedAdminAttributeRequestAsAddDelegatedAdminAttributeRequest(v *AddPhotoDelegatedAdminAttributeRequest) AddDelegatedAdminAttributeRequest {
	return AddDelegatedAdminAttributeRequest{
		AddPhotoDelegatedAdminAttributeRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddDelegatedAdminAttributeRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddCertificateDelegatedAdminAttributeRequest
	err = newStrictDecoder(data).Decode(&dst.AddCertificateDelegatedAdminAttributeRequest)
	if err == nil {
		jsonAddCertificateDelegatedAdminAttributeRequest, _ := json.Marshal(dst.AddCertificateDelegatedAdminAttributeRequest)
		if string(jsonAddCertificateDelegatedAdminAttributeRequest) == "{}" { // empty struct
			dst.AddCertificateDelegatedAdminAttributeRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddCertificateDelegatedAdminAttributeRequest = nil
	}

	// try to unmarshal data into AddGenericDelegatedAdminAttributeRequest
	err = newStrictDecoder(data).Decode(&dst.AddGenericDelegatedAdminAttributeRequest)
	if err == nil {
		jsonAddGenericDelegatedAdminAttributeRequest, _ := json.Marshal(dst.AddGenericDelegatedAdminAttributeRequest)
		if string(jsonAddGenericDelegatedAdminAttributeRequest) == "{}" { // empty struct
			dst.AddGenericDelegatedAdminAttributeRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGenericDelegatedAdminAttributeRequest = nil
	}

	// try to unmarshal data into AddPhotoDelegatedAdminAttributeRequest
	err = newStrictDecoder(data).Decode(&dst.AddPhotoDelegatedAdminAttributeRequest)
	if err == nil {
		jsonAddPhotoDelegatedAdminAttributeRequest, _ := json.Marshal(dst.AddPhotoDelegatedAdminAttributeRequest)
		if string(jsonAddPhotoDelegatedAdminAttributeRequest) == "{}" { // empty struct
			dst.AddPhotoDelegatedAdminAttributeRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddPhotoDelegatedAdminAttributeRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddCertificateDelegatedAdminAttributeRequest = nil
		dst.AddGenericDelegatedAdminAttributeRequest = nil
		dst.AddPhotoDelegatedAdminAttributeRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddDelegatedAdminAttributeRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddDelegatedAdminAttributeRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddDelegatedAdminAttributeRequest) MarshalJSON() ([]byte, error) {
	if src.AddCertificateDelegatedAdminAttributeRequest != nil {
		return json.Marshal(&src.AddCertificateDelegatedAdminAttributeRequest)
	}

	if src.AddGenericDelegatedAdminAttributeRequest != nil {
		return json.Marshal(&src.AddGenericDelegatedAdminAttributeRequest)
	}

	if src.AddPhotoDelegatedAdminAttributeRequest != nil {
		return json.Marshal(&src.AddPhotoDelegatedAdminAttributeRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddDelegatedAdminAttributeRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddCertificateDelegatedAdminAttributeRequest != nil {
		return obj.AddCertificateDelegatedAdminAttributeRequest
	}

	if obj.AddGenericDelegatedAdminAttributeRequest != nil {
		return obj.AddGenericDelegatedAdminAttributeRequest
	}

	if obj.AddPhotoDelegatedAdminAttributeRequest != nil {
		return obj.AddPhotoDelegatedAdminAttributeRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddDelegatedAdminAttributeRequest struct {
	value *AddDelegatedAdminAttributeRequest
	isSet bool
}

func (v NullableAddDelegatedAdminAttributeRequest) Get() *AddDelegatedAdminAttributeRequest {
	return v.value
}

func (v *NullableAddDelegatedAdminAttributeRequest) Set(val *AddDelegatedAdminAttributeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDelegatedAdminAttributeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDelegatedAdminAttributeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDelegatedAdminAttributeRequest(val *AddDelegatedAdminAttributeRequest) *NullableAddDelegatedAdminAttributeRequest {
	return &NullableAddDelegatedAdminAttributeRequest{value: val, isSet: true}
}

func (v NullableAddDelegatedAdminAttributeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDelegatedAdminAttributeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
