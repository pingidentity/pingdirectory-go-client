/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddSubjectEqualsDnCertificateMapperRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSubjectEqualsDnCertificateMapperRequest{}

// AddSubjectEqualsDnCertificateMapperRequest struct for AddSubjectEqualsDnCertificateMapperRequest
type AddSubjectEqualsDnCertificateMapperRequest struct {
	Schemas []EnumsubjectEqualsDnCertificateMapperSchemaUrn `json:"schemas"`
	// A description for this Certificate Mapper
	Description *string `json:"description,omitempty"`
	// Indicates whether the Certificate Mapper is enabled.
	Enabled bool `json:"enabled"`
	// Name of the new Certificate Mapper
	MapperName string `json:"mapperName"`
}

// NewAddSubjectEqualsDnCertificateMapperRequest instantiates a new AddSubjectEqualsDnCertificateMapperRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSubjectEqualsDnCertificateMapperRequest(schemas []EnumsubjectEqualsDnCertificateMapperSchemaUrn, enabled bool, mapperName string) *AddSubjectEqualsDnCertificateMapperRequest {
	this := AddSubjectEqualsDnCertificateMapperRequest{}
	this.Schemas = schemas
	this.Enabled = enabled
	this.MapperName = mapperName
	return &this
}

// NewAddSubjectEqualsDnCertificateMapperRequestWithDefaults instantiates a new AddSubjectEqualsDnCertificateMapperRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSubjectEqualsDnCertificateMapperRequestWithDefaults() *AddSubjectEqualsDnCertificateMapperRequest {
	this := AddSubjectEqualsDnCertificateMapperRequest{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetSchemas() []EnumsubjectEqualsDnCertificateMapperSchemaUrn {
	if o == nil {
		var ret []EnumsubjectEqualsDnCertificateMapperSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetSchemasOk() ([]EnumsubjectEqualsDnCertificateMapperSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) SetSchemas(v []EnumsubjectEqualsDnCertificateMapperSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddSubjectEqualsDnCertificateMapperRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMapperName returns the MapperName field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetMapperName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapperName
}

// GetMapperNameOk returns a tuple with the MapperName field value
// and a boolean to check if the value has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequest) GetMapperNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapperName, true
}

// SetMapperName sets field value
func (o *AddSubjectEqualsDnCertificateMapperRequest) SetMapperName(v string) {
	o.MapperName = v
}

func (o AddSubjectEqualsDnCertificateMapperRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSubjectEqualsDnCertificateMapperRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	toSerialize["mapperName"] = o.MapperName
	return toSerialize, nil
}

type NullableAddSubjectEqualsDnCertificateMapperRequest struct {
	value *AddSubjectEqualsDnCertificateMapperRequest
	isSet bool
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequest) Get() *AddSubjectEqualsDnCertificateMapperRequest {
	return v.value
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequest) Set(val *AddSubjectEqualsDnCertificateMapperRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSubjectEqualsDnCertificateMapperRequest(val *AddSubjectEqualsDnCertificateMapperRequest) *NullableAddSubjectEqualsDnCertificateMapperRequest {
	return &NullableAddSubjectEqualsDnCertificateMapperRequest{value: val, isSet: true}
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
