/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// KeyManagerProviderListResponseResourcesInner - struct for KeyManagerProviderListResponseResourcesInner
type KeyManagerProviderListResponseResourcesInner struct {
	CustomKeyManagerProviderResponse     *CustomKeyManagerProviderResponse
	FileBasedKeyManagerProviderResponse  *FileBasedKeyManagerProviderResponse
	Pkcs11KeyManagerProviderResponse     *Pkcs11KeyManagerProviderResponse
	ThirdPartyKeyManagerProviderResponse *ThirdPartyKeyManagerProviderResponse
}

// CustomKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner is a convenience function that returns CustomKeyManagerProviderResponse wrapped in KeyManagerProviderListResponseResourcesInner
func CustomKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner(v *CustomKeyManagerProviderResponse) KeyManagerProviderListResponseResourcesInner {
	return KeyManagerProviderListResponseResourcesInner{
		CustomKeyManagerProviderResponse: v,
	}
}

// FileBasedKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner is a convenience function that returns FileBasedKeyManagerProviderResponse wrapped in KeyManagerProviderListResponseResourcesInner
func FileBasedKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner(v *FileBasedKeyManagerProviderResponse) KeyManagerProviderListResponseResourcesInner {
	return KeyManagerProviderListResponseResourcesInner{
		FileBasedKeyManagerProviderResponse: v,
	}
}

// Pkcs11KeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner is a convenience function that returns Pkcs11KeyManagerProviderResponse wrapped in KeyManagerProviderListResponseResourcesInner
func Pkcs11KeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner(v *Pkcs11KeyManagerProviderResponse) KeyManagerProviderListResponseResourcesInner {
	return KeyManagerProviderListResponseResourcesInner{
		Pkcs11KeyManagerProviderResponse: v,
	}
}

// ThirdPartyKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner is a convenience function that returns ThirdPartyKeyManagerProviderResponse wrapped in KeyManagerProviderListResponseResourcesInner
func ThirdPartyKeyManagerProviderResponseAsKeyManagerProviderListResponseResourcesInner(v *ThirdPartyKeyManagerProviderResponse) KeyManagerProviderListResponseResourcesInner {
	return KeyManagerProviderListResponseResourcesInner{
		ThirdPartyKeyManagerProviderResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *KeyManagerProviderListResponseResourcesInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CustomKeyManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.CustomKeyManagerProviderResponse)
	if err == nil {
		jsonCustomKeyManagerProviderResponse, _ := json.Marshal(dst.CustomKeyManagerProviderResponse)
		if string(jsonCustomKeyManagerProviderResponse) == "{}" { // empty struct
			dst.CustomKeyManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.CustomKeyManagerProviderResponse = nil
	}

	// try to unmarshal data into FileBasedKeyManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.FileBasedKeyManagerProviderResponse)
	if err == nil {
		jsonFileBasedKeyManagerProviderResponse, _ := json.Marshal(dst.FileBasedKeyManagerProviderResponse)
		if string(jsonFileBasedKeyManagerProviderResponse) == "{}" { // empty struct
			dst.FileBasedKeyManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileBasedKeyManagerProviderResponse = nil
	}

	// try to unmarshal data into Pkcs11KeyManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.Pkcs11KeyManagerProviderResponse)
	if err == nil {
		jsonPkcs11KeyManagerProviderResponse, _ := json.Marshal(dst.Pkcs11KeyManagerProviderResponse)
		if string(jsonPkcs11KeyManagerProviderResponse) == "{}" { // empty struct
			dst.Pkcs11KeyManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.Pkcs11KeyManagerProviderResponse = nil
	}

	// try to unmarshal data into ThirdPartyKeyManagerProviderResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyKeyManagerProviderResponse)
	if err == nil {
		jsonThirdPartyKeyManagerProviderResponse, _ := json.Marshal(dst.ThirdPartyKeyManagerProviderResponse)
		if string(jsonThirdPartyKeyManagerProviderResponse) == "{}" { // empty struct
			dst.ThirdPartyKeyManagerProviderResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyKeyManagerProviderResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CustomKeyManagerProviderResponse = nil
		dst.FileBasedKeyManagerProviderResponse = nil
		dst.Pkcs11KeyManagerProviderResponse = nil
		dst.ThirdPartyKeyManagerProviderResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(KeyManagerProviderListResponseResourcesInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(KeyManagerProviderListResponseResourcesInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src KeyManagerProviderListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	if src.CustomKeyManagerProviderResponse != nil {
		return json.Marshal(&src.CustomKeyManagerProviderResponse)
	}

	if src.FileBasedKeyManagerProviderResponse != nil {
		return json.Marshal(&src.FileBasedKeyManagerProviderResponse)
	}

	if src.Pkcs11KeyManagerProviderResponse != nil {
		return json.Marshal(&src.Pkcs11KeyManagerProviderResponse)
	}

	if src.ThirdPartyKeyManagerProviderResponse != nil {
		return json.Marshal(&src.ThirdPartyKeyManagerProviderResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *KeyManagerProviderListResponseResourcesInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CustomKeyManagerProviderResponse != nil {
		return obj.CustomKeyManagerProviderResponse
	}

	if obj.FileBasedKeyManagerProviderResponse != nil {
		return obj.FileBasedKeyManagerProviderResponse
	}

	if obj.Pkcs11KeyManagerProviderResponse != nil {
		return obj.Pkcs11KeyManagerProviderResponse
	}

	if obj.ThirdPartyKeyManagerProviderResponse != nil {
		return obj.ThirdPartyKeyManagerProviderResponse
	}

	// all schemas are nil
	return nil
}

type NullableKeyManagerProviderListResponseResourcesInner struct {
	value *KeyManagerProviderListResponseResourcesInner
	isSet bool
}

func (v NullableKeyManagerProviderListResponseResourcesInner) Get() *KeyManagerProviderListResponseResourcesInner {
	return v.value
}

func (v *NullableKeyManagerProviderListResponseResourcesInner) Set(val *KeyManagerProviderListResponseResourcesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableKeyManagerProviderListResponseResourcesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableKeyManagerProviderListResponseResourcesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableKeyManagerProviderListResponseResourcesInner(val *KeyManagerProviderListResponseResourcesInner) *NullableKeyManagerProviderListResponseResourcesInner {
	return &NullableKeyManagerProviderListResponseResourcesInner{value: val, isSet: true}
}

func (v NullableKeyManagerProviderListResponseResourcesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableKeyManagerProviderListResponseResourcesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
