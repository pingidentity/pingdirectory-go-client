/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the StatsdMonitoringEndpointResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatsdMonitoringEndpointResponse{}

// StatsdMonitoringEndpointResponse struct for StatsdMonitoringEndpointResponse
type StatsdMonitoringEndpointResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Monitoring Endpoint
	Id      string                                  `json:"id"`
	Schemas []EnumstatsdMonitoringEndpointSchemaUrn `json:"schemas,omitempty"`
	// The name of the host where this StatsD Monitoring Endpoint should send metric data.
	Hostname string `json:"hostname"`
	// Specifies the port number of the endpoint where metric data should be sent.
	ServerPort     int32                                    `json:"serverPort"`
	ConnectionType EnummonitoringEndpointConnectionTypeProp `json:"connectionType"`
	// The trust manager provider to use if SSL over TCP is to be used for connection-level security.
	TrustManagerProvider *string `json:"trustManagerProvider,omitempty"`
	// Specifies any optional additional tags to include in StatsD messages. Any additional tags will be appended to the end of each StatsD message, separated by commas. Tags should be written in a [key]:[value] format (\"host:server1\", for example).
	AdditionalTags []string `json:"additionalTags,omitempty"`
	// Indicates whether this Monitoring Endpoint is enabled for use in the Directory Server.
	Enabled bool `json:"enabled"`
}

// NewStatsdMonitoringEndpointResponse instantiates a new StatsdMonitoringEndpointResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatsdMonitoringEndpointResponse(id string, hostname string, serverPort int32, connectionType EnummonitoringEndpointConnectionTypeProp, enabled bool) *StatsdMonitoringEndpointResponse {
	this := StatsdMonitoringEndpointResponse{}
	this.Id = id
	this.Hostname = hostname
	this.ServerPort = serverPort
	this.ConnectionType = connectionType
	this.Enabled = enabled
	return &this
}

// NewStatsdMonitoringEndpointResponseWithDefaults instantiates a new StatsdMonitoringEndpointResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatsdMonitoringEndpointResponseWithDefaults() *StatsdMonitoringEndpointResponse {
	this := StatsdMonitoringEndpointResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *StatsdMonitoringEndpointResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *StatsdMonitoringEndpointResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *StatsdMonitoringEndpointResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *StatsdMonitoringEndpointResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointResponse) GetSchemas() []EnumstatsdMonitoringEndpointSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumstatsdMonitoringEndpointSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetSchemasOk() ([]EnumstatsdMonitoringEndpointSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointResponse) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumstatsdMonitoringEndpointSchemaUrn and assigns it to the Schemas field.
func (o *StatsdMonitoringEndpointResponse) SetSchemas(v []EnumstatsdMonitoringEndpointSchemaUrn) {
	o.Schemas = v
}

// GetHostname returns the Hostname field value
func (o *StatsdMonitoringEndpointResponse) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *StatsdMonitoringEndpointResponse) SetHostname(v string) {
	o.Hostname = v
}

// GetServerPort returns the ServerPort field value
func (o *StatsdMonitoringEndpointResponse) GetServerPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServerPort
}

// GetServerPortOk returns a tuple with the ServerPort field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetServerPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerPort, true
}

// SetServerPort sets field value
func (o *StatsdMonitoringEndpointResponse) SetServerPort(v int32) {
	o.ServerPort = v
}

// GetConnectionType returns the ConnectionType field value
func (o *StatsdMonitoringEndpointResponse) GetConnectionType() EnummonitoringEndpointConnectionTypeProp {
	if o == nil {
		var ret EnummonitoringEndpointConnectionTypeProp
		return ret
	}

	return o.ConnectionType
}

// GetConnectionTypeOk returns a tuple with the ConnectionType field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetConnectionTypeOk() (*EnummonitoringEndpointConnectionTypeProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectionType, true
}

// SetConnectionType sets field value
func (o *StatsdMonitoringEndpointResponse) SetConnectionType(v EnummonitoringEndpointConnectionTypeProp) {
	o.ConnectionType = v
}

// GetTrustManagerProvider returns the TrustManagerProvider field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointResponse) GetTrustManagerProvider() string {
	if o == nil || IsNil(o.TrustManagerProvider) {
		var ret string
		return ret
	}
	return *o.TrustManagerProvider
}

// GetTrustManagerProviderOk returns a tuple with the TrustManagerProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetTrustManagerProviderOk() (*string, bool) {
	if o == nil || IsNil(o.TrustManagerProvider) {
		return nil, false
	}
	return o.TrustManagerProvider, true
}

// HasTrustManagerProvider returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointResponse) HasTrustManagerProvider() bool {
	if o != nil && !IsNil(o.TrustManagerProvider) {
		return true
	}

	return false
}

// SetTrustManagerProvider gets a reference to the given string and assigns it to the TrustManagerProvider field.
func (o *StatsdMonitoringEndpointResponse) SetTrustManagerProvider(v string) {
	o.TrustManagerProvider = &v
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *StatsdMonitoringEndpointResponse) GetAdditionalTags() []string {
	if o == nil || IsNil(o.AdditionalTags) {
		var ret []string
		return ret
	}
	return o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetAdditionalTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalTags) {
		return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *StatsdMonitoringEndpointResponse) HasAdditionalTags() bool {
	if o != nil && !IsNil(o.AdditionalTags) {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []string and assigns it to the AdditionalTags field.
func (o *StatsdMonitoringEndpointResponse) SetAdditionalTags(v []string) {
	o.AdditionalTags = v
}

// GetEnabled returns the Enabled field value
func (o *StatsdMonitoringEndpointResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *StatsdMonitoringEndpointResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *StatsdMonitoringEndpointResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o StatsdMonitoringEndpointResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatsdMonitoringEndpointResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	toSerialize["hostname"] = o.Hostname
	toSerialize["serverPort"] = o.ServerPort
	toSerialize["connectionType"] = o.ConnectionType
	if !IsNil(o.TrustManagerProvider) {
		toSerialize["trustManagerProvider"] = o.TrustManagerProvider
	}
	if !IsNil(o.AdditionalTags) {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableStatsdMonitoringEndpointResponse struct {
	value *StatsdMonitoringEndpointResponse
	isSet bool
}

func (v NullableStatsdMonitoringEndpointResponse) Get() *StatsdMonitoringEndpointResponse {
	return v.value
}

func (v *NullableStatsdMonitoringEndpointResponse) Set(val *StatsdMonitoringEndpointResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableStatsdMonitoringEndpointResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableStatsdMonitoringEndpointResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatsdMonitoringEndpointResponse(val *StatsdMonitoringEndpointResponse) *NullableStatsdMonitoringEndpointResponse {
	return &NullableStatsdMonitoringEndpointResponse{value: val, isSet: true}
}

func (v NullableStatsdMonitoringEndpointResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatsdMonitoringEndpointResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
