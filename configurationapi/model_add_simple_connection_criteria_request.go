/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddSimpleConnectionCriteriaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSimpleConnectionCriteriaRequest{}

// AddSimpleConnectionCriteriaRequest struct for AddSimpleConnectionCriteriaRequest
type AddSimpleConnectionCriteriaRequest struct {
	// Name of the new Connection Criteria
	CriteriaName string                                  `json:"criteriaName"`
	Schemas      []EnumsimpleConnectionCriteriaSchemaUrn `json:"schemas"`
	// Specifies an address mask that may be used to specify a set of clients that should be included in this Simple Connection Criteria.
	IncludedClientAddress []string `json:"includedClientAddress,omitempty"`
	// Specifies an address mask that may be used to specify a set of clients that should be excluded from this Simple Connection Criteria.
	ExcludedClientAddress []string `json:"excludedClientAddress,omitempty"`
	// Specifies a connection handler for clients that should be included in this Simple Connection Criteria.
	IncludedConnectionHandler []string `json:"includedConnectionHandler,omitempty"`
	// Specifies a connection handler for clients that should be excluded from this Simple Connection Criteria.
	ExcludedConnectionHandler []string `json:"excludedConnectionHandler,omitempty"`
	// Specifies the name of a communication protocol that should be used by clients included in this Simple Connection Criteria.
	IncludedProtocol []string `json:"includedProtocol,omitempty"`
	// Specifies the name of a communication protocol that should be used by clients excluded from this Simple Connection Criteria.
	ExcludedProtocol            []string                                               `json:"excludedProtocol,omitempty"`
	CommunicationSecurityLevel  *EnumconnectionCriteriaCommunicationSecurityLevelProp  `json:"communicationSecurityLevel,omitempty"`
	UserAuthType                []EnumconnectionCriteriaUserAuthTypeProp               `json:"userAuthType,omitempty"`
	AuthenticationSecurityLevel *EnumconnectionCriteriaAuthenticationSecurityLevelProp `json:"authenticationSecurityLevel,omitempty"`
	// Specifies the name of a SASL mechanism that should be used by clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
	IncludedUserSASLMechanism []string `json:"includedUserSASLMechanism,omitempty"`
	// Specifies the name of a SASL mechanism that should be used by clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server using a SASL mechanism and will be ignored for unauthenticated client connections and for client connections that authenticated using some other method (e.g., those performing simple or internal authentication).
	ExcludedUserSASLMechanism []string `json:"excludedUserSASLMechanism,omitempty"`
	// Specifies a base DN below which authenticated user entries may exist for clients included in this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	IncludedUserBaseDN []string `json:"includedUserBaseDN,omitempty"`
	// Specifies a base DN below which authenticated user entries may exist for clients excluded from this Simple Connection Criteria. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	ExcludedUserBaseDN []string `json:"excludedUserBaseDN,omitempty"`
	// Specifies the DN of a group in which authenticated users must exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of all of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	AllIncludedUserGroupDN []string `json:"allIncludedUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authenticated users may exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must be a member of at least one of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	AnyIncludedUserGroupDN []string `json:"anyIncludedUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authenticated users should not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	NotAllIncludedUserGroupDN []string `json:"notAllIncludedUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authenticated users must not exist for clients included in this Simple Connection Criteria. If any group DNs are provided, then the authenticated user must not be a member any of those groups. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections. Refer to the authz version of this property in Simple Result Criteria if operations are being proxied (performed using proxied authorization), and you need to match the originating user of the operation rather than the proxy user (the user the proxy authenticated as).
	NoneIncludedUserGroupDN []string `json:"noneIncludedUserGroupDN,omitempty"`
	// Specifies a search filter that must match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then all of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
	AllIncludedUserFilter []string `json:"allIncludedUserFilter,omitempty"`
	// Specifies a search filter that may match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
	AnyIncludedUserFilter []string `json:"anyIncludedUserFilter,omitempty"`
	// Specifies a search filter that should not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then at least one of those filters must not match the authenticated user entry (that is, the user entry may match zero or more of those filters, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
	NotAllIncludedUserFilter []string `json:"notAllIncludedUserFilter,omitempty"`
	// Specifies a search filter that must not match the entry of the authenticated user for clients included in this Simple Connection Criteria. If any filters are provided, then none of those filters may match the authenticated user entry. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
	NoneIncludedUserFilter      []string                                                `json:"noneIncludedUserFilter,omitempty"`
	AllIncludedUserPrivilege    []EnumconnectionCriteriaAllIncludedUserPrivilegeProp    `json:"allIncludedUserPrivilege,omitempty"`
	AnyIncludedUserPrivilege    []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp    `json:"anyIncludedUserPrivilege,omitempty"`
	NotAllIncludedUserPrivilege []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp `json:"notAllIncludedUserPrivilege,omitempty"`
	NoneIncludedUserPrivilege   []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp   `json:"noneIncludedUserPrivilege,omitempty"`
	// A description for this Connection Criteria
	Description *string `json:"description,omitempty"`
}

// NewAddSimpleConnectionCriteriaRequest instantiates a new AddSimpleConnectionCriteriaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSimpleConnectionCriteriaRequest(criteriaName string, schemas []EnumsimpleConnectionCriteriaSchemaUrn) *AddSimpleConnectionCriteriaRequest {
	this := AddSimpleConnectionCriteriaRequest{}
	this.CriteriaName = criteriaName
	this.Schemas = schemas
	return &this
}

// NewAddSimpleConnectionCriteriaRequestWithDefaults instantiates a new AddSimpleConnectionCriteriaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSimpleConnectionCriteriaRequestWithDefaults() *AddSimpleConnectionCriteriaRequest {
	this := AddSimpleConnectionCriteriaRequest{}
	return &this
}

// GetCriteriaName returns the CriteriaName field value
func (o *AddSimpleConnectionCriteriaRequest) GetCriteriaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CriteriaName
}

// GetCriteriaNameOk returns a tuple with the CriteriaName field value
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetCriteriaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CriteriaName, true
}

// SetCriteriaName sets field value
func (o *AddSimpleConnectionCriteriaRequest) SetCriteriaName(v string) {
	o.CriteriaName = v
}

// GetSchemas returns the Schemas field value
func (o *AddSimpleConnectionCriteriaRequest) GetSchemas() []EnumsimpleConnectionCriteriaSchemaUrn {
	if o == nil {
		var ret []EnumsimpleConnectionCriteriaSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetSchemasOk() ([]EnumsimpleConnectionCriteriaSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddSimpleConnectionCriteriaRequest) SetSchemas(v []EnumsimpleConnectionCriteriaSchemaUrn) {
	o.Schemas = v
}

// GetIncludedClientAddress returns the IncludedClientAddress field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedClientAddress() []string {
	if o == nil || IsNil(o.IncludedClientAddress) {
		var ret []string
		return ret
	}
	return o.IncludedClientAddress
}

// GetIncludedClientAddressOk returns a tuple with the IncludedClientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedClientAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedClientAddress) {
		return nil, false
	}
	return o.IncludedClientAddress, true
}

// HasIncludedClientAddress returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasIncludedClientAddress() bool {
	if o != nil && !IsNil(o.IncludedClientAddress) {
		return true
	}

	return false
}

// SetIncludedClientAddress gets a reference to the given []string and assigns it to the IncludedClientAddress field.
func (o *AddSimpleConnectionCriteriaRequest) SetIncludedClientAddress(v []string) {
	o.IncludedClientAddress = v
}

// GetExcludedClientAddress returns the ExcludedClientAddress field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedClientAddress() []string {
	if o == nil || IsNil(o.ExcludedClientAddress) {
		var ret []string
		return ret
	}
	return o.ExcludedClientAddress
}

// GetExcludedClientAddressOk returns a tuple with the ExcludedClientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedClientAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedClientAddress) {
		return nil, false
	}
	return o.ExcludedClientAddress, true
}

// HasExcludedClientAddress returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasExcludedClientAddress() bool {
	if o != nil && !IsNil(o.ExcludedClientAddress) {
		return true
	}

	return false
}

// SetExcludedClientAddress gets a reference to the given []string and assigns it to the ExcludedClientAddress field.
func (o *AddSimpleConnectionCriteriaRequest) SetExcludedClientAddress(v []string) {
	o.ExcludedClientAddress = v
}

// GetIncludedConnectionHandler returns the IncludedConnectionHandler field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedConnectionHandler() []string {
	if o == nil || IsNil(o.IncludedConnectionHandler) {
		var ret []string
		return ret
	}
	return o.IncludedConnectionHandler
}

// GetIncludedConnectionHandlerOk returns a tuple with the IncludedConnectionHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedConnectionHandlerOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedConnectionHandler) {
		return nil, false
	}
	return o.IncludedConnectionHandler, true
}

// HasIncludedConnectionHandler returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasIncludedConnectionHandler() bool {
	if o != nil && !IsNil(o.IncludedConnectionHandler) {
		return true
	}

	return false
}

// SetIncludedConnectionHandler gets a reference to the given []string and assigns it to the IncludedConnectionHandler field.
func (o *AddSimpleConnectionCriteriaRequest) SetIncludedConnectionHandler(v []string) {
	o.IncludedConnectionHandler = v
}

// GetExcludedConnectionHandler returns the ExcludedConnectionHandler field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedConnectionHandler() []string {
	if o == nil || IsNil(o.ExcludedConnectionHandler) {
		var ret []string
		return ret
	}
	return o.ExcludedConnectionHandler
}

// GetExcludedConnectionHandlerOk returns a tuple with the ExcludedConnectionHandler field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedConnectionHandlerOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedConnectionHandler) {
		return nil, false
	}
	return o.ExcludedConnectionHandler, true
}

// HasExcludedConnectionHandler returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasExcludedConnectionHandler() bool {
	if o != nil && !IsNil(o.ExcludedConnectionHandler) {
		return true
	}

	return false
}

// SetExcludedConnectionHandler gets a reference to the given []string and assigns it to the ExcludedConnectionHandler field.
func (o *AddSimpleConnectionCriteriaRequest) SetExcludedConnectionHandler(v []string) {
	o.ExcludedConnectionHandler = v
}

// GetIncludedProtocol returns the IncludedProtocol field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedProtocol() []string {
	if o == nil || IsNil(o.IncludedProtocol) {
		var ret []string
		return ret
	}
	return o.IncludedProtocol
}

// GetIncludedProtocolOk returns a tuple with the IncludedProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedProtocolOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedProtocol) {
		return nil, false
	}
	return o.IncludedProtocol, true
}

// HasIncludedProtocol returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasIncludedProtocol() bool {
	if o != nil && !IsNil(o.IncludedProtocol) {
		return true
	}

	return false
}

// SetIncludedProtocol gets a reference to the given []string and assigns it to the IncludedProtocol field.
func (o *AddSimpleConnectionCriteriaRequest) SetIncludedProtocol(v []string) {
	o.IncludedProtocol = v
}

// GetExcludedProtocol returns the ExcludedProtocol field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedProtocol() []string {
	if o == nil || IsNil(o.ExcludedProtocol) {
		var ret []string
		return ret
	}
	return o.ExcludedProtocol
}

// GetExcludedProtocolOk returns a tuple with the ExcludedProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedProtocolOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedProtocol) {
		return nil, false
	}
	return o.ExcludedProtocol, true
}

// HasExcludedProtocol returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasExcludedProtocol() bool {
	if o != nil && !IsNil(o.ExcludedProtocol) {
		return true
	}

	return false
}

// SetExcludedProtocol gets a reference to the given []string and assigns it to the ExcludedProtocol field.
func (o *AddSimpleConnectionCriteriaRequest) SetExcludedProtocol(v []string) {
	o.ExcludedProtocol = v
}

// GetCommunicationSecurityLevel returns the CommunicationSecurityLevel field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetCommunicationSecurityLevel() EnumconnectionCriteriaCommunicationSecurityLevelProp {
	if o == nil || IsNil(o.CommunicationSecurityLevel) {
		var ret EnumconnectionCriteriaCommunicationSecurityLevelProp
		return ret
	}
	return *o.CommunicationSecurityLevel
}

// GetCommunicationSecurityLevelOk returns a tuple with the CommunicationSecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetCommunicationSecurityLevelOk() (*EnumconnectionCriteriaCommunicationSecurityLevelProp, bool) {
	if o == nil || IsNil(o.CommunicationSecurityLevel) {
		return nil, false
	}
	return o.CommunicationSecurityLevel, true
}

// HasCommunicationSecurityLevel returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasCommunicationSecurityLevel() bool {
	if o != nil && !IsNil(o.CommunicationSecurityLevel) {
		return true
	}

	return false
}

// SetCommunicationSecurityLevel gets a reference to the given EnumconnectionCriteriaCommunicationSecurityLevelProp and assigns it to the CommunicationSecurityLevel field.
func (o *AddSimpleConnectionCriteriaRequest) SetCommunicationSecurityLevel(v EnumconnectionCriteriaCommunicationSecurityLevelProp) {
	o.CommunicationSecurityLevel = &v
}

// GetUserAuthType returns the UserAuthType field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetUserAuthType() []EnumconnectionCriteriaUserAuthTypeProp {
	if o == nil || IsNil(o.UserAuthType) {
		var ret []EnumconnectionCriteriaUserAuthTypeProp
		return ret
	}
	return o.UserAuthType
}

// GetUserAuthTypeOk returns a tuple with the UserAuthType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetUserAuthTypeOk() ([]EnumconnectionCriteriaUserAuthTypeProp, bool) {
	if o == nil || IsNil(o.UserAuthType) {
		return nil, false
	}
	return o.UserAuthType, true
}

// HasUserAuthType returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasUserAuthType() bool {
	if o != nil && !IsNil(o.UserAuthType) {
		return true
	}

	return false
}

// SetUserAuthType gets a reference to the given []EnumconnectionCriteriaUserAuthTypeProp and assigns it to the UserAuthType field.
func (o *AddSimpleConnectionCriteriaRequest) SetUserAuthType(v []EnumconnectionCriteriaUserAuthTypeProp) {
	o.UserAuthType = v
}

// GetAuthenticationSecurityLevel returns the AuthenticationSecurityLevel field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAuthenticationSecurityLevel() EnumconnectionCriteriaAuthenticationSecurityLevelProp {
	if o == nil || IsNil(o.AuthenticationSecurityLevel) {
		var ret EnumconnectionCriteriaAuthenticationSecurityLevelProp
		return ret
	}
	return *o.AuthenticationSecurityLevel
}

// GetAuthenticationSecurityLevelOk returns a tuple with the AuthenticationSecurityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAuthenticationSecurityLevelOk() (*EnumconnectionCriteriaAuthenticationSecurityLevelProp, bool) {
	if o == nil || IsNil(o.AuthenticationSecurityLevel) {
		return nil, false
	}
	return o.AuthenticationSecurityLevel, true
}

// HasAuthenticationSecurityLevel returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAuthenticationSecurityLevel() bool {
	if o != nil && !IsNil(o.AuthenticationSecurityLevel) {
		return true
	}

	return false
}

// SetAuthenticationSecurityLevel gets a reference to the given EnumconnectionCriteriaAuthenticationSecurityLevelProp and assigns it to the AuthenticationSecurityLevel field.
func (o *AddSimpleConnectionCriteriaRequest) SetAuthenticationSecurityLevel(v EnumconnectionCriteriaAuthenticationSecurityLevelProp) {
	o.AuthenticationSecurityLevel = &v
}

// GetIncludedUserSASLMechanism returns the IncludedUserSASLMechanism field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedUserSASLMechanism() []string {
	if o == nil || IsNil(o.IncludedUserSASLMechanism) {
		var ret []string
		return ret
	}
	return o.IncludedUserSASLMechanism
}

// GetIncludedUserSASLMechanismOk returns a tuple with the IncludedUserSASLMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedUserSASLMechanismOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUserSASLMechanism) {
		return nil, false
	}
	return o.IncludedUserSASLMechanism, true
}

// HasIncludedUserSASLMechanism returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasIncludedUserSASLMechanism() bool {
	if o != nil && !IsNil(o.IncludedUserSASLMechanism) {
		return true
	}

	return false
}

// SetIncludedUserSASLMechanism gets a reference to the given []string and assigns it to the IncludedUserSASLMechanism field.
func (o *AddSimpleConnectionCriteriaRequest) SetIncludedUserSASLMechanism(v []string) {
	o.IncludedUserSASLMechanism = v
}

// GetExcludedUserSASLMechanism returns the ExcludedUserSASLMechanism field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedUserSASLMechanism() []string {
	if o == nil || IsNil(o.ExcludedUserSASLMechanism) {
		var ret []string
		return ret
	}
	return o.ExcludedUserSASLMechanism
}

// GetExcludedUserSASLMechanismOk returns a tuple with the ExcludedUserSASLMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedUserSASLMechanismOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedUserSASLMechanism) {
		return nil, false
	}
	return o.ExcludedUserSASLMechanism, true
}

// HasExcludedUserSASLMechanism returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasExcludedUserSASLMechanism() bool {
	if o != nil && !IsNil(o.ExcludedUserSASLMechanism) {
		return true
	}

	return false
}

// SetExcludedUserSASLMechanism gets a reference to the given []string and assigns it to the ExcludedUserSASLMechanism field.
func (o *AddSimpleConnectionCriteriaRequest) SetExcludedUserSASLMechanism(v []string) {
	o.ExcludedUserSASLMechanism = v
}

// GetIncludedUserBaseDN returns the IncludedUserBaseDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedUserBaseDN() []string {
	if o == nil || IsNil(o.IncludedUserBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludedUserBaseDN
}

// GetIncludedUserBaseDNOk returns a tuple with the IncludedUserBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetIncludedUserBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedUserBaseDN) {
		return nil, false
	}
	return o.IncludedUserBaseDN, true
}

// HasIncludedUserBaseDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasIncludedUserBaseDN() bool {
	if o != nil && !IsNil(o.IncludedUserBaseDN) {
		return true
	}

	return false
}

// SetIncludedUserBaseDN gets a reference to the given []string and assigns it to the IncludedUserBaseDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetIncludedUserBaseDN(v []string) {
	o.IncludedUserBaseDN = v
}

// GetExcludedUserBaseDN returns the ExcludedUserBaseDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedUserBaseDN() []string {
	if o == nil || IsNil(o.ExcludedUserBaseDN) {
		var ret []string
		return ret
	}
	return o.ExcludedUserBaseDN
}

// GetExcludedUserBaseDNOk returns a tuple with the ExcludedUserBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetExcludedUserBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedUserBaseDN) {
		return nil, false
	}
	return o.ExcludedUserBaseDN, true
}

// HasExcludedUserBaseDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasExcludedUserBaseDN() bool {
	if o != nil && !IsNil(o.ExcludedUserBaseDN) {
		return true
	}

	return false
}

// SetExcludedUserBaseDN gets a reference to the given []string and assigns it to the ExcludedUserBaseDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetExcludedUserBaseDN(v []string) {
	o.ExcludedUserBaseDN = v
}

// GetAllIncludedUserGroupDN returns the AllIncludedUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserGroupDN() []string {
	if o == nil || IsNil(o.AllIncludedUserGroupDN) {
		var ret []string
		return ret
	}
	return o.AllIncludedUserGroupDN
}

// GetAllIncludedUserGroupDNOk returns a tuple with the AllIncludedUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.AllIncludedUserGroupDN) {
		return nil, false
	}
	return o.AllIncludedUserGroupDN, true
}

// HasAllIncludedUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAllIncludedUserGroupDN() bool {
	if o != nil && !IsNil(o.AllIncludedUserGroupDN) {
		return true
	}

	return false
}

// SetAllIncludedUserGroupDN gets a reference to the given []string and assigns it to the AllIncludedUserGroupDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetAllIncludedUserGroupDN(v []string) {
	o.AllIncludedUserGroupDN = v
}

// GetAnyIncludedUserGroupDN returns the AnyIncludedUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserGroupDN() []string {
	if o == nil || IsNil(o.AnyIncludedUserGroupDN) {
		var ret []string
		return ret
	}
	return o.AnyIncludedUserGroupDN
}

// GetAnyIncludedUserGroupDNOk returns a tuple with the AnyIncludedUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.AnyIncludedUserGroupDN) {
		return nil, false
	}
	return o.AnyIncludedUserGroupDN, true
}

// HasAnyIncludedUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAnyIncludedUserGroupDN() bool {
	if o != nil && !IsNil(o.AnyIncludedUserGroupDN) {
		return true
	}

	return false
}

// SetAnyIncludedUserGroupDN gets a reference to the given []string and assigns it to the AnyIncludedUserGroupDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetAnyIncludedUserGroupDN(v []string) {
	o.AnyIncludedUserGroupDN = v
}

// GetNotAllIncludedUserGroupDN returns the NotAllIncludedUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserGroupDN() []string {
	if o == nil || IsNil(o.NotAllIncludedUserGroupDN) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedUserGroupDN
}

// GetNotAllIncludedUserGroupDNOk returns a tuple with the NotAllIncludedUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.NotAllIncludedUserGroupDN) {
		return nil, false
	}
	return o.NotAllIncludedUserGroupDN, true
}

// HasNotAllIncludedUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNotAllIncludedUserGroupDN() bool {
	if o != nil && !IsNil(o.NotAllIncludedUserGroupDN) {
		return true
	}

	return false
}

// SetNotAllIncludedUserGroupDN gets a reference to the given []string and assigns it to the NotAllIncludedUserGroupDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetNotAllIncludedUserGroupDN(v []string) {
	o.NotAllIncludedUserGroupDN = v
}

// GetNoneIncludedUserGroupDN returns the NoneIncludedUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserGroupDN() []string {
	if o == nil || IsNil(o.NoneIncludedUserGroupDN) {
		var ret []string
		return ret
	}
	return o.NoneIncludedUserGroupDN
}

// GetNoneIncludedUserGroupDNOk returns a tuple with the NoneIncludedUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.NoneIncludedUserGroupDN) {
		return nil, false
	}
	return o.NoneIncludedUserGroupDN, true
}

// HasNoneIncludedUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNoneIncludedUserGroupDN() bool {
	if o != nil && !IsNil(o.NoneIncludedUserGroupDN) {
		return true
	}

	return false
}

// SetNoneIncludedUserGroupDN gets a reference to the given []string and assigns it to the NoneIncludedUserGroupDN field.
func (o *AddSimpleConnectionCriteriaRequest) SetNoneIncludedUserGroupDN(v []string) {
	o.NoneIncludedUserGroupDN = v
}

// GetAllIncludedUserFilter returns the AllIncludedUserFilter field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserFilter() []string {
	if o == nil || IsNil(o.AllIncludedUserFilter) {
		var ret []string
		return ret
	}
	return o.AllIncludedUserFilter
}

// GetAllIncludedUserFilterOk returns a tuple with the AllIncludedUserFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.AllIncludedUserFilter) {
		return nil, false
	}
	return o.AllIncludedUserFilter, true
}

// HasAllIncludedUserFilter returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAllIncludedUserFilter() bool {
	if o != nil && !IsNil(o.AllIncludedUserFilter) {
		return true
	}

	return false
}

// SetAllIncludedUserFilter gets a reference to the given []string and assigns it to the AllIncludedUserFilter field.
func (o *AddSimpleConnectionCriteriaRequest) SetAllIncludedUserFilter(v []string) {
	o.AllIncludedUserFilter = v
}

// GetAnyIncludedUserFilter returns the AnyIncludedUserFilter field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserFilter() []string {
	if o == nil || IsNil(o.AnyIncludedUserFilter) {
		var ret []string
		return ret
	}
	return o.AnyIncludedUserFilter
}

// GetAnyIncludedUserFilterOk returns a tuple with the AnyIncludedUserFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.AnyIncludedUserFilter) {
		return nil, false
	}
	return o.AnyIncludedUserFilter, true
}

// HasAnyIncludedUserFilter returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAnyIncludedUserFilter() bool {
	if o != nil && !IsNil(o.AnyIncludedUserFilter) {
		return true
	}

	return false
}

// SetAnyIncludedUserFilter gets a reference to the given []string and assigns it to the AnyIncludedUserFilter field.
func (o *AddSimpleConnectionCriteriaRequest) SetAnyIncludedUserFilter(v []string) {
	o.AnyIncludedUserFilter = v
}

// GetNotAllIncludedUserFilter returns the NotAllIncludedUserFilter field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserFilter() []string {
	if o == nil || IsNil(o.NotAllIncludedUserFilter) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedUserFilter
}

// GetNotAllIncludedUserFilterOk returns a tuple with the NotAllIncludedUserFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.NotAllIncludedUserFilter) {
		return nil, false
	}
	return o.NotAllIncludedUserFilter, true
}

// HasNotAllIncludedUserFilter returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNotAllIncludedUserFilter() bool {
	if o != nil && !IsNil(o.NotAllIncludedUserFilter) {
		return true
	}

	return false
}

// SetNotAllIncludedUserFilter gets a reference to the given []string and assigns it to the NotAllIncludedUserFilter field.
func (o *AddSimpleConnectionCriteriaRequest) SetNotAllIncludedUserFilter(v []string) {
	o.NotAllIncludedUserFilter = v
}

// GetNoneIncludedUserFilter returns the NoneIncludedUserFilter field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserFilter() []string {
	if o == nil || IsNil(o.NoneIncludedUserFilter) {
		var ret []string
		return ret
	}
	return o.NoneIncludedUserFilter
}

// GetNoneIncludedUserFilterOk returns a tuple with the NoneIncludedUserFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserFilterOk() ([]string, bool) {
	if o == nil || IsNil(o.NoneIncludedUserFilter) {
		return nil, false
	}
	return o.NoneIncludedUserFilter, true
}

// HasNoneIncludedUserFilter returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNoneIncludedUserFilter() bool {
	if o != nil && !IsNil(o.NoneIncludedUserFilter) {
		return true
	}

	return false
}

// SetNoneIncludedUserFilter gets a reference to the given []string and assigns it to the NoneIncludedUserFilter field.
func (o *AddSimpleConnectionCriteriaRequest) SetNoneIncludedUserFilter(v []string) {
	o.NoneIncludedUserFilter = v
}

// GetAllIncludedUserPrivilege returns the AllIncludedUserPrivilege field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserPrivilege() []EnumconnectionCriteriaAllIncludedUserPrivilegeProp {
	if o == nil || IsNil(o.AllIncludedUserPrivilege) {
		var ret []EnumconnectionCriteriaAllIncludedUserPrivilegeProp
		return ret
	}
	return o.AllIncludedUserPrivilege
}

// GetAllIncludedUserPrivilegeOk returns a tuple with the AllIncludedUserPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAllIncludedUserPrivilegeOk() ([]EnumconnectionCriteriaAllIncludedUserPrivilegeProp, bool) {
	if o == nil || IsNil(o.AllIncludedUserPrivilege) {
		return nil, false
	}
	return o.AllIncludedUserPrivilege, true
}

// HasAllIncludedUserPrivilege returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAllIncludedUserPrivilege() bool {
	if o != nil && !IsNil(o.AllIncludedUserPrivilege) {
		return true
	}

	return false
}

// SetAllIncludedUserPrivilege gets a reference to the given []EnumconnectionCriteriaAllIncludedUserPrivilegeProp and assigns it to the AllIncludedUserPrivilege field.
func (o *AddSimpleConnectionCriteriaRequest) SetAllIncludedUserPrivilege(v []EnumconnectionCriteriaAllIncludedUserPrivilegeProp) {
	o.AllIncludedUserPrivilege = v
}

// GetAnyIncludedUserPrivilege returns the AnyIncludedUserPrivilege field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserPrivilege() []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp {
	if o == nil || IsNil(o.AnyIncludedUserPrivilege) {
		var ret []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp
		return ret
	}
	return o.AnyIncludedUserPrivilege
}

// GetAnyIncludedUserPrivilegeOk returns a tuple with the AnyIncludedUserPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetAnyIncludedUserPrivilegeOk() ([]EnumconnectionCriteriaAnyIncludedUserPrivilegeProp, bool) {
	if o == nil || IsNil(o.AnyIncludedUserPrivilege) {
		return nil, false
	}
	return o.AnyIncludedUserPrivilege, true
}

// HasAnyIncludedUserPrivilege returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasAnyIncludedUserPrivilege() bool {
	if o != nil && !IsNil(o.AnyIncludedUserPrivilege) {
		return true
	}

	return false
}

// SetAnyIncludedUserPrivilege gets a reference to the given []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp and assigns it to the AnyIncludedUserPrivilege field.
func (o *AddSimpleConnectionCriteriaRequest) SetAnyIncludedUserPrivilege(v []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) {
	o.AnyIncludedUserPrivilege = v
}

// GetNotAllIncludedUserPrivilege returns the NotAllIncludedUserPrivilege field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserPrivilege() []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	if o == nil || IsNil(o.NotAllIncludedUserPrivilege) {
		var ret []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp
		return ret
	}
	return o.NotAllIncludedUserPrivilege
}

// GetNotAllIncludedUserPrivilegeOk returns a tuple with the NotAllIncludedUserPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNotAllIncludedUserPrivilegeOk() ([]EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp, bool) {
	if o == nil || IsNil(o.NotAllIncludedUserPrivilege) {
		return nil, false
	}
	return o.NotAllIncludedUserPrivilege, true
}

// HasNotAllIncludedUserPrivilege returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNotAllIncludedUserPrivilege() bool {
	if o != nil && !IsNil(o.NotAllIncludedUserPrivilege) {
		return true
	}

	return false
}

// SetNotAllIncludedUserPrivilege gets a reference to the given []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp and assigns it to the NotAllIncludedUserPrivilege field.
func (o *AddSimpleConnectionCriteriaRequest) SetNotAllIncludedUserPrivilege(v []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) {
	o.NotAllIncludedUserPrivilege = v
}

// GetNoneIncludedUserPrivilege returns the NoneIncludedUserPrivilege field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserPrivilege() []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp {
	if o == nil || IsNil(o.NoneIncludedUserPrivilege) {
		var ret []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp
		return ret
	}
	return o.NoneIncludedUserPrivilege
}

// GetNoneIncludedUserPrivilegeOk returns a tuple with the NoneIncludedUserPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetNoneIncludedUserPrivilegeOk() ([]EnumconnectionCriteriaNoneIncludedUserPrivilegeProp, bool) {
	if o == nil || IsNil(o.NoneIncludedUserPrivilege) {
		return nil, false
	}
	return o.NoneIncludedUserPrivilege, true
}

// HasNoneIncludedUserPrivilege returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasNoneIncludedUserPrivilege() bool {
	if o != nil && !IsNil(o.NoneIncludedUserPrivilege) {
		return true
	}

	return false
}

// SetNoneIncludedUserPrivilege gets a reference to the given []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp and assigns it to the NoneIncludedUserPrivilege field.
func (o *AddSimpleConnectionCriteriaRequest) SetNoneIncludedUserPrivilege(v []EnumconnectionCriteriaNoneIncludedUserPrivilegeProp) {
	o.NoneIncludedUserPrivilege = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddSimpleConnectionCriteriaRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleConnectionCriteriaRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddSimpleConnectionCriteriaRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddSimpleConnectionCriteriaRequest) SetDescription(v string) {
	o.Description = &v
}

func (o AddSimpleConnectionCriteriaRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSimpleConnectionCriteriaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["criteriaName"] = o.CriteriaName
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.IncludedClientAddress) {
		toSerialize["includedClientAddress"] = o.IncludedClientAddress
	}
	if !IsNil(o.ExcludedClientAddress) {
		toSerialize["excludedClientAddress"] = o.ExcludedClientAddress
	}
	if !IsNil(o.IncludedConnectionHandler) {
		toSerialize["includedConnectionHandler"] = o.IncludedConnectionHandler
	}
	if !IsNil(o.ExcludedConnectionHandler) {
		toSerialize["excludedConnectionHandler"] = o.ExcludedConnectionHandler
	}
	if !IsNil(o.IncludedProtocol) {
		toSerialize["includedProtocol"] = o.IncludedProtocol
	}
	if !IsNil(o.ExcludedProtocol) {
		toSerialize["excludedProtocol"] = o.ExcludedProtocol
	}
	if !IsNil(o.CommunicationSecurityLevel) {
		toSerialize["communicationSecurityLevel"] = o.CommunicationSecurityLevel
	}
	if !IsNil(o.UserAuthType) {
		toSerialize["userAuthType"] = o.UserAuthType
	}
	if !IsNil(o.AuthenticationSecurityLevel) {
		toSerialize["authenticationSecurityLevel"] = o.AuthenticationSecurityLevel
	}
	if !IsNil(o.IncludedUserSASLMechanism) {
		toSerialize["includedUserSASLMechanism"] = o.IncludedUserSASLMechanism
	}
	if !IsNil(o.ExcludedUserSASLMechanism) {
		toSerialize["excludedUserSASLMechanism"] = o.ExcludedUserSASLMechanism
	}
	if !IsNil(o.IncludedUserBaseDN) {
		toSerialize["includedUserBaseDN"] = o.IncludedUserBaseDN
	}
	if !IsNil(o.ExcludedUserBaseDN) {
		toSerialize["excludedUserBaseDN"] = o.ExcludedUserBaseDN
	}
	if !IsNil(o.AllIncludedUserGroupDN) {
		toSerialize["allIncludedUserGroupDN"] = o.AllIncludedUserGroupDN
	}
	if !IsNil(o.AnyIncludedUserGroupDN) {
		toSerialize["anyIncludedUserGroupDN"] = o.AnyIncludedUserGroupDN
	}
	if !IsNil(o.NotAllIncludedUserGroupDN) {
		toSerialize["notAllIncludedUserGroupDN"] = o.NotAllIncludedUserGroupDN
	}
	if !IsNil(o.NoneIncludedUserGroupDN) {
		toSerialize["noneIncludedUserGroupDN"] = o.NoneIncludedUserGroupDN
	}
	if !IsNil(o.AllIncludedUserFilter) {
		toSerialize["allIncludedUserFilter"] = o.AllIncludedUserFilter
	}
	if !IsNil(o.AnyIncludedUserFilter) {
		toSerialize["anyIncludedUserFilter"] = o.AnyIncludedUserFilter
	}
	if !IsNil(o.NotAllIncludedUserFilter) {
		toSerialize["notAllIncludedUserFilter"] = o.NotAllIncludedUserFilter
	}
	if !IsNil(o.NoneIncludedUserFilter) {
		toSerialize["noneIncludedUserFilter"] = o.NoneIncludedUserFilter
	}
	if !IsNil(o.AllIncludedUserPrivilege) {
		toSerialize["allIncludedUserPrivilege"] = o.AllIncludedUserPrivilege
	}
	if !IsNil(o.AnyIncludedUserPrivilege) {
		toSerialize["anyIncludedUserPrivilege"] = o.AnyIncludedUserPrivilege
	}
	if !IsNil(o.NotAllIncludedUserPrivilege) {
		toSerialize["notAllIncludedUserPrivilege"] = o.NotAllIncludedUserPrivilege
	}
	if !IsNil(o.NoneIncludedUserPrivilege) {
		toSerialize["noneIncludedUserPrivilege"] = o.NoneIncludedUserPrivilege
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableAddSimpleConnectionCriteriaRequest struct {
	value *AddSimpleConnectionCriteriaRequest
	isSet bool
}

func (v NullableAddSimpleConnectionCriteriaRequest) Get() *AddSimpleConnectionCriteriaRequest {
	return v.value
}

func (v *NullableAddSimpleConnectionCriteriaRequest) Set(val *AddSimpleConnectionCriteriaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSimpleConnectionCriteriaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSimpleConnectionCriteriaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSimpleConnectionCriteriaRequest(val *AddSimpleConnectionCriteriaRequest) *NullableAddSimpleConnectionCriteriaRequest {
	return &NullableAddSimpleConnectionCriteriaRequest{value: val, isSet: true}
}

func (v NullableAddSimpleConnectionCriteriaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSimpleConnectionCriteriaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
