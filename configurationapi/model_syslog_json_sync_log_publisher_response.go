/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the SyslogJsonSyncLogPublisherResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SyslogJsonSyncLogPublisherResponse{}

// SyslogJsonSyncLogPublisherResponse struct for SyslogJsonSyncLogPublisherResponse
type SyslogJsonSyncLogPublisherResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumsyslogJsonSyncLogPublisherSchemaUrn          `json:"schemas"`
	// Name of the Log Publisher
	Id string `json:"id"`
	// The syslog server to which messages should be sent.
	SyslogExternalServer []string                           `json:"syslogExternalServer"`
	SyslogFacility       EnumlogPublisherSyslogFacilityProp `json:"syslogFacility"`
	SyslogSeverity       EnumlogPublisherSyslogSeverityProp `json:"syslogSeverity"`
	// The local host name that will be included in syslog messages that are logged by this Syslog JSON Sync Log Publisher.
	SyslogMessageHostName *string `json:"syslogMessageHostName,omitempty"`
	// The application name that will be included in syslog messages that are logged by this Syslog JSON Sync Log Publisher.
	SyslogMessageApplicationName *string `json:"syslogMessageApplicationName,omitempty"`
	// The maximum number of log records that can be stored in the asynchronous queue.
	QueueSize *int64 `json:"queueSize,omitempty"`
	// Indicates whether the JSON objects should use a multi-line representation (with each object field and array value on its own line) that may be easier for administrators to read, but each message will be larger (because of additional spaces and end-of-line markers), and it may be more difficult to consume and parse through some text-oriented tools.
	WriteMultiLineMessages *bool `json:"writeMultiLineMessages,omitempty"`
	// Indicates whether log messages should include the product name for the Directory Server.
	IncludeProductName *bool `json:"includeProductName,omitempty"`
	// Indicates whether log messages should include the instance name for the Directory Server.
	IncludeInstanceName *bool `json:"includeInstanceName,omitempty"`
	// Indicates whether log messages should include the startup ID for the Directory Server, which is a value assigned to the server instance at startup and may be used to identify when the server has been restarted.
	IncludeStartupID *bool `json:"includeStartupID,omitempty"`
	// Indicates whether log messages should include the thread ID for the Directory Server in each log message. This ID can be used to correlate log messages from the same thread within a single log as well as generated by the same thread across different types of log files. More information about the thread with a specific ID can be obtained using the cn=JVM Stack Trace,cn=monitor entry.
	IncludeThreadID *bool `json:"includeThreadID,omitempty"`
	// Specifies which Sync Pipes can log messages to this Sync Log Publisher.
	IncludeSyncPipe   []string                                `json:"includeSyncPipe,omitempty"`
	LoggedMessageType []EnumlogPublisherLoggedMessageTypeProp `json:"loggedMessageType,omitempty"`
	// A description for this Log Publisher
	Description *string `json:"description,omitempty"`
	// Indicates whether the Log Publisher is enabled for use.
	Enabled              bool                                      `json:"enabled"`
	LoggingErrorBehavior *EnumlogPublisherLoggingErrorBehaviorProp `json:"loggingErrorBehavior,omitempty"`
}

// NewSyslogJsonSyncLogPublisherResponse instantiates a new SyslogJsonSyncLogPublisherResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSyslogJsonSyncLogPublisherResponse(schemas []EnumsyslogJsonSyncLogPublisherSchemaUrn, id string, syslogExternalServer []string, syslogFacility EnumlogPublisherSyslogFacilityProp, syslogSeverity EnumlogPublisherSyslogSeverityProp, enabled bool) *SyslogJsonSyncLogPublisherResponse {
	this := SyslogJsonSyncLogPublisherResponse{}
	this.Schemas = schemas
	this.Id = id
	this.SyslogExternalServer = syslogExternalServer
	this.SyslogFacility = syslogFacility
	this.SyslogSeverity = syslogSeverity
	this.Enabled = enabled
	return &this
}

// NewSyslogJsonSyncLogPublisherResponseWithDefaults instantiates a new SyslogJsonSyncLogPublisherResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSyslogJsonSyncLogPublisherResponseWithDefaults() *SyslogJsonSyncLogPublisherResponse {
	this := SyslogJsonSyncLogPublisherResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *SyslogJsonSyncLogPublisherResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *SyslogJsonSyncLogPublisherResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *SyslogJsonSyncLogPublisherResponse) GetSchemas() []EnumsyslogJsonSyncLogPublisherSchemaUrn {
	if o == nil {
		var ret []EnumsyslogJsonSyncLogPublisherSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSchemasOk() ([]EnumsyslogJsonSyncLogPublisherSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetSchemas(v []EnumsyslogJsonSyncLogPublisherSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *SyslogJsonSyncLogPublisherResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetId(v string) {
	o.Id = v
}

// GetSyslogExternalServer returns the SyslogExternalServer field value
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogExternalServer() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SyslogExternalServer
}

// GetSyslogExternalServerOk returns a tuple with the SyslogExternalServer field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogExternalServerOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SyslogExternalServer, true
}

// SetSyslogExternalServer sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetSyslogExternalServer(v []string) {
	o.SyslogExternalServer = v
}

// GetSyslogFacility returns the SyslogFacility field value
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogFacility() EnumlogPublisherSyslogFacilityProp {
	if o == nil {
		var ret EnumlogPublisherSyslogFacilityProp
		return ret
	}

	return o.SyslogFacility
}

// GetSyslogFacilityOk returns a tuple with the SyslogFacility field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogFacilityOk() (*EnumlogPublisherSyslogFacilityProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyslogFacility, true
}

// SetSyslogFacility sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetSyslogFacility(v EnumlogPublisherSyslogFacilityProp) {
	o.SyslogFacility = v
}

// GetSyslogSeverity returns the SyslogSeverity field value
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogSeverity() EnumlogPublisherSyslogSeverityProp {
	if o == nil {
		var ret EnumlogPublisherSyslogSeverityProp
		return ret
	}

	return o.SyslogSeverity
}

// GetSyslogSeverityOk returns a tuple with the SyslogSeverity field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogSeverityOk() (*EnumlogPublisherSyslogSeverityProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SyslogSeverity, true
}

// SetSyslogSeverity sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetSyslogSeverity(v EnumlogPublisherSyslogSeverityProp) {
	o.SyslogSeverity = v
}

// GetSyslogMessageHostName returns the SyslogMessageHostName field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogMessageHostName() string {
	if o == nil || IsNil(o.SyslogMessageHostName) {
		var ret string
		return ret
	}
	return *o.SyslogMessageHostName
}

// GetSyslogMessageHostNameOk returns a tuple with the SyslogMessageHostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogMessageHostNameOk() (*string, bool) {
	if o == nil || IsNil(o.SyslogMessageHostName) {
		return nil, false
	}
	return o.SyslogMessageHostName, true
}

// HasSyslogMessageHostName returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasSyslogMessageHostName() bool {
	if o != nil && !IsNil(o.SyslogMessageHostName) {
		return true
	}

	return false
}

// SetSyslogMessageHostName gets a reference to the given string and assigns it to the SyslogMessageHostName field.
func (o *SyslogJsonSyncLogPublisherResponse) SetSyslogMessageHostName(v string) {
	o.SyslogMessageHostName = &v
}

// GetSyslogMessageApplicationName returns the SyslogMessageApplicationName field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogMessageApplicationName() string {
	if o == nil || IsNil(o.SyslogMessageApplicationName) {
		var ret string
		return ret
	}
	return *o.SyslogMessageApplicationName
}

// GetSyslogMessageApplicationNameOk returns a tuple with the SyslogMessageApplicationName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetSyslogMessageApplicationNameOk() (*string, bool) {
	if o == nil || IsNil(o.SyslogMessageApplicationName) {
		return nil, false
	}
	return o.SyslogMessageApplicationName, true
}

// HasSyslogMessageApplicationName returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasSyslogMessageApplicationName() bool {
	if o != nil && !IsNil(o.SyslogMessageApplicationName) {
		return true
	}

	return false
}

// SetSyslogMessageApplicationName gets a reference to the given string and assigns it to the SyslogMessageApplicationName field.
func (o *SyslogJsonSyncLogPublisherResponse) SetSyslogMessageApplicationName(v string) {
	o.SyslogMessageApplicationName = &v
}

// GetQueueSize returns the QueueSize field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetQueueSize() int64 {
	if o == nil || IsNil(o.QueueSize) {
		var ret int64
		return ret
	}
	return *o.QueueSize
}

// GetQueueSizeOk returns a tuple with the QueueSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetQueueSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.QueueSize) {
		return nil, false
	}
	return o.QueueSize, true
}

// HasQueueSize returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasQueueSize() bool {
	if o != nil && !IsNil(o.QueueSize) {
		return true
	}

	return false
}

// SetQueueSize gets a reference to the given int64 and assigns it to the QueueSize field.
func (o *SyslogJsonSyncLogPublisherResponse) SetQueueSize(v int64) {
	o.QueueSize = &v
}

// GetWriteMultiLineMessages returns the WriteMultiLineMessages field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetWriteMultiLineMessages() bool {
	if o == nil || IsNil(o.WriteMultiLineMessages) {
		var ret bool
		return ret
	}
	return *o.WriteMultiLineMessages
}

// GetWriteMultiLineMessagesOk returns a tuple with the WriteMultiLineMessages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetWriteMultiLineMessagesOk() (*bool, bool) {
	if o == nil || IsNil(o.WriteMultiLineMessages) {
		return nil, false
	}
	return o.WriteMultiLineMessages, true
}

// HasWriteMultiLineMessages returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasWriteMultiLineMessages() bool {
	if o != nil && !IsNil(o.WriteMultiLineMessages) {
		return true
	}

	return false
}

// SetWriteMultiLineMessages gets a reference to the given bool and assigns it to the WriteMultiLineMessages field.
func (o *SyslogJsonSyncLogPublisherResponse) SetWriteMultiLineMessages(v bool) {
	o.WriteMultiLineMessages = &v
}

// GetIncludeProductName returns the IncludeProductName field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeProductName() bool {
	if o == nil || IsNil(o.IncludeProductName) {
		var ret bool
		return ret
	}
	return *o.IncludeProductName
}

// GetIncludeProductNameOk returns a tuple with the IncludeProductName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeProductNameOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeProductName) {
		return nil, false
	}
	return o.IncludeProductName, true
}

// HasIncludeProductName returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasIncludeProductName() bool {
	if o != nil && !IsNil(o.IncludeProductName) {
		return true
	}

	return false
}

// SetIncludeProductName gets a reference to the given bool and assigns it to the IncludeProductName field.
func (o *SyslogJsonSyncLogPublisherResponse) SetIncludeProductName(v bool) {
	o.IncludeProductName = &v
}

// GetIncludeInstanceName returns the IncludeInstanceName field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeInstanceName() bool {
	if o == nil || IsNil(o.IncludeInstanceName) {
		var ret bool
		return ret
	}
	return *o.IncludeInstanceName
}

// GetIncludeInstanceNameOk returns a tuple with the IncludeInstanceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeInstanceNameOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeInstanceName) {
		return nil, false
	}
	return o.IncludeInstanceName, true
}

// HasIncludeInstanceName returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasIncludeInstanceName() bool {
	if o != nil && !IsNil(o.IncludeInstanceName) {
		return true
	}

	return false
}

// SetIncludeInstanceName gets a reference to the given bool and assigns it to the IncludeInstanceName field.
func (o *SyslogJsonSyncLogPublisherResponse) SetIncludeInstanceName(v bool) {
	o.IncludeInstanceName = &v
}

// GetIncludeStartupID returns the IncludeStartupID field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeStartupID() bool {
	if o == nil || IsNil(o.IncludeStartupID) {
		var ret bool
		return ret
	}
	return *o.IncludeStartupID
}

// GetIncludeStartupIDOk returns a tuple with the IncludeStartupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeStartupIDOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeStartupID) {
		return nil, false
	}
	return o.IncludeStartupID, true
}

// HasIncludeStartupID returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasIncludeStartupID() bool {
	if o != nil && !IsNil(o.IncludeStartupID) {
		return true
	}

	return false
}

// SetIncludeStartupID gets a reference to the given bool and assigns it to the IncludeStartupID field.
func (o *SyslogJsonSyncLogPublisherResponse) SetIncludeStartupID(v bool) {
	o.IncludeStartupID = &v
}

// GetIncludeThreadID returns the IncludeThreadID field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeThreadID() bool {
	if o == nil || IsNil(o.IncludeThreadID) {
		var ret bool
		return ret
	}
	return *o.IncludeThreadID
}

// GetIncludeThreadIDOk returns a tuple with the IncludeThreadID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeThreadIDOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeThreadID) {
		return nil, false
	}
	return o.IncludeThreadID, true
}

// HasIncludeThreadID returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasIncludeThreadID() bool {
	if o != nil && !IsNil(o.IncludeThreadID) {
		return true
	}

	return false
}

// SetIncludeThreadID gets a reference to the given bool and assigns it to the IncludeThreadID field.
func (o *SyslogJsonSyncLogPublisherResponse) SetIncludeThreadID(v bool) {
	o.IncludeThreadID = &v
}

// GetIncludeSyncPipe returns the IncludeSyncPipe field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeSyncPipe() []string {
	if o == nil || IsNil(o.IncludeSyncPipe) {
		var ret []string
		return ret
	}
	return o.IncludeSyncPipe
}

// GetIncludeSyncPipeOk returns a tuple with the IncludeSyncPipe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetIncludeSyncPipeOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeSyncPipe) {
		return nil, false
	}
	return o.IncludeSyncPipe, true
}

// HasIncludeSyncPipe returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasIncludeSyncPipe() bool {
	if o != nil && !IsNil(o.IncludeSyncPipe) {
		return true
	}

	return false
}

// SetIncludeSyncPipe gets a reference to the given []string and assigns it to the IncludeSyncPipe field.
func (o *SyslogJsonSyncLogPublisherResponse) SetIncludeSyncPipe(v []string) {
	o.IncludeSyncPipe = v
}

// GetLoggedMessageType returns the LoggedMessageType field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetLoggedMessageType() []EnumlogPublisherLoggedMessageTypeProp {
	if o == nil || IsNil(o.LoggedMessageType) {
		var ret []EnumlogPublisherLoggedMessageTypeProp
		return ret
	}
	return o.LoggedMessageType
}

// GetLoggedMessageTypeOk returns a tuple with the LoggedMessageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetLoggedMessageTypeOk() ([]EnumlogPublisherLoggedMessageTypeProp, bool) {
	if o == nil || IsNil(o.LoggedMessageType) {
		return nil, false
	}
	return o.LoggedMessageType, true
}

// HasLoggedMessageType returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasLoggedMessageType() bool {
	if o != nil && !IsNil(o.LoggedMessageType) {
		return true
	}

	return false
}

// SetLoggedMessageType gets a reference to the given []EnumlogPublisherLoggedMessageTypeProp and assigns it to the LoggedMessageType field.
func (o *SyslogJsonSyncLogPublisherResponse) SetLoggedMessageType(v []EnumlogPublisherLoggedMessageTypeProp) {
	o.LoggedMessageType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SyslogJsonSyncLogPublisherResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *SyslogJsonSyncLogPublisherResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SyslogJsonSyncLogPublisherResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetLoggingErrorBehavior returns the LoggingErrorBehavior field value if set, zero value otherwise.
func (o *SyslogJsonSyncLogPublisherResponse) GetLoggingErrorBehavior() EnumlogPublisherLoggingErrorBehaviorProp {
	if o == nil || IsNil(o.LoggingErrorBehavior) {
		var ret EnumlogPublisherLoggingErrorBehaviorProp
		return ret
	}
	return *o.LoggingErrorBehavior
}

// GetLoggingErrorBehaviorOk returns a tuple with the LoggingErrorBehavior field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SyslogJsonSyncLogPublisherResponse) GetLoggingErrorBehaviorOk() (*EnumlogPublisherLoggingErrorBehaviorProp, bool) {
	if o == nil || IsNil(o.LoggingErrorBehavior) {
		return nil, false
	}
	return o.LoggingErrorBehavior, true
}

// HasLoggingErrorBehavior returns a boolean if a field has been set.
func (o *SyslogJsonSyncLogPublisherResponse) HasLoggingErrorBehavior() bool {
	if o != nil && !IsNil(o.LoggingErrorBehavior) {
		return true
	}

	return false
}

// SetLoggingErrorBehavior gets a reference to the given EnumlogPublisherLoggingErrorBehaviorProp and assigns it to the LoggingErrorBehavior field.
func (o *SyslogJsonSyncLogPublisherResponse) SetLoggingErrorBehavior(v EnumlogPublisherLoggingErrorBehaviorProp) {
	o.LoggingErrorBehavior = &v
}

func (o SyslogJsonSyncLogPublisherResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SyslogJsonSyncLogPublisherResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["syslogExternalServer"] = o.SyslogExternalServer
	toSerialize["syslogFacility"] = o.SyslogFacility
	toSerialize["syslogSeverity"] = o.SyslogSeverity
	if !IsNil(o.SyslogMessageHostName) {
		toSerialize["syslogMessageHostName"] = o.SyslogMessageHostName
	}
	if !IsNil(o.SyslogMessageApplicationName) {
		toSerialize["syslogMessageApplicationName"] = o.SyslogMessageApplicationName
	}
	if !IsNil(o.QueueSize) {
		toSerialize["queueSize"] = o.QueueSize
	}
	if !IsNil(o.WriteMultiLineMessages) {
		toSerialize["writeMultiLineMessages"] = o.WriteMultiLineMessages
	}
	if !IsNil(o.IncludeProductName) {
		toSerialize["includeProductName"] = o.IncludeProductName
	}
	if !IsNil(o.IncludeInstanceName) {
		toSerialize["includeInstanceName"] = o.IncludeInstanceName
	}
	if !IsNil(o.IncludeStartupID) {
		toSerialize["includeStartupID"] = o.IncludeStartupID
	}
	if !IsNil(o.IncludeThreadID) {
		toSerialize["includeThreadID"] = o.IncludeThreadID
	}
	if !IsNil(o.IncludeSyncPipe) {
		toSerialize["includeSyncPipe"] = o.IncludeSyncPipe
	}
	if !IsNil(o.LoggedMessageType) {
		toSerialize["loggedMessageType"] = o.LoggedMessageType
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.LoggingErrorBehavior) {
		toSerialize["loggingErrorBehavior"] = o.LoggingErrorBehavior
	}
	return toSerialize, nil
}

type NullableSyslogJsonSyncLogPublisherResponse struct {
	value *SyslogJsonSyncLogPublisherResponse
	isSet bool
}

func (v NullableSyslogJsonSyncLogPublisherResponse) Get() *SyslogJsonSyncLogPublisherResponse {
	return v.value
}

func (v *NullableSyslogJsonSyncLogPublisherResponse) Set(val *SyslogJsonSyncLogPublisherResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSyslogJsonSyncLogPublisherResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSyslogJsonSyncLogPublisherResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSyslogJsonSyncLogPublisherResponse(val *SyslogJsonSyncLogPublisherResponse) *NullableSyslogJsonSyncLogPublisherResponse {
	return &NullableSyslogJsonSyncLogPublisherResponse{value: val, isSet: true}
}

func (v NullableSyslogJsonSyncLogPublisherResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSyslogJsonSyncLogPublisherResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
