/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the RootDseBackendResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RootDseBackendResponse{}

// RootDseBackendResponse struct for RootDseBackendResponse
type RootDseBackendResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumrootDseBackendSchemaUrn                      `json:"schemas,omitempty"`
	// Specifies the set of base DNs used for singleLevel, wholeSubtree, and subordinateSubtree searches based at the root DSE.
	SubordinateBaseDN []string `json:"subordinateBaseDN,omitempty"`
	// Specifies an additional OID that should appear in the list of supportedControl values in the server's root DSE.
	AdditionalSupportedControlOID []string `json:"additionalSupportedControlOID,omitempty"`
	// Indicates whether all attributes in the root DSE are to be treated like user attributes (and therefore returned to clients by default) regardless of the Directory Server schema configuration.
	ShowAllAttributes bool `json:"showAllAttributes"`
	// Indicates whether the server's root DSE should reflect current or legacy values for the vendorName and vendorVersion attributes.
	UseLegacyVendorVersion *bool `json:"useLegacyVendorVersion,omitempty"`
}

// NewRootDseBackendResponse instantiates a new RootDseBackendResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRootDseBackendResponse(showAllAttributes bool) *RootDseBackendResponse {
	this := RootDseBackendResponse{}
	this.ShowAllAttributes = showAllAttributes
	return &this
}

// NewRootDseBackendResponseWithDefaults instantiates a new RootDseBackendResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRootDseBackendResponseWithDefaults() *RootDseBackendResponse {
	this := RootDseBackendResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *RootDseBackendResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *RootDseBackendResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetSchemas() []EnumrootDseBackendSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumrootDseBackendSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetSchemasOk() ([]EnumrootDseBackendSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumrootDseBackendSchemaUrn and assigns it to the Schemas field.
func (o *RootDseBackendResponse) SetSchemas(v []EnumrootDseBackendSchemaUrn) {
	o.Schemas = v
}

// GetSubordinateBaseDN returns the SubordinateBaseDN field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetSubordinateBaseDN() []string {
	if o == nil || IsNil(o.SubordinateBaseDN) {
		var ret []string
		return ret
	}
	return o.SubordinateBaseDN
}

// GetSubordinateBaseDNOk returns a tuple with the SubordinateBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetSubordinateBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.SubordinateBaseDN) {
		return nil, false
	}
	return o.SubordinateBaseDN, true
}

// HasSubordinateBaseDN returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasSubordinateBaseDN() bool {
	if o != nil && !IsNil(o.SubordinateBaseDN) {
		return true
	}

	return false
}

// SetSubordinateBaseDN gets a reference to the given []string and assigns it to the SubordinateBaseDN field.
func (o *RootDseBackendResponse) SetSubordinateBaseDN(v []string) {
	o.SubordinateBaseDN = v
}

// GetAdditionalSupportedControlOID returns the AdditionalSupportedControlOID field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetAdditionalSupportedControlOID() []string {
	if o == nil || IsNil(o.AdditionalSupportedControlOID) {
		var ret []string
		return ret
	}
	return o.AdditionalSupportedControlOID
}

// GetAdditionalSupportedControlOIDOk returns a tuple with the AdditionalSupportedControlOID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetAdditionalSupportedControlOIDOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalSupportedControlOID) {
		return nil, false
	}
	return o.AdditionalSupportedControlOID, true
}

// HasAdditionalSupportedControlOID returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasAdditionalSupportedControlOID() bool {
	if o != nil && !IsNil(o.AdditionalSupportedControlOID) {
		return true
	}

	return false
}

// SetAdditionalSupportedControlOID gets a reference to the given []string and assigns it to the AdditionalSupportedControlOID field.
func (o *RootDseBackendResponse) SetAdditionalSupportedControlOID(v []string) {
	o.AdditionalSupportedControlOID = v
}

// GetShowAllAttributes returns the ShowAllAttributes field value
func (o *RootDseBackendResponse) GetShowAllAttributes() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ShowAllAttributes
}

// GetShowAllAttributesOk returns a tuple with the ShowAllAttributes field value
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetShowAllAttributesOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowAllAttributes, true
}

// SetShowAllAttributes sets field value
func (o *RootDseBackendResponse) SetShowAllAttributes(v bool) {
	o.ShowAllAttributes = v
}

// GetUseLegacyVendorVersion returns the UseLegacyVendorVersion field value if set, zero value otherwise.
func (o *RootDseBackendResponse) GetUseLegacyVendorVersion() bool {
	if o == nil || IsNil(o.UseLegacyVendorVersion) {
		var ret bool
		return ret
	}
	return *o.UseLegacyVendorVersion
}

// GetUseLegacyVendorVersionOk returns a tuple with the UseLegacyVendorVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RootDseBackendResponse) GetUseLegacyVendorVersionOk() (*bool, bool) {
	if o == nil || IsNil(o.UseLegacyVendorVersion) {
		return nil, false
	}
	return o.UseLegacyVendorVersion, true
}

// HasUseLegacyVendorVersion returns a boolean if a field has been set.
func (o *RootDseBackendResponse) HasUseLegacyVendorVersion() bool {
	if o != nil && !IsNil(o.UseLegacyVendorVersion) {
		return true
	}

	return false
}

// SetUseLegacyVendorVersion gets a reference to the given bool and assigns it to the UseLegacyVendorVersion field.
func (o *RootDseBackendResponse) SetUseLegacyVendorVersion(v bool) {
	o.UseLegacyVendorVersion = &v
}

func (o RootDseBackendResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RootDseBackendResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.SubordinateBaseDN) {
		toSerialize["subordinateBaseDN"] = o.SubordinateBaseDN
	}
	if !IsNil(o.AdditionalSupportedControlOID) {
		toSerialize["additionalSupportedControlOID"] = o.AdditionalSupportedControlOID
	}
	toSerialize["showAllAttributes"] = o.ShowAllAttributes
	if !IsNil(o.UseLegacyVendorVersion) {
		toSerialize["useLegacyVendorVersion"] = o.UseLegacyVendorVersion
	}
	return toSerialize, nil
}

type NullableRootDseBackendResponse struct {
	value *RootDseBackendResponse
	isSet bool
}

func (v NullableRootDseBackendResponse) Get() *RootDseBackendResponse {
	return v.value
}

func (v *NullableRootDseBackendResponse) Set(val *RootDseBackendResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRootDseBackendResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRootDseBackendResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRootDseBackendResponse(val *RootDseBackendResponse) *NullableRootDseBackendResponse {
	return &NullableRootDseBackendResponse{value: val, isSet: true}
}

func (v NullableRootDseBackendResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRootDseBackendResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
