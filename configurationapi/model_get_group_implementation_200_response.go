/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// GetGroupImplementation200Response - struct for GetGroupImplementation200Response
type GetGroupImplementation200Response struct {
	DynamicGroupImplementationResponse        *DynamicGroupImplementationResponse
	InvertedStaticGroupImplementationResponse *InvertedStaticGroupImplementationResponse
	StaticGroupImplementationResponse         *StaticGroupImplementationResponse
	VirtualStaticGroupImplementationResponse  *VirtualStaticGroupImplementationResponse
}

// DynamicGroupImplementationResponseAsGetGroupImplementation200Response is a convenience function that returns DynamicGroupImplementationResponse wrapped in GetGroupImplementation200Response
func DynamicGroupImplementationResponseAsGetGroupImplementation200Response(v *DynamicGroupImplementationResponse) GetGroupImplementation200Response {
	return GetGroupImplementation200Response{
		DynamicGroupImplementationResponse: v,
	}
}

// InvertedStaticGroupImplementationResponseAsGetGroupImplementation200Response is a convenience function that returns InvertedStaticGroupImplementationResponse wrapped in GetGroupImplementation200Response
func InvertedStaticGroupImplementationResponseAsGetGroupImplementation200Response(v *InvertedStaticGroupImplementationResponse) GetGroupImplementation200Response {
	return GetGroupImplementation200Response{
		InvertedStaticGroupImplementationResponse: v,
	}
}

// StaticGroupImplementationResponseAsGetGroupImplementation200Response is a convenience function that returns StaticGroupImplementationResponse wrapped in GetGroupImplementation200Response
func StaticGroupImplementationResponseAsGetGroupImplementation200Response(v *StaticGroupImplementationResponse) GetGroupImplementation200Response {
	return GetGroupImplementation200Response{
		StaticGroupImplementationResponse: v,
	}
}

// VirtualStaticGroupImplementationResponseAsGetGroupImplementation200Response is a convenience function that returns VirtualStaticGroupImplementationResponse wrapped in GetGroupImplementation200Response
func VirtualStaticGroupImplementationResponseAsGetGroupImplementation200Response(v *VirtualStaticGroupImplementationResponse) GetGroupImplementation200Response {
	return GetGroupImplementation200Response{
		VirtualStaticGroupImplementationResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetGroupImplementation200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DynamicGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.DynamicGroupImplementationResponse)
	if err == nil {
		jsonDynamicGroupImplementationResponse, _ := json.Marshal(dst.DynamicGroupImplementationResponse)
		if string(jsonDynamicGroupImplementationResponse) == "{}" { // empty struct
			dst.DynamicGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.DynamicGroupImplementationResponse = nil
	}

	// try to unmarshal data into InvertedStaticGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.InvertedStaticGroupImplementationResponse)
	if err == nil {
		jsonInvertedStaticGroupImplementationResponse, _ := json.Marshal(dst.InvertedStaticGroupImplementationResponse)
		if string(jsonInvertedStaticGroupImplementationResponse) == "{}" { // empty struct
			dst.InvertedStaticGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.InvertedStaticGroupImplementationResponse = nil
	}

	// try to unmarshal data into StaticGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.StaticGroupImplementationResponse)
	if err == nil {
		jsonStaticGroupImplementationResponse, _ := json.Marshal(dst.StaticGroupImplementationResponse)
		if string(jsonStaticGroupImplementationResponse) == "{}" { // empty struct
			dst.StaticGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.StaticGroupImplementationResponse = nil
	}

	// try to unmarshal data into VirtualStaticGroupImplementationResponse
	err = newStrictDecoder(data).Decode(&dst.VirtualStaticGroupImplementationResponse)
	if err == nil {
		jsonVirtualStaticGroupImplementationResponse, _ := json.Marshal(dst.VirtualStaticGroupImplementationResponse)
		if string(jsonVirtualStaticGroupImplementationResponse) == "{}" { // empty struct
			dst.VirtualStaticGroupImplementationResponse = nil
		} else {
			match++
		}
	} else {
		dst.VirtualStaticGroupImplementationResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DynamicGroupImplementationResponse = nil
		dst.InvertedStaticGroupImplementationResponse = nil
		dst.StaticGroupImplementationResponse = nil
		dst.VirtualStaticGroupImplementationResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetGroupImplementation200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetGroupImplementation200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetGroupImplementation200Response) MarshalJSON() ([]byte, error) {
	if src.DynamicGroupImplementationResponse != nil {
		return json.Marshal(&src.DynamicGroupImplementationResponse)
	}

	if src.InvertedStaticGroupImplementationResponse != nil {
		return json.Marshal(&src.InvertedStaticGroupImplementationResponse)
	}

	if src.StaticGroupImplementationResponse != nil {
		return json.Marshal(&src.StaticGroupImplementationResponse)
	}

	if src.VirtualStaticGroupImplementationResponse != nil {
		return json.Marshal(&src.VirtualStaticGroupImplementationResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetGroupImplementation200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DynamicGroupImplementationResponse != nil {
		return obj.DynamicGroupImplementationResponse
	}

	if obj.InvertedStaticGroupImplementationResponse != nil {
		return obj.InvertedStaticGroupImplementationResponse
	}

	if obj.StaticGroupImplementationResponse != nil {
		return obj.StaticGroupImplementationResponse
	}

	if obj.VirtualStaticGroupImplementationResponse != nil {
		return obj.VirtualStaticGroupImplementationResponse
	}

	// all schemas are nil
	return nil
}

type NullableGetGroupImplementation200Response struct {
	value *GetGroupImplementation200Response
	isSet bool
}

func (v NullableGetGroupImplementation200Response) Get() *GetGroupImplementation200Response {
	return v.value
}

func (v *NullableGetGroupImplementation200Response) Set(val *GetGroupImplementation200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGroupImplementation200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGroupImplementation200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGroupImplementation200Response(val *GetGroupImplementation200Response) *NullableGetGroupImplementation200Response {
	return &NullableGetGroupImplementation200Response{value: val, isSet: true}
}

func (v NullableGetGroupImplementation200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGroupImplementation200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
