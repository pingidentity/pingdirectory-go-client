/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn the model 'EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn'
type EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn string

// List of Enumstream-proxy-values-extended-operation-handlerSchemaUrn
const (
	ENUMSTREAMPROXYVALUESEXTENDEDOPERATIONHANDLERSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0EXTENDED_OPERATION_HANDLERSTREAM_PROXY_VALUES EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:stream-proxy-values"
)

// All allowed values of EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn enum
var AllowedEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnEnumValues = []EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:extended-operation-handler:stream-proxy-values",
}

func (v *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn(value)
	for _, existing := range AllowedEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn", value)
}

// NewEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnFromValue returns a pointer to a valid EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnFromValue(v string) (*EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn, error) {
	ev := EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn: valid values are %v", v, AllowedEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumstreamProxyValuesExtendedOperationHandlerSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumstream-proxy-values-extended-operation-handlerSchemaUrn value
func (v EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) Ptr() *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn {
	return &v
}

type NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn struct {
	value *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn
	isSet bool
}

func (v NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) Get() *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn {
	return v.value
}

func (v *NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) Set(val *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn(val *EnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) *NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn {
	return &NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumstreamProxyValuesExtendedOperationHandlerSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
