/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the SensitiveAttributeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SensitiveAttributeResponse{}

// SensitiveAttributeResponse struct for SensitiveAttributeResponse
type SensitiveAttributeResponse struct {
	Schemas []EnumsensitiveAttributeSchemaUrn `json:"schemas,omitempty"`
	// A description for this Sensitive Attribute
	Description *string `json:"description,omitempty"`
	// The name(s) or OID(s) of the attribute types for attributes whose values may be considered sensitive.
	AttributeType []string `json:"attributeType"`
	// Indicates whether to automatically include any server-generated operational attributes that may contain sensitive data.
	IncludeDefaultSensitiveOperationalAttributes  *bool                                              `json:"includeDefaultSensitiveOperationalAttributes,omitempty"`
	AllowInReturnedEntries                        *EnumsensitiveAttributeAllowInReturnedEntriesProp  `json:"allowInReturnedEntries,omitempty"`
	AllowInFilter                                 *EnumsensitiveAttributeAllowInFilterProp           `json:"allowInFilter,omitempty"`
	AllowInAdd                                    *EnumsensitiveAttributeAllowInAddProp              `json:"allowInAdd,omitempty"`
	AllowInCompare                                *EnumsensitiveAttributeAllowInCompareProp          `json:"allowInCompare,omitempty"`
	AllowInModify                                 *EnumsensitiveAttributeAllowInModifyProp           `json:"allowInModify,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Sensitive Attribute
	Id string `json:"id"`
}

// NewSensitiveAttributeResponse instantiates a new SensitiveAttributeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSensitiveAttributeResponse(attributeType []string, id string) *SensitiveAttributeResponse {
	this := SensitiveAttributeResponse{}
	this.AttributeType = attributeType
	this.Id = id
	return &this
}

// NewSensitiveAttributeResponseWithDefaults instantiates a new SensitiveAttributeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSensitiveAttributeResponseWithDefaults() *SensitiveAttributeResponse {
	this := SensitiveAttributeResponse{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetSchemas() []EnumsensitiveAttributeSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumsensitiveAttributeSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetSchemasOk() ([]EnumsensitiveAttributeSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumsensitiveAttributeSchemaUrn and assigns it to the Schemas field.
func (o *SensitiveAttributeResponse) SetSchemas(v []EnumsensitiveAttributeSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SensitiveAttributeResponse) SetDescription(v string) {
	o.Description = &v
}

// GetAttributeType returns the AttributeType field value
func (o *SensitiveAttributeResponse) GetAttributeType() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAttributeTypeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AttributeType, true
}

// SetAttributeType sets field value
func (o *SensitiveAttributeResponse) SetAttributeType(v []string) {
	o.AttributeType = v
}

// GetIncludeDefaultSensitiveOperationalAttributes returns the IncludeDefaultSensitiveOperationalAttributes field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetIncludeDefaultSensitiveOperationalAttributes() bool {
	if o == nil || IsNil(o.IncludeDefaultSensitiveOperationalAttributes) {
		var ret bool
		return ret
	}
	return *o.IncludeDefaultSensitiveOperationalAttributes
}

// GetIncludeDefaultSensitiveOperationalAttributesOk returns a tuple with the IncludeDefaultSensitiveOperationalAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetIncludeDefaultSensitiveOperationalAttributesOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeDefaultSensitiveOperationalAttributes) {
		return nil, false
	}
	return o.IncludeDefaultSensitiveOperationalAttributes, true
}

// HasIncludeDefaultSensitiveOperationalAttributes returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasIncludeDefaultSensitiveOperationalAttributes() bool {
	if o != nil && !IsNil(o.IncludeDefaultSensitiveOperationalAttributes) {
		return true
	}

	return false
}

// SetIncludeDefaultSensitiveOperationalAttributes gets a reference to the given bool and assigns it to the IncludeDefaultSensitiveOperationalAttributes field.
func (o *SensitiveAttributeResponse) SetIncludeDefaultSensitiveOperationalAttributes(v bool) {
	o.IncludeDefaultSensitiveOperationalAttributes = &v
}

// GetAllowInReturnedEntries returns the AllowInReturnedEntries field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetAllowInReturnedEntries() EnumsensitiveAttributeAllowInReturnedEntriesProp {
	if o == nil || IsNil(o.AllowInReturnedEntries) {
		var ret EnumsensitiveAttributeAllowInReturnedEntriesProp
		return ret
	}
	return *o.AllowInReturnedEntries
}

// GetAllowInReturnedEntriesOk returns a tuple with the AllowInReturnedEntries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAllowInReturnedEntriesOk() (*EnumsensitiveAttributeAllowInReturnedEntriesProp, bool) {
	if o == nil || IsNil(o.AllowInReturnedEntries) {
		return nil, false
	}
	return o.AllowInReturnedEntries, true
}

// HasAllowInReturnedEntries returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasAllowInReturnedEntries() bool {
	if o != nil && !IsNil(o.AllowInReturnedEntries) {
		return true
	}

	return false
}

// SetAllowInReturnedEntries gets a reference to the given EnumsensitiveAttributeAllowInReturnedEntriesProp and assigns it to the AllowInReturnedEntries field.
func (o *SensitiveAttributeResponse) SetAllowInReturnedEntries(v EnumsensitiveAttributeAllowInReturnedEntriesProp) {
	o.AllowInReturnedEntries = &v
}

// GetAllowInFilter returns the AllowInFilter field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetAllowInFilter() EnumsensitiveAttributeAllowInFilterProp {
	if o == nil || IsNil(o.AllowInFilter) {
		var ret EnumsensitiveAttributeAllowInFilterProp
		return ret
	}
	return *o.AllowInFilter
}

// GetAllowInFilterOk returns a tuple with the AllowInFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAllowInFilterOk() (*EnumsensitiveAttributeAllowInFilterProp, bool) {
	if o == nil || IsNil(o.AllowInFilter) {
		return nil, false
	}
	return o.AllowInFilter, true
}

// HasAllowInFilter returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasAllowInFilter() bool {
	if o != nil && !IsNil(o.AllowInFilter) {
		return true
	}

	return false
}

// SetAllowInFilter gets a reference to the given EnumsensitiveAttributeAllowInFilterProp and assigns it to the AllowInFilter field.
func (o *SensitiveAttributeResponse) SetAllowInFilter(v EnumsensitiveAttributeAllowInFilterProp) {
	o.AllowInFilter = &v
}

// GetAllowInAdd returns the AllowInAdd field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetAllowInAdd() EnumsensitiveAttributeAllowInAddProp {
	if o == nil || IsNil(o.AllowInAdd) {
		var ret EnumsensitiveAttributeAllowInAddProp
		return ret
	}
	return *o.AllowInAdd
}

// GetAllowInAddOk returns a tuple with the AllowInAdd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAllowInAddOk() (*EnumsensitiveAttributeAllowInAddProp, bool) {
	if o == nil || IsNil(o.AllowInAdd) {
		return nil, false
	}
	return o.AllowInAdd, true
}

// HasAllowInAdd returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasAllowInAdd() bool {
	if o != nil && !IsNil(o.AllowInAdd) {
		return true
	}

	return false
}

// SetAllowInAdd gets a reference to the given EnumsensitiveAttributeAllowInAddProp and assigns it to the AllowInAdd field.
func (o *SensitiveAttributeResponse) SetAllowInAdd(v EnumsensitiveAttributeAllowInAddProp) {
	o.AllowInAdd = &v
}

// GetAllowInCompare returns the AllowInCompare field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetAllowInCompare() EnumsensitiveAttributeAllowInCompareProp {
	if o == nil || IsNil(o.AllowInCompare) {
		var ret EnumsensitiveAttributeAllowInCompareProp
		return ret
	}
	return *o.AllowInCompare
}

// GetAllowInCompareOk returns a tuple with the AllowInCompare field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAllowInCompareOk() (*EnumsensitiveAttributeAllowInCompareProp, bool) {
	if o == nil || IsNil(o.AllowInCompare) {
		return nil, false
	}
	return o.AllowInCompare, true
}

// HasAllowInCompare returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasAllowInCompare() bool {
	if o != nil && !IsNil(o.AllowInCompare) {
		return true
	}

	return false
}

// SetAllowInCompare gets a reference to the given EnumsensitiveAttributeAllowInCompareProp and assigns it to the AllowInCompare field.
func (o *SensitiveAttributeResponse) SetAllowInCompare(v EnumsensitiveAttributeAllowInCompareProp) {
	o.AllowInCompare = &v
}

// GetAllowInModify returns the AllowInModify field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetAllowInModify() EnumsensitiveAttributeAllowInModifyProp {
	if o == nil || IsNil(o.AllowInModify) {
		var ret EnumsensitiveAttributeAllowInModifyProp
		return ret
	}
	return *o.AllowInModify
}

// GetAllowInModifyOk returns a tuple with the AllowInModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetAllowInModifyOk() (*EnumsensitiveAttributeAllowInModifyProp, bool) {
	if o == nil || IsNil(o.AllowInModify) {
		return nil, false
	}
	return o.AllowInModify, true
}

// HasAllowInModify returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasAllowInModify() bool {
	if o != nil && !IsNil(o.AllowInModify) {
		return true
	}

	return false
}

// SetAllowInModify gets a reference to the given EnumsensitiveAttributeAllowInModifyProp and assigns it to the AllowInModify field.
func (o *SensitiveAttributeResponse) SetAllowInModify(v EnumsensitiveAttributeAllowInModifyProp) {
	o.AllowInModify = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *SensitiveAttributeResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *SensitiveAttributeResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *SensitiveAttributeResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *SensitiveAttributeResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *SensitiveAttributeResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SensitiveAttributeResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SensitiveAttributeResponse) SetId(v string) {
	o.Id = v
}

func (o SensitiveAttributeResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SensitiveAttributeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["attributeType"] = o.AttributeType
	if !IsNil(o.IncludeDefaultSensitiveOperationalAttributes) {
		toSerialize["includeDefaultSensitiveOperationalAttributes"] = o.IncludeDefaultSensitiveOperationalAttributes
	}
	if !IsNil(o.AllowInReturnedEntries) {
		toSerialize["allowInReturnedEntries"] = o.AllowInReturnedEntries
	}
	if !IsNil(o.AllowInFilter) {
		toSerialize["allowInFilter"] = o.AllowInFilter
	}
	if !IsNil(o.AllowInAdd) {
		toSerialize["allowInAdd"] = o.AllowInAdd
	}
	if !IsNil(o.AllowInCompare) {
		toSerialize["allowInCompare"] = o.AllowInCompare
	}
	if !IsNil(o.AllowInModify) {
		toSerialize["allowInModify"] = o.AllowInModify
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullableSensitiveAttributeResponse struct {
	value *SensitiveAttributeResponse
	isSet bool
}

func (v NullableSensitiveAttributeResponse) Get() *SensitiveAttributeResponse {
	return v.value
}

func (v *NullableSensitiveAttributeResponse) Set(val *SensitiveAttributeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSensitiveAttributeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSensitiveAttributeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSensitiveAttributeResponse(val *SensitiveAttributeResponse) *NullableSensitiveAttributeResponse {
	return &NullableSensitiveAttributeResponse{value: val, isSet: true}
}

func (v NullableSensitiveAttributeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSensitiveAttributeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
