/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddHttpServletExtension200Response - struct for AddHttpServletExtension200Response
type AddHttpServletExtension200Response struct {
	AvailabilityStateHttpServletExtensionResponse    *AvailabilityStateHttpServletExtensionResponse
	FileServerHttpServletExtensionResponse           *FileServerHttpServletExtensionResponse
	GroovyScriptedHttpServletExtensionResponse       *GroovyScriptedHttpServletExtensionResponse
	LdapMappedScimHttpServletExtensionResponse       *LdapMappedScimHttpServletExtensionResponse
	PrometheusMonitoringHttpServletExtensionResponse *PrometheusMonitoringHttpServletExtensionResponse
	QuickstartHttpServletExtensionResponse           *QuickstartHttpServletExtensionResponse
	ThirdPartyHttpServletExtensionResponse           *ThirdPartyHttpServletExtensionResponse
}

// AvailabilityStateHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns AvailabilityStateHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func AvailabilityStateHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *AvailabilityStateHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		AvailabilityStateHttpServletExtensionResponse: v,
	}
}

// FileServerHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns FileServerHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func FileServerHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *FileServerHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		FileServerHttpServletExtensionResponse: v,
	}
}

// GroovyScriptedHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns GroovyScriptedHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func GroovyScriptedHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *GroovyScriptedHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		GroovyScriptedHttpServletExtensionResponse: v,
	}
}

// LdapMappedScimHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns LdapMappedScimHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func LdapMappedScimHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *LdapMappedScimHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		LdapMappedScimHttpServletExtensionResponse: v,
	}
}

// PrometheusMonitoringHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns PrometheusMonitoringHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func PrometheusMonitoringHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *PrometheusMonitoringHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		PrometheusMonitoringHttpServletExtensionResponse: v,
	}
}

// QuickstartHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns QuickstartHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func QuickstartHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *QuickstartHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		QuickstartHttpServletExtensionResponse: v,
	}
}

// ThirdPartyHttpServletExtensionResponseAsAddHttpServletExtension200Response is a convenience function that returns ThirdPartyHttpServletExtensionResponse wrapped in AddHttpServletExtension200Response
func ThirdPartyHttpServletExtensionResponseAsAddHttpServletExtension200Response(v *ThirdPartyHttpServletExtensionResponse) AddHttpServletExtension200Response {
	return AddHttpServletExtension200Response{
		ThirdPartyHttpServletExtensionResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddHttpServletExtension200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AvailabilityStateHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.AvailabilityStateHttpServletExtensionResponse)
	if err == nil {
		jsonAvailabilityStateHttpServletExtensionResponse, _ := json.Marshal(dst.AvailabilityStateHttpServletExtensionResponse)
		if string(jsonAvailabilityStateHttpServletExtensionResponse) == "{}" { // empty struct
			dst.AvailabilityStateHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.AvailabilityStateHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into FileServerHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.FileServerHttpServletExtensionResponse)
	if err == nil {
		jsonFileServerHttpServletExtensionResponse, _ := json.Marshal(dst.FileServerHttpServletExtensionResponse)
		if string(jsonFileServerHttpServletExtensionResponse) == "{}" { // empty struct
			dst.FileServerHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.FileServerHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into GroovyScriptedHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedHttpServletExtensionResponse)
	if err == nil {
		jsonGroovyScriptedHttpServletExtensionResponse, _ := json.Marshal(dst.GroovyScriptedHttpServletExtensionResponse)
		if string(jsonGroovyScriptedHttpServletExtensionResponse) == "{}" { // empty struct
			dst.GroovyScriptedHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into LdapMappedScimHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.LdapMappedScimHttpServletExtensionResponse)
	if err == nil {
		jsonLdapMappedScimHttpServletExtensionResponse, _ := json.Marshal(dst.LdapMappedScimHttpServletExtensionResponse)
		if string(jsonLdapMappedScimHttpServletExtensionResponse) == "{}" { // empty struct
			dst.LdapMappedScimHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.LdapMappedScimHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into PrometheusMonitoringHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.PrometheusMonitoringHttpServletExtensionResponse)
	if err == nil {
		jsonPrometheusMonitoringHttpServletExtensionResponse, _ := json.Marshal(dst.PrometheusMonitoringHttpServletExtensionResponse)
		if string(jsonPrometheusMonitoringHttpServletExtensionResponse) == "{}" { // empty struct
			dst.PrometheusMonitoringHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.PrometheusMonitoringHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into QuickstartHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.QuickstartHttpServletExtensionResponse)
	if err == nil {
		jsonQuickstartHttpServletExtensionResponse, _ := json.Marshal(dst.QuickstartHttpServletExtensionResponse)
		if string(jsonQuickstartHttpServletExtensionResponse) == "{}" { // empty struct
			dst.QuickstartHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.QuickstartHttpServletExtensionResponse = nil
	}

	// try to unmarshal data into ThirdPartyHttpServletExtensionResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyHttpServletExtensionResponse)
	if err == nil {
		jsonThirdPartyHttpServletExtensionResponse, _ := json.Marshal(dst.ThirdPartyHttpServletExtensionResponse)
		if string(jsonThirdPartyHttpServletExtensionResponse) == "{}" { // empty struct
			dst.ThirdPartyHttpServletExtensionResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyHttpServletExtensionResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AvailabilityStateHttpServletExtensionResponse = nil
		dst.FileServerHttpServletExtensionResponse = nil
		dst.GroovyScriptedHttpServletExtensionResponse = nil
		dst.LdapMappedScimHttpServletExtensionResponse = nil
		dst.PrometheusMonitoringHttpServletExtensionResponse = nil
		dst.QuickstartHttpServletExtensionResponse = nil
		dst.ThirdPartyHttpServletExtensionResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddHttpServletExtension200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddHttpServletExtension200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddHttpServletExtension200Response) MarshalJSON() ([]byte, error) {
	if src.AvailabilityStateHttpServletExtensionResponse != nil {
		return json.Marshal(&src.AvailabilityStateHttpServletExtensionResponse)
	}

	if src.FileServerHttpServletExtensionResponse != nil {
		return json.Marshal(&src.FileServerHttpServletExtensionResponse)
	}

	if src.GroovyScriptedHttpServletExtensionResponse != nil {
		return json.Marshal(&src.GroovyScriptedHttpServletExtensionResponse)
	}

	if src.LdapMappedScimHttpServletExtensionResponse != nil {
		return json.Marshal(&src.LdapMappedScimHttpServletExtensionResponse)
	}

	if src.PrometheusMonitoringHttpServletExtensionResponse != nil {
		return json.Marshal(&src.PrometheusMonitoringHttpServletExtensionResponse)
	}

	if src.QuickstartHttpServletExtensionResponse != nil {
		return json.Marshal(&src.QuickstartHttpServletExtensionResponse)
	}

	if src.ThirdPartyHttpServletExtensionResponse != nil {
		return json.Marshal(&src.ThirdPartyHttpServletExtensionResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddHttpServletExtension200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AvailabilityStateHttpServletExtensionResponse != nil {
		return obj.AvailabilityStateHttpServletExtensionResponse
	}

	if obj.FileServerHttpServletExtensionResponse != nil {
		return obj.FileServerHttpServletExtensionResponse
	}

	if obj.GroovyScriptedHttpServletExtensionResponse != nil {
		return obj.GroovyScriptedHttpServletExtensionResponse
	}

	if obj.LdapMappedScimHttpServletExtensionResponse != nil {
		return obj.LdapMappedScimHttpServletExtensionResponse
	}

	if obj.PrometheusMonitoringHttpServletExtensionResponse != nil {
		return obj.PrometheusMonitoringHttpServletExtensionResponse
	}

	if obj.QuickstartHttpServletExtensionResponse != nil {
		return obj.QuickstartHttpServletExtensionResponse
	}

	if obj.ThirdPartyHttpServletExtensionResponse != nil {
		return obj.ThirdPartyHttpServletExtensionResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddHttpServletExtension200Response struct {
	value *AddHttpServletExtension200Response
	isSet bool
}

func (v NullableAddHttpServletExtension200Response) Get() *AddHttpServletExtension200Response {
	return v.value
}

func (v *NullableAddHttpServletExtension200Response) Set(val *AddHttpServletExtension200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddHttpServletExtension200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddHttpServletExtension200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddHttpServletExtension200Response(val *AddHttpServletExtension200Response) *NullableAddHttpServletExtension200Response {
	return &NullableAddHttpServletExtension200Response{value: val, isSet: true}
}

func (v NullableAddHttpServletExtension200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddHttpServletExtension200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
