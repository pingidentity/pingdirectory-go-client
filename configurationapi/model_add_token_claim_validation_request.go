/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddTokenClaimValidationRequest - struct for AddTokenClaimValidationRequest
type AddTokenClaimValidationRequest struct {
	AddBooleanTokenClaimValidationRequest     *AddBooleanTokenClaimValidationRequest
	AddStringArrayTokenClaimValidationRequest *AddStringArrayTokenClaimValidationRequest
	AddStringTokenClaimValidationRequest      *AddStringTokenClaimValidationRequest
}

// AddBooleanTokenClaimValidationRequestAsAddTokenClaimValidationRequest is a convenience function that returns AddBooleanTokenClaimValidationRequest wrapped in AddTokenClaimValidationRequest
func AddBooleanTokenClaimValidationRequestAsAddTokenClaimValidationRequest(v *AddBooleanTokenClaimValidationRequest) AddTokenClaimValidationRequest {
	return AddTokenClaimValidationRequest{
		AddBooleanTokenClaimValidationRequest: v,
	}
}

// AddStringArrayTokenClaimValidationRequestAsAddTokenClaimValidationRequest is a convenience function that returns AddStringArrayTokenClaimValidationRequest wrapped in AddTokenClaimValidationRequest
func AddStringArrayTokenClaimValidationRequestAsAddTokenClaimValidationRequest(v *AddStringArrayTokenClaimValidationRequest) AddTokenClaimValidationRequest {
	return AddTokenClaimValidationRequest{
		AddStringArrayTokenClaimValidationRequest: v,
	}
}

// AddStringTokenClaimValidationRequestAsAddTokenClaimValidationRequest is a convenience function that returns AddStringTokenClaimValidationRequest wrapped in AddTokenClaimValidationRequest
func AddStringTokenClaimValidationRequestAsAddTokenClaimValidationRequest(v *AddStringTokenClaimValidationRequest) AddTokenClaimValidationRequest {
	return AddTokenClaimValidationRequest{
		AddStringTokenClaimValidationRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddTokenClaimValidationRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddBooleanTokenClaimValidationRequest
	err = newStrictDecoder(data).Decode(&dst.AddBooleanTokenClaimValidationRequest)
	if err == nil {
		jsonAddBooleanTokenClaimValidationRequest, _ := json.Marshal(dst.AddBooleanTokenClaimValidationRequest)
		if string(jsonAddBooleanTokenClaimValidationRequest) == "{}" { // empty struct
			dst.AddBooleanTokenClaimValidationRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddBooleanTokenClaimValidationRequest = nil
	}

	// try to unmarshal data into AddStringArrayTokenClaimValidationRequest
	err = newStrictDecoder(data).Decode(&dst.AddStringArrayTokenClaimValidationRequest)
	if err == nil {
		jsonAddStringArrayTokenClaimValidationRequest, _ := json.Marshal(dst.AddStringArrayTokenClaimValidationRequest)
		if string(jsonAddStringArrayTokenClaimValidationRequest) == "{}" { // empty struct
			dst.AddStringArrayTokenClaimValidationRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddStringArrayTokenClaimValidationRequest = nil
	}

	// try to unmarshal data into AddStringTokenClaimValidationRequest
	err = newStrictDecoder(data).Decode(&dst.AddStringTokenClaimValidationRequest)
	if err == nil {
		jsonAddStringTokenClaimValidationRequest, _ := json.Marshal(dst.AddStringTokenClaimValidationRequest)
		if string(jsonAddStringTokenClaimValidationRequest) == "{}" { // empty struct
			dst.AddStringTokenClaimValidationRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddStringTokenClaimValidationRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddBooleanTokenClaimValidationRequest = nil
		dst.AddStringArrayTokenClaimValidationRequest = nil
		dst.AddStringTokenClaimValidationRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddTokenClaimValidationRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddTokenClaimValidationRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddTokenClaimValidationRequest) MarshalJSON() ([]byte, error) {
	if src.AddBooleanTokenClaimValidationRequest != nil {
		return json.Marshal(&src.AddBooleanTokenClaimValidationRequest)
	}

	if src.AddStringArrayTokenClaimValidationRequest != nil {
		return json.Marshal(&src.AddStringArrayTokenClaimValidationRequest)
	}

	if src.AddStringTokenClaimValidationRequest != nil {
		return json.Marshal(&src.AddStringTokenClaimValidationRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddTokenClaimValidationRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddBooleanTokenClaimValidationRequest != nil {
		return obj.AddBooleanTokenClaimValidationRequest
	}

	if obj.AddStringArrayTokenClaimValidationRequest != nil {
		return obj.AddStringArrayTokenClaimValidationRequest
	}

	if obj.AddStringTokenClaimValidationRequest != nil {
		return obj.AddStringTokenClaimValidationRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddTokenClaimValidationRequest struct {
	value *AddTokenClaimValidationRequest
	isSet bool
}

func (v NullableAddTokenClaimValidationRequest) Get() *AddTokenClaimValidationRequest {
	return v.value
}

func (v *NullableAddTokenClaimValidationRequest) Set(val *AddTokenClaimValidationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTokenClaimValidationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTokenClaimValidationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTokenClaimValidationRequest(val *AddTokenClaimValidationRequest) *NullableAddTokenClaimValidationRequest {
	return &NullableAddTokenClaimValidationRequest{value: val, isSet: true}
}

func (v NullableAddTokenClaimValidationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTokenClaimValidationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
