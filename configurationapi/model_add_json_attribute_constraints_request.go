/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddJsonAttributeConstraintsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddJsonAttributeConstraintsRequest{}

// AddJsonAttributeConstraintsRequest struct for AddJsonAttributeConstraintsRequest
type AddJsonAttributeConstraintsRequest struct {
	// The name or OID of the LDAP attribute type whose values will be subject to the associated field constraints. This attribute type must be defined in the server schema, and it must have a \"JSON object\" syntax.
	AttributeType string                                  `json:"attributeType"`
	Schemas       []EnumjsonAttributeConstraintsSchemaUrn `json:"schemas,omitempty"`
	// A description for this JSON Attribute Constraints
	Description *string `json:"description,omitempty"`
	// Indicates whether this JSON Attribute Constraints is enabled.
	Enabled *bool `json:"enabled,omitempty"`
	// Indicates whether JSON objects stored as values of attributes with the associated attribute-type will be permitted to include fields for which there is no subordinate json-field-constraints definition. If unnamed fields are allowed, then no constraints will be imposed on the values of those fields. However, if unnamed fields are not allowed, then the server will reject any attempt to store a JSON object with a field for which there is no corresponding json-fields-constraints definition.
	AllowUnnamedFields *bool `json:"allowUnnamedFields,omitempty"`
}

// NewAddJsonAttributeConstraintsRequest instantiates a new AddJsonAttributeConstraintsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddJsonAttributeConstraintsRequest(attributeType string) *AddJsonAttributeConstraintsRequest {
	this := AddJsonAttributeConstraintsRequest{}
	this.AttributeType = attributeType
	return &this
}

// NewAddJsonAttributeConstraintsRequestWithDefaults instantiates a new AddJsonAttributeConstraintsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddJsonAttributeConstraintsRequestWithDefaults() *AddJsonAttributeConstraintsRequest {
	this := AddJsonAttributeConstraintsRequest{}
	return &this
}

// GetAttributeType returns the AttributeType field value
func (o *AddJsonAttributeConstraintsRequest) GetAttributeType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AttributeType
}

// GetAttributeTypeOk returns a tuple with the AttributeType field value
// and a boolean to check if the value has been set.
func (o *AddJsonAttributeConstraintsRequest) GetAttributeTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttributeType, true
}

// SetAttributeType sets field value
func (o *AddJsonAttributeConstraintsRequest) SetAttributeType(v string) {
	o.AttributeType = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddJsonAttributeConstraintsRequest) GetSchemas() []EnumjsonAttributeConstraintsSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumjsonAttributeConstraintsSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddJsonAttributeConstraintsRequest) GetSchemasOk() ([]EnumjsonAttributeConstraintsSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddJsonAttributeConstraintsRequest) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumjsonAttributeConstraintsSchemaUrn and assigns it to the Schemas field.
func (o *AddJsonAttributeConstraintsRequest) SetSchemas(v []EnumjsonAttributeConstraintsSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddJsonAttributeConstraintsRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddJsonAttributeConstraintsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddJsonAttributeConstraintsRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddJsonAttributeConstraintsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddJsonAttributeConstraintsRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddJsonAttributeConstraintsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AddJsonAttributeConstraintsRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddJsonAttributeConstraintsRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetAllowUnnamedFields returns the AllowUnnamedFields field value if set, zero value otherwise.
func (o *AddJsonAttributeConstraintsRequest) GetAllowUnnamedFields() bool {
	if o == nil || IsNil(o.AllowUnnamedFields) {
		var ret bool
		return ret
	}
	return *o.AllowUnnamedFields
}

// GetAllowUnnamedFieldsOk returns a tuple with the AllowUnnamedFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddJsonAttributeConstraintsRequest) GetAllowUnnamedFieldsOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowUnnamedFields) {
		return nil, false
	}
	return o.AllowUnnamedFields, true
}

// HasAllowUnnamedFields returns a boolean if a field has been set.
func (o *AddJsonAttributeConstraintsRequest) HasAllowUnnamedFields() bool {
	if o != nil && !IsNil(o.AllowUnnamedFields) {
		return true
	}

	return false
}

// SetAllowUnnamedFields gets a reference to the given bool and assigns it to the AllowUnnamedFields field.
func (o *AddJsonAttributeConstraintsRequest) SetAllowUnnamedFields(v bool) {
	o.AllowUnnamedFields = &v
}

func (o AddJsonAttributeConstraintsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddJsonAttributeConstraintsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["attributeType"] = o.AttributeType
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.AllowUnnamedFields) {
		toSerialize["allowUnnamedFields"] = o.AllowUnnamedFields
	}
	return toSerialize, nil
}

type NullableAddJsonAttributeConstraintsRequest struct {
	value *AddJsonAttributeConstraintsRequest
	isSet bool
}

func (v NullableAddJsonAttributeConstraintsRequest) Get() *AddJsonAttributeConstraintsRequest {
	return v.value
}

func (v *NullableAddJsonAttributeConstraintsRequest) Set(val *AddJsonAttributeConstraintsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddJsonAttributeConstraintsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddJsonAttributeConstraintsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddJsonAttributeConstraintsRequest(val *AddJsonAttributeConstraintsRequest) *NullableAddJsonAttributeConstraintsRequest {
	return &NullableAddJsonAttributeConstraintsRequest{value: val, isSet: true}
}

func (v NullableAddJsonAttributeConstraintsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddJsonAttributeConstraintsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
