/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the FileRetentionRecurringTaskResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FileRetentionRecurringTaskResponse{}

// FileRetentionRecurringTaskResponse struct for FileRetentionRecurringTaskResponse
type FileRetentionRecurringTaskResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Recurring Task
	Id      string                                    `json:"id"`
	Schemas []EnumfileRetentionRecurringTaskSchemaUrn `json:"schemas"`
	// The path to the directory containing the files to examine. The directory must exist.
	TargetDirectory string `json:"targetDirectory"`
	// A pattern that specifies the names of the files to examine. The pattern may contain zero or more asterisks as wildcards, where each wildcard matches zero or more characters. It may also contain at most one occurrence of the special string \"${timestamp}\", which will match a timestamp with the format specified using the timestamp-format property. All other characters in the pattern will be treated literally.
	FilenamePattern string                               `json:"filenamePattern"`
	TimestampFormat EnumrecurringTaskTimestampFormatProp `json:"timestampFormat"`
	// The minimum number of files matching the pattern that will be retained.
	RetainFileCount *int32 `json:"retainFileCount,omitempty"`
	// The minimum age of files matching the pattern that will be retained.
	RetainFileAge *string `json:"retainFileAge,omitempty"`
	// The minimum aggregate size of files that will be retained. The size should be specified as an integer followed by a unit that is one of \"b\" or \"bytes\", \"kb\" or \"kilobytes\", \"mb\" or \"megabytes\", \"gb\" or \"gigabytes\", or \"tb\" or \"terabytes\". For example, a value of \"1 gb\" indicates that at least one gigabyte of files should be retained.
	RetainAggregateFileSize *string `json:"retainAggregateFileSize,omitempty"`
	// A description for this Recurring Task
	Description *string `json:"description,omitempty"`
	// Indicates whether an instance of this Recurring Task should be canceled if the task immediately before it in the recurring task chain fails to complete successfully (including if it is canceled by an administrator before it starts or while it is running).
	CancelOnTaskDependencyFailure *bool `json:"cancelOnTaskDependencyFailure,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task starts running. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnStart []string `json:"emailOnStart,omitempty"`
	// The email addresses to which a message should be sent whenever an instance of this Recurring Task completes successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnSuccess []string `json:"emailOnSuccess,omitempty"`
	// The email addresses to which a message should be sent if an instance of this Recurring Task fails to complete successfully. If this option is used, then at least one smtp-server must be configured in the global configuration.
	EmailOnFailure []string `json:"emailOnFailure,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task starts running.
	AlertOnStart *bool `json:"alertOnStart,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task completes successfully.
	AlertOnSuccess *bool `json:"alertOnSuccess,omitempty"`
	// Indicates whether the server should generate an administrative alert whenever an instance of this Recurring Task fails to complete successfully.
	AlertOnFailure *bool `json:"alertOnFailure,omitempty"`
}

// NewFileRetentionRecurringTaskResponse instantiates a new FileRetentionRecurringTaskResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFileRetentionRecurringTaskResponse(id string, schemas []EnumfileRetentionRecurringTaskSchemaUrn, targetDirectory string, filenamePattern string, timestampFormat EnumrecurringTaskTimestampFormatProp) *FileRetentionRecurringTaskResponse {
	this := FileRetentionRecurringTaskResponse{}
	this.Id = id
	this.Schemas = schemas
	this.TargetDirectory = targetDirectory
	this.FilenamePattern = filenamePattern
	this.TimestampFormat = timestampFormat
	return &this
}

// NewFileRetentionRecurringTaskResponseWithDefaults instantiates a new FileRetentionRecurringTaskResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFileRetentionRecurringTaskResponseWithDefaults() *FileRetentionRecurringTaskResponse {
	this := FileRetentionRecurringTaskResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *FileRetentionRecurringTaskResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *FileRetentionRecurringTaskResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *FileRetentionRecurringTaskResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FileRetentionRecurringTaskResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *FileRetentionRecurringTaskResponse) GetSchemas() []EnumfileRetentionRecurringTaskSchemaUrn {
	if o == nil {
		var ret []EnumfileRetentionRecurringTaskSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetSchemasOk() ([]EnumfileRetentionRecurringTaskSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *FileRetentionRecurringTaskResponse) SetSchemas(v []EnumfileRetentionRecurringTaskSchemaUrn) {
	o.Schemas = v
}

// GetTargetDirectory returns the TargetDirectory field value
func (o *FileRetentionRecurringTaskResponse) GetTargetDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetDirectory
}

// GetTargetDirectoryOk returns a tuple with the TargetDirectory field value
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetTargetDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetDirectory, true
}

// SetTargetDirectory sets field value
func (o *FileRetentionRecurringTaskResponse) SetTargetDirectory(v string) {
	o.TargetDirectory = v
}

// GetFilenamePattern returns the FilenamePattern field value
func (o *FileRetentionRecurringTaskResponse) GetFilenamePattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FilenamePattern
}

// GetFilenamePatternOk returns a tuple with the FilenamePattern field value
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetFilenamePatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FilenamePattern, true
}

// SetFilenamePattern sets field value
func (o *FileRetentionRecurringTaskResponse) SetFilenamePattern(v string) {
	o.FilenamePattern = v
}

// GetTimestampFormat returns the TimestampFormat field value
func (o *FileRetentionRecurringTaskResponse) GetTimestampFormat() EnumrecurringTaskTimestampFormatProp {
	if o == nil {
		var ret EnumrecurringTaskTimestampFormatProp
		return ret
	}

	return o.TimestampFormat
}

// GetTimestampFormatOk returns a tuple with the TimestampFormat field value
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetTimestampFormatOk() (*EnumrecurringTaskTimestampFormatProp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimestampFormat, true
}

// SetTimestampFormat sets field value
func (o *FileRetentionRecurringTaskResponse) SetTimestampFormat(v EnumrecurringTaskTimestampFormatProp) {
	o.TimestampFormat = v
}

// GetRetainFileCount returns the RetainFileCount field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetRetainFileCount() int32 {
	if o == nil || IsNil(o.RetainFileCount) {
		var ret int32
		return ret
	}
	return *o.RetainFileCount
}

// GetRetainFileCountOk returns a tuple with the RetainFileCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetRetainFileCountOk() (*int32, bool) {
	if o == nil || IsNil(o.RetainFileCount) {
		return nil, false
	}
	return o.RetainFileCount, true
}

// HasRetainFileCount returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasRetainFileCount() bool {
	if o != nil && !IsNil(o.RetainFileCount) {
		return true
	}

	return false
}

// SetRetainFileCount gets a reference to the given int32 and assigns it to the RetainFileCount field.
func (o *FileRetentionRecurringTaskResponse) SetRetainFileCount(v int32) {
	o.RetainFileCount = &v
}

// GetRetainFileAge returns the RetainFileAge field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetRetainFileAge() string {
	if o == nil || IsNil(o.RetainFileAge) {
		var ret string
		return ret
	}
	return *o.RetainFileAge
}

// GetRetainFileAgeOk returns a tuple with the RetainFileAge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetRetainFileAgeOk() (*string, bool) {
	if o == nil || IsNil(o.RetainFileAge) {
		return nil, false
	}
	return o.RetainFileAge, true
}

// HasRetainFileAge returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasRetainFileAge() bool {
	if o != nil && !IsNil(o.RetainFileAge) {
		return true
	}

	return false
}

// SetRetainFileAge gets a reference to the given string and assigns it to the RetainFileAge field.
func (o *FileRetentionRecurringTaskResponse) SetRetainFileAge(v string) {
	o.RetainFileAge = &v
}

// GetRetainAggregateFileSize returns the RetainAggregateFileSize field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetRetainAggregateFileSize() string {
	if o == nil || IsNil(o.RetainAggregateFileSize) {
		var ret string
		return ret
	}
	return *o.RetainAggregateFileSize
}

// GetRetainAggregateFileSizeOk returns a tuple with the RetainAggregateFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetRetainAggregateFileSizeOk() (*string, bool) {
	if o == nil || IsNil(o.RetainAggregateFileSize) {
		return nil, false
	}
	return o.RetainAggregateFileSize, true
}

// HasRetainAggregateFileSize returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasRetainAggregateFileSize() bool {
	if o != nil && !IsNil(o.RetainAggregateFileSize) {
		return true
	}

	return false
}

// SetRetainAggregateFileSize gets a reference to the given string and assigns it to the RetainAggregateFileSize field.
func (o *FileRetentionRecurringTaskResponse) SetRetainAggregateFileSize(v string) {
	o.RetainAggregateFileSize = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FileRetentionRecurringTaskResponse) SetDescription(v string) {
	o.Description = &v
}

// GetCancelOnTaskDependencyFailure returns the CancelOnTaskDependencyFailure field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetCancelOnTaskDependencyFailure() bool {
	if o == nil || IsNil(o.CancelOnTaskDependencyFailure) {
		var ret bool
		return ret
	}
	return *o.CancelOnTaskDependencyFailure
}

// GetCancelOnTaskDependencyFailureOk returns a tuple with the CancelOnTaskDependencyFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetCancelOnTaskDependencyFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.CancelOnTaskDependencyFailure) {
		return nil, false
	}
	return o.CancelOnTaskDependencyFailure, true
}

// HasCancelOnTaskDependencyFailure returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasCancelOnTaskDependencyFailure() bool {
	if o != nil && !IsNil(o.CancelOnTaskDependencyFailure) {
		return true
	}

	return false
}

// SetCancelOnTaskDependencyFailure gets a reference to the given bool and assigns it to the CancelOnTaskDependencyFailure field.
func (o *FileRetentionRecurringTaskResponse) SetCancelOnTaskDependencyFailure(v bool) {
	o.CancelOnTaskDependencyFailure = &v
}

// GetEmailOnStart returns the EmailOnStart field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnStart() []string {
	if o == nil || IsNil(o.EmailOnStart) {
		var ret []string
		return ret
	}
	return o.EmailOnStart
}

// GetEmailOnStartOk returns a tuple with the EmailOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnStartOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnStart) {
		return nil, false
	}
	return o.EmailOnStart, true
}

// HasEmailOnStart returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasEmailOnStart() bool {
	if o != nil && !IsNil(o.EmailOnStart) {
		return true
	}

	return false
}

// SetEmailOnStart gets a reference to the given []string and assigns it to the EmailOnStart field.
func (o *FileRetentionRecurringTaskResponse) SetEmailOnStart(v []string) {
	o.EmailOnStart = v
}

// GetEmailOnSuccess returns the EmailOnSuccess field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnSuccess() []string {
	if o == nil || IsNil(o.EmailOnSuccess) {
		var ret []string
		return ret
	}
	return o.EmailOnSuccess
}

// GetEmailOnSuccessOk returns a tuple with the EmailOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnSuccessOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnSuccess) {
		return nil, false
	}
	return o.EmailOnSuccess, true
}

// HasEmailOnSuccess returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasEmailOnSuccess() bool {
	if o != nil && !IsNil(o.EmailOnSuccess) {
		return true
	}

	return false
}

// SetEmailOnSuccess gets a reference to the given []string and assigns it to the EmailOnSuccess field.
func (o *FileRetentionRecurringTaskResponse) SetEmailOnSuccess(v []string) {
	o.EmailOnSuccess = v
}

// GetEmailOnFailure returns the EmailOnFailure field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnFailure() []string {
	if o == nil || IsNil(o.EmailOnFailure) {
		var ret []string
		return ret
	}
	return o.EmailOnFailure
}

// GetEmailOnFailureOk returns a tuple with the EmailOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetEmailOnFailureOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailOnFailure) {
		return nil, false
	}
	return o.EmailOnFailure, true
}

// HasEmailOnFailure returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasEmailOnFailure() bool {
	if o != nil && !IsNil(o.EmailOnFailure) {
		return true
	}

	return false
}

// SetEmailOnFailure gets a reference to the given []string and assigns it to the EmailOnFailure field.
func (o *FileRetentionRecurringTaskResponse) SetEmailOnFailure(v []string) {
	o.EmailOnFailure = v
}

// GetAlertOnStart returns the AlertOnStart field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnStart() bool {
	if o == nil || IsNil(o.AlertOnStart) {
		var ret bool
		return ret
	}
	return *o.AlertOnStart
}

// GetAlertOnStartOk returns a tuple with the AlertOnStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnStartOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnStart) {
		return nil, false
	}
	return o.AlertOnStart, true
}

// HasAlertOnStart returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasAlertOnStart() bool {
	if o != nil && !IsNil(o.AlertOnStart) {
		return true
	}

	return false
}

// SetAlertOnStart gets a reference to the given bool and assigns it to the AlertOnStart field.
func (o *FileRetentionRecurringTaskResponse) SetAlertOnStart(v bool) {
	o.AlertOnStart = &v
}

// GetAlertOnSuccess returns the AlertOnSuccess field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnSuccess() bool {
	if o == nil || IsNil(o.AlertOnSuccess) {
		var ret bool
		return ret
	}
	return *o.AlertOnSuccess
}

// GetAlertOnSuccessOk returns a tuple with the AlertOnSuccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnSuccessOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnSuccess) {
		return nil, false
	}
	return o.AlertOnSuccess, true
}

// HasAlertOnSuccess returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasAlertOnSuccess() bool {
	if o != nil && !IsNil(o.AlertOnSuccess) {
		return true
	}

	return false
}

// SetAlertOnSuccess gets a reference to the given bool and assigns it to the AlertOnSuccess field.
func (o *FileRetentionRecurringTaskResponse) SetAlertOnSuccess(v bool) {
	o.AlertOnSuccess = &v
}

// GetAlertOnFailure returns the AlertOnFailure field value if set, zero value otherwise.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnFailure() bool {
	if o == nil || IsNil(o.AlertOnFailure) {
		var ret bool
		return ret
	}
	return *o.AlertOnFailure
}

// GetAlertOnFailureOk returns a tuple with the AlertOnFailure field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FileRetentionRecurringTaskResponse) GetAlertOnFailureOk() (*bool, bool) {
	if o == nil || IsNil(o.AlertOnFailure) {
		return nil, false
	}
	return o.AlertOnFailure, true
}

// HasAlertOnFailure returns a boolean if a field has been set.
func (o *FileRetentionRecurringTaskResponse) HasAlertOnFailure() bool {
	if o != nil && !IsNil(o.AlertOnFailure) {
		return true
	}

	return false
}

// SetAlertOnFailure gets a reference to the given bool and assigns it to the AlertOnFailure field.
func (o *FileRetentionRecurringTaskResponse) SetAlertOnFailure(v bool) {
	o.AlertOnFailure = &v
}

func (o FileRetentionRecurringTaskResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FileRetentionRecurringTaskResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	toSerialize["targetDirectory"] = o.TargetDirectory
	toSerialize["filenamePattern"] = o.FilenamePattern
	toSerialize["timestampFormat"] = o.TimestampFormat
	if !IsNil(o.RetainFileCount) {
		toSerialize["retainFileCount"] = o.RetainFileCount
	}
	if !IsNil(o.RetainFileAge) {
		toSerialize["retainFileAge"] = o.RetainFileAge
	}
	if !IsNil(o.RetainAggregateFileSize) {
		toSerialize["retainAggregateFileSize"] = o.RetainAggregateFileSize
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.CancelOnTaskDependencyFailure) {
		toSerialize["cancelOnTaskDependencyFailure"] = o.CancelOnTaskDependencyFailure
	}
	if !IsNil(o.EmailOnStart) {
		toSerialize["emailOnStart"] = o.EmailOnStart
	}
	if !IsNil(o.EmailOnSuccess) {
		toSerialize["emailOnSuccess"] = o.EmailOnSuccess
	}
	if !IsNil(o.EmailOnFailure) {
		toSerialize["emailOnFailure"] = o.EmailOnFailure
	}
	if !IsNil(o.AlertOnStart) {
		toSerialize["alertOnStart"] = o.AlertOnStart
	}
	if !IsNil(o.AlertOnSuccess) {
		toSerialize["alertOnSuccess"] = o.AlertOnSuccess
	}
	if !IsNil(o.AlertOnFailure) {
		toSerialize["alertOnFailure"] = o.AlertOnFailure
	}
	return toSerialize, nil
}

type NullableFileRetentionRecurringTaskResponse struct {
	value *FileRetentionRecurringTaskResponse
	isSet bool
}

func (v NullableFileRetentionRecurringTaskResponse) Get() *FileRetentionRecurringTaskResponse {
	return v.value
}

func (v *NullableFileRetentionRecurringTaskResponse) Set(val *FileRetentionRecurringTaskResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFileRetentionRecurringTaskResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFileRetentionRecurringTaskResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFileRetentionRecurringTaskResponse(val *FileRetentionRecurringTaskResponse) *NullableFileRetentionRecurringTaskResponse {
	return &NullableFileRetentionRecurringTaskResponse{value: val, isSet: true}
}

func (v NullableFileRetentionRecurringTaskResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFileRetentionRecurringTaskResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
