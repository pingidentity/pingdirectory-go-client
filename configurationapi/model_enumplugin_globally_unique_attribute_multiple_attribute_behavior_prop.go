/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp The behavior to exhibit if multiple attribute types are specified.
type EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp string

// List of Enumplugin-globally-unique-attribute-multipleAttributeBehaviorProp
const (
	ENUMPLUGINGLOBALLYUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_WITHIN_EACH_ATTRIBUTE                         EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp = "unique-within-each-attribute"
	ENUMPLUGINGLOBALLYUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_ACROSS_ALL_ATTRIBUTES_INCLUDING_IN_SAME_ENTRY EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp = "unique-across-all-attributes-including-in-same-entry"
	ENUMPLUGINGLOBALLYUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_ACROSS_ALL_ATTRIBUTES_EXCEPT_IN_SAME_ENTRY    EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp = "unique-across-all-attributes-except-in-same-entry"
	ENUMPLUGINGLOBALLYUNIQUEATTRIBUTEMULTIPLEATTRIBUTEBEHAVIORPROP_IN_COMBINATION                                EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp = "unique-in-combination"
)

// All allowed values of EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp enum
var AllowedEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropEnumValues = []EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp{
	"unique-within-each-attribute",
	"unique-across-all-attributes-including-in-same-entry",
	"unique-across-all-attributes-except-in-same-entry",
	"unique-in-combination",
}

func (v *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp(value)
	for _, existing := range AllowedEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp", value)
}

// NewEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropFromValue returns a pointer to a valid EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropFromValue(v string) (*EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp, error) {
	ev := EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp: valid values are %v", v, AllowedEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-globally-unique-attribute-multipleAttributeBehaviorProp value
func (v EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) Ptr() *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp {
	return &v
}

type NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp struct {
	value *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp
	isSet bool
}

func (v NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) Get() *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp {
	return v.value
}

func (v *NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) Set(val *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp(val *EnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) *NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp {
	return &NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginGloballyUniqueAttributeMultipleAttributeBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
