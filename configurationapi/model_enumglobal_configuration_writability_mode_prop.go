/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumglobalConfigurationWritabilityModeProp Specifies the kinds of write operations the Directory Server can process.
type EnumglobalConfigurationWritabilityModeProp string

// List of Enumglobal-configuration-writabilityModeProp
const (
	ENUMGLOBALCONFIGURATIONWRITABILITYMODEPROP_ENABLED       EnumglobalConfigurationWritabilityModeProp = "enabled"
	ENUMGLOBALCONFIGURATIONWRITABILITYMODEPROP_DISABLED      EnumglobalConfigurationWritabilityModeProp = "disabled"
	ENUMGLOBALCONFIGURATIONWRITABILITYMODEPROP_INTERNAL_ONLY EnumglobalConfigurationWritabilityModeProp = "internal-only"
)

// All allowed values of EnumglobalConfigurationWritabilityModeProp enum
var AllowedEnumglobalConfigurationWritabilityModePropEnumValues = []EnumglobalConfigurationWritabilityModeProp{
	"enabled",
	"disabled",
	"internal-only",
}

func (v *EnumglobalConfigurationWritabilityModeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumglobalConfigurationWritabilityModeProp(value)
	for _, existing := range AllowedEnumglobalConfigurationWritabilityModePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumglobalConfigurationWritabilityModeProp", value)
}

// NewEnumglobalConfigurationWritabilityModePropFromValue returns a pointer to a valid EnumglobalConfigurationWritabilityModeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumglobalConfigurationWritabilityModePropFromValue(v string) (*EnumglobalConfigurationWritabilityModeProp, error) {
	ev := EnumglobalConfigurationWritabilityModeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumglobalConfigurationWritabilityModeProp: valid values are %v", v, AllowedEnumglobalConfigurationWritabilityModePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumglobalConfigurationWritabilityModeProp) IsValid() bool {
	for _, existing := range AllowedEnumglobalConfigurationWritabilityModePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumglobal-configuration-writabilityModeProp value
func (v EnumglobalConfigurationWritabilityModeProp) Ptr() *EnumglobalConfigurationWritabilityModeProp {
	return &v
}

type NullableEnumglobalConfigurationWritabilityModeProp struct {
	value *EnumglobalConfigurationWritabilityModeProp
	isSet bool
}

func (v NullableEnumglobalConfigurationWritabilityModeProp) Get() *EnumglobalConfigurationWritabilityModeProp {
	return v.value
}

func (v *NullableEnumglobalConfigurationWritabilityModeProp) Set(val *EnumglobalConfigurationWritabilityModeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumglobalConfigurationWritabilityModeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumglobalConfigurationWritabilityModeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumglobalConfigurationWritabilityModeProp(val *EnumglobalConfigurationWritabilityModeProp) *NullableEnumglobalConfigurationWritabilityModeProp {
	return &NullableEnumglobalConfigurationWritabilityModeProp{value: val, isSet: true}
}

func (v NullableEnumglobalConfigurationWritabilityModeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumglobalConfigurationWritabilityModeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
