/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginIncludedResourceStatProp Specifies whether statistics related to resource utilization such as JVM memory.
type EnumpluginIncludedResourceStatProp string

// List of Enumplugin-includedResourceStatProp
const (
	ENUMPLUGININCLUDEDRESOURCESTATPROP_MEMORY_UTILIZATION EnumpluginIncludedResourceStatProp = "memory-utilization"
)

// All allowed values of EnumpluginIncludedResourceStatProp enum
var AllowedEnumpluginIncludedResourceStatPropEnumValues = []EnumpluginIncludedResourceStatProp{
	"memory-utilization",
}

func (v *EnumpluginIncludedResourceStatProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginIncludedResourceStatProp(value)
	for _, existing := range AllowedEnumpluginIncludedResourceStatPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginIncludedResourceStatProp", value)
}

// NewEnumpluginIncludedResourceStatPropFromValue returns a pointer to a valid EnumpluginIncludedResourceStatProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginIncludedResourceStatPropFromValue(v string) (*EnumpluginIncludedResourceStatProp, error) {
	ev := EnumpluginIncludedResourceStatProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginIncludedResourceStatProp: valid values are %v", v, AllowedEnumpluginIncludedResourceStatPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginIncludedResourceStatProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginIncludedResourceStatPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-includedResourceStatProp value
func (v EnumpluginIncludedResourceStatProp) Ptr() *EnumpluginIncludedResourceStatProp {
	return &v
}

type NullableEnumpluginIncludedResourceStatProp struct {
	value *EnumpluginIncludedResourceStatProp
	isSet bool
}

func (v NullableEnumpluginIncludedResourceStatProp) Get() *EnumpluginIncludedResourceStatProp {
	return v.value
}

func (v *NullableEnumpluginIncludedResourceStatProp) Set(val *EnumpluginIncludedResourceStatProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginIncludedResourceStatProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginIncludedResourceStatProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginIncludedResourceStatProp(val *EnumpluginIncludedResourceStatProp) *NullableEnumpluginIncludedResourceStatProp {
	return &NullableEnumpluginIncludedResourceStatProp{value: val, isSet: true}
}

func (v NullableEnumpluginIncludedResourceStatProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginIncludedResourceStatProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
