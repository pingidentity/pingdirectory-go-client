/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumscimSubattributeReturnedProp Specifies the circumstances under which the values of the sub-attribute are returned in response to a request.
type EnumscimSubattributeReturnedProp string

// List of Enumscim-subattribute-returnedProp
const (
	ENUMSCIMSUBATTRIBUTERETURNEDPROP_BY_DEFAULT   EnumscimSubattributeReturnedProp = "by-default"
	ENUMSCIMSUBATTRIBUTERETURNEDPROP_UPON_REQUEST EnumscimSubattributeReturnedProp = "upon-request"
	ENUMSCIMSUBATTRIBUTERETURNEDPROP_ALWAYS       EnumscimSubattributeReturnedProp = "always"
	ENUMSCIMSUBATTRIBUTERETURNEDPROP_NEVER        EnumscimSubattributeReturnedProp = "never"
)

// All allowed values of EnumscimSubattributeReturnedProp enum
var AllowedEnumscimSubattributeReturnedPropEnumValues = []EnumscimSubattributeReturnedProp{
	"by-default",
	"upon-request",
	"always",
	"never",
}

func (v *EnumscimSubattributeReturnedProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumscimSubattributeReturnedProp(value)
	for _, existing := range AllowedEnumscimSubattributeReturnedPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumscimSubattributeReturnedProp", value)
}

// NewEnumscimSubattributeReturnedPropFromValue returns a pointer to a valid EnumscimSubattributeReturnedProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumscimSubattributeReturnedPropFromValue(v string) (*EnumscimSubattributeReturnedProp, error) {
	ev := EnumscimSubattributeReturnedProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumscimSubattributeReturnedProp: valid values are %v", v, AllowedEnumscimSubattributeReturnedPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumscimSubattributeReturnedProp) IsValid() bool {
	for _, existing := range AllowedEnumscimSubattributeReturnedPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumscim-subattribute-returnedProp value
func (v EnumscimSubattributeReturnedProp) Ptr() *EnumscimSubattributeReturnedProp {
	return &v
}

type NullableEnumscimSubattributeReturnedProp struct {
	value *EnumscimSubattributeReturnedProp
	isSet bool
}

func (v NullableEnumscimSubattributeReturnedProp) Get() *EnumscimSubattributeReturnedProp {
	return v.value
}

func (v *NullableEnumscimSubattributeReturnedProp) Set(val *EnumscimSubattributeReturnedProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumscimSubattributeReturnedProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumscimSubattributeReturnedProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumscimSubattributeReturnedProp(val *EnumscimSubattributeReturnedProp) *NullableEnumscimSubattributeReturnedProp {
	return &NullableEnumscimSubattributeReturnedProp{value: val, isSet: true}
}

func (v NullableEnumscimSubattributeReturnedProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumscimSubattributeReturnedProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
