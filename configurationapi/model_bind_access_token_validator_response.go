/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the BindAccessTokenValidatorResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BindAccessTokenValidatorResponse{}

// BindAccessTokenValidatorResponse struct for BindAccessTokenValidatorResponse
type BindAccessTokenValidatorResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumbindAccessTokenValidatorSchemaUrn            `json:"schemas"`
	// Name of the Access Token Validator
	Id string `json:"id"`
	// Indicates whether this Bind Access Token Validator is enabled for use in Directory Server.
	Enabled bool `json:"enabled"`
	// Indicates whether access tokens should be persisted in user entries.
	PersistAccessTokens *bool `json:"persistAccessTokens,omitempty"`
	// Specifies the maximum length of time that a generated token should be considered valid. If this is not specified, then generated access tokens will not expire.
	MaximumTokenLifetime      *string                                                 `json:"maximumTokenLifetime,omitempty"`
	AllowedAuthenticationType []EnumaccessTokenValidatorAllowedAuthenticationTypeProp `json:"allowedAuthenticationType,omitempty"`
	// Specifies the names of the SASL mechanisms for which access tokens may be generated, and for which generated access tokens will be accepted.
	AllowedSASLMechanism []string `json:"allowedSASLMechanism,omitempty"`
	// A reference to a request criteria object that may be used to identify the types of bind operations for which access tokens may be generated. If no criteria is specified, then access tokens may be generated for any bind operations that satisfy the other requirements configured in this validator.
	GenerateTokenResultCriteria *string `json:"generateTokenResultCriteria,omitempty"`
	// Specifies the names of any scopes that should be granted to a client that authenticates with a bind access token. By default, no scopes will be granted.
	IncludedScope []string `json:"includedScope,omitempty"`
	// Specifies the name of the Identity Mapper that should be used for associating user entries with Bearer token subject names. The claim name from which to obtain the subject (i.e. the currently logged-in user) may be configured using the subject-claim-name property.
	IdentityMapper *string `json:"identityMapper,omitempty"`
	// The name of the token claim that contains the subject, i.e. the logged-in user in an access token. This property goes hand-in-hand with the identity-mapper property and tells the Identity Mapper which field to use to look up the user entry on the server.
	SubjectClaimName *string `json:"subjectClaimName,omitempty"`
	// A description for this Access Token Validator
	Description *string `json:"description,omitempty"`
	// When multiple Access Token Validators are defined for a single Directory Server, this property determines the evaluation order for determining the correct validator class for an access token received by the Directory Server. Values of this property must be unique among all Access Token Validators defined within Directory Server but not necessarily contiguous. Access Token Validators with a smaller value will be evaluated first to determine if they are able to validate the access token.
	EvaluationOrderIndex int64 `json:"evaluationOrderIndex"`
}

// NewBindAccessTokenValidatorResponse instantiates a new BindAccessTokenValidatorResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBindAccessTokenValidatorResponse(schemas []EnumbindAccessTokenValidatorSchemaUrn, id string, enabled bool, evaluationOrderIndex int64) *BindAccessTokenValidatorResponse {
	this := BindAccessTokenValidatorResponse{}
	this.Schemas = schemas
	this.Id = id
	this.Enabled = enabled
	this.EvaluationOrderIndex = evaluationOrderIndex
	return &this
}

// NewBindAccessTokenValidatorResponseWithDefaults instantiates a new BindAccessTokenValidatorResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBindAccessTokenValidatorResponseWithDefaults() *BindAccessTokenValidatorResponse {
	this := BindAccessTokenValidatorResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *BindAccessTokenValidatorResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *BindAccessTokenValidatorResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *BindAccessTokenValidatorResponse) GetSchemas() []EnumbindAccessTokenValidatorSchemaUrn {
	if o == nil {
		var ret []EnumbindAccessTokenValidatorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetSchemasOk() ([]EnumbindAccessTokenValidatorSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *BindAccessTokenValidatorResponse) SetSchemas(v []EnumbindAccessTokenValidatorSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *BindAccessTokenValidatorResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BindAccessTokenValidatorResponse) SetId(v string) {
	o.Id = v
}

// GetEnabled returns the Enabled field value
func (o *BindAccessTokenValidatorResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *BindAccessTokenValidatorResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetPersistAccessTokens returns the PersistAccessTokens field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetPersistAccessTokens() bool {
	if o == nil || IsNil(o.PersistAccessTokens) {
		var ret bool
		return ret
	}
	return *o.PersistAccessTokens
}

// GetPersistAccessTokensOk returns a tuple with the PersistAccessTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetPersistAccessTokensOk() (*bool, bool) {
	if o == nil || IsNil(o.PersistAccessTokens) {
		return nil, false
	}
	return o.PersistAccessTokens, true
}

// HasPersistAccessTokens returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasPersistAccessTokens() bool {
	if o != nil && !IsNil(o.PersistAccessTokens) {
		return true
	}

	return false
}

// SetPersistAccessTokens gets a reference to the given bool and assigns it to the PersistAccessTokens field.
func (o *BindAccessTokenValidatorResponse) SetPersistAccessTokens(v bool) {
	o.PersistAccessTokens = &v
}

// GetMaximumTokenLifetime returns the MaximumTokenLifetime field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetMaximumTokenLifetime() string {
	if o == nil || IsNil(o.MaximumTokenLifetime) {
		var ret string
		return ret
	}
	return *o.MaximumTokenLifetime
}

// GetMaximumTokenLifetimeOk returns a tuple with the MaximumTokenLifetime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetMaximumTokenLifetimeOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumTokenLifetime) {
		return nil, false
	}
	return o.MaximumTokenLifetime, true
}

// HasMaximumTokenLifetime returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasMaximumTokenLifetime() bool {
	if o != nil && !IsNil(o.MaximumTokenLifetime) {
		return true
	}

	return false
}

// SetMaximumTokenLifetime gets a reference to the given string and assigns it to the MaximumTokenLifetime field.
func (o *BindAccessTokenValidatorResponse) SetMaximumTokenLifetime(v string) {
	o.MaximumTokenLifetime = &v
}

// GetAllowedAuthenticationType returns the AllowedAuthenticationType field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetAllowedAuthenticationType() []EnumaccessTokenValidatorAllowedAuthenticationTypeProp {
	if o == nil || IsNil(o.AllowedAuthenticationType) {
		var ret []EnumaccessTokenValidatorAllowedAuthenticationTypeProp
		return ret
	}
	return o.AllowedAuthenticationType
}

// GetAllowedAuthenticationTypeOk returns a tuple with the AllowedAuthenticationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetAllowedAuthenticationTypeOk() ([]EnumaccessTokenValidatorAllowedAuthenticationTypeProp, bool) {
	if o == nil || IsNil(o.AllowedAuthenticationType) {
		return nil, false
	}
	return o.AllowedAuthenticationType, true
}

// HasAllowedAuthenticationType returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasAllowedAuthenticationType() bool {
	if o != nil && !IsNil(o.AllowedAuthenticationType) {
		return true
	}

	return false
}

// SetAllowedAuthenticationType gets a reference to the given []EnumaccessTokenValidatorAllowedAuthenticationTypeProp and assigns it to the AllowedAuthenticationType field.
func (o *BindAccessTokenValidatorResponse) SetAllowedAuthenticationType(v []EnumaccessTokenValidatorAllowedAuthenticationTypeProp) {
	o.AllowedAuthenticationType = v
}

// GetAllowedSASLMechanism returns the AllowedSASLMechanism field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetAllowedSASLMechanism() []string {
	if o == nil || IsNil(o.AllowedSASLMechanism) {
		var ret []string
		return ret
	}
	return o.AllowedSASLMechanism
}

// GetAllowedSASLMechanismOk returns a tuple with the AllowedSASLMechanism field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetAllowedSASLMechanismOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedSASLMechanism) {
		return nil, false
	}
	return o.AllowedSASLMechanism, true
}

// HasAllowedSASLMechanism returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasAllowedSASLMechanism() bool {
	if o != nil && !IsNil(o.AllowedSASLMechanism) {
		return true
	}

	return false
}

// SetAllowedSASLMechanism gets a reference to the given []string and assigns it to the AllowedSASLMechanism field.
func (o *BindAccessTokenValidatorResponse) SetAllowedSASLMechanism(v []string) {
	o.AllowedSASLMechanism = v
}

// GetGenerateTokenResultCriteria returns the GenerateTokenResultCriteria field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetGenerateTokenResultCriteria() string {
	if o == nil || IsNil(o.GenerateTokenResultCriteria) {
		var ret string
		return ret
	}
	return *o.GenerateTokenResultCriteria
}

// GetGenerateTokenResultCriteriaOk returns a tuple with the GenerateTokenResultCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetGenerateTokenResultCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.GenerateTokenResultCriteria) {
		return nil, false
	}
	return o.GenerateTokenResultCriteria, true
}

// HasGenerateTokenResultCriteria returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasGenerateTokenResultCriteria() bool {
	if o != nil && !IsNil(o.GenerateTokenResultCriteria) {
		return true
	}

	return false
}

// SetGenerateTokenResultCriteria gets a reference to the given string and assigns it to the GenerateTokenResultCriteria field.
func (o *BindAccessTokenValidatorResponse) SetGenerateTokenResultCriteria(v string) {
	o.GenerateTokenResultCriteria = &v
}

// GetIncludedScope returns the IncludedScope field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetIncludedScope() []string {
	if o == nil || IsNil(o.IncludedScope) {
		var ret []string
		return ret
	}
	return o.IncludedScope
}

// GetIncludedScopeOk returns a tuple with the IncludedScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetIncludedScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedScope) {
		return nil, false
	}
	return o.IncludedScope, true
}

// HasIncludedScope returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasIncludedScope() bool {
	if o != nil && !IsNil(o.IncludedScope) {
		return true
	}

	return false
}

// SetIncludedScope gets a reference to the given []string and assigns it to the IncludedScope field.
func (o *BindAccessTokenValidatorResponse) SetIncludedScope(v []string) {
	o.IncludedScope = v
}

// GetIdentityMapper returns the IdentityMapper field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetIdentityMapper() string {
	if o == nil || IsNil(o.IdentityMapper) {
		var ret string
		return ret
	}
	return *o.IdentityMapper
}

// GetIdentityMapperOk returns a tuple with the IdentityMapper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetIdentityMapperOk() (*string, bool) {
	if o == nil || IsNil(o.IdentityMapper) {
		return nil, false
	}
	return o.IdentityMapper, true
}

// HasIdentityMapper returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasIdentityMapper() bool {
	if o != nil && !IsNil(o.IdentityMapper) {
		return true
	}

	return false
}

// SetIdentityMapper gets a reference to the given string and assigns it to the IdentityMapper field.
func (o *BindAccessTokenValidatorResponse) SetIdentityMapper(v string) {
	o.IdentityMapper = &v
}

// GetSubjectClaimName returns the SubjectClaimName field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetSubjectClaimName() string {
	if o == nil || IsNil(o.SubjectClaimName) {
		var ret string
		return ret
	}
	return *o.SubjectClaimName
}

// GetSubjectClaimNameOk returns a tuple with the SubjectClaimName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetSubjectClaimNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubjectClaimName) {
		return nil, false
	}
	return o.SubjectClaimName, true
}

// HasSubjectClaimName returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasSubjectClaimName() bool {
	if o != nil && !IsNil(o.SubjectClaimName) {
		return true
	}

	return false
}

// SetSubjectClaimName gets a reference to the given string and assigns it to the SubjectClaimName field.
func (o *BindAccessTokenValidatorResponse) SetSubjectClaimName(v string) {
	o.SubjectClaimName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BindAccessTokenValidatorResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BindAccessTokenValidatorResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BindAccessTokenValidatorResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEvaluationOrderIndex returns the EvaluationOrderIndex field value
func (o *BindAccessTokenValidatorResponse) GetEvaluationOrderIndex() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.EvaluationOrderIndex
}

// GetEvaluationOrderIndexOk returns a tuple with the EvaluationOrderIndex field value
// and a boolean to check if the value has been set.
func (o *BindAccessTokenValidatorResponse) GetEvaluationOrderIndexOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EvaluationOrderIndex, true
}

// SetEvaluationOrderIndex sets field value
func (o *BindAccessTokenValidatorResponse) SetEvaluationOrderIndex(v int64) {
	o.EvaluationOrderIndex = v
}

func (o BindAccessTokenValidatorResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BindAccessTokenValidatorResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.PersistAccessTokens) {
		toSerialize["persistAccessTokens"] = o.PersistAccessTokens
	}
	if !IsNil(o.MaximumTokenLifetime) {
		toSerialize["maximumTokenLifetime"] = o.MaximumTokenLifetime
	}
	if !IsNil(o.AllowedAuthenticationType) {
		toSerialize["allowedAuthenticationType"] = o.AllowedAuthenticationType
	}
	if !IsNil(o.AllowedSASLMechanism) {
		toSerialize["allowedSASLMechanism"] = o.AllowedSASLMechanism
	}
	if !IsNil(o.GenerateTokenResultCriteria) {
		toSerialize["generateTokenResultCriteria"] = o.GenerateTokenResultCriteria
	}
	if !IsNil(o.IncludedScope) {
		toSerialize["includedScope"] = o.IncludedScope
	}
	if !IsNil(o.IdentityMapper) {
		toSerialize["identityMapper"] = o.IdentityMapper
	}
	if !IsNil(o.SubjectClaimName) {
		toSerialize["subjectClaimName"] = o.SubjectClaimName
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["evaluationOrderIndex"] = o.EvaluationOrderIndex
	return toSerialize, nil
}

type NullableBindAccessTokenValidatorResponse struct {
	value *BindAccessTokenValidatorResponse
	isSet bool
}

func (v NullableBindAccessTokenValidatorResponse) Get() *BindAccessTokenValidatorResponse {
	return v.value
}

func (v *NullableBindAccessTokenValidatorResponse) Set(val *BindAccessTokenValidatorResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableBindAccessTokenValidatorResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableBindAccessTokenValidatorResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBindAccessTokenValidatorResponse(val *BindAccessTokenValidatorResponse) *NullableBindAccessTokenValidatorResponse {
	return &NullableBindAccessTokenValidatorResponse{value: val, isSet: true}
}

func (v NullableBindAccessTokenValidatorResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBindAccessTokenValidatorResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
