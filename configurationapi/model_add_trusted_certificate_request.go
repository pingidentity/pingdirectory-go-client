/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// AddTrustedCertificateRequest struct for AddTrustedCertificateRequest
type AddTrustedCertificateRequest struct {
	// Name of the new Trusted Certificate
	CertificateName string                            `json:"certificateName"`
	Schemas         []EnumtrustedCertificateSchemaUrn `json:"schemas,omitempty"`
	// The PEM-encoded X.509v3 certificate.
	Certificate string `json:"certificate"`
}

// NewAddTrustedCertificateRequest instantiates a new AddTrustedCertificateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddTrustedCertificateRequest(certificateName string, certificate string) *AddTrustedCertificateRequest {
	this := AddTrustedCertificateRequest{}
	this.CertificateName = certificateName
	this.Certificate = certificate
	return &this
}

// NewAddTrustedCertificateRequestWithDefaults instantiates a new AddTrustedCertificateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddTrustedCertificateRequestWithDefaults() *AddTrustedCertificateRequest {
	this := AddTrustedCertificateRequest{}
	return &this
}

// GetCertificateName returns the CertificateName field value
func (o *AddTrustedCertificateRequest) GetCertificateName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CertificateName
}

// GetCertificateNameOk returns a tuple with the CertificateName field value
// and a boolean to check if the value has been set.
func (o *AddTrustedCertificateRequest) GetCertificateNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CertificateName, true
}

// SetCertificateName sets field value
func (o *AddTrustedCertificateRequest) SetCertificateName(v string) {
	o.CertificateName = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddTrustedCertificateRequest) GetSchemas() []EnumtrustedCertificateSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumtrustedCertificateSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddTrustedCertificateRequest) GetSchemasOk() ([]EnumtrustedCertificateSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddTrustedCertificateRequest) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumtrustedCertificateSchemaUrn and assigns it to the Schemas field.
func (o *AddTrustedCertificateRequest) SetSchemas(v []EnumtrustedCertificateSchemaUrn) {
	o.Schemas = v
}

// GetCertificate returns the Certificate field value
func (o *AddTrustedCertificateRequest) GetCertificate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Certificate
}

// GetCertificateOk returns a tuple with the Certificate field value
// and a boolean to check if the value has been set.
func (o *AddTrustedCertificateRequest) GetCertificateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Certificate, true
}

// SetCertificate sets field value
func (o *AddTrustedCertificateRequest) SetCertificate(v string) {
	o.Certificate = v
}

func (o AddTrustedCertificateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["certificateName"] = o.CertificateName
	}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["certificate"] = o.Certificate
	}
	return json.Marshal(toSerialize)
}

type NullableAddTrustedCertificateRequest struct {
	value *AddTrustedCertificateRequest
	isSet bool
}

func (v NullableAddTrustedCertificateRequest) Get() *AddTrustedCertificateRequest {
	return v.value
}

func (v *NullableAddTrustedCertificateRequest) Set(val *AddTrustedCertificateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddTrustedCertificateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddTrustedCertificateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddTrustedCertificateRequest(val *AddTrustedCertificateRequest) *NullableAddTrustedCertificateRequest {
	return &NullableAddTrustedCertificateRequest{value: val, isSet: true}
}

func (v NullableAddTrustedCertificateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddTrustedCertificateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
