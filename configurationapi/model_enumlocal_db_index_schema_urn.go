/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumlocalDbIndexSchemaUrn the model 'EnumlocalDbIndexSchemaUrn'
type EnumlocalDbIndexSchemaUrn string

// List of Enumlocal-db-indexSchemaUrn
const (
	ENUMLOCALDBINDEXSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0LOCAL_DB_INDEX EnumlocalDbIndexSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:local-db-index"
)

// All allowed values of EnumlocalDbIndexSchemaUrn enum
var AllowedEnumlocalDbIndexSchemaUrnEnumValues = []EnumlocalDbIndexSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:local-db-index",
}

func (v *EnumlocalDbIndexSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumlocalDbIndexSchemaUrn(value)
	for _, existing := range AllowedEnumlocalDbIndexSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumlocalDbIndexSchemaUrn", value)
}

// NewEnumlocalDbIndexSchemaUrnFromValue returns a pointer to a valid EnumlocalDbIndexSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumlocalDbIndexSchemaUrnFromValue(v string) (*EnumlocalDbIndexSchemaUrn, error) {
	ev := EnumlocalDbIndexSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumlocalDbIndexSchemaUrn: valid values are %v", v, AllowedEnumlocalDbIndexSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumlocalDbIndexSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumlocalDbIndexSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumlocal-db-indexSchemaUrn value
func (v EnumlocalDbIndexSchemaUrn) Ptr() *EnumlocalDbIndexSchemaUrn {
	return &v
}

type NullableEnumlocalDbIndexSchemaUrn struct {
	value *EnumlocalDbIndexSchemaUrn
	isSet bool
}

func (v NullableEnumlocalDbIndexSchemaUrn) Get() *EnumlocalDbIndexSchemaUrn {
	return v.value
}

func (v *NullableEnumlocalDbIndexSchemaUrn) Set(val *EnumlocalDbIndexSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumlocalDbIndexSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumlocalDbIndexSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumlocalDbIndexSchemaUrn(val *EnumlocalDbIndexSchemaUrn) *NullableEnumlocalDbIndexSchemaUrn {
	return &NullableEnumlocalDbIndexSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumlocalDbIndexSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumlocalDbIndexSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
