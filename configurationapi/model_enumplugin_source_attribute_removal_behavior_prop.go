/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginSourceAttributeRemovalBehaviorProp The behavior to exhibit for modify and modify DN operations that update an entry to remove source attributes in such a way that this plugin would no longer generate any composed values for that entry.
type EnumpluginSourceAttributeRemovalBehaviorProp string

// List of Enumplugin-sourceAttributeRemovalBehaviorProp
const (
	ENUMPLUGINSOURCEATTRIBUTEREMOVALBEHAVIORPROP_PRESERVE_NON_COMPOSED_VALUES                            EnumpluginSourceAttributeRemovalBehaviorProp = "preserve-non-composed-values"
	ENUMPLUGINSOURCEATTRIBUTEREMOVALBEHAVIORPROP_PRESERVE_ALL_VALUES                                     EnumpluginSourceAttributeRemovalBehaviorProp = "preserve-all-values"
	ENUMPLUGINSOURCEATTRIBUTEREMOVALBEHAVIORPROP_REMOVE_ALL_VALUES_BUT_PRESERVE_ALL_IF_REQUIRED          EnumpluginSourceAttributeRemovalBehaviorProp = "remove-all-values-but-preserve-all-if-required"
	ENUMPLUGINSOURCEATTRIBUTEREMOVALBEHAVIORPROP_REMOVE_ALL_VALUES_BUT_PRESERVE_NON_COMPOSED_IF_REQUIRED EnumpluginSourceAttributeRemovalBehaviorProp = "remove-all-values-but-preserve-non-composed-if-required"
)

// All allowed values of EnumpluginSourceAttributeRemovalBehaviorProp enum
var AllowedEnumpluginSourceAttributeRemovalBehaviorPropEnumValues = []EnumpluginSourceAttributeRemovalBehaviorProp{
	"preserve-non-composed-values",
	"preserve-all-values",
	"remove-all-values-but-preserve-all-if-required",
	"remove-all-values-but-preserve-non-composed-if-required",
}

func (v *EnumpluginSourceAttributeRemovalBehaviorProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginSourceAttributeRemovalBehaviorProp(value)
	for _, existing := range AllowedEnumpluginSourceAttributeRemovalBehaviorPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginSourceAttributeRemovalBehaviorProp", value)
}

// NewEnumpluginSourceAttributeRemovalBehaviorPropFromValue returns a pointer to a valid EnumpluginSourceAttributeRemovalBehaviorProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginSourceAttributeRemovalBehaviorPropFromValue(v string) (*EnumpluginSourceAttributeRemovalBehaviorProp, error) {
	ev := EnumpluginSourceAttributeRemovalBehaviorProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginSourceAttributeRemovalBehaviorProp: valid values are %v", v, AllowedEnumpluginSourceAttributeRemovalBehaviorPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginSourceAttributeRemovalBehaviorProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginSourceAttributeRemovalBehaviorPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-sourceAttributeRemovalBehaviorProp value
func (v EnumpluginSourceAttributeRemovalBehaviorProp) Ptr() *EnumpluginSourceAttributeRemovalBehaviorProp {
	return &v
}

type NullableEnumpluginSourceAttributeRemovalBehaviorProp struct {
	value *EnumpluginSourceAttributeRemovalBehaviorProp
	isSet bool
}

func (v NullableEnumpluginSourceAttributeRemovalBehaviorProp) Get() *EnumpluginSourceAttributeRemovalBehaviorProp {
	return v.value
}

func (v *NullableEnumpluginSourceAttributeRemovalBehaviorProp) Set(val *EnumpluginSourceAttributeRemovalBehaviorProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginSourceAttributeRemovalBehaviorProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginSourceAttributeRemovalBehaviorProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginSourceAttributeRemovalBehaviorProp(val *EnumpluginSourceAttributeRemovalBehaviorProp) *NullableEnumpluginSourceAttributeRemovalBehaviorProp {
	return &NullableEnumpluginSourceAttributeRemovalBehaviorProp{value: val, isSet: true}
}

func (v NullableEnumpluginSourceAttributeRemovalBehaviorProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginSourceAttributeRemovalBehaviorProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
