/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the GenericWebApplicationExtensionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenericWebApplicationExtensionResponse{}

// GenericWebApplicationExtensionResponse struct for GenericWebApplicationExtensionResponse
type GenericWebApplicationExtensionResponse struct {
	// Name of the Web Application Extension
	Id      string                                        `json:"id"`
	Schemas []EnumgenericWebApplicationExtensionSchemaUrn `json:"schemas"`
	// A description for this Web Application Extension
	Description *string `json:"description,omitempty"`
	// Specifies the base context path that should be used by HTTP clients to reference content. The value must start with a forward slash and at least one additional character and must represent a valid HTTP context path.
	BaseContextPath string `json:"baseContextPath"`
	// Specifies the path to a standard web application archive (WAR) file.
	WarFile *string `json:"warFile,omitempty"`
	// Specifies the path to the directory on the local filesystem containing the files to be served by this Web Application Extension. The path must exist, and it must be a directory.
	DocumentRootDirectory *string `json:"documentRootDirectory,omitempty"`
	// Specifies the path to the deployment descriptor file when used with document-root-directory.
	DeploymentDescriptorFile *string `json:"deploymentDescriptorFile,omitempty"`
	// Specifies the path to the directory that may be used to store temporary files such as extracted WAR files and compiled JSP files.
	TemporaryDirectory *string `json:"temporaryDirectory,omitempty"`
	// Specifies an initialization parameter to pass into the web application during startup.
	InitParameter                                 []string                                           `json:"initParameter,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewGenericWebApplicationExtensionResponse instantiates a new GenericWebApplicationExtensionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenericWebApplicationExtensionResponse(id string, schemas []EnumgenericWebApplicationExtensionSchemaUrn, baseContextPath string) *GenericWebApplicationExtensionResponse {
	this := GenericWebApplicationExtensionResponse{}
	this.Id = id
	this.Schemas = schemas
	this.BaseContextPath = baseContextPath
	return &this
}

// NewGenericWebApplicationExtensionResponseWithDefaults instantiates a new GenericWebApplicationExtensionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenericWebApplicationExtensionResponseWithDefaults() *GenericWebApplicationExtensionResponse {
	this := GenericWebApplicationExtensionResponse{}
	return &this
}

// GetId returns the Id field value
func (o *GenericWebApplicationExtensionResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GenericWebApplicationExtensionResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *GenericWebApplicationExtensionResponse) GetSchemas() []EnumgenericWebApplicationExtensionSchemaUrn {
	if o == nil {
		var ret []EnumgenericWebApplicationExtensionSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetSchemasOk() ([]EnumgenericWebApplicationExtensionSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *GenericWebApplicationExtensionResponse) SetSchemas(v []EnumgenericWebApplicationExtensionSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *GenericWebApplicationExtensionResponse) SetDescription(v string) {
	o.Description = &v
}

// GetBaseContextPath returns the BaseContextPath field value
func (o *GenericWebApplicationExtensionResponse) GetBaseContextPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BaseContextPath
}

// GetBaseContextPathOk returns a tuple with the BaseContextPath field value
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetBaseContextPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BaseContextPath, true
}

// SetBaseContextPath sets field value
func (o *GenericWebApplicationExtensionResponse) SetBaseContextPath(v string) {
	o.BaseContextPath = v
}

// GetWarFile returns the WarFile field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetWarFile() string {
	if o == nil || IsNil(o.WarFile) {
		var ret string
		return ret
	}
	return *o.WarFile
}

// GetWarFileOk returns a tuple with the WarFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetWarFileOk() (*string, bool) {
	if o == nil || IsNil(o.WarFile) {
		return nil, false
	}
	return o.WarFile, true
}

// HasWarFile returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasWarFile() bool {
	if o != nil && !IsNil(o.WarFile) {
		return true
	}

	return false
}

// SetWarFile gets a reference to the given string and assigns it to the WarFile field.
func (o *GenericWebApplicationExtensionResponse) SetWarFile(v string) {
	o.WarFile = &v
}

// GetDocumentRootDirectory returns the DocumentRootDirectory field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetDocumentRootDirectory() string {
	if o == nil || IsNil(o.DocumentRootDirectory) {
		var ret string
		return ret
	}
	return *o.DocumentRootDirectory
}

// GetDocumentRootDirectoryOk returns a tuple with the DocumentRootDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetDocumentRootDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.DocumentRootDirectory) {
		return nil, false
	}
	return o.DocumentRootDirectory, true
}

// HasDocumentRootDirectory returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasDocumentRootDirectory() bool {
	if o != nil && !IsNil(o.DocumentRootDirectory) {
		return true
	}

	return false
}

// SetDocumentRootDirectory gets a reference to the given string and assigns it to the DocumentRootDirectory field.
func (o *GenericWebApplicationExtensionResponse) SetDocumentRootDirectory(v string) {
	o.DocumentRootDirectory = &v
}

// GetDeploymentDescriptorFile returns the DeploymentDescriptorFile field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetDeploymentDescriptorFile() string {
	if o == nil || IsNil(o.DeploymentDescriptorFile) {
		var ret string
		return ret
	}
	return *o.DeploymentDescriptorFile
}

// GetDeploymentDescriptorFileOk returns a tuple with the DeploymentDescriptorFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetDeploymentDescriptorFileOk() (*string, bool) {
	if o == nil || IsNil(o.DeploymentDescriptorFile) {
		return nil, false
	}
	return o.DeploymentDescriptorFile, true
}

// HasDeploymentDescriptorFile returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasDeploymentDescriptorFile() bool {
	if o != nil && !IsNil(o.DeploymentDescriptorFile) {
		return true
	}

	return false
}

// SetDeploymentDescriptorFile gets a reference to the given string and assigns it to the DeploymentDescriptorFile field.
func (o *GenericWebApplicationExtensionResponse) SetDeploymentDescriptorFile(v string) {
	o.DeploymentDescriptorFile = &v
}

// GetTemporaryDirectory returns the TemporaryDirectory field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetTemporaryDirectory() string {
	if o == nil || IsNil(o.TemporaryDirectory) {
		var ret string
		return ret
	}
	return *o.TemporaryDirectory
}

// GetTemporaryDirectoryOk returns a tuple with the TemporaryDirectory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetTemporaryDirectoryOk() (*string, bool) {
	if o == nil || IsNil(o.TemporaryDirectory) {
		return nil, false
	}
	return o.TemporaryDirectory, true
}

// HasTemporaryDirectory returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasTemporaryDirectory() bool {
	if o != nil && !IsNil(o.TemporaryDirectory) {
		return true
	}

	return false
}

// SetTemporaryDirectory gets a reference to the given string and assigns it to the TemporaryDirectory field.
func (o *GenericWebApplicationExtensionResponse) SetTemporaryDirectory(v string) {
	o.TemporaryDirectory = &v
}

// GetInitParameter returns the InitParameter field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetInitParameter() []string {
	if o == nil || IsNil(o.InitParameter) {
		var ret []string
		return ret
	}
	return o.InitParameter
}

// GetInitParameterOk returns a tuple with the InitParameter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetInitParameterOk() ([]string, bool) {
	if o == nil || IsNil(o.InitParameter) {
		return nil, false
	}
	return o.InitParameter, true
}

// HasInitParameter returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasInitParameter() bool {
	if o != nil && !IsNil(o.InitParameter) {
		return true
	}

	return false
}

// SetInitParameter gets a reference to the given []string and assigns it to the InitParameter field.
func (o *GenericWebApplicationExtensionResponse) SetInitParameter(v []string) {
	o.InitParameter = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *GenericWebApplicationExtensionResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *GenericWebApplicationExtensionResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenericWebApplicationExtensionResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *GenericWebApplicationExtensionResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *GenericWebApplicationExtensionResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o GenericWebApplicationExtensionResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenericWebApplicationExtensionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["baseContextPath"] = o.BaseContextPath
	if !IsNil(o.WarFile) {
		toSerialize["warFile"] = o.WarFile
	}
	if !IsNil(o.DocumentRootDirectory) {
		toSerialize["documentRootDirectory"] = o.DocumentRootDirectory
	}
	if !IsNil(o.DeploymentDescriptorFile) {
		toSerialize["deploymentDescriptorFile"] = o.DeploymentDescriptorFile
	}
	if !IsNil(o.TemporaryDirectory) {
		toSerialize["temporaryDirectory"] = o.TemporaryDirectory
	}
	if !IsNil(o.InitParameter) {
		toSerialize["initParameter"] = o.InitParameter
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableGenericWebApplicationExtensionResponse struct {
	value *GenericWebApplicationExtensionResponse
	isSet bool
}

func (v NullableGenericWebApplicationExtensionResponse) Get() *GenericWebApplicationExtensionResponse {
	return v.value
}

func (v *NullableGenericWebApplicationExtensionResponse) Set(val *GenericWebApplicationExtensionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGenericWebApplicationExtensionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGenericWebApplicationExtensionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenericWebApplicationExtensionResponse(val *GenericWebApplicationExtensionResponse) *NullableGenericWebApplicationExtensionResponse {
	return &NullableGenericWebApplicationExtensionResponse{value: val, isSet: true}
}

func (v NullableGenericWebApplicationExtensionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenericWebApplicationExtensionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
