/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ReplicationServerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationServerResponse{}

// ReplicationServerResponse struct for ReplicationServerResponse
type ReplicationServerResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumreplicationServerSchemaUrn                   `json:"schemas,omitempty"`
	// Specifies a unique identifier for the Replication Server.
	ReplicationServerID int64 `json:"replicationServerID"`
	// The path where the Replication Server stores all persistent information.
	ReplicationDBDirectory string `json:"replicationDBDirectory"`
	// Specifies the database and environment properties for the Berkeley DB Java Edition database for the replication changelog.
	JeProperty []string `json:"jeProperty,omitempty"`
	// Changes are guaranteed to be maintained in the changelog database for at least this duration. Setting target-database-size can allow additional changes to be maintained up to the configured size on disk.
	ReplicationPurgeDelay *string `json:"replicationPurgeDelay,omitempty"`
	// The replication changelog database is allowed to grow up to this size even if changes are older than the configured replication-purge-delay.
	TargetDatabaseSize *string `json:"targetDatabaseSize,omitempty"`
	// The port on which this Replication Server waits for connections from other Replication Servers or Directory Server instances.
	ReplicationPort int64 `json:"replicationPort"`
	// Indicates whether the Replication Server should listen on all addresses for this host. If set to FALSE, then the Replication Server will listen only to the address resolved from the hostname provided.
	ListenOnAllAddresses *bool                                         `json:"listenOnAllAddresses,omitempty"`
	CompressionCriteria  *EnumreplicationServerCompressionCriteriaProp `json:"compressionCriteria,omitempty"`
	// Specifies the heartbeat interval that the Directory Server will use when communicating with Replication Servers.
	HeartbeatInterval *string `json:"heartbeatInterval,omitempty"`
	// Specifies the duration that topology monitor data will be cached before it is requested again from a remote server.
	RemoteMonitorUpdateInterval *string `json:"remoteMonitorUpdateInterval,omitempty"`
	// Specifies the base DN of domains that are only replicated between server instances that belong to the same replication set.
	RestrictedDomain []string `json:"restrictedDomain,omitempty"`
	// Specifies the gateway priority of the Replication Server in the current location.
	GatewayPriority int64 `json:"gatewayPriority"`
	// Specifies the missing changes alert threshold as a percentage of the total pending changes. For instance, a value of 80 indicates that the replica is 80% of the way to losing changes.
	MissingChangesAlertThresholdPercent *int64                                         `json:"missingChangesAlertThresholdPercent,omitempty"`
	MissingChangesPolicy                *EnumreplicationServerMissingChangesPolicyProp `json:"missingChangesPolicy,omitempty"`
	// Indicates monitor messages should include information about remote servers.
	IncludeAllRemoteServersStateInMonitorMessage *bool `json:"includeAllRemoteServersStateInMonitorMessage,omitempty"`
}

// NewReplicationServerResponse instantiates a new ReplicationServerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationServerResponse(replicationServerID int64, replicationDBDirectory string, replicationPort int64, gatewayPriority int64) *ReplicationServerResponse {
	this := ReplicationServerResponse{}
	this.ReplicationServerID = replicationServerID
	this.ReplicationDBDirectory = replicationDBDirectory
	this.ReplicationPort = replicationPort
	this.GatewayPriority = gatewayPriority
	return &this
}

// NewReplicationServerResponseWithDefaults instantiates a new ReplicationServerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationServerResponseWithDefaults() *ReplicationServerResponse {
	this := ReplicationServerResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ReplicationServerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *ReplicationServerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetSchemas() []EnumreplicationServerSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumreplicationServerSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetSchemasOk() ([]EnumreplicationServerSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumreplicationServerSchemaUrn and assigns it to the Schemas field.
func (o *ReplicationServerResponse) SetSchemas(v []EnumreplicationServerSchemaUrn) {
	o.Schemas = v
}

// GetReplicationServerID returns the ReplicationServerID field value
func (o *ReplicationServerResponse) GetReplicationServerID() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReplicationServerID
}

// GetReplicationServerIDOk returns a tuple with the ReplicationServerID field value
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetReplicationServerIDOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationServerID, true
}

// SetReplicationServerID sets field value
func (o *ReplicationServerResponse) SetReplicationServerID(v int64) {
	o.ReplicationServerID = v
}

// GetReplicationDBDirectory returns the ReplicationDBDirectory field value
func (o *ReplicationServerResponse) GetReplicationDBDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReplicationDBDirectory
}

// GetReplicationDBDirectoryOk returns a tuple with the ReplicationDBDirectory field value
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetReplicationDBDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationDBDirectory, true
}

// SetReplicationDBDirectory sets field value
func (o *ReplicationServerResponse) SetReplicationDBDirectory(v string) {
	o.ReplicationDBDirectory = v
}

// GetJeProperty returns the JeProperty field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetJeProperty() []string {
	if o == nil || IsNil(o.JeProperty) {
		var ret []string
		return ret
	}
	return o.JeProperty
}

// GetJePropertyOk returns a tuple with the JeProperty field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetJePropertyOk() ([]string, bool) {
	if o == nil || IsNil(o.JeProperty) {
		return nil, false
	}
	return o.JeProperty, true
}

// HasJeProperty returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasJeProperty() bool {
	if o != nil && !IsNil(o.JeProperty) {
		return true
	}

	return false
}

// SetJeProperty gets a reference to the given []string and assigns it to the JeProperty field.
func (o *ReplicationServerResponse) SetJeProperty(v []string) {
	o.JeProperty = v
}

// GetReplicationPurgeDelay returns the ReplicationPurgeDelay field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetReplicationPurgeDelay() string {
	if o == nil || IsNil(o.ReplicationPurgeDelay) {
		var ret string
		return ret
	}
	return *o.ReplicationPurgeDelay
}

// GetReplicationPurgeDelayOk returns a tuple with the ReplicationPurgeDelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetReplicationPurgeDelayOk() (*string, bool) {
	if o == nil || IsNil(o.ReplicationPurgeDelay) {
		return nil, false
	}
	return o.ReplicationPurgeDelay, true
}

// HasReplicationPurgeDelay returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasReplicationPurgeDelay() bool {
	if o != nil && !IsNil(o.ReplicationPurgeDelay) {
		return true
	}

	return false
}

// SetReplicationPurgeDelay gets a reference to the given string and assigns it to the ReplicationPurgeDelay field.
func (o *ReplicationServerResponse) SetReplicationPurgeDelay(v string) {
	o.ReplicationPurgeDelay = &v
}

// GetTargetDatabaseSize returns the TargetDatabaseSize field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetTargetDatabaseSize() string {
	if o == nil || IsNil(o.TargetDatabaseSize) {
		var ret string
		return ret
	}
	return *o.TargetDatabaseSize
}

// GetTargetDatabaseSizeOk returns a tuple with the TargetDatabaseSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetTargetDatabaseSizeOk() (*string, bool) {
	if o == nil || IsNil(o.TargetDatabaseSize) {
		return nil, false
	}
	return o.TargetDatabaseSize, true
}

// HasTargetDatabaseSize returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasTargetDatabaseSize() bool {
	if o != nil && !IsNil(o.TargetDatabaseSize) {
		return true
	}

	return false
}

// SetTargetDatabaseSize gets a reference to the given string and assigns it to the TargetDatabaseSize field.
func (o *ReplicationServerResponse) SetTargetDatabaseSize(v string) {
	o.TargetDatabaseSize = &v
}

// GetReplicationPort returns the ReplicationPort field value
func (o *ReplicationServerResponse) GetReplicationPort() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReplicationPort
}

// GetReplicationPortOk returns a tuple with the ReplicationPort field value
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetReplicationPortOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationPort, true
}

// SetReplicationPort sets field value
func (o *ReplicationServerResponse) SetReplicationPort(v int64) {
	o.ReplicationPort = v
}

// GetListenOnAllAddresses returns the ListenOnAllAddresses field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetListenOnAllAddresses() bool {
	if o == nil || IsNil(o.ListenOnAllAddresses) {
		var ret bool
		return ret
	}
	return *o.ListenOnAllAddresses
}

// GetListenOnAllAddressesOk returns a tuple with the ListenOnAllAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetListenOnAllAddressesOk() (*bool, bool) {
	if o == nil || IsNil(o.ListenOnAllAddresses) {
		return nil, false
	}
	return o.ListenOnAllAddresses, true
}

// HasListenOnAllAddresses returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasListenOnAllAddresses() bool {
	if o != nil && !IsNil(o.ListenOnAllAddresses) {
		return true
	}

	return false
}

// SetListenOnAllAddresses gets a reference to the given bool and assigns it to the ListenOnAllAddresses field.
func (o *ReplicationServerResponse) SetListenOnAllAddresses(v bool) {
	o.ListenOnAllAddresses = &v
}

// GetCompressionCriteria returns the CompressionCriteria field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetCompressionCriteria() EnumreplicationServerCompressionCriteriaProp {
	if o == nil || IsNil(o.CompressionCriteria) {
		var ret EnumreplicationServerCompressionCriteriaProp
		return ret
	}
	return *o.CompressionCriteria
}

// GetCompressionCriteriaOk returns a tuple with the CompressionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetCompressionCriteriaOk() (*EnumreplicationServerCompressionCriteriaProp, bool) {
	if o == nil || IsNil(o.CompressionCriteria) {
		return nil, false
	}
	return o.CompressionCriteria, true
}

// HasCompressionCriteria returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasCompressionCriteria() bool {
	if o != nil && !IsNil(o.CompressionCriteria) {
		return true
	}

	return false
}

// SetCompressionCriteria gets a reference to the given EnumreplicationServerCompressionCriteriaProp and assigns it to the CompressionCriteria field.
func (o *ReplicationServerResponse) SetCompressionCriteria(v EnumreplicationServerCompressionCriteriaProp) {
	o.CompressionCriteria = &v
}

// GetHeartbeatInterval returns the HeartbeatInterval field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetHeartbeatInterval() string {
	if o == nil || IsNil(o.HeartbeatInterval) {
		var ret string
		return ret
	}
	return *o.HeartbeatInterval
}

// GetHeartbeatIntervalOk returns a tuple with the HeartbeatInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetHeartbeatIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.HeartbeatInterval) {
		return nil, false
	}
	return o.HeartbeatInterval, true
}

// HasHeartbeatInterval returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasHeartbeatInterval() bool {
	if o != nil && !IsNil(o.HeartbeatInterval) {
		return true
	}

	return false
}

// SetHeartbeatInterval gets a reference to the given string and assigns it to the HeartbeatInterval field.
func (o *ReplicationServerResponse) SetHeartbeatInterval(v string) {
	o.HeartbeatInterval = &v
}

// GetRemoteMonitorUpdateInterval returns the RemoteMonitorUpdateInterval field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetRemoteMonitorUpdateInterval() string {
	if o == nil || IsNil(o.RemoteMonitorUpdateInterval) {
		var ret string
		return ret
	}
	return *o.RemoteMonitorUpdateInterval
}

// GetRemoteMonitorUpdateIntervalOk returns a tuple with the RemoteMonitorUpdateInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetRemoteMonitorUpdateIntervalOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteMonitorUpdateInterval) {
		return nil, false
	}
	return o.RemoteMonitorUpdateInterval, true
}

// HasRemoteMonitorUpdateInterval returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasRemoteMonitorUpdateInterval() bool {
	if o != nil && !IsNil(o.RemoteMonitorUpdateInterval) {
		return true
	}

	return false
}

// SetRemoteMonitorUpdateInterval gets a reference to the given string and assigns it to the RemoteMonitorUpdateInterval field.
func (o *ReplicationServerResponse) SetRemoteMonitorUpdateInterval(v string) {
	o.RemoteMonitorUpdateInterval = &v
}

// GetRestrictedDomain returns the RestrictedDomain field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetRestrictedDomain() []string {
	if o == nil || IsNil(o.RestrictedDomain) {
		var ret []string
		return ret
	}
	return o.RestrictedDomain
}

// GetRestrictedDomainOk returns a tuple with the RestrictedDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetRestrictedDomainOk() ([]string, bool) {
	if o == nil || IsNil(o.RestrictedDomain) {
		return nil, false
	}
	return o.RestrictedDomain, true
}

// HasRestrictedDomain returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasRestrictedDomain() bool {
	if o != nil && !IsNil(o.RestrictedDomain) {
		return true
	}

	return false
}

// SetRestrictedDomain gets a reference to the given []string and assigns it to the RestrictedDomain field.
func (o *ReplicationServerResponse) SetRestrictedDomain(v []string) {
	o.RestrictedDomain = v
}

// GetGatewayPriority returns the GatewayPriority field value
func (o *ReplicationServerResponse) GetGatewayPriority() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.GatewayPriority
}

// GetGatewayPriorityOk returns a tuple with the GatewayPriority field value
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetGatewayPriorityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GatewayPriority, true
}

// SetGatewayPriority sets field value
func (o *ReplicationServerResponse) SetGatewayPriority(v int64) {
	o.GatewayPriority = v
}

// GetMissingChangesAlertThresholdPercent returns the MissingChangesAlertThresholdPercent field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetMissingChangesAlertThresholdPercent() int64 {
	if o == nil || IsNil(o.MissingChangesAlertThresholdPercent) {
		var ret int64
		return ret
	}
	return *o.MissingChangesAlertThresholdPercent
}

// GetMissingChangesAlertThresholdPercentOk returns a tuple with the MissingChangesAlertThresholdPercent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetMissingChangesAlertThresholdPercentOk() (*int64, bool) {
	if o == nil || IsNil(o.MissingChangesAlertThresholdPercent) {
		return nil, false
	}
	return o.MissingChangesAlertThresholdPercent, true
}

// HasMissingChangesAlertThresholdPercent returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasMissingChangesAlertThresholdPercent() bool {
	if o != nil && !IsNil(o.MissingChangesAlertThresholdPercent) {
		return true
	}

	return false
}

// SetMissingChangesAlertThresholdPercent gets a reference to the given int64 and assigns it to the MissingChangesAlertThresholdPercent field.
func (o *ReplicationServerResponse) SetMissingChangesAlertThresholdPercent(v int64) {
	o.MissingChangesAlertThresholdPercent = &v
}

// GetMissingChangesPolicy returns the MissingChangesPolicy field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetMissingChangesPolicy() EnumreplicationServerMissingChangesPolicyProp {
	if o == nil || IsNil(o.MissingChangesPolicy) {
		var ret EnumreplicationServerMissingChangesPolicyProp
		return ret
	}
	return *o.MissingChangesPolicy
}

// GetMissingChangesPolicyOk returns a tuple with the MissingChangesPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetMissingChangesPolicyOk() (*EnumreplicationServerMissingChangesPolicyProp, bool) {
	if o == nil || IsNil(o.MissingChangesPolicy) {
		return nil, false
	}
	return o.MissingChangesPolicy, true
}

// HasMissingChangesPolicy returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasMissingChangesPolicy() bool {
	if o != nil && !IsNil(o.MissingChangesPolicy) {
		return true
	}

	return false
}

// SetMissingChangesPolicy gets a reference to the given EnumreplicationServerMissingChangesPolicyProp and assigns it to the MissingChangesPolicy field.
func (o *ReplicationServerResponse) SetMissingChangesPolicy(v EnumreplicationServerMissingChangesPolicyProp) {
	o.MissingChangesPolicy = &v
}

// GetIncludeAllRemoteServersStateInMonitorMessage returns the IncludeAllRemoteServersStateInMonitorMessage field value if set, zero value otherwise.
func (o *ReplicationServerResponse) GetIncludeAllRemoteServersStateInMonitorMessage() bool {
	if o == nil || IsNil(o.IncludeAllRemoteServersStateInMonitorMessage) {
		var ret bool
		return ret
	}
	return *o.IncludeAllRemoteServersStateInMonitorMessage
}

// GetIncludeAllRemoteServersStateInMonitorMessageOk returns a tuple with the IncludeAllRemoteServersStateInMonitorMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationServerResponse) GetIncludeAllRemoteServersStateInMonitorMessageOk() (*bool, bool) {
	if o == nil || IsNil(o.IncludeAllRemoteServersStateInMonitorMessage) {
		return nil, false
	}
	return o.IncludeAllRemoteServersStateInMonitorMessage, true
}

// HasIncludeAllRemoteServersStateInMonitorMessage returns a boolean if a field has been set.
func (o *ReplicationServerResponse) HasIncludeAllRemoteServersStateInMonitorMessage() bool {
	if o != nil && !IsNil(o.IncludeAllRemoteServersStateInMonitorMessage) {
		return true
	}

	return false
}

// SetIncludeAllRemoteServersStateInMonitorMessage gets a reference to the given bool and assigns it to the IncludeAllRemoteServersStateInMonitorMessage field.
func (o *ReplicationServerResponse) SetIncludeAllRemoteServersStateInMonitorMessage(v bool) {
	o.IncludeAllRemoteServersStateInMonitorMessage = &v
}

func (o ReplicationServerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationServerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	toSerialize["replicationServerID"] = o.ReplicationServerID
	toSerialize["replicationDBDirectory"] = o.ReplicationDBDirectory
	if !IsNil(o.JeProperty) {
		toSerialize["jeProperty"] = o.JeProperty
	}
	if !IsNil(o.ReplicationPurgeDelay) {
		toSerialize["replicationPurgeDelay"] = o.ReplicationPurgeDelay
	}
	if !IsNil(o.TargetDatabaseSize) {
		toSerialize["targetDatabaseSize"] = o.TargetDatabaseSize
	}
	toSerialize["replicationPort"] = o.ReplicationPort
	if !IsNil(o.ListenOnAllAddresses) {
		toSerialize["listenOnAllAddresses"] = o.ListenOnAllAddresses
	}
	if !IsNil(o.CompressionCriteria) {
		toSerialize["compressionCriteria"] = o.CompressionCriteria
	}
	if !IsNil(o.HeartbeatInterval) {
		toSerialize["heartbeatInterval"] = o.HeartbeatInterval
	}
	if !IsNil(o.RemoteMonitorUpdateInterval) {
		toSerialize["remoteMonitorUpdateInterval"] = o.RemoteMonitorUpdateInterval
	}
	if !IsNil(o.RestrictedDomain) {
		toSerialize["restrictedDomain"] = o.RestrictedDomain
	}
	toSerialize["gatewayPriority"] = o.GatewayPriority
	if !IsNil(o.MissingChangesAlertThresholdPercent) {
		toSerialize["missingChangesAlertThresholdPercent"] = o.MissingChangesAlertThresholdPercent
	}
	if !IsNil(o.MissingChangesPolicy) {
		toSerialize["missingChangesPolicy"] = o.MissingChangesPolicy
	}
	if !IsNil(o.IncludeAllRemoteServersStateInMonitorMessage) {
		toSerialize["includeAllRemoteServersStateInMonitorMessage"] = o.IncludeAllRemoteServersStateInMonitorMessage
	}
	return toSerialize, nil
}

type NullableReplicationServerResponse struct {
	value *ReplicationServerResponse
	isSet bool
}

func (v NullableReplicationServerResponse) Get() *ReplicationServerResponse {
	return v.value
}

func (v *NullableReplicationServerResponse) Set(val *ReplicationServerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationServerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationServerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationServerResponse(val *ReplicationServerResponse) *NullableReplicationServerResponse {
	return &NullableReplicationServerResponse{value: val, isSet: true}
}

func (v NullableReplicationServerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationServerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
