/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the SubtreeAccessibilityExtendedOperationHandlerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubtreeAccessibilityExtendedOperationHandlerResponse{}

// SubtreeAccessibilityExtendedOperationHandlerResponse struct for SubtreeAccessibilityExtendedOperationHandlerResponse
type SubtreeAccessibilityExtendedOperationHandlerResponse struct {
	Schemas []EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn `json:"schemas"`
	// Name of the Extended Operation Handler
	Id string `json:"id"`
	// The integer value for the result code that the server should return to clients that attempt to perform an unauthorized bind operation in a non-accessible subtree.
	NonAccessibleSubtreeUnauthorizedBindResultCode *int64 `json:"nonAccessibleSubtreeUnauthorizedBindResultCode,omitempty"`
	// The integer value for the result code that the server should return to clients that attempt to perform an unauthorized read (e.g., search or compare) operation in a non-accessible subtree.
	NonAccessibleSubtreeUnauthorizedReadResultCode *int64 `json:"nonAccessibleSubtreeUnauthorizedReadResultCode,omitempty"`
	// The integer value for the result code that the server should return to clients that attempt to perform an unauthorized write (e.g., add, delete, modify or modify DN) operation in a non-accessible subtree.
	NonAccessibleSubtreeUnauthorizedWriteResultCode *int64 `json:"nonAccessibleSubtreeUnauthorizedWriteResultCode,omitempty"`
	// A description for this Extended Operation Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the Extended Operation Handler is enabled (that is, whether the types of extended operations are allowed in the server).
	Enabled                                       bool                                               `json:"enabled"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
}

// NewSubtreeAccessibilityExtendedOperationHandlerResponse instantiates a new SubtreeAccessibilityExtendedOperationHandlerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubtreeAccessibilityExtendedOperationHandlerResponse(schemas []EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn, id string, enabled bool) *SubtreeAccessibilityExtendedOperationHandlerResponse {
	this := SubtreeAccessibilityExtendedOperationHandlerResponse{}
	this.Schemas = schemas
	this.Id = id
	this.Enabled = enabled
	return &this
}

// NewSubtreeAccessibilityExtendedOperationHandlerResponseWithDefaults instantiates a new SubtreeAccessibilityExtendedOperationHandlerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubtreeAccessibilityExtendedOperationHandlerResponseWithDefaults() *SubtreeAccessibilityExtendedOperationHandlerResponse {
	this := SubtreeAccessibilityExtendedOperationHandlerResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetSchemas() []EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn {
	if o == nil {
		var ret []EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetSchemasOk() ([]EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetSchemas(v []EnumsubtreeAccessibilityExtendedOperationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetId(v string) {
	o.Id = v
}

// GetNonAccessibleSubtreeUnauthorizedBindResultCode returns the NonAccessibleSubtreeUnauthorizedBindResultCode field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedBindResultCode() int64 {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedBindResultCode) {
		var ret int64
		return ret
	}
	return *o.NonAccessibleSubtreeUnauthorizedBindResultCode
}

// GetNonAccessibleSubtreeUnauthorizedBindResultCodeOk returns a tuple with the NonAccessibleSubtreeUnauthorizedBindResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedBindResultCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedBindResultCode) {
		return nil, false
	}
	return o.NonAccessibleSubtreeUnauthorizedBindResultCode, true
}

// HasNonAccessibleSubtreeUnauthorizedBindResultCode returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasNonAccessibleSubtreeUnauthorizedBindResultCode() bool {
	if o != nil && !IsNil(o.NonAccessibleSubtreeUnauthorizedBindResultCode) {
		return true
	}

	return false
}

// SetNonAccessibleSubtreeUnauthorizedBindResultCode gets a reference to the given int64 and assigns it to the NonAccessibleSubtreeUnauthorizedBindResultCode field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetNonAccessibleSubtreeUnauthorizedBindResultCode(v int64) {
	o.NonAccessibleSubtreeUnauthorizedBindResultCode = &v
}

// GetNonAccessibleSubtreeUnauthorizedReadResultCode returns the NonAccessibleSubtreeUnauthorizedReadResultCode field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedReadResultCode() int64 {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedReadResultCode) {
		var ret int64
		return ret
	}
	return *o.NonAccessibleSubtreeUnauthorizedReadResultCode
}

// GetNonAccessibleSubtreeUnauthorizedReadResultCodeOk returns a tuple with the NonAccessibleSubtreeUnauthorizedReadResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedReadResultCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedReadResultCode) {
		return nil, false
	}
	return o.NonAccessibleSubtreeUnauthorizedReadResultCode, true
}

// HasNonAccessibleSubtreeUnauthorizedReadResultCode returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasNonAccessibleSubtreeUnauthorizedReadResultCode() bool {
	if o != nil && !IsNil(o.NonAccessibleSubtreeUnauthorizedReadResultCode) {
		return true
	}

	return false
}

// SetNonAccessibleSubtreeUnauthorizedReadResultCode gets a reference to the given int64 and assigns it to the NonAccessibleSubtreeUnauthorizedReadResultCode field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetNonAccessibleSubtreeUnauthorizedReadResultCode(v int64) {
	o.NonAccessibleSubtreeUnauthorizedReadResultCode = &v
}

// GetNonAccessibleSubtreeUnauthorizedWriteResultCode returns the NonAccessibleSubtreeUnauthorizedWriteResultCode field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedWriteResultCode() int64 {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedWriteResultCode) {
		var ret int64
		return ret
	}
	return *o.NonAccessibleSubtreeUnauthorizedWriteResultCode
}

// GetNonAccessibleSubtreeUnauthorizedWriteResultCodeOk returns a tuple with the NonAccessibleSubtreeUnauthorizedWriteResultCode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetNonAccessibleSubtreeUnauthorizedWriteResultCodeOk() (*int64, bool) {
	if o == nil || IsNil(o.NonAccessibleSubtreeUnauthorizedWriteResultCode) {
		return nil, false
	}
	return o.NonAccessibleSubtreeUnauthorizedWriteResultCode, true
}

// HasNonAccessibleSubtreeUnauthorizedWriteResultCode returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasNonAccessibleSubtreeUnauthorizedWriteResultCode() bool {
	if o != nil && !IsNil(o.NonAccessibleSubtreeUnauthorizedWriteResultCode) {
		return true
	}

	return false
}

// SetNonAccessibleSubtreeUnauthorizedWriteResultCode gets a reference to the given int64 and assigns it to the NonAccessibleSubtreeUnauthorizedWriteResultCode field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetNonAccessibleSubtreeUnauthorizedWriteResultCode(v int64) {
	o.NonAccessibleSubtreeUnauthorizedWriteResultCode = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *SubtreeAccessibilityExtendedOperationHandlerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

func (o SubtreeAccessibilityExtendedOperationHandlerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubtreeAccessibilityExtendedOperationHandlerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["id"] = o.Id
	if !IsNil(o.NonAccessibleSubtreeUnauthorizedBindResultCode) {
		toSerialize["nonAccessibleSubtreeUnauthorizedBindResultCode"] = o.NonAccessibleSubtreeUnauthorizedBindResultCode
	}
	if !IsNil(o.NonAccessibleSubtreeUnauthorizedReadResultCode) {
		toSerialize["nonAccessibleSubtreeUnauthorizedReadResultCode"] = o.NonAccessibleSubtreeUnauthorizedReadResultCode
	}
	if !IsNil(o.NonAccessibleSubtreeUnauthorizedWriteResultCode) {
		toSerialize["nonAccessibleSubtreeUnauthorizedWriteResultCode"] = o.NonAccessibleSubtreeUnauthorizedWriteResultCode
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	return toSerialize, nil
}

type NullableSubtreeAccessibilityExtendedOperationHandlerResponse struct {
	value *SubtreeAccessibilityExtendedOperationHandlerResponse
	isSet bool
}

func (v NullableSubtreeAccessibilityExtendedOperationHandlerResponse) Get() *SubtreeAccessibilityExtendedOperationHandlerResponse {
	return v.value
}

func (v *NullableSubtreeAccessibilityExtendedOperationHandlerResponse) Set(val *SubtreeAccessibilityExtendedOperationHandlerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubtreeAccessibilityExtendedOperationHandlerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubtreeAccessibilityExtendedOperationHandlerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubtreeAccessibilityExtendedOperationHandlerResponse(val *SubtreeAccessibilityExtendedOperationHandlerResponse) *NullableSubtreeAccessibilityExtendedOperationHandlerResponse {
	return &NullableSubtreeAccessibilityExtendedOperationHandlerResponse{value: val, isSet: true}
}

func (v NullableSubtreeAccessibilityExtendedOperationHandlerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubtreeAccessibilityExtendedOperationHandlerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
