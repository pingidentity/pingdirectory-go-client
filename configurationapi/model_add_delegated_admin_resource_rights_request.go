/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddDelegatedAdminResourceRightsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddDelegatedAdminResourceRightsRequest{}

// AddDelegatedAdminResourceRightsRequest struct for AddDelegatedAdminResourceRightsRequest
type AddDelegatedAdminResourceRightsRequest struct {
	// Specifies the resource type applicable to these Delegated Admin Resource Rights.
	RestResourceType string                                      `json:"restResourceType"`
	Schemas          []EnumdelegatedAdminResourceRightsSchemaUrn `json:"schemas,omitempty"`
	// A description for this Delegated Admin Resource Rights
	Description *string `json:"description,omitempty"`
	// Indicates whether these Delegated Admin Resource Rights are enabled.
	Enabled         bool                                                  `json:"enabled"`
	AdminPermission []EnumdelegatedAdminResourceRightsAdminPermissionProp `json:"adminPermission,omitempty"`
	AdminScope      *EnumdelegatedAdminResourceRightsAdminScopeProp       `json:"adminScope,omitempty"`
	// Specifies subtrees within the search base whose entries can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-subtrees.
	ResourceSubtree []string `json:"resourceSubtree,omitempty"`
	// Specifies groups whose members can be managed by the administrator(s). The admin-scope must be set to resources-in-specific-groups.
	ResourcesInGroup []string `json:"resourcesInGroup,omitempty"`
}

// NewAddDelegatedAdminResourceRightsRequest instantiates a new AddDelegatedAdminResourceRightsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDelegatedAdminResourceRightsRequest(restResourceType string, enabled bool) *AddDelegatedAdminResourceRightsRequest {
	this := AddDelegatedAdminResourceRightsRequest{}
	this.RestResourceType = restResourceType
	this.Enabled = enabled
	return &this
}

// NewAddDelegatedAdminResourceRightsRequestWithDefaults instantiates a new AddDelegatedAdminResourceRightsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDelegatedAdminResourceRightsRequestWithDefaults() *AddDelegatedAdminResourceRightsRequest {
	this := AddDelegatedAdminResourceRightsRequest{}
	return &this
}

// GetRestResourceType returns the RestResourceType field value
func (o *AddDelegatedAdminResourceRightsRequest) GetRestResourceType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RestResourceType
}

// GetRestResourceTypeOk returns a tuple with the RestResourceType field value
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetRestResourceTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestResourceType, true
}

// SetRestResourceType sets field value
func (o *AddDelegatedAdminResourceRightsRequest) SetRestResourceType(v string) {
	o.RestResourceType = v
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetSchemas() []EnumdelegatedAdminResourceRightsSchemaUrn {
	if o == nil || IsNil(o.Schemas) {
		var ret []EnumdelegatedAdminResourceRightsSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetSchemasOk() ([]EnumdelegatedAdminResourceRightsSchemaUrn, bool) {
	if o == nil || IsNil(o.Schemas) {
		return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasSchemas() bool {
	if o != nil && !IsNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumdelegatedAdminResourceRightsSchemaUrn and assigns it to the Schemas field.
func (o *AddDelegatedAdminResourceRightsRequest) SetSchemas(v []EnumdelegatedAdminResourceRightsSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddDelegatedAdminResourceRightsRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddDelegatedAdminResourceRightsRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddDelegatedAdminResourceRightsRequest) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAdminPermission returns the AdminPermission field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetAdminPermission() []EnumdelegatedAdminResourceRightsAdminPermissionProp {
	if o == nil || IsNil(o.AdminPermission) {
		var ret []EnumdelegatedAdminResourceRightsAdminPermissionProp
		return ret
	}
	return o.AdminPermission
}

// GetAdminPermissionOk returns a tuple with the AdminPermission field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetAdminPermissionOk() ([]EnumdelegatedAdminResourceRightsAdminPermissionProp, bool) {
	if o == nil || IsNil(o.AdminPermission) {
		return nil, false
	}
	return o.AdminPermission, true
}

// HasAdminPermission returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasAdminPermission() bool {
	if o != nil && !IsNil(o.AdminPermission) {
		return true
	}

	return false
}

// SetAdminPermission gets a reference to the given []EnumdelegatedAdminResourceRightsAdminPermissionProp and assigns it to the AdminPermission field.
func (o *AddDelegatedAdminResourceRightsRequest) SetAdminPermission(v []EnumdelegatedAdminResourceRightsAdminPermissionProp) {
	o.AdminPermission = v
}

// GetAdminScope returns the AdminScope field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetAdminScope() EnumdelegatedAdminResourceRightsAdminScopeProp {
	if o == nil || IsNil(o.AdminScope) {
		var ret EnumdelegatedAdminResourceRightsAdminScopeProp
		return ret
	}
	return *o.AdminScope
}

// GetAdminScopeOk returns a tuple with the AdminScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetAdminScopeOk() (*EnumdelegatedAdminResourceRightsAdminScopeProp, bool) {
	if o == nil || IsNil(o.AdminScope) {
		return nil, false
	}
	return o.AdminScope, true
}

// HasAdminScope returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasAdminScope() bool {
	if o != nil && !IsNil(o.AdminScope) {
		return true
	}

	return false
}

// SetAdminScope gets a reference to the given EnumdelegatedAdminResourceRightsAdminScopeProp and assigns it to the AdminScope field.
func (o *AddDelegatedAdminResourceRightsRequest) SetAdminScope(v EnumdelegatedAdminResourceRightsAdminScopeProp) {
	o.AdminScope = &v
}

// GetResourceSubtree returns the ResourceSubtree field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetResourceSubtree() []string {
	if o == nil || IsNil(o.ResourceSubtree) {
		var ret []string
		return ret
	}
	return o.ResourceSubtree
}

// GetResourceSubtreeOk returns a tuple with the ResourceSubtree field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetResourceSubtreeOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourceSubtree) {
		return nil, false
	}
	return o.ResourceSubtree, true
}

// HasResourceSubtree returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasResourceSubtree() bool {
	if o != nil && !IsNil(o.ResourceSubtree) {
		return true
	}

	return false
}

// SetResourceSubtree gets a reference to the given []string and assigns it to the ResourceSubtree field.
func (o *AddDelegatedAdminResourceRightsRequest) SetResourceSubtree(v []string) {
	o.ResourceSubtree = v
}

// GetResourcesInGroup returns the ResourcesInGroup field value if set, zero value otherwise.
func (o *AddDelegatedAdminResourceRightsRequest) GetResourcesInGroup() []string {
	if o == nil || IsNil(o.ResourcesInGroup) {
		var ret []string
		return ret
	}
	return o.ResourcesInGroup
}

// GetResourcesInGroupOk returns a tuple with the ResourcesInGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminResourceRightsRequest) GetResourcesInGroupOk() ([]string, bool) {
	if o == nil || IsNil(o.ResourcesInGroup) {
		return nil, false
	}
	return o.ResourcesInGroup, true
}

// HasResourcesInGroup returns a boolean if a field has been set.
func (o *AddDelegatedAdminResourceRightsRequest) HasResourcesInGroup() bool {
	if o != nil && !IsNil(o.ResourcesInGroup) {
		return true
	}

	return false
}

// SetResourcesInGroup gets a reference to the given []string and assigns it to the ResourcesInGroup field.
func (o *AddDelegatedAdminResourceRightsRequest) SetResourcesInGroup(v []string) {
	o.ResourcesInGroup = v
}

func (o AddDelegatedAdminResourceRightsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddDelegatedAdminResourceRightsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["restResourceType"] = o.RestResourceType
	if !IsNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.AdminPermission) {
		toSerialize["adminPermission"] = o.AdminPermission
	}
	if !IsNil(o.AdminScope) {
		toSerialize["adminScope"] = o.AdminScope
	}
	if !IsNil(o.ResourceSubtree) {
		toSerialize["resourceSubtree"] = o.ResourceSubtree
	}
	if !IsNil(o.ResourcesInGroup) {
		toSerialize["resourcesInGroup"] = o.ResourcesInGroup
	}
	return toSerialize, nil
}

type NullableAddDelegatedAdminResourceRightsRequest struct {
	value *AddDelegatedAdminResourceRightsRequest
	isSet bool
}

func (v NullableAddDelegatedAdminResourceRightsRequest) Get() *AddDelegatedAdminResourceRightsRequest {
	return v.value
}

func (v *NullableAddDelegatedAdminResourceRightsRequest) Set(val *AddDelegatedAdminResourceRightsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDelegatedAdminResourceRightsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDelegatedAdminResourceRightsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDelegatedAdminResourceRightsRequest(val *AddDelegatedAdminResourceRightsRequest) *NullableAddDelegatedAdminResourceRightsRequest {
	return &NullableAddDelegatedAdminResourceRightsRequest{value: val, isSet: true}
}

func (v NullableAddDelegatedAdminResourceRightsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDelegatedAdminResourceRightsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
