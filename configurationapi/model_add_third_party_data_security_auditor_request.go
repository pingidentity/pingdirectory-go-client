/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddThirdPartyDataSecurityAuditorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddThirdPartyDataSecurityAuditorRequest{}

// AddThirdPartyDataSecurityAuditorRequest struct for AddThirdPartyDataSecurityAuditorRequest
type AddThirdPartyDataSecurityAuditorRequest struct {
	// Name of the new Data Security Auditor
	AuditorName string                                       `json:"auditorName"`
	Schemas     []EnumthirdPartyDataSecurityAuditorSchemaUrn `json:"schemas"`
	// The fully-qualified name of the Java class providing the logic for the Third Party Data Security Auditor.
	ExtensionClass string `json:"extensionClass"`
	// The set of arguments used to customize the behavior for the Third Party Data Security Auditor. Each configuration property should be given in the form 'name=value'.
	ExtensionArgument []string `json:"extensionArgument,omitempty"`
	// Indicates whether the Data Security Auditor is enabled for use.
	Enabled *bool `json:"enabled,omitempty"`
	// Specifies the name of the detailed report file.
	ReportFile string `json:"reportFile"`
	// Specifies the attributes from the audited entries that should be included detailed reports. By default, no attributes are included.
	IncludeAttribute []string `json:"includeAttribute,omitempty"`
	// Specifies which backends the data security auditor may be applied to. By default, the data security auditors will audit entries in all backend types that support data auditing (Local DB, LDIF, and Config File Handler).
	AuditBackend  []string                                  `json:"auditBackend,omitempty"`
	AuditSeverity *EnumdataSecurityAuditorAuditSeverityProp `json:"auditSeverity,omitempty"`
}

// NewAddThirdPartyDataSecurityAuditorRequest instantiates a new AddThirdPartyDataSecurityAuditorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddThirdPartyDataSecurityAuditorRequest(auditorName string, schemas []EnumthirdPartyDataSecurityAuditorSchemaUrn, extensionClass string, reportFile string) *AddThirdPartyDataSecurityAuditorRequest {
	this := AddThirdPartyDataSecurityAuditorRequest{}
	this.AuditorName = auditorName
	this.Schemas = schemas
	this.ExtensionClass = extensionClass
	this.ReportFile = reportFile
	return &this
}

// NewAddThirdPartyDataSecurityAuditorRequestWithDefaults instantiates a new AddThirdPartyDataSecurityAuditorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddThirdPartyDataSecurityAuditorRequestWithDefaults() *AddThirdPartyDataSecurityAuditorRequest {
	this := AddThirdPartyDataSecurityAuditorRequest{}
	return &this
}

// GetAuditorName returns the AuditorName field value
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuditorName
}

// GetAuditorNameOk returns a tuple with the AuditorName field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuditorName, true
}

// SetAuditorName sets field value
func (o *AddThirdPartyDataSecurityAuditorRequest) SetAuditorName(v string) {
	o.AuditorName = v
}

// GetSchemas returns the Schemas field value
func (o *AddThirdPartyDataSecurityAuditorRequest) GetSchemas() []EnumthirdPartyDataSecurityAuditorSchemaUrn {
	if o == nil {
		var ret []EnumthirdPartyDataSecurityAuditorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetSchemasOk() ([]EnumthirdPartyDataSecurityAuditorSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddThirdPartyDataSecurityAuditorRequest) SetSchemas(v []EnumthirdPartyDataSecurityAuditorSchemaUrn) {
	o.Schemas = v
}

// GetExtensionClass returns the ExtensionClass field value
func (o *AddThirdPartyDataSecurityAuditorRequest) GetExtensionClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExtensionClass
}

// GetExtensionClassOk returns a tuple with the ExtensionClass field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetExtensionClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionClass, true
}

// SetExtensionClass sets field value
func (o *AddThirdPartyDataSecurityAuditorRequest) SetExtensionClass(v string) {
	o.ExtensionClass = v
}

// GetExtensionArgument returns the ExtensionArgument field value if set, zero value otherwise.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetExtensionArgument() []string {
	if o == nil || IsNil(o.ExtensionArgument) {
		var ret []string
		return ret
	}
	return o.ExtensionArgument
}

// GetExtensionArgumentOk returns a tuple with the ExtensionArgument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetExtensionArgumentOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtensionArgument) {
		return nil, false
	}
	return o.ExtensionArgument, true
}

// HasExtensionArgument returns a boolean if a field has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) HasExtensionArgument() bool {
	if o != nil && !IsNil(o.ExtensionArgument) {
		return true
	}

	return false
}

// SetExtensionArgument gets a reference to the given []string and assigns it to the ExtensionArgument field.
func (o *AddThirdPartyDataSecurityAuditorRequest) SetExtensionArgument(v []string) {
	o.ExtensionArgument = v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *AddThirdPartyDataSecurityAuditorRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetReportFile returns the ReportFile field value
func (o *AddThirdPartyDataSecurityAuditorRequest) GetReportFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportFile
}

// GetReportFileOk returns a tuple with the ReportFile field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetReportFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportFile, true
}

// SetReportFile sets field value
func (o *AddThirdPartyDataSecurityAuditorRequest) SetReportFile(v string) {
	o.ReportFile = v
}

// GetIncludeAttribute returns the IncludeAttribute field value if set, zero value otherwise.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetIncludeAttribute() []string {
	if o == nil || IsNil(o.IncludeAttribute) {
		var ret []string
		return ret
	}
	return o.IncludeAttribute
}

// GetIncludeAttributeOk returns a tuple with the IncludeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetIncludeAttributeOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludeAttribute) {
		return nil, false
	}
	return o.IncludeAttribute, true
}

// HasIncludeAttribute returns a boolean if a field has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) HasIncludeAttribute() bool {
	if o != nil && !IsNil(o.IncludeAttribute) {
		return true
	}

	return false
}

// SetIncludeAttribute gets a reference to the given []string and assigns it to the IncludeAttribute field.
func (o *AddThirdPartyDataSecurityAuditorRequest) SetIncludeAttribute(v []string) {
	o.IncludeAttribute = v
}

// GetAuditBackend returns the AuditBackend field value if set, zero value otherwise.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditBackend() []string {
	if o == nil || IsNil(o.AuditBackend) {
		var ret []string
		return ret
	}
	return o.AuditBackend
}

// GetAuditBackendOk returns a tuple with the AuditBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditBackendOk() ([]string, bool) {
	if o == nil || IsNil(o.AuditBackend) {
		return nil, false
	}
	return o.AuditBackend, true
}

// HasAuditBackend returns a boolean if a field has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) HasAuditBackend() bool {
	if o != nil && !IsNil(o.AuditBackend) {
		return true
	}

	return false
}

// SetAuditBackend gets a reference to the given []string and assigns it to the AuditBackend field.
func (o *AddThirdPartyDataSecurityAuditorRequest) SetAuditBackend(v []string) {
	o.AuditBackend = v
}

// GetAuditSeverity returns the AuditSeverity field value if set, zero value otherwise.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditSeverity() EnumdataSecurityAuditorAuditSeverityProp {
	if o == nil || IsNil(o.AuditSeverity) {
		var ret EnumdataSecurityAuditorAuditSeverityProp
		return ret
	}
	return *o.AuditSeverity
}

// GetAuditSeverityOk returns a tuple with the AuditSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) GetAuditSeverityOk() (*EnumdataSecurityAuditorAuditSeverityProp, bool) {
	if o == nil || IsNil(o.AuditSeverity) {
		return nil, false
	}
	return o.AuditSeverity, true
}

// HasAuditSeverity returns a boolean if a field has been set.
func (o *AddThirdPartyDataSecurityAuditorRequest) HasAuditSeverity() bool {
	if o != nil && !IsNil(o.AuditSeverity) {
		return true
	}

	return false
}

// SetAuditSeverity gets a reference to the given EnumdataSecurityAuditorAuditSeverityProp and assigns it to the AuditSeverity field.
func (o *AddThirdPartyDataSecurityAuditorRequest) SetAuditSeverity(v EnumdataSecurityAuditorAuditSeverityProp) {
	o.AuditSeverity = &v
}

func (o AddThirdPartyDataSecurityAuditorRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddThirdPartyDataSecurityAuditorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["auditorName"] = o.AuditorName
	toSerialize["schemas"] = o.Schemas
	toSerialize["extensionClass"] = o.ExtensionClass
	if !IsNil(o.ExtensionArgument) {
		toSerialize["extensionArgument"] = o.ExtensionArgument
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	toSerialize["reportFile"] = o.ReportFile
	if !IsNil(o.IncludeAttribute) {
		toSerialize["includeAttribute"] = o.IncludeAttribute
	}
	if !IsNil(o.AuditBackend) {
		toSerialize["auditBackend"] = o.AuditBackend
	}
	if !IsNil(o.AuditSeverity) {
		toSerialize["auditSeverity"] = o.AuditSeverity
	}
	return toSerialize, nil
}

type NullableAddThirdPartyDataSecurityAuditorRequest struct {
	value *AddThirdPartyDataSecurityAuditorRequest
	isSet bool
}

func (v NullableAddThirdPartyDataSecurityAuditorRequest) Get() *AddThirdPartyDataSecurityAuditorRequest {
	return v.value
}

func (v *NullableAddThirdPartyDataSecurityAuditorRequest) Set(val *AddThirdPartyDataSecurityAuditorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddThirdPartyDataSecurityAuditorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddThirdPartyDataSecurityAuditorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddThirdPartyDataSecurityAuditorRequest(val *AddThirdPartyDataSecurityAuditorRequest) *NullableAddThirdPartyDataSecurityAuditorRequest {
	return &NullableAddThirdPartyDataSecurityAuditorRequest{value: val, isSet: true}
}

func (v NullableAddThirdPartyDataSecurityAuditorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddThirdPartyDataSecurityAuditorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
