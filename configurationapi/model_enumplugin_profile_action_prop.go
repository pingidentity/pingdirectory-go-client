/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginProfileActionProp Specifies the action that should be taken by the profiler.
type EnumpluginProfileActionProp string

// List of Enumplugin-profileActionProp
const (
	ENUMPLUGINPROFILEACTIONPROP_NONE   EnumpluginProfileActionProp = "none"
	ENUMPLUGINPROFILEACTIONPROP_START  EnumpluginProfileActionProp = "start"
	ENUMPLUGINPROFILEACTIONPROP_STOP   EnumpluginProfileActionProp = "stop"
	ENUMPLUGINPROFILEACTIONPROP_CANCEL EnumpluginProfileActionProp = "cancel"
)

// All allowed values of EnumpluginProfileActionProp enum
var AllowedEnumpluginProfileActionPropEnumValues = []EnumpluginProfileActionProp{
	"none",
	"start",
	"stop",
	"cancel",
}

func (v *EnumpluginProfileActionProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginProfileActionProp(value)
	for _, existing := range AllowedEnumpluginProfileActionPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginProfileActionProp", value)
}

// NewEnumpluginProfileActionPropFromValue returns a pointer to a valid EnumpluginProfileActionProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginProfileActionPropFromValue(v string) (*EnumpluginProfileActionProp, error) {
	ev := EnumpluginProfileActionProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginProfileActionProp: valid values are %v", v, AllowedEnumpluginProfileActionPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginProfileActionProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginProfileActionPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-profileActionProp value
func (v EnumpluginProfileActionProp) Ptr() *EnumpluginProfileActionProp {
	return &v
}

type NullableEnumpluginProfileActionProp struct {
	value *EnumpluginProfileActionProp
	isSet bool
}

func (v NullableEnumpluginProfileActionProp) Get() *EnumpluginProfileActionProp {
	return v.value
}

func (v *NullableEnumpluginProfileActionProp) Set(val *EnumpluginProfileActionProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginProfileActionProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginProfileActionProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginProfileActionProp(val *EnumpluginProfileActionProp) *NullableEnumpluginProfileActionProp {
	return &NullableEnumpluginProfileActionProp{value: val, isSet: true}
}

func (v NullableEnumpluginProfileActionProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginProfileActionProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
