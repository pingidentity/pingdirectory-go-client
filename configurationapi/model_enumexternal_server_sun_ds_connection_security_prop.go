/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerSunDsConnectionSecurityProp The mechanism to use to secure communication with the directory server.
type EnumexternalServerSunDsConnectionSecurityProp string

// List of Enumexternal-server-sun-ds-connectionSecurityProp
const (
	ENUMEXTERNALSERVERSUNDSCONNECTIONSECURITYPROP_NONE     EnumexternalServerSunDsConnectionSecurityProp = "none"
	ENUMEXTERNALSERVERSUNDSCONNECTIONSECURITYPROP_SSL      EnumexternalServerSunDsConnectionSecurityProp = "ssl"
	ENUMEXTERNALSERVERSUNDSCONNECTIONSECURITYPROP_STARTTLS EnumexternalServerSunDsConnectionSecurityProp = "starttls"
)

// All allowed values of EnumexternalServerSunDsConnectionSecurityProp enum
var AllowedEnumexternalServerSunDsConnectionSecurityPropEnumValues = []EnumexternalServerSunDsConnectionSecurityProp{
	"none",
	"ssl",
	"starttls",
}

func (v *EnumexternalServerSunDsConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerSunDsConnectionSecurityProp(value)
	for _, existing := range AllowedEnumexternalServerSunDsConnectionSecurityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerSunDsConnectionSecurityProp", value)
}

// NewEnumexternalServerSunDsConnectionSecurityPropFromValue returns a pointer to a valid EnumexternalServerSunDsConnectionSecurityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerSunDsConnectionSecurityPropFromValue(v string) (*EnumexternalServerSunDsConnectionSecurityProp, error) {
	ev := EnumexternalServerSunDsConnectionSecurityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerSunDsConnectionSecurityProp: valid values are %v", v, AllowedEnumexternalServerSunDsConnectionSecurityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerSunDsConnectionSecurityProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerSunDsConnectionSecurityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-sun-ds-connectionSecurityProp value
func (v EnumexternalServerSunDsConnectionSecurityProp) Ptr() *EnumexternalServerSunDsConnectionSecurityProp {
	return &v
}

type NullableEnumexternalServerSunDsConnectionSecurityProp struct {
	value *EnumexternalServerSunDsConnectionSecurityProp
	isSet bool
}

func (v NullableEnumexternalServerSunDsConnectionSecurityProp) Get() *EnumexternalServerSunDsConnectionSecurityProp {
	return v.value
}

func (v *NullableEnumexternalServerSunDsConnectionSecurityProp) Set(val *EnumexternalServerSunDsConnectionSecurityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerSunDsConnectionSecurityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerSunDsConnectionSecurityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerSunDsConnectionSecurityProp(val *EnumexternalServerSunDsConnectionSecurityProp) *NullableEnumexternalServerSunDsConnectionSecurityProp {
	return &NullableEnumexternalServerSunDsConnectionSecurityProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerSunDsConnectionSecurityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerSunDsConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
