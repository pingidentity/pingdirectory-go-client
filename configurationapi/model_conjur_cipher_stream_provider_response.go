/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the ConjurCipherStreamProviderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConjurCipherStreamProviderResponse{}

// ConjurCipherStreamProviderResponse struct for ConjurCipherStreamProviderResponse
type ConjurCipherStreamProviderResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Cipher Stream Provider
	Id      string                                    `json:"id"`
	Schemas []EnumconjurCipherStreamProviderSchemaUrn `json:"schemas"`
	// An external server definition with information needed to connect and authenticate to the Conjur server.
	ConjurExternalServer string `json:"conjurExternalServer"`
	// The portion of the path that follows the account name in the URI needed to obtain the secret passphrase to use to generate the encryption key. Any special characters in the path must be URL-encoded.
	ConjurSecretRelativePath string `json:"conjurSecretRelativePath"`
	// The path to a file that will hold metadata about the encryption performed by this Conjur Cipher Stream Provider.
	EncryptionMetadataFile string `json:"encryptionMetadataFile"`
	// A description for this Cipher Stream Provider
	Description *string `json:"description,omitempty"`
	// Indicates whether this Cipher Stream Provider is enabled for use in the Directory Server.
	Enabled bool `json:"enabled"`
}

// NewConjurCipherStreamProviderResponse instantiates a new ConjurCipherStreamProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConjurCipherStreamProviderResponse(id string, schemas []EnumconjurCipherStreamProviderSchemaUrn, conjurExternalServer string, conjurSecretRelativePath string, encryptionMetadataFile string, enabled bool) *ConjurCipherStreamProviderResponse {
	this := ConjurCipherStreamProviderResponse{}
	this.Id = id
	this.Schemas = schemas
	this.ConjurExternalServer = conjurExternalServer
	this.ConjurSecretRelativePath = conjurSecretRelativePath
	this.EncryptionMetadataFile = encryptionMetadataFile
	this.Enabled = enabled
	return &this
}

// NewConjurCipherStreamProviderResponseWithDefaults instantiates a new ConjurCipherStreamProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConjurCipherStreamProviderResponseWithDefaults() *ConjurCipherStreamProviderResponse {
	this := ConjurCipherStreamProviderResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ConjurCipherStreamProviderResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ConjurCipherStreamProviderResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ConjurCipherStreamProviderResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *ConjurCipherStreamProviderResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *ConjurCipherStreamProviderResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *ConjurCipherStreamProviderResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *ConjurCipherStreamProviderResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ConjurCipherStreamProviderResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *ConjurCipherStreamProviderResponse) GetSchemas() []EnumconjurCipherStreamProviderSchemaUrn {
	if o == nil {
		var ret []EnumconjurCipherStreamProviderSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetSchemasOk() ([]EnumconjurCipherStreamProviderSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *ConjurCipherStreamProviderResponse) SetSchemas(v []EnumconjurCipherStreamProviderSchemaUrn) {
	o.Schemas = v
}

// GetConjurExternalServer returns the ConjurExternalServer field value
func (o *ConjurCipherStreamProviderResponse) GetConjurExternalServer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConjurExternalServer
}

// GetConjurExternalServerOk returns a tuple with the ConjurExternalServer field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetConjurExternalServerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConjurExternalServer, true
}

// SetConjurExternalServer sets field value
func (o *ConjurCipherStreamProviderResponse) SetConjurExternalServer(v string) {
	o.ConjurExternalServer = v
}

// GetConjurSecretRelativePath returns the ConjurSecretRelativePath field value
func (o *ConjurCipherStreamProviderResponse) GetConjurSecretRelativePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConjurSecretRelativePath
}

// GetConjurSecretRelativePathOk returns a tuple with the ConjurSecretRelativePath field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetConjurSecretRelativePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConjurSecretRelativePath, true
}

// SetConjurSecretRelativePath sets field value
func (o *ConjurCipherStreamProviderResponse) SetConjurSecretRelativePath(v string) {
	o.ConjurSecretRelativePath = v
}

// GetEncryptionMetadataFile returns the EncryptionMetadataFile field value
func (o *ConjurCipherStreamProviderResponse) GetEncryptionMetadataFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EncryptionMetadataFile
}

// GetEncryptionMetadataFileOk returns a tuple with the EncryptionMetadataFile field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetEncryptionMetadataFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncryptionMetadataFile, true
}

// SetEncryptionMetadataFile sets field value
func (o *ConjurCipherStreamProviderResponse) SetEncryptionMetadataFile(v string) {
	o.EncryptionMetadataFile = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConjurCipherStreamProviderResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConjurCipherStreamProviderResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConjurCipherStreamProviderResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ConjurCipherStreamProviderResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ConjurCipherStreamProviderResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ConjurCipherStreamProviderResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ConjurCipherStreamProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConjurCipherStreamProviderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	toSerialize["conjurExternalServer"] = o.ConjurExternalServer
	toSerialize["conjurSecretRelativePath"] = o.ConjurSecretRelativePath
	toSerialize["encryptionMetadataFile"] = o.EncryptionMetadataFile
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableConjurCipherStreamProviderResponse struct {
	value *ConjurCipherStreamProviderResponse
	isSet bool
}

func (v NullableConjurCipherStreamProviderResponse) Get() *ConjurCipherStreamProviderResponse {
	return v.value
}

func (v *NullableConjurCipherStreamProviderResponse) Set(val *ConjurCipherStreamProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableConjurCipherStreamProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableConjurCipherStreamProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConjurCipherStreamProviderResponse(val *ConjurCipherStreamProviderResponse) *NullableConjurCipherStreamProviderResponse {
	return &NullableConjurCipherStreamProviderResponse{value: val, isSet: true}
}

func (v NullableConjurCipherStreamProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConjurCipherStreamProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
