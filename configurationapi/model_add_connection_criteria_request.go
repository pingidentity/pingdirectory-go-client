/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddConnectionCriteriaRequest - struct for AddConnectionCriteriaRequest
type AddConnectionCriteriaRequest struct {
	AddAggregateConnectionCriteriaRequest  *AddAggregateConnectionCriteriaRequest
	AddSimpleConnectionCriteriaRequest     *AddSimpleConnectionCriteriaRequest
	AddThirdPartyConnectionCriteriaRequest *AddThirdPartyConnectionCriteriaRequest
}

// AddAggregateConnectionCriteriaRequestAsAddConnectionCriteriaRequest is a convenience function that returns AddAggregateConnectionCriteriaRequest wrapped in AddConnectionCriteriaRequest
func AddAggregateConnectionCriteriaRequestAsAddConnectionCriteriaRequest(v *AddAggregateConnectionCriteriaRequest) AddConnectionCriteriaRequest {
	return AddConnectionCriteriaRequest{
		AddAggregateConnectionCriteriaRequest: v,
	}
}

// AddSimpleConnectionCriteriaRequestAsAddConnectionCriteriaRequest is a convenience function that returns AddSimpleConnectionCriteriaRequest wrapped in AddConnectionCriteriaRequest
func AddSimpleConnectionCriteriaRequestAsAddConnectionCriteriaRequest(v *AddSimpleConnectionCriteriaRequest) AddConnectionCriteriaRequest {
	return AddConnectionCriteriaRequest{
		AddSimpleConnectionCriteriaRequest: v,
	}
}

// AddThirdPartyConnectionCriteriaRequestAsAddConnectionCriteriaRequest is a convenience function that returns AddThirdPartyConnectionCriteriaRequest wrapped in AddConnectionCriteriaRequest
func AddThirdPartyConnectionCriteriaRequestAsAddConnectionCriteriaRequest(v *AddThirdPartyConnectionCriteriaRequest) AddConnectionCriteriaRequest {
	return AddConnectionCriteriaRequest{
		AddThirdPartyConnectionCriteriaRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddConnectionCriteriaRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddAggregateConnectionCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddAggregateConnectionCriteriaRequest)
	if err == nil {
		jsonAddAggregateConnectionCriteriaRequest, _ := json.Marshal(dst.AddAggregateConnectionCriteriaRequest)
		if string(jsonAddAggregateConnectionCriteriaRequest) == "{}" { // empty struct
			dst.AddAggregateConnectionCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddAggregateConnectionCriteriaRequest = nil
	}

	// try to unmarshal data into AddSimpleConnectionCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddSimpleConnectionCriteriaRequest)
	if err == nil {
		jsonAddSimpleConnectionCriteriaRequest, _ := json.Marshal(dst.AddSimpleConnectionCriteriaRequest)
		if string(jsonAddSimpleConnectionCriteriaRequest) == "{}" { // empty struct
			dst.AddSimpleConnectionCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSimpleConnectionCriteriaRequest = nil
	}

	// try to unmarshal data into AddThirdPartyConnectionCriteriaRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyConnectionCriteriaRequest)
	if err == nil {
		jsonAddThirdPartyConnectionCriteriaRequest, _ := json.Marshal(dst.AddThirdPartyConnectionCriteriaRequest)
		if string(jsonAddThirdPartyConnectionCriteriaRequest) == "{}" { // empty struct
			dst.AddThirdPartyConnectionCriteriaRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyConnectionCriteriaRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddAggregateConnectionCriteriaRequest = nil
		dst.AddSimpleConnectionCriteriaRequest = nil
		dst.AddThirdPartyConnectionCriteriaRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddConnectionCriteriaRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddConnectionCriteriaRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddConnectionCriteriaRequest) MarshalJSON() ([]byte, error) {
	if src.AddAggregateConnectionCriteriaRequest != nil {
		return json.Marshal(&src.AddAggregateConnectionCriteriaRequest)
	}

	if src.AddSimpleConnectionCriteriaRequest != nil {
		return json.Marshal(&src.AddSimpleConnectionCriteriaRequest)
	}

	if src.AddThirdPartyConnectionCriteriaRequest != nil {
		return json.Marshal(&src.AddThirdPartyConnectionCriteriaRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddConnectionCriteriaRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddAggregateConnectionCriteriaRequest != nil {
		return obj.AddAggregateConnectionCriteriaRequest
	}

	if obj.AddSimpleConnectionCriteriaRequest != nil {
		return obj.AddSimpleConnectionCriteriaRequest
	}

	if obj.AddThirdPartyConnectionCriteriaRequest != nil {
		return obj.AddThirdPartyConnectionCriteriaRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddConnectionCriteriaRequest struct {
	value *AddConnectionCriteriaRequest
	isSet bool
}

func (v NullableAddConnectionCriteriaRequest) Get() *AddConnectionCriteriaRequest {
	return v.value
}

func (v *NullableAddConnectionCriteriaRequest) Set(val *AddConnectionCriteriaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddConnectionCriteriaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddConnectionCriteriaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddConnectionCriteriaRequest(val *AddConnectionCriteriaRequest) *NullableAddConnectionCriteriaRequest {
	return &NullableAddConnectionCriteriaRequest{value: val, isSet: true}
}

func (v NullableAddConnectionCriteriaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddConnectionCriteriaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
