/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the SmtpAccountStatusNotificationHandlerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmtpAccountStatusNotificationHandlerResponse{}

// SmtpAccountStatusNotificationHandlerResponse struct for SmtpAccountStatusNotificationHandlerResponse
type SmtpAccountStatusNotificationHandlerResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Account Status Notification Handler
	Id      string                                              `json:"id"`
	Schemas []EnumsmtpAccountStatusNotificationHandlerSchemaUrn `json:"schemas"`
	// Specifies which attribute in the user's entries may be used to obtain the email address when notifying the end user.
	EmailAddressAttributeType []string `json:"emailAddressAttributeType,omitempty"`
	// The name of the JSON field whose value is the email address to which the message should be sent. The email address must be contained in a top-level field whose value is a single string.
	EmailAddressJSONField *string `json:"emailAddressJSONField,omitempty"`
	// A JSON object filter that may be used to identify which email address value to use when sending the message.
	EmailAddressJSONObjectFilter *string `json:"emailAddressJSONObjectFilter,omitempty"`
	// Specifies an email address to which notification messages are sent, either instead of or in addition to the end user for whom the notification has been generated.
	RecipientAddress []string `json:"recipientAddress,omitempty"`
	// Indicates whether an email notification message should be generated and sent to the set of notification recipients even if the user entry does not contain any values for any of the email address attributes (that is, in cases when it is not possible to notify the end user).
	SendMessageWithoutEndUserAddress bool `json:"sendMessageWithoutEndUserAddress"`
	// Specifies the email address from which the message is sent. Note that this does not necessarily have to be a legitimate email address.
	SenderAddress string `json:"senderAddress"`
	// Specifies the subject that should be used for email messages generated by this account status notification handler.
	MessageSubject []string `json:"messageSubject"`
	// Specifies the path to the file containing the message template to generate the email notification messages.
	MessageTemplateFile []string `json:"messageTemplateFile"`
	// A description for this Account Status Notification Handler
	Description *string `json:"description,omitempty"`
	// Indicates whether the Account Status Notification Handler is enabled. Only enabled handlers are invoked whenever a related event occurs in the server.
	Enabled bool `json:"enabled"`
	// Indicates whether the server should attempt to invoke this Account Status Notification Handler in a background thread so that any potentially-expensive processing (e.g., performing network communication to deliver a message) will not delay processing for the operation that triggered the notification.
	Asynchronous *bool `json:"asynchronous,omitempty"`
	// A request criteria object that identifies which add requests should result in account creation notifications for this handler.
	AccountCreationNotificationRequestCriteria *string `json:"accountCreationNotificationRequestCriteria,omitempty"`
	// A request criteria object that identifies which modify and modify DN requests should result in account update notifications for this handler.
	AccountUpdateNotificationRequestCriteria *string `json:"accountUpdateNotificationRequestCriteria,omitempty"`
}

// NewSmtpAccountStatusNotificationHandlerResponse instantiates a new SmtpAccountStatusNotificationHandlerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmtpAccountStatusNotificationHandlerResponse(id string, schemas []EnumsmtpAccountStatusNotificationHandlerSchemaUrn, sendMessageWithoutEndUserAddress bool, senderAddress string, messageSubject []string, messageTemplateFile []string, enabled bool) *SmtpAccountStatusNotificationHandlerResponse {
	this := SmtpAccountStatusNotificationHandlerResponse{}
	this.Id = id
	this.Schemas = schemas
	this.SendMessageWithoutEndUserAddress = sendMessageWithoutEndUserAddress
	this.SenderAddress = senderAddress
	this.MessageSubject = messageSubject
	this.MessageTemplateFile = messageTemplateFile
	this.Enabled = enabled
	return &this
}

// NewSmtpAccountStatusNotificationHandlerResponseWithDefaults instantiates a new SmtpAccountStatusNotificationHandlerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmtpAccountStatusNotificationHandlerResponseWithDefaults() *SmtpAccountStatusNotificationHandlerResponse {
	this := SmtpAccountStatusNotificationHandlerResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSchemas() []EnumsmtpAccountStatusNotificationHandlerSchemaUrn {
	if o == nil {
		var ret []EnumsmtpAccountStatusNotificationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSchemasOk() ([]EnumsmtpAccountStatusNotificationHandlerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetSchemas(v []EnumsmtpAccountStatusNotificationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetEmailAddressAttributeType returns the EmailAddressAttributeType field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressAttributeType() []string {
	if o == nil || IsNil(o.EmailAddressAttributeType) {
		var ret []string
		return ret
	}
	return o.EmailAddressAttributeType
}

// GetEmailAddressAttributeTypeOk returns a tuple with the EmailAddressAttributeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressAttributeTypeOk() ([]string, bool) {
	if o == nil || IsNil(o.EmailAddressAttributeType) {
		return nil, false
	}
	return o.EmailAddressAttributeType, true
}

// HasEmailAddressAttributeType returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasEmailAddressAttributeType() bool {
	if o != nil && !IsNil(o.EmailAddressAttributeType) {
		return true
	}

	return false
}

// SetEmailAddressAttributeType gets a reference to the given []string and assigns it to the EmailAddressAttributeType field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetEmailAddressAttributeType(v []string) {
	o.EmailAddressAttributeType = v
}

// GetEmailAddressJSONField returns the EmailAddressJSONField field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressJSONField() string {
	if o == nil || IsNil(o.EmailAddressJSONField) {
		var ret string
		return ret
	}
	return *o.EmailAddressJSONField
}

// GetEmailAddressJSONFieldOk returns a tuple with the EmailAddressJSONField field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressJSONFieldOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddressJSONField) {
		return nil, false
	}
	return o.EmailAddressJSONField, true
}

// HasEmailAddressJSONField returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasEmailAddressJSONField() bool {
	if o != nil && !IsNil(o.EmailAddressJSONField) {
		return true
	}

	return false
}

// SetEmailAddressJSONField gets a reference to the given string and assigns it to the EmailAddressJSONField field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetEmailAddressJSONField(v string) {
	o.EmailAddressJSONField = &v
}

// GetEmailAddressJSONObjectFilter returns the EmailAddressJSONObjectFilter field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressJSONObjectFilter() string {
	if o == nil || IsNil(o.EmailAddressJSONObjectFilter) {
		var ret string
		return ret
	}
	return *o.EmailAddressJSONObjectFilter
}

// GetEmailAddressJSONObjectFilterOk returns a tuple with the EmailAddressJSONObjectFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEmailAddressJSONObjectFilterOk() (*string, bool) {
	if o == nil || IsNil(o.EmailAddressJSONObjectFilter) {
		return nil, false
	}
	return o.EmailAddressJSONObjectFilter, true
}

// HasEmailAddressJSONObjectFilter returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasEmailAddressJSONObjectFilter() bool {
	if o != nil && !IsNil(o.EmailAddressJSONObjectFilter) {
		return true
	}

	return false
}

// SetEmailAddressJSONObjectFilter gets a reference to the given string and assigns it to the EmailAddressJSONObjectFilter field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetEmailAddressJSONObjectFilter(v string) {
	o.EmailAddressJSONObjectFilter = &v
}

// GetRecipientAddress returns the RecipientAddress field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetRecipientAddress() []string {
	if o == nil || IsNil(o.RecipientAddress) {
		var ret []string
		return ret
	}
	return o.RecipientAddress
}

// GetRecipientAddressOk returns a tuple with the RecipientAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetRecipientAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.RecipientAddress) {
		return nil, false
	}
	return o.RecipientAddress, true
}

// HasRecipientAddress returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasRecipientAddress() bool {
	if o != nil && !IsNil(o.RecipientAddress) {
		return true
	}

	return false
}

// SetRecipientAddress gets a reference to the given []string and assigns it to the RecipientAddress field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetRecipientAddress(v []string) {
	o.RecipientAddress = v
}

// GetSendMessageWithoutEndUserAddress returns the SendMessageWithoutEndUserAddress field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSendMessageWithoutEndUserAddress() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SendMessageWithoutEndUserAddress
}

// GetSendMessageWithoutEndUserAddressOk returns a tuple with the SendMessageWithoutEndUserAddress field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSendMessageWithoutEndUserAddressOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SendMessageWithoutEndUserAddress, true
}

// SetSendMessageWithoutEndUserAddress sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetSendMessageWithoutEndUserAddress(v bool) {
	o.SendMessageWithoutEndUserAddress = v
}

// GetSenderAddress returns the SenderAddress field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSenderAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SenderAddress
}

// GetSenderAddressOk returns a tuple with the SenderAddress field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetSenderAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SenderAddress, true
}

// SetSenderAddress sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetSenderAddress(v string) {
	o.SenderAddress = v
}

// GetMessageSubject returns the MessageSubject field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMessageSubject() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MessageSubject
}

// GetMessageSubjectOk returns a tuple with the MessageSubject field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMessageSubjectOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageSubject, true
}

// SetMessageSubject sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetMessageSubject(v []string) {
	o.MessageSubject = v
}

// GetMessageTemplateFile returns the MessageTemplateFile field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMessageTemplateFile() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.MessageTemplateFile
}

// GetMessageTemplateFileOk returns a tuple with the MessageTemplateFile field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetMessageTemplateFileOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageTemplateFile, true
}

// SetMessageTemplateFile sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetMessageTemplateFile(v []string) {
	o.MessageTemplateFile = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SmtpAccountStatusNotificationHandlerResponse) SetEnabled(v bool) {
	o.Enabled = v
}

// GetAsynchronous returns the Asynchronous field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAsynchronous() bool {
	if o == nil || IsNil(o.Asynchronous) {
		var ret bool
		return ret
	}
	return *o.Asynchronous
}

// GetAsynchronousOk returns a tuple with the Asynchronous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAsynchronousOk() (*bool, bool) {
	if o == nil || IsNil(o.Asynchronous) {
		return nil, false
	}
	return o.Asynchronous, true
}

// HasAsynchronous returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasAsynchronous() bool {
	if o != nil && !IsNil(o.Asynchronous) {
		return true
	}

	return false
}

// SetAsynchronous gets a reference to the given bool and assigns it to the Asynchronous field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetAsynchronous(v bool) {
	o.Asynchronous = &v
}

// GetAccountCreationNotificationRequestCriteria returns the AccountCreationNotificationRequestCriteria field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAccountCreationNotificationRequestCriteria() string {
	if o == nil || IsNil(o.AccountCreationNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountCreationNotificationRequestCriteria
}

// GetAccountCreationNotificationRequestCriteriaOk returns a tuple with the AccountCreationNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAccountCreationNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.AccountCreationNotificationRequestCriteria) {
		return nil, false
	}
	return o.AccountCreationNotificationRequestCriteria, true
}

// HasAccountCreationNotificationRequestCriteria returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasAccountCreationNotificationRequestCriteria() bool {
	if o != nil && !IsNil(o.AccountCreationNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountCreationNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountCreationNotificationRequestCriteria field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetAccountCreationNotificationRequestCriteria(v string) {
	o.AccountCreationNotificationRequestCriteria = &v
}

// GetAccountUpdateNotificationRequestCriteria returns the AccountUpdateNotificationRequestCriteria field value if set, zero value otherwise.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAccountUpdateNotificationRequestCriteria() string {
	if o == nil || IsNil(o.AccountUpdateNotificationRequestCriteria) {
		var ret string
		return ret
	}
	return *o.AccountUpdateNotificationRequestCriteria
}

// GetAccountUpdateNotificationRequestCriteriaOk returns a tuple with the AccountUpdateNotificationRequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) GetAccountUpdateNotificationRequestCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.AccountUpdateNotificationRequestCriteria) {
		return nil, false
	}
	return o.AccountUpdateNotificationRequestCriteria, true
}

// HasAccountUpdateNotificationRequestCriteria returns a boolean if a field has been set.
func (o *SmtpAccountStatusNotificationHandlerResponse) HasAccountUpdateNotificationRequestCriteria() bool {
	if o != nil && !IsNil(o.AccountUpdateNotificationRequestCriteria) {
		return true
	}

	return false
}

// SetAccountUpdateNotificationRequestCriteria gets a reference to the given string and assigns it to the AccountUpdateNotificationRequestCriteria field.
func (o *SmtpAccountStatusNotificationHandlerResponse) SetAccountUpdateNotificationRequestCriteria(v string) {
	o.AccountUpdateNotificationRequestCriteria = &v
}

func (o SmtpAccountStatusNotificationHandlerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmtpAccountStatusNotificationHandlerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.EmailAddressAttributeType) {
		toSerialize["emailAddressAttributeType"] = o.EmailAddressAttributeType
	}
	if !IsNil(o.EmailAddressJSONField) {
		toSerialize["emailAddressJSONField"] = o.EmailAddressJSONField
	}
	if !IsNil(o.EmailAddressJSONObjectFilter) {
		toSerialize["emailAddressJSONObjectFilter"] = o.EmailAddressJSONObjectFilter
	}
	if !IsNil(o.RecipientAddress) {
		toSerialize["recipientAddress"] = o.RecipientAddress
	}
	toSerialize["sendMessageWithoutEndUserAddress"] = o.SendMessageWithoutEndUserAddress
	toSerialize["senderAddress"] = o.SenderAddress
	toSerialize["messageSubject"] = o.MessageSubject
	toSerialize["messageTemplateFile"] = o.MessageTemplateFile
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	if !IsNil(o.Asynchronous) {
		toSerialize["asynchronous"] = o.Asynchronous
	}
	if !IsNil(o.AccountCreationNotificationRequestCriteria) {
		toSerialize["accountCreationNotificationRequestCriteria"] = o.AccountCreationNotificationRequestCriteria
	}
	if !IsNil(o.AccountUpdateNotificationRequestCriteria) {
		toSerialize["accountUpdateNotificationRequestCriteria"] = o.AccountUpdateNotificationRequestCriteria
	}
	return toSerialize, nil
}

type NullableSmtpAccountStatusNotificationHandlerResponse struct {
	value *SmtpAccountStatusNotificationHandlerResponse
	isSet bool
}

func (v NullableSmtpAccountStatusNotificationHandlerResponse) Get() *SmtpAccountStatusNotificationHandlerResponse {
	return v.value
}

func (v *NullableSmtpAccountStatusNotificationHandlerResponse) Set(val *SmtpAccountStatusNotificationHandlerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSmtpAccountStatusNotificationHandlerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSmtpAccountStatusNotificationHandlerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmtpAccountStatusNotificationHandlerResponse(val *SmtpAccountStatusNotificationHandlerResponse) *NullableSmtpAccountStatusNotificationHandlerResponse {
	return &NullableSmtpAccountStatusNotificationHandlerResponse{value: val, isSet: true}
}

func (v NullableSmtpAccountStatusNotificationHandlerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmtpAccountStatusNotificationHandlerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
