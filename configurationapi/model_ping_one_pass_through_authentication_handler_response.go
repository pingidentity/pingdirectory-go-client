/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the PingOnePassThroughAuthenticationHandlerResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PingOnePassThroughAuthenticationHandlerResponse{}

// PingOnePassThroughAuthenticationHandlerResponse struct for PingOnePassThroughAuthenticationHandlerResponse
type PingOnePassThroughAuthenticationHandlerResponse struct {
	Schemas []EnumpingOnePassThroughAuthenticationHandlerSchemaUrn `json:"schemas"`
	// Specifies the API endpoint for the PingOne web service.
	ApiURL string `json:"apiURL"`
	// Specifies the API endpoint for the PingOne authentication service.
	AuthURL string `json:"authURL"`
	// Specifies the OAuth Client ID used to authenticate connections to the PingOne API.
	OAuthClientID string `json:"OAuthClientID"`
	// Specifies the OAuth Client Secret used to authenticate connections to the PingOne API.
	OAuthClientSecret *string `json:"OAuthClientSecret,omitempty"`
	// Specifies a passphrase provider that can be used to obtain the OAuth Client Secret used to authenticate connections to the PingOne API.
	OAuthClientSecretPassphraseProvider *string `json:"OAuthClientSecretPassphraseProvider,omitempty"`
	// Specifies the PingOne Environment that will be associated with this PingOne Pass Through Authentication Handler.
	EnvironmentID string `json:"environmentID"`
	// A reference to an HTTP proxy server that should be used for requests sent to the PingOne service.
	HttpProxyExternalServer *string `json:"httpProxyExternalServer,omitempty"`
	// The names of the attributes in the local user entry whose values must match the values of the corresponding fields in the PingOne service.
	UserMappingLocalAttribute []string `json:"userMappingLocalAttribute"`
	// The names of the fields in the PingOne service whose values must match the values of the corresponding attributes in the local user entry, as specified in the user-mapping-local-attribute property.
	UserMappingRemoteJSONField []string `json:"userMappingRemoteJSONField"`
	// An optional SCIM filter that will be ANDed with the filter created to identify the account in the PingOne service that corresponds to the local entry. Only the \"eq\", \"sw\", \"and\", and \"or\" filter types may be used.
	AdditionalUserMappingSCIMFilter *string `json:"additionalUserMappingSCIMFilter,omitempty"`
	// A description for this Pass Through Authentication Handler
	Description *string `json:"description,omitempty"`
	// The base DNs for the local users whose authentication attempts may be passed through to the external authentication service.
	IncludedLocalEntryBaseDN []string `json:"includedLocalEntryBaseDN,omitempty"`
	// A reference to connection criteria that will be used to indicate which bind requests should be passed through to the external authentication service.
	ConnectionCriteria *string `json:"connectionCriteria,omitempty"`
	// A reference to request criteria that will be used to indicate which bind requests should be passed through to the external authentication service.
	RequestCriteria                               *string                                            `json:"requestCriteria,omitempty"`
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	// Name of the Pass Through Authentication Handler
	Id string `json:"id"`
}

// NewPingOnePassThroughAuthenticationHandlerResponse instantiates a new PingOnePassThroughAuthenticationHandlerResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPingOnePassThroughAuthenticationHandlerResponse(schemas []EnumpingOnePassThroughAuthenticationHandlerSchemaUrn, apiURL string, authURL string, oAuthClientID string, environmentID string, userMappingLocalAttribute []string, userMappingRemoteJSONField []string, id string) *PingOnePassThroughAuthenticationHandlerResponse {
	this := PingOnePassThroughAuthenticationHandlerResponse{}
	this.Schemas = schemas
	this.ApiURL = apiURL
	this.AuthURL = authURL
	this.OAuthClientID = oAuthClientID
	this.EnvironmentID = environmentID
	this.UserMappingLocalAttribute = userMappingLocalAttribute
	this.UserMappingRemoteJSONField = userMappingRemoteJSONField
	this.Id = id
	return &this
}

// NewPingOnePassThroughAuthenticationHandlerResponseWithDefaults instantiates a new PingOnePassThroughAuthenticationHandlerResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPingOnePassThroughAuthenticationHandlerResponseWithDefaults() *PingOnePassThroughAuthenticationHandlerResponse {
	this := PingOnePassThroughAuthenticationHandlerResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetSchemas() []EnumpingOnePassThroughAuthenticationHandlerSchemaUrn {
	if o == nil {
		var ret []EnumpingOnePassThroughAuthenticationHandlerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetSchemasOk() ([]EnumpingOnePassThroughAuthenticationHandlerSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetSchemas(v []EnumpingOnePassThroughAuthenticationHandlerSchemaUrn) {
	o.Schemas = v
}

// GetApiURL returns the ApiURL field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetApiURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiURL
}

// GetApiURLOk returns a tuple with the ApiURL field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetApiURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiURL, true
}

// SetApiURL sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetApiURL(v string) {
	o.ApiURL = v
}

// GetAuthURL returns the AuthURL field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetAuthURL() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthURL
}

// GetAuthURLOk returns a tuple with the AuthURL field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetAuthURLOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthURL, true
}

// SetAuthURL sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetAuthURL(v string) {
	o.AuthURL = v
}

// GetOAuthClientID returns the OAuthClientID field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OAuthClientID
}

// GetOAuthClientIDOk returns a tuple with the OAuthClientID field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OAuthClientID, true
}

// SetOAuthClientID sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetOAuthClientID(v string) {
	o.OAuthClientID = v
}

// GetOAuthClientSecret returns the OAuthClientSecret field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientSecret() string {
	if o == nil || IsNil(o.OAuthClientSecret) {
		var ret string
		return ret
	}
	return *o.OAuthClientSecret
}

// GetOAuthClientSecretOk returns a tuple with the OAuthClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientSecretOk() (*string, bool) {
	if o == nil || IsNil(o.OAuthClientSecret) {
		return nil, false
	}
	return o.OAuthClientSecret, true
}

// HasOAuthClientSecret returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasOAuthClientSecret() bool {
	if o != nil && !IsNil(o.OAuthClientSecret) {
		return true
	}

	return false
}

// SetOAuthClientSecret gets a reference to the given string and assigns it to the OAuthClientSecret field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetOAuthClientSecret(v string) {
	o.OAuthClientSecret = &v
}

// GetOAuthClientSecretPassphraseProvider returns the OAuthClientSecretPassphraseProvider field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientSecretPassphraseProvider() string {
	if o == nil || IsNil(o.OAuthClientSecretPassphraseProvider) {
		var ret string
		return ret
	}
	return *o.OAuthClientSecretPassphraseProvider
}

// GetOAuthClientSecretPassphraseProviderOk returns a tuple with the OAuthClientSecretPassphraseProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetOAuthClientSecretPassphraseProviderOk() (*string, bool) {
	if o == nil || IsNil(o.OAuthClientSecretPassphraseProvider) {
		return nil, false
	}
	return o.OAuthClientSecretPassphraseProvider, true
}

// HasOAuthClientSecretPassphraseProvider returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasOAuthClientSecretPassphraseProvider() bool {
	if o != nil && !IsNil(o.OAuthClientSecretPassphraseProvider) {
		return true
	}

	return false
}

// SetOAuthClientSecretPassphraseProvider gets a reference to the given string and assigns it to the OAuthClientSecretPassphraseProvider field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetOAuthClientSecretPassphraseProvider(v string) {
	o.OAuthClientSecretPassphraseProvider = &v
}

// GetEnvironmentID returns the EnvironmentID field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetEnvironmentID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EnvironmentID
}

// GetEnvironmentIDOk returns a tuple with the EnvironmentID field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetEnvironmentIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnvironmentID, true
}

// SetEnvironmentID sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetEnvironmentID(v string) {
	o.EnvironmentID = v
}

// GetHttpProxyExternalServer returns the HttpProxyExternalServer field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetHttpProxyExternalServer() string {
	if o == nil || IsNil(o.HttpProxyExternalServer) {
		var ret string
		return ret
	}
	return *o.HttpProxyExternalServer
}

// GetHttpProxyExternalServerOk returns a tuple with the HttpProxyExternalServer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetHttpProxyExternalServerOk() (*string, bool) {
	if o == nil || IsNil(o.HttpProxyExternalServer) {
		return nil, false
	}
	return o.HttpProxyExternalServer, true
}

// HasHttpProxyExternalServer returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasHttpProxyExternalServer() bool {
	if o != nil && !IsNil(o.HttpProxyExternalServer) {
		return true
	}

	return false
}

// SetHttpProxyExternalServer gets a reference to the given string and assigns it to the HttpProxyExternalServer field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetHttpProxyExternalServer(v string) {
	o.HttpProxyExternalServer = &v
}

// GetUserMappingLocalAttribute returns the UserMappingLocalAttribute field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUserMappingLocalAttribute() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserMappingLocalAttribute
}

// GetUserMappingLocalAttributeOk returns a tuple with the UserMappingLocalAttribute field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUserMappingLocalAttributeOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserMappingLocalAttribute, true
}

// SetUserMappingLocalAttribute sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetUserMappingLocalAttribute(v []string) {
	o.UserMappingLocalAttribute = v
}

// GetUserMappingRemoteJSONField returns the UserMappingRemoteJSONField field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUserMappingRemoteJSONField() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserMappingRemoteJSONField
}

// GetUserMappingRemoteJSONFieldOk returns a tuple with the UserMappingRemoteJSONField field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUserMappingRemoteJSONFieldOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserMappingRemoteJSONField, true
}

// SetUserMappingRemoteJSONField sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetUserMappingRemoteJSONField(v []string) {
	o.UserMappingRemoteJSONField = v
}

// GetAdditionalUserMappingSCIMFilter returns the AdditionalUserMappingSCIMFilter field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetAdditionalUserMappingSCIMFilter() string {
	if o == nil || IsNil(o.AdditionalUserMappingSCIMFilter) {
		var ret string
		return ret
	}
	return *o.AdditionalUserMappingSCIMFilter
}

// GetAdditionalUserMappingSCIMFilterOk returns a tuple with the AdditionalUserMappingSCIMFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetAdditionalUserMappingSCIMFilterOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalUserMappingSCIMFilter) {
		return nil, false
	}
	return o.AdditionalUserMappingSCIMFilter, true
}

// HasAdditionalUserMappingSCIMFilter returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasAdditionalUserMappingSCIMFilter() bool {
	if o != nil && !IsNil(o.AdditionalUserMappingSCIMFilter) {
		return true
	}

	return false
}

// SetAdditionalUserMappingSCIMFilter gets a reference to the given string and assigns it to the AdditionalUserMappingSCIMFilter field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetAdditionalUserMappingSCIMFilter(v string) {
	o.AdditionalUserMappingSCIMFilter = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetDescription(v string) {
	o.Description = &v
}

// GetIncludedLocalEntryBaseDN returns the IncludedLocalEntryBaseDN field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetIncludedLocalEntryBaseDN() []string {
	if o == nil || IsNil(o.IncludedLocalEntryBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludedLocalEntryBaseDN
}

// GetIncludedLocalEntryBaseDNOk returns a tuple with the IncludedLocalEntryBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetIncludedLocalEntryBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedLocalEntryBaseDN) {
		return nil, false
	}
	return o.IncludedLocalEntryBaseDN, true
}

// HasIncludedLocalEntryBaseDN returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasIncludedLocalEntryBaseDN() bool {
	if o != nil && !IsNil(o.IncludedLocalEntryBaseDN) {
		return true
	}

	return false
}

// SetIncludedLocalEntryBaseDN gets a reference to the given []string and assigns it to the IncludedLocalEntryBaseDN field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetIncludedLocalEntryBaseDN(v []string) {
	o.IncludedLocalEntryBaseDN = v
}

// GetConnectionCriteria returns the ConnectionCriteria field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetConnectionCriteria() string {
	if o == nil || IsNil(o.ConnectionCriteria) {
		var ret string
		return ret
	}
	return *o.ConnectionCriteria
}

// GetConnectionCriteriaOk returns a tuple with the ConnectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetConnectionCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.ConnectionCriteria) {
		return nil, false
	}
	return o.ConnectionCriteria, true
}

// HasConnectionCriteria returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasConnectionCriteria() bool {
	if o != nil && !IsNil(o.ConnectionCriteria) {
		return true
	}

	return false
}

// SetConnectionCriteria gets a reference to the given string and assigns it to the ConnectionCriteria field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetConnectionCriteria(v string) {
	o.ConnectionCriteria = &v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetRequestCriteria() string {
	if o == nil || IsNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.RequestCriteria) {
		return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasRequestCriteria() bool {
	if o != nil && !IsNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetMeta() MetaMeta {
	if o == nil || IsNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetId returns the Id field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PingOnePassThroughAuthenticationHandlerResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PingOnePassThroughAuthenticationHandlerResponse) SetId(v string) {
	o.Id = v
}

func (o PingOnePassThroughAuthenticationHandlerResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PingOnePassThroughAuthenticationHandlerResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["schemas"] = o.Schemas
	toSerialize["apiURL"] = o.ApiURL
	toSerialize["authURL"] = o.AuthURL
	toSerialize["OAuthClientID"] = o.OAuthClientID
	if !IsNil(o.OAuthClientSecret) {
		toSerialize["OAuthClientSecret"] = o.OAuthClientSecret
	}
	if !IsNil(o.OAuthClientSecretPassphraseProvider) {
		toSerialize["OAuthClientSecretPassphraseProvider"] = o.OAuthClientSecretPassphraseProvider
	}
	toSerialize["environmentID"] = o.EnvironmentID
	if !IsNil(o.HttpProxyExternalServer) {
		toSerialize["httpProxyExternalServer"] = o.HttpProxyExternalServer
	}
	toSerialize["userMappingLocalAttribute"] = o.UserMappingLocalAttribute
	toSerialize["userMappingRemoteJSONField"] = o.UserMappingRemoteJSONField
	if !IsNil(o.AdditionalUserMappingSCIMFilter) {
		toSerialize["additionalUserMappingSCIMFilter"] = o.AdditionalUserMappingSCIMFilter
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.IncludedLocalEntryBaseDN) {
		toSerialize["includedLocalEntryBaseDN"] = o.IncludedLocalEntryBaseDN
	}
	if !IsNil(o.ConnectionCriteria) {
		toSerialize["connectionCriteria"] = o.ConnectionCriteria
	}
	if !IsNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	toSerialize["id"] = o.Id
	return toSerialize, nil
}

type NullablePingOnePassThroughAuthenticationHandlerResponse struct {
	value *PingOnePassThroughAuthenticationHandlerResponse
	isSet bool
}

func (v NullablePingOnePassThroughAuthenticationHandlerResponse) Get() *PingOnePassThroughAuthenticationHandlerResponse {
	return v.value
}

func (v *NullablePingOnePassThroughAuthenticationHandlerResponse) Set(val *PingOnePassThroughAuthenticationHandlerResponse) {
	v.value = val
	v.isSet = true
}

func (v NullablePingOnePassThroughAuthenticationHandlerResponse) IsSet() bool {
	return v.isSet
}

func (v *NullablePingOnePassThroughAuthenticationHandlerResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePingOnePassThroughAuthenticationHandlerResponse(val *PingOnePassThroughAuthenticationHandlerResponse) *NullablePingOnePassThroughAuthenticationHandlerResponse {
	return &NullablePingOnePassThroughAuthenticationHandlerResponse{value: val, isSet: true}
}

func (v NullablePingOnePassThroughAuthenticationHandlerResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePingOnePassThroughAuthenticationHandlerResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
