/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumrecurringTaskSecurityLevelProp The security level to use when deciding which information to include in or exclude from the support data archive, and which included data should be obscured or redacted.
type EnumrecurringTaskSecurityLevelProp string

// List of Enumrecurring-task-securityLevelProp
const (
	ENUMRECURRINGTASKSECURITYLEVELPROP_NONE            EnumrecurringTaskSecurityLevelProp = "none"
	ENUMRECURRINGTASKSECURITYLEVELPROP_OBSCURE_SECRETS EnumrecurringTaskSecurityLevelProp = "obscure-secrets"
	ENUMRECURRINGTASKSECURITYLEVELPROP_MAXIMUM         EnumrecurringTaskSecurityLevelProp = "maximum"
)

// All allowed values of EnumrecurringTaskSecurityLevelProp enum
var AllowedEnumrecurringTaskSecurityLevelPropEnumValues = []EnumrecurringTaskSecurityLevelProp{
	"none",
	"obscure-secrets",
	"maximum",
}

func (v *EnumrecurringTaskSecurityLevelProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumrecurringTaskSecurityLevelProp(value)
	for _, existing := range AllowedEnumrecurringTaskSecurityLevelPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumrecurringTaskSecurityLevelProp", value)
}

// NewEnumrecurringTaskSecurityLevelPropFromValue returns a pointer to a valid EnumrecurringTaskSecurityLevelProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumrecurringTaskSecurityLevelPropFromValue(v string) (*EnumrecurringTaskSecurityLevelProp, error) {
	ev := EnumrecurringTaskSecurityLevelProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumrecurringTaskSecurityLevelProp: valid values are %v", v, AllowedEnumrecurringTaskSecurityLevelPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumrecurringTaskSecurityLevelProp) IsValid() bool {
	for _, existing := range AllowedEnumrecurringTaskSecurityLevelPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumrecurring-task-securityLevelProp value
func (v EnumrecurringTaskSecurityLevelProp) Ptr() *EnumrecurringTaskSecurityLevelProp {
	return &v
}

type NullableEnumrecurringTaskSecurityLevelProp struct {
	value *EnumrecurringTaskSecurityLevelProp
	isSet bool
}

func (v NullableEnumrecurringTaskSecurityLevelProp) Get() *EnumrecurringTaskSecurityLevelProp {
	return v.value
}

func (v *NullableEnumrecurringTaskSecurityLevelProp) Set(val *EnumrecurringTaskSecurityLevelProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumrecurringTaskSecurityLevelProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumrecurringTaskSecurityLevelProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumrecurringTaskSecurityLevelProp(val *EnumrecurringTaskSecurityLevelProp) *NullableEnumrecurringTaskSecurityLevelProp {
	return &NullableEnumrecurringTaskSecurityLevelProp{value: val, isSet: true}
}

func (v NullableEnumrecurringTaskSecurityLevelProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumrecurringTaskSecurityLevelProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
