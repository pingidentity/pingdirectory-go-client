/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginReplicationInfoProp Specifies the level of detail to include about replication.
type EnumpluginReplicationInfoProp string

// List of Enumplugin-replicationInfoProp
const (
	ENUMPLUGINREPLICATIONINFOPROP_NONE     EnumpluginReplicationInfoProp = "none"
	ENUMPLUGINREPLICATIONINFOPROP_BASIC    EnumpluginReplicationInfoProp = "basic"
	ENUMPLUGINREPLICATIONINFOPROP_EXTENDED EnumpluginReplicationInfoProp = "extended"
	ENUMPLUGINREPLICATIONINFOPROP_VERBOSE  EnumpluginReplicationInfoProp = "verbose"
)

// All allowed values of EnumpluginReplicationInfoProp enum
var AllowedEnumpluginReplicationInfoPropEnumValues = []EnumpluginReplicationInfoProp{
	"none",
	"basic",
	"extended",
	"verbose",
}

func (v *EnumpluginReplicationInfoProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginReplicationInfoProp(value)
	for _, existing := range AllowedEnumpluginReplicationInfoPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginReplicationInfoProp", value)
}

// NewEnumpluginReplicationInfoPropFromValue returns a pointer to a valid EnumpluginReplicationInfoProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginReplicationInfoPropFromValue(v string) (*EnumpluginReplicationInfoProp, error) {
	ev := EnumpluginReplicationInfoProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginReplicationInfoProp: valid values are %v", v, AllowedEnumpluginReplicationInfoPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginReplicationInfoProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginReplicationInfoPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-replicationInfoProp value
func (v EnumpluginReplicationInfoProp) Ptr() *EnumpluginReplicationInfoProp {
	return &v
}

type NullableEnumpluginReplicationInfoProp struct {
	value *EnumpluginReplicationInfoProp
	isSet bool
}

func (v NullableEnumpluginReplicationInfoProp) Get() *EnumpluginReplicationInfoProp {
	return v.value
}

func (v *NullableEnumpluginReplicationInfoProp) Set(val *EnumpluginReplicationInfoProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginReplicationInfoProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginReplicationInfoProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginReplicationInfoProp(val *EnumpluginReplicationInfoProp) *NullableEnumpluginReplicationInfoProp {
	return &NullableEnumpluginReplicationInfoProp{value: val, isSet: true}
}

func (v NullableEnumpluginReplicationInfoProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginReplicationInfoProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
