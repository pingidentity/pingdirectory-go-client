/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// AddIdentityMapper200Response - struct for AddIdentityMapper200Response
type AddIdentityMapper200Response struct {
	AggregateIdentityMapperResponse         *AggregateIdentityMapperResponse
	ExactMatchIdentityMapperResponse        *ExactMatchIdentityMapperResponse
	GroovyScriptedIdentityMapperResponse    *GroovyScriptedIdentityMapperResponse
	RegularExpressionIdentityMapperResponse *RegularExpressionIdentityMapperResponse
	ThirdPartyIdentityMapperResponse        *ThirdPartyIdentityMapperResponse
}

// AggregateIdentityMapperResponseAsAddIdentityMapper200Response is a convenience function that returns AggregateIdentityMapperResponse wrapped in AddIdentityMapper200Response
func AggregateIdentityMapperResponseAsAddIdentityMapper200Response(v *AggregateIdentityMapperResponse) AddIdentityMapper200Response {
	return AddIdentityMapper200Response{
		AggregateIdentityMapperResponse: v,
	}
}

// ExactMatchIdentityMapperResponseAsAddIdentityMapper200Response is a convenience function that returns ExactMatchIdentityMapperResponse wrapped in AddIdentityMapper200Response
func ExactMatchIdentityMapperResponseAsAddIdentityMapper200Response(v *ExactMatchIdentityMapperResponse) AddIdentityMapper200Response {
	return AddIdentityMapper200Response{
		ExactMatchIdentityMapperResponse: v,
	}
}

// GroovyScriptedIdentityMapperResponseAsAddIdentityMapper200Response is a convenience function that returns GroovyScriptedIdentityMapperResponse wrapped in AddIdentityMapper200Response
func GroovyScriptedIdentityMapperResponseAsAddIdentityMapper200Response(v *GroovyScriptedIdentityMapperResponse) AddIdentityMapper200Response {
	return AddIdentityMapper200Response{
		GroovyScriptedIdentityMapperResponse: v,
	}
}

// RegularExpressionIdentityMapperResponseAsAddIdentityMapper200Response is a convenience function that returns RegularExpressionIdentityMapperResponse wrapped in AddIdentityMapper200Response
func RegularExpressionIdentityMapperResponseAsAddIdentityMapper200Response(v *RegularExpressionIdentityMapperResponse) AddIdentityMapper200Response {
	return AddIdentityMapper200Response{
		RegularExpressionIdentityMapperResponse: v,
	}
}

// ThirdPartyIdentityMapperResponseAsAddIdentityMapper200Response is a convenience function that returns ThirdPartyIdentityMapperResponse wrapped in AddIdentityMapper200Response
func ThirdPartyIdentityMapperResponseAsAddIdentityMapper200Response(v *ThirdPartyIdentityMapperResponse) AddIdentityMapper200Response {
	return AddIdentityMapper200Response{
		ThirdPartyIdentityMapperResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddIdentityMapper200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AggregateIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.AggregateIdentityMapperResponse)
	if err == nil {
		jsonAggregateIdentityMapperResponse, _ := json.Marshal(dst.AggregateIdentityMapperResponse)
		if string(jsonAggregateIdentityMapperResponse) == "{}" { // empty struct
			dst.AggregateIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.AggregateIdentityMapperResponse = nil
	}

	// try to unmarshal data into ExactMatchIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.ExactMatchIdentityMapperResponse)
	if err == nil {
		jsonExactMatchIdentityMapperResponse, _ := json.Marshal(dst.ExactMatchIdentityMapperResponse)
		if string(jsonExactMatchIdentityMapperResponse) == "{}" { // empty struct
			dst.ExactMatchIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.ExactMatchIdentityMapperResponse = nil
	}

	// try to unmarshal data into GroovyScriptedIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedIdentityMapperResponse)
	if err == nil {
		jsonGroovyScriptedIdentityMapperResponse, _ := json.Marshal(dst.GroovyScriptedIdentityMapperResponse)
		if string(jsonGroovyScriptedIdentityMapperResponse) == "{}" { // empty struct
			dst.GroovyScriptedIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedIdentityMapperResponse = nil
	}

	// try to unmarshal data into RegularExpressionIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.RegularExpressionIdentityMapperResponse)
	if err == nil {
		jsonRegularExpressionIdentityMapperResponse, _ := json.Marshal(dst.RegularExpressionIdentityMapperResponse)
		if string(jsonRegularExpressionIdentityMapperResponse) == "{}" { // empty struct
			dst.RegularExpressionIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.RegularExpressionIdentityMapperResponse = nil
	}

	// try to unmarshal data into ThirdPartyIdentityMapperResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyIdentityMapperResponse)
	if err == nil {
		jsonThirdPartyIdentityMapperResponse, _ := json.Marshal(dst.ThirdPartyIdentityMapperResponse)
		if string(jsonThirdPartyIdentityMapperResponse) == "{}" { // empty struct
			dst.ThirdPartyIdentityMapperResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyIdentityMapperResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AggregateIdentityMapperResponse = nil
		dst.ExactMatchIdentityMapperResponse = nil
		dst.GroovyScriptedIdentityMapperResponse = nil
		dst.RegularExpressionIdentityMapperResponse = nil
		dst.ThirdPartyIdentityMapperResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddIdentityMapper200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddIdentityMapper200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddIdentityMapper200Response) MarshalJSON() ([]byte, error) {
	if src.AggregateIdentityMapperResponse != nil {
		return json.Marshal(&src.AggregateIdentityMapperResponse)
	}

	if src.ExactMatchIdentityMapperResponse != nil {
		return json.Marshal(&src.ExactMatchIdentityMapperResponse)
	}

	if src.GroovyScriptedIdentityMapperResponse != nil {
		return json.Marshal(&src.GroovyScriptedIdentityMapperResponse)
	}

	if src.RegularExpressionIdentityMapperResponse != nil {
		return json.Marshal(&src.RegularExpressionIdentityMapperResponse)
	}

	if src.ThirdPartyIdentityMapperResponse != nil {
		return json.Marshal(&src.ThirdPartyIdentityMapperResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddIdentityMapper200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AggregateIdentityMapperResponse != nil {
		return obj.AggregateIdentityMapperResponse
	}

	if obj.ExactMatchIdentityMapperResponse != nil {
		return obj.ExactMatchIdentityMapperResponse
	}

	if obj.GroovyScriptedIdentityMapperResponse != nil {
		return obj.GroovyScriptedIdentityMapperResponse
	}

	if obj.RegularExpressionIdentityMapperResponse != nil {
		return obj.RegularExpressionIdentityMapperResponse
	}

	if obj.ThirdPartyIdentityMapperResponse != nil {
		return obj.ThirdPartyIdentityMapperResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddIdentityMapper200Response struct {
	value *AddIdentityMapper200Response
	isSet bool
}

func (v NullableAddIdentityMapper200Response) Get() *AddIdentityMapper200Response {
	return v.value
}

func (v *NullableAddIdentityMapper200Response) Set(val *AddIdentityMapper200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddIdentityMapper200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddIdentityMapper200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddIdentityMapper200Response(val *AddIdentityMapper200Response) *NullableAddIdentityMapper200Response {
	return &NullableAddIdentityMapper200Response{value: val, isSet: true}
}

func (v NullableAddIdentityMapper200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddIdentityMapper200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
