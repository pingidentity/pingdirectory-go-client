/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumclientConnectionPolicyAllowedFilterTypeProp Specifies the types of filter components that may be included in search requests from clients associated with this Client Connection Policy which have a non-baseObject scope.
type EnumclientConnectionPolicyAllowedFilterTypeProp string

// List of Enumclient-connection-policy-allowedFilterTypeProp
const (
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_AND               EnumclientConnectionPolicyAllowedFilterTypeProp = "and"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_OR                EnumclientConnectionPolicyAllowedFilterTypeProp = "or"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_NOT               EnumclientConnectionPolicyAllowedFilterTypeProp = "not"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_EQUALITY          EnumclientConnectionPolicyAllowedFilterTypeProp = "equality"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_SUB_INITIAL       EnumclientConnectionPolicyAllowedFilterTypeProp = "sub-initial"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_SUB_ANY           EnumclientConnectionPolicyAllowedFilterTypeProp = "sub-any"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_SUB_FINAL         EnumclientConnectionPolicyAllowedFilterTypeProp = "sub-final"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_GREATER_OR_EQUAL  EnumclientConnectionPolicyAllowedFilterTypeProp = "greater-or-equal"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_LESS_OR_EQUAL     EnumclientConnectionPolicyAllowedFilterTypeProp = "less-or-equal"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_PRESENT           EnumclientConnectionPolicyAllowedFilterTypeProp = "present"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_APPROXIMATE_MATCH EnumclientConnectionPolicyAllowedFilterTypeProp = "approximate-match"
	ENUMCLIENTCONNECTIONPOLICYALLOWEDFILTERTYPEPROP_EXTENSIBLE_MATCH  EnumclientConnectionPolicyAllowedFilterTypeProp = "extensible-match"
)

// All allowed values of EnumclientConnectionPolicyAllowedFilterTypeProp enum
var AllowedEnumclientConnectionPolicyAllowedFilterTypePropEnumValues = []EnumclientConnectionPolicyAllowedFilterTypeProp{
	"and",
	"or",
	"not",
	"equality",
	"sub-initial",
	"sub-any",
	"sub-final",
	"greater-or-equal",
	"less-or-equal",
	"present",
	"approximate-match",
	"extensible-match",
}

func (v *EnumclientConnectionPolicyAllowedFilterTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumclientConnectionPolicyAllowedFilterTypeProp(value)
	for _, existing := range AllowedEnumclientConnectionPolicyAllowedFilterTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumclientConnectionPolicyAllowedFilterTypeProp", value)
}

// NewEnumclientConnectionPolicyAllowedFilterTypePropFromValue returns a pointer to a valid EnumclientConnectionPolicyAllowedFilterTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumclientConnectionPolicyAllowedFilterTypePropFromValue(v string) (*EnumclientConnectionPolicyAllowedFilterTypeProp, error) {
	ev := EnumclientConnectionPolicyAllowedFilterTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumclientConnectionPolicyAllowedFilterTypeProp: valid values are %v", v, AllowedEnumclientConnectionPolicyAllowedFilterTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumclientConnectionPolicyAllowedFilterTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumclientConnectionPolicyAllowedFilterTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumclient-connection-policy-allowedFilterTypeProp value
func (v EnumclientConnectionPolicyAllowedFilterTypeProp) Ptr() *EnumclientConnectionPolicyAllowedFilterTypeProp {
	return &v
}

type NullableEnumclientConnectionPolicyAllowedFilterTypeProp struct {
	value *EnumclientConnectionPolicyAllowedFilterTypeProp
	isSet bool
}

func (v NullableEnumclientConnectionPolicyAllowedFilterTypeProp) Get() *EnumclientConnectionPolicyAllowedFilterTypeProp {
	return v.value
}

func (v *NullableEnumclientConnectionPolicyAllowedFilterTypeProp) Set(val *EnumclientConnectionPolicyAllowedFilterTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumclientConnectionPolicyAllowedFilterTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumclientConnectionPolicyAllowedFilterTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumclientConnectionPolicyAllowedFilterTypeProp(val *EnumclientConnectionPolicyAllowedFilterTypeProp) *NullableEnumclientConnectionPolicyAllowedFilterTypeProp {
	return &NullableEnumclientConnectionPolicyAllowedFilterTypeProp{value: val, isSet: true}
}

func (v NullableEnumclientConnectionPolicyAllowedFilterTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumclientConnectionPolicyAllowedFilterTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
