/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddGroovyScriptedCertificateMapperRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddGroovyScriptedCertificateMapperRequest{}

// AddGroovyScriptedCertificateMapperRequest struct for AddGroovyScriptedCertificateMapperRequest
type AddGroovyScriptedCertificateMapperRequest struct {
	// Name of the new Certificate Mapper
	MapperName string                                         `json:"mapperName"`
	Schemas    []EnumgroovyScriptedCertificateMapperSchemaUrn `json:"schemas"`
	// The fully-qualified name of the Groovy class providing the logic for the Groovy Scripted Certificate Mapper.
	ScriptClass string `json:"scriptClass"`
	// The set of arguments used to customize the behavior for the Scripted Certificate Mapper. Each configuration property should be given in the form 'name=value'.
	ScriptArgument []string `json:"scriptArgument,omitempty"`
	// A description for this Certificate Mapper
	Description *string `json:"description,omitempty"`
	// Indicates whether the Certificate Mapper is enabled.
	Enabled bool `json:"enabled"`
}

// NewAddGroovyScriptedCertificateMapperRequest instantiates a new AddGroovyScriptedCertificateMapperRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddGroovyScriptedCertificateMapperRequest(mapperName string, schemas []EnumgroovyScriptedCertificateMapperSchemaUrn, scriptClass string, enabled bool) *AddGroovyScriptedCertificateMapperRequest {
	this := AddGroovyScriptedCertificateMapperRequest{}
	this.MapperName = mapperName
	this.Schemas = schemas
	this.ScriptClass = scriptClass
	this.Enabled = enabled
	return &this
}

// NewAddGroovyScriptedCertificateMapperRequestWithDefaults instantiates a new AddGroovyScriptedCertificateMapperRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddGroovyScriptedCertificateMapperRequestWithDefaults() *AddGroovyScriptedCertificateMapperRequest {
	this := AddGroovyScriptedCertificateMapperRequest{}
	return &this
}

// GetMapperName returns the MapperName field value
func (o *AddGroovyScriptedCertificateMapperRequest) GetMapperName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapperName
}

// GetMapperNameOk returns a tuple with the MapperName field value
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetMapperNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MapperName, true
}

// SetMapperName sets field value
func (o *AddGroovyScriptedCertificateMapperRequest) SetMapperName(v string) {
	o.MapperName = v
}

// GetSchemas returns the Schemas field value
func (o *AddGroovyScriptedCertificateMapperRequest) GetSchemas() []EnumgroovyScriptedCertificateMapperSchemaUrn {
	if o == nil {
		var ret []EnumgroovyScriptedCertificateMapperSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetSchemasOk() ([]EnumgroovyScriptedCertificateMapperSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddGroovyScriptedCertificateMapperRequest) SetSchemas(v []EnumgroovyScriptedCertificateMapperSchemaUrn) {
	o.Schemas = v
}

// GetScriptClass returns the ScriptClass field value
func (o *AddGroovyScriptedCertificateMapperRequest) GetScriptClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ScriptClass
}

// GetScriptClassOk returns a tuple with the ScriptClass field value
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetScriptClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ScriptClass, true
}

// SetScriptClass sets field value
func (o *AddGroovyScriptedCertificateMapperRequest) SetScriptClass(v string) {
	o.ScriptClass = v
}

// GetScriptArgument returns the ScriptArgument field value if set, zero value otherwise.
func (o *AddGroovyScriptedCertificateMapperRequest) GetScriptArgument() []string {
	if o == nil || IsNil(o.ScriptArgument) {
		var ret []string
		return ret
	}
	return o.ScriptArgument
}

// GetScriptArgumentOk returns a tuple with the ScriptArgument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetScriptArgumentOk() ([]string, bool) {
	if o == nil || IsNil(o.ScriptArgument) {
		return nil, false
	}
	return o.ScriptArgument, true
}

// HasScriptArgument returns a boolean if a field has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) HasScriptArgument() bool {
	if o != nil && !IsNil(o.ScriptArgument) {
		return true
	}

	return false
}

// SetScriptArgument gets a reference to the given []string and assigns it to the ScriptArgument field.
func (o *AddGroovyScriptedCertificateMapperRequest) SetScriptArgument(v []string) {
	o.ScriptArgument = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddGroovyScriptedCertificateMapperRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddGroovyScriptedCertificateMapperRequest) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *AddGroovyScriptedCertificateMapperRequest) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *AddGroovyScriptedCertificateMapperRequest) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *AddGroovyScriptedCertificateMapperRequest) SetEnabled(v bool) {
	o.Enabled = v
}

func (o AddGroovyScriptedCertificateMapperRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddGroovyScriptedCertificateMapperRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mapperName"] = o.MapperName
	toSerialize["schemas"] = o.Schemas
	toSerialize["scriptClass"] = o.ScriptClass
	if !IsNil(o.ScriptArgument) {
		toSerialize["scriptArgument"] = o.ScriptArgument
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["enabled"] = o.Enabled
	return toSerialize, nil
}

type NullableAddGroovyScriptedCertificateMapperRequest struct {
	value *AddGroovyScriptedCertificateMapperRequest
	isSet bool
}

func (v NullableAddGroovyScriptedCertificateMapperRequest) Get() *AddGroovyScriptedCertificateMapperRequest {
	return v.value
}

func (v *NullableAddGroovyScriptedCertificateMapperRequest) Set(val *AddGroovyScriptedCertificateMapperRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddGroovyScriptedCertificateMapperRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddGroovyScriptedCertificateMapperRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddGroovyScriptedCertificateMapperRequest(val *AddGroovyScriptedCertificateMapperRequest) *NullableAddGroovyScriptedCertificateMapperRequest {
	return &NullableAddGroovyScriptedCertificateMapperRequest{value: val, isSet: true}
}

func (v NullableAddGroovyScriptedCertificateMapperRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddGroovyScriptedCertificateMapperRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
