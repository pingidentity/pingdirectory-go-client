/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumexternalServerBrokerConnectionSecurityProp The mechanism to use to secure communication with the directory server.
type EnumexternalServerBrokerConnectionSecurityProp string

// List of Enumexternal-server-broker-connectionSecurityProp
const (
	ENUMEXTERNALSERVERBROKERCONNECTIONSECURITYPROP_NONE     EnumexternalServerBrokerConnectionSecurityProp = "none"
	ENUMEXTERNALSERVERBROKERCONNECTIONSECURITYPROP_SSL      EnumexternalServerBrokerConnectionSecurityProp = "ssl"
	ENUMEXTERNALSERVERBROKERCONNECTIONSECURITYPROP_STARTTLS EnumexternalServerBrokerConnectionSecurityProp = "starttls"
)

// All allowed values of EnumexternalServerBrokerConnectionSecurityProp enum
var AllowedEnumexternalServerBrokerConnectionSecurityPropEnumValues = []EnumexternalServerBrokerConnectionSecurityProp{
	"none",
	"ssl",
	"starttls",
}

func (v *EnumexternalServerBrokerConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumexternalServerBrokerConnectionSecurityProp(value)
	for _, existing := range AllowedEnumexternalServerBrokerConnectionSecurityPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumexternalServerBrokerConnectionSecurityProp", value)
}

// NewEnumexternalServerBrokerConnectionSecurityPropFromValue returns a pointer to a valid EnumexternalServerBrokerConnectionSecurityProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumexternalServerBrokerConnectionSecurityPropFromValue(v string) (*EnumexternalServerBrokerConnectionSecurityProp, error) {
	ev := EnumexternalServerBrokerConnectionSecurityProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumexternalServerBrokerConnectionSecurityProp: valid values are %v", v, AllowedEnumexternalServerBrokerConnectionSecurityPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumexternalServerBrokerConnectionSecurityProp) IsValid() bool {
	for _, existing := range AllowedEnumexternalServerBrokerConnectionSecurityPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumexternal-server-broker-connectionSecurityProp value
func (v EnumexternalServerBrokerConnectionSecurityProp) Ptr() *EnumexternalServerBrokerConnectionSecurityProp {
	return &v
}

type NullableEnumexternalServerBrokerConnectionSecurityProp struct {
	value *EnumexternalServerBrokerConnectionSecurityProp
	isSet bool
}

func (v NullableEnumexternalServerBrokerConnectionSecurityProp) Get() *EnumexternalServerBrokerConnectionSecurityProp {
	return v.value
}

func (v *NullableEnumexternalServerBrokerConnectionSecurityProp) Set(val *EnumexternalServerBrokerConnectionSecurityProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumexternalServerBrokerConnectionSecurityProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumexternalServerBrokerConnectionSecurityProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumexternalServerBrokerConnectionSecurityProp(val *EnumexternalServerBrokerConnectionSecurityProp) *NullableEnumexternalServerBrokerConnectionSecurityProp {
	return &NullableEnumexternalServerBrokerConnectionSecurityProp{value: val, isSet: true}
}

func (v NullableEnumexternalServerBrokerConnectionSecurityProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumexternalServerBrokerConnectionSecurityProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
