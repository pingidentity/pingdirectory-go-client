/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// EnumpluginHostInfoProp Specifies the level of detail to include about the host system resource utilization including CPU, memory, disk and network activity.
type EnumpluginHostInfoProp string

// List of Enumplugin-hostInfoProp
const (
	ENUMPLUGINHOSTINFOPROP_CPU     EnumpluginHostInfoProp = "cpu"
	ENUMPLUGINHOSTINFOPROP_DISK    EnumpluginHostInfoProp = "disk"
	ENUMPLUGINHOSTINFOPROP_NETWORK EnumpluginHostInfoProp = "network"
)

// All allowed values of EnumpluginHostInfoProp enum
var AllowedEnumpluginHostInfoPropEnumValues = []EnumpluginHostInfoProp{
	"cpu",
	"disk",
	"network",
}

func (v *EnumpluginHostInfoProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumpluginHostInfoProp(value)
	for _, existing := range AllowedEnumpluginHostInfoPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumpluginHostInfoProp", value)
}

// NewEnumpluginHostInfoPropFromValue returns a pointer to a valid EnumpluginHostInfoProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumpluginHostInfoPropFromValue(v string) (*EnumpluginHostInfoProp, error) {
	ev := EnumpluginHostInfoProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumpluginHostInfoProp: valid values are %v", v, AllowedEnumpluginHostInfoPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumpluginHostInfoProp) IsValid() bool {
	for _, existing := range AllowedEnumpluginHostInfoPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumplugin-hostInfoProp value
func (v EnumpluginHostInfoProp) Ptr() *EnumpluginHostInfoProp {
	return &v
}

type NullableEnumpluginHostInfoProp struct {
	value *EnumpluginHostInfoProp
	isSet bool
}

func (v NullableEnumpluginHostInfoProp) Get() *EnumpluginHostInfoProp {
	return v.value
}

func (v *NullableEnumpluginHostInfoProp) Set(val *EnumpluginHostInfoProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumpluginHostInfoProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumpluginHostInfoProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumpluginHostInfoProp(val *EnumpluginHostInfoProp) *NullableEnumpluginHostInfoProp {
	return &NullableEnumpluginHostInfoProp{value: val, isSet: true}
}

func (v NullableEnumpluginHostInfoProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumpluginHostInfoProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
