/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
	"fmt"
)

// GetPlugin200Response - struct for GetPlugin200Response
type GetPlugin200Response struct {
	AttributeMapperPluginResponse                                  *AttributeMapperPluginResponse
	ChangeSubscriptionNotificationPluginResponse                   *ChangeSubscriptionNotificationPluginResponse
	ChangelogPasswordEncryptionPluginResponse                      *ChangelogPasswordEncryptionPluginResponse
	CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse *CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse
	CleanUpExpiredPingfederatePersistentSessionsPluginResponse     *CleanUpExpiredPingfederatePersistentSessionsPluginResponse
	CleanUpInactivePingfederatePersistentSessionsPluginResponse    *CleanUpInactivePingfederatePersistentSessionsPluginResponse
	ComposedAttributePluginResponse                                *ComposedAttributePluginResponse
	DelayPluginResponse                                            *DelayPluginResponse
	DnMapperPluginResponse                                         *DnMapperPluginResponse
	EncryptAttributeValuesPluginResponse                           *EncryptAttributeValuesPluginResponse
	GroovyScriptedPluginResponse                                   *GroovyScriptedPluginResponse
	InternalSearchRatePluginResponse                               *InternalSearchRatePluginResponse
	LastAccessTimePluginResponse                                   *LastAccessTimePluginResponse
	LastModPluginResponse                                          *LastModPluginResponse
	LdapResultCodeTrackerPluginResponse                            *LdapResultCodeTrackerPluginResponse
	ModifiablePasswordPolicyStatePluginResponse                    *ModifiablePasswordPolicyStatePluginResponse
	MonitorHistoryPluginResponse                                   *MonitorHistoryPluginResponse
	PassThroughAuthenticationPluginResponse                        *PassThroughAuthenticationPluginResponse
	PasswordPolicyImportPluginResponse                             *PasswordPolicyImportPluginResponse
	PeriodicGcPluginResponse                                       *PeriodicGcPluginResponse
	PeriodicStatsLoggerPluginResponse                              *PeriodicStatsLoggerPluginResponse
	PingOnePassThroughAuthenticationPluginResponse                 *PingOnePassThroughAuthenticationPluginResponse
	PluggablePassThroughAuthenticationPluginResponse               *PluggablePassThroughAuthenticationPluginResponse
	ProcessingTimeHistogramPluginResponse                          *ProcessingTimeHistogramPluginResponse
	ProfilerPluginResponse                                         *ProfilerPluginResponse
	PurgeExpiredDataPluginResponse                                 *PurgeExpiredDataPluginResponse
	ReferentialIntegrityPluginResponse                             *ReferentialIntegrityPluginResponse
	ReferralOnUpdatePluginResponse                                 *ReferralOnUpdatePluginResponse
	SearchShutdownPluginResponse                                   *SearchShutdownPluginResponse
	SevenBitCleanPluginResponse                                    *SevenBitCleanPluginResponse
	SimpleToExternalBindPluginResponse                             *SimpleToExternalBindPluginResponse
	SnmpSubagentPluginResponse                                     *SnmpSubagentPluginResponse
	StatsCollectorPluginResponse                                   *StatsCollectorPluginResponse
	SubOperationTimingPluginResponse                               *SubOperationTimingPluginResponse
	ThirdPartyPluginResponse                                       *ThirdPartyPluginResponse
	UniqueAttributePluginResponse                                  *UniqueAttributePluginResponse
}

// AttributeMapperPluginResponseAsGetPlugin200Response is a convenience function that returns AttributeMapperPluginResponse wrapped in GetPlugin200Response
func AttributeMapperPluginResponseAsGetPlugin200Response(v *AttributeMapperPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		AttributeMapperPluginResponse: v,
	}
}

// ChangeSubscriptionNotificationPluginResponseAsGetPlugin200Response is a convenience function that returns ChangeSubscriptionNotificationPluginResponse wrapped in GetPlugin200Response
func ChangeSubscriptionNotificationPluginResponseAsGetPlugin200Response(v *ChangeSubscriptionNotificationPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ChangeSubscriptionNotificationPluginResponse: v,
	}
}

// ChangelogPasswordEncryptionPluginResponseAsGetPlugin200Response is a convenience function that returns ChangelogPasswordEncryptionPluginResponse wrapped in GetPlugin200Response
func ChangelogPasswordEncryptionPluginResponseAsGetPlugin200Response(v *ChangelogPasswordEncryptionPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ChangelogPasswordEncryptionPluginResponse: v,
	}
}

// CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponseAsGetPlugin200Response is a convenience function that returns CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse wrapped in GetPlugin200Response
func CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponseAsGetPlugin200Response(v *CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse: v,
	}
}

// CleanUpExpiredPingfederatePersistentSessionsPluginResponseAsGetPlugin200Response is a convenience function that returns CleanUpExpiredPingfederatePersistentSessionsPluginResponse wrapped in GetPlugin200Response
func CleanUpExpiredPingfederatePersistentSessionsPluginResponseAsGetPlugin200Response(v *CleanUpExpiredPingfederatePersistentSessionsPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		CleanUpExpiredPingfederatePersistentSessionsPluginResponse: v,
	}
}

// CleanUpInactivePingfederatePersistentSessionsPluginResponseAsGetPlugin200Response is a convenience function that returns CleanUpInactivePingfederatePersistentSessionsPluginResponse wrapped in GetPlugin200Response
func CleanUpInactivePingfederatePersistentSessionsPluginResponseAsGetPlugin200Response(v *CleanUpInactivePingfederatePersistentSessionsPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		CleanUpInactivePingfederatePersistentSessionsPluginResponse: v,
	}
}

// ComposedAttributePluginResponseAsGetPlugin200Response is a convenience function that returns ComposedAttributePluginResponse wrapped in GetPlugin200Response
func ComposedAttributePluginResponseAsGetPlugin200Response(v *ComposedAttributePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ComposedAttributePluginResponse: v,
	}
}

// DelayPluginResponseAsGetPlugin200Response is a convenience function that returns DelayPluginResponse wrapped in GetPlugin200Response
func DelayPluginResponseAsGetPlugin200Response(v *DelayPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		DelayPluginResponse: v,
	}
}

// DnMapperPluginResponseAsGetPlugin200Response is a convenience function that returns DnMapperPluginResponse wrapped in GetPlugin200Response
func DnMapperPluginResponseAsGetPlugin200Response(v *DnMapperPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		DnMapperPluginResponse: v,
	}
}

// EncryptAttributeValuesPluginResponseAsGetPlugin200Response is a convenience function that returns EncryptAttributeValuesPluginResponse wrapped in GetPlugin200Response
func EncryptAttributeValuesPluginResponseAsGetPlugin200Response(v *EncryptAttributeValuesPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		EncryptAttributeValuesPluginResponse: v,
	}
}

// GroovyScriptedPluginResponseAsGetPlugin200Response is a convenience function that returns GroovyScriptedPluginResponse wrapped in GetPlugin200Response
func GroovyScriptedPluginResponseAsGetPlugin200Response(v *GroovyScriptedPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		GroovyScriptedPluginResponse: v,
	}
}

// InternalSearchRatePluginResponseAsGetPlugin200Response is a convenience function that returns InternalSearchRatePluginResponse wrapped in GetPlugin200Response
func InternalSearchRatePluginResponseAsGetPlugin200Response(v *InternalSearchRatePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		InternalSearchRatePluginResponse: v,
	}
}

// LastAccessTimePluginResponseAsGetPlugin200Response is a convenience function that returns LastAccessTimePluginResponse wrapped in GetPlugin200Response
func LastAccessTimePluginResponseAsGetPlugin200Response(v *LastAccessTimePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		LastAccessTimePluginResponse: v,
	}
}

// LastModPluginResponseAsGetPlugin200Response is a convenience function that returns LastModPluginResponse wrapped in GetPlugin200Response
func LastModPluginResponseAsGetPlugin200Response(v *LastModPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		LastModPluginResponse: v,
	}
}

// LdapResultCodeTrackerPluginResponseAsGetPlugin200Response is a convenience function that returns LdapResultCodeTrackerPluginResponse wrapped in GetPlugin200Response
func LdapResultCodeTrackerPluginResponseAsGetPlugin200Response(v *LdapResultCodeTrackerPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		LdapResultCodeTrackerPluginResponse: v,
	}
}

// ModifiablePasswordPolicyStatePluginResponseAsGetPlugin200Response is a convenience function that returns ModifiablePasswordPolicyStatePluginResponse wrapped in GetPlugin200Response
func ModifiablePasswordPolicyStatePluginResponseAsGetPlugin200Response(v *ModifiablePasswordPolicyStatePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ModifiablePasswordPolicyStatePluginResponse: v,
	}
}

// MonitorHistoryPluginResponseAsGetPlugin200Response is a convenience function that returns MonitorHistoryPluginResponse wrapped in GetPlugin200Response
func MonitorHistoryPluginResponseAsGetPlugin200Response(v *MonitorHistoryPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		MonitorHistoryPluginResponse: v,
	}
}

// PassThroughAuthenticationPluginResponseAsGetPlugin200Response is a convenience function that returns PassThroughAuthenticationPluginResponse wrapped in GetPlugin200Response
func PassThroughAuthenticationPluginResponseAsGetPlugin200Response(v *PassThroughAuthenticationPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PassThroughAuthenticationPluginResponse: v,
	}
}

// PasswordPolicyImportPluginResponseAsGetPlugin200Response is a convenience function that returns PasswordPolicyImportPluginResponse wrapped in GetPlugin200Response
func PasswordPolicyImportPluginResponseAsGetPlugin200Response(v *PasswordPolicyImportPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PasswordPolicyImportPluginResponse: v,
	}
}

// PeriodicGcPluginResponseAsGetPlugin200Response is a convenience function that returns PeriodicGcPluginResponse wrapped in GetPlugin200Response
func PeriodicGcPluginResponseAsGetPlugin200Response(v *PeriodicGcPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PeriodicGcPluginResponse: v,
	}
}

// PeriodicStatsLoggerPluginResponseAsGetPlugin200Response is a convenience function that returns PeriodicStatsLoggerPluginResponse wrapped in GetPlugin200Response
func PeriodicStatsLoggerPluginResponseAsGetPlugin200Response(v *PeriodicStatsLoggerPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PeriodicStatsLoggerPluginResponse: v,
	}
}

// PingOnePassThroughAuthenticationPluginResponseAsGetPlugin200Response is a convenience function that returns PingOnePassThroughAuthenticationPluginResponse wrapped in GetPlugin200Response
func PingOnePassThroughAuthenticationPluginResponseAsGetPlugin200Response(v *PingOnePassThroughAuthenticationPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PingOnePassThroughAuthenticationPluginResponse: v,
	}
}

// PluggablePassThroughAuthenticationPluginResponseAsGetPlugin200Response is a convenience function that returns PluggablePassThroughAuthenticationPluginResponse wrapped in GetPlugin200Response
func PluggablePassThroughAuthenticationPluginResponseAsGetPlugin200Response(v *PluggablePassThroughAuthenticationPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PluggablePassThroughAuthenticationPluginResponse: v,
	}
}

// ProcessingTimeHistogramPluginResponseAsGetPlugin200Response is a convenience function that returns ProcessingTimeHistogramPluginResponse wrapped in GetPlugin200Response
func ProcessingTimeHistogramPluginResponseAsGetPlugin200Response(v *ProcessingTimeHistogramPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ProcessingTimeHistogramPluginResponse: v,
	}
}

// ProfilerPluginResponseAsGetPlugin200Response is a convenience function that returns ProfilerPluginResponse wrapped in GetPlugin200Response
func ProfilerPluginResponseAsGetPlugin200Response(v *ProfilerPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ProfilerPluginResponse: v,
	}
}

// PurgeExpiredDataPluginResponseAsGetPlugin200Response is a convenience function that returns PurgeExpiredDataPluginResponse wrapped in GetPlugin200Response
func PurgeExpiredDataPluginResponseAsGetPlugin200Response(v *PurgeExpiredDataPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		PurgeExpiredDataPluginResponse: v,
	}
}

// ReferentialIntegrityPluginResponseAsGetPlugin200Response is a convenience function that returns ReferentialIntegrityPluginResponse wrapped in GetPlugin200Response
func ReferentialIntegrityPluginResponseAsGetPlugin200Response(v *ReferentialIntegrityPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ReferentialIntegrityPluginResponse: v,
	}
}

// ReferralOnUpdatePluginResponseAsGetPlugin200Response is a convenience function that returns ReferralOnUpdatePluginResponse wrapped in GetPlugin200Response
func ReferralOnUpdatePluginResponseAsGetPlugin200Response(v *ReferralOnUpdatePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ReferralOnUpdatePluginResponse: v,
	}
}

// SearchShutdownPluginResponseAsGetPlugin200Response is a convenience function that returns SearchShutdownPluginResponse wrapped in GetPlugin200Response
func SearchShutdownPluginResponseAsGetPlugin200Response(v *SearchShutdownPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		SearchShutdownPluginResponse: v,
	}
}

// SevenBitCleanPluginResponseAsGetPlugin200Response is a convenience function that returns SevenBitCleanPluginResponse wrapped in GetPlugin200Response
func SevenBitCleanPluginResponseAsGetPlugin200Response(v *SevenBitCleanPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		SevenBitCleanPluginResponse: v,
	}
}

// SimpleToExternalBindPluginResponseAsGetPlugin200Response is a convenience function that returns SimpleToExternalBindPluginResponse wrapped in GetPlugin200Response
func SimpleToExternalBindPluginResponseAsGetPlugin200Response(v *SimpleToExternalBindPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		SimpleToExternalBindPluginResponse: v,
	}
}

// SnmpSubagentPluginResponseAsGetPlugin200Response is a convenience function that returns SnmpSubagentPluginResponse wrapped in GetPlugin200Response
func SnmpSubagentPluginResponseAsGetPlugin200Response(v *SnmpSubagentPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		SnmpSubagentPluginResponse: v,
	}
}

// StatsCollectorPluginResponseAsGetPlugin200Response is a convenience function that returns StatsCollectorPluginResponse wrapped in GetPlugin200Response
func StatsCollectorPluginResponseAsGetPlugin200Response(v *StatsCollectorPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		StatsCollectorPluginResponse: v,
	}
}

// SubOperationTimingPluginResponseAsGetPlugin200Response is a convenience function that returns SubOperationTimingPluginResponse wrapped in GetPlugin200Response
func SubOperationTimingPluginResponseAsGetPlugin200Response(v *SubOperationTimingPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		SubOperationTimingPluginResponse: v,
	}
}

// ThirdPartyPluginResponseAsGetPlugin200Response is a convenience function that returns ThirdPartyPluginResponse wrapped in GetPlugin200Response
func ThirdPartyPluginResponseAsGetPlugin200Response(v *ThirdPartyPluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		ThirdPartyPluginResponse: v,
	}
}

// UniqueAttributePluginResponseAsGetPlugin200Response is a convenience function that returns UniqueAttributePluginResponse wrapped in GetPlugin200Response
func UniqueAttributePluginResponseAsGetPlugin200Response(v *UniqueAttributePluginResponse) GetPlugin200Response {
	return GetPlugin200Response{
		UniqueAttributePluginResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *GetPlugin200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AttributeMapperPluginResponse
	err = newStrictDecoder(data).Decode(&dst.AttributeMapperPluginResponse)
	if err == nil {
		jsonAttributeMapperPluginResponse, _ := json.Marshal(dst.AttributeMapperPluginResponse)
		if string(jsonAttributeMapperPluginResponse) == "{}" { // empty struct
			dst.AttributeMapperPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.AttributeMapperPluginResponse = nil
	}

	// try to unmarshal data into ChangeSubscriptionNotificationPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ChangeSubscriptionNotificationPluginResponse)
	if err == nil {
		jsonChangeSubscriptionNotificationPluginResponse, _ := json.Marshal(dst.ChangeSubscriptionNotificationPluginResponse)
		if string(jsonChangeSubscriptionNotificationPluginResponse) == "{}" { // empty struct
			dst.ChangeSubscriptionNotificationPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ChangeSubscriptionNotificationPluginResponse = nil
	}

	// try to unmarshal data into ChangelogPasswordEncryptionPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ChangelogPasswordEncryptionPluginResponse)
	if err == nil {
		jsonChangelogPasswordEncryptionPluginResponse, _ := json.Marshal(dst.ChangelogPasswordEncryptionPluginResponse)
		if string(jsonChangelogPasswordEncryptionPluginResponse) == "{}" { // empty struct
			dst.ChangelogPasswordEncryptionPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ChangelogPasswordEncryptionPluginResponse = nil
	}

	// try to unmarshal data into CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse
	err = newStrictDecoder(data).Decode(&dst.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse)
	if err == nil {
		jsonCleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse, _ := json.Marshal(dst.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse)
		if string(jsonCleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse) == "{}" { // empty struct
			dst.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse = nil
	}

	// try to unmarshal data into CleanUpExpiredPingfederatePersistentSessionsPluginResponse
	err = newStrictDecoder(data).Decode(&dst.CleanUpExpiredPingfederatePersistentSessionsPluginResponse)
	if err == nil {
		jsonCleanUpExpiredPingfederatePersistentSessionsPluginResponse, _ := json.Marshal(dst.CleanUpExpiredPingfederatePersistentSessionsPluginResponse)
		if string(jsonCleanUpExpiredPingfederatePersistentSessionsPluginResponse) == "{}" { // empty struct
			dst.CleanUpExpiredPingfederatePersistentSessionsPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.CleanUpExpiredPingfederatePersistentSessionsPluginResponse = nil
	}

	// try to unmarshal data into CleanUpInactivePingfederatePersistentSessionsPluginResponse
	err = newStrictDecoder(data).Decode(&dst.CleanUpInactivePingfederatePersistentSessionsPluginResponse)
	if err == nil {
		jsonCleanUpInactivePingfederatePersistentSessionsPluginResponse, _ := json.Marshal(dst.CleanUpInactivePingfederatePersistentSessionsPluginResponse)
		if string(jsonCleanUpInactivePingfederatePersistentSessionsPluginResponse) == "{}" { // empty struct
			dst.CleanUpInactivePingfederatePersistentSessionsPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.CleanUpInactivePingfederatePersistentSessionsPluginResponse = nil
	}

	// try to unmarshal data into ComposedAttributePluginResponse
	err = newStrictDecoder(data).Decode(&dst.ComposedAttributePluginResponse)
	if err == nil {
		jsonComposedAttributePluginResponse, _ := json.Marshal(dst.ComposedAttributePluginResponse)
		if string(jsonComposedAttributePluginResponse) == "{}" { // empty struct
			dst.ComposedAttributePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ComposedAttributePluginResponse = nil
	}

	// try to unmarshal data into DelayPluginResponse
	err = newStrictDecoder(data).Decode(&dst.DelayPluginResponse)
	if err == nil {
		jsonDelayPluginResponse, _ := json.Marshal(dst.DelayPluginResponse)
		if string(jsonDelayPluginResponse) == "{}" { // empty struct
			dst.DelayPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.DelayPluginResponse = nil
	}

	// try to unmarshal data into DnMapperPluginResponse
	err = newStrictDecoder(data).Decode(&dst.DnMapperPluginResponse)
	if err == nil {
		jsonDnMapperPluginResponse, _ := json.Marshal(dst.DnMapperPluginResponse)
		if string(jsonDnMapperPluginResponse) == "{}" { // empty struct
			dst.DnMapperPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.DnMapperPluginResponse = nil
	}

	// try to unmarshal data into EncryptAttributeValuesPluginResponse
	err = newStrictDecoder(data).Decode(&dst.EncryptAttributeValuesPluginResponse)
	if err == nil {
		jsonEncryptAttributeValuesPluginResponse, _ := json.Marshal(dst.EncryptAttributeValuesPluginResponse)
		if string(jsonEncryptAttributeValuesPluginResponse) == "{}" { // empty struct
			dst.EncryptAttributeValuesPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.EncryptAttributeValuesPluginResponse = nil
	}

	// try to unmarshal data into GroovyScriptedPluginResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedPluginResponse)
	if err == nil {
		jsonGroovyScriptedPluginResponse, _ := json.Marshal(dst.GroovyScriptedPluginResponse)
		if string(jsonGroovyScriptedPluginResponse) == "{}" { // empty struct
			dst.GroovyScriptedPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedPluginResponse = nil
	}

	// try to unmarshal data into InternalSearchRatePluginResponse
	err = newStrictDecoder(data).Decode(&dst.InternalSearchRatePluginResponse)
	if err == nil {
		jsonInternalSearchRatePluginResponse, _ := json.Marshal(dst.InternalSearchRatePluginResponse)
		if string(jsonInternalSearchRatePluginResponse) == "{}" { // empty struct
			dst.InternalSearchRatePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.InternalSearchRatePluginResponse = nil
	}

	// try to unmarshal data into LastAccessTimePluginResponse
	err = newStrictDecoder(data).Decode(&dst.LastAccessTimePluginResponse)
	if err == nil {
		jsonLastAccessTimePluginResponse, _ := json.Marshal(dst.LastAccessTimePluginResponse)
		if string(jsonLastAccessTimePluginResponse) == "{}" { // empty struct
			dst.LastAccessTimePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.LastAccessTimePluginResponse = nil
	}

	// try to unmarshal data into LastModPluginResponse
	err = newStrictDecoder(data).Decode(&dst.LastModPluginResponse)
	if err == nil {
		jsonLastModPluginResponse, _ := json.Marshal(dst.LastModPluginResponse)
		if string(jsonLastModPluginResponse) == "{}" { // empty struct
			dst.LastModPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.LastModPluginResponse = nil
	}

	// try to unmarshal data into LdapResultCodeTrackerPluginResponse
	err = newStrictDecoder(data).Decode(&dst.LdapResultCodeTrackerPluginResponse)
	if err == nil {
		jsonLdapResultCodeTrackerPluginResponse, _ := json.Marshal(dst.LdapResultCodeTrackerPluginResponse)
		if string(jsonLdapResultCodeTrackerPluginResponse) == "{}" { // empty struct
			dst.LdapResultCodeTrackerPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.LdapResultCodeTrackerPluginResponse = nil
	}

	// try to unmarshal data into ModifiablePasswordPolicyStatePluginResponse
	err = newStrictDecoder(data).Decode(&dst.ModifiablePasswordPolicyStatePluginResponse)
	if err == nil {
		jsonModifiablePasswordPolicyStatePluginResponse, _ := json.Marshal(dst.ModifiablePasswordPolicyStatePluginResponse)
		if string(jsonModifiablePasswordPolicyStatePluginResponse) == "{}" { // empty struct
			dst.ModifiablePasswordPolicyStatePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ModifiablePasswordPolicyStatePluginResponse = nil
	}

	// try to unmarshal data into MonitorHistoryPluginResponse
	err = newStrictDecoder(data).Decode(&dst.MonitorHistoryPluginResponse)
	if err == nil {
		jsonMonitorHistoryPluginResponse, _ := json.Marshal(dst.MonitorHistoryPluginResponse)
		if string(jsonMonitorHistoryPluginResponse) == "{}" { // empty struct
			dst.MonitorHistoryPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.MonitorHistoryPluginResponse = nil
	}

	// try to unmarshal data into PassThroughAuthenticationPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PassThroughAuthenticationPluginResponse)
	if err == nil {
		jsonPassThroughAuthenticationPluginResponse, _ := json.Marshal(dst.PassThroughAuthenticationPluginResponse)
		if string(jsonPassThroughAuthenticationPluginResponse) == "{}" { // empty struct
			dst.PassThroughAuthenticationPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PassThroughAuthenticationPluginResponse = nil
	}

	// try to unmarshal data into PasswordPolicyImportPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PasswordPolicyImportPluginResponse)
	if err == nil {
		jsonPasswordPolicyImportPluginResponse, _ := json.Marshal(dst.PasswordPolicyImportPluginResponse)
		if string(jsonPasswordPolicyImportPluginResponse) == "{}" { // empty struct
			dst.PasswordPolicyImportPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PasswordPolicyImportPluginResponse = nil
	}

	// try to unmarshal data into PeriodicGcPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PeriodicGcPluginResponse)
	if err == nil {
		jsonPeriodicGcPluginResponse, _ := json.Marshal(dst.PeriodicGcPluginResponse)
		if string(jsonPeriodicGcPluginResponse) == "{}" { // empty struct
			dst.PeriodicGcPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PeriodicGcPluginResponse = nil
	}

	// try to unmarshal data into PeriodicStatsLoggerPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PeriodicStatsLoggerPluginResponse)
	if err == nil {
		jsonPeriodicStatsLoggerPluginResponse, _ := json.Marshal(dst.PeriodicStatsLoggerPluginResponse)
		if string(jsonPeriodicStatsLoggerPluginResponse) == "{}" { // empty struct
			dst.PeriodicStatsLoggerPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PeriodicStatsLoggerPluginResponse = nil
	}

	// try to unmarshal data into PingOnePassThroughAuthenticationPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PingOnePassThroughAuthenticationPluginResponse)
	if err == nil {
		jsonPingOnePassThroughAuthenticationPluginResponse, _ := json.Marshal(dst.PingOnePassThroughAuthenticationPluginResponse)
		if string(jsonPingOnePassThroughAuthenticationPluginResponse) == "{}" { // empty struct
			dst.PingOnePassThroughAuthenticationPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PingOnePassThroughAuthenticationPluginResponse = nil
	}

	// try to unmarshal data into PluggablePassThroughAuthenticationPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PluggablePassThroughAuthenticationPluginResponse)
	if err == nil {
		jsonPluggablePassThroughAuthenticationPluginResponse, _ := json.Marshal(dst.PluggablePassThroughAuthenticationPluginResponse)
		if string(jsonPluggablePassThroughAuthenticationPluginResponse) == "{}" { // empty struct
			dst.PluggablePassThroughAuthenticationPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PluggablePassThroughAuthenticationPluginResponse = nil
	}

	// try to unmarshal data into ProcessingTimeHistogramPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ProcessingTimeHistogramPluginResponse)
	if err == nil {
		jsonProcessingTimeHistogramPluginResponse, _ := json.Marshal(dst.ProcessingTimeHistogramPluginResponse)
		if string(jsonProcessingTimeHistogramPluginResponse) == "{}" { // empty struct
			dst.ProcessingTimeHistogramPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ProcessingTimeHistogramPluginResponse = nil
	}

	// try to unmarshal data into ProfilerPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ProfilerPluginResponse)
	if err == nil {
		jsonProfilerPluginResponse, _ := json.Marshal(dst.ProfilerPluginResponse)
		if string(jsonProfilerPluginResponse) == "{}" { // empty struct
			dst.ProfilerPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ProfilerPluginResponse = nil
	}

	// try to unmarshal data into PurgeExpiredDataPluginResponse
	err = newStrictDecoder(data).Decode(&dst.PurgeExpiredDataPluginResponse)
	if err == nil {
		jsonPurgeExpiredDataPluginResponse, _ := json.Marshal(dst.PurgeExpiredDataPluginResponse)
		if string(jsonPurgeExpiredDataPluginResponse) == "{}" { // empty struct
			dst.PurgeExpiredDataPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.PurgeExpiredDataPluginResponse = nil
	}

	// try to unmarshal data into ReferentialIntegrityPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ReferentialIntegrityPluginResponse)
	if err == nil {
		jsonReferentialIntegrityPluginResponse, _ := json.Marshal(dst.ReferentialIntegrityPluginResponse)
		if string(jsonReferentialIntegrityPluginResponse) == "{}" { // empty struct
			dst.ReferentialIntegrityPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ReferentialIntegrityPluginResponse = nil
	}

	// try to unmarshal data into ReferralOnUpdatePluginResponse
	err = newStrictDecoder(data).Decode(&dst.ReferralOnUpdatePluginResponse)
	if err == nil {
		jsonReferralOnUpdatePluginResponse, _ := json.Marshal(dst.ReferralOnUpdatePluginResponse)
		if string(jsonReferralOnUpdatePluginResponse) == "{}" { // empty struct
			dst.ReferralOnUpdatePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ReferralOnUpdatePluginResponse = nil
	}

	// try to unmarshal data into SearchShutdownPluginResponse
	err = newStrictDecoder(data).Decode(&dst.SearchShutdownPluginResponse)
	if err == nil {
		jsonSearchShutdownPluginResponse, _ := json.Marshal(dst.SearchShutdownPluginResponse)
		if string(jsonSearchShutdownPluginResponse) == "{}" { // empty struct
			dst.SearchShutdownPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.SearchShutdownPluginResponse = nil
	}

	// try to unmarshal data into SevenBitCleanPluginResponse
	err = newStrictDecoder(data).Decode(&dst.SevenBitCleanPluginResponse)
	if err == nil {
		jsonSevenBitCleanPluginResponse, _ := json.Marshal(dst.SevenBitCleanPluginResponse)
		if string(jsonSevenBitCleanPluginResponse) == "{}" { // empty struct
			dst.SevenBitCleanPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.SevenBitCleanPluginResponse = nil
	}

	// try to unmarshal data into SimpleToExternalBindPluginResponse
	err = newStrictDecoder(data).Decode(&dst.SimpleToExternalBindPluginResponse)
	if err == nil {
		jsonSimpleToExternalBindPluginResponse, _ := json.Marshal(dst.SimpleToExternalBindPluginResponse)
		if string(jsonSimpleToExternalBindPluginResponse) == "{}" { // empty struct
			dst.SimpleToExternalBindPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.SimpleToExternalBindPluginResponse = nil
	}

	// try to unmarshal data into SnmpSubagentPluginResponse
	err = newStrictDecoder(data).Decode(&dst.SnmpSubagentPluginResponse)
	if err == nil {
		jsonSnmpSubagentPluginResponse, _ := json.Marshal(dst.SnmpSubagentPluginResponse)
		if string(jsonSnmpSubagentPluginResponse) == "{}" { // empty struct
			dst.SnmpSubagentPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.SnmpSubagentPluginResponse = nil
	}

	// try to unmarshal data into StatsCollectorPluginResponse
	err = newStrictDecoder(data).Decode(&dst.StatsCollectorPluginResponse)
	if err == nil {
		jsonStatsCollectorPluginResponse, _ := json.Marshal(dst.StatsCollectorPluginResponse)
		if string(jsonStatsCollectorPluginResponse) == "{}" { // empty struct
			dst.StatsCollectorPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.StatsCollectorPluginResponse = nil
	}

	// try to unmarshal data into SubOperationTimingPluginResponse
	err = newStrictDecoder(data).Decode(&dst.SubOperationTimingPluginResponse)
	if err == nil {
		jsonSubOperationTimingPluginResponse, _ := json.Marshal(dst.SubOperationTimingPluginResponse)
		if string(jsonSubOperationTimingPluginResponse) == "{}" { // empty struct
			dst.SubOperationTimingPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.SubOperationTimingPluginResponse = nil
	}

	// try to unmarshal data into ThirdPartyPluginResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyPluginResponse)
	if err == nil {
		jsonThirdPartyPluginResponse, _ := json.Marshal(dst.ThirdPartyPluginResponse)
		if string(jsonThirdPartyPluginResponse) == "{}" { // empty struct
			dst.ThirdPartyPluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyPluginResponse = nil
	}

	// try to unmarshal data into UniqueAttributePluginResponse
	err = newStrictDecoder(data).Decode(&dst.UniqueAttributePluginResponse)
	if err == nil {
		jsonUniqueAttributePluginResponse, _ := json.Marshal(dst.UniqueAttributePluginResponse)
		if string(jsonUniqueAttributePluginResponse) == "{}" { // empty struct
			dst.UniqueAttributePluginResponse = nil
		} else {
			match++
		}
	} else {
		dst.UniqueAttributePluginResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AttributeMapperPluginResponse = nil
		dst.ChangeSubscriptionNotificationPluginResponse = nil
		dst.ChangelogPasswordEncryptionPluginResponse = nil
		dst.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse = nil
		dst.CleanUpExpiredPingfederatePersistentSessionsPluginResponse = nil
		dst.CleanUpInactivePingfederatePersistentSessionsPluginResponse = nil
		dst.ComposedAttributePluginResponse = nil
		dst.DelayPluginResponse = nil
		dst.DnMapperPluginResponse = nil
		dst.EncryptAttributeValuesPluginResponse = nil
		dst.GroovyScriptedPluginResponse = nil
		dst.InternalSearchRatePluginResponse = nil
		dst.LastAccessTimePluginResponse = nil
		dst.LastModPluginResponse = nil
		dst.LdapResultCodeTrackerPluginResponse = nil
		dst.ModifiablePasswordPolicyStatePluginResponse = nil
		dst.MonitorHistoryPluginResponse = nil
		dst.PassThroughAuthenticationPluginResponse = nil
		dst.PasswordPolicyImportPluginResponse = nil
		dst.PeriodicGcPluginResponse = nil
		dst.PeriodicStatsLoggerPluginResponse = nil
		dst.PingOnePassThroughAuthenticationPluginResponse = nil
		dst.PluggablePassThroughAuthenticationPluginResponse = nil
		dst.ProcessingTimeHistogramPluginResponse = nil
		dst.ProfilerPluginResponse = nil
		dst.PurgeExpiredDataPluginResponse = nil
		dst.ReferentialIntegrityPluginResponse = nil
		dst.ReferralOnUpdatePluginResponse = nil
		dst.SearchShutdownPluginResponse = nil
		dst.SevenBitCleanPluginResponse = nil
		dst.SimpleToExternalBindPluginResponse = nil
		dst.SnmpSubagentPluginResponse = nil
		dst.StatsCollectorPluginResponse = nil
		dst.SubOperationTimingPluginResponse = nil
		dst.ThirdPartyPluginResponse = nil
		dst.UniqueAttributePluginResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(GetPlugin200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(GetPlugin200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src GetPlugin200Response) MarshalJSON() ([]byte, error) {
	if src.AttributeMapperPluginResponse != nil {
		return json.Marshal(&src.AttributeMapperPluginResponse)
	}

	if src.ChangeSubscriptionNotificationPluginResponse != nil {
		return json.Marshal(&src.ChangeSubscriptionNotificationPluginResponse)
	}

	if src.ChangelogPasswordEncryptionPluginResponse != nil {
		return json.Marshal(&src.ChangelogPasswordEncryptionPluginResponse)
	}

	if src.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse != nil {
		return json.Marshal(&src.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse)
	}

	if src.CleanUpExpiredPingfederatePersistentSessionsPluginResponse != nil {
		return json.Marshal(&src.CleanUpExpiredPingfederatePersistentSessionsPluginResponse)
	}

	if src.CleanUpInactivePingfederatePersistentSessionsPluginResponse != nil {
		return json.Marshal(&src.CleanUpInactivePingfederatePersistentSessionsPluginResponse)
	}

	if src.ComposedAttributePluginResponse != nil {
		return json.Marshal(&src.ComposedAttributePluginResponse)
	}

	if src.DelayPluginResponse != nil {
		return json.Marshal(&src.DelayPluginResponse)
	}

	if src.DnMapperPluginResponse != nil {
		return json.Marshal(&src.DnMapperPluginResponse)
	}

	if src.EncryptAttributeValuesPluginResponse != nil {
		return json.Marshal(&src.EncryptAttributeValuesPluginResponse)
	}

	if src.GroovyScriptedPluginResponse != nil {
		return json.Marshal(&src.GroovyScriptedPluginResponse)
	}

	if src.InternalSearchRatePluginResponse != nil {
		return json.Marshal(&src.InternalSearchRatePluginResponse)
	}

	if src.LastAccessTimePluginResponse != nil {
		return json.Marshal(&src.LastAccessTimePluginResponse)
	}

	if src.LastModPluginResponse != nil {
		return json.Marshal(&src.LastModPluginResponse)
	}

	if src.LdapResultCodeTrackerPluginResponse != nil {
		return json.Marshal(&src.LdapResultCodeTrackerPluginResponse)
	}

	if src.ModifiablePasswordPolicyStatePluginResponse != nil {
		return json.Marshal(&src.ModifiablePasswordPolicyStatePluginResponse)
	}

	if src.MonitorHistoryPluginResponse != nil {
		return json.Marshal(&src.MonitorHistoryPluginResponse)
	}

	if src.PassThroughAuthenticationPluginResponse != nil {
		return json.Marshal(&src.PassThroughAuthenticationPluginResponse)
	}

	if src.PasswordPolicyImportPluginResponse != nil {
		return json.Marshal(&src.PasswordPolicyImportPluginResponse)
	}

	if src.PeriodicGcPluginResponse != nil {
		return json.Marshal(&src.PeriodicGcPluginResponse)
	}

	if src.PeriodicStatsLoggerPluginResponse != nil {
		return json.Marshal(&src.PeriodicStatsLoggerPluginResponse)
	}

	if src.PingOnePassThroughAuthenticationPluginResponse != nil {
		return json.Marshal(&src.PingOnePassThroughAuthenticationPluginResponse)
	}

	if src.PluggablePassThroughAuthenticationPluginResponse != nil {
		return json.Marshal(&src.PluggablePassThroughAuthenticationPluginResponse)
	}

	if src.ProcessingTimeHistogramPluginResponse != nil {
		return json.Marshal(&src.ProcessingTimeHistogramPluginResponse)
	}

	if src.ProfilerPluginResponse != nil {
		return json.Marshal(&src.ProfilerPluginResponse)
	}

	if src.PurgeExpiredDataPluginResponse != nil {
		return json.Marshal(&src.PurgeExpiredDataPluginResponse)
	}

	if src.ReferentialIntegrityPluginResponse != nil {
		return json.Marshal(&src.ReferentialIntegrityPluginResponse)
	}

	if src.ReferralOnUpdatePluginResponse != nil {
		return json.Marshal(&src.ReferralOnUpdatePluginResponse)
	}

	if src.SearchShutdownPluginResponse != nil {
		return json.Marshal(&src.SearchShutdownPluginResponse)
	}

	if src.SevenBitCleanPluginResponse != nil {
		return json.Marshal(&src.SevenBitCleanPluginResponse)
	}

	if src.SimpleToExternalBindPluginResponse != nil {
		return json.Marshal(&src.SimpleToExternalBindPluginResponse)
	}

	if src.SnmpSubagentPluginResponse != nil {
		return json.Marshal(&src.SnmpSubagentPluginResponse)
	}

	if src.StatsCollectorPluginResponse != nil {
		return json.Marshal(&src.StatsCollectorPluginResponse)
	}

	if src.SubOperationTimingPluginResponse != nil {
		return json.Marshal(&src.SubOperationTimingPluginResponse)
	}

	if src.ThirdPartyPluginResponse != nil {
		return json.Marshal(&src.ThirdPartyPluginResponse)
	}

	if src.UniqueAttributePluginResponse != nil {
		return json.Marshal(&src.UniqueAttributePluginResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *GetPlugin200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AttributeMapperPluginResponse != nil {
		return obj.AttributeMapperPluginResponse
	}

	if obj.ChangeSubscriptionNotificationPluginResponse != nil {
		return obj.ChangeSubscriptionNotificationPluginResponse
	}

	if obj.ChangelogPasswordEncryptionPluginResponse != nil {
		return obj.ChangelogPasswordEncryptionPluginResponse
	}

	if obj.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse != nil {
		return obj.CleanUpExpiredPingfederatePersistentAccessGrantsPluginResponse
	}

	if obj.CleanUpExpiredPingfederatePersistentSessionsPluginResponse != nil {
		return obj.CleanUpExpiredPingfederatePersistentSessionsPluginResponse
	}

	if obj.CleanUpInactivePingfederatePersistentSessionsPluginResponse != nil {
		return obj.CleanUpInactivePingfederatePersistentSessionsPluginResponse
	}

	if obj.ComposedAttributePluginResponse != nil {
		return obj.ComposedAttributePluginResponse
	}

	if obj.DelayPluginResponse != nil {
		return obj.DelayPluginResponse
	}

	if obj.DnMapperPluginResponse != nil {
		return obj.DnMapperPluginResponse
	}

	if obj.EncryptAttributeValuesPluginResponse != nil {
		return obj.EncryptAttributeValuesPluginResponse
	}

	if obj.GroovyScriptedPluginResponse != nil {
		return obj.GroovyScriptedPluginResponse
	}

	if obj.InternalSearchRatePluginResponse != nil {
		return obj.InternalSearchRatePluginResponse
	}

	if obj.LastAccessTimePluginResponse != nil {
		return obj.LastAccessTimePluginResponse
	}

	if obj.LastModPluginResponse != nil {
		return obj.LastModPluginResponse
	}

	if obj.LdapResultCodeTrackerPluginResponse != nil {
		return obj.LdapResultCodeTrackerPluginResponse
	}

	if obj.ModifiablePasswordPolicyStatePluginResponse != nil {
		return obj.ModifiablePasswordPolicyStatePluginResponse
	}

	if obj.MonitorHistoryPluginResponse != nil {
		return obj.MonitorHistoryPluginResponse
	}

	if obj.PassThroughAuthenticationPluginResponse != nil {
		return obj.PassThroughAuthenticationPluginResponse
	}

	if obj.PasswordPolicyImportPluginResponse != nil {
		return obj.PasswordPolicyImportPluginResponse
	}

	if obj.PeriodicGcPluginResponse != nil {
		return obj.PeriodicGcPluginResponse
	}

	if obj.PeriodicStatsLoggerPluginResponse != nil {
		return obj.PeriodicStatsLoggerPluginResponse
	}

	if obj.PingOnePassThroughAuthenticationPluginResponse != nil {
		return obj.PingOnePassThroughAuthenticationPluginResponse
	}

	if obj.PluggablePassThroughAuthenticationPluginResponse != nil {
		return obj.PluggablePassThroughAuthenticationPluginResponse
	}

	if obj.ProcessingTimeHistogramPluginResponse != nil {
		return obj.ProcessingTimeHistogramPluginResponse
	}

	if obj.ProfilerPluginResponse != nil {
		return obj.ProfilerPluginResponse
	}

	if obj.PurgeExpiredDataPluginResponse != nil {
		return obj.PurgeExpiredDataPluginResponse
	}

	if obj.ReferentialIntegrityPluginResponse != nil {
		return obj.ReferentialIntegrityPluginResponse
	}

	if obj.ReferralOnUpdatePluginResponse != nil {
		return obj.ReferralOnUpdatePluginResponse
	}

	if obj.SearchShutdownPluginResponse != nil {
		return obj.SearchShutdownPluginResponse
	}

	if obj.SevenBitCleanPluginResponse != nil {
		return obj.SevenBitCleanPluginResponse
	}

	if obj.SimpleToExternalBindPluginResponse != nil {
		return obj.SimpleToExternalBindPluginResponse
	}

	if obj.SnmpSubagentPluginResponse != nil {
		return obj.SnmpSubagentPluginResponse
	}

	if obj.StatsCollectorPluginResponse != nil {
		return obj.StatsCollectorPluginResponse
	}

	if obj.SubOperationTimingPluginResponse != nil {
		return obj.SubOperationTimingPluginResponse
	}

	if obj.ThirdPartyPluginResponse != nil {
		return obj.ThirdPartyPluginResponse
	}

	if obj.UniqueAttributePluginResponse != nil {
		return obj.UniqueAttributePluginResponse
	}

	// all schemas are nil
	return nil
}

type NullableGetPlugin200Response struct {
	value *GetPlugin200Response
	isSet bool
}

func (v NullableGetPlugin200Response) Get() *GetPlugin200Response {
	return v.value
}

func (v *NullableGetPlugin200Response) Set(val *GetPlugin200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPlugin200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPlugin200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPlugin200Response(val *GetPlugin200Response) *NullableGetPlugin200Response {
	return &NullableGetPlugin200Response{value: val, isSet: true}
}

func (v NullableGetPlugin200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPlugin200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
