/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package configurationapi

import (
	"encoding/json"
)

// checks if the AddSimpleResultCriteriaRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AddSimpleResultCriteriaRequest{}

// AddSimpleResultCriteriaRequest struct for AddSimpleResultCriteriaRequest
type AddSimpleResultCriteriaRequest struct {
	// Name of the new Result Criteria
	CriteriaName string                              `json:"criteriaName"`
	Schemas      []EnumsimpleResultCriteriaSchemaUrn `json:"schemas"`
	// Specifies a request criteria object that must match the associated request for operations included in this Simple Result Criteria.
	RequestCriteria        *string                                       `json:"requestCriteria,omitempty"`
	ResultCodeCriteria     *EnumresultCriteriaResultCodeCriteriaProp     `json:"resultCodeCriteria,omitempty"`
	ResultCodeValue        []EnumresultCriteriaResultCodeValueProp       `json:"resultCodeValue,omitempty"`
	ProcessingTimeCriteria *EnumresultCriteriaProcessingTimeCriteriaProp `json:"processingTimeCriteria,omitempty"`
	// Specifies the boundary value to use for the operation processing time when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \"processing-time-criteria\" property has a value of \"any\".
	ProcessingTimeValue *string                                  `json:"processingTimeValue,omitempty"`
	QueueTimeCriteria   *EnumresultCriteriaQueueTimeCriteriaProp `json:"queueTimeCriteria,omitempty"`
	// Specifies the boundary value to use for the time an operation spent on the work queue when determining whether to include that operation in this Simple Result Criteria. This will be ignored if the \"queue-time-criteria\" property has a value of \"any\".
	QueueTimeValue   *string                                 `json:"queueTimeValue,omitempty"`
	ReferralReturned *EnumresultCriteriaReferralReturnedProp `json:"referralReturned,omitempty"`
	// Specifies the OID of a control that must be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain all of those controls.
	AllIncludedResponseControl []string `json:"allIncludedResponseControl,omitempty"`
	// Specifies the OID of a control that may be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must contain at least one of those controls.
	AnyIncludedResponseControl []string `json:"anyIncludedResponseControl,omitempty"`
	// Specifies the OID of a control that should not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain at least one of those controls (that is, the response may contain zero or more of those controls, but not all of them).
	NotAllIncludedResponseControl []string `json:"notAllIncludedResponseControl,omitempty"`
	// Specifies the OID of a control that must not be present in the response to the client for operations included in this Simple Result Criteria. If any control OIDs are provided, then the response must not contain any of those controls.
	NoneIncludedResponseControl []string                                           `json:"noneIncludedResponseControl,omitempty"`
	UsedAlternateAuthzid        *EnumresultCriteriaUsedAlternateAuthzidProp        `json:"usedAlternateAuthzid,omitempty"`
	UsedAnyPrivilege            *EnumresultCriteriaUsedAnyPrivilegeProp            `json:"usedAnyPrivilege,omitempty"`
	UsedPrivilege               []EnumresultCriteriaUsedPrivilegeProp              `json:"usedPrivilege,omitempty"`
	MissingAnyPrivilege         *EnumresultCriteriaMissingAnyPrivilegeProp         `json:"missingAnyPrivilege,omitempty"`
	MissingPrivilege            []EnumresultCriteriaMissingPrivilegeProp           `json:"missingPrivilege,omitempty"`
	RetiredPasswordUsedForBind  *EnumresultCriteriaRetiredPasswordUsedForBindProp  `json:"retiredPasswordUsedForBind,omitempty"`
	SearchEntryReturnedCriteria *EnumresultCriteriaSearchEntryReturnedCriteriaProp `json:"searchEntryReturnedCriteria,omitempty"`
	// Specifies the target number of entries returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \"search-entry-criteria\" property has a value of \"any\".
	SearchEntryReturnedCount        *int64                                                 `json:"searchEntryReturnedCount,omitempty"`
	SearchReferenceReturnedCriteria *EnumresultCriteriaSearchReferenceReturnedCriteriaProp `json:"searchReferenceReturnedCriteria,omitempty"`
	// Specifies the target number of references returned for use when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search, and it will be ignored for search operations if the \"search-reference-criteria\" property has a value of \"any\".
	SearchReferenceReturnedCount *int64                                       `json:"searchReferenceReturnedCount,omitempty"`
	SearchIndexedCriteria        *EnumresultCriteriaSearchIndexedCriteriaProp `json:"searchIndexedCriteria,omitempty"`
	// Specifies a base DN below which authorization user entries may exist for operations included in this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	IncludedAuthzUserBaseDN []string `json:"includedAuthzUserBaseDN,omitempty"`
	// Specifies a base DN below which authorization user entries may exist for operations excluded from this Simple Result Criteria. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	ExcludedAuthzUserBaseDN []string `json:"excludedAuthzUserBaseDN,omitempty"`
	// Specifies the DN of a group in which authorization users must exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of all of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	AllIncludedAuthzUserGroupDN []string `json:"allIncludedAuthzUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authorization users may exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must be a member of at least one of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	AnyIncludedAuthzUserGroupDN []string `json:"anyIncludedAuthzUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authorization users should not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member of at least one of those groups (that is, the user may be a member of zero or more of those groups, but not of all of them). The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	NotAllIncludedAuthzUserGroupDN []string `json:"notAllIncludedAuthzUserGroupDN,omitempty"`
	// Specifies the DN of a group in which authorization users must not exist for operations included in this Simple Result Criteria. If any group DNs are provided, then the authorization user must not be a member any of those groups. The authorization user could be the currently authenticated user on the connection (the user that performed the Bind operation), or different if proxied authorization was used to request that the operation be performed under the authorization of another user (as is the case for operations that come through a Directory Proxy Server). This property will be ignored for operations where no authentication or authorization has been performed.
	NoneIncludedAuthzUserGroupDN []string `json:"noneIncludedAuthzUserGroupDN,omitempty"`
	// A description for this Result Criteria
	Description *string `json:"description,omitempty"`
}

// NewAddSimpleResultCriteriaRequest instantiates a new AddSimpleResultCriteriaRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSimpleResultCriteriaRequest(criteriaName string, schemas []EnumsimpleResultCriteriaSchemaUrn) *AddSimpleResultCriteriaRequest {
	this := AddSimpleResultCriteriaRequest{}
	this.CriteriaName = criteriaName
	this.Schemas = schemas
	return &this
}

// NewAddSimpleResultCriteriaRequestWithDefaults instantiates a new AddSimpleResultCriteriaRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSimpleResultCriteriaRequestWithDefaults() *AddSimpleResultCriteriaRequest {
	this := AddSimpleResultCriteriaRequest{}
	return &this
}

// GetCriteriaName returns the CriteriaName field value
func (o *AddSimpleResultCriteriaRequest) GetCriteriaName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CriteriaName
}

// GetCriteriaNameOk returns a tuple with the CriteriaName field value
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetCriteriaNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CriteriaName, true
}

// SetCriteriaName sets field value
func (o *AddSimpleResultCriteriaRequest) SetCriteriaName(v string) {
	o.CriteriaName = v
}

// GetSchemas returns the Schemas field value
func (o *AddSimpleResultCriteriaRequest) GetSchemas() []EnumsimpleResultCriteriaSchemaUrn {
	if o == nil {
		var ret []EnumsimpleResultCriteriaSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSchemasOk() ([]EnumsimpleResultCriteriaSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddSimpleResultCriteriaRequest) SetSchemas(v []EnumsimpleResultCriteriaSchemaUrn) {
	o.Schemas = v
}

// GetRequestCriteria returns the RequestCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetRequestCriteria() string {
	if o == nil || IsNil(o.RequestCriteria) {
		var ret string
		return ret
	}
	return *o.RequestCriteria
}

// GetRequestCriteriaOk returns a tuple with the RequestCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetRequestCriteriaOk() (*string, bool) {
	if o == nil || IsNil(o.RequestCriteria) {
		return nil, false
	}
	return o.RequestCriteria, true
}

// HasRequestCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasRequestCriteria() bool {
	if o != nil && !IsNil(o.RequestCriteria) {
		return true
	}

	return false
}

// SetRequestCriteria gets a reference to the given string and assigns it to the RequestCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetRequestCriteria(v string) {
	o.RequestCriteria = &v
}

// GetResultCodeCriteria returns the ResultCodeCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetResultCodeCriteria() EnumresultCriteriaResultCodeCriteriaProp {
	if o == nil || IsNil(o.ResultCodeCriteria) {
		var ret EnumresultCriteriaResultCodeCriteriaProp
		return ret
	}
	return *o.ResultCodeCriteria
}

// GetResultCodeCriteriaOk returns a tuple with the ResultCodeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetResultCodeCriteriaOk() (*EnumresultCriteriaResultCodeCriteriaProp, bool) {
	if o == nil || IsNil(o.ResultCodeCriteria) {
		return nil, false
	}
	return o.ResultCodeCriteria, true
}

// HasResultCodeCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasResultCodeCriteria() bool {
	if o != nil && !IsNil(o.ResultCodeCriteria) {
		return true
	}

	return false
}

// SetResultCodeCriteria gets a reference to the given EnumresultCriteriaResultCodeCriteriaProp and assigns it to the ResultCodeCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetResultCodeCriteria(v EnumresultCriteriaResultCodeCriteriaProp) {
	o.ResultCodeCriteria = &v
}

// GetResultCodeValue returns the ResultCodeValue field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetResultCodeValue() []EnumresultCriteriaResultCodeValueProp {
	if o == nil || IsNil(o.ResultCodeValue) {
		var ret []EnumresultCriteriaResultCodeValueProp
		return ret
	}
	return o.ResultCodeValue
}

// GetResultCodeValueOk returns a tuple with the ResultCodeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetResultCodeValueOk() ([]EnumresultCriteriaResultCodeValueProp, bool) {
	if o == nil || IsNil(o.ResultCodeValue) {
		return nil, false
	}
	return o.ResultCodeValue, true
}

// HasResultCodeValue returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasResultCodeValue() bool {
	if o != nil && !IsNil(o.ResultCodeValue) {
		return true
	}

	return false
}

// SetResultCodeValue gets a reference to the given []EnumresultCriteriaResultCodeValueProp and assigns it to the ResultCodeValue field.
func (o *AddSimpleResultCriteriaRequest) SetResultCodeValue(v []EnumresultCriteriaResultCodeValueProp) {
	o.ResultCodeValue = v
}

// GetProcessingTimeCriteria returns the ProcessingTimeCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetProcessingTimeCriteria() EnumresultCriteriaProcessingTimeCriteriaProp {
	if o == nil || IsNil(o.ProcessingTimeCriteria) {
		var ret EnumresultCriteriaProcessingTimeCriteriaProp
		return ret
	}
	return *o.ProcessingTimeCriteria
}

// GetProcessingTimeCriteriaOk returns a tuple with the ProcessingTimeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetProcessingTimeCriteriaOk() (*EnumresultCriteriaProcessingTimeCriteriaProp, bool) {
	if o == nil || IsNil(o.ProcessingTimeCriteria) {
		return nil, false
	}
	return o.ProcessingTimeCriteria, true
}

// HasProcessingTimeCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasProcessingTimeCriteria() bool {
	if o != nil && !IsNil(o.ProcessingTimeCriteria) {
		return true
	}

	return false
}

// SetProcessingTimeCriteria gets a reference to the given EnumresultCriteriaProcessingTimeCriteriaProp and assigns it to the ProcessingTimeCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetProcessingTimeCriteria(v EnumresultCriteriaProcessingTimeCriteriaProp) {
	o.ProcessingTimeCriteria = &v
}

// GetProcessingTimeValue returns the ProcessingTimeValue field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetProcessingTimeValue() string {
	if o == nil || IsNil(o.ProcessingTimeValue) {
		var ret string
		return ret
	}
	return *o.ProcessingTimeValue
}

// GetProcessingTimeValueOk returns a tuple with the ProcessingTimeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetProcessingTimeValueOk() (*string, bool) {
	if o == nil || IsNil(o.ProcessingTimeValue) {
		return nil, false
	}
	return o.ProcessingTimeValue, true
}

// HasProcessingTimeValue returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasProcessingTimeValue() bool {
	if o != nil && !IsNil(o.ProcessingTimeValue) {
		return true
	}

	return false
}

// SetProcessingTimeValue gets a reference to the given string and assigns it to the ProcessingTimeValue field.
func (o *AddSimpleResultCriteriaRequest) SetProcessingTimeValue(v string) {
	o.ProcessingTimeValue = &v
}

// GetQueueTimeCriteria returns the QueueTimeCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetQueueTimeCriteria() EnumresultCriteriaQueueTimeCriteriaProp {
	if o == nil || IsNil(o.QueueTimeCriteria) {
		var ret EnumresultCriteriaQueueTimeCriteriaProp
		return ret
	}
	return *o.QueueTimeCriteria
}

// GetQueueTimeCriteriaOk returns a tuple with the QueueTimeCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetQueueTimeCriteriaOk() (*EnumresultCriteriaQueueTimeCriteriaProp, bool) {
	if o == nil || IsNil(o.QueueTimeCriteria) {
		return nil, false
	}
	return o.QueueTimeCriteria, true
}

// HasQueueTimeCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasQueueTimeCriteria() bool {
	if o != nil && !IsNil(o.QueueTimeCriteria) {
		return true
	}

	return false
}

// SetQueueTimeCriteria gets a reference to the given EnumresultCriteriaQueueTimeCriteriaProp and assigns it to the QueueTimeCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetQueueTimeCriteria(v EnumresultCriteriaQueueTimeCriteriaProp) {
	o.QueueTimeCriteria = &v
}

// GetQueueTimeValue returns the QueueTimeValue field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetQueueTimeValue() string {
	if o == nil || IsNil(o.QueueTimeValue) {
		var ret string
		return ret
	}
	return *o.QueueTimeValue
}

// GetQueueTimeValueOk returns a tuple with the QueueTimeValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetQueueTimeValueOk() (*string, bool) {
	if o == nil || IsNil(o.QueueTimeValue) {
		return nil, false
	}
	return o.QueueTimeValue, true
}

// HasQueueTimeValue returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasQueueTimeValue() bool {
	if o != nil && !IsNil(o.QueueTimeValue) {
		return true
	}

	return false
}

// SetQueueTimeValue gets a reference to the given string and assigns it to the QueueTimeValue field.
func (o *AddSimpleResultCriteriaRequest) SetQueueTimeValue(v string) {
	o.QueueTimeValue = &v
}

// GetReferralReturned returns the ReferralReturned field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetReferralReturned() EnumresultCriteriaReferralReturnedProp {
	if o == nil || IsNil(o.ReferralReturned) {
		var ret EnumresultCriteriaReferralReturnedProp
		return ret
	}
	return *o.ReferralReturned
}

// GetReferralReturnedOk returns a tuple with the ReferralReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetReferralReturnedOk() (*EnumresultCriteriaReferralReturnedProp, bool) {
	if o == nil || IsNil(o.ReferralReturned) {
		return nil, false
	}
	return o.ReferralReturned, true
}

// HasReferralReturned returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasReferralReturned() bool {
	if o != nil && !IsNil(o.ReferralReturned) {
		return true
	}

	return false
}

// SetReferralReturned gets a reference to the given EnumresultCriteriaReferralReturnedProp and assigns it to the ReferralReturned field.
func (o *AddSimpleResultCriteriaRequest) SetReferralReturned(v EnumresultCriteriaReferralReturnedProp) {
	o.ReferralReturned = &v
}

// GetAllIncludedResponseControl returns the AllIncludedResponseControl field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetAllIncludedResponseControl() []string {
	if o == nil || IsNil(o.AllIncludedResponseControl) {
		var ret []string
		return ret
	}
	return o.AllIncludedResponseControl
}

// GetAllIncludedResponseControlOk returns a tuple with the AllIncludedResponseControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetAllIncludedResponseControlOk() ([]string, bool) {
	if o == nil || IsNil(o.AllIncludedResponseControl) {
		return nil, false
	}
	return o.AllIncludedResponseControl, true
}

// HasAllIncludedResponseControl returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasAllIncludedResponseControl() bool {
	if o != nil && !IsNil(o.AllIncludedResponseControl) {
		return true
	}

	return false
}

// SetAllIncludedResponseControl gets a reference to the given []string and assigns it to the AllIncludedResponseControl field.
func (o *AddSimpleResultCriteriaRequest) SetAllIncludedResponseControl(v []string) {
	o.AllIncludedResponseControl = v
}

// GetAnyIncludedResponseControl returns the AnyIncludedResponseControl field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetAnyIncludedResponseControl() []string {
	if o == nil || IsNil(o.AnyIncludedResponseControl) {
		var ret []string
		return ret
	}
	return o.AnyIncludedResponseControl
}

// GetAnyIncludedResponseControlOk returns a tuple with the AnyIncludedResponseControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetAnyIncludedResponseControlOk() ([]string, bool) {
	if o == nil || IsNil(o.AnyIncludedResponseControl) {
		return nil, false
	}
	return o.AnyIncludedResponseControl, true
}

// HasAnyIncludedResponseControl returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasAnyIncludedResponseControl() bool {
	if o != nil && !IsNil(o.AnyIncludedResponseControl) {
		return true
	}

	return false
}

// SetAnyIncludedResponseControl gets a reference to the given []string and assigns it to the AnyIncludedResponseControl field.
func (o *AddSimpleResultCriteriaRequest) SetAnyIncludedResponseControl(v []string) {
	o.AnyIncludedResponseControl = v
}

// GetNotAllIncludedResponseControl returns the NotAllIncludedResponseControl field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetNotAllIncludedResponseControl() []string {
	if o == nil || IsNil(o.NotAllIncludedResponseControl) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedResponseControl
}

// GetNotAllIncludedResponseControlOk returns a tuple with the NotAllIncludedResponseControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetNotAllIncludedResponseControlOk() ([]string, bool) {
	if o == nil || IsNil(o.NotAllIncludedResponseControl) {
		return nil, false
	}
	return o.NotAllIncludedResponseControl, true
}

// HasNotAllIncludedResponseControl returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasNotAllIncludedResponseControl() bool {
	if o != nil && !IsNil(o.NotAllIncludedResponseControl) {
		return true
	}

	return false
}

// SetNotAllIncludedResponseControl gets a reference to the given []string and assigns it to the NotAllIncludedResponseControl field.
func (o *AddSimpleResultCriteriaRequest) SetNotAllIncludedResponseControl(v []string) {
	o.NotAllIncludedResponseControl = v
}

// GetNoneIncludedResponseControl returns the NoneIncludedResponseControl field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetNoneIncludedResponseControl() []string {
	if o == nil || IsNil(o.NoneIncludedResponseControl) {
		var ret []string
		return ret
	}
	return o.NoneIncludedResponseControl
}

// GetNoneIncludedResponseControlOk returns a tuple with the NoneIncludedResponseControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetNoneIncludedResponseControlOk() ([]string, bool) {
	if o == nil || IsNil(o.NoneIncludedResponseControl) {
		return nil, false
	}
	return o.NoneIncludedResponseControl, true
}

// HasNoneIncludedResponseControl returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasNoneIncludedResponseControl() bool {
	if o != nil && !IsNil(o.NoneIncludedResponseControl) {
		return true
	}

	return false
}

// SetNoneIncludedResponseControl gets a reference to the given []string and assigns it to the NoneIncludedResponseControl field.
func (o *AddSimpleResultCriteriaRequest) SetNoneIncludedResponseControl(v []string) {
	o.NoneIncludedResponseControl = v
}

// GetUsedAlternateAuthzid returns the UsedAlternateAuthzid field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetUsedAlternateAuthzid() EnumresultCriteriaUsedAlternateAuthzidProp {
	if o == nil || IsNil(o.UsedAlternateAuthzid) {
		var ret EnumresultCriteriaUsedAlternateAuthzidProp
		return ret
	}
	return *o.UsedAlternateAuthzid
}

// GetUsedAlternateAuthzidOk returns a tuple with the UsedAlternateAuthzid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetUsedAlternateAuthzidOk() (*EnumresultCriteriaUsedAlternateAuthzidProp, bool) {
	if o == nil || IsNil(o.UsedAlternateAuthzid) {
		return nil, false
	}
	return o.UsedAlternateAuthzid, true
}

// HasUsedAlternateAuthzid returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasUsedAlternateAuthzid() bool {
	if o != nil && !IsNil(o.UsedAlternateAuthzid) {
		return true
	}

	return false
}

// SetUsedAlternateAuthzid gets a reference to the given EnumresultCriteriaUsedAlternateAuthzidProp and assigns it to the UsedAlternateAuthzid field.
func (o *AddSimpleResultCriteriaRequest) SetUsedAlternateAuthzid(v EnumresultCriteriaUsedAlternateAuthzidProp) {
	o.UsedAlternateAuthzid = &v
}

// GetUsedAnyPrivilege returns the UsedAnyPrivilege field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetUsedAnyPrivilege() EnumresultCriteriaUsedAnyPrivilegeProp {
	if o == nil || IsNil(o.UsedAnyPrivilege) {
		var ret EnumresultCriteriaUsedAnyPrivilegeProp
		return ret
	}
	return *o.UsedAnyPrivilege
}

// GetUsedAnyPrivilegeOk returns a tuple with the UsedAnyPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetUsedAnyPrivilegeOk() (*EnumresultCriteriaUsedAnyPrivilegeProp, bool) {
	if o == nil || IsNil(o.UsedAnyPrivilege) {
		return nil, false
	}
	return o.UsedAnyPrivilege, true
}

// HasUsedAnyPrivilege returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasUsedAnyPrivilege() bool {
	if o != nil && !IsNil(o.UsedAnyPrivilege) {
		return true
	}

	return false
}

// SetUsedAnyPrivilege gets a reference to the given EnumresultCriteriaUsedAnyPrivilegeProp and assigns it to the UsedAnyPrivilege field.
func (o *AddSimpleResultCriteriaRequest) SetUsedAnyPrivilege(v EnumresultCriteriaUsedAnyPrivilegeProp) {
	o.UsedAnyPrivilege = &v
}

// GetUsedPrivilege returns the UsedPrivilege field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetUsedPrivilege() []EnumresultCriteriaUsedPrivilegeProp {
	if o == nil || IsNil(o.UsedPrivilege) {
		var ret []EnumresultCriteriaUsedPrivilegeProp
		return ret
	}
	return o.UsedPrivilege
}

// GetUsedPrivilegeOk returns a tuple with the UsedPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetUsedPrivilegeOk() ([]EnumresultCriteriaUsedPrivilegeProp, bool) {
	if o == nil || IsNil(o.UsedPrivilege) {
		return nil, false
	}
	return o.UsedPrivilege, true
}

// HasUsedPrivilege returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasUsedPrivilege() bool {
	if o != nil && !IsNil(o.UsedPrivilege) {
		return true
	}

	return false
}

// SetUsedPrivilege gets a reference to the given []EnumresultCriteriaUsedPrivilegeProp and assigns it to the UsedPrivilege field.
func (o *AddSimpleResultCriteriaRequest) SetUsedPrivilege(v []EnumresultCriteriaUsedPrivilegeProp) {
	o.UsedPrivilege = v
}

// GetMissingAnyPrivilege returns the MissingAnyPrivilege field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetMissingAnyPrivilege() EnumresultCriteriaMissingAnyPrivilegeProp {
	if o == nil || IsNil(o.MissingAnyPrivilege) {
		var ret EnumresultCriteriaMissingAnyPrivilegeProp
		return ret
	}
	return *o.MissingAnyPrivilege
}

// GetMissingAnyPrivilegeOk returns a tuple with the MissingAnyPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetMissingAnyPrivilegeOk() (*EnumresultCriteriaMissingAnyPrivilegeProp, bool) {
	if o == nil || IsNil(o.MissingAnyPrivilege) {
		return nil, false
	}
	return o.MissingAnyPrivilege, true
}

// HasMissingAnyPrivilege returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasMissingAnyPrivilege() bool {
	if o != nil && !IsNil(o.MissingAnyPrivilege) {
		return true
	}

	return false
}

// SetMissingAnyPrivilege gets a reference to the given EnumresultCriteriaMissingAnyPrivilegeProp and assigns it to the MissingAnyPrivilege field.
func (o *AddSimpleResultCriteriaRequest) SetMissingAnyPrivilege(v EnumresultCriteriaMissingAnyPrivilegeProp) {
	o.MissingAnyPrivilege = &v
}

// GetMissingPrivilege returns the MissingPrivilege field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetMissingPrivilege() []EnumresultCriteriaMissingPrivilegeProp {
	if o == nil || IsNil(o.MissingPrivilege) {
		var ret []EnumresultCriteriaMissingPrivilegeProp
		return ret
	}
	return o.MissingPrivilege
}

// GetMissingPrivilegeOk returns a tuple with the MissingPrivilege field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetMissingPrivilegeOk() ([]EnumresultCriteriaMissingPrivilegeProp, bool) {
	if o == nil || IsNil(o.MissingPrivilege) {
		return nil, false
	}
	return o.MissingPrivilege, true
}

// HasMissingPrivilege returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasMissingPrivilege() bool {
	if o != nil && !IsNil(o.MissingPrivilege) {
		return true
	}

	return false
}

// SetMissingPrivilege gets a reference to the given []EnumresultCriteriaMissingPrivilegeProp and assigns it to the MissingPrivilege field.
func (o *AddSimpleResultCriteriaRequest) SetMissingPrivilege(v []EnumresultCriteriaMissingPrivilegeProp) {
	o.MissingPrivilege = v
}

// GetRetiredPasswordUsedForBind returns the RetiredPasswordUsedForBind field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetRetiredPasswordUsedForBind() EnumresultCriteriaRetiredPasswordUsedForBindProp {
	if o == nil || IsNil(o.RetiredPasswordUsedForBind) {
		var ret EnumresultCriteriaRetiredPasswordUsedForBindProp
		return ret
	}
	return *o.RetiredPasswordUsedForBind
}

// GetRetiredPasswordUsedForBindOk returns a tuple with the RetiredPasswordUsedForBind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetRetiredPasswordUsedForBindOk() (*EnumresultCriteriaRetiredPasswordUsedForBindProp, bool) {
	if o == nil || IsNil(o.RetiredPasswordUsedForBind) {
		return nil, false
	}
	return o.RetiredPasswordUsedForBind, true
}

// HasRetiredPasswordUsedForBind returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasRetiredPasswordUsedForBind() bool {
	if o != nil && !IsNil(o.RetiredPasswordUsedForBind) {
		return true
	}

	return false
}

// SetRetiredPasswordUsedForBind gets a reference to the given EnumresultCriteriaRetiredPasswordUsedForBindProp and assigns it to the RetiredPasswordUsedForBind field.
func (o *AddSimpleResultCriteriaRequest) SetRetiredPasswordUsedForBind(v EnumresultCriteriaRetiredPasswordUsedForBindProp) {
	o.RetiredPasswordUsedForBind = &v
}

// GetSearchEntryReturnedCriteria returns the SearchEntryReturnedCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetSearchEntryReturnedCriteria() EnumresultCriteriaSearchEntryReturnedCriteriaProp {
	if o == nil || IsNil(o.SearchEntryReturnedCriteria) {
		var ret EnumresultCriteriaSearchEntryReturnedCriteriaProp
		return ret
	}
	return *o.SearchEntryReturnedCriteria
}

// GetSearchEntryReturnedCriteriaOk returns a tuple with the SearchEntryReturnedCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSearchEntryReturnedCriteriaOk() (*EnumresultCriteriaSearchEntryReturnedCriteriaProp, bool) {
	if o == nil || IsNil(o.SearchEntryReturnedCriteria) {
		return nil, false
	}
	return o.SearchEntryReturnedCriteria, true
}

// HasSearchEntryReturnedCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasSearchEntryReturnedCriteria() bool {
	if o != nil && !IsNil(o.SearchEntryReturnedCriteria) {
		return true
	}

	return false
}

// SetSearchEntryReturnedCriteria gets a reference to the given EnumresultCriteriaSearchEntryReturnedCriteriaProp and assigns it to the SearchEntryReturnedCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetSearchEntryReturnedCriteria(v EnumresultCriteriaSearchEntryReturnedCriteriaProp) {
	o.SearchEntryReturnedCriteria = &v
}

// GetSearchEntryReturnedCount returns the SearchEntryReturnedCount field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetSearchEntryReturnedCount() int64 {
	if o == nil || IsNil(o.SearchEntryReturnedCount) {
		var ret int64
		return ret
	}
	return *o.SearchEntryReturnedCount
}

// GetSearchEntryReturnedCountOk returns a tuple with the SearchEntryReturnedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSearchEntryReturnedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.SearchEntryReturnedCount) {
		return nil, false
	}
	return o.SearchEntryReturnedCount, true
}

// HasSearchEntryReturnedCount returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasSearchEntryReturnedCount() bool {
	if o != nil && !IsNil(o.SearchEntryReturnedCount) {
		return true
	}

	return false
}

// SetSearchEntryReturnedCount gets a reference to the given int64 and assigns it to the SearchEntryReturnedCount field.
func (o *AddSimpleResultCriteriaRequest) SetSearchEntryReturnedCount(v int64) {
	o.SearchEntryReturnedCount = &v
}

// GetSearchReferenceReturnedCriteria returns the SearchReferenceReturnedCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetSearchReferenceReturnedCriteria() EnumresultCriteriaSearchReferenceReturnedCriteriaProp {
	if o == nil || IsNil(o.SearchReferenceReturnedCriteria) {
		var ret EnumresultCriteriaSearchReferenceReturnedCriteriaProp
		return ret
	}
	return *o.SearchReferenceReturnedCriteria
}

// GetSearchReferenceReturnedCriteriaOk returns a tuple with the SearchReferenceReturnedCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSearchReferenceReturnedCriteriaOk() (*EnumresultCriteriaSearchReferenceReturnedCriteriaProp, bool) {
	if o == nil || IsNil(o.SearchReferenceReturnedCriteria) {
		return nil, false
	}
	return o.SearchReferenceReturnedCriteria, true
}

// HasSearchReferenceReturnedCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasSearchReferenceReturnedCriteria() bool {
	if o != nil && !IsNil(o.SearchReferenceReturnedCriteria) {
		return true
	}

	return false
}

// SetSearchReferenceReturnedCriteria gets a reference to the given EnumresultCriteriaSearchReferenceReturnedCriteriaProp and assigns it to the SearchReferenceReturnedCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetSearchReferenceReturnedCriteria(v EnumresultCriteriaSearchReferenceReturnedCriteriaProp) {
	o.SearchReferenceReturnedCriteria = &v
}

// GetSearchReferenceReturnedCount returns the SearchReferenceReturnedCount field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetSearchReferenceReturnedCount() int64 {
	if o == nil || IsNil(o.SearchReferenceReturnedCount) {
		var ret int64
		return ret
	}
	return *o.SearchReferenceReturnedCount
}

// GetSearchReferenceReturnedCountOk returns a tuple with the SearchReferenceReturnedCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSearchReferenceReturnedCountOk() (*int64, bool) {
	if o == nil || IsNil(o.SearchReferenceReturnedCount) {
		return nil, false
	}
	return o.SearchReferenceReturnedCount, true
}

// HasSearchReferenceReturnedCount returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasSearchReferenceReturnedCount() bool {
	if o != nil && !IsNil(o.SearchReferenceReturnedCount) {
		return true
	}

	return false
}

// SetSearchReferenceReturnedCount gets a reference to the given int64 and assigns it to the SearchReferenceReturnedCount field.
func (o *AddSimpleResultCriteriaRequest) SetSearchReferenceReturnedCount(v int64) {
	o.SearchReferenceReturnedCount = &v
}

// GetSearchIndexedCriteria returns the SearchIndexedCriteria field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetSearchIndexedCriteria() EnumresultCriteriaSearchIndexedCriteriaProp {
	if o == nil || IsNil(o.SearchIndexedCriteria) {
		var ret EnumresultCriteriaSearchIndexedCriteriaProp
		return ret
	}
	return *o.SearchIndexedCriteria
}

// GetSearchIndexedCriteriaOk returns a tuple with the SearchIndexedCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetSearchIndexedCriteriaOk() (*EnumresultCriteriaSearchIndexedCriteriaProp, bool) {
	if o == nil || IsNil(o.SearchIndexedCriteria) {
		return nil, false
	}
	return o.SearchIndexedCriteria, true
}

// HasSearchIndexedCriteria returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasSearchIndexedCriteria() bool {
	if o != nil && !IsNil(o.SearchIndexedCriteria) {
		return true
	}

	return false
}

// SetSearchIndexedCriteria gets a reference to the given EnumresultCriteriaSearchIndexedCriteriaProp and assigns it to the SearchIndexedCriteria field.
func (o *AddSimpleResultCriteriaRequest) SetSearchIndexedCriteria(v EnumresultCriteriaSearchIndexedCriteriaProp) {
	o.SearchIndexedCriteria = &v
}

// GetIncludedAuthzUserBaseDN returns the IncludedAuthzUserBaseDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetIncludedAuthzUserBaseDN() []string {
	if o == nil || IsNil(o.IncludedAuthzUserBaseDN) {
		var ret []string
		return ret
	}
	return o.IncludedAuthzUserBaseDN
}

// GetIncludedAuthzUserBaseDNOk returns a tuple with the IncludedAuthzUserBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetIncludedAuthzUserBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.IncludedAuthzUserBaseDN) {
		return nil, false
	}
	return o.IncludedAuthzUserBaseDN, true
}

// HasIncludedAuthzUserBaseDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasIncludedAuthzUserBaseDN() bool {
	if o != nil && !IsNil(o.IncludedAuthzUserBaseDN) {
		return true
	}

	return false
}

// SetIncludedAuthzUserBaseDN gets a reference to the given []string and assigns it to the IncludedAuthzUserBaseDN field.
func (o *AddSimpleResultCriteriaRequest) SetIncludedAuthzUserBaseDN(v []string) {
	o.IncludedAuthzUserBaseDN = v
}

// GetExcludedAuthzUserBaseDN returns the ExcludedAuthzUserBaseDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetExcludedAuthzUserBaseDN() []string {
	if o == nil || IsNil(o.ExcludedAuthzUserBaseDN) {
		var ret []string
		return ret
	}
	return o.ExcludedAuthzUserBaseDN
}

// GetExcludedAuthzUserBaseDNOk returns a tuple with the ExcludedAuthzUserBaseDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetExcludedAuthzUserBaseDNOk() ([]string, bool) {
	if o == nil || IsNil(o.ExcludedAuthzUserBaseDN) {
		return nil, false
	}
	return o.ExcludedAuthzUserBaseDN, true
}

// HasExcludedAuthzUserBaseDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasExcludedAuthzUserBaseDN() bool {
	if o != nil && !IsNil(o.ExcludedAuthzUserBaseDN) {
		return true
	}

	return false
}

// SetExcludedAuthzUserBaseDN gets a reference to the given []string and assigns it to the ExcludedAuthzUserBaseDN field.
func (o *AddSimpleResultCriteriaRequest) SetExcludedAuthzUserBaseDN(v []string) {
	o.ExcludedAuthzUserBaseDN = v
}

// GetAllIncludedAuthzUserGroupDN returns the AllIncludedAuthzUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetAllIncludedAuthzUserGroupDN() []string {
	if o == nil || IsNil(o.AllIncludedAuthzUserGroupDN) {
		var ret []string
		return ret
	}
	return o.AllIncludedAuthzUserGroupDN
}

// GetAllIncludedAuthzUserGroupDNOk returns a tuple with the AllIncludedAuthzUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetAllIncludedAuthzUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.AllIncludedAuthzUserGroupDN) {
		return nil, false
	}
	return o.AllIncludedAuthzUserGroupDN, true
}

// HasAllIncludedAuthzUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasAllIncludedAuthzUserGroupDN() bool {
	if o != nil && !IsNil(o.AllIncludedAuthzUserGroupDN) {
		return true
	}

	return false
}

// SetAllIncludedAuthzUserGroupDN gets a reference to the given []string and assigns it to the AllIncludedAuthzUserGroupDN field.
func (o *AddSimpleResultCriteriaRequest) SetAllIncludedAuthzUserGroupDN(v []string) {
	o.AllIncludedAuthzUserGroupDN = v
}

// GetAnyIncludedAuthzUserGroupDN returns the AnyIncludedAuthzUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetAnyIncludedAuthzUserGroupDN() []string {
	if o == nil || IsNil(o.AnyIncludedAuthzUserGroupDN) {
		var ret []string
		return ret
	}
	return o.AnyIncludedAuthzUserGroupDN
}

// GetAnyIncludedAuthzUserGroupDNOk returns a tuple with the AnyIncludedAuthzUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetAnyIncludedAuthzUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.AnyIncludedAuthzUserGroupDN) {
		return nil, false
	}
	return o.AnyIncludedAuthzUserGroupDN, true
}

// HasAnyIncludedAuthzUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasAnyIncludedAuthzUserGroupDN() bool {
	if o != nil && !IsNil(o.AnyIncludedAuthzUserGroupDN) {
		return true
	}

	return false
}

// SetAnyIncludedAuthzUserGroupDN gets a reference to the given []string and assigns it to the AnyIncludedAuthzUserGroupDN field.
func (o *AddSimpleResultCriteriaRequest) SetAnyIncludedAuthzUserGroupDN(v []string) {
	o.AnyIncludedAuthzUserGroupDN = v
}

// GetNotAllIncludedAuthzUserGroupDN returns the NotAllIncludedAuthzUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetNotAllIncludedAuthzUserGroupDN() []string {
	if o == nil || IsNil(o.NotAllIncludedAuthzUserGroupDN) {
		var ret []string
		return ret
	}
	return o.NotAllIncludedAuthzUserGroupDN
}

// GetNotAllIncludedAuthzUserGroupDNOk returns a tuple with the NotAllIncludedAuthzUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetNotAllIncludedAuthzUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.NotAllIncludedAuthzUserGroupDN) {
		return nil, false
	}
	return o.NotAllIncludedAuthzUserGroupDN, true
}

// HasNotAllIncludedAuthzUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasNotAllIncludedAuthzUserGroupDN() bool {
	if o != nil && !IsNil(o.NotAllIncludedAuthzUserGroupDN) {
		return true
	}

	return false
}

// SetNotAllIncludedAuthzUserGroupDN gets a reference to the given []string and assigns it to the NotAllIncludedAuthzUserGroupDN field.
func (o *AddSimpleResultCriteriaRequest) SetNotAllIncludedAuthzUserGroupDN(v []string) {
	o.NotAllIncludedAuthzUserGroupDN = v
}

// GetNoneIncludedAuthzUserGroupDN returns the NoneIncludedAuthzUserGroupDN field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetNoneIncludedAuthzUserGroupDN() []string {
	if o == nil || IsNil(o.NoneIncludedAuthzUserGroupDN) {
		var ret []string
		return ret
	}
	return o.NoneIncludedAuthzUserGroupDN
}

// GetNoneIncludedAuthzUserGroupDNOk returns a tuple with the NoneIncludedAuthzUserGroupDN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetNoneIncludedAuthzUserGroupDNOk() ([]string, bool) {
	if o == nil || IsNil(o.NoneIncludedAuthzUserGroupDN) {
		return nil, false
	}
	return o.NoneIncludedAuthzUserGroupDN, true
}

// HasNoneIncludedAuthzUserGroupDN returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasNoneIncludedAuthzUserGroupDN() bool {
	if o != nil && !IsNil(o.NoneIncludedAuthzUserGroupDN) {
		return true
	}

	return false
}

// SetNoneIncludedAuthzUserGroupDN gets a reference to the given []string and assigns it to the NoneIncludedAuthzUserGroupDN field.
func (o *AddSimpleResultCriteriaRequest) SetNoneIncludedAuthzUserGroupDN(v []string) {
	o.NoneIncludedAuthzUserGroupDN = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddSimpleResultCriteriaRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddSimpleResultCriteriaRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddSimpleResultCriteriaRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddSimpleResultCriteriaRequest) SetDescription(v string) {
	o.Description = &v
}

func (o AddSimpleResultCriteriaRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AddSimpleResultCriteriaRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["criteriaName"] = o.CriteriaName
	toSerialize["schemas"] = o.Schemas
	if !IsNil(o.RequestCriteria) {
		toSerialize["requestCriteria"] = o.RequestCriteria
	}
	if !IsNil(o.ResultCodeCriteria) {
		toSerialize["resultCodeCriteria"] = o.ResultCodeCriteria
	}
	if !IsNil(o.ResultCodeValue) {
		toSerialize["resultCodeValue"] = o.ResultCodeValue
	}
	if !IsNil(o.ProcessingTimeCriteria) {
		toSerialize["processingTimeCriteria"] = o.ProcessingTimeCriteria
	}
	if !IsNil(o.ProcessingTimeValue) {
		toSerialize["processingTimeValue"] = o.ProcessingTimeValue
	}
	if !IsNil(o.QueueTimeCriteria) {
		toSerialize["queueTimeCriteria"] = o.QueueTimeCriteria
	}
	if !IsNil(o.QueueTimeValue) {
		toSerialize["queueTimeValue"] = o.QueueTimeValue
	}
	if !IsNil(o.ReferralReturned) {
		toSerialize["referralReturned"] = o.ReferralReturned
	}
	if !IsNil(o.AllIncludedResponseControl) {
		toSerialize["allIncludedResponseControl"] = o.AllIncludedResponseControl
	}
	if !IsNil(o.AnyIncludedResponseControl) {
		toSerialize["anyIncludedResponseControl"] = o.AnyIncludedResponseControl
	}
	if !IsNil(o.NotAllIncludedResponseControl) {
		toSerialize["notAllIncludedResponseControl"] = o.NotAllIncludedResponseControl
	}
	if !IsNil(o.NoneIncludedResponseControl) {
		toSerialize["noneIncludedResponseControl"] = o.NoneIncludedResponseControl
	}
	if !IsNil(o.UsedAlternateAuthzid) {
		toSerialize["usedAlternateAuthzid"] = o.UsedAlternateAuthzid
	}
	if !IsNil(o.UsedAnyPrivilege) {
		toSerialize["usedAnyPrivilege"] = o.UsedAnyPrivilege
	}
	if !IsNil(o.UsedPrivilege) {
		toSerialize["usedPrivilege"] = o.UsedPrivilege
	}
	if !IsNil(o.MissingAnyPrivilege) {
		toSerialize["missingAnyPrivilege"] = o.MissingAnyPrivilege
	}
	if !IsNil(o.MissingPrivilege) {
		toSerialize["missingPrivilege"] = o.MissingPrivilege
	}
	if !IsNil(o.RetiredPasswordUsedForBind) {
		toSerialize["retiredPasswordUsedForBind"] = o.RetiredPasswordUsedForBind
	}
	if !IsNil(o.SearchEntryReturnedCriteria) {
		toSerialize["searchEntryReturnedCriteria"] = o.SearchEntryReturnedCriteria
	}
	if !IsNil(o.SearchEntryReturnedCount) {
		toSerialize["searchEntryReturnedCount"] = o.SearchEntryReturnedCount
	}
	if !IsNil(o.SearchReferenceReturnedCriteria) {
		toSerialize["searchReferenceReturnedCriteria"] = o.SearchReferenceReturnedCriteria
	}
	if !IsNil(o.SearchReferenceReturnedCount) {
		toSerialize["searchReferenceReturnedCount"] = o.SearchReferenceReturnedCount
	}
	if !IsNil(o.SearchIndexedCriteria) {
		toSerialize["searchIndexedCriteria"] = o.SearchIndexedCriteria
	}
	if !IsNil(o.IncludedAuthzUserBaseDN) {
		toSerialize["includedAuthzUserBaseDN"] = o.IncludedAuthzUserBaseDN
	}
	if !IsNil(o.ExcludedAuthzUserBaseDN) {
		toSerialize["excludedAuthzUserBaseDN"] = o.ExcludedAuthzUserBaseDN
	}
	if !IsNil(o.AllIncludedAuthzUserGroupDN) {
		toSerialize["allIncludedAuthzUserGroupDN"] = o.AllIncludedAuthzUserGroupDN
	}
	if !IsNil(o.AnyIncludedAuthzUserGroupDN) {
		toSerialize["anyIncludedAuthzUserGroupDN"] = o.AnyIncludedAuthzUserGroupDN
	}
	if !IsNil(o.NotAllIncludedAuthzUserGroupDN) {
		toSerialize["notAllIncludedAuthzUserGroupDN"] = o.NotAllIncludedAuthzUserGroupDN
	}
	if !IsNil(o.NoneIncludedAuthzUserGroupDN) {
		toSerialize["noneIncludedAuthzUserGroupDN"] = o.NoneIncludedAuthzUserGroupDN
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return toSerialize, nil
}

type NullableAddSimpleResultCriteriaRequest struct {
	value *AddSimpleResultCriteriaRequest
	isSet bool
}

func (v NullableAddSimpleResultCriteriaRequest) Get() *AddSimpleResultCriteriaRequest {
	return v.value
}

func (v *NullableAddSimpleResultCriteriaRequest) Set(val *AddSimpleResultCriteriaRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSimpleResultCriteriaRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSimpleResultCriteriaRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSimpleResultCriteriaRequest(val *AddSimpleResultCriteriaRequest) *NullableAddSimpleResultCriteriaRequest {
	return &NullableAddSimpleResultCriteriaRequest{value: val, isSet: true}
}

func (v NullableAddSimpleResultCriteriaRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSimpleResultCriteriaRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
