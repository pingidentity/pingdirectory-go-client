/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
type EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp string

// List of Enumconnection-criteria-notAllIncludedUserPrivilegeProp
const (
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_AUDIT_DATA_SECURITY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "audit-data-security"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_BYPASS_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-acl"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_BYPASS_READ_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-read-acl"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_MODIFY_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "modify-acl"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_CONFIG_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "config-read"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_CONFIG_WRITE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "config-write"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_JMX_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-read"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_JMX_WRITE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-write"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_JMX_NOTIFY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-notify"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_LDIF_IMPORT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "ldif-import"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_LDIF_EXPORT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "ldif-export"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_BACKEND_BACKUP EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "backend-backup"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_BACKEND_RESTORE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "backend-restore"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_SERVER_SHUTDOWN EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "server-shutdown"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_SERVER_RESTART EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "server-restart"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PROXIED_AUTH EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "proxied-auth"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_DISCONNECT_CLIENT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "disconnect-client"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PASSWORD_RESET EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "password-reset"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_UPDATE_SCHEMA EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "update-schema"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PRIVILEGE_CHANGE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "privilege-change"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "unindexed-search"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "unindexed-search-with-control"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_BYPASS_PW_POLICY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-pw-policy"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_LOCKDOWN_MODE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "lockdown-mode"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_STREAM_VALUES EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "stream-values"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_THIRD_PARTY_TASK EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "third-party-task"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_USE_ADMIN_SESSION EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "use-admin-session"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_SOFT_DELETE_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "soft-delete-read"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_METRICS_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "metrics-read"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_REMOTE_LOG_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "remote-log-read"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_MANAGE_TOPOLOGY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "manage-topology"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-get-password-policy-state-issues"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-proxied-mschapv2-details"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-externally-processed-authentication"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-export-reversible-passwords"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_EXEC_TASK EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "exec-task"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_COLLECT_SUPPORT_DATA EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "collect-support-data"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_FILE_SERVLET_ACCESS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "file-servlet-access"
	ENUMCONNECTIONCRITERIANOTALLINCLUDEDUSERPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp enum
var AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues = []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp", value)
}

// NewEnumconnectionCriteriaNotAllIncludedUserPrivilegePropFromValue returns a pointer to a valid EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaNotAllIncludedUserPrivilegePropFromValue(v string) (*EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp, error) {
	ev := EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp: valid values are %v", v, AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-notAllIncludedUserPrivilegeProp value
func (v EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Ptr() *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return &v
}

type NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp struct {
	value *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Get() *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Set(val *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(val *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return &NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

