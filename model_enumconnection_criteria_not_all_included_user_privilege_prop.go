/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp Specifies the name of a privilege that should not be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must not have at least one of those privileges (that is, the user may hold zero or more of those privileges, but not all of them). This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
type EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp string

// List of Enumconnection-criteria-notAllIncludedUserPrivilegeProp
const (
	AUDIT_DATA_SECURITY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "audit-data-security"
	BYPASS_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-acl"
	BYPASS_READ_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-read-acl"
	MODIFY_ACL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "modify-acl"
	CONFIG_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "config-read"
	CONFIG_WRITE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "config-write"
	JMX_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-read"
	JMX_WRITE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-write"
	JMX_NOTIFY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "jmx-notify"
	LDIF_IMPORT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "ldif-import"
	LDIF_EXPORT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "ldif-export"
	BACKEND_BACKUP EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "backend-backup"
	BACKEND_RESTORE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "backend-restore"
	SERVER_SHUTDOWN EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "server-shutdown"
	SERVER_RESTART EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "server-restart"
	PROXIED_AUTH EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "proxied-auth"
	DISCONNECT_CLIENT EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "disconnect-client"
	PASSWORD_RESET EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "password-reset"
	UPDATE_SCHEMA EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "update-schema"
	PRIVILEGE_CHANGE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "privilege-change"
	UNINDEXED_SEARCH EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "unindexed-search"
	UNINDEXED_SEARCH_WITH_CONTROL EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "unindexed-search-with-control"
	BYPASS_PW_POLICY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "bypass-pw-policy"
	LOCKDOWN_MODE EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "lockdown-mode"
	STREAM_VALUES EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "stream-values"
	THIRD_PARTY_TASK EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "third-party-task"
	USE_ADMIN_SESSION EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "use-admin-session"
	SOFT_DELETE_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "soft-delete-read"
	METRICS_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "metrics-read"
	REMOTE_LOG_READ EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "remote-log-read"
	MANAGE_TOPOLOGY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "manage-topology"
	PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-get-password-policy-state-issues"
	PERMIT_PROXIED_MSCHAPV2_DETAILS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-proxied-mschapv2-details"
	PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-externally-processed-authentication"
	PERMIT_EXPORT_REVERSIBLE_PASSWORDS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-export-reversible-passwords"
	PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	EXEC_TASK EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "exec-task"
	COLLECT_SUPPORT_DATA EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "collect-support-data"
	FILE_SERVLET_ACCESS EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "file-servlet-access"
	PERMIT_REPLACE_CERTIFICATE_REQUEST EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp enum
var AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues = []EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp", value)
}

// NewEnumconnectionCriteriaNotAllIncludedUserPrivilegePropFromValue returns a pointer to a valid EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaNotAllIncludedUserPrivilegePropFromValue(v string) (*EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp, error) {
	ev := EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp: valid values are %v", v, AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaNotAllIncludedUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-notAllIncludedUserPrivilegeProp value
func (v EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Ptr() *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return &v
}

type NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp struct {
	value *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Get() *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Set(val *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp(val *EnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp {
	return &NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaNotAllIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

