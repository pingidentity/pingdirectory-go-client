/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MultiplePasswordDataSecurityAuditorShared struct for MultiplePasswordDataSecurityAuditorShared
type MultiplePasswordDataSecurityAuditorShared struct {
	Schemas []EnummultiplePasswordDataSecurityAuditorSchemaUrn `json:"schemas"`
	// Specifies the name of the detailed report file.
	ReportFile string `json:"reportFile"`
	// Indicates whether the Data Security Auditor is enabled for use.
	Enabled bool `json:"enabled"`
	IncludeAttribute []string `json:"includeAttribute,omitempty"`
	AuditBackend []string `json:"auditBackend,omitempty"`
	AuditSeverity *EnumdataSecurityAuditorAuditSeverityProp `json:"auditSeverity,omitempty"`
}

// NewMultiplePasswordDataSecurityAuditorShared instantiates a new MultiplePasswordDataSecurityAuditorShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiplePasswordDataSecurityAuditorShared(schemas []EnummultiplePasswordDataSecurityAuditorSchemaUrn, reportFile string, enabled bool) *MultiplePasswordDataSecurityAuditorShared {
	this := MultiplePasswordDataSecurityAuditorShared{}
	this.Schemas = schemas
	this.ReportFile = reportFile
	this.Enabled = enabled
	return &this
}

// NewMultiplePasswordDataSecurityAuditorSharedWithDefaults instantiates a new MultiplePasswordDataSecurityAuditorShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiplePasswordDataSecurityAuditorSharedWithDefaults() *MultiplePasswordDataSecurityAuditorShared {
	this := MultiplePasswordDataSecurityAuditorShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *MultiplePasswordDataSecurityAuditorShared) GetSchemas() []EnummultiplePasswordDataSecurityAuditorSchemaUrn {
	if o == nil {
		var ret []EnummultiplePasswordDataSecurityAuditorSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetSchemasOk() ([]EnummultiplePasswordDataSecurityAuditorSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *MultiplePasswordDataSecurityAuditorShared) SetSchemas(v []EnummultiplePasswordDataSecurityAuditorSchemaUrn) {
	o.Schemas = v
}

// GetReportFile returns the ReportFile field value
func (o *MultiplePasswordDataSecurityAuditorShared) GetReportFile() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ReportFile
}

// GetReportFileOk returns a tuple with the ReportFile field value
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetReportFileOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ReportFile, true
}

// SetReportFile sets field value
func (o *MultiplePasswordDataSecurityAuditorShared) SetReportFile(v string) {
	o.ReportFile = v
}

// GetEnabled returns the Enabled field value
func (o *MultiplePasswordDataSecurityAuditorShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MultiplePasswordDataSecurityAuditorShared) SetEnabled(v bool) {
	o.Enabled = v
}

// GetIncludeAttribute returns the IncludeAttribute field value if set, zero value otherwise.
func (o *MultiplePasswordDataSecurityAuditorShared) GetIncludeAttribute() []string {
	if o == nil || isNil(o.IncludeAttribute) {
		var ret []string
		return ret
	}
	return o.IncludeAttribute
}

// GetIncludeAttributeOk returns a tuple with the IncludeAttribute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetIncludeAttributeOk() ([]string, bool) {
	if o == nil || isNil(o.IncludeAttribute) {
    return nil, false
	}
	return o.IncludeAttribute, true
}

// HasIncludeAttribute returns a boolean if a field has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) HasIncludeAttribute() bool {
	if o != nil && !isNil(o.IncludeAttribute) {
		return true
	}

	return false
}

// SetIncludeAttribute gets a reference to the given []string and assigns it to the IncludeAttribute field.
func (o *MultiplePasswordDataSecurityAuditorShared) SetIncludeAttribute(v []string) {
	o.IncludeAttribute = v
}

// GetAuditBackend returns the AuditBackend field value if set, zero value otherwise.
func (o *MultiplePasswordDataSecurityAuditorShared) GetAuditBackend() []string {
	if o == nil || isNil(o.AuditBackend) {
		var ret []string
		return ret
	}
	return o.AuditBackend
}

// GetAuditBackendOk returns a tuple with the AuditBackend field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetAuditBackendOk() ([]string, bool) {
	if o == nil || isNil(o.AuditBackend) {
    return nil, false
	}
	return o.AuditBackend, true
}

// HasAuditBackend returns a boolean if a field has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) HasAuditBackend() bool {
	if o != nil && !isNil(o.AuditBackend) {
		return true
	}

	return false
}

// SetAuditBackend gets a reference to the given []string and assigns it to the AuditBackend field.
func (o *MultiplePasswordDataSecurityAuditorShared) SetAuditBackend(v []string) {
	o.AuditBackend = v
}

// GetAuditSeverity returns the AuditSeverity field value if set, zero value otherwise.
func (o *MultiplePasswordDataSecurityAuditorShared) GetAuditSeverity() EnumdataSecurityAuditorAuditSeverityProp {
	if o == nil || isNil(o.AuditSeverity) {
		var ret EnumdataSecurityAuditorAuditSeverityProp
		return ret
	}
	return *o.AuditSeverity
}

// GetAuditSeverityOk returns a tuple with the AuditSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) GetAuditSeverityOk() (*EnumdataSecurityAuditorAuditSeverityProp, bool) {
	if o == nil || isNil(o.AuditSeverity) {
    return nil, false
	}
	return o.AuditSeverity, true
}

// HasAuditSeverity returns a boolean if a field has been set.
func (o *MultiplePasswordDataSecurityAuditorShared) HasAuditSeverity() bool {
	if o != nil && !isNil(o.AuditSeverity) {
		return true
	}

	return false
}

// SetAuditSeverity gets a reference to the given EnumdataSecurityAuditorAuditSeverityProp and assigns it to the AuditSeverity field.
func (o *MultiplePasswordDataSecurityAuditorShared) SetAuditSeverity(v EnumdataSecurityAuditorAuditSeverityProp) {
	o.AuditSeverity = &v
}

func (o MultiplePasswordDataSecurityAuditorShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["reportFile"] = o.ReportFile
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	if !isNil(o.IncludeAttribute) {
		toSerialize["includeAttribute"] = o.IncludeAttribute
	}
	if !isNil(o.AuditBackend) {
		toSerialize["auditBackend"] = o.AuditBackend
	}
	if !isNil(o.AuditSeverity) {
		toSerialize["auditSeverity"] = o.AuditSeverity
	}
	return json.Marshal(toSerialize)
}

type NullableMultiplePasswordDataSecurityAuditorShared struct {
	value *MultiplePasswordDataSecurityAuditorShared
	isSet bool
}

func (v NullableMultiplePasswordDataSecurityAuditorShared) Get() *MultiplePasswordDataSecurityAuditorShared {
	return v.value
}

func (v *NullableMultiplePasswordDataSecurityAuditorShared) Set(val *MultiplePasswordDataSecurityAuditorShared) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiplePasswordDataSecurityAuditorShared) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiplePasswordDataSecurityAuditorShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiplePasswordDataSecurityAuditorShared(val *MultiplePasswordDataSecurityAuditorShared) *NullableMultiplePasswordDataSecurityAuditorShared {
	return &NullableMultiplePasswordDataSecurityAuditorShared{value: val, isSet: true}
}

func (v NullableMultiplePasswordDataSecurityAuditorShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiplePasswordDataSecurityAuditorShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


