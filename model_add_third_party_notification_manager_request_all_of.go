/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddThirdPartyNotificationManagerRequestAllOf struct for AddThirdPartyNotificationManagerRequestAllOf
type AddThirdPartyNotificationManagerRequestAllOf struct {
	// Name of the new Notification Manager
	ManagerName string `json:"managerName"`
}

// NewAddThirdPartyNotificationManagerRequestAllOf instantiates a new AddThirdPartyNotificationManagerRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddThirdPartyNotificationManagerRequestAllOf(managerName string) *AddThirdPartyNotificationManagerRequestAllOf {
	this := AddThirdPartyNotificationManagerRequestAllOf{}
	this.ManagerName = managerName
	return &this
}

// NewAddThirdPartyNotificationManagerRequestAllOfWithDefaults instantiates a new AddThirdPartyNotificationManagerRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddThirdPartyNotificationManagerRequestAllOfWithDefaults() *AddThirdPartyNotificationManagerRequestAllOf {
	this := AddThirdPartyNotificationManagerRequestAllOf{}
	return &this
}

// GetManagerName returns the ManagerName field value
func (o *AddThirdPartyNotificationManagerRequestAllOf) GetManagerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ManagerName
}

// GetManagerNameOk returns a tuple with the ManagerName field value
// and a boolean to check if the value has been set.
func (o *AddThirdPartyNotificationManagerRequestAllOf) GetManagerNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ManagerName, true
}

// SetManagerName sets field value
func (o *AddThirdPartyNotificationManagerRequestAllOf) SetManagerName(v string) {
	o.ManagerName = v
}

func (o AddThirdPartyNotificationManagerRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["managerName"] = o.ManagerName
	}
	return json.Marshal(toSerialize)
}

type NullableAddThirdPartyNotificationManagerRequestAllOf struct {
	value *AddThirdPartyNotificationManagerRequestAllOf
	isSet bool
}

func (v NullableAddThirdPartyNotificationManagerRequestAllOf) Get() *AddThirdPartyNotificationManagerRequestAllOf {
	return v.value
}

func (v *NullableAddThirdPartyNotificationManagerRequestAllOf) Set(val *AddThirdPartyNotificationManagerRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddThirdPartyNotificationManagerRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddThirdPartyNotificationManagerRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddThirdPartyNotificationManagerRequestAllOf(val *AddThirdPartyNotificationManagerRequestAllOf) *NullableAddThirdPartyNotificationManagerRequestAllOf {
	return &NullableAddThirdPartyNotificationManagerRequestAllOf{value: val, isSet: true}
}

func (v NullableAddThirdPartyNotificationManagerRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddThirdPartyNotificationManagerRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


