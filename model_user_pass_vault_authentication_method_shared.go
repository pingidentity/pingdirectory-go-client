/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// UserPassVaultAuthenticationMethodShared struct for UserPassVaultAuthenticationMethodShared
type UserPassVaultAuthenticationMethodShared struct {
	Schemas []EnumuserPassVaultAuthenticationMethodSchemaUrn `json:"schemas"`
	// The username for the user to authenticate.
	Username string `json:"username"`
	// The password for the user to authenticate.
	Password string `json:"password"`
	// The name used when enabling the desired UserPass authentication mechanism in the Vault server.
	LoginMechanismName *string `json:"loginMechanismName,omitempty"`
	// A description for this Vault Authentication Method
	Description *string `json:"description,omitempty"`
}

// NewUserPassVaultAuthenticationMethodShared instantiates a new UserPassVaultAuthenticationMethodShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPassVaultAuthenticationMethodShared(schemas []EnumuserPassVaultAuthenticationMethodSchemaUrn, username string, password string) *UserPassVaultAuthenticationMethodShared {
	this := UserPassVaultAuthenticationMethodShared{}
	this.Schemas = schemas
	this.Username = username
	this.Password = password
	return &this
}

// NewUserPassVaultAuthenticationMethodSharedWithDefaults instantiates a new UserPassVaultAuthenticationMethodShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPassVaultAuthenticationMethodSharedWithDefaults() *UserPassVaultAuthenticationMethodShared {
	this := UserPassVaultAuthenticationMethodShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *UserPassVaultAuthenticationMethodShared) GetSchemas() []EnumuserPassVaultAuthenticationMethodSchemaUrn {
	if o == nil {
		var ret []EnumuserPassVaultAuthenticationMethodSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *UserPassVaultAuthenticationMethodShared) GetSchemasOk() ([]EnumuserPassVaultAuthenticationMethodSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *UserPassVaultAuthenticationMethodShared) SetSchemas(v []EnumuserPassVaultAuthenticationMethodSchemaUrn) {
	o.Schemas = v
}

// GetUsername returns the Username field value
func (o *UserPassVaultAuthenticationMethodShared) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *UserPassVaultAuthenticationMethodShared) GetUsernameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *UserPassVaultAuthenticationMethodShared) SetUsername(v string) {
	o.Username = v
}

// GetPassword returns the Password field value
func (o *UserPassVaultAuthenticationMethodShared) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UserPassVaultAuthenticationMethodShared) GetPasswordOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UserPassVaultAuthenticationMethodShared) SetPassword(v string) {
	o.Password = v
}

// GetLoginMechanismName returns the LoginMechanismName field value if set, zero value otherwise.
func (o *UserPassVaultAuthenticationMethodShared) GetLoginMechanismName() string {
	if o == nil || isNil(o.LoginMechanismName) {
		var ret string
		return ret
	}
	return *o.LoginMechanismName
}

// GetLoginMechanismNameOk returns a tuple with the LoginMechanismName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPassVaultAuthenticationMethodShared) GetLoginMechanismNameOk() (*string, bool) {
	if o == nil || isNil(o.LoginMechanismName) {
    return nil, false
	}
	return o.LoginMechanismName, true
}

// HasLoginMechanismName returns a boolean if a field has been set.
func (o *UserPassVaultAuthenticationMethodShared) HasLoginMechanismName() bool {
	if o != nil && !isNil(o.LoginMechanismName) {
		return true
	}

	return false
}

// SetLoginMechanismName gets a reference to the given string and assigns it to the LoginMechanismName field.
func (o *UserPassVaultAuthenticationMethodShared) SetLoginMechanismName(v string) {
	o.LoginMechanismName = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UserPassVaultAuthenticationMethodShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPassVaultAuthenticationMethodShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UserPassVaultAuthenticationMethodShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UserPassVaultAuthenticationMethodShared) SetDescription(v string) {
	o.Description = &v
}

func (o UserPassVaultAuthenticationMethodShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["username"] = o.Username
	}
	if true {
		toSerialize["password"] = o.Password
	}
	if !isNil(o.LoginMechanismName) {
		toSerialize["loginMechanismName"] = o.LoginMechanismName
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableUserPassVaultAuthenticationMethodShared struct {
	value *UserPassVaultAuthenticationMethodShared
	isSet bool
}

func (v NullableUserPassVaultAuthenticationMethodShared) Get() *UserPassVaultAuthenticationMethodShared {
	return v.value
}

func (v *NullableUserPassVaultAuthenticationMethodShared) Set(val *UserPassVaultAuthenticationMethodShared) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPassVaultAuthenticationMethodShared) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPassVaultAuthenticationMethodShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPassVaultAuthenticationMethodShared(val *UserPassVaultAuthenticationMethodShared) *NullableUserPassVaultAuthenticationMethodShared {
	return &NullableUserPassVaultAuthenticationMethodShared{value: val, isSet: true}
}

func (v NullableUserPassVaultAuthenticationMethodShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPassVaultAuthenticationMethodShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


