/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumgaugeDataSourceDataOrientationProp Indicates whether a higher or lower value is a more severe condition.
type EnumgaugeDataSourceDataOrientationProp string

// List of Enumgauge-data-source-dataOrientationProp
const (
	ENUMGAUGEDATASOURCEDATAORIENTATIONPROP_LOWER_IS_BETTER EnumgaugeDataSourceDataOrientationProp = "lower-is-better"
	ENUMGAUGEDATASOURCEDATAORIENTATIONPROP_HIGHER_IS_BETTER EnumgaugeDataSourceDataOrientationProp = "higher-is-better"
)

// All allowed values of EnumgaugeDataSourceDataOrientationProp enum
var AllowedEnumgaugeDataSourceDataOrientationPropEnumValues = []EnumgaugeDataSourceDataOrientationProp{
	"lower-is-better",
	"higher-is-better",
}

func (v *EnumgaugeDataSourceDataOrientationProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumgaugeDataSourceDataOrientationProp(value)
	for _, existing := range AllowedEnumgaugeDataSourceDataOrientationPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumgaugeDataSourceDataOrientationProp", value)
}

// NewEnumgaugeDataSourceDataOrientationPropFromValue returns a pointer to a valid EnumgaugeDataSourceDataOrientationProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumgaugeDataSourceDataOrientationPropFromValue(v string) (*EnumgaugeDataSourceDataOrientationProp, error) {
	ev := EnumgaugeDataSourceDataOrientationProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumgaugeDataSourceDataOrientationProp: valid values are %v", v, AllowedEnumgaugeDataSourceDataOrientationPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumgaugeDataSourceDataOrientationProp) IsValid() bool {
	for _, existing := range AllowedEnumgaugeDataSourceDataOrientationPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumgauge-data-source-dataOrientationProp value
func (v EnumgaugeDataSourceDataOrientationProp) Ptr() *EnumgaugeDataSourceDataOrientationProp {
	return &v
}

type NullableEnumgaugeDataSourceDataOrientationProp struct {
	value *EnumgaugeDataSourceDataOrientationProp
	isSet bool
}

func (v NullableEnumgaugeDataSourceDataOrientationProp) Get() *EnumgaugeDataSourceDataOrientationProp {
	return v.value
}

func (v *NullableEnumgaugeDataSourceDataOrientationProp) Set(val *EnumgaugeDataSourceDataOrientationProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumgaugeDataSourceDataOrientationProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumgaugeDataSourceDataOrientationProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumgaugeDataSourceDataOrientationProp(val *EnumgaugeDataSourceDataOrientationProp) *NullableEnumgaugeDataSourceDataOrientationProp {
	return &NullableEnumgaugeDataSourceDataOrientationProp{value: val, isSet: true}
}

func (v NullableEnumgaugeDataSourceDataOrientationProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumgaugeDataSourceDataOrientationProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

