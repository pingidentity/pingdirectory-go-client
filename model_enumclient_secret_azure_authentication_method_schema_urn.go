/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumclientSecretAzureAuthenticationMethodSchemaUrn the model 'EnumclientSecretAzureAuthenticationMethodSchemaUrn'
type EnumclientSecretAzureAuthenticationMethodSchemaUrn string

// List of Enumclient-secret-azure-authentication-methodSchemaUrn
const (
	ENUMCLIENTSECRETAZUREAUTHENTICATIONMETHODSCHEMAURN_URNPINGIDENTITYSCHEMASCONFIGURATION2_0AZURE_AUTHENTICATION_METHODCLIENT_SECRET EnumclientSecretAzureAuthenticationMethodSchemaUrn = "urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:client-secret"
)

// All allowed values of EnumclientSecretAzureAuthenticationMethodSchemaUrn enum
var AllowedEnumclientSecretAzureAuthenticationMethodSchemaUrnEnumValues = []EnumclientSecretAzureAuthenticationMethodSchemaUrn{
	"urn:pingidentity:schemas:configuration:2.0:azure-authentication-method:client-secret",
}

func (v *EnumclientSecretAzureAuthenticationMethodSchemaUrn) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumclientSecretAzureAuthenticationMethodSchemaUrn(value)
	for _, existing := range AllowedEnumclientSecretAzureAuthenticationMethodSchemaUrnEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumclientSecretAzureAuthenticationMethodSchemaUrn", value)
}

// NewEnumclientSecretAzureAuthenticationMethodSchemaUrnFromValue returns a pointer to a valid EnumclientSecretAzureAuthenticationMethodSchemaUrn
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumclientSecretAzureAuthenticationMethodSchemaUrnFromValue(v string) (*EnumclientSecretAzureAuthenticationMethodSchemaUrn, error) {
	ev := EnumclientSecretAzureAuthenticationMethodSchemaUrn(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumclientSecretAzureAuthenticationMethodSchemaUrn: valid values are %v", v, AllowedEnumclientSecretAzureAuthenticationMethodSchemaUrnEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumclientSecretAzureAuthenticationMethodSchemaUrn) IsValid() bool {
	for _, existing := range AllowedEnumclientSecretAzureAuthenticationMethodSchemaUrnEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumclient-secret-azure-authentication-methodSchemaUrn value
func (v EnumclientSecretAzureAuthenticationMethodSchemaUrn) Ptr() *EnumclientSecretAzureAuthenticationMethodSchemaUrn {
	return &v
}

type NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn struct {
	value *EnumclientSecretAzureAuthenticationMethodSchemaUrn
	isSet bool
}

func (v NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) Get() *EnumclientSecretAzureAuthenticationMethodSchemaUrn {
	return v.value
}

func (v *NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) Set(val *EnumclientSecretAzureAuthenticationMethodSchemaUrn) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumclientSecretAzureAuthenticationMethodSchemaUrn(val *EnumclientSecretAzureAuthenticationMethodSchemaUrn) *NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn {
	return &NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn{value: val, isSet: true}
}

func (v NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumclientSecretAzureAuthenticationMethodSchemaUrn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

