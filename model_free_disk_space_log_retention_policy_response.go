/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// FreeDiskSpaceLogRetentionPolicyResponse struct for FreeDiskSpaceLogRetentionPolicyResponse
type FreeDiskSpaceLogRetentionPolicyResponse struct {
	// Name of the Log Retention Policy
	Id string `json:"id"`
	Schemas []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn `json:"schemas"`
	// Specifies the minimum amount of free disk space that should be available on the file system on which the archived log files are stored.
	FreeDiskSpace string `json:"freeDiskSpace"`
	// A description for this Log Retention Policy
	Description *string `json:"description,omitempty"`
}

// NewFreeDiskSpaceLogRetentionPolicyResponse instantiates a new FreeDiskSpaceLogRetentionPolicyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFreeDiskSpaceLogRetentionPolicyResponse(id string, schemas []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn, freeDiskSpace string) *FreeDiskSpaceLogRetentionPolicyResponse {
	this := FreeDiskSpaceLogRetentionPolicyResponse{}
	this.Id = id
	this.Schemas = schemas
	this.FreeDiskSpace = freeDiskSpace
	return &this
}

// NewFreeDiskSpaceLogRetentionPolicyResponseWithDefaults instantiates a new FreeDiskSpaceLogRetentionPolicyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFreeDiskSpaceLogRetentionPolicyResponseWithDefaults() *FreeDiskSpaceLogRetentionPolicyResponse {
	this := FreeDiskSpaceLogRetentionPolicyResponse{}
	return &this
}

// GetId returns the Id field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetIdOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) SetId(v string) {
	o.Id = v
}

// GetSchemas returns the Schemas field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetSchemas() []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn {
	if o == nil {
		var ret []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetSchemasOk() ([]EnumfreeDiskSpaceLogRetentionPolicySchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) SetSchemas(v []EnumfreeDiskSpaceLogRetentionPolicySchemaUrn) {
	o.Schemas = v
}

// GetFreeDiskSpace returns the FreeDiskSpace field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetFreeDiskSpace() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FreeDiskSpace
}

// GetFreeDiskSpaceOk returns a tuple with the FreeDiskSpace field value
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetFreeDiskSpaceOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.FreeDiskSpace, true
}

// SetFreeDiskSpace sets field value
func (o *FreeDiskSpaceLogRetentionPolicyResponse) SetFreeDiskSpace(v string) {
	o.FreeDiskSpace = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FreeDiskSpaceLogRetentionPolicyResponse) SetDescription(v string) {
	o.Description = &v
}

func (o FreeDiskSpaceLogRetentionPolicyResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["freeDiskSpace"] = o.FreeDiskSpace
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableFreeDiskSpaceLogRetentionPolicyResponse struct {
	value *FreeDiskSpaceLogRetentionPolicyResponse
	isSet bool
}

func (v NullableFreeDiskSpaceLogRetentionPolicyResponse) Get() *FreeDiskSpaceLogRetentionPolicyResponse {
	return v.value
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyResponse) Set(val *FreeDiskSpaceLogRetentionPolicyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableFreeDiskSpaceLogRetentionPolicyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFreeDiskSpaceLogRetentionPolicyResponse(val *FreeDiskSpaceLogRetentionPolicyResponse) *NullableFreeDiskSpaceLogRetentionPolicyResponse {
	return &NullableFreeDiskSpaceLogRetentionPolicyResponse{value: val, isSet: true}
}

func (v NullableFreeDiskSpaceLogRetentionPolicyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFreeDiskSpaceLogRetentionPolicyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


