/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddSubjectEqualsDnCertificateMapperRequestAllOf struct for AddSubjectEqualsDnCertificateMapperRequestAllOf
type AddSubjectEqualsDnCertificateMapperRequestAllOf struct {
	// Name of the new Certificate Mapper
	MapperName string `json:"mapperName"`
}

// NewAddSubjectEqualsDnCertificateMapperRequestAllOf instantiates a new AddSubjectEqualsDnCertificateMapperRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddSubjectEqualsDnCertificateMapperRequestAllOf(mapperName string) *AddSubjectEqualsDnCertificateMapperRequestAllOf {
	this := AddSubjectEqualsDnCertificateMapperRequestAllOf{}
	this.MapperName = mapperName
	return &this
}

// NewAddSubjectEqualsDnCertificateMapperRequestAllOfWithDefaults instantiates a new AddSubjectEqualsDnCertificateMapperRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddSubjectEqualsDnCertificateMapperRequestAllOfWithDefaults() *AddSubjectEqualsDnCertificateMapperRequestAllOf {
	this := AddSubjectEqualsDnCertificateMapperRequestAllOf{}
	return &this
}

// GetMapperName returns the MapperName field value
func (o *AddSubjectEqualsDnCertificateMapperRequestAllOf) GetMapperName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MapperName
}

// GetMapperNameOk returns a tuple with the MapperName field value
// and a boolean to check if the value has been set.
func (o *AddSubjectEqualsDnCertificateMapperRequestAllOf) GetMapperNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.MapperName, true
}

// SetMapperName sets field value
func (o *AddSubjectEqualsDnCertificateMapperRequestAllOf) SetMapperName(v string) {
	o.MapperName = v
}

func (o AddSubjectEqualsDnCertificateMapperRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["mapperName"] = o.MapperName
	}
	return json.Marshal(toSerialize)
}

type NullableAddSubjectEqualsDnCertificateMapperRequestAllOf struct {
	value *AddSubjectEqualsDnCertificateMapperRequestAllOf
	isSet bool
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) Get() *AddSubjectEqualsDnCertificateMapperRequestAllOf {
	return v.value
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) Set(val *AddSubjectEqualsDnCertificateMapperRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddSubjectEqualsDnCertificateMapperRequestAllOf(val *AddSubjectEqualsDnCertificateMapperRequestAllOf) *NullableAddSubjectEqualsDnCertificateMapperRequestAllOf {
	return &NullableAddSubjectEqualsDnCertificateMapperRequestAllOf{value: val, isSet: true}
}

func (v NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddSubjectEqualsDnCertificateMapperRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


