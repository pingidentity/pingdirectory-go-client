/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// MemoryUsageMonitorProviderResponse struct for MemoryUsageMonitorProviderResponse
type MemoryUsageMonitorProviderResponse struct {
	Schemas []EnummemoryUsageMonitorProviderSchemaUrn `json:"schemas"`
	// A description for this Monitor Provider
	Description *string `json:"description,omitempty"`
	// Indicates whether the Monitor Provider is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewMemoryUsageMonitorProviderResponse instantiates a new MemoryUsageMonitorProviderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMemoryUsageMonitorProviderResponse(schemas []EnummemoryUsageMonitorProviderSchemaUrn, enabled bool) *MemoryUsageMonitorProviderResponse {
	this := MemoryUsageMonitorProviderResponse{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewMemoryUsageMonitorProviderResponseWithDefaults instantiates a new MemoryUsageMonitorProviderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMemoryUsageMonitorProviderResponseWithDefaults() *MemoryUsageMonitorProviderResponse {
	this := MemoryUsageMonitorProviderResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *MemoryUsageMonitorProviderResponse) GetSchemas() []EnummemoryUsageMonitorProviderSchemaUrn {
	if o == nil {
		var ret []EnummemoryUsageMonitorProviderSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *MemoryUsageMonitorProviderResponse) GetSchemasOk() ([]EnummemoryUsageMonitorProviderSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *MemoryUsageMonitorProviderResponse) SetSchemas(v []EnummemoryUsageMonitorProviderSchemaUrn) {
	o.Schemas = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *MemoryUsageMonitorProviderResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MemoryUsageMonitorProviderResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *MemoryUsageMonitorProviderResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *MemoryUsageMonitorProviderResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *MemoryUsageMonitorProviderResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *MemoryUsageMonitorProviderResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *MemoryUsageMonitorProviderResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o MemoryUsageMonitorProviderResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableMemoryUsageMonitorProviderResponse struct {
	value *MemoryUsageMonitorProviderResponse
	isSet bool
}

func (v NullableMemoryUsageMonitorProviderResponse) Get() *MemoryUsageMonitorProviderResponse {
	return v.value
}

func (v *NullableMemoryUsageMonitorProviderResponse) Set(val *MemoryUsageMonitorProviderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableMemoryUsageMonitorProviderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableMemoryUsageMonitorProviderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMemoryUsageMonitorProviderResponse(val *MemoryUsageMonitorProviderResponse) *NullableMemoryUsageMonitorProviderResponse {
	return &NullableMemoryUsageMonitorProviderResponse{value: val, isSet: true}
}

func (v NullableMemoryUsageMonitorProviderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMemoryUsageMonitorProviderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


