/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ServerGroupShared struct for ServerGroupShared
type ServerGroupShared struct {
	Schemas []EnumserverGroupSchemaUrn `json:"schemas,omitempty"`
	Member []string `json:"member,omitempty"`
}

// NewServerGroupShared instantiates a new ServerGroupShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerGroupShared() *ServerGroupShared {
	this := ServerGroupShared{}
	return &this
}

// NewServerGroupSharedWithDefaults instantiates a new ServerGroupShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerGroupSharedWithDefaults() *ServerGroupShared {
	this := ServerGroupShared{}
	return &this
}

// GetSchemas returns the Schemas field value if set, zero value otherwise.
func (o *ServerGroupShared) GetSchemas() []EnumserverGroupSchemaUrn {
	if o == nil || isNil(o.Schemas) {
		var ret []EnumserverGroupSchemaUrn
		return ret
	}
	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerGroupShared) GetSchemasOk() ([]EnumserverGroupSchemaUrn, bool) {
	if o == nil || isNil(o.Schemas) {
    return nil, false
	}
	return o.Schemas, true
}

// HasSchemas returns a boolean if a field has been set.
func (o *ServerGroupShared) HasSchemas() bool {
	if o != nil && !isNil(o.Schemas) {
		return true
	}

	return false
}

// SetSchemas gets a reference to the given []EnumserverGroupSchemaUrn and assigns it to the Schemas field.
func (o *ServerGroupShared) SetSchemas(v []EnumserverGroupSchemaUrn) {
	o.Schemas = v
}

// GetMember returns the Member field value if set, zero value otherwise.
func (o *ServerGroupShared) GetMember() []string {
	if o == nil || isNil(o.Member) {
		var ret []string
		return ret
	}
	return o.Member
}

// GetMemberOk returns a tuple with the Member field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerGroupShared) GetMemberOk() ([]string, bool) {
	if o == nil || isNil(o.Member) {
    return nil, false
	}
	return o.Member, true
}

// HasMember returns a boolean if a field has been set.
func (o *ServerGroupShared) HasMember() bool {
	if o != nil && !isNil(o.Member) {
		return true
	}

	return false
}

// SetMember gets a reference to the given []string and assigns it to the Member field.
func (o *ServerGroupShared) SetMember(v []string) {
	o.Member = v
}

func (o ServerGroupShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Schemas) {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Member) {
		toSerialize["member"] = o.Member
	}
	return json.Marshal(toSerialize)
}

type NullableServerGroupShared struct {
	value *ServerGroupShared
	isSet bool
}

func (v NullableServerGroupShared) Get() *ServerGroupShared {
	return v.value
}

func (v *NullableServerGroupShared) Set(val *ServerGroupShared) {
	v.value = val
	v.isSet = true
}

func (v NullableServerGroupShared) IsSet() bool {
	return v.isSet
}

func (v *NullableServerGroupShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerGroupShared(val *ServerGroupShared) *NullableServerGroupShared {
	return &NullableServerGroupShared{value: val, isSet: true}
}

func (v NullableServerGroupShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerGroupShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


