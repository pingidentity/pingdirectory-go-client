/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// Pkcs11KeyManagerProviderShared struct for Pkcs11KeyManagerProviderShared
type Pkcs11KeyManagerProviderShared struct {
	Schemas []Enumpkcs11KeyManagerProviderSchemaUrn `json:"schemas"`
	// The fully-qualified name of the Java security provider class that implements support for interacting with PKCS #11 tokens.
	Pkcs11ProviderClass *string `json:"pkcs11ProviderClass,omitempty"`
	// The path to the file to use to configure the security provider that implements support for interacting with PKCS #11 tokens.
	Pkcs11ProviderConfigurationFile *string `json:"pkcs11ProviderConfigurationFile,omitempty"`
	// The key store type to use when obtaining an instance of a key store for interacting with a PKCS #11 token.
	Pkcs11KeyStoreType *string `json:"pkcs11KeyStoreType,omitempty"`
	// Specifies the PIN needed to access the PKCS11 Key Manager Provider.
	KeyStorePin *string `json:"keyStorePin,omitempty"`
	// Specifies the path to the text file whose only contents should be a single line containing the clear-text PIN needed to access the PKCS11 Key Manager Provider.
	KeyStorePinFile *string `json:"keyStorePinFile,omitempty"`
	// The passphrase provider to use to obtain the clear-text PIN needed to access the PKCS11 Key Manager Provider.
	KeyStorePinPassphraseProvider *string `json:"keyStorePinPassphraseProvider,omitempty"`
	// A description for this Key Manager Provider
	Description *string `json:"description,omitempty"`
	// Indicates whether the Key Manager Provider is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewPkcs11KeyManagerProviderShared instantiates a new Pkcs11KeyManagerProviderShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPkcs11KeyManagerProviderShared(schemas []Enumpkcs11KeyManagerProviderSchemaUrn, enabled bool) *Pkcs11KeyManagerProviderShared {
	this := Pkcs11KeyManagerProviderShared{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewPkcs11KeyManagerProviderSharedWithDefaults instantiates a new Pkcs11KeyManagerProviderShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPkcs11KeyManagerProviderSharedWithDefaults() *Pkcs11KeyManagerProviderShared {
	this := Pkcs11KeyManagerProviderShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *Pkcs11KeyManagerProviderShared) GetSchemas() []Enumpkcs11KeyManagerProviderSchemaUrn {
	if o == nil {
		var ret []Enumpkcs11KeyManagerProviderSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetSchemasOk() ([]Enumpkcs11KeyManagerProviderSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *Pkcs11KeyManagerProviderShared) SetSchemas(v []Enumpkcs11KeyManagerProviderSchemaUrn) {
	o.Schemas = v
}

// GetPkcs11ProviderClass returns the Pkcs11ProviderClass field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11ProviderClass() string {
	if o == nil || isNil(o.Pkcs11ProviderClass) {
		var ret string
		return ret
	}
	return *o.Pkcs11ProviderClass
}

// GetPkcs11ProviderClassOk returns a tuple with the Pkcs11ProviderClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11ProviderClassOk() (*string, bool) {
	if o == nil || isNil(o.Pkcs11ProviderClass) {
    return nil, false
	}
	return o.Pkcs11ProviderClass, true
}

// HasPkcs11ProviderClass returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasPkcs11ProviderClass() bool {
	if o != nil && !isNil(o.Pkcs11ProviderClass) {
		return true
	}

	return false
}

// SetPkcs11ProviderClass gets a reference to the given string and assigns it to the Pkcs11ProviderClass field.
func (o *Pkcs11KeyManagerProviderShared) SetPkcs11ProviderClass(v string) {
	o.Pkcs11ProviderClass = &v
}

// GetPkcs11ProviderConfigurationFile returns the Pkcs11ProviderConfigurationFile field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11ProviderConfigurationFile() string {
	if o == nil || isNil(o.Pkcs11ProviderConfigurationFile) {
		var ret string
		return ret
	}
	return *o.Pkcs11ProviderConfigurationFile
}

// GetPkcs11ProviderConfigurationFileOk returns a tuple with the Pkcs11ProviderConfigurationFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11ProviderConfigurationFileOk() (*string, bool) {
	if o == nil || isNil(o.Pkcs11ProviderConfigurationFile) {
    return nil, false
	}
	return o.Pkcs11ProviderConfigurationFile, true
}

// HasPkcs11ProviderConfigurationFile returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasPkcs11ProviderConfigurationFile() bool {
	if o != nil && !isNil(o.Pkcs11ProviderConfigurationFile) {
		return true
	}

	return false
}

// SetPkcs11ProviderConfigurationFile gets a reference to the given string and assigns it to the Pkcs11ProviderConfigurationFile field.
func (o *Pkcs11KeyManagerProviderShared) SetPkcs11ProviderConfigurationFile(v string) {
	o.Pkcs11ProviderConfigurationFile = &v
}

// GetPkcs11KeyStoreType returns the Pkcs11KeyStoreType field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11KeyStoreType() string {
	if o == nil || isNil(o.Pkcs11KeyStoreType) {
		var ret string
		return ret
	}
	return *o.Pkcs11KeyStoreType
}

// GetPkcs11KeyStoreTypeOk returns a tuple with the Pkcs11KeyStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetPkcs11KeyStoreTypeOk() (*string, bool) {
	if o == nil || isNil(o.Pkcs11KeyStoreType) {
    return nil, false
	}
	return o.Pkcs11KeyStoreType, true
}

// HasPkcs11KeyStoreType returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasPkcs11KeyStoreType() bool {
	if o != nil && !isNil(o.Pkcs11KeyStoreType) {
		return true
	}

	return false
}

// SetPkcs11KeyStoreType gets a reference to the given string and assigns it to the Pkcs11KeyStoreType field.
func (o *Pkcs11KeyManagerProviderShared) SetPkcs11KeyStoreType(v string) {
	o.Pkcs11KeyStoreType = &v
}

// GetKeyStorePin returns the KeyStorePin field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePin() string {
	if o == nil || isNil(o.KeyStorePin) {
		var ret string
		return ret
	}
	return *o.KeyStorePin
}

// GetKeyStorePinOk returns a tuple with the KeyStorePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePinOk() (*string, bool) {
	if o == nil || isNil(o.KeyStorePin) {
    return nil, false
	}
	return o.KeyStorePin, true
}

// HasKeyStorePin returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasKeyStorePin() bool {
	if o != nil && !isNil(o.KeyStorePin) {
		return true
	}

	return false
}

// SetKeyStorePin gets a reference to the given string and assigns it to the KeyStorePin field.
func (o *Pkcs11KeyManagerProviderShared) SetKeyStorePin(v string) {
	o.KeyStorePin = &v
}

// GetKeyStorePinFile returns the KeyStorePinFile field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePinFile() string {
	if o == nil || isNil(o.KeyStorePinFile) {
		var ret string
		return ret
	}
	return *o.KeyStorePinFile
}

// GetKeyStorePinFileOk returns a tuple with the KeyStorePinFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePinFileOk() (*string, bool) {
	if o == nil || isNil(o.KeyStorePinFile) {
    return nil, false
	}
	return o.KeyStorePinFile, true
}

// HasKeyStorePinFile returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasKeyStorePinFile() bool {
	if o != nil && !isNil(o.KeyStorePinFile) {
		return true
	}

	return false
}

// SetKeyStorePinFile gets a reference to the given string and assigns it to the KeyStorePinFile field.
func (o *Pkcs11KeyManagerProviderShared) SetKeyStorePinFile(v string) {
	o.KeyStorePinFile = &v
}

// GetKeyStorePinPassphraseProvider returns the KeyStorePinPassphraseProvider field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePinPassphraseProvider() string {
	if o == nil || isNil(o.KeyStorePinPassphraseProvider) {
		var ret string
		return ret
	}
	return *o.KeyStorePinPassphraseProvider
}

// GetKeyStorePinPassphraseProviderOk returns a tuple with the KeyStorePinPassphraseProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetKeyStorePinPassphraseProviderOk() (*string, bool) {
	if o == nil || isNil(o.KeyStorePinPassphraseProvider) {
    return nil, false
	}
	return o.KeyStorePinPassphraseProvider, true
}

// HasKeyStorePinPassphraseProvider returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasKeyStorePinPassphraseProvider() bool {
	if o != nil && !isNil(o.KeyStorePinPassphraseProvider) {
		return true
	}

	return false
}

// SetKeyStorePinPassphraseProvider gets a reference to the given string and assigns it to the KeyStorePinPassphraseProvider field.
func (o *Pkcs11KeyManagerProviderShared) SetKeyStorePinPassphraseProvider(v string) {
	o.KeyStorePinPassphraseProvider = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *Pkcs11KeyManagerProviderShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *Pkcs11KeyManagerProviderShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *Pkcs11KeyManagerProviderShared) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *Pkcs11KeyManagerProviderShared) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *Pkcs11KeyManagerProviderShared) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *Pkcs11KeyManagerProviderShared) SetEnabled(v bool) {
	o.Enabled = v
}

func (o Pkcs11KeyManagerProviderShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if !isNil(o.Pkcs11ProviderClass) {
		toSerialize["pkcs11ProviderClass"] = o.Pkcs11ProviderClass
	}
	if !isNil(o.Pkcs11ProviderConfigurationFile) {
		toSerialize["pkcs11ProviderConfigurationFile"] = o.Pkcs11ProviderConfigurationFile
	}
	if !isNil(o.Pkcs11KeyStoreType) {
		toSerialize["pkcs11KeyStoreType"] = o.Pkcs11KeyStoreType
	}
	if !isNil(o.KeyStorePin) {
		toSerialize["keyStorePin"] = o.KeyStorePin
	}
	if !isNil(o.KeyStorePinFile) {
		toSerialize["keyStorePinFile"] = o.KeyStorePinFile
	}
	if !isNil(o.KeyStorePinPassphraseProvider) {
		toSerialize["keyStorePinPassphraseProvider"] = o.KeyStorePinPassphraseProvider
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullablePkcs11KeyManagerProviderShared struct {
	value *Pkcs11KeyManagerProviderShared
	isSet bool
}

func (v NullablePkcs11KeyManagerProviderShared) Get() *Pkcs11KeyManagerProviderShared {
	return v.value
}

func (v *NullablePkcs11KeyManagerProviderShared) Set(val *Pkcs11KeyManagerProviderShared) {
	v.value = val
	v.isSet = true
}

func (v NullablePkcs11KeyManagerProviderShared) IsSet() bool {
	return v.isSet
}

func (v *NullablePkcs11KeyManagerProviderShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePkcs11KeyManagerProviderShared(val *Pkcs11KeyManagerProviderShared) *NullablePkcs11KeyManagerProviderShared {
	return &NullablePkcs11KeyManagerProviderShared{value: val, isSet: true}
}

func (v NullablePkcs11KeyManagerProviderShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePkcs11KeyManagerProviderShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


