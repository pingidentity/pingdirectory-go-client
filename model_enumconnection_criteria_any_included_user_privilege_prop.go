/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaAnyIncludedUserPrivilegeProp Specifies the name of a privilege that may be held by the authenticated user for clients included in this Simple Connection Criteria. If any privilege names are provided, then the authenticated user must have at least one of those privileges. This will only be taken into account for client connections that have authenticated to the server and will be ignored for unauthenticated client connections.
type EnumconnectionCriteriaAnyIncludedUserPrivilegeProp string

// List of Enumconnection-criteria-anyIncludedUserPrivilegeProp
const (
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_AUDIT_DATA_SECURITY EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "audit-data-security"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_BYPASS_ACL EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "bypass-acl"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_BYPASS_READ_ACL EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "bypass-read-acl"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_MODIFY_ACL EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "modify-acl"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_CONFIG_READ EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "config-read"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_CONFIG_WRITE EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "config-write"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_JMX_READ EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "jmx-read"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_JMX_WRITE EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "jmx-write"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_JMX_NOTIFY EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "jmx-notify"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_LDIF_IMPORT EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "ldif-import"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_LDIF_EXPORT EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "ldif-export"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_BACKEND_BACKUP EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "backend-backup"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_BACKEND_RESTORE EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "backend-restore"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_SERVER_SHUTDOWN EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "server-shutdown"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_SERVER_RESTART EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "server-restart"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PROXIED_AUTH EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "proxied-auth"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_DISCONNECT_CLIENT EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "disconnect-client"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PASSWORD_RESET EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "password-reset"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_UPDATE_SCHEMA EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "update-schema"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PRIVILEGE_CHANGE EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "privilege-change"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "unindexed-search"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_UNINDEXED_SEARCH_WITH_CONTROL EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "unindexed-search-with-control"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_BYPASS_PW_POLICY EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "bypass-pw-policy"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_LOCKDOWN_MODE EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "lockdown-mode"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_STREAM_VALUES EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "stream-values"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_THIRD_PARTY_TASK EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "third-party-task"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_USE_ADMIN_SESSION EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "use-admin-session"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_SOFT_DELETE_READ EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "soft-delete-read"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_METRICS_READ EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "metrics-read"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_REMOTE_LOG_READ EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "remote-log-read"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_MANAGE_TOPOLOGY EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "manage-topology"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_GET_PASSWORD_POLICY_STATE_ISSUES EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-get-password-policy-state-issues"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_PROXIED_MSCHAPV2_DETAILS EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-proxied-mschapv2-details"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXTERNALLY_PROCESSED_AUTHENTICATION EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-externally-processed-authentication"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_EXPORT_REVERSIBLE_PASSWORDS EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-export-reversible-passwords"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_FORWARDING_CLIENT_CONNECTION_POLICY EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-forwarding-client-connection-policy"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_EXEC_TASK EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "exec-task"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_COLLECT_SUPPORT_DATA EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "collect-support-data"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_FILE_SERVLET_ACCESS EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "file-servlet-access"
	ENUMCONNECTIONCRITERIAANYINCLUDEDUSERPRIVILEGEPROP_PERMIT_REPLACE_CERTIFICATE_REQUEST EnumconnectionCriteriaAnyIncludedUserPrivilegeProp = "permit-replace-certificate-request"
)

// All allowed values of EnumconnectionCriteriaAnyIncludedUserPrivilegeProp enum
var AllowedEnumconnectionCriteriaAnyIncludedUserPrivilegePropEnumValues = []EnumconnectionCriteriaAnyIncludedUserPrivilegeProp{
	"audit-data-security",
	"bypass-acl",
	"bypass-read-acl",
	"modify-acl",
	"config-read",
	"config-write",
	"jmx-read",
	"jmx-write",
	"jmx-notify",
	"ldif-import",
	"ldif-export",
	"backend-backup",
	"backend-restore",
	"server-shutdown",
	"server-restart",
	"proxied-auth",
	"disconnect-client",
	"password-reset",
	"update-schema",
	"privilege-change",
	"unindexed-search",
	"unindexed-search-with-control",
	"bypass-pw-policy",
	"lockdown-mode",
	"stream-values",
	"third-party-task",
	"use-admin-session",
	"soft-delete-read",
	"metrics-read",
	"remote-log-read",
	"manage-topology",
	"permit-get-password-policy-state-issues",
	"permit-proxied-mschapv2-details",
	"permit-externally-processed-authentication",
	"permit-export-reversible-passwords",
	"permit-forwarding-client-connection-policy",
	"exec-task",
	"collect-support-data",
	"file-servlet-access",
	"permit-replace-certificate-request",
}

func (v *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaAnyIncludedUserPrivilegeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaAnyIncludedUserPrivilegePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaAnyIncludedUserPrivilegeProp", value)
}

// NewEnumconnectionCriteriaAnyIncludedUserPrivilegePropFromValue returns a pointer to a valid EnumconnectionCriteriaAnyIncludedUserPrivilegeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaAnyIncludedUserPrivilegePropFromValue(v string) (*EnumconnectionCriteriaAnyIncludedUserPrivilegeProp, error) {
	ev := EnumconnectionCriteriaAnyIncludedUserPrivilegeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaAnyIncludedUserPrivilegeProp: valid values are %v", v, AllowedEnumconnectionCriteriaAnyIncludedUserPrivilegePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaAnyIncludedUserPrivilegePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-anyIncludedUserPrivilegeProp value
func (v EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) Ptr() *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp {
	return &v
}

type NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp struct {
	value *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) Get() *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) Set(val *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp(val *EnumconnectionCriteriaAnyIncludedUserPrivilegeProp) *NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp {
	return &NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaAnyIncludedUserPrivilegeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

