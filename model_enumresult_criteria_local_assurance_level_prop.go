/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumresultCriteriaLocalAssuranceLevelProp The local assurance level values that will be allowed to match this Replication Assurance Result Criteria.
type EnumresultCriteriaLocalAssuranceLevelProp string

// List of Enumresult-criteria-localAssuranceLevelProp
const (
	ENUMRESULTCRITERIALOCALASSURANCELEVELPROP_NONE EnumresultCriteriaLocalAssuranceLevelProp = "none"
	ENUMRESULTCRITERIALOCALASSURANCELEVELPROP_RECEIVED_ANY_SERVER EnumresultCriteriaLocalAssuranceLevelProp = "received-any-server"
	ENUMRESULTCRITERIALOCALASSURANCELEVELPROP_PROCESSED_ALL_SERVERS EnumresultCriteriaLocalAssuranceLevelProp = "processed-all-servers"
)

// All allowed values of EnumresultCriteriaLocalAssuranceLevelProp enum
var AllowedEnumresultCriteriaLocalAssuranceLevelPropEnumValues = []EnumresultCriteriaLocalAssuranceLevelProp{
	"none",
	"received-any-server",
	"processed-all-servers",
}

func (v *EnumresultCriteriaLocalAssuranceLevelProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumresultCriteriaLocalAssuranceLevelProp(value)
	for _, existing := range AllowedEnumresultCriteriaLocalAssuranceLevelPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumresultCriteriaLocalAssuranceLevelProp", value)
}

// NewEnumresultCriteriaLocalAssuranceLevelPropFromValue returns a pointer to a valid EnumresultCriteriaLocalAssuranceLevelProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumresultCriteriaLocalAssuranceLevelPropFromValue(v string) (*EnumresultCriteriaLocalAssuranceLevelProp, error) {
	ev := EnumresultCriteriaLocalAssuranceLevelProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumresultCriteriaLocalAssuranceLevelProp: valid values are %v", v, AllowedEnumresultCriteriaLocalAssuranceLevelPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumresultCriteriaLocalAssuranceLevelProp) IsValid() bool {
	for _, existing := range AllowedEnumresultCriteriaLocalAssuranceLevelPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumresult-criteria-localAssuranceLevelProp value
func (v EnumresultCriteriaLocalAssuranceLevelProp) Ptr() *EnumresultCriteriaLocalAssuranceLevelProp {
	return &v
}

type NullableEnumresultCriteriaLocalAssuranceLevelProp struct {
	value *EnumresultCriteriaLocalAssuranceLevelProp
	isSet bool
}

func (v NullableEnumresultCriteriaLocalAssuranceLevelProp) Get() *EnumresultCriteriaLocalAssuranceLevelProp {
	return v.value
}

func (v *NullableEnumresultCriteriaLocalAssuranceLevelProp) Set(val *EnumresultCriteriaLocalAssuranceLevelProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumresultCriteriaLocalAssuranceLevelProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumresultCriteriaLocalAssuranceLevelProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumresultCriteriaLocalAssuranceLevelProp(val *EnumresultCriteriaLocalAssuranceLevelProp) *NullableEnumresultCriteriaLocalAssuranceLevelProp {
	return &NullableEnumresultCriteriaLocalAssuranceLevelProp{value: val, isSet: true}
}

func (v NullableEnumresultCriteriaLocalAssuranceLevelProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumresultCriteriaLocalAssuranceLevelProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

