/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddAccountStatusNotificationHandlerRequest - struct for AddAccountStatusNotificationHandlerRequest
type AddAccountStatusNotificationHandlerRequest struct {
	AddAdminAlertAccountStatusNotificationHandlerRequest     *AddAdminAlertAccountStatusNotificationHandlerRequest
	AddErrorLogAccountStatusNotificationHandlerRequest       *AddErrorLogAccountStatusNotificationHandlerRequest
	AddGroovyScriptedAccountStatusNotificationHandlerRequest *AddGroovyScriptedAccountStatusNotificationHandlerRequest
	AddMultiPartEmailAccountStatusNotificationHandlerRequest *AddMultiPartEmailAccountStatusNotificationHandlerRequest
	AddSmtpAccountStatusNotificationHandlerRequest           *AddSmtpAccountStatusNotificationHandlerRequest
	AddThirdPartyAccountStatusNotificationHandlerRequest     *AddThirdPartyAccountStatusNotificationHandlerRequest
}

// AddAdminAlertAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddAdminAlertAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddAdminAlertAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddAdminAlertAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddAdminAlertAccountStatusNotificationHandlerRequest: v,
	}
}

// AddErrorLogAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddErrorLogAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddErrorLogAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddErrorLogAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddErrorLogAccountStatusNotificationHandlerRequest: v,
	}
}

// AddGroovyScriptedAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddGroovyScriptedAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddGroovyScriptedAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddGroovyScriptedAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddGroovyScriptedAccountStatusNotificationHandlerRequest: v,
	}
}

// AddMultiPartEmailAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddMultiPartEmailAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddMultiPartEmailAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddMultiPartEmailAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddMultiPartEmailAccountStatusNotificationHandlerRequest: v,
	}
}

// AddSmtpAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddSmtpAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddSmtpAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddSmtpAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddSmtpAccountStatusNotificationHandlerRequest: v,
	}
}

// AddThirdPartyAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest is a convenience function that returns AddThirdPartyAccountStatusNotificationHandlerRequest wrapped in AddAccountStatusNotificationHandlerRequest
func AddThirdPartyAccountStatusNotificationHandlerRequestAsAddAccountStatusNotificationHandlerRequest(v *AddThirdPartyAccountStatusNotificationHandlerRequest) AddAccountStatusNotificationHandlerRequest {
	return AddAccountStatusNotificationHandlerRequest{
		AddThirdPartyAccountStatusNotificationHandlerRequest: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddAccountStatusNotificationHandlerRequest) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AddAdminAlertAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddAdminAlertAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddAdminAlertAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddAdminAlertAccountStatusNotificationHandlerRequest)
		if string(jsonAddAdminAlertAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddAdminAlertAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddAdminAlertAccountStatusNotificationHandlerRequest = nil
	}

	// try to unmarshal data into AddErrorLogAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddErrorLogAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddErrorLogAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddErrorLogAccountStatusNotificationHandlerRequest)
		if string(jsonAddErrorLogAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddErrorLogAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddErrorLogAccountStatusNotificationHandlerRequest = nil
	}

	// try to unmarshal data into AddGroovyScriptedAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddGroovyScriptedAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddGroovyScriptedAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddGroovyScriptedAccountStatusNotificationHandlerRequest)
		if string(jsonAddGroovyScriptedAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddGroovyScriptedAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddGroovyScriptedAccountStatusNotificationHandlerRequest = nil
	}

	// try to unmarshal data into AddMultiPartEmailAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddMultiPartEmailAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddMultiPartEmailAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddMultiPartEmailAccountStatusNotificationHandlerRequest)
		if string(jsonAddMultiPartEmailAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddMultiPartEmailAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddMultiPartEmailAccountStatusNotificationHandlerRequest = nil
	}

	// try to unmarshal data into AddSmtpAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddSmtpAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddSmtpAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddSmtpAccountStatusNotificationHandlerRequest)
		if string(jsonAddSmtpAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddSmtpAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddSmtpAccountStatusNotificationHandlerRequest = nil
	}

	// try to unmarshal data into AddThirdPartyAccountStatusNotificationHandlerRequest
	err = newStrictDecoder(data).Decode(&dst.AddThirdPartyAccountStatusNotificationHandlerRequest)
	if err == nil {
		jsonAddThirdPartyAccountStatusNotificationHandlerRequest, _ := json.Marshal(dst.AddThirdPartyAccountStatusNotificationHandlerRequest)
		if string(jsonAddThirdPartyAccountStatusNotificationHandlerRequest) == "{}" { // empty struct
			dst.AddThirdPartyAccountStatusNotificationHandlerRequest = nil
		} else {
			match++
		}
	} else {
		dst.AddThirdPartyAccountStatusNotificationHandlerRequest = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AddAdminAlertAccountStatusNotificationHandlerRequest = nil
		dst.AddErrorLogAccountStatusNotificationHandlerRequest = nil
		dst.AddGroovyScriptedAccountStatusNotificationHandlerRequest = nil
		dst.AddMultiPartEmailAccountStatusNotificationHandlerRequest = nil
		dst.AddSmtpAccountStatusNotificationHandlerRequest = nil
		dst.AddThirdPartyAccountStatusNotificationHandlerRequest = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddAccountStatusNotificationHandlerRequest)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddAccountStatusNotificationHandlerRequest)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddAccountStatusNotificationHandlerRequest) MarshalJSON() ([]byte, error) {
	if src.AddAdminAlertAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddAdminAlertAccountStatusNotificationHandlerRequest)
	}

	if src.AddErrorLogAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddErrorLogAccountStatusNotificationHandlerRequest)
	}

	if src.AddGroovyScriptedAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddGroovyScriptedAccountStatusNotificationHandlerRequest)
	}

	if src.AddMultiPartEmailAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddMultiPartEmailAccountStatusNotificationHandlerRequest)
	}

	if src.AddSmtpAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddSmtpAccountStatusNotificationHandlerRequest)
	}

	if src.AddThirdPartyAccountStatusNotificationHandlerRequest != nil {
		return json.Marshal(&src.AddThirdPartyAccountStatusNotificationHandlerRequest)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddAccountStatusNotificationHandlerRequest) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.AddAdminAlertAccountStatusNotificationHandlerRequest != nil {
		return obj.AddAdminAlertAccountStatusNotificationHandlerRequest
	}

	if obj.AddErrorLogAccountStatusNotificationHandlerRequest != nil {
		return obj.AddErrorLogAccountStatusNotificationHandlerRequest
	}

	if obj.AddGroovyScriptedAccountStatusNotificationHandlerRequest != nil {
		return obj.AddGroovyScriptedAccountStatusNotificationHandlerRequest
	}

	if obj.AddMultiPartEmailAccountStatusNotificationHandlerRequest != nil {
		return obj.AddMultiPartEmailAccountStatusNotificationHandlerRequest
	}

	if obj.AddSmtpAccountStatusNotificationHandlerRequest != nil {
		return obj.AddSmtpAccountStatusNotificationHandlerRequest
	}

	if obj.AddThirdPartyAccountStatusNotificationHandlerRequest != nil {
		return obj.AddThirdPartyAccountStatusNotificationHandlerRequest
	}

	// all schemas are nil
	return nil
}

type NullableAddAccountStatusNotificationHandlerRequest struct {
	value *AddAccountStatusNotificationHandlerRequest
	isSet bool
}

func (v NullableAddAccountStatusNotificationHandlerRequest) Get() *AddAccountStatusNotificationHandlerRequest {
	return v.value
}

func (v *NullableAddAccountStatusNotificationHandlerRequest) Set(val *AddAccountStatusNotificationHandlerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAccountStatusNotificationHandlerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAccountStatusNotificationHandlerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAccountStatusNotificationHandlerRequest(val *AddAccountStatusNotificationHandlerRequest) *NullableAddAccountStatusNotificationHandlerRequest {
	return &NullableAddAccountStatusNotificationHandlerRequest{value: val, isSet: true}
}

func (v NullableAddAccountStatusNotificationHandlerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAccountStatusNotificationHandlerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
