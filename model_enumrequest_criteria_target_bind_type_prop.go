/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumrequestCriteriaTargetBindTypeProp Specifies the authentication type for bind requests included in this Simple Request Criteria. This will only be taken into account for bind operations and will be ignored for any other type of operation. If no values are provided, then the authentication type will not be considered when determining whether the request should be included in this Simple Request Criteria.
type EnumrequestCriteriaTargetBindTypeProp string

// List of Enumrequest-criteria-targetBindTypeProp
const (
	ENUMREQUESTCRITERIATARGETBINDTYPEPROP_SIMPLE EnumrequestCriteriaTargetBindTypeProp = "simple"
	ENUMREQUESTCRITERIATARGETBINDTYPEPROP_SASL EnumrequestCriteriaTargetBindTypeProp = "sasl"
)

// All allowed values of EnumrequestCriteriaTargetBindTypeProp enum
var AllowedEnumrequestCriteriaTargetBindTypePropEnumValues = []EnumrequestCriteriaTargetBindTypeProp{
	"simple",
	"sasl",
}

func (v *EnumrequestCriteriaTargetBindTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumrequestCriteriaTargetBindTypeProp(value)
	for _, existing := range AllowedEnumrequestCriteriaTargetBindTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumrequestCriteriaTargetBindTypeProp", value)
}

// NewEnumrequestCriteriaTargetBindTypePropFromValue returns a pointer to a valid EnumrequestCriteriaTargetBindTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumrequestCriteriaTargetBindTypePropFromValue(v string) (*EnumrequestCriteriaTargetBindTypeProp, error) {
	ev := EnumrequestCriteriaTargetBindTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumrequestCriteriaTargetBindTypeProp: valid values are %v", v, AllowedEnumrequestCriteriaTargetBindTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumrequestCriteriaTargetBindTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumrequestCriteriaTargetBindTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumrequest-criteria-targetBindTypeProp value
func (v EnumrequestCriteriaTargetBindTypeProp) Ptr() *EnumrequestCriteriaTargetBindTypeProp {
	return &v
}

type NullableEnumrequestCriteriaTargetBindTypeProp struct {
	value *EnumrequestCriteriaTargetBindTypeProp
	isSet bool
}

func (v NullableEnumrequestCriteriaTargetBindTypeProp) Get() *EnumrequestCriteriaTargetBindTypeProp {
	return v.value
}

func (v *NullableEnumrequestCriteriaTargetBindTypeProp) Set(val *EnumrequestCriteriaTargetBindTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumrequestCriteriaTargetBindTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumrequestCriteriaTargetBindTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumrequestCriteriaTargetBindTypeProp(val *EnumrequestCriteriaTargetBindTypeProp) *NullableEnumrequestCriteriaTargetBindTypeProp {
	return &NullableEnumrequestCriteriaTargetBindTypeProp{value: val, isSet: true}
}

func (v NullableEnumrequestCriteriaTargetBindTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumrequestCriteriaTargetBindTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

