/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddDelegatedAdminAttribute200Response - struct for AddDelegatedAdminAttribute200Response
type AddDelegatedAdminAttribute200Response struct {
	CertificateDelegatedAdminAttributeResponse *CertificateDelegatedAdminAttributeResponse
	GenericDelegatedAdminAttributeResponse     *GenericDelegatedAdminAttributeResponse
	PhotoDelegatedAdminAttributeResponse       *PhotoDelegatedAdminAttributeResponse
}

// CertificateDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response is a convenience function that returns CertificateDelegatedAdminAttributeResponse wrapped in AddDelegatedAdminAttribute200Response
func CertificateDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response(v *CertificateDelegatedAdminAttributeResponse) AddDelegatedAdminAttribute200Response {
	return AddDelegatedAdminAttribute200Response{
		CertificateDelegatedAdminAttributeResponse: v,
	}
}

// GenericDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response is a convenience function that returns GenericDelegatedAdminAttributeResponse wrapped in AddDelegatedAdminAttribute200Response
func GenericDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response(v *GenericDelegatedAdminAttributeResponse) AddDelegatedAdminAttribute200Response {
	return AddDelegatedAdminAttribute200Response{
		GenericDelegatedAdminAttributeResponse: v,
	}
}

// PhotoDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response is a convenience function that returns PhotoDelegatedAdminAttributeResponse wrapped in AddDelegatedAdminAttribute200Response
func PhotoDelegatedAdminAttributeResponseAsAddDelegatedAdminAttribute200Response(v *PhotoDelegatedAdminAttributeResponse) AddDelegatedAdminAttribute200Response {
	return AddDelegatedAdminAttribute200Response{
		PhotoDelegatedAdminAttributeResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddDelegatedAdminAttribute200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CertificateDelegatedAdminAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.CertificateDelegatedAdminAttributeResponse)
	if err == nil {
		jsonCertificateDelegatedAdminAttributeResponse, _ := json.Marshal(dst.CertificateDelegatedAdminAttributeResponse)
		if string(jsonCertificateDelegatedAdminAttributeResponse) == "{}" { // empty struct
			dst.CertificateDelegatedAdminAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.CertificateDelegatedAdminAttributeResponse = nil
	}

	// try to unmarshal data into GenericDelegatedAdminAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.GenericDelegatedAdminAttributeResponse)
	if err == nil {
		jsonGenericDelegatedAdminAttributeResponse, _ := json.Marshal(dst.GenericDelegatedAdminAttributeResponse)
		if string(jsonGenericDelegatedAdminAttributeResponse) == "{}" { // empty struct
			dst.GenericDelegatedAdminAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.GenericDelegatedAdminAttributeResponse = nil
	}

	// try to unmarshal data into PhotoDelegatedAdminAttributeResponse
	err = newStrictDecoder(data).Decode(&dst.PhotoDelegatedAdminAttributeResponse)
	if err == nil {
		jsonPhotoDelegatedAdminAttributeResponse, _ := json.Marshal(dst.PhotoDelegatedAdminAttributeResponse)
		if string(jsonPhotoDelegatedAdminAttributeResponse) == "{}" { // empty struct
			dst.PhotoDelegatedAdminAttributeResponse = nil
		} else {
			match++
		}
	} else {
		dst.PhotoDelegatedAdminAttributeResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CertificateDelegatedAdminAttributeResponse = nil
		dst.GenericDelegatedAdminAttributeResponse = nil
		dst.PhotoDelegatedAdminAttributeResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddDelegatedAdminAttribute200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddDelegatedAdminAttribute200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddDelegatedAdminAttribute200Response) MarshalJSON() ([]byte, error) {
	if src.CertificateDelegatedAdminAttributeResponse != nil {
		return json.Marshal(&src.CertificateDelegatedAdminAttributeResponse)
	}

	if src.GenericDelegatedAdminAttributeResponse != nil {
		return json.Marshal(&src.GenericDelegatedAdminAttributeResponse)
	}

	if src.PhotoDelegatedAdminAttributeResponse != nil {
		return json.Marshal(&src.PhotoDelegatedAdminAttributeResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddDelegatedAdminAttribute200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.CertificateDelegatedAdminAttributeResponse != nil {
		return obj.CertificateDelegatedAdminAttributeResponse
	}

	if obj.GenericDelegatedAdminAttributeResponse != nil {
		return obj.GenericDelegatedAdminAttributeResponse
	}

	if obj.PhotoDelegatedAdminAttributeResponse != nil {
		return obj.PhotoDelegatedAdminAttributeResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddDelegatedAdminAttribute200Response struct {
	value *AddDelegatedAdminAttribute200Response
	isSet bool
}

func (v NullableAddDelegatedAdminAttribute200Response) Get() *AddDelegatedAdminAttribute200Response {
	return v.value
}

func (v *NullableAddDelegatedAdminAttribute200Response) Set(val *AddDelegatedAdminAttribute200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDelegatedAdminAttribute200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDelegatedAdminAttribute200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDelegatedAdminAttribute200Response(val *AddDelegatedAdminAttribute200Response) *NullableAddDelegatedAdminAttribute200Response {
	return &NullableAddDelegatedAdminAttribute200Response{value: val, isSet: true}
}

func (v NullableAddDelegatedAdminAttribute200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDelegatedAdminAttribute200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
