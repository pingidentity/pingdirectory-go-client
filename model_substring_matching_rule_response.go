/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// SubstringMatchingRuleResponse struct for SubstringMatchingRuleResponse
type SubstringMatchingRuleResponse struct {
	Schemas []EnumsubstringMatchingRuleSchemaUrn `json:"schemas"`
	// Indicates whether the Matching Rule is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewSubstringMatchingRuleResponse instantiates a new SubstringMatchingRuleResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubstringMatchingRuleResponse(schemas []EnumsubstringMatchingRuleSchemaUrn, enabled bool) *SubstringMatchingRuleResponse {
	this := SubstringMatchingRuleResponse{}
	this.Schemas = schemas
	this.Enabled = enabled
	return &this
}

// NewSubstringMatchingRuleResponseWithDefaults instantiates a new SubstringMatchingRuleResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubstringMatchingRuleResponseWithDefaults() *SubstringMatchingRuleResponse {
	this := SubstringMatchingRuleResponse{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *SubstringMatchingRuleResponse) GetSchemas() []EnumsubstringMatchingRuleSchemaUrn {
	if o == nil {
		var ret []EnumsubstringMatchingRuleSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *SubstringMatchingRuleResponse) GetSchemasOk() ([]EnumsubstringMatchingRuleSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *SubstringMatchingRuleResponse) SetSchemas(v []EnumsubstringMatchingRuleSchemaUrn) {
	o.Schemas = v
}

// GetEnabled returns the Enabled field value
func (o *SubstringMatchingRuleResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *SubstringMatchingRuleResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
    return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *SubstringMatchingRuleResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o SubstringMatchingRuleResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableSubstringMatchingRuleResponse struct {
	value *SubstringMatchingRuleResponse
	isSet bool
}

func (v NullableSubstringMatchingRuleResponse) Get() *SubstringMatchingRuleResponse {
	return v.value
}

func (v *NullableSubstringMatchingRuleResponse) Set(val *SubstringMatchingRuleResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSubstringMatchingRuleResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSubstringMatchingRuleResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubstringMatchingRuleResponse(val *SubstringMatchingRuleResponse) *NullableSubstringMatchingRuleResponse {
	return &NullableSubstringMatchingRuleResponse{value: val, isSet: true}
}

func (v NullableSubstringMatchingRuleResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubstringMatchingRuleResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


