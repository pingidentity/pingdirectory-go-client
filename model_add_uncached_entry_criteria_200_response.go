/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddUncachedEntryCriteria200Response - struct for AddUncachedEntryCriteria200Response
type AddUncachedEntryCriteria200Response struct {
	DefaultUncachedEntryCriteriaResponse        *DefaultUncachedEntryCriteriaResponse
	FilterBasedUncachedEntryCriteriaResponse    *FilterBasedUncachedEntryCriteriaResponse
	GroovyScriptedUncachedEntryCriteriaResponse *GroovyScriptedUncachedEntryCriteriaResponse
	LastAccessTimeUncachedEntryCriteriaResponse *LastAccessTimeUncachedEntryCriteriaResponse
	ThirdPartyUncachedEntryCriteriaResponse     *ThirdPartyUncachedEntryCriteriaResponse
}

// DefaultUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response is a convenience function that returns DefaultUncachedEntryCriteriaResponse wrapped in AddUncachedEntryCriteria200Response
func DefaultUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response(v *DefaultUncachedEntryCriteriaResponse) AddUncachedEntryCriteria200Response {
	return AddUncachedEntryCriteria200Response{
		DefaultUncachedEntryCriteriaResponse: v,
	}
}

// FilterBasedUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response is a convenience function that returns FilterBasedUncachedEntryCriteriaResponse wrapped in AddUncachedEntryCriteria200Response
func FilterBasedUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response(v *FilterBasedUncachedEntryCriteriaResponse) AddUncachedEntryCriteria200Response {
	return AddUncachedEntryCriteria200Response{
		FilterBasedUncachedEntryCriteriaResponse: v,
	}
}

// GroovyScriptedUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response is a convenience function that returns GroovyScriptedUncachedEntryCriteriaResponse wrapped in AddUncachedEntryCriteria200Response
func GroovyScriptedUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response(v *GroovyScriptedUncachedEntryCriteriaResponse) AddUncachedEntryCriteria200Response {
	return AddUncachedEntryCriteria200Response{
		GroovyScriptedUncachedEntryCriteriaResponse: v,
	}
}

// LastAccessTimeUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response is a convenience function that returns LastAccessTimeUncachedEntryCriteriaResponse wrapped in AddUncachedEntryCriteria200Response
func LastAccessTimeUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response(v *LastAccessTimeUncachedEntryCriteriaResponse) AddUncachedEntryCriteria200Response {
	return AddUncachedEntryCriteria200Response{
		LastAccessTimeUncachedEntryCriteriaResponse: v,
	}
}

// ThirdPartyUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response is a convenience function that returns ThirdPartyUncachedEntryCriteriaResponse wrapped in AddUncachedEntryCriteria200Response
func ThirdPartyUncachedEntryCriteriaResponseAsAddUncachedEntryCriteria200Response(v *ThirdPartyUncachedEntryCriteriaResponse) AddUncachedEntryCriteria200Response {
	return AddUncachedEntryCriteria200Response{
		ThirdPartyUncachedEntryCriteriaResponse: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddUncachedEntryCriteria200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into DefaultUncachedEntryCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.DefaultUncachedEntryCriteriaResponse)
	if err == nil {
		jsonDefaultUncachedEntryCriteriaResponse, _ := json.Marshal(dst.DefaultUncachedEntryCriteriaResponse)
		if string(jsonDefaultUncachedEntryCriteriaResponse) == "{}" { // empty struct
			dst.DefaultUncachedEntryCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.DefaultUncachedEntryCriteriaResponse = nil
	}

	// try to unmarshal data into FilterBasedUncachedEntryCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.FilterBasedUncachedEntryCriteriaResponse)
	if err == nil {
		jsonFilterBasedUncachedEntryCriteriaResponse, _ := json.Marshal(dst.FilterBasedUncachedEntryCriteriaResponse)
		if string(jsonFilterBasedUncachedEntryCriteriaResponse) == "{}" { // empty struct
			dst.FilterBasedUncachedEntryCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.FilterBasedUncachedEntryCriteriaResponse = nil
	}

	// try to unmarshal data into GroovyScriptedUncachedEntryCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.GroovyScriptedUncachedEntryCriteriaResponse)
	if err == nil {
		jsonGroovyScriptedUncachedEntryCriteriaResponse, _ := json.Marshal(dst.GroovyScriptedUncachedEntryCriteriaResponse)
		if string(jsonGroovyScriptedUncachedEntryCriteriaResponse) == "{}" { // empty struct
			dst.GroovyScriptedUncachedEntryCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.GroovyScriptedUncachedEntryCriteriaResponse = nil
	}

	// try to unmarshal data into LastAccessTimeUncachedEntryCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.LastAccessTimeUncachedEntryCriteriaResponse)
	if err == nil {
		jsonLastAccessTimeUncachedEntryCriteriaResponse, _ := json.Marshal(dst.LastAccessTimeUncachedEntryCriteriaResponse)
		if string(jsonLastAccessTimeUncachedEntryCriteriaResponse) == "{}" { // empty struct
			dst.LastAccessTimeUncachedEntryCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.LastAccessTimeUncachedEntryCriteriaResponse = nil
	}

	// try to unmarshal data into ThirdPartyUncachedEntryCriteriaResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyUncachedEntryCriteriaResponse)
	if err == nil {
		jsonThirdPartyUncachedEntryCriteriaResponse, _ := json.Marshal(dst.ThirdPartyUncachedEntryCriteriaResponse)
		if string(jsonThirdPartyUncachedEntryCriteriaResponse) == "{}" { // empty struct
			dst.ThirdPartyUncachedEntryCriteriaResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyUncachedEntryCriteriaResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.DefaultUncachedEntryCriteriaResponse = nil
		dst.FilterBasedUncachedEntryCriteriaResponse = nil
		dst.GroovyScriptedUncachedEntryCriteriaResponse = nil
		dst.LastAccessTimeUncachedEntryCriteriaResponse = nil
		dst.ThirdPartyUncachedEntryCriteriaResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddUncachedEntryCriteria200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddUncachedEntryCriteria200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddUncachedEntryCriteria200Response) MarshalJSON() ([]byte, error) {
	if src.DefaultUncachedEntryCriteriaResponse != nil {
		return json.Marshal(&src.DefaultUncachedEntryCriteriaResponse)
	}

	if src.FilterBasedUncachedEntryCriteriaResponse != nil {
		return json.Marshal(&src.FilterBasedUncachedEntryCriteriaResponse)
	}

	if src.GroovyScriptedUncachedEntryCriteriaResponse != nil {
		return json.Marshal(&src.GroovyScriptedUncachedEntryCriteriaResponse)
	}

	if src.LastAccessTimeUncachedEntryCriteriaResponse != nil {
		return json.Marshal(&src.LastAccessTimeUncachedEntryCriteriaResponse)
	}

	if src.ThirdPartyUncachedEntryCriteriaResponse != nil {
		return json.Marshal(&src.ThirdPartyUncachedEntryCriteriaResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddUncachedEntryCriteria200Response) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.DefaultUncachedEntryCriteriaResponse != nil {
		return obj.DefaultUncachedEntryCriteriaResponse
	}

	if obj.FilterBasedUncachedEntryCriteriaResponse != nil {
		return obj.FilterBasedUncachedEntryCriteriaResponse
	}

	if obj.GroovyScriptedUncachedEntryCriteriaResponse != nil {
		return obj.GroovyScriptedUncachedEntryCriteriaResponse
	}

	if obj.LastAccessTimeUncachedEntryCriteriaResponse != nil {
		return obj.LastAccessTimeUncachedEntryCriteriaResponse
	}

	if obj.ThirdPartyUncachedEntryCriteriaResponse != nil {
		return obj.ThirdPartyUncachedEntryCriteriaResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddUncachedEntryCriteria200Response struct {
	value *AddUncachedEntryCriteria200Response
	isSet bool
}

func (v NullableAddUncachedEntryCriteria200Response) Get() *AddUncachedEntryCriteria200Response {
	return v.value
}

func (v *NullableAddUncachedEntryCriteria200Response) Set(val *AddUncachedEntryCriteria200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddUncachedEntryCriteria200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddUncachedEntryCriteria200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddUncachedEntryCriteria200Response(val *AddUncachedEntryCriteria200Response) *NullableAddUncachedEntryCriteria200Response {
	return &NullableAddUncachedEntryCriteria200Response{value: val, isSet: true}
}

func (v NullableAddUncachedEntryCriteria200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddUncachedEntryCriteria200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
