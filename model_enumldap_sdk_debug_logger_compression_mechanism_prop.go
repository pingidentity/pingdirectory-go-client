/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumldapSdkDebugLoggerCompressionMechanismProp Specifies the type of compression (if any) to use for log files that are written.
type EnumldapSdkDebugLoggerCompressionMechanismProp string

// List of Enumldap-sdk-debug-logger-compressionMechanismProp
const (
	ENUMLDAPSDKDEBUGLOGGERCOMPRESSIONMECHANISMPROP_NONE EnumldapSdkDebugLoggerCompressionMechanismProp = "none"
	ENUMLDAPSDKDEBUGLOGGERCOMPRESSIONMECHANISMPROP_GZIP EnumldapSdkDebugLoggerCompressionMechanismProp = "gzip"
)

// All allowed values of EnumldapSdkDebugLoggerCompressionMechanismProp enum
var AllowedEnumldapSdkDebugLoggerCompressionMechanismPropEnumValues = []EnumldapSdkDebugLoggerCompressionMechanismProp{
	"none",
	"gzip",
}

func (v *EnumldapSdkDebugLoggerCompressionMechanismProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumldapSdkDebugLoggerCompressionMechanismProp(value)
	for _, existing := range AllowedEnumldapSdkDebugLoggerCompressionMechanismPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumldapSdkDebugLoggerCompressionMechanismProp", value)
}

// NewEnumldapSdkDebugLoggerCompressionMechanismPropFromValue returns a pointer to a valid EnumldapSdkDebugLoggerCompressionMechanismProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumldapSdkDebugLoggerCompressionMechanismPropFromValue(v string) (*EnumldapSdkDebugLoggerCompressionMechanismProp, error) {
	ev := EnumldapSdkDebugLoggerCompressionMechanismProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumldapSdkDebugLoggerCompressionMechanismProp: valid values are %v", v, AllowedEnumldapSdkDebugLoggerCompressionMechanismPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumldapSdkDebugLoggerCompressionMechanismProp) IsValid() bool {
	for _, existing := range AllowedEnumldapSdkDebugLoggerCompressionMechanismPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumldap-sdk-debug-logger-compressionMechanismProp value
func (v EnumldapSdkDebugLoggerCompressionMechanismProp) Ptr() *EnumldapSdkDebugLoggerCompressionMechanismProp {
	return &v
}

type NullableEnumldapSdkDebugLoggerCompressionMechanismProp struct {
	value *EnumldapSdkDebugLoggerCompressionMechanismProp
	isSet bool
}

func (v NullableEnumldapSdkDebugLoggerCompressionMechanismProp) Get() *EnumldapSdkDebugLoggerCompressionMechanismProp {
	return v.value
}

func (v *NullableEnumldapSdkDebugLoggerCompressionMechanismProp) Set(val *EnumldapSdkDebugLoggerCompressionMechanismProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumldapSdkDebugLoggerCompressionMechanismProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumldapSdkDebugLoggerCompressionMechanismProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumldapSdkDebugLoggerCompressionMechanismProp(val *EnumldapSdkDebugLoggerCompressionMechanismProp) *NullableEnumldapSdkDebugLoggerCompressionMechanismProp {
	return &NullableEnumldapSdkDebugLoggerCompressionMechanismProp{value: val, isSet: true}
}

func (v NullableEnumldapSdkDebugLoggerCompressionMechanismProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumldapSdkDebugLoggerCompressionMechanismProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

