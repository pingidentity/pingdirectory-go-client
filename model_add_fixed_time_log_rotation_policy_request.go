/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddFixedTimeLogRotationPolicyRequest struct for AddFixedTimeLogRotationPolicyRequest
type AddFixedTimeLogRotationPolicyRequest struct {
	// Name of the new Log Rotation Policy
	PolicyName string                                    `json:"policyName"`
	Schemas    []EnumfixedTimeLogRotationPolicySchemaUrn `json:"schemas"`
	// Specifies the time of day at which log rotation should occur.
	TimeOfDay []string `json:"timeOfDay"`
	// A description for this Log Rotation Policy
	Description *string `json:"description,omitempty"`
}

// NewAddFixedTimeLogRotationPolicyRequest instantiates a new AddFixedTimeLogRotationPolicyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddFixedTimeLogRotationPolicyRequest(policyName string, schemas []EnumfixedTimeLogRotationPolicySchemaUrn, timeOfDay []string) *AddFixedTimeLogRotationPolicyRequest {
	this := AddFixedTimeLogRotationPolicyRequest{}
	this.PolicyName = policyName
	this.Schemas = schemas
	this.TimeOfDay = timeOfDay
	return &this
}

// NewAddFixedTimeLogRotationPolicyRequestWithDefaults instantiates a new AddFixedTimeLogRotationPolicyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddFixedTimeLogRotationPolicyRequestWithDefaults() *AddFixedTimeLogRotationPolicyRequest {
	this := AddFixedTimeLogRotationPolicyRequest{}
	return &this
}

// GetPolicyName returns the PolicyName field value
func (o *AddFixedTimeLogRotationPolicyRequest) GetPolicyName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PolicyName
}

// GetPolicyNameOk returns a tuple with the PolicyName field value
// and a boolean to check if the value has been set.
func (o *AddFixedTimeLogRotationPolicyRequest) GetPolicyNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PolicyName, true
}

// SetPolicyName sets field value
func (o *AddFixedTimeLogRotationPolicyRequest) SetPolicyName(v string) {
	o.PolicyName = v
}

// GetSchemas returns the Schemas field value
func (o *AddFixedTimeLogRotationPolicyRequest) GetSchemas() []EnumfixedTimeLogRotationPolicySchemaUrn {
	if o == nil {
		var ret []EnumfixedTimeLogRotationPolicySchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *AddFixedTimeLogRotationPolicyRequest) GetSchemasOk() ([]EnumfixedTimeLogRotationPolicySchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *AddFixedTimeLogRotationPolicyRequest) SetSchemas(v []EnumfixedTimeLogRotationPolicySchemaUrn) {
	o.Schemas = v
}

// GetTimeOfDay returns the TimeOfDay field value
func (o *AddFixedTimeLogRotationPolicyRequest) GetTimeOfDay() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.TimeOfDay
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value
// and a boolean to check if the value has been set.
func (o *AddFixedTimeLogRotationPolicyRequest) GetTimeOfDayOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TimeOfDay, true
}

// SetTimeOfDay sets field value
func (o *AddFixedTimeLogRotationPolicyRequest) SetTimeOfDay(v []string) {
	o.TimeOfDay = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *AddFixedTimeLogRotationPolicyRequest) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddFixedTimeLogRotationPolicyRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *AddFixedTimeLogRotationPolicyRequest) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *AddFixedTimeLogRotationPolicyRequest) SetDescription(v string) {
	o.Description = &v
}

func (o AddFixedTimeLogRotationPolicyRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["policyName"] = o.PolicyName
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["timeOfDay"] = o.TimeOfDay
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableAddFixedTimeLogRotationPolicyRequest struct {
	value *AddFixedTimeLogRotationPolicyRequest
	isSet bool
}

func (v NullableAddFixedTimeLogRotationPolicyRequest) Get() *AddFixedTimeLogRotationPolicyRequest {
	return v.value
}

func (v *NullableAddFixedTimeLogRotationPolicyRequest) Set(val *AddFixedTimeLogRotationPolicyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddFixedTimeLogRotationPolicyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddFixedTimeLogRotationPolicyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddFixedTimeLogRotationPolicyRequest(val *AddFixedTimeLogRotationPolicyRequest) *NullableAddFixedTimeLogRotationPolicyRequest {
	return &NullableAddFixedTimeLogRotationPolicyRequest{value: val, isSet: true}
}

func (v NullableAddFixedTimeLogRotationPolicyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddFixedTimeLogRotationPolicyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
