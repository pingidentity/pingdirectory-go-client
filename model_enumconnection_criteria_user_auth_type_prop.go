/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumconnectionCriteriaUserAuthTypeProp Specifies the authentication types for client connections that may be included in this Simple Connection Criteria.
type EnumconnectionCriteriaUserAuthTypeProp string

// List of Enumconnection-criteria-userAuthTypeProp
const (
	ENUMCONNECTIONCRITERIAUSERAUTHTYPEPROP_NONE     EnumconnectionCriteriaUserAuthTypeProp = "none"
	ENUMCONNECTIONCRITERIAUSERAUTHTYPEPROP_SIMPLE   EnumconnectionCriteriaUserAuthTypeProp = "simple"
	ENUMCONNECTIONCRITERIAUSERAUTHTYPEPROP_SASL     EnumconnectionCriteriaUserAuthTypeProp = "sasl"
	ENUMCONNECTIONCRITERIAUSERAUTHTYPEPROP_INTERNAL EnumconnectionCriteriaUserAuthTypeProp = "internal"
)

// All allowed values of EnumconnectionCriteriaUserAuthTypeProp enum
var AllowedEnumconnectionCriteriaUserAuthTypePropEnumValues = []EnumconnectionCriteriaUserAuthTypeProp{
	"none",
	"simple",
	"sasl",
	"internal",
}

func (v *EnumconnectionCriteriaUserAuthTypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumconnectionCriteriaUserAuthTypeProp(value)
	for _, existing := range AllowedEnumconnectionCriteriaUserAuthTypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumconnectionCriteriaUserAuthTypeProp", value)
}

// NewEnumconnectionCriteriaUserAuthTypePropFromValue returns a pointer to a valid EnumconnectionCriteriaUserAuthTypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumconnectionCriteriaUserAuthTypePropFromValue(v string) (*EnumconnectionCriteriaUserAuthTypeProp, error) {
	ev := EnumconnectionCriteriaUserAuthTypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumconnectionCriteriaUserAuthTypeProp: valid values are %v", v, AllowedEnumconnectionCriteriaUserAuthTypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumconnectionCriteriaUserAuthTypeProp) IsValid() bool {
	for _, existing := range AllowedEnumconnectionCriteriaUserAuthTypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumconnection-criteria-userAuthTypeProp value
func (v EnumconnectionCriteriaUserAuthTypeProp) Ptr() *EnumconnectionCriteriaUserAuthTypeProp {
	return &v
}

type NullableEnumconnectionCriteriaUserAuthTypeProp struct {
	value *EnumconnectionCriteriaUserAuthTypeProp
	isSet bool
}

func (v NullableEnumconnectionCriteriaUserAuthTypeProp) Get() *EnumconnectionCriteriaUserAuthTypeProp {
	return v.value
}

func (v *NullableEnumconnectionCriteriaUserAuthTypeProp) Set(val *EnumconnectionCriteriaUserAuthTypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumconnectionCriteriaUserAuthTypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumconnectionCriteriaUserAuthTypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumconnectionCriteriaUserAuthTypeProp(val *EnumconnectionCriteriaUserAuthTypeProp) *NullableEnumconnectionCriteriaUserAuthTypeProp {
	return &NullableEnumconnectionCriteriaUserAuthTypeProp{value: val, isSet: true}
}

func (v NullableEnumconnectionCriteriaUserAuthTypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumconnectionCriteriaUserAuthTypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
