/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumhttpServletExtensionAllowedControlProp Specifies the names of any request controls that should be allowed by the Directory REST API. Any request that contains a critical control not in this list will be rejected. Any non-critical request control which is not supported by the Directory REST API will be removed from the request.
type EnumhttpServletExtensionAllowedControlProp string

// List of Enumhttp-servlet-extension-allowedControlProp
const (
	ASSERTION EnumhttpServletExtensionAllowedControlProp = "assertion"
	ASSURED_REPLICATION EnumhttpServletExtensionAllowedControlProp = "assured-replication"
	EXCLUDE_BRANCH EnumhttpServletExtensionAllowedControlProp = "exclude-branch"
	GENERATE_PASSWORD EnumhttpServletExtensionAllowedControlProp = "generate-password"
	GET_EFFECTIVE_RIGHTS EnumhttpServletExtensionAllowedControlProp = "get-effective-rights"
	IGNORE_NO_USER_MODIFICATION EnumhttpServletExtensionAllowedControlProp = "ignore-no-user-modification"
	INTERMEDIATE_CLIENT EnumhttpServletExtensionAllowedControlProp = "intermediate-client"
	JOIN EnumhttpServletExtensionAllowedControlProp = "join"
	MANAGE_DSA_IT EnumhttpServletExtensionAllowedControlProp = "manage-dsa-it"
	MATCHED_VALUES EnumhttpServletExtensionAllowedControlProp = "matched-values"
	MATCHING_ENTRY_COUNT EnumhttpServletExtensionAllowedControlProp = "matching-entry-count"
	NAME_WITH_ENTRYUUID EnumhttpServletExtensionAllowedControlProp = "name-with-entryuuid"
	NO_OP EnumhttpServletExtensionAllowedControlProp = "no-op"
	OPERATION_PURPOSE EnumhttpServletExtensionAllowedControlProp = "operation-purpose"
	PASSWORD_UPDATE_BEHAVIOR EnumhttpServletExtensionAllowedControlProp = "password-update-behavior"
	PASSWORD_VALIDATION_DETAILS EnumhttpServletExtensionAllowedControlProp = "password-validation-details"
	PERMISSIVE_MODIFY EnumhttpServletExtensionAllowedControlProp = "permissive-modify"
	PERMIT_UNINDEXED_SEARCH EnumhttpServletExtensionAllowedControlProp = "permit-unindexed-search"
	POST_READ EnumhttpServletExtensionAllowedControlProp = "post-read"
	PRE_READ EnumhttpServletExtensionAllowedControlProp = "pre-read"
	PROXIED_AUTHORIZATION_V1 EnumhttpServletExtensionAllowedControlProp = "proxied-authorization-v1"
	PROXIED_AUTHORIZATION_V2 EnumhttpServletExtensionAllowedControlProp = "proxied-authorization-v2"
	PURGE_PASSWORD EnumhttpServletExtensionAllowedControlProp = "purge-password"
	REAL_ATTRIBUTES_ONLY EnumhttpServletExtensionAllowedControlProp = "real-attributes-only"
	REJECT_UNINDEXED_SEARCH EnumhttpServletExtensionAllowedControlProp = "reject-unindexed-search"
	RETIRE_PASSWORD EnumhttpServletExtensionAllowedControlProp = "retire-password"
	SUPPRESS_REFERENTIAL_INTEGRITY EnumhttpServletExtensionAllowedControlProp = "suppress-referential-integrity"
	UNIQUENESS EnumhttpServletExtensionAllowedControlProp = "uniqueness"
	VIRTUAL_ATTRIBUTES_ONLY EnumhttpServletExtensionAllowedControlProp = "virtual-attributes-only"
)

// All allowed values of EnumhttpServletExtensionAllowedControlProp enum
var AllowedEnumhttpServletExtensionAllowedControlPropEnumValues = []EnumhttpServletExtensionAllowedControlProp{
	"assertion",
	"assured-replication",
	"exclude-branch",
	"generate-password",
	"get-effective-rights",
	"ignore-no-user-modification",
	"intermediate-client",
	"join",
	"manage-dsa-it",
	"matched-values",
	"matching-entry-count",
	"name-with-entryuuid",
	"no-op",
	"operation-purpose",
	"password-update-behavior",
	"password-validation-details",
	"permissive-modify",
	"permit-unindexed-search",
	"post-read",
	"pre-read",
	"proxied-authorization-v1",
	"proxied-authorization-v2",
	"purge-password",
	"real-attributes-only",
	"reject-unindexed-search",
	"retire-password",
	"suppress-referential-integrity",
	"uniqueness",
	"virtual-attributes-only",
}

func (v *EnumhttpServletExtensionAllowedControlProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumhttpServletExtensionAllowedControlProp(value)
	for _, existing := range AllowedEnumhttpServletExtensionAllowedControlPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumhttpServletExtensionAllowedControlProp", value)
}

// NewEnumhttpServletExtensionAllowedControlPropFromValue returns a pointer to a valid EnumhttpServletExtensionAllowedControlProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumhttpServletExtensionAllowedControlPropFromValue(v string) (*EnumhttpServletExtensionAllowedControlProp, error) {
	ev := EnumhttpServletExtensionAllowedControlProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumhttpServletExtensionAllowedControlProp: valid values are %v", v, AllowedEnumhttpServletExtensionAllowedControlPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumhttpServletExtensionAllowedControlProp) IsValid() bool {
	for _, existing := range AllowedEnumhttpServletExtensionAllowedControlPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumhttp-servlet-extension-allowedControlProp value
func (v EnumhttpServletExtensionAllowedControlProp) Ptr() *EnumhttpServletExtensionAllowedControlProp {
	return &v
}

type NullableEnumhttpServletExtensionAllowedControlProp struct {
	value *EnumhttpServletExtensionAllowedControlProp
	isSet bool
}

func (v NullableEnumhttpServletExtensionAllowedControlProp) Get() *EnumhttpServletExtensionAllowedControlProp {
	return v.value
}

func (v *NullableEnumhttpServletExtensionAllowedControlProp) Set(val *EnumhttpServletExtensionAllowedControlProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumhttpServletExtensionAllowedControlProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumhttpServletExtensionAllowedControlProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumhttpServletExtensionAllowedControlProp(val *EnumhttpServletExtensionAllowedControlProp) *NullableEnumhttpServletExtensionAllowedControlProp {
	return &NullableEnumhttpServletExtensionAllowedControlProp{value: val, isSet: true}
}

func (v NullableEnumhttpServletExtensionAllowedControlProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumhttpServletExtensionAllowedControlProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

