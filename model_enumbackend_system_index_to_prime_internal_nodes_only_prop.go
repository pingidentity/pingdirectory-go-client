/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumbackendSystemIndexToPrimeInternalNodesOnlyProp Specifies the system index(es) for which internal database nodes only (i.e., the database keys but not values) should be primed when the backend is initialized.
type EnumbackendSystemIndexToPrimeInternalNodesOnlyProp string

// List of Enumbackend-systemIndexToPrimeInternalNodesOnlyProp
const (
	DN2ID EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "dn2id"
	ID2ENTRY EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "id2entry"
	UNCACHED_ID2ENTRY EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "uncached-id2entry"
	ID2CHILDREN EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "id2children"
	ID2SUBTREE EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "id2subtree"
	DN2URI EnumbackendSystemIndexToPrimeInternalNodesOnlyProp = "dn2uri"
)

// All allowed values of EnumbackendSystemIndexToPrimeInternalNodesOnlyProp enum
var AllowedEnumbackendSystemIndexToPrimeInternalNodesOnlyPropEnumValues = []EnumbackendSystemIndexToPrimeInternalNodesOnlyProp{
	"dn2id",
	"id2entry",
	"uncached-id2entry",
	"id2children",
	"id2subtree",
	"dn2uri",
}

func (v *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumbackendSystemIndexToPrimeInternalNodesOnlyProp(value)
	for _, existing := range AllowedEnumbackendSystemIndexToPrimeInternalNodesOnlyPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumbackendSystemIndexToPrimeInternalNodesOnlyProp", value)
}

// NewEnumbackendSystemIndexToPrimeInternalNodesOnlyPropFromValue returns a pointer to a valid EnumbackendSystemIndexToPrimeInternalNodesOnlyProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumbackendSystemIndexToPrimeInternalNodesOnlyPropFromValue(v string) (*EnumbackendSystemIndexToPrimeInternalNodesOnlyProp, error) {
	ev := EnumbackendSystemIndexToPrimeInternalNodesOnlyProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumbackendSystemIndexToPrimeInternalNodesOnlyProp: valid values are %v", v, AllowedEnumbackendSystemIndexToPrimeInternalNodesOnlyPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) IsValid() bool {
	for _, existing := range AllowedEnumbackendSystemIndexToPrimeInternalNodesOnlyPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumbackend-systemIndexToPrimeInternalNodesOnlyProp value
func (v EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) Ptr() *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp {
	return &v
}

type NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp struct {
	value *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp
	isSet bool
}

func (v NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) Get() *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp {
	return v.value
}

func (v *NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) Set(val *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp(val *EnumbackendSystemIndexToPrimeInternalNodesOnlyProp) *NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp {
	return &NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp{value: val, isSet: true}
}

func (v NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumbackendSystemIndexToPrimeInternalNodesOnlyProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

