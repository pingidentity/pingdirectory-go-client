/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ProfilerPluginResponse struct for ProfilerPluginResponse
type ProfilerPluginResponse struct {
	Meta                                          *MetaMeta                                          `json:"meta,omitempty"`
	Urnpingidentityschemasconfigurationmessages20 *MetaUrnPingidentitySchemasConfigurationMessages20 `json:"urn:pingidentity:schemas:configuration:messages:2.0,omitempty"`
	Schemas                                       []EnumprofilerPluginSchemaUrn                      `json:"schemas"`
	// Name of the Plugin
	Id string `json:"id"`
	// Specifies the sample interval in milliseconds to be used when capturing profiling information in the server.
	ProfileSampleInterval string `json:"profileSampleInterval"`
	// Specifies the path to the directory where profile information is to be written. This path may be either an absolute path or a path that is relative to the root of the Directory Server instance.
	ProfileDirectory string `json:"profileDirectory"`
	// Indicates whether the profiler plug-in is to start collecting data automatically when the Directory Server is started.
	EnableProfilingOnStartup bool                         `json:"enableProfilingOnStartup"`
	ProfileAction            *EnumpluginProfileActionProp `json:"profileAction,omitempty"`
	// A description for this Plugin
	Description *string `json:"description,omitempty"`
	// Indicates whether the plug-in is enabled for use.
	Enabled bool `json:"enabled"`
}

// NewProfilerPluginResponse instantiates a new ProfilerPluginResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProfilerPluginResponse(schemas []EnumprofilerPluginSchemaUrn, id string, profileSampleInterval string, profileDirectory string, enableProfilingOnStartup bool, enabled bool) *ProfilerPluginResponse {
	this := ProfilerPluginResponse{}
	this.Schemas = schemas
	this.Id = id
	this.ProfileSampleInterval = profileSampleInterval
	this.ProfileDirectory = profileDirectory
	this.EnableProfilingOnStartup = enableProfilingOnStartup
	this.Enabled = enabled
	return &this
}

// NewProfilerPluginResponseWithDefaults instantiates a new ProfilerPluginResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProfilerPluginResponseWithDefaults() *ProfilerPluginResponse {
	this := ProfilerPluginResponse{}
	return &this
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ProfilerPluginResponse) GetMeta() MetaMeta {
	if o == nil || isNil(o.Meta) {
		var ret MetaMeta
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetMetaOk() (*MetaMeta, bool) {
	if o == nil || isNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ProfilerPluginResponse) HasMeta() bool {
	if o != nil && !isNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given MetaMeta and assigns it to the Meta field.
func (o *ProfilerPluginResponse) SetMeta(v MetaMeta) {
	o.Meta = &v
}

// GetUrnpingidentityschemasconfigurationmessages20 returns the Urnpingidentityschemasconfigurationmessages20 field value if set, zero value otherwise.
func (o *ProfilerPluginResponse) GetUrnpingidentityschemasconfigurationmessages20() MetaUrnPingidentitySchemasConfigurationMessages20 {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		var ret MetaUrnPingidentitySchemasConfigurationMessages20
		return ret
	}
	return *o.Urnpingidentityschemasconfigurationmessages20
}

// GetUrnpingidentityschemasconfigurationmessages20Ok returns a tuple with the Urnpingidentityschemasconfigurationmessages20 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetUrnpingidentityschemasconfigurationmessages20Ok() (*MetaUrnPingidentitySchemasConfigurationMessages20, bool) {
	if o == nil || isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return nil, false
	}
	return o.Urnpingidentityschemasconfigurationmessages20, true
}

// HasUrnpingidentityschemasconfigurationmessages20 returns a boolean if a field has been set.
func (o *ProfilerPluginResponse) HasUrnpingidentityschemasconfigurationmessages20() bool {
	if o != nil && !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		return true
	}

	return false
}

// SetUrnpingidentityschemasconfigurationmessages20 gets a reference to the given MetaUrnPingidentitySchemasConfigurationMessages20 and assigns it to the Urnpingidentityschemasconfigurationmessages20 field.
func (o *ProfilerPluginResponse) SetUrnpingidentityschemasconfigurationmessages20(v MetaUrnPingidentitySchemasConfigurationMessages20) {
	o.Urnpingidentityschemasconfigurationmessages20 = &v
}

// GetSchemas returns the Schemas field value
func (o *ProfilerPluginResponse) GetSchemas() []EnumprofilerPluginSchemaUrn {
	if o == nil {
		var ret []EnumprofilerPluginSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetSchemasOk() ([]EnumprofilerPluginSchemaUrn, bool) {
	if o == nil {
		return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *ProfilerPluginResponse) SetSchemas(v []EnumprofilerPluginSchemaUrn) {
	o.Schemas = v
}

// GetId returns the Id field value
func (o *ProfilerPluginResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ProfilerPluginResponse) SetId(v string) {
	o.Id = v
}

// GetProfileSampleInterval returns the ProfileSampleInterval field value
func (o *ProfilerPluginResponse) GetProfileSampleInterval() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileSampleInterval
}

// GetProfileSampleIntervalOk returns a tuple with the ProfileSampleInterval field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetProfileSampleIntervalOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileSampleInterval, true
}

// SetProfileSampleInterval sets field value
func (o *ProfilerPluginResponse) SetProfileSampleInterval(v string) {
	o.ProfileSampleInterval = v
}

// GetProfileDirectory returns the ProfileDirectory field value
func (o *ProfilerPluginResponse) GetProfileDirectory() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProfileDirectory
}

// GetProfileDirectoryOk returns a tuple with the ProfileDirectory field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetProfileDirectoryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileDirectory, true
}

// SetProfileDirectory sets field value
func (o *ProfilerPluginResponse) SetProfileDirectory(v string) {
	o.ProfileDirectory = v
}

// GetEnableProfilingOnStartup returns the EnableProfilingOnStartup field value
func (o *ProfilerPluginResponse) GetEnableProfilingOnStartup() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EnableProfilingOnStartup
}

// GetEnableProfilingOnStartupOk returns a tuple with the EnableProfilingOnStartup field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetEnableProfilingOnStartupOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EnableProfilingOnStartup, true
}

// SetEnableProfilingOnStartup sets field value
func (o *ProfilerPluginResponse) SetEnableProfilingOnStartup(v bool) {
	o.EnableProfilingOnStartup = v
}

// GetProfileAction returns the ProfileAction field value if set, zero value otherwise.
func (o *ProfilerPluginResponse) GetProfileAction() EnumpluginProfileActionProp {
	if o == nil || isNil(o.ProfileAction) {
		var ret EnumpluginProfileActionProp
		return ret
	}
	return *o.ProfileAction
}

// GetProfileActionOk returns a tuple with the ProfileAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetProfileActionOk() (*EnumpluginProfileActionProp, bool) {
	if o == nil || isNil(o.ProfileAction) {
		return nil, false
	}
	return o.ProfileAction, true
}

// HasProfileAction returns a boolean if a field has been set.
func (o *ProfilerPluginResponse) HasProfileAction() bool {
	if o != nil && !isNil(o.ProfileAction) {
		return true
	}

	return false
}

// SetProfileAction gets a reference to the given EnumpluginProfileActionProp and assigns it to the ProfileAction field.
func (o *ProfilerPluginResponse) SetProfileAction(v EnumpluginProfileActionProp) {
	o.ProfileAction = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ProfilerPluginResponse) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ProfilerPluginResponse) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ProfilerPluginResponse) SetDescription(v string) {
	o.Description = &v
}

// GetEnabled returns the Enabled field value
func (o *ProfilerPluginResponse) GetEnabled() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value
// and a boolean to check if the value has been set.
func (o *ProfilerPluginResponse) GetEnabledOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Enabled, true
}

// SetEnabled sets field value
func (o *ProfilerPluginResponse) SetEnabled(v bool) {
	o.Enabled = v
}

func (o ProfilerPluginResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !isNil(o.Urnpingidentityschemasconfigurationmessages20) {
		toSerialize["urn:pingidentity:schemas:configuration:messages:2.0"] = o.Urnpingidentityschemasconfigurationmessages20
	}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["id"] = o.Id
	}
	if true {
		toSerialize["profileSampleInterval"] = o.ProfileSampleInterval
	}
	if true {
		toSerialize["profileDirectory"] = o.ProfileDirectory
	}
	if true {
		toSerialize["enableProfilingOnStartup"] = o.EnableProfilingOnStartup
	}
	if !isNil(o.ProfileAction) {
		toSerialize["profileAction"] = o.ProfileAction
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["enabled"] = o.Enabled
	}
	return json.Marshal(toSerialize)
}

type NullableProfilerPluginResponse struct {
	value *ProfilerPluginResponse
	isSet bool
}

func (v NullableProfilerPluginResponse) Get() *ProfilerPluginResponse {
	return v.value
}

func (v *NullableProfilerPluginResponse) Set(val *ProfilerPluginResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableProfilerPluginResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableProfilerPluginResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProfilerPluginResponse(val *ProfilerPluginResponse) *NullableProfilerPluginResponse {
	return &NullableProfilerPluginResponse{value: val, isSet: true}
}

func (v NullableProfilerPluginResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProfilerPluginResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
