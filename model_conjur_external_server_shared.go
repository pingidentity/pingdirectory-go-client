/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ConjurExternalServerShared struct for ConjurExternalServerShared
type ConjurExternalServerShared struct {
	Schemas []EnumconjurExternalServerSchemaUrn `json:"schemas"`
	ConjurServerBaseURI []string `json:"conjurServerBaseURI"`
	// The mechanism used to authenticate to the Conjur server.
	ConjurAuthenticationMethod string `json:"conjurAuthenticationMethod"`
	// The name of the account with which the desired secrets are associated.
	ConjurAccountName string `json:"conjurAccountName"`
	// The path to a file containing the information needed to trust the certificate presented by the Conjur servers.
	TrustStoreFile *string `json:"trustStoreFile,omitempty"`
	// The PIN needed to access the contents of the trust store. This is only required if a trust store file is required, and if that trust store requires a PIN to access its contents.
	TrustStorePin *string `json:"trustStorePin,omitempty"`
	// The store type for the specified trust store file. The value should likely be one of \"JKS\", \"PKCS12\", or \"BCFKS\".
	TrustStoreType *string `json:"trustStoreType,omitempty"`
	// A description for this External Server
	Description *string `json:"description,omitempty"`
}

// NewConjurExternalServerShared instantiates a new ConjurExternalServerShared object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConjurExternalServerShared(schemas []EnumconjurExternalServerSchemaUrn, conjurServerBaseURI []string, conjurAuthenticationMethod string, conjurAccountName string) *ConjurExternalServerShared {
	this := ConjurExternalServerShared{}
	this.Schemas = schemas
	this.ConjurServerBaseURI = conjurServerBaseURI
	this.ConjurAuthenticationMethod = conjurAuthenticationMethod
	this.ConjurAccountName = conjurAccountName
	return &this
}

// NewConjurExternalServerSharedWithDefaults instantiates a new ConjurExternalServerShared object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConjurExternalServerSharedWithDefaults() *ConjurExternalServerShared {
	this := ConjurExternalServerShared{}
	return &this
}

// GetSchemas returns the Schemas field value
func (o *ConjurExternalServerShared) GetSchemas() []EnumconjurExternalServerSchemaUrn {
	if o == nil {
		var ret []EnumconjurExternalServerSchemaUrn
		return ret
	}

	return o.Schemas
}

// GetSchemasOk returns a tuple with the Schemas field value
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetSchemasOk() ([]EnumconjurExternalServerSchemaUrn, bool) {
	if o == nil {
    return nil, false
	}
	return o.Schemas, true
}

// SetSchemas sets field value
func (o *ConjurExternalServerShared) SetSchemas(v []EnumconjurExternalServerSchemaUrn) {
	o.Schemas = v
}

// GetConjurServerBaseURI returns the ConjurServerBaseURI field value
func (o *ConjurExternalServerShared) GetConjurServerBaseURI() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ConjurServerBaseURI
}

// GetConjurServerBaseURIOk returns a tuple with the ConjurServerBaseURI field value
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetConjurServerBaseURIOk() ([]string, bool) {
	if o == nil {
    return nil, false
	}
	return o.ConjurServerBaseURI, true
}

// SetConjurServerBaseURI sets field value
func (o *ConjurExternalServerShared) SetConjurServerBaseURI(v []string) {
	o.ConjurServerBaseURI = v
}

// GetConjurAuthenticationMethod returns the ConjurAuthenticationMethod field value
func (o *ConjurExternalServerShared) GetConjurAuthenticationMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConjurAuthenticationMethod
}

// GetConjurAuthenticationMethodOk returns a tuple with the ConjurAuthenticationMethod field value
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetConjurAuthenticationMethodOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConjurAuthenticationMethod, true
}

// SetConjurAuthenticationMethod sets field value
func (o *ConjurExternalServerShared) SetConjurAuthenticationMethod(v string) {
	o.ConjurAuthenticationMethod = v
}

// GetConjurAccountName returns the ConjurAccountName field value
func (o *ConjurExternalServerShared) GetConjurAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConjurAccountName
}

// GetConjurAccountNameOk returns a tuple with the ConjurAccountName field value
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetConjurAccountNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.ConjurAccountName, true
}

// SetConjurAccountName sets field value
func (o *ConjurExternalServerShared) SetConjurAccountName(v string) {
	o.ConjurAccountName = v
}

// GetTrustStoreFile returns the TrustStoreFile field value if set, zero value otherwise.
func (o *ConjurExternalServerShared) GetTrustStoreFile() string {
	if o == nil || isNil(o.TrustStoreFile) {
		var ret string
		return ret
	}
	return *o.TrustStoreFile
}

// GetTrustStoreFileOk returns a tuple with the TrustStoreFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetTrustStoreFileOk() (*string, bool) {
	if o == nil || isNil(o.TrustStoreFile) {
    return nil, false
	}
	return o.TrustStoreFile, true
}

// HasTrustStoreFile returns a boolean if a field has been set.
func (o *ConjurExternalServerShared) HasTrustStoreFile() bool {
	if o != nil && !isNil(o.TrustStoreFile) {
		return true
	}

	return false
}

// SetTrustStoreFile gets a reference to the given string and assigns it to the TrustStoreFile field.
func (o *ConjurExternalServerShared) SetTrustStoreFile(v string) {
	o.TrustStoreFile = &v
}

// GetTrustStorePin returns the TrustStorePin field value if set, zero value otherwise.
func (o *ConjurExternalServerShared) GetTrustStorePin() string {
	if o == nil || isNil(o.TrustStorePin) {
		var ret string
		return ret
	}
	return *o.TrustStorePin
}

// GetTrustStorePinOk returns a tuple with the TrustStorePin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetTrustStorePinOk() (*string, bool) {
	if o == nil || isNil(o.TrustStorePin) {
    return nil, false
	}
	return o.TrustStorePin, true
}

// HasTrustStorePin returns a boolean if a field has been set.
func (o *ConjurExternalServerShared) HasTrustStorePin() bool {
	if o != nil && !isNil(o.TrustStorePin) {
		return true
	}

	return false
}

// SetTrustStorePin gets a reference to the given string and assigns it to the TrustStorePin field.
func (o *ConjurExternalServerShared) SetTrustStorePin(v string) {
	o.TrustStorePin = &v
}

// GetTrustStoreType returns the TrustStoreType field value if set, zero value otherwise.
func (o *ConjurExternalServerShared) GetTrustStoreType() string {
	if o == nil || isNil(o.TrustStoreType) {
		var ret string
		return ret
	}
	return *o.TrustStoreType
}

// GetTrustStoreTypeOk returns a tuple with the TrustStoreType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetTrustStoreTypeOk() (*string, bool) {
	if o == nil || isNil(o.TrustStoreType) {
    return nil, false
	}
	return o.TrustStoreType, true
}

// HasTrustStoreType returns a boolean if a field has been set.
func (o *ConjurExternalServerShared) HasTrustStoreType() bool {
	if o != nil && !isNil(o.TrustStoreType) {
		return true
	}

	return false
}

// SetTrustStoreType gets a reference to the given string and assigns it to the TrustStoreType field.
func (o *ConjurExternalServerShared) SetTrustStoreType(v string) {
	o.TrustStoreType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConjurExternalServerShared) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConjurExternalServerShared) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
    return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConjurExternalServerShared) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConjurExternalServerShared) SetDescription(v string) {
	o.Description = &v
}

func (o ConjurExternalServerShared) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["schemas"] = o.Schemas
	}
	if true {
		toSerialize["conjurServerBaseURI"] = o.ConjurServerBaseURI
	}
	if true {
		toSerialize["conjurAuthenticationMethod"] = o.ConjurAuthenticationMethod
	}
	if true {
		toSerialize["conjurAccountName"] = o.ConjurAccountName
	}
	if !isNil(o.TrustStoreFile) {
		toSerialize["trustStoreFile"] = o.TrustStoreFile
	}
	if !isNil(o.TrustStorePin) {
		toSerialize["trustStorePin"] = o.TrustStorePin
	}
	if !isNil(o.TrustStoreType) {
		toSerialize["trustStoreType"] = o.TrustStoreType
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableConjurExternalServerShared struct {
	value *ConjurExternalServerShared
	isSet bool
}

func (v NullableConjurExternalServerShared) Get() *ConjurExternalServerShared {
	return v.value
}

func (v *NullableConjurExternalServerShared) Set(val *ConjurExternalServerShared) {
	v.value = val
	v.isSet = true
}

func (v NullableConjurExternalServerShared) IsSet() bool {
	return v.isSet
}

func (v *NullableConjurExternalServerShared) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConjurExternalServerShared(val *ConjurExternalServerShared) *NullableConjurExternalServerShared {
	return &NullableConjurExternalServerShared{value: val, isSet: true}
}

func (v NullableConjurExternalServerShared) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConjurExternalServerShared) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


