/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddRandomPasswordGeneratorRequestAllOf struct for AddRandomPasswordGeneratorRequestAllOf
type AddRandomPasswordGeneratorRequestAllOf struct {
	// Name of the new Password Generator
	GeneratorName string `json:"generatorName"`
}

// NewAddRandomPasswordGeneratorRequestAllOf instantiates a new AddRandomPasswordGeneratorRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddRandomPasswordGeneratorRequestAllOf(generatorName string) *AddRandomPasswordGeneratorRequestAllOf {
	this := AddRandomPasswordGeneratorRequestAllOf{}
	this.GeneratorName = generatorName
	return &this
}

// NewAddRandomPasswordGeneratorRequestAllOfWithDefaults instantiates a new AddRandomPasswordGeneratorRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddRandomPasswordGeneratorRequestAllOfWithDefaults() *AddRandomPasswordGeneratorRequestAllOf {
	this := AddRandomPasswordGeneratorRequestAllOf{}
	return &this
}

// GetGeneratorName returns the GeneratorName field value
func (o *AddRandomPasswordGeneratorRequestAllOf) GetGeneratorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GeneratorName
}

// GetGeneratorNameOk returns a tuple with the GeneratorName field value
// and a boolean to check if the value has been set.
func (o *AddRandomPasswordGeneratorRequestAllOf) GetGeneratorNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.GeneratorName, true
}

// SetGeneratorName sets field value
func (o *AddRandomPasswordGeneratorRequestAllOf) SetGeneratorName(v string) {
	o.GeneratorName = v
}

func (o AddRandomPasswordGeneratorRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["generatorName"] = o.GeneratorName
	}
	return json.Marshal(toSerialize)
}

type NullableAddRandomPasswordGeneratorRequestAllOf struct {
	value *AddRandomPasswordGeneratorRequestAllOf
	isSet bool
}

func (v NullableAddRandomPasswordGeneratorRequestAllOf) Get() *AddRandomPasswordGeneratorRequestAllOf {
	return v.value
}

func (v *NullableAddRandomPasswordGeneratorRequestAllOf) Set(val *AddRandomPasswordGeneratorRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddRandomPasswordGeneratorRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddRandomPasswordGeneratorRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddRandomPasswordGeneratorRequestAllOf(val *AddRandomPasswordGeneratorRequestAllOf) *NullableAddRandomPasswordGeneratorRequestAllOf {
	return &NullableAddRandomPasswordGeneratorRequestAllOf{value: val, isSet: true}
}

func (v NullableAddRandomPasswordGeneratorRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddRandomPasswordGeneratorRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


