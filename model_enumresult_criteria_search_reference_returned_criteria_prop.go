/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumresultCriteriaSearchReferenceReturnedCriteriaProp Indicates whether the number of references returned should be considered when determining whether a search operation should be included in this Simple Result Criteria. This will be ignored for all operations other than search.
type EnumresultCriteriaSearchReferenceReturnedCriteriaProp string

// List of Enumresult-criteria-searchReferenceReturnedCriteriaProp
const (
	ENUMRESULTCRITERIASEARCHREFERENCERETURNEDCRITERIAPROP_ANY EnumresultCriteriaSearchReferenceReturnedCriteriaProp = "any"
	ENUMRESULTCRITERIASEARCHREFERENCERETURNEDCRITERIAPROP_EQUAL_TO EnumresultCriteriaSearchReferenceReturnedCriteriaProp = "equal-to"
	ENUMRESULTCRITERIASEARCHREFERENCERETURNEDCRITERIAPROP_NOT_EQUAL_TO EnumresultCriteriaSearchReferenceReturnedCriteriaProp = "not-equal-to"
	ENUMRESULTCRITERIASEARCHREFERENCERETURNEDCRITERIAPROP_LESS_THAN_OR_EQUAL_TO EnumresultCriteriaSearchReferenceReturnedCriteriaProp = "less-than-or-equal-to"
	ENUMRESULTCRITERIASEARCHREFERENCERETURNEDCRITERIAPROP_GREATER_THAN_OR_EQUAL_TO EnumresultCriteriaSearchReferenceReturnedCriteriaProp = "greater-than-or-equal-to"
)

// All allowed values of EnumresultCriteriaSearchReferenceReturnedCriteriaProp enum
var AllowedEnumresultCriteriaSearchReferenceReturnedCriteriaPropEnumValues = []EnumresultCriteriaSearchReferenceReturnedCriteriaProp{
	"any",
	"equal-to",
	"not-equal-to",
	"less-than-or-equal-to",
	"greater-than-or-equal-to",
}

func (v *EnumresultCriteriaSearchReferenceReturnedCriteriaProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumresultCriteriaSearchReferenceReturnedCriteriaProp(value)
	for _, existing := range AllowedEnumresultCriteriaSearchReferenceReturnedCriteriaPropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumresultCriteriaSearchReferenceReturnedCriteriaProp", value)
}

// NewEnumresultCriteriaSearchReferenceReturnedCriteriaPropFromValue returns a pointer to a valid EnumresultCriteriaSearchReferenceReturnedCriteriaProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumresultCriteriaSearchReferenceReturnedCriteriaPropFromValue(v string) (*EnumresultCriteriaSearchReferenceReturnedCriteriaProp, error) {
	ev := EnumresultCriteriaSearchReferenceReturnedCriteriaProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumresultCriteriaSearchReferenceReturnedCriteriaProp: valid values are %v", v, AllowedEnumresultCriteriaSearchReferenceReturnedCriteriaPropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumresultCriteriaSearchReferenceReturnedCriteriaProp) IsValid() bool {
	for _, existing := range AllowedEnumresultCriteriaSearchReferenceReturnedCriteriaPropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumresult-criteria-searchReferenceReturnedCriteriaProp value
func (v EnumresultCriteriaSearchReferenceReturnedCriteriaProp) Ptr() *EnumresultCriteriaSearchReferenceReturnedCriteriaProp {
	return &v
}

type NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp struct {
	value *EnumresultCriteriaSearchReferenceReturnedCriteriaProp
	isSet bool
}

func (v NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) Get() *EnumresultCriteriaSearchReferenceReturnedCriteriaProp {
	return v.value
}

func (v *NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) Set(val *EnumresultCriteriaSearchReferenceReturnedCriteriaProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp(val *EnumresultCriteriaSearchReferenceReturnedCriteriaProp) *NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp {
	return &NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp{value: val, isSet: true}
}

func (v NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumresultCriteriaSearchReferenceReturnedCriteriaProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

