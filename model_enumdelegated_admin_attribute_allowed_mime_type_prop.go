/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// EnumdelegatedAdminAttributeAllowedMIMETypeProp The list of file types allowed to be uploaded. If no types are specified, then all types will be allowed.
type EnumdelegatedAdminAttributeAllowedMIMETypeProp string

// List of Enumdelegated-admin-attribute-allowedMIMETypeProp
const (
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_CER EnumdelegatedAdminAttributeAllowedMIMETypeProp = "cer"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_CRT EnumdelegatedAdminAttributeAllowedMIMETypeProp = "crt"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_DER EnumdelegatedAdminAttributeAllowedMIMETypeProp = "der"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_KEY EnumdelegatedAdminAttributeAllowedMIMETypeProp = "key"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_P7B EnumdelegatedAdminAttributeAllowedMIMETypeProp = "p7b"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_P7C EnumdelegatedAdminAttributeAllowedMIMETypeProp = "p7c"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_P8  EnumdelegatedAdminAttributeAllowedMIMETypeProp = "p8"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_P10 EnumdelegatedAdminAttributeAllowedMIMETypeProp = "p10"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_P12 EnumdelegatedAdminAttributeAllowedMIMETypeProp = "p12"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_PEM EnumdelegatedAdminAttributeAllowedMIMETypeProp = "pem"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_PFX EnumdelegatedAdminAttributeAllowedMIMETypeProp = "pfx"
	ENUMDELEGATEDADMINATTRIBUTEALLOWEDMIMETYPEPROP_SPC EnumdelegatedAdminAttributeAllowedMIMETypeProp = "spc"
)

// All allowed values of EnumdelegatedAdminAttributeAllowedMIMETypeProp enum
var AllowedEnumdelegatedAdminAttributeAllowedMIMETypePropEnumValues = []EnumdelegatedAdminAttributeAllowedMIMETypeProp{
	"cer",
	"crt",
	"der",
	"key",
	"p7b",
	"p7c",
	"p8",
	"p10",
	"p12",
	"pem",
	"pfx",
	"spc",
}

func (v *EnumdelegatedAdminAttributeAllowedMIMETypeProp) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EnumdelegatedAdminAttributeAllowedMIMETypeProp(value)
	for _, existing := range AllowedEnumdelegatedAdminAttributeAllowedMIMETypePropEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EnumdelegatedAdminAttributeAllowedMIMETypeProp", value)
}

// NewEnumdelegatedAdminAttributeAllowedMIMETypePropFromValue returns a pointer to a valid EnumdelegatedAdminAttributeAllowedMIMETypeProp
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEnumdelegatedAdminAttributeAllowedMIMETypePropFromValue(v string) (*EnumdelegatedAdminAttributeAllowedMIMETypeProp, error) {
	ev := EnumdelegatedAdminAttributeAllowedMIMETypeProp(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EnumdelegatedAdminAttributeAllowedMIMETypeProp: valid values are %v", v, AllowedEnumdelegatedAdminAttributeAllowedMIMETypePropEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EnumdelegatedAdminAttributeAllowedMIMETypeProp) IsValid() bool {
	for _, existing := range AllowedEnumdelegatedAdminAttributeAllowedMIMETypePropEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Enumdelegated-admin-attribute-allowedMIMETypeProp value
func (v EnumdelegatedAdminAttributeAllowedMIMETypeProp) Ptr() *EnumdelegatedAdminAttributeAllowedMIMETypeProp {
	return &v
}

type NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp struct {
	value *EnumdelegatedAdminAttributeAllowedMIMETypeProp
	isSet bool
}

func (v NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) Get() *EnumdelegatedAdminAttributeAllowedMIMETypeProp {
	return v.value
}

func (v *NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) Set(val *EnumdelegatedAdminAttributeAllowedMIMETypeProp) {
	v.value = val
	v.isSet = true
}

func (v NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) IsSet() bool {
	return v.isSet
}

func (v *NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnumdelegatedAdminAttributeAllowedMIMETypeProp(val *EnumdelegatedAdminAttributeAllowedMIMETypeProp) *NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp {
	return &NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp{value: val, isSet: true}
}

func (v NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnumdelegatedAdminAttributeAllowedMIMETypeProp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
