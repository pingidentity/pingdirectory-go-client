/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddDelegatedAdminRightsRequestAllOf struct for AddDelegatedAdminRightsRequestAllOf
type AddDelegatedAdminRightsRequestAllOf struct {
	// Name of the new Delegated Admin Rights
	RightsName string `json:"rightsName"`
}

// NewAddDelegatedAdminRightsRequestAllOf instantiates a new AddDelegatedAdminRightsRequestAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddDelegatedAdminRightsRequestAllOf(rightsName string) *AddDelegatedAdminRightsRequestAllOf {
	this := AddDelegatedAdminRightsRequestAllOf{}
	this.RightsName = rightsName
	return &this
}

// NewAddDelegatedAdminRightsRequestAllOfWithDefaults instantiates a new AddDelegatedAdminRightsRequestAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddDelegatedAdminRightsRequestAllOfWithDefaults() *AddDelegatedAdminRightsRequestAllOf {
	this := AddDelegatedAdminRightsRequestAllOf{}
	return &this
}

// GetRightsName returns the RightsName field value
func (o *AddDelegatedAdminRightsRequestAllOf) GetRightsName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RightsName
}

// GetRightsNameOk returns a tuple with the RightsName field value
// and a boolean to check if the value has been set.
func (o *AddDelegatedAdminRightsRequestAllOf) GetRightsNameOk() (*string, bool) {
	if o == nil {
    return nil, false
	}
	return &o.RightsName, true
}

// SetRightsName sets field value
func (o *AddDelegatedAdminRightsRequestAllOf) SetRightsName(v string) {
	o.RightsName = v
}

func (o AddDelegatedAdminRightsRequestAllOf) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["rightsName"] = o.RightsName
	}
	return json.Marshal(toSerialize)
}

type NullableAddDelegatedAdminRightsRequestAllOf struct {
	value *AddDelegatedAdminRightsRequestAllOf
	isSet bool
}

func (v NullableAddDelegatedAdminRightsRequestAllOf) Get() *AddDelegatedAdminRightsRequestAllOf {
	return v.value
}

func (v *NullableAddDelegatedAdminRightsRequestAllOf) Set(val *AddDelegatedAdminRightsRequestAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddDelegatedAdminRightsRequestAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddDelegatedAdminRightsRequestAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddDelegatedAdminRightsRequestAllOf(val *AddDelegatedAdminRightsRequestAllOf) *NullableAddDelegatedAdminRightsRequestAllOf {
	return &NullableAddDelegatedAdminRightsRequestAllOf{value: val, isSet: true}
}

func (v NullableAddDelegatedAdminRightsRequestAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddDelegatedAdminRightsRequestAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


