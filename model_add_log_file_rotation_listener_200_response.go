/*
PingData Config - OpenAPI 3.0

This is the PingData Configuration API

API version: 0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// AddLogFileRotationListener200Response - struct for AddLogFileRotationListener200Response
type AddLogFileRotationListener200Response struct {
	CopyLogFileRotationListenerResponse *CopyLogFileRotationListenerResponse
	SummarizeLogFileRotationListenerResponse *SummarizeLogFileRotationListenerResponse
	ThirdPartyLogFileRotationListenerResponse *ThirdPartyLogFileRotationListenerResponse
}

// CopyLogFileRotationListenerResponseAsAddLogFileRotationListener200Response is a convenience function that returns CopyLogFileRotationListenerResponse wrapped in AddLogFileRotationListener200Response
func CopyLogFileRotationListenerResponseAsAddLogFileRotationListener200Response(v *CopyLogFileRotationListenerResponse) AddLogFileRotationListener200Response {
	return AddLogFileRotationListener200Response{
		CopyLogFileRotationListenerResponse: v,
	}
}

// SummarizeLogFileRotationListenerResponseAsAddLogFileRotationListener200Response is a convenience function that returns SummarizeLogFileRotationListenerResponse wrapped in AddLogFileRotationListener200Response
func SummarizeLogFileRotationListenerResponseAsAddLogFileRotationListener200Response(v *SummarizeLogFileRotationListenerResponse) AddLogFileRotationListener200Response {
	return AddLogFileRotationListener200Response{
		SummarizeLogFileRotationListenerResponse: v,
	}
}

// ThirdPartyLogFileRotationListenerResponseAsAddLogFileRotationListener200Response is a convenience function that returns ThirdPartyLogFileRotationListenerResponse wrapped in AddLogFileRotationListener200Response
func ThirdPartyLogFileRotationListenerResponseAsAddLogFileRotationListener200Response(v *ThirdPartyLogFileRotationListenerResponse) AddLogFileRotationListener200Response {
	return AddLogFileRotationListener200Response{
		ThirdPartyLogFileRotationListenerResponse: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AddLogFileRotationListener200Response) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CopyLogFileRotationListenerResponse
	err = newStrictDecoder(data).Decode(&dst.CopyLogFileRotationListenerResponse)
	if err == nil {
		jsonCopyLogFileRotationListenerResponse, _ := json.Marshal(dst.CopyLogFileRotationListenerResponse)
		if string(jsonCopyLogFileRotationListenerResponse) == "{}" { // empty struct
			dst.CopyLogFileRotationListenerResponse = nil
		} else {
			match++
		}
	} else {
		dst.CopyLogFileRotationListenerResponse = nil
	}

	// try to unmarshal data into SummarizeLogFileRotationListenerResponse
	err = newStrictDecoder(data).Decode(&dst.SummarizeLogFileRotationListenerResponse)
	if err == nil {
		jsonSummarizeLogFileRotationListenerResponse, _ := json.Marshal(dst.SummarizeLogFileRotationListenerResponse)
		if string(jsonSummarizeLogFileRotationListenerResponse) == "{}" { // empty struct
			dst.SummarizeLogFileRotationListenerResponse = nil
		} else {
			match++
		}
	} else {
		dst.SummarizeLogFileRotationListenerResponse = nil
	}

	// try to unmarshal data into ThirdPartyLogFileRotationListenerResponse
	err = newStrictDecoder(data).Decode(&dst.ThirdPartyLogFileRotationListenerResponse)
	if err == nil {
		jsonThirdPartyLogFileRotationListenerResponse, _ := json.Marshal(dst.ThirdPartyLogFileRotationListenerResponse)
		if string(jsonThirdPartyLogFileRotationListenerResponse) == "{}" { // empty struct
			dst.ThirdPartyLogFileRotationListenerResponse = nil
		} else {
			match++
		}
	} else {
		dst.ThirdPartyLogFileRotationListenerResponse = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CopyLogFileRotationListenerResponse = nil
		dst.SummarizeLogFileRotationListenerResponse = nil
		dst.ThirdPartyLogFileRotationListenerResponse = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AddLogFileRotationListener200Response)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AddLogFileRotationListener200Response)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AddLogFileRotationListener200Response) MarshalJSON() ([]byte, error) {
	if src.CopyLogFileRotationListenerResponse != nil {
		return json.Marshal(&src.CopyLogFileRotationListenerResponse)
	}

	if src.SummarizeLogFileRotationListenerResponse != nil {
		return json.Marshal(&src.SummarizeLogFileRotationListenerResponse)
	}

	if src.ThirdPartyLogFileRotationListenerResponse != nil {
		return json.Marshal(&src.ThirdPartyLogFileRotationListenerResponse)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AddLogFileRotationListener200Response) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CopyLogFileRotationListenerResponse != nil {
		return obj.CopyLogFileRotationListenerResponse
	}

	if obj.SummarizeLogFileRotationListenerResponse != nil {
		return obj.SummarizeLogFileRotationListenerResponse
	}

	if obj.ThirdPartyLogFileRotationListenerResponse != nil {
		return obj.ThirdPartyLogFileRotationListenerResponse
	}

	// all schemas are nil
	return nil
}

type NullableAddLogFileRotationListener200Response struct {
	value *AddLogFileRotationListener200Response
	isSet bool
}

func (v NullableAddLogFileRotationListener200Response) Get() *AddLogFileRotationListener200Response {
	return v.value
}

func (v *NullableAddLogFileRotationListener200Response) Set(val *AddLogFileRotationListener200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableAddLogFileRotationListener200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableAddLogFileRotationListener200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddLogFileRotationListener200Response(val *AddLogFileRotationListener200Response) *NullableAddLogFileRotationListener200Response {
	return &NullableAddLogFileRotationListener200Response{value: val, isSet: true}
}

func (v NullableAddLogFileRotationListener200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddLogFileRotationListener200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


